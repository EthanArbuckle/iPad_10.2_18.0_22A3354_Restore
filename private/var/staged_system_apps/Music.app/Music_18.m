uint64_t sub_1009CDA4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3F7C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D3F78 + dword_1011D3F78))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CDAD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, (uint64_t)&unk_1010EB5D0, a1);
}

uint64_t sub_1009CDB0C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D3F8C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D3F88 + dword_1011D3F88))(v0 + 16);
}

uint64_t sub_1009CDB68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3F9C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D3F98 + dword_1011D3F98))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CDBF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, (uint64_t)&unk_1010EB698, a1);
}

uint64_t sub_1009CDC28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D3FAC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D3FA8 + dword_1011D3FA8))(v0 + 16);
}

uint64_t sub_1009CDC84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3FBC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D3FB8 + dword_1011D3FB8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1009CDD08(_QWORD *a1, _QWORD *a2)
{
  _s13InsertCommandV8LocationOwtk(a2, a1);
  return a2;
}

id *sub_1009CDD44(id *a1)
{
  sub_100823690(*a1);
  return a1;
}

uint64_t sub_1009CDD6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 128);
  sub_100823690(*(id *)a1);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

double sub_1009CDE04@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CA2F4(v1 + 16, a1);
}

uint64_t sub_1009CDE10()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  _OWORD v7[5];
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  v4 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 128);
  v10 = *(_OWORD *)(v0 + 112);
  v11 = v5;
  v12 = *(_QWORD *)(v0 + 144);
  v8 = v4;
  v9 = v3;
  return v4(v7);
}

uint64_t sub_1009CDE70()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[16]);
  swift_release(v0[18]);
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1009CDED4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D3FD4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D3FD0 + dword_1011D3FD0))(v0 + 16);
}

uint64_t sub_1009CDF2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 128);
  sub_100149434(*(id *)a1);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1009CDFC0()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_1009CE02C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D3FE4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D3FE0 + dword_1011D3FE0))(a1, v4, v5, v1 + 32);
}

uint64_t sub_1009CE0AC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1009CE0F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64) + v2;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 104));
  v5 = v3 + 7;
  if (*(_QWORD *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + 144, v4);
    v6 = *(unsigned __int8 *)(v0 + 192);
    if (v6 != 255)
      sub_100064AA4(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
    if (*(_QWORD *)(v0 + 200))
      swift_release();
  }
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v2;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v10 + *(int *)(v11 + 24);
      v13 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + v7))
    swift_release();
  return swift_deallocObject(v0, v7 + 16);
}

void sub_1009CE2F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1009C3B6C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *v3, v3[1]);
}

uint64_t sub_1009CE350()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 136));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 184));
  swift_release();
  v4 = v0 + v2;
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (*(_QWORD *)(v4 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v7 = v4 + *(int *)(v5 + 20);
    v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v3 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v3));
  v12 = v0 + v11;
  if (*(_QWORD *)(v0 + v11 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v11, v6);
    v13 = *(unsigned __int8 *)(v12 + 48);
    if (v13 != 255)
      sub_100064AA4(*(id *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), v13);
    if (*(_QWORD *)(v12 + 56))
      swift_release();
  }
  return swift_deallocObject(v0, v11 + 72);
}

uint64_t sub_1009CE580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1009C2B58(v0 + 16, *(_BYTE *)(v0 + 128), (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1009CE5E4()
{
  return sub_1009D03B8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CE5F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009CE61C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  v3 = swift_allocObject(&unk_1010EB990, 153, 7);
  *a1 = v3;
  return sub_10099D048(v1 + 16, v3 + 16);
}

uint64_t sub_1009CE674()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 216);
}

uint64_t sub_1009CE6E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

uint64_t sub_1009CE708()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D400C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_1009BD5F4(v0 + 16);
}

uint64_t sub_1009CE758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, (uint64_t)&unk_1010EB940, a1);
}

uint64_t sub_1009CE790()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D401C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D4018 + dword_1011D4018))(v0 + 16);
}

uint64_t sub_1009CE7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D402C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4028 + dword_1011D4028))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CE870()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 232);
}

uint64_t sub_1009CE8E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D403C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D4038 + dword_1011D4038))(a1);
}

uint64_t sub_1009CE964()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 153);
}

uint64_t sub_1009CE9B8()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CE9C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CAFF8((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, (uint64_t)&unk_1010EBA58, a1);
}

uint64_t sub_1009CE9F8()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEA0C()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEA1C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D404C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1011D4048 + dword_1011D4048))((_OWORD *)(v0 + 16));
}

uint64_t sub_1009CEA74()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEA84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D405C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4058 + dword_1011D4058))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CEB04()
{
  return sub_1009D03B8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEB14()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEB24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CAFF8((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, (uint64_t)&unk_1010EBB20, a1);
}

uint64_t sub_1009CEB54()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEB64()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  uint64_t v6;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v1;
  v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  v14 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v12 = *(_OWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v13 = v5;
  v9 = v3;
  v10 = v4;
  v11 = v6;
  return v4(v8);
}

uint64_t sub_1009CEBC4()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CEBD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D406C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1011D4068 + dword_1011D4068))((_OWORD *)(v0 + 16));
}

_QWORD *sub_1009CEC2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1009CECB4()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CECC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D407C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4078 + dword_1011D4078))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CED44()
{
  return sub_1009D03B8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009CED58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, (uint64_t)&unk_1010EBBE8, a1);
}

uint64_t sub_1009CED90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D408C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D4088 + dword_1011D4088))(v0 + 16);
}

uint64_t sub_1009CEDEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D409C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4098 + dword_1011D4098))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CEE74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, (uint64_t)&unk_1010EBCB0, a1);
}

uint64_t sub_1009CEEAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D40AC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D40A8 + dword_1011D40A8))(v0 + 16);
}

uint64_t sub_1009CEF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D40BC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D40B8 + dword_1011D40B8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CEF94()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (((v3 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + 23;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
  v8 = v0 + v2;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v19 = v6 + 23;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
  }
  v13 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v3 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v3));
  swift_release();

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v5));
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + v13 + 8);
  if (v14 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + v13), v14);
  return swift_deallocObject(v0, v13 + 16);
}

uint64_t sub_1009CF1B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_1009C11A0(v0 + 16, v0 + 56, v0 + v2, (_QWORD *)(v0 + v3), *(void (**)(char *, char *, uint64_t))(v0 + v4), *(_QWORD *)(v0 + v5), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1009CF254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for PlaylistContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v8 + *(int *)(v1 + 20);
  v11 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  v12 = v0 + v6;
  v13 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v0 + v6, 1, v13))
  {
    if (*(_QWORD *)(v12 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v14 = v12 + *(int *)(v13 + 20);
    v15 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v20 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v14 + *(int *)(v15 + 24);
      v17 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v20;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v6 + v7);
}

_QWORD *sub_1009CF45C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8) + 80);
  return sub_1009C0D5C(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_1009CF4D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009CF50C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
  v4 = v0 + v2;
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(_QWORD *)(v4 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 24);
      v9 = type metadata accessor for URL(0);
      v11 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v2 + v3);
}

_QWORD *sub_1009CF69C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8) + 80);
  return sub_1009C0B08((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56), v0 + ((v1 + 96) & ~v1));
}

uint64_t sub_1009CF6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, (uint64_t)&unk_1010EBE18, a1);
}

uint64_t sub_1009CF710()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D40E4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D40E0 + dword_1011D40E0))(v0 + 16);
}

uint64_t sub_1009CF76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D40F4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D40F0 + dword_1011D40F0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CF7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009CF850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1009CF90C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for Playlist.Entry(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v2;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v2, 1, v9))
  {
    v19 = v7;
    v20 = v3;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v3 = v20;
  }
  v13 = (v2 + v3 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v4);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009CFAD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, (uint64_t)&unk_1010EBF58, a1);
}

uint64_t sub_1009CFB10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D4104);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D4100 + dword_1011D4100))(v0 + 16);
}

uint64_t sub_1009CFB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D4114);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4110 + dword_1011D4110))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009CFBF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 96);
  if (v4 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + 88), v4);
  v5 = v0 + v2;
  v6 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v2, 1, v6))
  {
    if (*(_QWORD *)(v5 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 24);
      v10 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 40;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v12);
}

void sub_1009CFDC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1009C1A58((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1009CFE2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, (uint64_t)&unk_1010EC048, a1);
}

uint64_t sub_1009CFE64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D4124);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D4120 + dword_1011D4120))(v0 + 16);
}

uint64_t sub_1009CFEC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D4134);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4130 + dword_1011D4130))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1009CFF44(_QWORD *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[1];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[7];
  v8 = a1[10];
  v9 = a1[13];
  swift_release(a1[15]);
  swift_release(v9);
  swift_release(v8);
  a2(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  return a1;
}

uint64_t sub_1009CFFD0()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1009CFFE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CA074((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1009CFFEC()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1009D0000()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1009D0014()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D4154);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1011D4150 + dword_1011D4150))((_OWORD *)(v0 + 16));
}

uint64_t sub_1009D006C()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1009D0080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D4164);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4160 + dword_1011D4160))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009D0100()
{
  return sub_1009D03B8((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1009D0114()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009D0128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009C9DEC((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1009D0130()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009D0144()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009D0158(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  swift_release(v2[12]);
  swift_release(v2[15]);
  swift_release(v2[17]);
  return swift_deallocObject(v2, 144, 7);
}

uint64_t sub_1009D01BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D4174);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_1011D4170 + dword_1011D4170))((_OWORD *)(v0 + 16));
}

_QWORD *sub_1009D0214(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_1009D029C()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009D02B0(void (*a1)(_QWORD, __n128), void (*a2)(_QWORD))
{
  _QWORD *v2;
  __n128 v5;

  v5 = swift_unknownObjectRelease(v2[2]);
  a1(v2[5], v5);
  swift_release(v2[7]);
  swift_release(v2[9]);
  a2(v2[11]);
  swift_release(v2[14]);
  swift_release(v2[17]);
  swift_release(v2[19]);
  return swift_deallocObject(v2, 160, 7);
}

uint64_t sub_1009D0324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D4184);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D4180 + dword_1011D4180))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009D03A4()
{
  return sub_1009D03B8((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1009D03B8(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  return swift_deallocObject(v2, 80, 7);
}

uint64_t sub_1009D0408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1009CBC5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, (uint64_t)&unk_1010EC2A0, a1);
}

uint64_t sub_1009D0440()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1009D048C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D4194);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t))((char *)&dword_1011D4190 + dword_1011D4190))(v0 + 16);
}

_QWORD *sub_1009D04E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[13];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t sub_1009D055C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1009D05B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D41A4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D41A0 + dword_1011D41A0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1009D0634()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1009D066C()
{
  char *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D3E48) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 79) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*((_QWORD *)v0 + 5))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)v0 + 2);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)v0 + 7);
  v8 = &v0[v2];
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*((_QWORD *)v8 + 1) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = &v8[*(int *)(v9 + 20)];
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = &v10[*(int *)(v11 + 24)];
      v12 = type metadata accessor for URL(0);
      v25 = *(_QWORD *)(v12 - 8);
      v26 = v12;
      if (!(*(unsigned int (**)(char *, uint64_t))(v25 + 48))(v27, 1))
        (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v13 = type metadata accessor for PlaylistContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(&v0[v5], 1, v13))
  {
    v14 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(&v0[v5], v14);
    v15 = &v0[v5 + *(int *)(v13 + 20)];
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v0[v6]);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v0[v7]);
  v18 = &v0[v28];
  if (*(_QWORD *)&v0[v28 + 56] != 1)
  {
    swift_unknownObjectWeakDestroy(&v0[v28], v17);
    v19 = v18[48];
    if (v19 != 255)
      sub_100064AA4(*((id *)v18 + 1), *((_QWORD *)v18 + 2), *((_QWORD *)v18 + 3), *((_QWORD *)v18 + 4), *((_QWORD *)v18 + 5), v19);
    if (*((_QWORD *)v18 + 7))
      swift_release();
  }
  v20 = (((((v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)&v0[v29 + 24])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v0[v29]);

  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)&v0[v20 + 8];
  if (v21 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)&v0[v20], v21);
  v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 40;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v0[v22]);
  return swift_deallocObject(v0, v23);
}

void sub_1009D0A08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D3E48) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1009BFDF4(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v5), *(_QWORD *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void **)(v0 + v12), *(_QWORD *)(v0 + v13), *(_QWORD *)(v0 + v13 + 8), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1009D0B28@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D4238, &qword_1011D4500, (uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t sub_1009D0B44@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D44F0, &qword_1011D44F8, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t sub_1009D0B60@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = sub_100007E8C(a1);
  v9 = sub_1009D69D8(a2, a1);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v17, v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_1009D0C70@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D44E0, &qword_1011D44E8, (uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_1009D0C8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D44D0, &qword_1011D44D8, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_1009D0CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D44C0, &qword_1011D44C8, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_1009D0CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D44B0, &qword_1011D44B8, (uint64_t (*)(_QWORD))&type metadata accessor for Song, a1);
}

uint64_t sub_1009D0CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D4490, &qword_1011D4498, (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_1009D0CFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D4480, &qword_1011D4488, (uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_1009D0D18@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D4470, &qword_1011D4478, (uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t sub_1009D0D34@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D4460, &qword_1011D4468, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_1009D0D50@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D4450, &qword_1011D4458, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_1009D0D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D0B60(&qword_1011D44A0, &qword_1011D44A8, (uint64_t (*)(_QWORD))&type metadata accessor for Station, a1);
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void (*v20)(__n128);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _OWORD *v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  _OWORD v50[2];
  __int128 v51;

  v48 = a9;
  v49 = a8;
  v41 = a7;
  v43 = a2;
  v44 = a6;
  v46 = a3;
  v47 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(a1);
  v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - v15;
  v18 = __chkstk_darwin(v17);
  v45 = (uint64_t)&v40 - v19;
  v20 = *(void (**)(__n128))(v12 + 16);
  v20(v18);
  ((void (*)(char *, char *, uint64_t))v20)(v16, a1, a5);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 56) & ~v21;
  v40 = v21 | 7;
  v23 = (char *)swift_allocObject(&unk_1010EC528, v22 + v13, v21 | 7);
  v24 = v44;
  *((_QWORD *)v23 + 2) = a5;
  *((_QWORD *)v23 + 3) = v24;
  v25 = v49;
  *((_QWORD *)v23 + 4) = a7;
  *((_QWORD *)v23 + 5) = v25;
  *((_QWORD *)v23 + 6) = v43;
  v26 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v26(&v23[v22], v16, a5);
  v27 = v42;
  v26(v42, a1, a5);
  v28 = (v21 + 48) & ~v21;
  v29 = v24;
  v30 = *(_QWORD *)(v24 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v28 + v13 + v31) & ~v31;
  v33 = (char *)swift_allocObject(&unk_1010EC550, v32 + *(_QWORD *)(v30 + 64), v40 | v31);
  *((_QWORD *)v33 + 2) = a5;
  *((_QWORD *)v33 + 3) = v29;
  v34 = v29;
  v35 = v41;
  v36 = v49;
  *((_QWORD *)v33 + 4) = v41;
  *((_QWORD *)v33 + 5) = v36;
  v26(&v33[v28], v27, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(&v33[v32], v46, v34);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v45, (uint64_t)sub_1009D3EC8, (uint64_t)v23, (uint64_t)&unk_1011D41E8, (uint64_t)v33, v47, a5, v35, v50);
  v37 = v50[1];
  v38 = v48;
  *v48 = v50[0];
  v38[1] = v37;
  result = *(double *)&v51;
  v38[2] = v51;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 4, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D41F0, (uint64_t)&unk_1011D41F8, a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void (*v21)(__n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  double result;
  __int128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;

  v42 = a8;
  v43 = a7;
  v40 = a2;
  v41 = a3;
  v38 = a1;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(a1);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v38 - v16;
  v19 = __chkstk_darwin(v18);
  v39 = (uint64_t)&v38 - v20;
  v21 = *(void (**)(__n128))(v12 + 16);
  v21(v19);
  ((void (*)(char *, char *, uint64_t))v21)(v17, a1, a4);
  v22 = *(unsigned __int8 *)(v12 + 80);
  v23 = (v22 + 48) & ~v22;
  v24 = v23 + v13;
  v25 = v22 | 7;
  v26 = (char *)swift_allocObject(&unk_1010EC578, v23 + v13, v22 | 7);
  *((_QWORD *)v26 + 2) = a4;
  *((_QWORD *)v26 + 3) = a5;
  v27 = v43;
  *((_QWORD *)v26 + 4) = a6;
  *((_QWORD *)v26 + 5) = v27;
  v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v28(&v26[v23], v17, a4);
  v28(v14, v38, a4);
  v29 = *(_QWORD *)(a5 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v24 + v30) & ~v30;
  v32 = (char *)swift_allocObject(&unk_1010EC5A0, v31 + *(_QWORD *)(v29 + 64), v25 | v30);
  *((_QWORD *)v32 + 2) = a4;
  *((_QWORD *)v32 + 3) = a5;
  v33 = v43;
  *((_QWORD *)v32 + 4) = a6;
  *((_QWORD *)v32 + 5) = v33;
  v28(&v32[v23], v14, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v32[v31], v40, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v39, 0, 0, (uint64_t)sub_1009D48EC, (uint64_t)v26, (uint64_t)&unk_1011D4208, (uint64_t)v32, v41, v44, a4, a6);
  v34 = v44[1];
  v35 = v42;
  *v42 = v44[0];
  v35[1] = v34;
  result = *(double *)&v45;
  v37 = v46;
  v35[2] = v45;
  v35[3] = v37;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1009D2D9C(a1, 17, (uint64_t)sub_1009D6A18, (uint64_t)&unk_1011D4210, (uint64_t)&unk_1011D4218, a2).n128_u64[0];
  return result;
}

uint64_t sub_1009D11BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D4F98(a1, 17, (uint64_t)sub_1009D6A18, (uint64_t)&unk_1011D4210, (uint64_t)&unk_1011D4218, a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_1010EC5C8, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_100065228(a8, v21 + v17, &qword_1011D2EB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1011D4228;
  a9[7] = v21;
  return result;
}

uint64_t sub_1009D12E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D1394, 0, 0);
}

uint64_t sub_1009D1394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1002ED50C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D1558, v19, v20);
  }
}

uint64_t sub_1009D1558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 41, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D6A2C, 0, 0);
}

unint64_t sub_1009D1628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;

  v4 = sub_100007E8C(&qword_1011D3010);
  __chkstk_darwin(v4);
  v63 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D3018);
  __chkstk_darwin(v8);
  v65 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v64 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D3008);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v16);
  v60 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v57 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v57 - v22;
  v24 = type metadata accessor for Track(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v66 = a1;
  v29(v23, a1, a2, v26);
  v30 = swift_dynamicCast(v14, v23, a2, v24, 6);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if ((v30 & 1) != 0)
  {
    v31(v14, 0, 1, v24);
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v28, v14, v24);
    Track.albumTitle.getter(v32);
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    v35 = swift_bridgeObjectRelease();
    if (v34)
      return 0;
  }
  else
  {
    v31(v14, 1, 1, v24);
    sub_10004FF60((uint64_t)v14, &qword_1011D3008);
  }
  v36 = v66;
  v29(v20, v66, a2, v35);
  v37 = (uint64_t)v65;
  v38 = swift_dynamicCast(v65, v20, a2, v10, 6);
  v39 = v64;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
  if ((v38 & 1) == 0)
  {
    v40(v37, 1, 1, v10);
    sub_10004FF60(v37, &qword_1011D3018);
    goto LABEL_9;
  }
  v40(v37, 0, 1, v10);
  v41 = v59;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 32))(v59, v37, v10);
  Song.albumTitle.getter(v42);
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v10);
  v45 = swift_bridgeObjectRelease();
  if (v44)
    return 0;
LABEL_9:
  v46 = v60;
  v29(v60, v36, a2, v45);
  v48 = v62;
  v47 = (uint64_t)v63;
  v49 = swift_dynamicCast(v63, v46, a2, v62, 6);
  v50 = v61;
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if ((v49 & 1) != 0)
  {
    v51(v47, 0, 1, v48);
    v52 = v58;
    v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 32))(v58, v47, v48);
    MusicVideo.albumTitle.getter(v53);
    v55 = v54;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v48);
    swift_bridgeObjectRelease();
    if (v55)
      return 0;
  }
  else
  {
    v51(v47, 1, 1, v48);
    sub_10004FF60(v47, &qword_1011D3010);
  }
  return 0xD000000000000010;
}

uint64_t sub_1009D1A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_100007E8C(&qword_1011D3010);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D3018);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011D3008);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D1C04, 0, 0);
}

uint64_t sub_1009D1C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 1);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_1009D1FFC;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_10004FF60(v20, &qword_1011D3008);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 1);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_1009D2064;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_10004FF60(v39, &qword_1011D3018);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 1);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_1009D20CC;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_10004FF60(v58, &qword_1011D3010);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D1FFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_10005B748(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1009D6A38, 0, 0);
}

uint64_t sub_1009D2064()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_10005B748(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1009D6A3C, 0, 0);
}

uint64_t sub_1009D20CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_10005B748(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1009D6A34, 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return sub_1009B90F8;
}

id sub_1009D2170()
{
  return sub_1009D6114();
}

uint64_t sub_1009D2190(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  if (a1)
    return sub_1009D21E4() & 1;
  else
    return 1;
}

uint64_t sub_1009D21E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v25[15];

  v0 = type metadata accessor for MusicPropertySource(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v25[-1] - v6;
  v8 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter(v5);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  if ((v8 & 1) != 0)
  {
    v10 = enum case for MusicPropertySource.library(_:);
    v9(v7, enum case for MusicPropertySource.library(_:), v0);
  }
  else
  {
    v9(v7, enum case for MusicPropertySource.catalog(_:), v0);
    v10 = enum case for MusicPropertySource.library(_:);
  }
  v9(v4, v10, v0);
  v11 = static MusicPropertySource.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v7, v0);
  if ((v11 & 1) != 0)
    return 1;
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v14 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDBFE0);
  v16 = swift_getKeyPath(&unk_100EDC008);
  static Published.subscript.getter(v25, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v13 = BYTE1(v25[0]);
  v17 = v25[3];
  v18 = v25[4];
  v19 = v25[7];
  v20 = v25[9];
  v21 = (void *)v25[10];
  v22 = v25[12];
  swift_bridgeObjectRelease(v25[14]);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);

  return v13;
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = sub_100007E8C(&qword_1011D4230);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D2FC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = sub_1009D21E4();
    if ((v10 & 1) == 0)
      return 0;
  }
  MusicVideo.albums.getter(v10);
  v13 = sub_100007E8C(&qword_1011D4238);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011D4230);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
    sub_10004FF60((uint64_t)v7, &qword_1011D2FC8);
    return 0;
  }
  sub_1009D0B60(&qword_1011D4238, &qword_1011D4500, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_6;
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v17 = Album.isSingleMusicVideo.getter(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v17 == 2)
    return 0;
  return (v17 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _BOOL8 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v0 = sub_100007E8C(&qword_1011D4230);
  __chkstk_darwin(v0);
  v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C(&qword_1011D2FC8);
  __chkstk_darwin(v2);
  v37 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Album(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Track(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1009D21E4() & 1) == 0)
    return 0;
  v33 = v7;
  v34 = v5;
  v35 = v4;
  v36 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 != enum case for Track.song(_:))
  {
    if (v16 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
      v18 = v11;
      v19 = v8;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v11, v15, v8);
      v21 = (uint64_t)v38;
      MusicVideo.albums.getter(v20);
      v22 = sub_100007E8C(&qword_1011D4238);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_10004FF60(v21, &qword_1011D4230);
        v24 = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, 1, 1, v35);
      }
      else
      {
        v24 = v37;
        sub_1009D0B60(&qword_1011D4238, &qword_1011D4500, (uint64_t (*)(_QWORD))&type metadata accessor for Album, v37);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        v27 = v34;
        v26 = v35;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v24, 1, v35) != 1)
        {
          v29 = v33;
          v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 32))(v33, v24, v26);
          v31 = Album.isSingleMusicVideo.getter(v30);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
          v28 = v36;
          v17 = v31 != 2 && (v31 & 1) == 0;
          goto LABEL_12;
        }
      }
      sub_10004FF60(v24, &qword_1011D2FC8);
      v17 = 0;
      v28 = v36;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
      return v17;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 1;
}

uint64_t Playlist.supportsContainerNavigation(itemState:)()
{
  return sub_1009D21E4() & 1;
}

BOOL Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v0 = sub_100007E8C(&qword_1011D4230);
  __chkstk_darwin(v0);
  v46 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C(&qword_1011D2FC8);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D4240);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v38 - v17;
  if ((sub_1009D21E4() & 1) != 0)
  {
    v39 = v8;
    v40 = v6;
    v42 = v5;
    v43 = v12;
    v41 = v4;
    v44 = v10;
    v45 = v9;
    Playlist.Entry.item.getter(v19);
    v20 = type metadata accessor for Playlist.Entry.Item(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
    {
      v22 = 0;
LABEL_12:
      sub_10004FF60((uint64_t)v18, &qword_1011D4240);
      return v22;
    }
    sub_10004A160((uint64_t)v18, (uint64_t)v15, &qword_1011D4240);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v15, v20);
    if (v23 != enum case for Playlist.Entry.Item.musicVideo(_:))
    {
      v22 = v23 == enum case for Playlist.Entry.Item.song(_:);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v20);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v21 + 96))(v15, v20);
    v24 = v43;
    v25 = v44;
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 32))(v43, v15, v45);
    v27 = (uint64_t)v46;
    MusicVideo.albums.getter(v26);
    v28 = sub_100007E8C(&qword_1011D4238);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      sub_10004FF60(v27, &qword_1011D4230);
      v30 = (uint64_t)v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v41, 1, 1, v42);
    }
    else
    {
      v30 = (uint64_t)v41;
      sub_1009D0B60(&qword_1011D4238, &qword_1011D4500, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v41);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      v31 = v40;
      v32 = v42;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v30, 1, v42) != 1)
      {
        v35 = v39;
        v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 32))(v39, v30, v32);
        v37 = Album.isSingleMusicVideo.getter(v36);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v32);
        v33 = v45;
        v22 = v37 != 2 && (v37 & 1) == 0;
        goto LABEL_11;
      }
    }
    sub_10004FF60(v30, &qword_1011D2FC8);
    v22 = 0;
    v33 = v45;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v33);
    goto LABEL_12;
  }
  return 0;
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter();
  v3 = type metadata accessor for MusicPropertySource(0);
  v4 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
  if ((v2 & 1) == 0)
    v4 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1009D2D9C(a1, 15, (uint64_t)sub_1009D6A18, (uint64_t)&unk_1011D4248, (uint64_t)&unk_1011D4250, a2).n128_u64[0];
  return result;
}

__n128 sub_1009D2D9C@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[16];

  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 16);
  v18 = *(__n128 *)(a1 + 48);
  sub_100065228(a1, (uint64_t)v21, &qword_1011D3FC8);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  sub_100055CE4((uint64_t)v21);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v13;
  *(_OWORD *)(a6 + 16) = v20;
  *(_OWORD *)(a6 + 32) = v19;
  result = v18;
  *(__n128 *)(a6 + 48) = v18;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  return result;
}

uint64_t sub_1009D2E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D4F98(a1, 15, (uint64_t)sub_1009D6A18, (uint64_t)&unk_1011D4248, (uint64_t)&unk_1011D4250, a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_1010EC5F0, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_100065228(a8, v21 + v17, &qword_1011D2EB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1011D4260;
  a9[7] = v21;
  return result;
}

uint64_t sub_1009D2FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D3050, 0, 0);
}

uint64_t sub_1009D3050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1002ED50C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100EC2D70;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D321C, v19, v20);
  }
}

uint64_t sub_1009D321C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D6A2C, 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return sub_1009B90A4;
}

id sub_1009D332C()
{
  return sub_1009D6114();
}

uint64_t sub_1009D3350(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t sub_1009D3374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10006AEE4;
  return v6();
}

uint64_t sub_1009D33C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 4, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D41F0, (uint64_t)&unk_1011D41F8, a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_1010EC618, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_100065228(a6, v21 + v17, &qword_1011D2EB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_1011D4270;
  a9[5] = v21;
  return result;
}

uint64_t sub_1009D34E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D3594, 0, 0);
}

uint64_t sub_1009D3594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D374C, v19, v20);
  }
}

uint64_t sub_1009D374C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D6A30, 0, 0);
}

unint64_t sub_1009D381C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;

  v79 = a2;
  v5 = sub_100007E8C(&qword_1011D3010);
  __chkstk_darwin(v5);
  v70 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v65 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D3018);
  __chkstk_darwin(v8);
  v75 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Song(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v66 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D3008);
  __chkstk_darwin(v11);
  v78 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a3;
  v76 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v13);
  v67 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v72 = (char *)&v65 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v65 - v18;
  v20 = type metadata accessor for Track(0);
  v77 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v71 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EDBFE0);
  v23 = swift_getKeyPath(&unk_100EDC008);
  v24 = a1;
  static Published.subscript.getter(&v81, a1, KeyPath, v23);
  swift_release();
  swift_release();
  v25 = v82;
  v26 = v83;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v25 & 1) == 0)
    return 0xD00000000000003CLL;
  v28 = swift_getKeyPath(&unk_100EDBFE0);
  v29 = swift_getKeyPath(&unk_100EDC008);
  static Published.subscript.getter(&v81, v24, v28, v29);
  swift_release();
  swift_release();
  v30 = BYTE1(v81);
  v31 = v83;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v30 != 1)
    return 0xD000000000000016;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
  v34 = v79;
  v33 = v80;
  v32(v19, v79, v80);
  v35 = (uint64_t)v78;
  v36 = swift_dynamicCast(v78, v19, v33, v20, 6);
  v37 = v77;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
  if ((v36 & 1) != 0)
  {
    v38(v35, 0, 1, v20);
    v39 = v71;
    v40.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v37 + 32))(v71, v35, v20);
    Track.catalogID.getter(v40);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v20);
    v43 = swift_bridgeObjectRelease();
    if (v42)
      return 0;
  }
  else
  {
    v38(v35, 1, 1, v20);
    sub_10004FF60(v35, &qword_1011D3008);
  }
  v44 = v72;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v72, v34, v33, v43);
  v45 = (uint64_t)v75;
  v46 = v74;
  v47 = swift_dynamicCast(v75, v44, v33, v74, 6);
  v48 = v73;
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
  if ((v47 & 1) == 0)
  {
    v49(v45, 1, 1, v46);
    sub_10004FF60(v45, &qword_1011D3018);
    goto LABEL_13;
  }
  v49(v45, 0, 1, v46);
  v50 = v66;
  v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 32))(v66, v45, v46);
  Song.catalogID.getter(v51);
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v46);
  v54 = swift_bridgeObjectRelease();
  if (v53)
    return 0;
LABEL_13:
  v55 = v67;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v67, v34, v33, v54);
  v56 = (uint64_t)v70;
  v57 = v69;
  v58 = swift_dynamicCast(v70, v55, v33, v69, 6);
  v59 = v68;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
  if ((v58 & 1) != 0)
  {
    v60(v56, 0, 1, v57);
    v61 = v65;
    v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 32))(v65, v56, v57);
    MusicVideo.catalogID.getter(v62);
    v64 = v63;
    (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v57);
    swift_bridgeObjectRelease();
    if (v64)
      return 0;
  }
  else
  {
    v60(v56, 1, 1, v57);
    sub_10004FF60(v56, &qword_1011D3010);
  }
  return 0xD000000000000010;
}

uint64_t sub_1009D3E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1009D3EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1009D381C(*(_QWORD *)(v0 + 48), v0 + ((v2 + 56) & ~v2), v1);
}

uint64_t sub_1009D3EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_100007E8C(&qword_1011D3010);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D3018);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011D3008);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D4070, 0, 0);
}

uint64_t sub_1009D4070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 0);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_1009D4468;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_10004FF60(v20, &qword_1011D3008);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_1009D4594;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_10004FF60(v39, &qword_1011D3018);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 0);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_1009D46C0;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_10004FF60(v58, &qword_1011D3010);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D4468()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_10005B748(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1009D44D0, 0, 0);
}

uint64_t sub_1009D44D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D4594()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_10005B748(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1009D45FC, 0, 0);
}

uint64_t sub_1009D45FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D46C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_10005B748(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1009D4728, 0, 0);
}

uint64_t sub_1009D4728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D47F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_1011D41E4);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10006AEE4;
  return sub_1009D3EEC(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_1009D4894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

unint64_t sub_1009D48EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1009D1628(v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1009D4910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v3 | v6 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v9);
}

uint64_t sub_1009D499C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_1011D4204);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10006AEE4;
  return sub_1009D1A80(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_1009D4A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D4224);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009D12E8(v7, v8, v2, v3);
}

uint64_t sub_1009D4AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D425C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009D2FA4(v7, v8, v2, v3);
}

uint64_t sub_1009D4B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D426C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009D34E8(v7, v8, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x6572432077656956, 0xEC00000073746964);
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EC640, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_1010EC668, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10098C424;
}

uint64_t sub_1009D4CC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009D4CEC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6572432077656956, 0xEC00000073746964);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*sub_1009D4E5C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ECB18, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_1010ECB40, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10098C9EC;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1009D2D9C(a1, 16, (uint64_t)sub_1009D4F04, (uint64_t)&unk_1011D4278, (uint64_t)&unk_1011D4280, a2).n128_u64[0];
  return result;
}

uint64_t sub_1009D4F04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1009D4F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10005AEE4;
  return v6();
}

uint64_t sub_1009D4F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D4F98(a1, 16, (uint64_t)sub_1009D4F04, (uint64_t)&unk_1011D4278, (uint64_t)&unk_1011D4280, a2);
}

uint64_t sub_1009D4F98@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  *(_QWORD *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v10;
  v11 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 56) = v8;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  swift_bridgeObjectRetain(v6);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v8);
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_1010EC690, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_100065228(a8, v21 + v17, &qword_1011D2EB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1011D4290;
  a9[7] = v21;
  return result;
}

uint64_t sub_1009D5130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D51DC, 0, 0);
}

uint64_t sub_1009D51DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1002ED50C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100EA93A0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D53A8, v19, v20);
  }
}

uint64_t sub_1009D53A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D5478, 0, 0);
}

uint64_t sub_1009D5478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005B748(*(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D54D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D428C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10005AEE4;
  return sub_1009D5130(v7, v8, v2, v3);
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_1009D5590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v17[-v12];
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v14 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v6, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return sub_1009B905C;
}

id sub_1009D5718()
{
  return sub_1009D6114();
}

uint64_t sub_1009D5734(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_1009D5754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v19[-v14];
  String.LocalizationValue.init(stringLiteral:)(a3, a4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v12, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v16 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v17 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v16, v8, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return v17;
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 57, (uint64_t)sub_10098CA8C, (uint64_t)&unk_1011D4298, (uint64_t)&unk_1011D42A0, a2);
}

uint64_t sub_1009D58E0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t sub_1009D5954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 57, (uint64_t)sub_10098CA8C, (uint64_t)&unk_1011D4298, (uint64_t)&unk_1011D42A0, a2);
}

uint64_t sub_1009D5974@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_1010EC6B8, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_100065228(a6, v21 + v17, &qword_1011D2EB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_1011D42B0;
  a9[5] = v21;
  return result;
}

uint64_t sub_1009D5AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D5B94, 0, 0);
}

uint64_t sub_1009D5B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D5D4C, v19, v20);
  }
}

uint64_t sub_1009D5D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D5E1C, 0, 0);
}

uint64_t sub_1009D5E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005B748(*(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D5E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009D6038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D42AC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009D5AE8(v7, v8, v2, v3);
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return sub_1009B90D0;
}

id sub_1009D60F4()
{
  return sub_1009D6114();
}

id sub_1009D6114()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t _s9MusicCore7ActionsO14ViewFullLyricsO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E4B130);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Playlist(0);
  }
  else
  {
    if (result > 1)
      return result;
    v4 = type metadata accessor for Track(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D4418;
  if (!qword_1011D4418)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationItem);
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t sub_1009D66C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Track(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t _s9GoToAlbumO7ContextVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s9GoToAlbumO7ContextVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(a1[3]);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(a1[5]);
  v4 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  v5 = a1[7];
  a1[7] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t sub_1009D69D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100044B54(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

double static Actions.OpenInClassical.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_10098CA8C;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1011D4508;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1011D4510;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(uint64_t, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  unint64_t (**v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t (**v76)();
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v73 = a2;
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v74 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v10;
  __chkstk_darwin(v9);
  v71 = (char *)&v65 - v11;
  v67 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011D4518);
  v68 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v72 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v70 = (uint64_t)&v65 - v19;
  v20 = __chkstk_darwin(v18);
  v69 = (uint64_t)&v65 - v21;
  v77 = v22;
  v23 = __chkstk_darwin(v20);
  v25 = (uint64_t *)((char *)&v65 - v24);
  v78 = a1;
  v26 = Album.catalogID.getter(v23);
  v75 = a3;
  v76 = a4;
  if (v27)
  {
    v28 = v27;
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    v33 = swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t *, char *, uint64_t, __n128))(v12 + 32))(v25, v14, v67, v33);
    v34 = 0;
    v35 = v68;
  }
  else
  {
    v29 = sub_1009D6F18();
    v30 = swift_allocError(&type metadata for ClassicalBridge.Error, v29, 0, 0);
    *(_QWORD *)v31 = 2;
    *(_QWORD *)(v31 + 8) = 0;
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    *(_BYTE *)(v31 + 32) = 2;
    swift_willThrow(v32);
    v35 = v68;
    *v25 = v30;
    v34 = 1;
  }
  swift_storeEnumTagMultiPayload(v25, v15, v34);
  v36 = v71;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v71, v78, v7);
  v37 = v69;
  sub_10004A160((uint64_t)v25, v69, &qword_1011D4518);
  v38 = *(unsigned __int8 *)(v8 + 80);
  v39 = (v38 + 16) & ~v38;
  v40 = v8;
  v41 = v7;
  v42 = *(unsigned __int8 *)(v35 + 80);
  v43 = (v79 + v42 + v39) & ~v42;
  v44 = v77;
  v66 = v42 | 7;
  v67 = v42 | 7 | v38;
  v45 = swift_allocObject(&unk_1010ECB88, v43 + v77, v67);
  v46 = v45 + v39;
  v47 = v45;
  v68 = v45;
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
  v48(v46, v36, v41);
  sub_100065228(v37, v47 + v43, &qword_1011D4518);
  v49 = v70;
  sub_10004A160((uint64_t)v25, v70, &qword_1011D4518);
  v50 = (v42 + 16) & ~v42;
  v51 = (v44 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
  v52 = swift_allocObject(&unk_1010ECBB0, v51 + 72, v66);
  sub_100065228(v49, v52 + v50, &qword_1011D4518);
  sub_100064EF0(v73, v52 + v51);
  v53 = v72;
  sub_100065228((uint64_t)v25, v72, &qword_1011D4518);
  v54 = v74;
  v48((uint64_t)v74, v78, v41);
  v55 = (uint64_t (*)(uint64_t, char *, uint64_t))v48;
  v56 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v57 = *(unsigned __int8 *)(v56 + 80);
  v58 = (v57 + 16) & ~v57;
  v59 = (*(_QWORD *)(v56 + 64) + v42 + v58) & ~v42;
  v60 = (v77 + v38 + v59) & ~v38;
  v61 = swift_allocObject(&unk_1010ECBD8, v60 + v79, v67 | v57);
  sub_100065228(v75, v61 + v58, &qword_1011D2EB8);
  sub_100065228(v53, v61 + v59, &qword_1011D4518);
  result = v55(v61 + v60, v54, v41);
  v63 = v76;
  v64 = v68;
  *v76 = sub_1009D719C;
  v63[1] = (unint64_t (*)())v64;
  v63[2] = (unint64_t (*)())&unk_1011D4528;
  v63[3] = (unint64_t (*)())v52;
  v63[4] = (unint64_t (*)())&unk_1011D4538;
  v63[5] = (unint64_t (*)())v61;
  return result;
}

unint64_t sub_1009D6F18()
{
  unint64_t result;

  result = qword_1011DBC90;
  if (!qword_1011DBC90)
  {
    result = swift_getWitnessTable(&unk_100EE58B4, &type metadata for ClassicalBridge.Error);
    atomic_store(result, (unint64_t *)&qword_1011DBC90);
  }
  return result;
}

unint64_t sub_1009D6F5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = 0xD000000000000021;
  v4 = sub_100007E8C(&qword_1011D4518);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((Album.isClassicalExperienceAvailable.getter(v5) & 1) != 0)
  {
    sub_10004A160(a2, (uint64_t)v7, &qword_1011D4518);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
    {
      v8 = *v7;
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v9._countAndFlagsBits = 0xD000000000000028;
      v9._object = (void *)0x8000000100E4B1A0;
      String.append(_:)(v9);
      v14 = v8;
      v10 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
      _print_unlocked<A, B>(_:_:)(&v14, v15, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      swift_errorRelease(v8);
      return v15[0];
    }
    else
    {
      sub_10004FF60((uint64_t)v7, &qword_1011D4518);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1009D70BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = sub_100007E8C(&qword_1011D4518);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (swift_getEnumCaseMultiPayload(v0 + v7, v5) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v7));
  }
  else
  {
    v9 = type metadata accessor for URL(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v7, v9);
  }
  return swift_deallocObject(v0, v7 + v8);
}

unint64_t sub_1009D719C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011D4518) - 8) + 80);
  return sub_1009D6F5C(v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_1009D7200(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100007E8C(&qword_1011D4518);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[10] = v8;
  v2[11] = v9;
  return swift_task_switch(sub_1009D72BC, v8, v9);
}

uint64_t sub_1009D72BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t Strong;
  _QWORD *v8;
  char *v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  sub_10004A160(*(_QWORD *)(v0 + 16), v2, &qword_1011D4518);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    swift_release();
    sub_10004FF60(v3, &qword_1011D4518);
    v4 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    *(_QWORD *)(v0 + 96) = Strong;
    v9 = (char *)&dword_1011DBCA0 + dword_1011DBCA0;
    v8 = (_QWORD *)swift_task_alloc(unk_1011DBCA4);
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_1009D73C0;
    return ((uint64_t (*)(_QWORD, uint64_t))v9)(*(_QWORD *)(v0 + 64), Strong);
  }
}

uint64_t sub_1009D73C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_1009D7490;
  else
    v5 = sub_1009D742C;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1009D742C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D7490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D74F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = sub_100007E8C(&qword_1011D4518);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (_QWORD *)(v0 + v3);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v1) == 1)
  {
    swift_errorRelease(*v5);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v6);
  v9 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v9 != 255)
    sub_100064AA4(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release();
  return swift_deallocObject(v0, v4 + 72);
}

uint64_t sub_1009D75C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D4518) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D4524);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10005AEE4;
  return sub_1009D7200(v4, v5);
}

uint64_t sub_1009D7644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = sub_100007E8C(&qword_1011D4518);
  v3[12] = v4;
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D7718, 0, 0);
}

uint64_t sub_1009D7718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 120), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    sub_1002ED50C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    sub_10004A160(v10, v9, &qword_1011D4518);
    if (swift_getEnumCaseMultiPayload(v9, v8) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 104), &qword_1011D4518);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = 1;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 112);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v15, v11);
      v13 = 0;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 56))(*(_QWORD *)(v0 + 112), v13, 1, v11);
    v16 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v16, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = sub_1009AE338();
    *(_QWORD *)(inited + 40) = v18;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 152) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 160) = v19;
    *(_QWORD *)(v0 + 168) = v20;
    *(_WORD *)(v0 + 184) = v21;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v22 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v23);
    v24 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D7934, v24, v25);
  }
}

uint64_t sub_1009D7934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(uint64_t **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release();
  sub_1009AFBBC(0xD000000000000014, 0x8000000100E3C5C0, 5, 23, v5, v3, v2, v1, v6, v4);
  sub_10056C15C(v3, v2, v1, v6, SBYTE1(v6));
  return swift_task_switch(sub_1009D79F0, 0, 0);
}

uint64_t sub_1009D79F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2AE0);
  sub_10098C9B0(v1);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D7A68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_100007E8C(&qword_1011D4518);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v25 = *(_QWORD *)(v5 + 64);
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v24 = *(_QWORD *)(v8 + 64);
  v10 = v0 + v2;
  v11 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v22 = v6;
    v23 = v7;
    if (*(_QWORD *)(v10 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 20);
    v13 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v12 + *(int *)(v13 + 24);
      v14 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v14 - 8);
      v20 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v19 + 48))(v21, 1))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v22;
    v7 = v23;
  }
  if (swift_getEnumCaseMultiPayload(v0 + v6, v4) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v6));
  }
  else
  {
    v15 = type metadata accessor for URL(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v6, v15);
  }
  v16 = (v6 + v25 + v9) & ~v9;
  v17 = v16 + v24;
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v16, v7);
  return swift_deallocObject(v0, v17);
}

uint64_t sub_1009D7CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_100007E8C(&qword_1011D4518) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Album(0) - 8) + 80);
  v9 = v6 + v7 + v8;
  v10 = v0 + v3;
  v11 = v0 + v6;
  v12 = v0 + (v9 & ~v8);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D4534);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10006AEE4;
  return sub_1009D7644(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ECC00, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_1010ECC28, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_10098C424;
}

uint64_t (*sub_1009D7DFC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ECD28, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_1010ECD50, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_10098C9EC;
}

uint64_t _s9MusicCore7ActionsO15OpenInClassicalO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100E4B150);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1009D7FF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t (*v24)();
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id result;
  unint64_t (**v48)();
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  unint64_t (*v52)();
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t (**v60)();
  uint64_t v61;
  uint64_t v62;
  id v63;

  v57 = a7;
  v58 = a8;
  v54 = a5;
  v55 = a6;
  v56 = a4;
  v51 = a2;
  v60 = a9;
  v62 = a12;
  v63 = a3;
  v59 = a10;
  v13 = *(_QWORD *)(a11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(a1);
  v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v50 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v50 = a1;
  v21((char *)&v50 - v19, a1, a11);
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = (v22 + 48) & ~v22;
  v61 = v22 | 7;
  v24 = (unint64_t (*)())swift_allocObject(&unk_1010ECD90, v23 + v14, v22 | 7);
  v52 = v24;
  *((_QWORD *)v24 + 2) = a11;
  *((_QWORD *)v24 + 3) = a12;
  v25 = v63;
  *((_QWORD *)v24 + 4) = v51;
  *((_QWORD *)v24 + 5) = v25;
  v51 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v51((char *)v24 + v23, v20, a11);
  v21(v18, a1, a11);
  v26 = (v22 + 32) & ~v22;
  v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(&unk_1010ECDB8, v30 + 40, v61);
  v32 = v62;
  *(_QWORD *)(v31 + 16) = a11;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = v31 + v26;
  v34 = (void (*)(char *, uint64_t, uint64_t))v51;
  v51((char *)v33, v18, a11);
  *(_QWORD *)(v31 + v27) = v63;
  v35 = (_QWORD *)(v31 + v28);
  v37 = v55;
  v36 = v56;
  *v35 = v54;
  v35[1] = v37;
  v38 = (_QWORD *)(v31 + v29);
  v39 = v58;
  *v38 = v57;
  v38[1] = v39;
  sub_100065228(v36, v31 + v30, &qword_1011D2F28);
  v40 = v53;
  v34(v53, v50, a11);
  v41 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (v42 + 32) & ~v42;
  v44 = (*(_QWORD *)(v41 + 64) + v22 + v43) & ~v22;
  v45 = swift_allocObject(&unk_1010ECDE0, v44 + v14, v61 | v42);
  v46 = v62;
  *(_QWORD *)(v45 + 16) = a11;
  *(_QWORD *)(v45 + 24) = v46;
  sub_100065228(v59, v45 + v43, &qword_1011D2EB8);
  v34((char *)(v45 + v44), (uint64_t)v40, a11);
  result = v63;
  v48 = v60;
  v49 = v52;
  *v60 = sub_1009D9D00;
  v48[1] = v49;
  v48[2] = (unint64_t (*)())&unk_1011D4578;
  v48[3] = (unint64_t (*)())v31;
  v48[4] = (unint64_t (*)())&unk_1011D4588;
  v48[5] = (unint64_t (*)())v45;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 5, (uint64_t)sub_10098CA8C, (uint64_t)&unk_1011D4590, (uint64_t)&unk_1011D4598, a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  unint64_t (**v67)();
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t);
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t (**v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[32];

  v84 = a8;
  v85 = a9;
  v81 = a6;
  v82 = a7;
  v78 = a4;
  v79 = a5;
  v77 = a2;
  v87 = a1;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v83 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v76 = (char *)&v69 - v16;
  v86 = v17;
  __chkstk_darwin(v15);
  v19 = (char *)&v69 - v18;
  v20 = sub_100007E8C(&qword_1011D45A0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v75 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  v28 = (void (**)(uint64_t, char *, uint64_t))((char *)&v69 - v27);
  v80 = a3;
  v29 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v29, v89, 0, 0);
  v30 = *v29;
  v88 = a11;
  if (v30)
  {
    swift_retain(v30);
    v31 = Player.state<A>(for:)(v87, a10, a11);
    swift_release(v30);
    MusicItemState.playabilityStatus.getter(v28);
    swift_release(v31);
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v28, 0, 1, v32);
  }
  else
  {
    v33 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 1, 1, v33);
  }
  sub_10004A160((uint64_t)v28, (uint64_t)v26, &qword_1011D45A0);
  v70 = v28;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v34 = v87;
  v73(v19, v87, a10);
  v35 = *(unsigned __int8 *)(v21 + 80);
  v36 = *(unsigned __int8 *)(v12 + 80);
  v37 = (v35 + 32) & ~v35;
  v38 = (v22 + v36 + v37) & ~v36;
  v39 = v38 + v86;
  v71 = v36 | v35 | 7;
  v72 = v37;
  v40 = swift_allocObject(&unk_1010ECE08, v38 + v86, v71);
  v41 = v88;
  *(_QWORD *)(v40 + 16) = a10;
  *(_QWORD *)(v40 + 24) = v41;
  v42 = v40 + v37;
  v43 = v40;
  v74 = v40;
  sub_100065228((uint64_t)v26, v42, &qword_1011D45A0);
  v69 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v69(v43 + v38, v19, a10);
  v44 = v75;
  sub_100065228((uint64_t)v70, v75, &qword_1011D45A0);
  v45 = v76;
  v73(v76, v34, a10);
  v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_1010ECE30, v49 + 8, v71);
  v51 = v88;
  *(_QWORD *)(v50 + 16) = a10;
  *(_QWORD *)(v50 + 24) = v51;
  sub_100065228(v44, v50 + v72, &qword_1011D45A0);
  v52 = v45;
  v53 = (void (*)(char *, uint64_t, uint64_t))v69;
  v69(v50 + v38, v52, a10);
  v54 = v78;
  *(_QWORD *)(v50 + v46) = v77;
  v55 = (_QWORD *)(v50 + v47);
  v56 = v79;
  *v55 = v54;
  v55[1] = v56;
  v57 = (_QWORD *)(v50 + v48);
  v58 = v82;
  v59 = v83;
  *v57 = v81;
  v57[1] = v58;
  *(_QWORD *)(v50 + v49) = v80;
  v53(v59, v87, a10);
  v60 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v61 = *(unsigned __int8 *)(v60 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = (*(_QWORD *)(v60 + 64) + v36 + v62) & ~v36;
  v64 = swift_allocObject(&unk_1010ECE58, v63 + v86, v36 | v61 | 7);
  v65 = v88;
  *(_QWORD *)(v64 + 16) = a10;
  *(_QWORD *)(v64 + 24) = v65;
  sub_100065228(v84, v64 + v62, &qword_1011D2EB8);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v53)(v64 + v63, v59, a10);
  v67 = v85;
  v68 = v74;
  *v85 = sub_1009DEA80;
  v67[1] = (unint64_t (*)())v68;
  v67[2] = (unint64_t (*)())&unk_1011D45B0;
  v67[3] = (unint64_t (*)())v50;
  v67[4] = (unint64_t (*)())&unk_1011D45C0;
  v67[5] = (unint64_t (*)())v64;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 23, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D45C8, (uint64_t)&unk_1011D45D0, a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  void *v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id result;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  char v90[32];

  v80 = a6;
  v81 = a7;
  v82 = a4;
  v88 = a2;
  v13 = a1;
  v78 = a9;
  v79 = a5;
  v15 = *(_QWORD *)(a11 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(a1);
  v83 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v21 = (char *)&v72 - v20;
  v77 = v22;
  v84 = a10;
  v85 = a8;
  v86 = v18;
  v87 = v23;
  if (v22 == (void *)3
    && (v24 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player),
        v19 = swift_beginAccess(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v90, 0, 0),
        (v25 = *v24) != 0))
  {
    v76 = v15;
    KeyPath = swift_getKeyPath(&unk_100EDC078);
    v27 = swift_getKeyPath(&unk_100EDC0A0);
    swift_retain(v25);
    static Published.subscript.getter(&v89, v28, KeyPath, v27);
    swift_release(v25);
    swift_release(KeyPath);
    v19 = swift_release(v27);
    v29 = v89;
    if (v89)
    {
      v30 = objc_msgSend(v89, "tracklist", v19.n128_f64[0]);

      v31 = objc_msgSend(v30, "insertCommand");
      if (v31)
      {
        v32 = objc_msgSend(v31, "insertAfterLastSection");
        v19 = swift_unknownObjectRelease(v31);
        if (v32)
        {
          v33 = objc_msgSend(v32, "section", v19.n128_f64[0]);
          v34 = objc_msgSend(v33, "metadataObject", swift_unknownObjectRelease(v32).n128_f64[0]);

          if (v34)
          {
            v35 = objc_msgSend(v34, "flattenedGenericObject");

            v15 = v76;
            if (!v35)
              goto LABEL_20;
            v36 = objc_msgSend(v35, "anyObject");

            if (!v36)
              goto LABEL_20;
            objc_opt_self(MPModelAlbum);
            v37 = swift_dynamicCastObjCClass(v36);
            if (v37)
            {
              v38 = (void *)v37;
              v39 = v36;
              v40 = objc_msgSend(v38, "title");
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              v66 = swift_dynamicCastObjCClass(v36);
              if (!v66)
              {

                goto LABEL_20;
              }
              v67 = (void *)v66;
              v39 = v36;
              v40 = objc_msgSend(v67, "name");
            }
            v68 = v40;
            if (v68)
            {
              v69 = v68;
              v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
              v72 = v71;
              v73 = v70;

LABEL_21:
              v13 = v86;
              goto LABEL_13;
            }

LABEL_20:
            v72 = 0;
            v73 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    v72 = 0;
    v73 = 0;
    v13 = v86;
    v15 = v76;
  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v21, v13, a11, v19);
  v41 = *(unsigned __int8 *)(v15 + 80);
  v42 = (v41 + 40) & ~v41;
  v74 = v41 | 7;
  v76 = v16 + 7;
  v43 = (v16 + 7 + v42) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)swift_allocObject(&unk_1010ECE80, v44 + 8, v41 | 7);
  v45[2] = a11;
  v45[3] = a12;
  v75 = a12;
  v46 = v87;
  v45[4] = v87;
  v47 = (char *)v45 + v42;
  v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v48(v47, v21, a11);
  v49 = v77;
  *(_QWORD *)((char *)v45 + v43) = v77;
  v50 = v88;
  *(_QWORD *)((char *)v45 + v44) = v88;
  v51 = (_QWORD *)swift_allocObject(&unk_1010ECEA8, 112, 7);
  v52 = v79;
  v51[2] = v50;
  v51[3] = v52;
  v53 = v81;
  v51[4] = v80;
  v51[5] = v53;
  v51[6] = v78;
  v51[7] = v46;
  v51[8] = v49;
  sub_100065228(v82, (uint64_t)(v51 + 9), &qword_1011D2F28);
  v54 = v83;
  v48(v83, (char *)v86, a11);
  v55 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v58) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_1010ECED0, v59 + 8, v74 | v56);
  v61 = v75;
  *(_QWORD *)(v60 + 16) = a11;
  *(_QWORD *)(v60 + 24) = v61;
  sub_100065228(v84, v60 + v57, &qword_1011D2EB8);
  v48((char *)(v60 + v58), v54, a11);
  *(_QWORD *)(v60 + v59) = v49;
  sub_100149434(v49);
  sub_100149434(v49);
  sub_100149434(v49);
  v62 = v87;
  result = v88;
  v64 = v85;
  v65 = v73;
  *v85 = v49;
  v64[1] = v65;
  v64[2] = v72;
  v64[3] = sub_1009DEE7C;
  v64[4] = v45;
  v64[5] = &unk_1011D45E0;
  v64[6] = v51;
  v64[7] = &unk_1011D45F0;
  v64[8] = v60;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[8];
  uint64_t v8;

  sub_1009DF590(a1, (uint64_t)v7);
  v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(_QWORD *)(a2 + 128) = v8;
  v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v15 = swift_allocObject(&unk_1010ECEF8, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(_QWORD *)(a7 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v18 + *(_QWORD *)(v16 + 64) + v20) & ~v20;
  v22 = swift_allocObject(&unk_1010ECF20, v21 + *(_QWORD *)(v19 + 64), v17 | v20 | 7);
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = a8;
  sub_100065228(a6, v22 + v18, &qword_1011D2EB8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v21, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &unk_1011D30B0;
  a9[3] = v15;
  a9[4] = &unk_1011D4600;
  a9[5] = v22;
  return result;
}

uint64_t sub_1009D8DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D8E80, 0, 0);
}

uint64_t sub_1009D8E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10005B6C0(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009D9040, v19, v20);
  }
}

uint64_t sub_1009D9040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D6A30, 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 36, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4608, (uint64_t)&unk_1011D4610, a2);
}

uint64_t sub_1009D9130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 36, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4608, (uint64_t)&unk_1011D4610, a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ECF48, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_1010ECF70, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10098C424;
}

uint64_t (*sub_1009D91DC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ED4E0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_1010ED508, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10098C9EC;
}

uint64_t sub_1009D9264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 5, (uint64_t)sub_10098CA8C, (uint64_t)&unk_1011D4590, (uint64_t)&unk_1011D4598, a2);
}

unint64_t sub_1009D9284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  Swift::String v32;
  _QWORD v34[11];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];

  v40 = a3;
  v7 = type metadata accessor for Artist(0);
  __chkstk_darwin(v7);
  v35 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v34[10] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34[9] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v37 - 8);
  v9 = __chkstk_darwin(v37);
  v10 = __chkstk_darwin(v9);
  v34[8] = (char *)v34 - v11;
  v12 = __chkstk_darwin(v10);
  v41 = a4;
  v39 = *(_QWORD *)(a4 - 8);
  v13 = __chkstk_darwin(v12);
  v38 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)v34 - v15;
  type metadata accessor for MusicLibrary(0);
  v17 = static MusicLibrary.shared.getter();
  v18 = static MusicLibrary.== infix(_:_:)(a1, v17);
  swift_release(v17);
  if ((v18 & 1) == 0)
    return 0xD000000000000016;
  v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v20 = swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v53, 0, 0);
  v21 = *v19;
  if (*v19)
  {
    v22 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16))(v16, v40, v41, v20);
    swift_retain(v21);
    v23 = sub_100007E8C(&qword_1011D3850);
    if ((swift_dynamicCast(v42, v16, v22, v23, 6) & 1) != 0)
    {
      sub_100064C48(v42, (uint64_t)&v50);
      v24 = v51;
      v25 = v52;
      sub_100007E68(&v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
        v34[7] = v21;
        if (qword_1011D1C28 != -1)
          swift_once(&qword_1011D1C28, sub_100A2D554);
        v28 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_100EDC1A0);
        v30 = swift_getKeyPath(&unk_100EDC1C8);
        static Published.subscript.getter(v42, v28, KeyPath, v30);
        swift_release(KeyPath);
        swift_release(v30);
        v34[3] = v43;
        v34[5] = v44;
        v34[6] = v45;
        v34[4] = v46;
        v34[2] = v48;
        v34[1] = v49;
        __asm { BR              X10 }
      }
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v50);
    }
    else
    {
      v43 = 0;
      memset(v42, 0, sizeof(v42));
      sub_10004FF60((uint64_t)v42, (uint64_t *)&unk_1011D9690);
    }
    swift_release(v21);
    return 0xD00000000000001DLL;
  }
  else
  {
    *(_QWORD *)&v42[0] = 0;
    *((_QWORD *)&v42[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x8000000100E4B350;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, v41);
    return *(_QWORD *)&v42[0];
  }
}

uint64_t sub_1009D9C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1009D9D00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1009D9284(v0[4], v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1009D9D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  __n128 v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v19 = 0;
    v20 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v5, &v19, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (qword_1011D1B60 != -1)
      swift_once(&qword_1011D1B60, sub_100A01630);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100048B14(v12, (uint64_t)static Logger.actions);
    v14 = Logger.logObject.getter(v13);
    v16 = static os_log_type_t.fault.getter(v15);
    if (os_log_type_enabled(v14, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v16, "Unknown playability status", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v19 = 0;
    v20 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v1, &v19, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v11;
}

uint64_t sub_1009D9F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[46] = v10;
  v8[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[48] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[49] = swift_task_alloc(v12);
  v8[50] = swift_task_alloc(v12);
  v13 = sub_100007E8C(&qword_1011D46F8);
  v8[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v8[52] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[53] = v15;
  v8[54] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice.Variant(0);
  v8[55] = v16;
  v8[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011D3018);
  v8[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  v8[59] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[60] = swift_task_alloc(v20);
  v8[61] = swift_task_alloc(v20);
  v21 = type metadata accessor for Song(0);
  v8[62] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[63] = v22;
  v8[64] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009DA120, 0, 0);
}

uint64_t sub_1009DA120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  unint64_t v33;
  NSString v34;
  Class v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  NSString v58;
  uint64_t v59;
  void *v60;
  Class isa;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
  v6(v3, *(_QWORD *)(v0 + 304), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) == 0)
  {
    v36 = *(_QWORD *)(v0 + 464);
    v8(v36, 1, 1, *(_QWORD *)(v0 + 496));
    sub_10004FF60(v36, &qword_1011D3018);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v0 + 504);
  v9 = *(_QWORD *)(v0 + 512);
  v11 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 464);
  v13 = *(_QWORD *)(v0 + 312);
  v8(v12, 0, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
  v14 = (_QWORD *)(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v15 = swift_beginAccess(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 256, 0, 0);
  if (!*v14)
    goto LABEL_15;
  KeyPath = swift_getKeyPath(&unk_100EDC078);
  v17 = swift_getKeyPath(&unk_100EDC0A0);
  swift_retain();
  static Published.subscript.getter((_QWORD *)(v0 + 280), v18, KeyPath, v17);
  swift_release();
  swift_release();
  v15 = swift_release();
  v19 = *(void **)(v0 + 280);
  if (!v19)
    goto LABEL_15;
  MPCPlayerResponse.playState(for:)(*(_QWORD *)(v0 + 512));
  v21 = v20;

  if ((v21 & 1) != 0)
    goto LABEL_15;
  if (!*v14)
    goto LABEL_15;
  v22 = swift_getKeyPath(&unk_100EDC078);
  v23 = swift_getKeyPath(&unk_100EDC0A0);
  swift_retain();
  static Published.subscript.getter((_QWORD *)(v0 + 288), v24, v22, v23);
  swift_release();
  swift_release();
  v15 = swift_release();
  v25 = *(void **)(v0 + 288);
  if (!v25)
    goto LABEL_15;
  v26 = objc_msgSend(*(id *)(v0 + 288), "tracklist", v15.n128_f64[0]);

  v27 = objc_msgSend(v26, "playingItem");
  if (!v27)
    goto LABEL_15;
  v28 = objc_msgSend(v27, "metadataObject");

  if (!v28)
    goto LABEL_15;
  v29 = objc_msgSend(v28, "innermostModelObject");
  *(_QWORD *)(v0 + 520) = v29;

  objc_opt_self(MPModelSong);
  v30 = swift_dynamicCastObjCClass(v29);
  if (!v30)
  {

LABEL_15:
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496), v15);
    goto LABEL_16;
  }
  v31 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "radioPlaybackIntentFromSong:", v30);
  *(_QWORD *)(v0 + 528) = v31;
  if (!v31)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

LABEL_16:
    v37 = *(_QWORD *)(v0 + 480);
    v38 = *(_QWORD *)(v0 + 360);
    v6(v37, *(_QWORD *)(v0 + 304), v38);
    v39 = sub_100007E8C(&qword_1011D4700);
    if ((swift_dynamicCast(v0 + 56, v37, v38, v39, 6) & 1) != 0)
    {
      sub_100064C48((__int128 *)(v0 + 56), v0 + 16);
      sub_100064C78(v0 + 16, v0 + 96);
      MusicPlaybackIntentDescriptor.init(stationSeed:)(v0 + 96);
      v51 = *(_QWORD *)(v0 + 424);
      v50 = *(_QWORD *)(v0 + 432);
      v53 = *(_QWORD *)(v0 + 408);
      v52 = *(_QWORD *)(v0 + 416);
      v55 = *(_QWORD *)(v0 + 336);
      v54 = *(_QWORD *)(v0 + 344);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v53, 0, 1, v52);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v53, v52);
      v56 = swift_bridgeObjectRetain();
      v57 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v56);
      v58 = String._bridgeToObjectiveC()();
      objc_msgSend(v57, "setPlayActivityFeatureName:", v58, swift_bridgeObjectRelease().n128_f64[0]);

      v59 = sub_1000A0168(v55, v54);
      v60 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v59);
      if (v54 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        v62 = *(_QWORD *)(v0 + 336);
        v63 = *(_QWORD *)(v0 + 344);
        sub_100079DE4(v62, v63);
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_1000822B4(v62, v63);
      }
      v64 = *(_QWORD *)(v0 + 424);
      v65 = *(_QWORD *)(v0 + 416);
      v66 = *(_QWORD *)(v0 + 392);
      v75 = *(_QWORD *)(v0 + 432);
      v77 = *(_QWORD *)(v0 + 400);
      v67 = *(_QWORD *)(v0 + 376);
      v68 = *(int **)(v0 + 384);
      v74 = *(_QWORD *)(v0 + 368);
      v69 = *(_QWORD *)(v0 + 336);
      v70 = *(_QWORD *)(v0 + 344);
      objc_msgSend(v60, "setPlayActivityRecommendationData:", isa);
      sub_1000822B4(v69, v70);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v67, v75, v65);
      swift_storeEnumTagMultiPayload(v67, v74, 1);
      *(_QWORD *)(v0 + 168) = 0;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      v71 = v66 + v68[7];
      *(_QWORD *)(v71 + 32) = 0;
      *(_OWORD *)v71 = 0u;
      *(_OWORD *)(v71 + 16) = 0u;
      *(_BYTE *)(v66 + v68[8]) = 0;
      *(_BYTE *)(v66 + v68[9]) = 0;
      sub_1009DFAEC(v67, v66);
      sub_1009DFB30(v0 + 136, v71);
      *(_QWORD *)(v66 + v68[5]) = 2;
      *(_QWORD *)(v66 + v68[6]) = 1;
      sub_10004FF60(v0 + 136, &qword_1011D8A40);
      sub_10005B748(v67, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      sub_10005B6C0(v66, v77, type metadata accessor for PlaybackIntentDescriptor);
      v72 = (_QWORD *)swift_task_alloc(dword_1011D86D4);
      *(_QWORD *)(v0 + 584) = v72;
      *v72 = v0;
      v72[1] = sub_1009DABE4;
      return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 400), 0);
    }
    else
    {
      *(_QWORD *)(v0 + 88) = 0;
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      sub_10004FF60(v0 + 56, &qword_1011D4708);
      v40 = *(_QWORD *)(v0 + 480);
      v41 = *(_QWORD *)(v0 + 488);
      v43 = *(_QWORD *)(v0 + 456);
      v42 = *(_QWORD *)(v0 + 464);
      v44 = *(_QWORD *)(v0 + 448);
      v45 = *(_QWORD *)(v0 + 432);
      v47 = *(_QWORD *)(v0 + 400);
      v46 = *(_QWORD *)(v0 + 408);
      v48 = *(_QWORD *)(v0 + 392);
      v76 = *(_QWORD *)(v0 + 376);
      swift_task_dealloc(*(_QWORD *)(v0 + 512));
      swift_task_dealloc(v41);
      swift_task_dealloc(v40);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v76);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v32 = v31;
  v33 = *(_QWORD *)(v0 + 344);
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setPlayActivityFeatureName:", v34);

  if (v33 >> 60 == 15)
    v35 = 0;
  else
    v35 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v32, "setPlayActivityRecommendationData:", v35);

  v73 = (_QWORD *)swift_task_alloc(dword_1011D869C);
  *(_QWORD *)(v0 + 536) = v73;
  *v73 = v0;
  v73[1] = sub_1009DA84C;
  return PlaybackController.insert(_:location:)((uint64_t)v32, 0);
}

uint64_t sub_1009DA84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009DAF9C;
  else
    v3 = sub_1009DA8B0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009DA8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_10004A160(*(_QWORD *)(v0 + 352), v0 + 176, &qword_1011D2F28);
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 552) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 568) = sub_100007E68((_QWORD *)(v0 + 176), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_10005B748(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009DAA74, v6, v7);
  }
  else
  {
    v9 = *(void **)(v0 + 528);
    v10 = *(void **)(v0 + 520);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

    sub_10004FF60(v0 + 176, &qword_1011D2F28);
    v11 = *(_QWORD *)(v0 + 480);
    v12 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 456);
    v13 = *(_QWORD *)(v0 + 464);
    v15 = *(_QWORD *)(v0 + 448);
    v16 = *(_QWORD *)(v0 + 432);
    v18 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009DAA74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[70];
  v2 = v0[69];
  v3 = v0[57];
  swift_release();
  sub_1009FF68C(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_1009DAAEC, 0, 0);
}

uint64_t sub_1009DAAEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 176));
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 448);
  v10 = *(_QWORD *)(v0 + 432);
  v12 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DABE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009DB204;
  else
    v3 = sub_1009DAC48;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009DAC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_10004A160(*(_QWORD *)(v0 + 352), v0 + 216, &qword_1011D2F28);
  v1 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 600) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 616) = sub_100007E68((_QWORD *)(v0 + 216), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_10005B748(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 624) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009DAE20, v6, v7);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 424);
    v9 = *(_QWORD *)(v0 + 432);
    v11 = *(_QWORD *)(v0 + 416);
    sub_10005B748(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
    sub_10004FF60(v0 + 216, &qword_1011D2F28);
    v12 = *(_QWORD *)(v0 + 480);
    v13 = *(_QWORD *)(v0 + 488);
    v15 = *(_QWORD *)(v0 + 456);
    v14 = *(_QWORD *)(v0 + 464);
    v16 = *(_QWORD *)(v0 + 448);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 392);
    v21 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009DAE20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[76];
  v2 = v0[75];
  v3 = v0[57];
  swift_release();
  sub_1009FF68C(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_1009DAE98, 0, 0);
}

uint64_t sub_1009DAE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_10005B748(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 216));
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 464);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 392);
  v14 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DAF9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(_QWORD *)(v0 + 544);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v26 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 296) = v5;
    swift_errorRetain(v5);
    v12 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v13 = (char *)String.init<A>(describing:)(v0 + 296, v12);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v14, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to Create Station with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  v15 = *(_QWORD *)(v0 + 480);
  v16 = *(_QWORD *)(v0 + 488);
  v18 = *(_QWORD *)(v0 + 456);
  v17 = *(_QWORD *)(v0 + 464);
  v19 = *(_QWORD *)(v0 + 448);
  v20 = *(_QWORD *)(v0 + 432);
  v22 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 408);
  v23 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DB204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_10005B748(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v4 = *(_QWORD *)(v0 + 592);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v5 = type metadata accessor for Logger(0);
  sub_100048B14(v5, (uint64_t)static Logger.actions);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v25 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 296) = v4;
    swift_errorRetain(v4);
    v11 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v12 = (char *)String.init<A>(describing:)(v0 + 296, v11);
    *(_QWORD *)(v9 + 4) = sub_10099627C(v12, v13, &v25);
    swift_bridgeObjectRelease();
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to Create Station with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  v14 = *(_QWORD *)(v0 + 480);
  v15 = *(_QWORD *)(v0 + 488);
  v17 = *(_QWORD *)(v0 + 456);
  v16 = *(_QWORD *)(v0 + 464);
  v18 = *(_QWORD *)(v0 + 448);
  v19 = *(_QWORD *)(v0 + 432);
  v21 = *(_QWORD *)(v0 + 400);
  v20 = *(_QWORD *)(v0 + 408);
  v22 = *(_QWORD *)(v0 + 392);
  v24 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DB478()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v0 + v4 + 8);
  if (v6 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + v4), v6);
  if (*(_QWORD *)(v0 + v5 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 40);
}

uint64_t sub_1009DB534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = *(_QWORD *)(v0 + v5);
  v10 = *(_QWORD *)(v0 + v6);
  v11 = *(_QWORD *)(v0 + v6 + 8);
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v7 + 8);
  v14 = v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)swift_task_alloc(dword_1011D4574);
  *(_QWORD *)(v1 + 16) = v15;
  *v15 = v1;
  v15[1] = sub_10005AEE4;
  return sub_1009D9F74(v8, v9, v10, v11, v12, v13, v14, v2);
}

uint64_t sub_1009DB614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009DB6C0, 0, 0);
}

uint64_t sub_1009DB6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10004A160(*(_QWORD *)(v0 + 96), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10005B6C0(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 4;
    *(_QWORD *)(v0 + 184) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009DB88C, v19, v20);
  }
}

uint64_t sub_1009DB88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D5478, 0, 0);
}

uint64_t sub_1009DB960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D4584);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009DB614(v7, v8, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ECF98, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x8000000100E4B1D0;
  v1 = swift_allocObject(&unk_1010ECFC0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4B1D0;
  return sub_10098C9EC;
}

uint64_t sub_1009DBAA4(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*sub_1009DBAC8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ED490, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x8000000100E4B1D0;
  v1 = swift_allocObject(&unk_1010ED4B8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4B1D0;
  return sub_10098C9EC;
}

uint64_t sub_1009DBB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 23, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D45C8, (uint64_t)&unk_1011D45D0, a2);
}

uint64_t sub_1009DBB6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_1009DBB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 40);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10006AEE4;
  return v6();
}

uint64_t sub_1009DBBE0(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 56);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5();
}

__n128 sub_1009DBC34@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[8];
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  v12 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_1009DF590((uint64_t *)v11, (uint64_t)v9);
  v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(_QWORD *)(a2 + 128) = v10;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t sub_1009DBCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  Swift::String v29;
  void *object;
  unint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  int v40;
  __n128 v41;
  char *v42;
  Swift::String v43;
  void *v44;
  __n128 v45;
  void (*v46)(char *, uint64_t, __n128);
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  __n128 v50;
  os_log_type_t v51;
  uint8_t *v52;
  __n128 v53;
  char *v54;
  Swift::String v55;
  void *v56;
  __n128 v57;
  void (*v58)(char *, uint64_t, __n128);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;

  v66 = a4;
  v67 = a2;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  v7 = __chkstk_darwin(v6);
  v61 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v63 = (char *)&v60 - v10;
  v11 = __chkstk_darwin(v9);
  v62 = (char *)&v60 - v12;
  v13 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011D45A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v60 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v60 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v60 - v26;
  sub_10004A160(a1, (uint64_t)v18, &qword_1011D45A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10004FF60((uint64_t)v18, &qword_1011D45A0);
    v68 = 0;
    v69 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    v28 = swift_bridgeObjectRelease(v69);
    v68 = 0xD000000000000022;
    v69 = 0x8000000100E4B2C0;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, v67, a3, v28);
    v29._countAndFlagsBits = String.init<A>(describing:)(v15, a3);
    object = v29._object;
    String.append(_:)(v29);
    swift_bridgeObjectRelease(object);
    return v68;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((sub_1009DC23C(v67, a3) & 1) == 0)
  {
    v31 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v31;
  }
  v32 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v33 = v25;
  v32(v25, v27, v19);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v34 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v35 = v64;
    v36 = v65;
    v37 = v62;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v62, v25, v65);
    v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v39 = v63;
    v38(v63, v37, v36);
    v40 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v39, v36);
    if (v40 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v40 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v68 = 0;
      v69 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      v41 = swift_bridgeObjectRelease(v69);
      v68 = 0xD000000000000018;
      v69 = 0x8000000100E4B310;
      v42 = v61;
      ((void (*)(char *, char *, uint64_t, __n128))v38)(v61, v37, v36, v41);
      v43._countAndFlagsBits = String.init<A>(describing:)(v42, v36);
      v44 = v43._object;
      String.append(_:)(v43);
      v45 = swift_bridgeObjectRelease(v44);
      v31 = v68;
      v46 = *(void (**)(char *, uint64_t, __n128))(v35 + 8);
      v46(v37, v36, v45);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      ((void (*)(char *, uint64_t))v46)(v39, v36);
      return v31;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v34 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    goto LABEL_16;
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v47 = type metadata accessor for Logger(0);
  v48 = sub_100048B14(v47, (uint64_t)static Logger.actions);
  v49 = Logger.logObject.getter(v48);
  v51 = static os_log_type_t.fault.getter(v50);
  if (os_log_type_enabled(v49, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v51, "Unknown playability status", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
  }

  v68 = 0;
  v69 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  v53 = swift_bridgeObjectRelease(v69);
  v68 = 0xD000000000000010;
  v69 = 0x8000000100E4B2F0;
  v54 = v60;
  ((void (*)(char *, char *, uint64_t, __n128))v32)(v60, v27, v19, v53);
  v55._countAndFlagsBits = String.init<A>(describing:)(v54, v19);
  v56 = v55._object;
  String.append(_:)(v55);
  v57 = swift_bridgeObjectRelease(v56);
  v31 = v68;
  v58 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
  v58(v27, v19, v57);
  ((void (*)(char *, uint64_t))v58)(v33, v19);
  return v31;
}

uint64_t sub_1009DC23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v24 = type metadata accessor for Station(0);
  v22 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast(v13, v16, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast(v8, v16, a2, v5, 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v18 = v23;
    v17 = v24;
    if (!swift_dynamicCast(v23, v16, a2, v24, 0))
    {
      v19 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v17);
  }
  v19 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v19;
}

uint64_t sub_1009DC420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[21] = v17;
  v8[22] = v18;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[23] = v9;
  v8[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[25] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[26] = swift_task_alloc(v11);
  v8[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[29] = v13;
  v8[30] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011D46E8);
  v8[31] = v14;
  v8[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D45A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v15);
  v8[34] = swift_task_alloc(v15);
  return swift_task_switch(sub_1009DC548, 0, 0);
}

uint64_t sub_1009DC548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  void *v35;
  NSString v36;
  Class isa;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v7 = v3 + *(int *)(v2 + 48);
  sub_10004A160(v6, v3, &qword_1011D45A0);
  sub_10004A160(v1, v7, &qword_1011D45A0);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v8(v3, 1, v4) != 1)
  {
    v10 = *(_QWORD *)(v0 + 224);
    sub_10004A160(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), &qword_1011D45A0);
    v11 = v8(v7, 1, v10);
    v12 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 272);
    if (v11 != 1)
    {
      v27 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 232);
      v28 = *(_QWORD *)(v0 + 240);
      v30 = *(_QWORD *)(v0 + 224);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v7, v30);
      v31 = sub_100048748(&qword_1011D46F0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&protocol conformance descriptor for MusicPlayer.PlayabilityStatus);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v28, v30, v31);
      v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v33(v28, v30);
      sub_10004FF60(v13, &qword_1011D45A0);
      v33(v12, v30);
      sub_10004FF60(v27, &qword_1011D45A0);
      if ((v32 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 40) = v17;
      *(_QWORD *)(v0 + 48) = *(_QWORD *)(v16 + 8);
      v19 = sub_100049F68((_QWORD *)(v0 + 16));
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v19, v18, v17);
      *(_BYTE *)(v0 + 56) = 0;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 16);
      sub_1002A4CE4(v0 + 16);
      v20 = *(_QWORD *)(v0 + 264);
      v21 = *(_QWORD *)(v0 + 256);
      v22 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 208);
      v23 = *(_QWORD *)(v0 + 216);
      v25 = *(_QWORD *)(v0 + 192);
      swift_task_dealloc(*(_QWORD *)(v0 + 272));
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 232);
    sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_1011D45A0);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 256), &qword_1011D46E8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(v0 + 224);
  sub_10004FF60(*(_QWORD *)(v0 + 272), &qword_1011D45A0);
  if (v8(v7, 1, v9) != 1)
    goto LABEL_6;
  sub_10004FF60(*(_QWORD *)(v0 + 256), &qword_1011D45A0);
LABEL_9:
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(void **)(v0 + 120);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setPlayActivityFeatureName:", v36);

  if (v34 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD **)(v0 + 192);
  v39 = *(int **)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(void **)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 112);
  v50 = *(_QWORD *)(v0 + 216);
  objc_msgSend(v44, "setPlayActivityRecommendationData:", isa);

  *v40 = v44;
  swift_storeEnumTagMultiPayload(v40, v41, 0);
  *(_QWORD *)(v0 + 88) = v43;
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v42 + 8);
  v45 = sub_100049F68((_QWORD *)(v0 + 64));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v45, v49, v43);
  v46 = v38 + v39[7];
  *(_QWORD *)(v46 + 32) = 0;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
  *(_BYTE *)(v38 + v39[8]) = 0;
  *(_BYTE *)(v38 + v39[9]) = 0;
  sub_1009DFAEC((uint64_t)v40, v38);
  v47 = v44;
  sub_1009DFB30(v0 + 64, v46);
  *(_QWORD *)(v38 + v39[5]) = 2;
  *(_QWORD *)(v38 + v39[6]) = 0;
  sub_10004FF60(v0 + 64, &qword_1011D8A40);
  sub_10005B748((uint64_t)v40, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_10005B6C0(v38, v50, type metadata accessor for PlaybackIntentDescriptor);
  v48 = (_QWORD *)swift_task_alloc(dword_1011D86D4);
  *(_QWORD *)(v0 + 280) = v48;
  *v48 = v0;
  v48[1] = sub_1009DC988;
  return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 216), 0);
}

uint64_t sub_1009DC988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 280));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_1009E0524;
  }
  else
  {
    v2 = sub_1009DC9F4;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1009DC9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10005B748(*(_QWORD *)(v0 + 216), type metadata accessor for PlaybackIntentDescriptor);
  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DCA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009DCB34, 0, 0);
}

uint64_t sub_1009DCB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10005B6C0(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009DCCF8, v19, v20);
  }
}

uint64_t sub_1009DCCF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 24, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D5E1C, 0, 0);
}

uint64_t sub_1009DCDC8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t DynamicType;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unint64_t v37;
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];

  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v16, v40, 0, 0);
  v17 = *v16;
  if (!v17)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    v29._countAndFlagsBits = 0xD000000000000025;
    v29._object = (void *)0x8000000100E4B260;
    String.append(_:)(v29);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(a2, a5);
    return (uint64_t)v36;
  }
  v33 = a6;
  v34 = a5;
  v38 = &type metadata for Player.InsertCommand;
  v39 = &protocol witness table for Player.InsertCommand;
  v36 = a4;
  v37 = (unint64_t)a3;
  v18 = sub_100007E68(&v36, (uint64_t)&type metadata for Player.InsertCommand);
  DynamicType = swift_getDynamicType(v18, &type metadata for Player.InsertCommand, 1);
  v20 = (uint64_t)v39;
  v21 = a4;
  sub_100149434(a3);
  v22 = v21;
  sub_100149434(a3);
  v23 = v22;
  sub_100149434(a3);
  swift_retain(v17);
  v24 = sub_100AEFA94(DynamicType, v20);
  if (!v24)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v36);

    sub_100823690(a3);
    goto LABEL_7;
  }
  v25 = (void *)v24;
  v26 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v36);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v36);
  sub_100823690(a3);
  if (!v26)
  {
LABEL_7:
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v30._object = (void *)0x8000000100E4B290;
    v30._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v30);
    v35 = a3;
    _print_unlocked<A, B>(_:_:)(&v35, &v36, &type metadata for Player.InsertCommand.Location, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);

    sub_100823690(a3);
    swift_release(v17);
    return (uint64_t)v36;
  }
  v27 = Player.state<A>(for:)(a2, v34, v33);
  MusicItemState.playabilityStatus.getter(v15);
  swift_release(v27);
  v28 = sub_1009D9D20();

  swift_release(v17);
  sub_100823690(a3);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  return v28;
}

uint64_t sub_1009DD078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = type metadata accessor for Notice(0);
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009DD0DC, 0, 0);
}

uint64_t sub_1009DD0DC()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  NSString v3;
  Class isa;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 64);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setPlayActivityFeatureName:", v3);

  if (v1 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(*(id *)(v0 + 64), "setPlayActivityRecommendationData:", isa);

  v5 = (_QWORD *)swift_task_alloc(dword_1011D869C);
  *(_QWORD *)(v0 + 136) = v5;
  *v5 = v0;
  v5[1] = sub_1009DD19C;
  return PlaybackController.insert(_:location:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112));
}

uint64_t sub_1009DD19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009DD39C;
  else
    v3 = sub_1009DD200;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009DD200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  sub_10004A160(*(_QWORD *)(v0 + 120), v0 + 16, &qword_1011D2F28);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 168) = sub_100007E68((_QWORD *)(v0 + 16), v1);
    Player.InsertCommand.Location.notice.getter(v2);
    v3 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009DD2F0, v5, v6);
  }
  else
  {
    sub_10004FF60(v0 + 16, &qword_1011D2F28);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009DD2F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[16];
  swift_release();
  sub_1009FF68C(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_1009DD360, 0, 0);
}

uint64_t sub_1009DD360()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DD39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 144);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136446210;
    *(_QWORD *)(v0 + 56) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v11 = (char *)String.init<A>(describing:)(v0 + 56, v10);
    *(_QWORD *)(v8 + 4) = sub_10099627C(v11, v12, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform add to queue with error=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.InsertCommand.Location.notice.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) >= 3)
    v6 = 3;
  else
    v6 = (a1 + 3);
  swift_storeEnumTagMultiPayload(v5, v3, v6);
  static Notice.variant(_:)((uint64_t)v5);
  return sub_10005B748((uint64_t)v5, type metadata accessor for Notice.Variant);
}

uint64_t sub_1009DD60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = sub_100007E8C(&qword_1011D2AE0);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2EB8);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[17] = v9;
  v5[18] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009DD6BC, 0, 0);
}

uint64_t sub_1009DD6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 120), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10005B6C0(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 152) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(_QWORD *)(v0 + 160) = v9;
    if (v8 >= 4)
    {
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E4B240, "MusicCore/Actions+Playback.swift", 32, 2, 443, 0);
    }
    else
    {
      *(_BYTE *)(v0 + 202) = 0x19041A1Bu >> (8 * v8);
      v10 = *(_QWORD *)(v0 + 112);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
      v13 = sub_100007E8C(&qword_1011D2F00);
      inited = swift_initStackObject(v13, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v11);
      *(_QWORD *)(inited + 40) = v15;
      *(_BYTE *)(inited + 48) = 0;
      *(_QWORD *)(v0 + 168) = sub_1009AF7AC(inited);
      *(_QWORD *)(v0 + 176) = v16;
      *(_QWORD *)(v0 + 184) = v17;
      *(_WORD *)(v0 + 200) = v18;
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v20);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      return swift_task_switch(sub_1009DD908, v21, v22);
    }
  }
}

uint64_t sub_1009DD908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int8 *)(v0 + 202);
  v9 = *(unsigned __int16 *)(v0 + 200);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, v8, v7, v3, v2, v1, v9, v6);
  sub_10056C15C(v3, v2, v1, v9, SBYTE1(v9));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009DD9E0, 0, 0);
}

uint64_t sub_1009DD9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005B748(*(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Play.Context.menuItemTitle.getter()
{
  return sub_1009D5590(2036427856, 0xE400000000000000);
}

uint64_t (*Actions.Play.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ECFE8, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1010ED010, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10098C9EC;
}

uint64_t sub_1009DDAC0(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 2036427856, 0xE400000000000000);
}

uint64_t (*sub_1009DDAD0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ED440, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1010ED468, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10098C9EC;
}

uint64_t Actions.Queue.Context.menuItemTitle.getter()
{
  uint64_t *v0;

  return sub_1009DF250(*v0);
}

uint64_t Actions.Queue.Context.menuItemSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t (*Actions.Queue.Context.menuItemImage.getter())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_1009CDD08(v0, &v6);
  sub_1009CDD08(&v6, &v7);
  if (v7)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (v7)
    v2 = 0x8000000100E495F0;
  else
    v2 = 0x8000000100E49640;
  v3 = swift_allocObject(&unk_1010ED038, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1010ED060, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_10098C9EC;
}

uint64_t (*sub_1009DDC50())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*v0)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (*v0)
    v2 = 0x8000000100E495F0;
  else
    v2 = 0x8000000100E49640;
  v3 = swift_allocObject(&unk_1010ED3F0, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1010ED418, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain(v2);
  return sub_10098C9EC;
}

uint64_t sub_1009DDD14@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EDC078);
  v5 = swift_getKeyPath(&unk_100EDC0A0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1009DDD90(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EDC078);
  v5 = swift_getKeyPath(&unk_100EDC0A0);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

double sub_1009DDE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_1009DDFF4();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_1009DDE58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v17[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    v12 = dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    __chkstk_darwin(v12);
    v13 = type metadata accessor for Song(0);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    KeyPath = swift_getKeyPath(&unk_100EDC240);
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    v15 = swift_getKeyPath(&unk_100EDC278);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    swift_retain(v11);
    static Published.subscript.setter(v7, v11, KeyPath, v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_1009DDFF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t (**v27)(char *, char *, uint64_t, __n128);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  char *v85;
  __n128 v86;
  uint64_t (**v87)(char *, char *, uint64_t, __n128);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, _QWORD, uint64_t);
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t (**v112)(char *, char *, uint64_t, __n128);
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  _QWORD *v118;
  id v119[3];

  v114 = type metadata accessor for Song(0);
  v112 = *(uint64_t (***)(char *, char *, uint64_t, __n128))(v114 - 8);
  __chkstk_darwin(v114);
  v111 = (char *)&v108 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v108 - v7;
  v9 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v115 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v116 = (char *)&v108 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v108 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v108 - v18;
  v118 = v0;
  v20 = v0[2];
  swift_retain(v20);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v21);
  v22 = swift_release(v20);
  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v117 = v19;
  v113 = v23;
  ((void (*)(char *, char *, uint64_t, __n128))v23)(v17, v19, v9, v22);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v17, v9);
  v25 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
  if ((_DWORD)v24 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v17, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v17, v2);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
    v26 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v8, v6);
    v27 = *(uint64_t (***)(char *, char *, uint64_t, __n128))(v3 + 8);
    ((void (*)(char *, uint64_t))v27)(v6, v2);
    v28 = v10;
    v29 = v8;
    v112 = v27;
    if ((v26 & 1) != 0)
    {
      v30 = v118[3];
      KeyPath = swift_getKeyPath(&unk_100EDC298);
      v32 = swift_getKeyPath(&unk_100EDC2C0);
      swift_retain(v30);
      static Published.subscript.getter(v119, v33, KeyPath, v32);
      swift_release(v30);
      swift_release(KeyPath);
      swift_release(v32);
      v34 = v119[0];

      if (v34)
      {
        v35 = v116;
        v36 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v28 + 104))(v116, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v9);
        __chkstk_darwin(v36);
        v37 = v114;
        *(&v108 - 2) = v114;
        *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
        v38 = swift_getKeyPath(&unk_100EDC1E8);
        __chkstk_darwin(v38);
        *(&v108 - 2) = v37;
        *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
        v39 = swift_getKeyPath(&unk_100EDC220);
        v40 = v115;
        v113(v115, v35, v9);
        v41 = v118;
        swift_retain(v118);
        static Published.subscript.setter(v40, v41, v38, v39);
        v42 = *(void (**)(char *, uint64_t))(v28 + 8);
        v42(v35, v9);
        ((void (*)(char *, uint64_t))v112)(v8, v2);
        v43 = v117;
        return ((uint64_t (*)(char *, uint64_t))v42)(v43, v9);
      }
    }
    v65 = v116;
    v17 = v117;
    v66 = v113;
    v67 = ((uint64_t (*)(char *, char *, uint64_t))v113)(v116, v117, v9);
    __chkstk_darwin(v67);
    v109 = v2;
    v68 = v66;
    v69 = v114;
    *(&v108 - 2) = v114;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v70 = swift_getKeyPath(&unk_100EDC1E8);
    v111 = v29;
    v71 = v28;
    __chkstk_darwin(v70);
    *(&v108 - 2) = v69;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v72 = swift_getKeyPath(&unk_100EDC220);
    v73 = v115;
    v68(v115, v65, v9);
    v74 = v118;
    swift_retain(v118);
    static Published.subscript.setter(v73, v74, v70, v72);
    v42 = *(void (**)(char *, uint64_t))(v71 + 8);
    v42(v65, v9);
    ((void (*)(char *, uint64_t))v112)(v111, v109);
LABEL_12:
    v43 = v17;
    return ((uint64_t (*)(char *, uint64_t))v42)(v43, v9);
  }
  v44 = v24;
  v110 = v10;
  if ((_DWORD)v24 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v75 = v113;
    v77 = v116;
    v76 = v117;
    v78 = ((uint64_t (*)(char *, char *, uint64_t))v113)(v116, v117, v9);
    __chkstk_darwin(v78);
    v79 = v114;
    *(&v108 - 2) = v114;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v80 = swift_getKeyPath(&unk_100EDC1E8);
    __chkstk_darwin(v80);
    *(&v108 - 2) = v79;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v81 = swift_getKeyPath(&unk_100EDC220);
    v82 = v115;
    v75(v115, v77, v9);
    v83 = v118;
    swift_retain(v118);
    static Published.subscript.setter(v82, v83, v80, v81);
    v42 = *(void (**)(char *, uint64_t))(v110 + 8);
    v42(v77, v9);
    v42(v76, v9);
    goto LABEL_12;
  }
  v109 = v2;
  v45 = v118;
  v46 = v118[3];
  v47 = swift_getKeyPath(&unk_100EDC298);
  v48 = swift_getKeyPath(&unk_100EDC2C0);
  swift_retain(v46);
  static Published.subscript.getter(v119, v49, v47, v48);
  swift_release(v46);
  swift_release(v47);
  swift_release(v48);
  v50 = v119[0];

  if (!v50)
    goto LABEL_9;
  v51 = v45[3];
  v52 = swift_getKeyPath(&unk_100EDC2E0);
  v53 = swift_getKeyPath(&unk_100EDC308);
  swift_retain(v51);
  static Published.subscript.getter(v119, v54, v52, v53);
  swift_release(v51);
  swift_release(v52);
  swift_release(v53);
  if (((uint64_t)v119[0] & 1) != 0
    || (v55 = v45[3],
        swift_retain(v55),
        v56 = Player.supportsDelegation.getter(),
        swift_release(v55),
        (v56 & 1) != 0))
  {
LABEL_9:
    v58 = v116;
    v57 = v117;
    v59 = v113;
    v60 = ((uint64_t (*)(char *, char *, uint64_t))v113)(v116, v117, v9);
    __chkstk_darwin(v60);
    v61 = v114;
    *(&v108 - 2) = v114;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v62 = swift_getKeyPath(&unk_100EDC1E8);
    __chkstk_darwin(v62);
    *(&v108 - 2) = v61;
    *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
    v63 = swift_getKeyPath(&unk_100EDC220);
    v64 = v115;
    v59(v115, v58, v9);
    swift_retain(v45);
    static Published.subscript.setter(v64, v45, v62, v63);
    v42 = *(void (**)(char *, uint64_t))(v110 + 8);
    v42(v58, v9);
    v43 = v57;
  }
  else
  {
    v85 = (char *)v45 + *(_QWORD *)(*v45 + 120);
    v86 = swift_beginAccess(v85, v119, 0, 0);
    v88 = v111;
    v87 = v112;
    v89 = v114;
    v90 = v112[2](v111, v85, v114, v86);
    Song.catalogID.getter(v90);
    v92 = v91;
    ((void (*)(char *, uint64_t))v87[1])(v88, v89);
    if (v92)
    {
      v93 = swift_bridgeObjectRelease(v92);
      v94 = v110;
      v95 = v116;
      v96 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v110 + 104))(v116, v44, v9, v93);
      __chkstk_darwin(v96);
      *(&v108 - 2) = v89;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v97 = swift_getKeyPath(&unk_100EDC1E8);
      __chkstk_darwin(v97);
      *(&v108 - 2) = v89;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v98 = swift_getKeyPath(&unk_100EDC220);
      v99 = v115;
      v113(v115, v95, v9);
      swift_retain(v45);
      static Published.subscript.setter(v99, v45, v97, v98);
      v42 = *(void (**)(char *, uint64_t))(v94 + 8);
      v42(v95, v9);
    }
    else
    {
      v100 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
      v101 = v89;
      v102 = v116;
      v100(v116, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v109);
      v103 = v110;
      v104 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 104))(v102, v25, v9);
      __chkstk_darwin(v104);
      *(&v108 - 2) = v101;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v105 = swift_getKeyPath(&unk_100EDC1E8);
      __chkstk_darwin(v105);
      *(&v108 - 2) = v101;
      *(&v108 - 1) = (uint64_t)&protocol witness table for Song;
      v106 = swift_getKeyPath(&unk_100EDC220);
      v107 = v115;
      v113(v115, v102, v9);
      swift_retain(v45);
      static Published.subscript.setter(v107, v45, v105, v106);
      v42 = *(void (**)(char *, uint64_t))(v103 + 8);
      v42(v102, v9);
    }
    v43 = v117;
  }
  return ((uint64_t (*)(_QWORD, _QWORD))v42)(v43, v9);
}

uint64_t sub_1009DE998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D45A0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v3, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v3, v7);
  v9 = (v3 + v12 + v5) & ~v5;
  v10 = v9 + v6;
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v9, v1);
  return swift_deallocObject(v0, v10);
}

unint64_t sub_1009DEA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_100007E8C(&qword_1011D45A0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1009DBCB8(v0 + v4, v0 + ((v4 + *(_QWORD *)(v3 + 64) + v5) & ~v5), v1, v2);
}

uint64_t sub_1009DEAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D45A0) - 8);
  v15 = v1;
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v15);

  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v0 + v7 + 8);
  if (v11 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + v7), v11);
  v12 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;

  return swift_deallocObject(v0, v13);
}

uint64_t sub_1009DEC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(sub_100007E8C(&qword_1011D45A0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = v0 + v4;
  v11 = v0 + v6;
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v8);
  v14 = *(_QWORD *)(v0 + v8 + 8);
  v15 = *(_QWORD *)(v0 + v9);
  v16 = *(_QWORD *)(v0 + v9 + 8);
  v17 = *(_QWORD *)(v0 + ((v9 + 23) & 0xFFFFFFFFFFFFF8));
  v18 = (_QWORD *)swift_task_alloc(dword_1011D45AC);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_10006AEE4;
  return sub_1009DC420(v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_1009DED40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D45BC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009DCA88(v7, v8, v2, v3);
}

uint64_t sub_1009DEDE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v6 = *(void **)(v0 + v5);
  if ((unint64_t)v6 >= 4)

  v7 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;

  return swift_deallocObject(v0, v8, v3 | 7);
}

uint64_t sub_1009DEE7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1009DCDC8(v0[4], (uint64_t)v0 + v3, *(void **)((char *)v0 + v4), *(void **)((char *)v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8)), v1, v0[3]);
}

uint64_t sub_1009DEEBC()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + 40), v1);

  v2 = *(void **)(v0 + 64);
  if ((unint64_t)v2 >= 4)

  if (*(_QWORD *)(v0 + 96))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 112);
}

uint64_t sub_1009DEF28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v9 = (_QWORD *)swift_task_alloc(dword_1011D45DC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009DD078(v2, v3, v4, v5, v6, v7, v8, (uint64_t)(v0 + 9));
}

uint64_t sub_1009DEFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v3;
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v17 = v1;
    if (*(_QWORD *)(v7 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v9 + *(int *)(v10 + 24);
      v12 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v12 - 8);
      v16 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v15 + 48))(v11, 1))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v17;
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);
  v13 = *(void **)(v0 + v6);
  if ((unint64_t)v13 >= 4)

  return swift_deallocObject(v0, v6 + 8);
}

uint64_t sub_1009DF194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v5;
  v9 = v0 + v7;
  v10 = *(_QWORD *)(v0 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1011D45EC);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10006AEE4;
  return sub_1009DD60C(v8, v9, v10, v2, v3);
}

uint64_t sub_1009DF250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1 == 3)
  {
    v12 = 0x7466412079616C50;
    v13 = 0xEA00000000007265;
  }
  else if (a1 == 2)
  {
    v12 = 0x51206F7420646441;
    v13 = 0xEC00000065756575;
  }
  else
  {
    if (a1)
      v12 = 0x73614C2079616C50;
    else
      v12 = 0x78654E2079616C50;
    v13 = 0xE900000000000074;
  }
  String.LocalizationValue.init(stringLiteral:)(v12, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v14 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t _s9MusicCore7ActionsO7PreviewO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E4B1F0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

void sub_1009DF590(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[16];
  uint64_t v16;
  unint64_t v17;

  v4 = *a1;
  v5 = (uint64_t)(a1 + 1);
  v6 = a1[1];
  v7 = a1[2];
  v13 = *(_OWORD *)(a1 + 5);
  v14 = *(_OWORD *)(a1 + 3);
  v12 = *(_OWORD *)(a1 + 7);
  sub_1009CDD08(a1, &v16);
  sub_1009CDD08(&v16, &v17);
  if (v17 >= 4)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E4B240, "MusicCore/Actions+Playback.swift", 32, 2, 218, 0);
    __break(1u);
  }
  else
  {
    v8 = 0x22232021u >> (8 * v17);
    sub_100065228(v5, (uint64_t)v15, &qword_1011D3FC8);
    v9 = a1[4];
    v10 = a1[6];
    v11 = a1[8];
    sub_100055CE4((uint64_t)v15);
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v7;
    *(_OWORD *)(a2 + 24) = v14;
    *(_OWORD *)(a2 + 40) = v13;
    *(_OWORD *)(a2 + 56) = v12;
    *(_BYTE *)(a2 + 72) = v8;
    *(_QWORD *)(a2 + 80) = sub_1009DBB6C;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0x4014000000000000;
    *(_QWORD *)(a2 + 104) = &unk_1011D46D8;
    *(_QWORD *)(a2 + 112) = 0;
    *(_QWORD *)(a2 + 120) = &unk_1011D46E0;
    *(_QWORD *)(a2 + 128) = 0;
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v11);
  }
}

uint64_t sub_1009DF700()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009DF728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D45FC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009D8DD4(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.Preview()
{
  return &type metadata for Actions.Preview;
}

ValueMetadata *type metadata accessor for Actions.Preview.Context()
{
  return &type metadata for Actions.Preview.Context;
}

ValueMetadata *type metadata accessor for Actions.CreateStation()
{
  return &type metadata for Actions.CreateStation;
}

ValueMetadata *type metadata accessor for Actions.CreateStation.Context()
{
  return &type metadata for Actions.CreateStation.Context;
}

ValueMetadata *type metadata accessor for Actions.Play()
{
  return &type metadata for Actions.Play;
}

ValueMetadata *type metadata accessor for Actions.Play.Context()
{
  return &type metadata for Actions.Play.Context;
}

ValueMetadata *type metadata accessor for Actions.Queue()
{
  return &type metadata for Actions.Queue;
}

uint64_t _s5QueueO7ContextVwxx(uint64_t a1)
{
  if (*(_QWORD *)a1 >= 4uLL)

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  return swift_release(*(_QWORD *)(a1 + 64));
}

uint64_t _s5QueueO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 >= 4uLL)
    v5 = v4;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v10;
  v8 = *(_QWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRetain(v7);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v8);
  return a1;
}

uint64_t _s5QueueO7ContextVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(_QWORD *)a1 = v5;
      v7 = v5;

      goto LABEL_8;
    }

    v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(_QWORD *)a1 = v5;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;
LABEL_8:
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v13);
  v15 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v14;
  swift_retain(v14);
  swift_release(v16);
  return a1;
}

__n128 _s5QueueO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5QueueO7ContextVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)a2;
  if (*(_QWORD *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(_QWORD *)a1 = v5;

      goto LABEL_6;
    }

  }
  *(_QWORD *)a1 = v5;
LABEL_6:
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 32));
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release(v7);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.Queue.Context()
{
  return &type metadata for Actions.Queue.Context;
}

uint64_t sub_1009DFAC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009DFAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009DFB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D8A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1009DFB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  id v134[4];

  v4 = v3;
  v119 = a3;
  v128 = a2;
  v129 = a1;
  v5 = sub_100007E8C(&qword_1011D4718);
  v121 = *(_QWORD *)(v5 - 8);
  v122 = v5;
  __chkstk_darwin(v5);
  v120 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011D9810);
  v124 = *(_QWORD *)(v7 - 8);
  v125 = v7;
  __chkstk_darwin(v7);
  v123 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011DB8A0);
  __chkstk_darwin(v9);
  v126 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011D4720);
  v127 = *(_QWORD **)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D4728);
  v13 = *(_QWORD *)(v12 - 8);
  v116 = v12;
  v117 = v13;
  __chkstk_darwin(v12);
  v114 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C((uint64_t *)&unk_1011D8E90);
  v111 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v110 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v16 = *(_QWORD *)(v109 - 8);
  v17 = __chkstk_darwin(v109);
  v108 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v106 - v19;
  v107 = sub_100007E8C((uint64_t *)&unk_1011D8E80);
  v21 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v106 - v29;
  v4[4] = _swiftEmptyArrayStorage;
  v112 = v4 + 4;
  v31 = (char *)v4 + *(_QWORD *)(*v4 + 128);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))((char *)&v106 - v29, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v24);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
  Published.init(initialValue:)(v28, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v31, v23, v107);
  v32 = (char *)v4 + *(_QWORD *)(*v4 + 136);
  v33 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v34 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v20, v33, v34);
  v35 = v109;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v109);
  v36 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v37 = v16;
  v38 = v108;
  v36(v108, v20, v35);
  v39 = v110;
  Published.init(initialValue:)(v38, v35);
  v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v20, v35);
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v32, v39, v118);
  v41 = (char *)v4 + *(_QWORD *)(*v4 + 120);
  v42 = type metadata accessor for Song(0);
  v118 = *(_QWORD *)(v42 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v41, v129, v42);
  v43 = v119;
  v44 = v128;
  v4[2] = v128;
  v4[3] = v43;
  swift_retain(v43);
  swift_retain(v44);
  v45 = sub_1009DDFF4();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter(v45);
  v132 = v42;
  v133 = &protocol witness table for Song;
  KeyPath = swift_getKeyPath(&unk_100EDC240);
  v119 = v42;
  v130 = v42;
  v131 = &protocol witness table for Song;
  v47 = swift_getKeyPath(&unk_100EDC278);
  v36(v38, v20, v35);
  swift_retain(v4);
  static Published.subscript.setter(v38, v4, KeyPath, v47);
  v48 = ((uint64_t (*)(char *, uint64_t))v40)(v20, v35);
  v49 = v113;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter(v48);
  v50 = sub_1009E0478();
  v134[0] = (id)static OS_dispatch_queue.main.getter(v50, v51, v52, v53, v54, v55, v56, v57);
  v58 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
  v60 = v126;
  v59(v126, 1, 1, v58);
  v61 = sub_100049F28((unint64_t *)&unk_1011D9820, &qword_1011D4720, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v62 = sub_100048748((unint64_t *)&qword_1011D8E20, (uint64_t (*)(uint64_t))sub_1009E0478, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v63 = v114;
  v64 = v60;
  v65 = (uint64_t)v60;
  v66 = v115;
  Publisher.receive<A>(on:options:)(v134, v64, v115, v50, v61, v62);
  sub_10004FF60(v65, (uint64_t *)&unk_1011DB8A0);

  ((void (*)(char *, uint64_t))v127[1])(v49, v66);
  v67 = swift_allocObject(&unk_1010ED530, 24, 7);
  v127 = v4;
  swift_weakInit(v67 + 16, v4);
  v68 = sub_100049F28(&qword_1011D4730, &qword_1011D4728, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v69 = v116;
  v70 = v63;
  v71 = Publisher<>.sink(receiveValue:)(sub_1009E04D8, v67, v116, v68);
  v72 = swift_release(v67);
  v73 = v112;
  (*(void (**)(char *, uint64_t, __n128))(v117 + 8))(v70, v69, v72);
  swift_beginAccess(v73, v134, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
  v76 = *(_QWORD *)((*v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v75 = *(_QWORD *)((*v73 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v76 >= v75 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
  v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v71);
  specialized Array._endMutation()(v77);
  v78 = swift_endAccess(v134);
  v79 = v73;
  v80 = v120;
  v81 = v128;
  v82 = dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter(v78);
  v134[0] = (id)static OS_dispatch_queue.main.getter(v82, v83, v84, v85, v86, v87, v88, v89);
  v90 = (uint64_t)v126;
  v59(v126, 1, 1, v58);
  v91 = sub_100049F28(qword_1011D9830, &qword_1011D4718, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v92 = v122;
  v93 = v123;
  Publisher.receive<A>(on:options:)(v134, v90, v122, v50, v91, v62);
  sub_10004FF60(v90, (uint64_t *)&unk_1011DB8A0);

  (*(void (**)(char *, uint64_t))(v121 + 8))(v80, v92);
  v94 = swift_allocObject(&unk_1010ED530, 24, 7);
  v95 = v127;
  swift_weakInit(v94 + 16, v127);
  v96 = swift_allocObject(&unk_1010ED558, 32, 7);
  *(_QWORD *)(v96 + 16) = v94;
  *(_QWORD *)(v96 + 24) = v81;
  v97 = sub_100049F28(&qword_1011D4738, (uint64_t *)&unk_1011D9810, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v81);
  v98 = v125;
  v99 = Publisher<>.sink(receiveValue:)(sub_1009E050C, v96, v125, v97);
  v100 = swift_release(v96);
  (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v93, v98, v100);
  swift_beginAccess(v79, v134, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v101);
  v103 = *(_QWORD *)((v95[4] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v102 = *(_QWORD *)((v95[4] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v103 >= v102 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v102 > 1, v103 + 1, 1);
  v104 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v103, v99);
  specialized Array._endMutation()(v104);
  swift_endAccess(v134);
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v129, v119);
  return v127;
}

uint64_t sub_1009E0440()
{
  return 16;
}

__n128 sub_1009E044C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1009E0460()
{
  return 16;
}

__n128 sub_1009E046C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1009E0478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6190;
  if (!qword_1011D6190)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D6190);
  }
  return result;
}

uint64_t sub_1009E04B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1009E04D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1009DDE04(a1, v1);
}

uint64_t sub_1009E04E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009E050C(uint64_t a1)
{
  uint64_t v1;

  return sub_1009DDE58(a1, *(_QWORD *)(v1 + 16));
}

double Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  sub_1009F2FBC(a1, a2, a3, a4, (unint64_t (**)())v9);
  v6 = v9[1];
  *a5 = v9[0];
  a5[1] = v6;
  result = *(double *)&v10;
  v8 = v11;
  a5[2] = v10;
  a5[3] = v8;
  return result;
}

__n128 static Actions.Share.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v7 = a1[7];
  v10 = *(_OWORD *)(a1 + 1);
  v11 = *((_OWORD *)a1 + 3);
  v6 = v11;
  swift_retain(v10);
  v9 = *(__n128 *)(a1 + 3);
  swift_retain(a1[3]);
  swift_retain(v5);
  sub_100055CE4((uint64_t)&v11);
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v10;
  result = v9;
  *(__n128 *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v7;
  *(_BYTE *)(a2 + 64) = 42;
  *(_QWORD *)(a2 + 72) = sub_10098CA8C;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1011D4758;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1011D4760;
  *(_QWORD *)(a2 + 120) = 0;
  return result;
}

uint64_t Actions.Share.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t Actions.Share.Context.menuItemTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

double (*Actions.Share.Context.menuItemTitle.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t sub_1009E06D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v2;
  *(_QWORD *)(a2 + 56) = v4;
  *(_BYTE *)(a2 + 64) = 42;
  *(_QWORD *)(a2 + 72) = sub_10098CA8C;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_1011D4758;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_1011D4760;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t (*Actions.Share.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010ED5C0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x8000000100E2F3F0;
  v1 = swift_allocObject(&unk_1010ED5E8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x8000000100E2F3F0;
  return sub_10098C424;
}

uint64_t (*sub_1009E07FC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EDDD8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x8000000100E2F3F0;
  v1 = swift_allocObject(&unk_1010EDE00, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x8000000100E2F3F0;
  return sub_10098C9EC;
}

uint64_t sub_1009E0880(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v5;
  v2[6] = v6;
  return swift_task_switch(sub_1009E08EC, v5, v6);
}

uint64_t sub_1009E08EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_1009E096C;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[3], v2, v3);
}

uint64_t sub_1009E096C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_1009E09B8, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1009E09B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t (**a6)()@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  unint64_t (*v27)();
  unint64_t (*v28)();
  uint64_t result;
  uint64_t v30;
  __int128 v31[2];

  v12 = sub_100007E8C(&qword_1011D2EB8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C78((uint64_t)a1, (uint64_t)v31);
  v16 = swift_allocObject(&unk_1010ED610, 64, 7);
  *(_QWORD *)(v16 + 16) = a2;
  sub_100064C48(v31, v16 + 24);
  v17 = (unint64_t (*)())swift_allocObject(&unk_1010ED638, 48, 7);
  *((_QWORD *)v17 + 2) = sub_1009F3264;
  *((_QWORD *)v17 + 3) = v16;
  *((_QWORD *)v17 + 4) = a3;
  *((_QWORD *)v17 + 5) = a4;
  sub_10004A160(a5, (uint64_t)v15, &qword_1011D2EB8);
  sub_100064C78((uint64_t)a1, (uint64_t)v31);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_1010ED660, v20 + 40, v18 | 7);
  sub_10098C5E8((uint64_t)v15, v21 + v19);
  sub_100064C48(v31, v21 + v20);
  v22 = a1[3];
  v23 = a1[4];
  sub_100007E68(a1, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v23 + 32);
  v25 = swift_retain(v16);
  v26 = v24(v22, v23, v25);
  v28 = v27;
  sub_10004FF60(a5, &qword_1011D2EB8);
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  *a6 = sub_1009F3264;
  a6[1] = (unint64_t (*)())v16;
  a6[2] = (unint64_t (*)())&unk_1011D4770;
  a6[3] = v17;
  a6[4] = (unint64_t (*)())&unk_1011D4780;
  a6[5] = (unint64_t (*)())v21;
  a6[6] = (unint64_t (*)())v26;
  a6[7] = v28;
  return result;
}

unint64_t sub_1009E0BB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[40];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[16];

  v4 = sub_100007E8C(&qword_1011D6830);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Playlist(0);
  v45 = *(_QWORD *)(v46 - 8);
  v7 = __chkstk_darwin(v46);
  v43 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v44 = (char *)&v42 - v9;
  v10 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EDC330);
  v14 = swift_getKeyPath(&unk_100EDC358);
  static Published.subscript.getter(v51, a1, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  v15 = BYTE1(v51[0]);
  v16 = v51[3];
  v17 = v51[4];
  v18 = v51[7];
  v19 = v51[9];
  v20 = (void *)v51[10];
  v21 = v51[12];
  swift_bridgeObjectRelease(v51[14]);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);

  if (v15 != 1)
    return 0xD000000000000016;
  v22 = a2[3];
  v23 = a2[4];
  sub_100007E68(a2, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v24 = type metadata accessor for URL(0);
  LODWORD(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24);
  sub_10004FF60((uint64_t)v12, &qword_1011D2AE0);
  sub_100064C78((uint64_t)a2, (uint64_t)v51);
  if ((_DWORD)v22 != 1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v51);
    return 0;
  }
  sub_100064C78((uint64_t)v51, (uint64_t)v47);
  v25 = sub_100007E8C(&qword_1011D4140);
  v26 = sub_100007E8C(&qword_1011D3850);
  if (swift_dynamicCast(&v48, v47, v25, v26, 6))
  {
    v27 = *((_QWORD *)&v49 + 1);
    v28 = v50;
    sub_100007E68(&v48, *((uint64_t *)&v49 + 1));
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    v30 = v29;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v51);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v48);
    if (v30)
    {
      swift_bridgeObjectRelease(v30);
      return 0;
    }
  }
  else
  {
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v51);
    sub_10004FF60((uint64_t)&v48, (uint64_t *)&unk_1011D9690);
  }
  sub_100064C78((uint64_t)a2, (uint64_t)&v48);
  v32 = v46;
  v33 = swift_dynamicCast(v6, &v48, v25, v46, 6);
  v34 = v45;
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  if ((v33 & 1) == 0)
  {
    v35(v6, 1, 1, v32);
    sub_10004FF60((uint64_t)v6, &qword_1011D6830);
    return 0xD000000000000023;
  }
  v35(v6, 0, 1, v32);
  v36 = v44;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v44, v6, v32);
  v37 = Playlist.isShareable.getter();
  v38 = v43;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v43, v36, v32);
  if ((v37 & 1) != 0)
  {
    v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v39(v38, v32);
    v39(v36, v32);
    return 0;
  }
  v40 = Playlist.canMakeShareable.getter();
  v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v38, v32);
  if ((v40 & 1) != 0)
  {
    v41(v36, v32);
    return 0;
  }
  v41(v36, v32);
  return 0xD000000000000021;
}

uint64_t Playlist.isShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  unsigned int v39;
  _BYTE *v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v42;
  _BYTE *v43;
  _QWORD *v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  void (*v60)(_BYTE *, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_BYTE *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[4];
  int v72;
  _QWORD *v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  void (*v75)(_BYTE *, _QWORD, uint64_t);
  void (*v76)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  void (*v88)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v89;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v78 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = sub_100007E8C(&qword_1011D3620);
  v5 = __chkstk_darwin(v86);
  v82 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v8 = &v71[-v7];
  v9 = sub_100007E8C(&qword_1011D34C0);
  v10 = __chkstk_darwin(v9);
  v84 = &v71[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v10);
  v85 = &v71[-v13];
  v14 = __chkstk_darwin(v12);
  v83 = &v71[-v15];
  v16 = __chkstk_darwin(v14);
  v80 = &v71[-v17];
  v18 = __chkstk_darwin(v16);
  v20 = &v71[-v19];
  __chkstk_darwin(v18);
  v22 = &v71[-v21];
  v23 = type metadata accessor for Playlist(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v87 = &v71[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __chkstk_darwin(v25);
  v89 = &v71[-v28];
  v29 = __chkstk_darwin(v27);
  v31 = &v71[-v30];
  v32 = Playlist.isPublic.getter(v29);
  v88 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16);
  v33 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v88)(v31, v1, v23);
  if ((v32 & 1) != 0)
  {
    v38 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
    v38(v31, v23);
    goto LABEL_6;
  }
  v77 = v24;
  v79 = v23;
  v81 = v1;
  Playlist.variant.getter(v33);
  v75 = (void (*)(_BYTE *, _QWORD, uint64_t))v3[13];
  v75(v20, enum case for Playlist.Variant.subscribed(_:), v2);
  v76 = (void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v3[7];
  v76(v20, 0, 1, v2);
  v34 = (uint64_t)&v8[*(int *)(v86 + 48)];
  sub_10004A160((uint64_t)v22, (uint64_t)v8, &qword_1011D34C0);
  sub_10004A160((uint64_t)v20, v34, &qword_1011D34C0);
  v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  v36 = v35((uint64_t)v8, 1, v2);
  v37 = (uint64_t)v8;
  v73 = v3;
  if (v36 == 1)
  {
    sub_10004FF60((uint64_t)v20, &qword_1011D34C0);
    sub_10004FF60((uint64_t)v22, &qword_1011D34C0);
    v38 = *(void (**)(_BYTE *, uint64_t))(v77 + 8);
    v38(v31, v79);
    v39 = v35(v34, 1, v2);
    v40 = v85;
    if (v39 == 1)
    {
      sub_10004FF60(v37, &qword_1011D34C0);
      v1 = v81;
      v23 = v79;
LABEL_6:
      v41 = v88;
      v42 = v89;
      v88(v89, v1, v23);
LABEL_7:
      v38(v42, v23);
LABEL_8:
      v43 = v87;
      v41(v87, v1, v23);
LABEL_9:
      v38(v43, v23);
      return 1;
    }
    v74 = v35;
    v50 = v81;
    v41 = v88;
    v42 = v89;
    v51 = (uint64_t)v83;
    v49 = v79;
    goto LABEL_15;
  }
  v45 = v3;
  v46 = v80;
  sub_10004A160((uint64_t)v8, (uint64_t)v80, &qword_1011D34C0);
  v47 = v35(v34, 1, v2);
  v48 = v77;
  v74 = v35;
  if (v47 == 1)
  {
    sub_10004FF60((uint64_t)v20, &qword_1011D34C0);
    sub_10004FF60((uint64_t)v22, &qword_1011D34C0);
    v38 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
    v49 = v79;
    v38(v31, v79);
    ((void (*)(_BYTE *, uint64_t))v45[1])(v46, v2);
    v50 = v81;
    v41 = v88;
    v42 = v89;
    v51 = (uint64_t)v83;
    v40 = v85;
LABEL_15:
    sub_10004FF60(v37, &qword_1011D3620);
    v52 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v42, v50, v49);
    v23 = v49;
    goto LABEL_16;
  }
  v57 = v46;
  v58 = v78;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v45[4])(v78, v34, v2);
  v59 = sub_100048748((unint64_t *)&qword_1011D6160, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v72 = dispatch thunk of static Equatable.== infix(_:_:)(v57, v58, v2, v59);
  v60 = (void (*)(_BYTE *, uint64_t))v45[1];
  v60(v58, v2);
  sub_10004FF60((uint64_t)v20, &qword_1011D34C0);
  sub_10004FF60((uint64_t)v22, &qword_1011D34C0);
  v38 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
  v61 = v31;
  v62 = v79;
  v38(v61, v79);
  v60(v57, v2);
  v63 = v37;
  v23 = v62;
  sub_10004FF60(v63, &qword_1011D34C0);
  v41 = v88;
  v42 = v89;
  v1 = v81;
  v52 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v88)(v89, v81, v62);
  v51 = (uint64_t)v83;
  v40 = v85;
  if ((v72 & 1) != 0)
    goto LABEL_7;
LABEL_16:
  Playlist.variant.getter(v52);
  v75(v40, enum case for Playlist.Variant.admin(_:), v2);
  v76(v40, 0, 1, v2);
  v53 = v82;
  v54 = (uint64_t)&v82[*(int *)(v86 + 48)];
  sub_10004A160(v51, (uint64_t)v82, &qword_1011D34C0);
  sub_10004A160((uint64_t)v40, v54, &qword_1011D34C0);
  v55 = v74;
  if (v74((uint64_t)v53, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v40, &qword_1011D34C0);
    sub_10004FF60(v51, &qword_1011D34C0);
    v38(v42, v23);
    if (v55(v54, 1, v2) == 1)
    {
      sub_10004FF60((uint64_t)v53, &qword_1011D34C0);
      v1 = v81;
      goto LABEL_8;
    }
    goto LABEL_21;
  }
  sub_10004A160((uint64_t)v53, (uint64_t)v84, &qword_1011D34C0);
  if (v55(v54, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v40, &qword_1011D34C0);
    sub_10004FF60(v51, &qword_1011D34C0);
    v38(v42, v23);
    ((void (*)(_BYTE *, uint64_t))v73[1])(v84, v2);
LABEL_21:
    sub_10004FF60((uint64_t)v53, &qword_1011D3620);
    v43 = v87;
    v56 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v87, v81, v23);
    goto LABEL_25;
  }
  v64 = v73;
  v65 = v78;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v73[4])(v78, v54, v2);
  v66 = sub_100048748((unint64_t *)&qword_1011D6160, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  LODWORD(v88) = dispatch thunk of static Equatable.== infix(_:_:)(v84, v65, v2, v66);
  v67 = v51;
  v68 = (void (*)(_BYTE *, uint64_t))v64[1];
  v68(v65, v2);
  sub_10004FF60((uint64_t)v85, &qword_1011D34C0);
  sub_10004FF60(v67, &qword_1011D34C0);
  v38(v89, v23);
  v68(v84, v2);
  sub_10004FF60((uint64_t)v53, &qword_1011D34C0);
  v43 = v87;
  v56 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v87, v81, v23);
  if ((v88 & 1) != 0)
    goto LABEL_9;
LABEL_25:
  Playlist.catalogID.getter(v56);
  v70 = v69;
  v38(v43, v23);
  if (!v70)
    return 0;
  swift_bridgeObjectRelease(v70);
  return 1;
}

uint64_t Playlist.canMakeShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;

  v65 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v59 = (char *)&v59 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011D3620);
  __chkstk_darwin(v62);
  v64 = (uint64_t)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C(&qword_1011D34C0);
  v3 = __chkstk_darwin(v2);
  v60 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v69 = (char *)&v59 - v6;
  __chkstk_darwin(v5);
  v70 = (char *)&v59 - v7;
  v8 = type metadata accessor for Playlist.EditableComponents(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v61 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011D6C10);
  __chkstk_darwin(v10);
  v66 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v71 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v59 - v16;
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v18 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDC330);
  v20 = swift_getKeyPath(&unk_100EDC358);
  static Published.subscript.getter(&v73, v18, KeyPath, v20);
  swift_release(KeyPath);
  swift_release(v20);
  v21 = v74;
  v22 = v75;
  v23 = v76;
  v24 = v77;
  v26 = v78;
  v25 = v79;
  v27 = v80;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v26);

  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v29 = v28(v17, v72, v12);
  v30 = v12;
  v31 = v17;
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
LABEL_15:
    v44 = 0;
    return v44 & 1;
  }
  v72 = v13;
  v32 = (uint64_t)v66;
  Playlist.editableComponents.getter(v29);
  v34 = v67;
  v33 = v68;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v32, 1, v68) == 1)
  {
    sub_10004FF60(v32, (uint64_t *)&unk_1011D6C10);
    v35 = v71;
    v36 = v28(v71, (uint64_t)v31, v30);
    v38 = (uint64_t)v69;
    v37 = (uint64_t)v70;
    goto LABEL_9;
  }
  v39 = v61;
  static Playlist.EditableComponents.tracklist.getter();
  v40 = sub_100048748((unint64_t *)&qword_1011D34B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v41 = dispatch thunk of SetAlgebra.isSuperset(of:)(v39, v33, v40);
  v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v39, v33);
  v42((char *)v32, v33);
  v35 = v71;
  v36 = v28(v71, (uint64_t)v31, v30);
  v38 = (uint64_t)v69;
  v37 = (uint64_t)v70;
  if ((v41 & 1) == 0)
  {
LABEL_9:
    v70 = v31;
    Playlist.variant.getter(v36);
    v45 = v63;
    v46 = v65;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v38, enum case for Playlist.Variant.favoriteSongs(_:), v65);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v46);
    v47 = v64;
    v48 = v64 + *(int *)(v62 + 48);
    sub_10004A160(v37, v64, &qword_1011D34C0);
    sub_10004A160(v38, v48, &qword_1011D34C0);
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v49(v47, 1, v46) == 1)
    {
      sub_10004FF60(v38, &qword_1011D34C0);
      sub_10004FF60(v37, &qword_1011D34C0);
      v50 = *(void (**)(char *, uint64_t))(v72 + 8);
      v50(v35, v30);
      v50(v70, v30);
      if (v49(v48, 1, v46) == 1)
      {
        sub_10004FF60(v47, &qword_1011D34C0);
        v44 = 1;
        return v44 & 1;
      }
    }
    else
    {
      v51 = v60;
      sub_10004A160(v47, v60, &qword_1011D34C0);
      if (v49(v48, 1, v46) != 1)
      {
        v54 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v59, v48, v46);
        v55 = sub_100048748((unint64_t *)&qword_1011D6160, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v56 = v51;
        v44 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v54, v46, v55);
        v57 = *(void (**)(char *, uint64_t))(v45 + 8);
        v57(v54, v46);
        sub_10004FF60(v38, &qword_1011D34C0);
        sub_10004FF60(v37, &qword_1011D34C0);
        v58 = *(void (**)(char *, uint64_t))(v72 + 8);
        v58(v71, v30);
        v58(v70, v30);
        v57((char *)v56, v46);
        sub_10004FF60(v47, &qword_1011D34C0);
        return v44 & 1;
      }
      sub_10004FF60(v38, &qword_1011D34C0);
      sub_10004FF60(v37, &qword_1011D34C0);
      v52 = *(void (**)(char *, uint64_t))(v72 + 8);
      v52(v71, v30);
      v52(v70, v30);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v46);
    }
    sub_10004FF60(v47, &qword_1011D3620);
    goto LABEL_15;
  }
  v43 = *(void (**)(char *, uint64_t))(v72 + 8);
  v43(v35, v30);
  v43(v31, v30);
  v44 = 1;
  return v44 & 1;
}

uint64_t sub_1009E1E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v7;
  v4[8] = v8;
  return swift_task_switch(sub_1009E1ED4, v7, v8);
}

uint64_t sub_1009E1ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  __n128 v10;
  uint64_t (*v12)(void);

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if (v2 == 1)
  {
    v3 = *(int **)(v0 + 32);
    v12 = (uint64_t (*)(void))((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc(v3[1]);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_1009E1F94;
    v5 = v12;
  }
  else
  {
    v6 = v1;
    v7 = v2;
    swift_release();
    v8 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v8, 0, 0);
    *v9 = v6;
    v9[1] = v7;
    swift_willThrow(v10);
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_1009E1F94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009E2028;
  else
    v4 = sub_1009E1FF4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1009E1FF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E2028()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E205C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D2EB8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E2104, 0, 0);
}

uint64_t sub_1009E2104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 96), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 80);
    sub_1002ED50C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = v8[3];
    sub_100007E68(v8, v9);
    *(_QWORD *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 136) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    v14 = v8[3];
    sub_100007E68(v8, v14);
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v14);
    *(_QWORD *)(inited + 40) = v15;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 152) = v16;
    *(_QWORD *)(v0 + 160) = v17;
    *(_WORD *)(v0 + 176) = v18;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v19 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v20);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009E22E8, v21, v22);
  }
}

uint64_t sub_1009E22E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 35, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009F3B24, 0, 0);
}

double static Actions.ShareLyrics.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 43;
  *(_QWORD *)(a2 + 56) = sub_10098CA8C;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_1011D4788;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_1011D4790;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;

  v14 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (*(_QWORD *)(v14 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1010ED688, v17 + 40, v15 | 7);
  sub_10098C5E8(a6, v18 + v16);
  result = sub_100064C48(a1, v18 + v17);
  *a7 = a2;
  a7[1] = a3;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = &unk_1011D47A0;
  a7[5] = v18;
  return result;
}

uint64_t sub_1009E250C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D2EB8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E25B4, 0, 0);
}

uint64_t sub_1009E25B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 96), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 80);
    sub_1002ED50C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = v8[3];
    sub_100007E68(v8, v9);
    *(_QWORD *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 136) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    v14 = v8[3];
    sub_100007E68(v8, v14);
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v14);
    *(_QWORD *)(inited + 40) = v15;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 152) = v16;
    *(_QWORD *)(v0 + 160) = v17;
    *(_WORD *)(v0 + 176) = v18;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v19 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v20);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009E2798, v21, v22);
  }
}

uint64_t sub_1009E2798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 37, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_100997710, 0, 0);
}

uint64_t Actions.ShareLyrics.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x794C206572616853, 0xAFA680E273636972);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.ShareLyrics.Context.menuItemImage.getter())()
{
  return sub_1009B9080;
}

id sub_1009E29F8()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  return v1;
}

uint64_t ShareableMusicItem.actionTitle.getter(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0xA680E26572616853, 0xA800000000000000);
}

uint64_t sub_1009E2A78()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4B400);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t ShareableMusicItem.failureMessage.getter(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0xD00000000000001ALL, 0x8000000100E4B400);
}

uint64_t ShareableMusicItem.shareURL.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1009E2C1C, 0, 0);
}

uint64_t sub_1009E2C1C()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 16))(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E2C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = sub_100007E8C(&qword_1011D2AE0);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E2CB0, 0, 0);
}

uint64_t sub_1009E2CB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  NSURL *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = **(void ***)(v0 + 16);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v7 = 0;
  if (v5 != 1)
  {
    v8 = *(_QWORD *)(v0 + 24);
    URL._bridgeToObjectiveC()(v6);
    v7 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  }
  v10 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v2, "setOriginalURL:", v7);

  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E2D7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E2DD8, 0, 0);
}

uint64_t sub_1009E2DD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  Curator.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E2E98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E2EF4, 0, 0);
}

uint64_t sub_1009E2EF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  EditorialItem.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E2FB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E3010, 0, 0);
}

uint64_t sub_1009E3010()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  Genre.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E30D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E312C, 0, 0);
}

uint64_t sub_1009E312C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  RadioShow.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E31EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E3248, 0, 0);
}

uint64_t sub_1009E3248()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  RecordLabel.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E3308(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E3364, 0, 0);
}

uint64_t sub_1009E3364()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  SocialProfile.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ShareableMusicItem.augmentMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E3484, 0, 0);
}

uint64_t sub_1009E3484()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 56) = **(_QWORD **)(v0 + 16);
  v2 = *(int **)(v1 + 24);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1009E34F4;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1009E34F4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_1009E3548, 0, 0);
}

uint64_t sub_1009E3548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v1 = *(_QWORD *)(v0 + 48);
  }
  objc_msgSend(*(id *)(v0 + 56), "setOriginalURL:", v5);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Album.actionTitle.getter()
{
  return sub_1009D5590(0x6C41206572616853, 0xAE00A680E26D7562);
}

uint64_t Album.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001BLL, 0x8000000100E4B420);
}

uint64_t Album.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D4238);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D2FC8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D47C0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D47C8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E3730, 0, 0);
}

uint64_t sub_1009E3730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 128);
  Album.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = Album.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC378);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for Album(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D3048, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Album, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v13;
      *v13 = v1;
      v13[1] = sub_1009E3908;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v15, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  }
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 64);
  v18 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E3908()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E3AEC;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009E3974;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E3974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0B28(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D2FC8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    Album.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E3AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Album.augmentMetadata(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for MusicOffer.Kind(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicOffer(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2AE0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4238);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2FC8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v10);
  v2[17] = swift_task_alloc(v10);
  v2[18] = swift_task_alloc(v10);
  v11 = sub_100007E8C(&qword_1011D47C0);
  v2[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[20] = v12;
  v2[21] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D47C8);
  v2[22] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[23] = v14;
  v2[24] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E3F30, 0, 0);
}

uint64_t sub_1009E3F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = Album.catalogID.getter(a1);
  *(_QWORD *)(v1 + 200) = v2;
  *(_QWORD *)(v1 + 208) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_msgSend(**(id **)(v1 + 32), "specialization");
    *(_QWORD *)(v1 + 216) = v6;
    if (v6)
    {
      v7 = v6;
      objc_opt_self(LPiTunesMediaAlbumMetadata);
      v8 = swift_dynamicCastObjCClass(v7);
      *(_QWORD *)(v1 + 224) = v8;
      if (v8)
      {
        v9 = *(_QWORD *)(v1 + 176);
        KeyPath = swift_getKeyPath(&unk_100EDC378);
        *(_QWORD *)(v1 + 16) = v4;
        *(_QWORD *)(v1 + 24) = v5;
        v11 = type metadata accessor for Album(0);
        *(_QWORD *)(v1 + 232) = v11;
        v12 = sub_100048748(&qword_1011D3048, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Album, v12);
        v13 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_100EA7A90;
        sub_100007E8C(&qword_1011D3040);
        v15 = static PartialMusicProperty<A>.offers.getter();
        *(_QWORD *)(v14 + 32) = v15;
        specialized Array._endMutation()(v15);
        MusicCatalogResourceRequest.properties.setter(v14, v9);
        v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
        *(_QWORD *)(v1 + 240) = v16;
        *v16 = v1;
        v16[1] = sub_1009E4174;
        return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
      }
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v18 = *(_QWORD *)(v1 + 168);
  v20 = *(_QWORD *)(v1 + 136);
  v19 = *(_QWORD *)(v1 + 144);
  v22 = *(_QWORD *)(v1 + 120);
  v21 = *(_QWORD *)(v1 + 128);
  v24 = *(_QWORD *)(v1 + 88);
  v23 = *(_QWORD *)(v1 + 96);
  v25 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 192));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E4174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_1009E4608;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_1009E41E0;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009E41E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSURL *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 152));
  sub_1009D0B28(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = *v7;
  sub_10004A160(v2, v3, &qword_1011D2FC8);
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v3, 1, v1);
  if ((_DWORD)v11 == 1)
  {
    v12 = *(_QWORD *)(v0 + 96);
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2FC8);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = 0;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 96);
    Album.url.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v15);
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    v14 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      v21 = *(_QWORD *)(v0 + 96);
      URL._bridgeToObjectiveC()(v20);
      v14 = v22;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
    }
  }
  v23 = *(_QWORD *)(v0 + 232);
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 128);
  objc_msgSend(v8, "setOriginalURL:", v14);

  sub_10004A160(v24, v25, &qword_1011D2FC8);
  if (v10(v25, 1, v23) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011D2FC8);
    isa = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 128);
    isa = (Class)Album.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v29, v28);
    if (isa)
    {
      v30 = *((_QWORD *)isa + 2);
      if (v30)
      {
        v31 = *(_QWORD *)(v0 + 80);
        v64 = *(_QWORD *)(v0 + 56);
        sub_1009F24EC(0, v30, 0);
        v32 = (char *)isa
            + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
        v63 = *(_QWORD *)(v31 + 72);
        v65 = v31;
        v62 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 16);
        do
        {
          v33 = *(_QWORD *)(v0 + 88);
          v35 = *(_QWORD *)(v0 + 64);
          v34 = *(_QWORD *)(v0 + 72);
          v36 = *(_QWORD *)(v0 + 48);
          v37 = v62(v33, v32, v34);
          v38 = MusicOffer.kind.getter(v37);
          v39 = MusicOffer.Kind.rawValue.getter(v38);
          v41 = v40;
          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v35, v36);
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v33, v34);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_1009F24EC(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v43 = _swiftEmptyArrayStorage[2];
          v42 = _swiftEmptyArrayStorage[3];
          if (v43 >= v42 >> 1)
            sub_1009F24EC((char *)(v42 > 1), v43 + 1, 1);
          _swiftEmptyArrayStorage[2] = v43 + 1;
          v44 = &_swiftEmptyArrayStorage[2 * v43];
          v44[4] = v39;
          v44[5] = v41;
          v32 += v63;
          --v30;
        }
        while (v30);
      }
      swift_bridgeObjectRelease();
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
    }
  }
  v45 = *(void **)(v0 + 216);
  v47 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 168);
  v48 = *(_QWORD *)(v0 + 176);
  v50 = *(_QWORD *)(v0 + 152);
  v51 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 144);
  objc_msgSend(*(id *)(v0 + 224), "setOffers:", isa, v26);

  sub_10004FF60(v52, &qword_1011D2FC8);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
  v53 = *(_QWORD *)(v0 + 168);
  v55 = *(_QWORD *)(v0 + 136);
  v54 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v56 = *(_QWORD *)(v0 + 128);
  v59 = *(_QWORD *)(v0 + 88);
  v58 = *(_QWORD *)(v0 + 96);
  v60 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E4608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 248);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 208);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v30 = *(void **)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 176);
    v33 = *(_QWORD *)(v0 + 192);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v34 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 176);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 96);
  v28 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E48FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D47BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Album.shareURL.getter(a1);
}

uint64_t sub_1009E494C(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6C41206572616853, 0xAE00A680E26D7562);
}

uint64_t sub_1009E4970()
{
  return Album.failureMessage.getter();
}

uint64_t sub_1009E4984(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D47D4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Album.augmentMetadata(_:)(a1);
}

uint64_t Artist.actionTitle.getter()
{
  return sub_1009D5590(0x7241206572616853, 0xAFA680E274736974);
}

uint64_t Artist.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001CLL, 0x8000000100E4B440);
}

uint64_t Artist.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D44F0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D47E0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D47E8);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D47F0);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E4B18, 0, 0);
}

uint64_t sub_1009E4B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 128);
  Artist.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = Artist.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC3A0);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for Artist(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D47F8, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Artist, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v13;
      *v13 = v1;
      v13[1] = sub_1009E4CF0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v15, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  }
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 64);
  v18 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E4CF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E4ED4;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009E4D5C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E4D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0B44(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D47E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    Artist.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E4ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for artist catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E51AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D47DC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Artist.shareURL.getter(a1);
}

uint64_t sub_1009E51FC(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x7241206572616853, 0xAFA680E274736974);
}

uint64_t sub_1009E5220()
{
  return Artist.failureMessage.getter();
}

uint64_t sub_1009E5234(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E5290, 0, 0);
}

uint64_t sub_1009E5290()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D47DC);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return Artist.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1009E52E8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_1009F3B20, 0, 0);
}

uint64_t Composer.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000011, 0x8000000100E4B460);
}

uint64_t Composer.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001ELL, 0x8000000100E4B480);
}

uint64_t sub_1009E5378(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1009E5390, 0, 0);
}

uint64_t sub_1009E5390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E53E0()
{
  return Composer.actionTitle.getter();
}

uint64_t sub_1009E53F4()
{
  return Composer.failureMessage.getter();
}

uint64_t sub_1009E5408(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BE0 + dword_1011D4BE0);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BE4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t Curator.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000010, 0x8000000100E4B4A0);
}

uint64_t Curator.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001DLL, 0x8000000100E4B4C0);
}

uint64_t sub_1009E54A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1009E54C0, 0, 0);
}

uint64_t sub_1009E54C0()
{
  uint64_t v0;

  Curator.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E54F0()
{
  return Curator.actionTitle.getter();
}

uint64_t sub_1009E5504()
{
  return Curator.failureMessage.getter();
}

uint64_t sub_1009E5518(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BD8 + dword_1011D4BD8);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t EditorialItem.actionTitle.getter()
{
  return sub_1009D5590(0xA680E26572616853, 0xA800000000000000);
}

uint64_t sub_1009E5598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1009E55B0, 0, 0);
}

uint64_t sub_1009E55B0()
{
  uint64_t v0;

  EditorialItem.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E55E0()
{
  return sub_1009E2A78();
}

uint64_t sub_1009E55F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BD0 + dword_1011D4BD0);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BD4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t Genre.actionTitle.getter()
{
  return sub_1009D5590(0x6547206572616853, 0xAE00A680E265726ELL);
}

uint64_t Genre.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001BLL, 0x8000000100E4B4E0);
}

uint64_t sub_1009E569C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1009E56B4, 0, 0);
}

uint64_t sub_1009E56B4()
{
  uint64_t v0;

  Genre.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E56E4(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6547206572616853, 0xAE00A680E265726ELL);
}

uint64_t sub_1009E5708()
{
  return Genre.failureMessage.getter();
}

uint64_t sub_1009E571C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BC8 + dword_1011D4BC8);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BCC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t MusicMovie.actionTitle.getter()
{
  return sub_1009D5590(0x6F4D206572616853, 0xAE00A680E2656976);
}

uint64_t MusicMovie.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001BLL, 0x8000000100E4B500);
}

uint64_t MusicMovie.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D44E0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D4808);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4810);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4818);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E58C4, 0, 0);
}

uint64_t sub_1009E58C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 128);
  MusicMovie.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = MusicMovie.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC3C8);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for MusicMovie(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D4820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      v13 = sub_100048748(&qword_1011D4828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, v12, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v14;
      *v14 = v1;
      v14[1] = sub_1009E5AC4;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v17 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E5AC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E5CA8;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009E5B30;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E5B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0C70(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D4808);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    MusicMovie.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E5CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for music movie catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E5F80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D4804);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return MusicMovie.shareURL.getter(a1);
}

uint64_t sub_1009E5FD0(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6F4D206572616853, 0xAE00A680E2656976);
}

uint64_t sub_1009E5FF4()
{
  return MusicMovie.failureMessage.getter();
}

uint64_t sub_1009E6008(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E6064, 0, 0);
}

uint64_t sub_1009E6064()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D4804);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return MusicMovie.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t MusicVideo.actionTitle.getter()
{
  return sub_1009D5590(0x6956206572616853, 0xAE00A680E26F6564);
}

uint64_t MusicVideo.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001BLL, 0x8000000100E4B520);
}

uint64_t MusicVideo.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D44D0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3010);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4838);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4840);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E6204, 0, 0);
}

uint64_t sub_1009E6204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 128);
  MusicVideo.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = MusicVideo.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC3F0);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for MusicVideo(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D4848, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for MusicVideo, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v13;
      *v13 = v1;
      v13[1] = sub_1009E63DC;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v15, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  }
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 64);
  v18 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E63DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E65C0;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009E6448;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E6448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0C8C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D3010);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    MusicVideo.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E65C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for music video catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E6894@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_1009E68A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D4834);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return MusicVideo.shareURL.getter(a1);
}

uint64_t sub_1009E68F4(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6956206572616853, 0xAE00A680E26F6564);
}

uint64_t sub_1009E6918()
{
  return MusicVideo.failureMessage.getter();
}

uint64_t sub_1009E692C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E6988, 0, 0);
}

uint64_t sub_1009E6988()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D4834);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t Playlist.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000011, 0x8000000100E4B540);
}

uint64_t Playlist.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001ELL, 0x8000000100E4B560);
}

uint64_t Playlist.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D44C0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D6830) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[9] = swift_task_alloc(v5);
  v2[10] = swift_task_alloc(v5);
  v6 = sub_100007E8C(&qword_1011D4858);
  v2[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[12] = v7;
  v2[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4860);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E6B30, 0, 0);
}

uint64_t sub_1009E6B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  char v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(v1 + 136);
  Playlist.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 144) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 152) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 136), &qword_1011D2AE0);
    v6 = Playlist.catalogID.getter(v5);
    *(_QWORD *)(v1 + 160) = v6;
    *(_QWORD *)(v1 + 168) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC418);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for Playlist(0);
      *(_QWORD *)(v1 + 176) = v11;
      v12 = sub_100048748(&qword_1011D4870, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Playlist, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 184) = v13;
      *v13 = v1;
      v13[1] = sub_1009E6D8C;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
    }
    v16 = Playlist.isPublic.getter(v6);
    v17 = v16 != 2 && (v16 & 1) == 0;
    if (v17 && (Playlist.isShareable.getter() & 1) == 0 && (Playlist.canMakeShareable.getter() & 1) != 0)
    {
      v18 = (_QWORD *)swift_task_alloc(dword_1011D486C);
      *(_QWORD *)(v1 + 200) = v18;
      *v18 = v1;
      v18[1] = sub_1009E6F7C;
      return Playlist.publish()(*(_QWORD *)(v1 + 72));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v15, *(_QWORD *)(v1 + 136), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  }
  v19 = *(_QWORD *)(v1 + 128);
  v20 = *(_QWORD *)(v1 + 104);
  v22 = *(_QWORD *)(v1 + 72);
  v21 = *(_QWORD *)(v1 + 80);
  v23 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 136));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E6D8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E70C0;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 168));
    v4 = sub_1009E6DF8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E6DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 88));
  sub_1009D0CA8(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D6830);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 80);
    Playlist.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 72);
  v25 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E6F7C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  return swift_task_switch(sub_1009E6FD0, 0, 0);
}

uint64_t sub_1009E6FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  if ((_DWORD)v4 == 1)
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 32);
    sub_10004FF60(v1, &qword_1011D6830);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
  }
  else
  {
    Playlist.url.getter(v4);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E70C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 168);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 128);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v30 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v30);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for playlist catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 112);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 144));
  v21 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Playlist.publish()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicLibraryPlaylistResponse(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D4878);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibraryPlaylistRequest(0);
  v2[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[16] = v11;
  v2[17] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E749C, 0, 0);
}

uint64_t sub_1009E749C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v0[4];
  v6 = type metadata accessor for Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)(v5, 0, 0, 0, 0, 0, 1, 2, v1);
  sub_10004FF60(v1, &qword_1011D4878);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, enum case for MusicLibraryPlaylistRequest.CompletionPolicy.afterCloudLibraryChanges(_:), v3);
  MusicLibraryPlaylistRequest.completionPolicy.setter(v2);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryPlaylistRequest.response()[1]);
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_1009E759C;
  return MusicLibraryPlaylistRequest.response()(v0[10]);
}

uint64_t sub_1009E759C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009E76D4;
  else
    v3 = sub_1009E7600;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009E7600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 24);
  MusicLibraryPlaylistResponse.playlist.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E76D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)qword_1011D4740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 40);
  if (v10)
  {
    v35 = *(_QWORD *)(v0 + 120);
    v18 = swift_slowAlloc(22, -1);
    v34 = v13;
    v19 = swift_slowAlloc(64, -1);
    v36 = v19;
    *(_DWORD *)v18 = 136446466;
    v20 = sub_100048748(&qword_1011D4880, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v21 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v20);
    v33 = v12;
    v23 = v22;
    *(_QWORD *)(v18 + 4) = sub_10099627C(v21, v22, &v36);
    swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v11;
    swift_errorRetain(v11);
    v24 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v25 = (char *)String.init<A>(describing:)(v0 + 16, v24);
    v27 = v26;
    *(_QWORD *)(v18 + 14) = sub_10099627C(v25, v26, &v36);
    swift_bridgeObjectRelease(v27);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to make playlist=%{public}s public with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  }
  else
  {

    swift_errorRelease(v11);
    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    swift_errorRelease(v11);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 40));
  v28 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 112);
  v30 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E79B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D4854);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Playlist.shareURL.getter(a1);
}

uint64_t sub_1009E7A04()
{
  return Playlist.actionTitle.getter();
}

uint64_t sub_1009E7A18()
{
  return Playlist.failureMessage.getter();
}

uint64_t sub_1009E7A2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E7A88, 0, 0);
}

uint64_t sub_1009E7A88()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D4854);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return Playlist.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t RadioShow.actionTitle.getter()
{
  return sub_1009D5590(0x6853206572616853, 0xAD0000A680E2776FLL);
}

uint64_t RadioShow.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001ALL, 0x8000000100E4B580);
}

uint64_t sub_1009E7B2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1009E7B44, 0, 0);
}

uint64_t sub_1009E7B44()
{
  uint64_t v0;

  RadioShow.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E7B74(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6853206572616853, 0xAD0000A680E2776FLL);
}

uint64_t sub_1009E7B98()
{
  return RadioShow.failureMessage.getter();
}

uint64_t sub_1009E7BAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BC0 + dword_1011D4BC0);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BC4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t RecordLabel.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000015, 0x8000000100E4B5A0);
}

uint64_t RecordLabel.failureMessage.getter()
{
  return sub_1009D5590(0xD000000000000022, 0x8000000100E4B5C0);
}

uint64_t sub_1009E7C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1009E7C64, 0, 0);
}

uint64_t sub_1009E7C64()
{
  uint64_t v0;

  RecordLabel.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E7C94()
{
  return RecordLabel.actionTitle.getter();
}

uint64_t sub_1009E7CA8()
{
  return RecordLabel.failureMessage.getter();
}

uint64_t sub_1009E7CBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BB8 + dword_1011D4BB8);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t SocialProfile.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000010, 0x8000000100E4B5F0);
}

uint64_t SocialProfile.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001DLL, 0x8000000100E4B610);
}

uint64_t sub_1009E7D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_1009E7D74, 0, 0);
}

uint64_t sub_1009E7D74()
{
  uint64_t v0;

  SocialProfile.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E7DA4()
{
  return SocialProfile.actionTitle.getter();
}

uint64_t sub_1009E7DB8()
{
  return SocialProfile.failureMessage.getter();
}

uint64_t sub_1009E7DCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1011D4BB0 + dword_1011D4BB0);
  v3 = (_QWORD *)swift_task_alloc(unk_1011D4BB4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return v5(a1);
}

uint64_t Song.actionTitle.getter()
{
  return sub_1009D5590(0x6F53206572616853, 0xAD0000A680E2676ELL);
}

uint64_t Song.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001ALL, 0x8000000100E4B630);
}

uint64_t Song.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D44B0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3018);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4890);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4898);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E7F74, 0, 0);
}

uint64_t sub_1009E7F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v1 + 128);
  Song.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = Song.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC440);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for Song(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D48A0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Song, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v13;
      *v13 = v1;
      v13[1] = sub_1009E814C;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v15 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v15, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v15, 0, 1, v3);
  }
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 64);
  v18 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E814C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E8330;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009E81B8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E81B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0CC4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D3018);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    Song.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E8330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for song catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E8604@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t Song.augmentMetadata(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D48B0);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicOffer.Kind(0);
  v2[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[8] = v5;
  v2[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicOffer(0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v8);
  v2[14] = swift_task_alloc(v8);
  v9 = sub_100007E8C(&qword_1011D44B0);
  v2[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[16] = v10;
  v2[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D3018) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v11);
  v2[19] = swift_task_alloc(v11);
  v2[20] = swift_task_alloc(v11);
  v2[21] = swift_task_alloc(v11);
  v12 = sub_100007E8C(&qword_1011D4890);
  v2[22] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[23] = v13;
  v2[24] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011D4898);
  v2[25] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[26] = v15;
  v2[27] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E87C0, 0, 0);
}

uint64_t sub_1009E87C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = Song.catalogID.getter(a1);
  *(_QWORD *)(v1 + 224) = v2;
  *(_QWORD *)(v1 + 232) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_msgSend(**(id **)(v1 + 32), "specialization");
    *(_QWORD *)(v1 + 240) = v6;
    if (v6)
    {
      v7 = v6;
      objc_opt_self(LPiTunesMediaSongMetadata);
      v8 = swift_dynamicCastObjCClass(v7);
      *(_QWORD *)(v1 + 248) = v8;
      if (v8)
      {
        v9 = *(_QWORD *)(v1 + 200);
        KeyPath = swift_getKeyPath(&unk_100EDC440);
        *(_QWORD *)(v1 + 16) = v4;
        *(_QWORD *)(v1 + 24) = v5;
        v11 = type metadata accessor for Song(0);
        *(_QWORD *)(v1 + 256) = v11;
        v12 = sub_100048748(&qword_1011D48A0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Song, v12);
        v13 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_100EA7A90;
        sub_100007E8C(&qword_1011D48B8);
        v15 = static PartialMusicProperty<A>.offers.getter();
        *(_QWORD *)(v14 + 32) = v15;
        specialized Array._endMutation()(v15);
        MusicCatalogResourceRequest.properties.setter(v14, v9);
        v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
        *(_QWORD *)(v1 + 264) = v16;
        *v16 = v1;
        v16[1] = sub_1009E8A2C;
        return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
      }
      swift_bridgeObjectRelease(v5);

    }
    else
    {
      swift_bridgeObjectRelease(v5);
    }
  }
  v18 = *(_QWORD *)(v1 + 192);
  v20 = *(_QWORD *)(v1 + 160);
  v19 = *(_QWORD *)(v1 + 168);
  v22 = *(_QWORD *)(v1 + 144);
  v21 = *(_QWORD *)(v1 + 152);
  v23 = *(_QWORD *)(v1 + 136);
  v25 = *(_QWORD *)(v1 + 104);
  v24 = *(_QWORD *)(v1 + 112);
  v26 = *(_QWORD *)(v1 + 96);
  v27 = *(_QWORD *)(v1 + 72);
  v28 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 216));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009E8A2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009E90AC;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 232));
    v4 = sub_1009E8A98;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E8A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSURL *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSURL *v84;
  uint64_t v85;
  void *v86;
  Class v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v90)(uint64_t, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 176));
  sub_1009D0CC4(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = *v7;
  sub_10004A160(v2, v3, &qword_1011D3018);
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v3, 1, v1);
  if ((_DWORD)v11 == 1)
  {
    v12 = *(_QWORD *)(v0 + 112);
    sub_10004FF60(*(_QWORD *)(v0 + 160), &qword_1011D3018);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    v14 = 0;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 256);
    v16 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 112);
    Song.url.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v15);
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    v14 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      v21 = *(_QWORD *)(v0 + 112);
      URL._bridgeToObjectiveC()(v20);
      v14 = v22;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
    }
  }
  v23 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 152);
  objc_msgSend(v8, "setOriginalURL:", v14);

  sub_10004A160(v24, v25, &qword_1011D3018);
  v89 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v10;
  if (v10(v25, 1, v23) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_1011D3018);
    isa = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 256);
    v29 = *(_QWORD *)(v0 + 152);
    isa = (Class)Song.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v29, v28);
    if (isa)
    {
      v30 = *((_QWORD *)isa + 2);
      if (v30)
      {
        v88 = v9;
        v31 = *(_QWORD *)(v0 + 88);
        v92 = *(_QWORD *)(v0 + 64);
        sub_1009F24EC(0, v30, 0);
        v87 = isa;
        v32 = (char *)isa
            + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
        v94 = v31;
        v90 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 16);
        v91 = *(_QWORD *)(v31 + 72);
        do
        {
          v33 = *(_QWORD *)(v0 + 96);
          v35 = *(_QWORD *)(v0 + 72);
          v34 = *(_QWORD *)(v0 + 80);
          v36 = *(_QWORD *)(v0 + 56);
          v37 = v90(v33, v32, v34);
          v38 = MusicOffer.kind.getter(v37);
          v39 = MusicOffer.Kind.rawValue.getter(v38);
          v41 = v40;
          (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v35, v36);
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v33, v34);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_1009F24EC(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v43 = _swiftEmptyArrayStorage[2];
          v42 = _swiftEmptyArrayStorage[3];
          if (v43 >= v42 >> 1)
            sub_1009F24EC((char *)(v42 > 1), v43 + 1, 1);
          _swiftEmptyArrayStorage[2] = v43 + 1;
          v44 = &_swiftEmptyArrayStorage[2 * v43];
          v44[4] = v39;
          v44[5] = v41;
          v32 += v91;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease(v87);
        v9 = v88;
      }
      else
      {
        swift_bridgeObjectRelease(isa);
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
    }
  }
  v46 = (uint64_t *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 144);
  v47 = *(_QWORD *)(v0 + 256);
  v48 = *(_QWORD *)(v0 + 168);
  objc_msgSend(*(id *)(v0 + 248), "setOffers:", isa, v26);

  v49 = &qword_1011D3018;
  sub_10004A160(v48, v45, &qword_1011D3018);
  if (v89(v45, 1, v47) == 1)
    goto LABEL_25;
  v50 = *(_QWORD *)(v0 + 256);
  v51 = *(_QWORD *)(v0 + 144);
  v52 = Song.previewAssets.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v51, v50);
  if (!v52)
  {
LABEL_26:
    v59 = *(_QWORD *)(v0 + 104);
    v60 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
    v61 = 0;
    goto LABEL_27;
  }
  v53 = *(_QWORD *)(v52 + 16);
  v54 = type metadata accessor for PreviewAsset(0);
  v55 = *(_QWORD *)(v54 - 8);
  if (v53)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v55 + 16))(*(_QWORD *)(v0 + 48), v52 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80)), v54);
    v56 = 0;
  }
  else
  {
    v56 = 1;
  }
  v46 = (uint64_t *)(v0 + 48);
  v57 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v57, v56, 1, v54);
  v58 = swift_bridgeObjectRelease(v52);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v55 + 48))(v57, 1, v54, v58) == 1)
  {
    v49 = (uint64_t *)&unk_1011D48B0;
LABEL_25:
    sub_10004FF60(*v46, v49);
    goto LABEL_26;
  }
  v80 = *(_QWORD *)(v0 + 104);
  v81 = *(_QWORD *)(v0 + 48);
  PreviewAsset.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v81, v54);
  v82 = type metadata accessor for URL(0);
  v83 = *(_QWORD *)(v82 - 8);
  v61 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v80, 1, v82) != 1)
  {
    v85 = *(_QWORD *)(v0 + 104);
    URL._bridgeToObjectiveC()(v84);
    v61 = v86;
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v85, v82);
  }
LABEL_27:
  v62 = *(void **)(v0 + 240);
  v64 = *(_QWORD *)(v0 + 208);
  v63 = *(_QWORD *)(v0 + 216);
  v66 = *(_QWORD *)(v0 + 192);
  v65 = *(_QWORD *)(v0 + 200);
  v67 = *(_QWORD *)(v0 + 176);
  v68 = *(_QWORD *)(v0 + 184);
  v69 = *(_QWORD *)(v0 + 168);
  objc_msgSend(*(id *)(v0 + 248), "setPreviewURL:", v61);

  sub_10004FF60(v69, &qword_1011D3018);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
  v70 = *(_QWORD *)(v0 + 192);
  v72 = *(_QWORD *)(v0 + 160);
  v71 = *(_QWORD *)(v0 + 168);
  v74 = *(_QWORD *)(v0 + 144);
  v73 = *(_QWORD *)(v0 + 152);
  v75 = *(_QWORD *)(v0 + 136);
  v77 = *(_QWORD *)(v0 + 104);
  v76 = *(_QWORD *)(v0 + 112);
  v78 = *(_QWORD *)(v0 + 96);
  v93 = *(_QWORD *)(v0 + 72);
  v95 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E90AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 272);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 232);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 224);
    v31 = *(void **)(v0 + 240);
    v32 = *(_QWORD *)(v0 + 208);
    v33 = *(_QWORD *)(v0 + 200);
    v35 = *(_QWORD *)(v0 + 216);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v37 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v37);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 200);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 96);
  v34 = *(_QWORD *)(v0 + 72);
  v36 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E93C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D488C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Song.shareURL.getter(a1);
}

uint64_t sub_1009E9418(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6F53206572616853, 0xAD0000A680E2676ELL);
}

uint64_t sub_1009E943C()
{
  return Song.failureMessage.getter();
}

uint64_t sub_1009E9450(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D48AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Song.augmentMetadata(_:)(a1);
}

uint64_t Station.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000010, 0x8000000100E4B650);
}

uint64_t Station.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001DLL, 0x8000000100E4B670);
}

uint64_t Station.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D44A0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D48C8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D48D0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D48D8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E95DC, 0, 0);
}

uint64_t sub_1009E95DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v1 + 128);
  Station.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = Station.id.getter(v5);
    v8 = v7;
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    KeyPath = swift_getKeyPath(&unk_100EDC468);
    *(_QWORD *)(v1 + 16) = v6;
    *(_QWORD *)(v1 + 24) = v8;
    v10 = type metadata accessor for Station(0);
    *(_QWORD *)(v1 + 168) = v10;
    v11 = sub_100048748(&qword_1011D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for Station, (uint64_t)&protocol conformance descriptor for Station);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v10, &protocol witness table for Station, v11);
    v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v1 + 176) = v12;
    *v12 = v1;
    v12[1] = sub_1009E9798;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v14, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
    v15 = *(_QWORD *)(v1 + 120);
    v16 = *(_QWORD *)(v1 + 96);
    v18 = *(_QWORD *)(v1 + 64);
    v17 = *(_QWORD *)(v1 + 72);
    swift_task_dealloc(*(_QWORD *)(v1 + 128));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1009E9798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_1009E997C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_1009E9804;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009E9804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0D6C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D48C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    Station.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E997C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for station catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009E9C54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D48C4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Station.shareURL.getter(a1);
}

uint64_t sub_1009E9CA4()
{
  return Station.actionTitle.getter();
}

uint64_t sub_1009E9CB8()
{
  return Station.failureMessage.getter();
}

uint64_t sub_1009E9CCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009E9D28, 0, 0);
}

uint64_t sub_1009E9D28()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D48C4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return Station.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t Track.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;

  v0 = type metadata accessor for Song(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = type metadata accessor for MusicVideo(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v42 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v19, v43, v15, v17);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v19, v0);
    String.LocalizationValue.init(stringLiteral:)(0x6F53206572616853, 0xAD0000A680E2676ELL);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    v21 = v6;
    v22 = v1;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v23 = qword_10124DE50;
    v24 = (id)qword_10124DE50;
    v25 = v44;
    static Locale.current.getter(v24);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v23, v25, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v21);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v0);
  }
  else if (v20 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v28 = v40;
    v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v19, v41);
    String.LocalizationValue.init(stringLiteral:)(0x6956206572616853, 0xAE00A680E26F6564);
    v29 = v6;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v30 = qword_10124DE50;
    v31 = (id)qword_10124DE50;
    v32 = v44;
    static Locale.current.getter(v31);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v30, v32, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v29);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v42, v27);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    v33 = v9;
    v34 = v9;
    v35 = v6;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v34, v12, v6);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v36 = qword_10124DE50;
    v37 = (id)qword_10124DE50;
    v38 = v44;
    static Locale.current.getter(v37);
    v26 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v36, v38, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v35);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return v26;
}

uint64_t Track.failureMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;

  v1 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v1 - 8);
  v37 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - v11;
  v13 = type metadata accessor for MusicVideo(0);
  v34 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  __chkstk_darwin(v13);
  v38 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v19, v0, v15, v17);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v21 = v36;
    v22 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v3, v19, v37);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4B630);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v23 = qword_10124DE50;
    v24 = (id)qword_10124DE50;
    v25 = v39;
    static Locale.current.getter(v24);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v23, v25, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  }
  else if (v20 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    v28 = v34;
    v27 = v35;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v19, v35);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4B520);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v29 = qword_10124DE50;
    v30 = (id)qword_10124DE50;
    v31 = v39;
    static Locale.current.getter(v30);
    v26 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v29, v31, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v38, v27);
  }
  else
  {
    v26 = Track.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return v26;
}

uint64_t Track.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Song(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicVideo(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Track(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EA66C, 0, 0);
}

uint64_t sub_1009EA66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    v5 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v5, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    v9 = (_QWORD *)swift_task_alloc(dword_1011D488C);
    *(_QWORD *)(v0 + 112) = v9;
    *v9 = v0;
    v9[1] = sub_1009EA8D8;
    return Song.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for Track.musicVideo(_:))
  {
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v11, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v11, v13);
    v15 = (_QWORD *)swift_task_alloc(dword_1011D4834);
    *(_QWORD *)(v0 + 104) = v15;
    *v15 = v0;
    v15[1] = sub_1009EA824;
    return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 16);
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v18, *(_QWORD *)(v0 + 80));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009EA824()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_1009EA878, 0, 0);
}

uint64_t sub_1009EA878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EA8D8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  return swift_task_switch(sub_1009EA92C, 0, 0);
}

uint64_t sub_1009EA92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(v1, *(_QWORD *)(v0 + 32));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EA994(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D48EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return Track.shareURL.getter(a1);
}

uint64_t sub_1009EA9EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EAA48, 0, 0);
}

uint64_t sub_1009EAA48()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D48EC);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return Track.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVEpisode.actionTitle.getter()
{
  return sub_1009D5590(0x1000000000000010, 0x8000000100E4B690);
}

uint64_t TVEpisode.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001DLL, 0x8000000100E4B6B0);
}

uint64_t TVEpisode.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D4490);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D48F8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4900);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4908);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EABE0, 0, 0);
}

uint64_t sub_1009EABE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 128);
  TVEpisode.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = TVEpisode.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC490);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for TVEpisode(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D4910, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      v13 = sub_100048748(&qword_1011D4918, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, v12, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v14;
      *v14 = v1;
      v14[1] = sub_1009EADE0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v17 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009EADE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009EAFC4;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009EAE4C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009EAE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0CE0(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D48F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    TVEpisode.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EAFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for TVEpisode catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB29C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D48F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return TVEpisode.shareURL.getter(a1);
}

uint64_t sub_1009EB2EC()
{
  return TVEpisode.actionTitle.getter();
}

uint64_t sub_1009EB300()
{
  return TVEpisode.failureMessage.getter();
}

uint64_t sub_1009EB314(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EB370, 0, 0);
}

uint64_t sub_1009EB370()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D48F4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return TVEpisode.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVSeason.actionTitle.getter()
{
  return sub_1009D5590(0x6553206572616853, 0xAFA680E26E6F7361);
}

uint64_t TVSeason.failureMessage.getter()
{
  return sub_1009D5590(0xD00000000000001CLL, 0x8000000100E4B6D0);
}

uint64_t TVSeason.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D4480);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D4928);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4930);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4938);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EB510, 0, 0);
}

uint64_t sub_1009EB510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 128);
  TVSeason.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = TVSeason.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC4B8);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for TVSeason(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D4940, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      v13 = sub_100048748(&qword_1011D4948, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, v12, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v14;
      *v14 = v1;
      v14[1] = sub_1009EB710;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v17 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009EB710()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009EB8F4;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009EB77C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009EB77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0CFC(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D4928);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    TVSeason.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for TVSeason catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EBBCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D4924);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return TVSeason.shareURL.getter(a1);
}

uint64_t sub_1009EBC1C(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6553206572616853, 0xAFA680E26E6F7361);
}

uint64_t sub_1009EBC40()
{
  return TVSeason.failureMessage.getter();
}

uint64_t sub_1009EBC54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EBCB0, 0, 0);
}

uint64_t sub_1009EBCB0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D4924);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return TVSeason.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVShow.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D4470);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D4958);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4960);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4968);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EBE10, 0, 0);
}

uint64_t sub_1009EBE10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 128);
  TVShow.url.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = TVShow.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC4E0);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for TVShow(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D4970, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      v13 = sub_100048748(&qword_1011D4978, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, v12, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v14;
      *v14 = v1;
      v14[1] = sub_1009EC010;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v17 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009EC010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009EC1F4;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009EC07C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009EC07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0D18(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D4958);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    TVShow.url.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EC1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for TVShow catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EC4CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D4954);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return TVShow.shareURL.getter(a1);
}

uint64_t sub_1009EC51C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EC578, 0, 0);
}

uint64_t sub_1009EC578()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D4954);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return TVShow.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t UploadedAudio.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D4460);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D4988);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4990);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D4998);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EC6D8, 0, 0);
}

uint64_t sub_1009EC6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 128);
  UploadedAudio.postURL.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = UploadedAudio.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC508);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for UploadedAudio(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D49A0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      v13 = sub_100048748(&qword_1011D49A8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, v12, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v14;
      *v14 = v1;
      v14[1] = sub_1009EC8D8;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v17 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009EC8D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009ECABC;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009EC944;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009EC944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0D34(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D4988);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    UploadedAudio.postURL.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009ECABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for uploaded audio catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009ECD94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D4984);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return UploadedAudio.shareURL.getter(a1);
}

uint64_t sub_1009ECDE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009ECE40, 0, 0);
}

uint64_t sub_1009ECE40()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D4984);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return UploadedAudio.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t UploadedVideo.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100007E8C(&qword_1011D4450);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D49B8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D49C0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D49C8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011D2AE0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009ECFA0, 0, 0);
}

uint64_t sub_1009ECFA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v1 + 128);
  UploadedVideo.postURL.getter(a1);
  v3 = type metadata accessor for URL(0);
  *(_QWORD *)(v1 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 144) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v5 = sub_10004FF60(*(_QWORD *)(v1 + 128), &qword_1011D2AE0);
    v6 = UploadedVideo.catalogID.getter(v5);
    *(_QWORD *)(v1 + 152) = v6;
    *(_QWORD *)(v1 + 160) = v7;
    if (v7)
    {
      v8 = v6;
      v9 = v7;
      KeyPath = swift_getKeyPath(&unk_100EDC530);
      *(_QWORD *)(v1 + 16) = v8;
      *(_QWORD *)(v1 + 24) = v9;
      v11 = type metadata accessor for UploadedVideo(0);
      *(_QWORD *)(v1 + 168) = v11;
      v12 = sub_100048748(&qword_1011D49D0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      v13 = sub_100048748(&qword_1011D49D8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, v12, v13);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v1 + 176) = v14;
      *v14 = v1;
      v14[1] = sub_1009ED1A0;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v4 + 56))(*(_QWORD *)(v1 + 32), 1, 1, v3);
  }
  else
  {
    v16 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v16, *(_QWORD *)(v1 + 128), v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
  }
  v17 = *(_QWORD *)(v1 + 120);
  v18 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  swift_task_dealloc(*(_QWORD *)(v1 + 128));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009ED1A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009ED384;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1009ED20C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009ED20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1009D0D50(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1);
  if ((_DWORD)v7 == 1)
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    sub_10004FF60(v13, &qword_1011D49B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    UploadedVideo.postURL.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v15);
  }
  v23 = *(_QWORD *)(v0 + 120);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009ED384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (qword_1011D1B58 != -1)
    swift_once(&qword_1011D1B58, sub_1009F2408);
  v1 = *(_QWORD *)(v0 + 184);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_1011D4740);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v9 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc(22, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    v12 = swift_slowAlloc(32, -1);
    v29 = v12;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    v13 = (char *)MusicItemID.description.getter(v9, v8);
    v15 = v14;
    swift_bridgeObjectRelease(v8);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v15, &v29);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2114;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v10 + 14) = v16;
    *v11 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get share URL for uploaded video catalogID: %{public}s: %{public}@", (uint8_t *)v10, 0x16u);
    v17 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v11, 1, v17);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);

    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_bridgeObjectRelease_n(v8, 2);
    swift_errorRelease(v7);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 136));
  v21 = *(_QWORD *)(v0 + 120);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009ED65C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D49B4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return UploadedVideo.shareURL.getter(a1);
}

uint64_t sub_1009ED6AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009ED708, 0, 0);
}

uint64_t sub_1009ED708()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D49B4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009E52E8;
  return UploadedVideo.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t GenericMusicItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v116 = a1;
  v70 = type metadata accessor for UploadedVideo(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v68 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for UploadedAudio(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v71 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for TVShow(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for TVSeason(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for TVEpisode(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for Station(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Song(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for SocialProfile(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for RecordLabel(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RadioShow(0);
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  __chkstk_darwin(v10);
  v95 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v99 = *(_QWORD *)(v12 - 8);
  v100 = v12;
  __chkstk_darwin(v12);
  v98 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicVideo(0);
  v102 = *(_QWORD *)(v14 - 8);
  v103 = v14;
  __chkstk_darwin(v14);
  v101 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicMovie(0);
  v105 = *(_QWORD *)(v16 - 8);
  v106 = v16;
  __chkstk_darwin(v16);
  v104 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Genre(0);
  v108 = *(_QWORD *)(v18 - 8);
  v109 = v18;
  __chkstk_darwin(v18);
  v107 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for EditorialItem(0);
  v111 = *(_QWORD *)(v20 - 8);
  v112 = v20;
  __chkstk_darwin(v20);
  v110 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Curator(0);
  v113 = *(_QWORD *)(v22 - 8);
  v114 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Album(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GenericMusicItem(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v68 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v115, v33);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v36, v33);
  if (v37 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v32, v36, v29);
    Album.url.getter(v38);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  v40 = v116;
  if (v37 != enum case for GenericMusicItem.artist(_:))
  {
    if (v37 == enum case for GenericMusicItem.composer(_:) || v37 == enum case for GenericMusicItem.creditArtist(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
      goto LABEL_9;
    }
    if (v37 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v44 = v113;
      v43 = v114;
      v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v113 + 32))(v24, v36, v114);
      Curator.url.getter(v45);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v24, v43);
    }
    if (v37 == enum case for GenericMusicItem.editorialItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v47 = v110;
      v46 = v111;
      v48 = v112;
      v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v111 + 32))(v110, v36, v112);
      EditorialItem.url.getter(v49);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    }
    if (v37 == enum case for GenericMusicItem.genre(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v107;
      v51 = v108;
      v52 = v109;
      v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v108 + 32))(v107, v36, v109);
      Genre.url.getter(v53);
    }
    else if (v37 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v104;
      v51 = v105;
      v52 = v106;
      v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v105 + 32))(v104, v36, v106);
      MusicMovie.url.getter(v54);
    }
    else if (v37 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v101;
      v51 = v102;
      v52 = v103;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v102 + 32))(v101, v36, v103);
      MusicVideo.url.getter(v55);
    }
    else if (v37 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v98;
      v51 = v99;
      v52 = v100;
      v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v99 + 32))(v98, v36, v100);
      Playlist.url.getter(v56);
    }
    else if (v37 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v96;
      v50 = v95;
      v52 = v97;
      v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v96 + 32))(v95, v36, v97);
      RadioShow.url.getter(v57);
    }
    else if (v37 == enum case for GenericMusicItem.recordLabel(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v93;
      v50 = v92;
      v52 = v94;
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v93 + 32))(v92, v36, v94);
      RecordLabel.url.getter(v58);
    }
    else if (v37 == enum case for GenericMusicItem.socialProfile(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v90;
      v50 = v89;
      v52 = v91;
      v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v90 + 32))(v89, v36, v91);
      SocialProfile.url.getter(v59);
    }
    else
    {
      if (v37 != enum case for GenericMusicItem.song(_:))
      {
        if (v37 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v84;
          v47 = v83;
          v48 = v85;
          v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v84 + 32))(v83, v36, v85);
          Station.url.getter(v61);
        }
        else if (v37 == enum case for GenericMusicItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v81;
          v47 = v80;
          v48 = v82;
          v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 32))(v80, v36, v82);
          TVEpisode.url.getter(v62);
        }
        else if (v37 == enum case for GenericMusicItem.tvSeason(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v78;
          v47 = v77;
          v48 = v79;
          v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v78 + 32))(v77, v36, v79);
          TVSeason.url.getter(v63);
        }
        else if (v37 == enum case for GenericMusicItem.tvShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v75;
          v47 = v74;
          v48 = v76;
          v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v75 + 32))(v74, v36, v76);
          TVShow.url.getter(v64);
        }
        else if (v37 == enum case for GenericMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v72;
          v47 = v71;
          v48 = v73;
          v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v72 + 32))(v71, v36, v73);
          UploadedAudio.postURL.getter(v65);
        }
        else
        {
          if (v37 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v37 != enum case for GenericMusicItem.other(_:))
            {
              v67 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v40, 1, 1, v67);
              return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v33);
            }
            (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
            swift_bridgeObjectRelease(*((_QWORD *)v36 + 1));
LABEL_9:
            v42 = type metadata accessor for URL(0);
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v40, 1, 1, v42);
          }
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v69;
          v47 = v68;
          v48 = v70;
          v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v69 + 32))(v68, v36, v70);
          UploadedVideo.postURL.getter(v66);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
      }
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v87;
      v50 = v86;
      v52 = v88;
      v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v87 + 32))(v86, v36, v88);
      Song.url.getter(v60);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v50, v52);
  }
  (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
  v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v36, v25);
  Artist.url.getter(v41);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

uint64_t GenericMusicItem.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for UploadedVideo(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UploadedAudio(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TVSeason(0);
  v2[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[14] = v10;
  v2[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v2[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[17] = v12;
  v2[18] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v2[19] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[20] = v14;
  v2[21] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v2[22] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[23] = v16;
  v2[24] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicVideo(0);
  v2[25] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[26] = v18;
  v2[27] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicMovie(0);
  v2[28] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[29] = v20;
  v2[30] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Artist(0);
  v2[31] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v2[32] = v22;
  v2[33] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Album(0);
  v2[34] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[35] = v24;
  v2[36] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for GenericMusicItem(0);
  v2[37] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v2[38] = v26;
  v2[39] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009EE5E8, 0, 0);
}

uint64_t sub_1009EE5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for GenericMusicItem.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 288);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 280);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v5, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v9 = (_QWORD *)swift_task_alloc(dword_1011D47BC);
    *(_QWORD *)(v0 + 320) = v9;
    *v9 = v0;
    v9[1] = sub_1009EEE54;
    return Album.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.artist(_:))
  {
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v11, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v11, v14);
    v15 = (_QWORD *)swift_task_alloc(dword_1011D47DC);
    *(_QWORD *)(v0 + 328) = v15;
    *v15 = v0;
    v15[1] = sub_1009EEF90;
    return Artist.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.composer(_:))
    goto LABEL_16;
  if (v4 == enum case for GenericMusicItem.creditArtist(_:))
  {
LABEL_7:
    v16 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
LABEL_17:
    v21 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 96);
    v78 = *(_QWORD *)(v0 + 72);
    v79 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = v4 == enum case for GenericMusicItem.curator(_:) || v4 == enum case for GenericMusicItem.editorialItem(_:);
  if (v18 || v4 == enum case for GenericMusicItem.genre(_:))
    goto LABEL_16;
  if (v4 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v30 = *(_QWORD *)(v0 + 312);
    v32 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 240);
    v33 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v30, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v30, v33);
    v34 = (_QWORD *)swift_task_alloc(dword_1011D4804);
    *(_QWORD *)(v0 + 336) = v34;
    *v34 = v0;
    v34[1] = sub_1009EF0CC;
    return MusicMovie.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v35 = *(_QWORD *)(v0 + 312);
    v37 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v35, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v35, v38);
    v39 = (_QWORD *)swift_task_alloc(dword_1011D4834);
    *(_QWORD *)(v0 + 344) = v39;
    *v39 = v0;
    v39[1] = sub_1009EF208;
    return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.playlist(_:))
  {
    v40 = *(_QWORD *)(v0 + 312);
    v42 = *(_QWORD *)(v0 + 184);
    v41 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v40, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v40, v43);
    v44 = (_QWORD *)swift_task_alloc(dword_1011D4854);
    *(_QWORD *)(v0 + 352) = v44;
    *v44 = v0;
    v44[1] = sub_1009EF344;
    return Playlist.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.radioShow(_:)
    || v4 == enum case for GenericMusicItem.recordLabel(_:)
    || v4 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_16;
  }
  if (v4 == enum case for GenericMusicItem.song(_:))
  {
    v45 = *(_QWORD *)(v0 + 312);
    v47 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);
    v48 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v45, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v46, v45, v48);
    v49 = (_QWORD *)swift_task_alloc(dword_1011D488C);
    *(_QWORD *)(v0 + 360) = v49;
    *v49 = v0;
    v49[1] = sub_1009EF480;
    return Song.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.station(_:))
  {
LABEL_16:
    v20 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    GenericMusicItem.url.getter(v20);
    goto LABEL_17;
  }
  if (v4 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v50 = *(_QWORD *)(v0 + 312);
    v52 = *(_QWORD *)(v0 + 136);
    v51 = *(_QWORD *)(v0 + 144);
    v53 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v50, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v50, v53);
    v54 = (_QWORD *)swift_task_alloc(dword_1011D48F4);
    *(_QWORD *)(v0 + 368) = v54;
    *v54 = v0;
    v54[1] = sub_1009EF5BC;
    return TVEpisode.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v55 = *(_QWORD *)(v0 + 312);
    v57 = *(_QWORD *)(v0 + 112);
    v56 = *(_QWORD *)(v0 + 120);
    v58 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v55, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v55, v58);
    v59 = (_QWORD *)swift_task_alloc(dword_1011D4924);
    *(_QWORD *)(v0 + 376) = v59;
    *v59 = v0;
    v59[1] = sub_1009EF6F8;
    return TVSeason.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.tvShow(_:))
  {
    v60 = *(_QWORD *)(v0 + 312);
    v62 = *(_QWORD *)(v0 + 88);
    v61 = *(_QWORD *)(v0 + 96);
    v63 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v60, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v60, v63);
    v64 = (_QWORD *)swift_task_alloc(dword_1011D4954);
    *(_QWORD *)(v0 + 384) = v64;
    *v64 = v0;
    v64[1] = sub_1009EF834;
    return TVShow.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    v65 = *(_QWORD *)(v0 + 312);
    v67 = *(_QWORD *)(v0 + 64);
    v66 = *(_QWORD *)(v0 + 72);
    v68 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v65, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v66, v65, v68);
    v69 = (_QWORD *)swift_task_alloc(dword_1011D4984);
    *(_QWORD *)(v0 + 392) = v69;
    *v69 = v0;
    v69[1] = sub_1009EF970;
    return UploadedAudio.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else
  {
    if (v4 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      if (v4 != enum case for GenericMusicItem.other(_:))
      {
        v76 = *(_QWORD *)(v0 + 304);
        v75 = *(_QWORD *)(v0 + 312);
        v77 = *(_QWORD *)(v0 + 296);
        GenericMusicItem.url.getter(*(_QWORD *)(v0 + 16));
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
        goto LABEL_17;
      }
      goto LABEL_7;
    }
    v70 = *(_QWORD *)(v0 + 312);
    v72 = *(_QWORD *)(v0 + 40);
    v71 = *(_QWORD *)(v0 + 48);
    v73 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v70, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v71, v70, v73);
    v74 = (_QWORD *)swift_task_alloc(dword_1011D49B4);
    *(_QWORD *)(v0 + 400) = v74;
    *v74 = v0;
    v74[1] = sub_1009EFAAC;
    return UploadedVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_1009EEE54()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 320));
  return swift_task_switch(sub_1009EEEA8, 0, 0);
}

uint64_t sub_1009EEEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EEF90()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_1009EEFE4, 0, 0);
}

uint64_t sub_1009EEFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF0CC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 336));
  return swift_task_switch(sub_1009EF120, 0, 0);
}

uint64_t sub_1009EF120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF208()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  return swift_task_switch(sub_1009EF25C, 0, 0);
}

uint64_t sub_1009EF25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF344()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 352));
  return swift_task_switch(sub_1009EF398, 0, 0);
}

uint64_t sub_1009EF398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF480()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_1009EF4D4, 0, 0);
}

uint64_t sub_1009EF4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF5BC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  return swift_task_switch(sub_1009EF610, 0, 0);
}

uint64_t sub_1009EF610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF6F8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  return swift_task_switch(sub_1009EF74C, 0, 0);
}

uint64_t sub_1009EF74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF834()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 384));
  return swift_task_switch(sub_1009EF888, 0, 0);
}

uint64_t sub_1009EF888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF970()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_1009EF9C4, 0, 0);
}

uint64_t sub_1009EF9C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EFAAC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 400));
  return swift_task_switch(sub_1009EFB00, 0, 0);
}

uint64_t sub_1009EFB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenericMusicItem.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  char *v61;
  unsigned int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int16 v69;
  unint64_t v70;
  char *v71;
  char *v72;
  const char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;

  v98 = type metadata accessor for UploadedVideo(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v95 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for UploadedAudio(0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v95 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for TVShow(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for TVSeason(0);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for TVEpisode(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Station(0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for Song(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for SocialProfile(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for RecordLabel(0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v120 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for RadioShow(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = type metadata accessor for Playlist(0);
  v127 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for MusicVideo(0);
  v130 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v129 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v133 = *(_QWORD *)(v12 - 8);
  v134 = v12;
  __chkstk_darwin(v12);
  v132 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Genre(0);
  v136 = *(_QWORD *)(v14 - 8);
  v137 = v14;
  __chkstk_darwin(v14);
  v135 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v139 = *(_QWORD *)(v16 - 8);
  v140 = v16;
  __chkstk_darwin(v16);
  v138 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Composer(0);
  v142 = *(_QWORD *)(v18 - 8);
  v143 = v18;
  __chkstk_darwin(v18);
  v141 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artist(0);
  v145 = *(_QWORD *)(v20 - 8);
  v146 = v20;
  __chkstk_darwin(v20);
  v144 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v148 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v95 - v29;
  v31 = type metadata accessor for Album(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v95 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v36 + 16))(v39, v147, v35, v37);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v39, v31);
    String.LocalizationValue.init(stringLiteral:)(0x6C41206572616853, 0xAE00A680E26D7562);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v41 = qword_10124DE50;
    v42 = (id)qword_10124DE50;
    v43 = v148;
    static Locale.current.getter(v42);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v41, v43, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v144;
    v45 = v145;
    v47 = v146;
    (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v144, v39, v146);
    v48 = 0x7241206572616853;
    v49 = 0xAFA680E274736974;
LABEL_7:
    String.LocalizationValue.init(stringLiteral:)(v48, v49);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v50 = qword_10124DE50;
    v51 = (id)qword_10124DE50;
    v52 = v148;
    static Locale.current.getter(v51);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v50, v52, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
LABEL_18:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v141;
    v45 = v142;
    v47 = v143;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v141, v39, v143);
    v53 = v30;
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000011, 0x8000000100E4B460);
    v54 = v27;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v55 = qword_10124DE50;
    v56 = (id)qword_10124DE50;
    v57 = v148;
    static Locale.current.getter(v56);
    v44 = String.init(localized:table:bundle:locale:comment:)(v54, 0, 0, v55, v57, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v53, v24);
    goto LABEL_18;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v138;
    v45 = v139;
    v47 = v140;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v39, v140);
    v58 = v30;
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000010, 0x8000000100E4B4A0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v59 = qword_10124DE50;
    v60 = (id)qword_10124DE50;
    v61 = v148;
    static Locale.current.getter(v60);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v59, v61, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v58, v24);
    goto LABEL_18;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v135;
    v45 = v136;
    v47 = v137;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v135, v39, v137);
    v49 = 0xAE00A680E265726ELL;
    v48 = 0x6547206572616853;
    goto LABEL_7;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v132;
    v45 = v133;
    v47 = v134;
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v132, v39, v134);
    v48 = 0x6F4D206572616853;
    v63 = -496670346;
LABEL_26:
    v49 = v63 | 0xAE00A68000000000;
    goto LABEL_7;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v130;
    v46 = v129;
    v47 = v131;
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v129, v39, v131);
    v48 = 0x6956206572616853;
    v63 = -496016028;
    goto LABEL_26;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v127;
    v46 = v126;
    v47 = v128;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v39, v128);
    v48 = 0x1000000000000011;
    v49 = 0x8000000100E4B540;
    goto LABEL_7;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v124;
    v65 = v123;
    v66 = v39;
    v67 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v66, v125);
    v68 = 0x6853206572616853;
    v69 = 30575;
LABEL_31:
    v70 = v69 | 0xAD0000A680E20000;
LABEL_43:
    String.LocalizationValue.init(stringLiteral:)(v68, v70);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v77 = qword_10124DE50;
    v78 = (id)qword_10124DE50;
    v79 = v148;
    static Locale.current.getter(v78);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v77, v79, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v67);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v121;
    v65 = v120;
    v71 = v39;
    v67 = v122;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v120, v71, v122);
    v68 = 0x1000000000000015;
    v70 = 0x8000000100E4B5A0;
    goto LABEL_43;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v118;
    v65 = v117;
    v72 = v39;
    v67 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v117, v72, v119);
    v73 = "Share Profile…";
LABEL_42:
    v70 = (unint64_t)(v73 - 32) | 0x8000000000000000;
    v68 = 0x1000000000000010;
    goto LABEL_43;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v115;
    v65 = v114;
    v74 = v39;
    v67 = v116;
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v74, v116);
    v68 = 0x6F53206572616853;
    v69 = 26478;
    goto LABEL_31;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v112;
    v65 = v111;
    v75 = v39;
    v67 = v113;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v111, v75, v113);
    v73 = "Share Station…";
    goto LABEL_42;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v64 = v106;
    v65 = v105;
    v76 = v39;
    v67 = v107;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v105, v76, v107);
    v73 = "Share Episode…";
    goto LABEL_42;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v108, v39, v110);
    String.LocalizationValue.init(stringLiteral:)(0x6553206572616853, 0xAFA680E26E6F7361);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v80 = qword_10124DE50;
    v81 = (id)qword_10124DE50;
    v82 = v148;
    static Locale.current.getter(v81);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v80, v82, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
  }
  else if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v39, v104);
    String.LocalizationValue.init(stringLiteral:)(0x6853206572616853, 0xAD0000A680E2776FLL);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v83 = qword_10124DE50;
    v84 = (id)qword_10124DE50;
    v85 = v148;
    static Locale.current.getter(v84);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v83, v85, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v39, v101);
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v86 = qword_10124DE50;
    v87 = (id)qword_10124DE50;
    v88 = v148;
    static Locale.current.getter(v87);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v86, v88, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v39, v98);
    String.LocalizationValue.init(stringLiteral:)(0x6956206572616853, 0xAE00A680E26F6564);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v89 = qword_10124DE50;
    v90 = (id)qword_10124DE50;
    v91 = v148;
    static Locale.current.getter(v90);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v89, v91, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v92 = qword_10124DE50;
    v93 = (id)qword_10124DE50;
    v94 = v148;
    static Locale.current.getter(v93);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v92, v94, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  }
  return v44;
}

uint64_t GenericMusicItem.failureMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  const char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  const char *v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;

  v76 = type metadata accessor for UploadedVideo(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v73 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for UploadedAudio(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v77 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for TVShow(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TVSeason(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for TVEpisode(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for Station(0);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for Song(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for SocialProfile(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for RecordLabel(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for RadioShow(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for Playlist(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for MusicVideo(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v111 = *(_QWORD *)(v12 - 8);
  v112 = v12;
  __chkstk_darwin(v12);
  v110 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Genre(0);
  v114 = *(_QWORD *)(v14 - 8);
  v115 = v14;
  __chkstk_darwin(v14);
  v113 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v117 = *(_QWORD *)(v16 - 8);
  v118 = v16;
  __chkstk_darwin(v16);
  v116 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Composer(0);
  v120 = *(_QWORD *)(v18 - 8);
  v121 = v18;
  __chkstk_darwin(v18);
  v119 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artist(0);
  v123 = *(_QWORD *)(v20 - 8);
  v124 = v20;
  __chkstk_darwin(v20);
  v122 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v125 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v73 - v29;
  v31 = type metadata accessor for Album(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v36 + 16))(v39, v126, v35, v37);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v39, v31);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4B420);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v41 = qword_10124DE50;
    v42 = (id)qword_10124DE50;
    v43 = v125;
    static Locale.current.getter(v42);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v41, v43, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v122;
    v45 = v123;
    v47 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v39, v124);
    v48 = 0xD00000000000001CLL;
    v49 = "Unable to share this artist.";
LABEL_13:
    v55 = (unint64_t)(v49 - 32) | 0x8000000000000000;
LABEL_14:
    String.LocalizationValue.init(stringLiteral:)(v48, v55);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v56 = qword_10124DE50;
    v57 = (id)qword_10124DE50;
    v58 = v125;
    static Locale.current.getter(v57);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v56, v58, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    return v44;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v119;
    v45 = v120;
    v47 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v39, v121);
    v50 = v30;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E4B480);
    v51 = v27;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v52 = qword_10124DE50;
    v53 = (id)qword_10124DE50;
    v54 = v125;
    static Locale.current.getter(v53);
    v44 = String.init(localized:table:bundle:locale:comment:)(v51, 0, 0, v52, v54, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v50, v24);
    goto LABEL_17;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v116;
    v45 = v117;
    v47 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v39, v118);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this curator.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v113;
    v45 = v114;
    v47 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v39, v115);
    v60 = "Unable to share this genre.";
LABEL_25:
    v55 = (unint64_t)(v60 - 32) | 0x8000000000000000;
    v48 = 0xD00000000000001BLL;
    goto LABEL_14;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v46 = v110;
    v45 = v111;
    v47 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v39, v112);
    v60 = "Unable to share this movie.";
    goto LABEL_25;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v108;
    v46 = v107;
    v47 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v39, v109);
    v60 = "Unable to share this video.";
    goto LABEL_25;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v105;
    v46 = v104;
    v47 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v39, v106);
    v48 = 0xD00000000000001ELL;
    v49 = "Unable to share this playlist.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v102;
    v46 = v101;
    v47 = v103;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v39, v103);
    v48 = 0xD00000000000001ALL;
    v49 = "Unable to share this show.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v99;
    v46 = v98;
    v47 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v39, v100);
    v48 = 0xD000000000000022;
    v49 = "Unable to share this record label.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v96;
    v46 = v95;
    v47 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v39, v97);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this profile.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v93;
    v46 = v92;
    v47 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v39, v94);
    v48 = 0xD00000000000001ALL;
    v49 = "Unable to share this song.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v90;
    v46 = v89;
    v47 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v39, v91);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this station.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    v45 = v84;
    v46 = v83;
    v47 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v83, v39, v85);
    v48 = 0xD00000000000001DLL;
    v49 = "Unable to share this episode.";
    goto LABEL_13;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v39, v88);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x8000000100E4B6D0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v61 = qword_10124DE50;
    v62 = (id)qword_10124DE50;
    v63 = v125;
    static Locale.current.getter(v62);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v61, v63, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  }
  else if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v39, v82);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4B580);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v64 = qword_10124DE50;
    v65 = (id)qword_10124DE50;
    v66 = v125;
    static Locale.current.getter(v65);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v64, v66, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v39, v79);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4B400);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v67 = qword_10124DE50;
    v68 = (id)qword_10124DE50;
    v69 = v125;
    static Locale.current.getter(v68);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v67, v69, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v39, v76);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4B520);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v70 = qword_10124DE50;
    v71 = (id)qword_10124DE50;
    v72 = v125;
    static Locale.current.getter(v71);
    v44 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v70, v72, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
  }
  else
  {
    v44 = GenericMusicItem.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  }
  return v44;
}

uint64_t sub_1009F2204(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D49E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return GenericMusicItem.shareURL.getter(a1);
}

uint64_t sub_1009F225C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011D2AE0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F22B8, 0, 0);
}

uint64_t sub_1009F22B8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_1011D49E4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1009F2310;
  return GenericMusicItem.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1009F2310()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_1009F2364, 0, 0);
}

uint64_t sub_1009F2364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v1 = *(_QWORD *)(v0 + 32);
  }
  objc_msgSend(*(id *)(v0 + 40), "setOriginalURL:", v5);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F2408()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D4740);
  sub_100048B14(v0, (uint64_t)qword_1011D4740);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x676E6972616853, 0xE700000000000000);
}

size_t sub_1009F247C(size_t a1, int64_t a2, char a3)
{
  char **v3;
  size_t result;

  result = sub_1009F2578(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

char *sub_1009F2498(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1009F26F4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1009F24B4(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1009F27E8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1009F24D0(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1009F2904(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1009F24EC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1009F2A38(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1009F2508(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1009F2B38(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1009F2524(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1009F2C58(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1009F2540(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1009F2D50(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_1009F255C(size_t a1, int64_t a2, char a3)
{
  char **v3;
  size_t result;

  result = sub_1009F2E48(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

size_t sub_1009F2578(size_t result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  unint64_t v18;
  char *v19;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100007E8C(&qword_1011D2AE8);
  v11 = *(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (char *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  *((_QWORD *)v15 + 2) = v8;
  *((_QWORD *)v15 + 3) = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = &v15[v18];
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v19 >= &a4[v18 + *(_QWORD *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v19);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v19);
    }
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v19);
  }
  swift_release(a4);
  return (size_t)v15;
}

char *sub_1009F26F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3D68);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_release(a4);
  return v11;
}

char *sub_1009F27E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D8810);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_release();
  return v11;
}

_QWORD *sub_1009F2904(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011D96C0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D86F0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release(a4);
  return v11;
}

char *sub_1009F2A38(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_release(a4);
  return v11;
}

_QWORD *sub_1009F2B38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DF8);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_100007E8C(&qword_1011D3728);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release();
  return v11;
}

char *sub_1009F2C58(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3D60);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_release();
  return v11;
}

char *sub_1009F2D50(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100007E8C(&qword_1011D3DB0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_release();
  return v11;
}

size_t sub_1009F2E48(size_t result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  unint64_t v18;
  char *v19;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100007E8C(&qword_1011D3D58);
  v11 = *(_QWORD *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (char *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  *((_QWORD *)v15 + 2) = v8;
  *((_QWORD *)v15 + 3) = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = *(_QWORD *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = &v15[v18];
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v19 >= &a4[v18 + *(_QWORD *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v19);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v19);
    }
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v19);
  }
  swift_release();
  return (size_t)v15;
}

uint64_t sub_1009F2FBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  unint64_t (*v29)();
  unint64_t (*v30)();
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35[2];
  __int128 v36[2];
  __int128 v37[2];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v33 = a4;
  v34 = a3;
  v10 = sub_100007E8C(&qword_1011D2EB8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  sub_100064C78((uint64_t)a1, (uint64_t)v38);
  sub_100064C78((uint64_t)a3, (uint64_t)v37);
  sub_100064C78((uint64_t)a1, (uint64_t)v36);
  v17 = swift_allocObject(&unk_1010EDE28, 96, 7);
  sub_100064C48(v37, v17 + 16);
  sub_100064C48(v36, v17 + 56);
  sub_10004A160(a4, (uint64_t)v16, &qword_1011D2EB8);
  sub_100064C78((uint64_t)v38, (uint64_t)v35);
  v18 = swift_allocObject(&unk_1010EDE50, 64, 7);
  *(_QWORD *)(v18 + 16) = a2;
  sub_100064C48(v35, v18 + 24);
  v19 = (unint64_t (*)())swift_allocObject(&unk_1010EDE78, 48, 7);
  *((_QWORD *)v19 + 2) = sub_1009F3B28;
  *((_QWORD *)v19 + 3) = v18;
  *((_QWORD *)v19 + 4) = &unk_1011D4BF0;
  *((_QWORD *)v19 + 5) = v17;
  sub_10004A160((uint64_t)v16, (uint64_t)v13, &qword_1011D2EB8);
  sub_100064C78((uint64_t)v38, (uint64_t)v35);
  v20 = *(unsigned __int8 *)(v11 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1010EDEA0, v22 + 40, v20 | 7);
  sub_10098C5E8((uint64_t)v13, v23 + v21);
  sub_100064C48(v35, v23 + v22);
  v24 = v39;
  v25 = v40;
  sub_100007E68(v38, v39);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 32);
  v27 = swift_retain();
  v28 = v26(v24, v25, v27);
  v30 = v29;
  sub_10004FF60((uint64_t)v16, &qword_1011D2EB8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v38);
  sub_10004FF60(v33, &qword_1011D2EB8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v34);
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  *a5 = sub_1009F3B28;
  a5[1] = (unint64_t (*)())v18;
  a5[2] = (unint64_t (*)())&unk_1011D4BF8;
  a5[3] = v19;
  a5[4] = (unint64_t (*)())&unk_1011D4C00;
  a5[5] = (unint64_t (*)())v23;
  a5[6] = (unint64_t (*)())v28;
  a5[7] = v30;
  return result;
}

uint64_t sub_1009F323C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1009F3264()
{
  uint64_t v0;

  return sub_1009E0BB4(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1009F3274()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1011D476C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  return sub_1009E1E64(v2, v3, v5, v4);
}

uint64_t sub_1009F32DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D477C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  return sub_1009E205C(v4, v5);
}

uint64_t sub_1009F3368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D479C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10005AEE4;
  return sub_1009E250C(v4, v5);
}

uint64_t sub_1009F33E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_1009F33F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ArtistFilter.id.getter, a2);
}

uint64_t sub_1009F3400@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicMovieFilter.id.getter, a2);
}

uint64_t sub_1009F340C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_1009F3418@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PlaylistFilter.id.getter, a2);
}

uint64_t sub_1009F3424@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_1009F3430@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1009F343C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVEpisodeFilter.id.getter, a2);
}

uint64_t sub_1009F3448@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVSeasonFilter.id.getter, a2);
}

uint64_t sub_1009F3454@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVShowFilter.id.getter, a2);
}

uint64_t sub_1009F3460@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedAudioFilter.id.getter, a2);
}

uint64_t sub_1009F346C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100040750(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedVideoFilter.id.getter, a2);
}

uint64_t sub_1009F3478(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D4A78, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F34B4(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D41B0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F34F0(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D41B8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F352C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D4B10, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F3568(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D41C0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F35A4(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D41C8, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F35E0(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D41D0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F361C(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D4B88, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F3658(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011D41D8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009F3694(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748((unint64_t *)&unk_1011D8860, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Actions.Share()
{
  return &type metadata for Actions.Share;
}

uint64_t _s5ShareO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t _s5ShareO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v8;
  v5 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain(v3);
  swift_retain(v8);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *_s5ShareO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t _s5ShareO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease(v8);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.Share.Context()
{
  return &type metadata for Actions.Share.Context;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics()
{
  return &type metadata for Actions.ShareLyrics;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics.Context()
{
  return &type metadata for Actions.ShareLyrics.Context;
}

uint64_t sub_1009F38C0()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96);
}

uint64_t sub_1009F38EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D4BEC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return sub_1009E0880(v0 + 16, v0 + 56);
}

uint64_t sub_1009F3944()
{
  uint64_t v0;

  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64);
}

uint64_t sub_1009F3978()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(_QWORD *)(v4 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 24);
      v9 = type metadata accessor for URL(0);
      v13 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 40;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11);
}

void Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)();
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)();
  uint64_t (*v44)();
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 *v54;
  uint64_t (*v55)();
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (**v59)();
  uint64_t v60;

  v56 = a7;
  v57 = a8;
  v58 = a6;
  v59 = a9;
  v53 = a5;
  v54 = a3;
  v51 = a4;
  v60 = a2;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v46 = (char *)&v45 - v16;
  v18 = v17;
  v50 = v17;
  __chkstk_darwin(v15);
  v20 = (char *)&v45 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v47 = a1;
  v21((char *)&v45 - v19, a1, a10);
  v49 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v49 + 40) & ~v49;
  v23 = v22 + v18;
  v24 = v49 | 7;
  v25 = (uint64_t (*)())swift_allocObject(&unk_1010EDEF0, v23, v49 | 7);
  v55 = v25;
  *((_QWORD *)v25 + 2) = a10;
  *((_QWORD *)v25 + 3) = a11;
  v48 = a11;
  v26 = v60;
  *((_QWORD *)v25 + 4) = v60;
  v45 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v45((char *)v25 + v22, v20, a10);
  v27 = v46;
  v21(v46, a1, a10);
  v28 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 79) & 0xFFFFFFFFFFFFFFF8;
  v31 = (uint64_t (*)())swift_allocObject(&unk_1010EDF18, v30 + 40, v24);
  *((_QWORD *)v31 + 2) = a10;
  *((_QWORD *)v31 + 3) = a11;
  *((_QWORD *)v31 + 4) = v26;
  v32 = (char *)v31 + v22;
  v33 = (void (*)(char *, uint64_t, uint64_t))v45;
  v45(v32, v27, a10);
  sub_100065228(v51, (uint64_t)v31 + v28, &qword_1011D2F28);
  sub_100065228(v53, (uint64_t)v31 + v29, &qword_1011D2F20);
  sub_100064C48(v54, (uint64_t)v31 + v30);
  v34 = v52;
  v33(v52, v47, a10);
  v35 = (void (*)(char *, char *, uint64_t))v33;
  v36 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = (v37 + 48) & ~v37;
  v39 = (*(_QWORD *)(v36 + 64) + v49 + v38) & ~v49;
  v40 = (uint64_t (*)())swift_allocObject(&unk_1010EDF40, v39 + v50, v24 | v37);
  v41 = v48;
  *((_QWORD *)v40 + 2) = a10;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v57;
  *((_QWORD *)v40 + 4) = v56;
  *((_QWORD *)v40 + 5) = v42;
  sub_100065228(v58, (uint64_t)v40 + v38, &qword_1011D2EB8);
  v35((char *)v40 + v39, v34, a10);
  swift_retain(v60);
  v43 = v59;
  v44 = v55;
  *v59 = sub_1009F46E4;
  v43[1] = v44;
  v43[2] = (uint64_t (*)())&unk_1011D4C10;
  v43[3] = v31;
  v43[4] = (uint64_t (*)())&unk_1011D4C20;
  v43[5] = v40;
}

uint64_t static Actions.Favorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 10, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4C28, (uint64_t)&unk_1011D4C30, a2);
}

void Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)();
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)();
  uint64_t (*v44)();
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __int128 *v54;
  uint64_t (*v55)();
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (**v59)();
  uint64_t v60;

  v56 = a7;
  v57 = a8;
  v58 = a6;
  v59 = a9;
  v53 = a5;
  v54 = a3;
  v51 = a4;
  v60 = a2;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v46 = (char *)&v45 - v16;
  v18 = v17;
  v50 = v17;
  __chkstk_darwin(v15);
  v20 = (char *)&v45 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v47 = a1;
  v21((char *)&v45 - v19, a1, a10);
  v49 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v49 + 40) & ~v49;
  v23 = v22 + v18;
  v24 = v49 | 7;
  v25 = (uint64_t (*)())swift_allocObject(&unk_1010EDF68, v23, v49 | 7);
  v55 = v25;
  *((_QWORD *)v25 + 2) = a10;
  *((_QWORD *)v25 + 3) = a11;
  v48 = a11;
  v26 = v60;
  *((_QWORD *)v25 + 4) = v60;
  v45 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v45((char *)v25 + v22, v20, a10);
  v27 = v46;
  v21(v46, a1, a10);
  v28 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 79) & 0xFFFFFFFFFFFFFFF8;
  v31 = (uint64_t (*)())swift_allocObject(&unk_1010EDF90, v30 + 40, v24);
  *((_QWORD *)v31 + 2) = a10;
  *((_QWORD *)v31 + 3) = a11;
  *((_QWORD *)v31 + 4) = v26;
  v32 = (char *)v31 + v22;
  v33 = (void (*)(char *, uint64_t, uint64_t))v45;
  v45(v32, v27, a10);
  sub_100065228(v51, (uint64_t)v31 + v28, &qword_1011D2F28);
  sub_100065228(v53, (uint64_t)v31 + v29, &qword_1011D2F20);
  sub_100064C48(v54, (uint64_t)v31 + v30);
  v34 = v52;
  v33(v52, v47, a10);
  v35 = (void (*)(char *, char *, uint64_t))v33;
  v36 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = (v37 + 48) & ~v37;
  v39 = (*(_QWORD *)(v36 + 64) + v49 + v38) & ~v49;
  v40 = (uint64_t (*)())swift_allocObject(&unk_1010EDFB8, v39 + v50, v24 | v37);
  v41 = v48;
  *((_QWORD *)v40 + 2) = a10;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v57;
  *((_QWORD *)v40 + 4) = v56;
  *((_QWORD *)v40 + 5) = v42;
  sub_100065228(v58, (uint64_t)v40 + v38, &qword_1011D2EB8);
  v35((char *)v40 + v39, v34, a10);
  swift_retain(v60);
  v43 = v59;
  v44 = v55;
  *v59 = sub_1009F60BC;
  v43[1] = v44;
  v43[2] = (uint64_t (*)())&unk_1011D4C40;
  v43[3] = v31;
  v43[4] = (uint64_t (*)())&unk_1011D4C50;
  v43[5] = v40;
}

uint64_t static Actions.UndoFavorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 55, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4C58, (uint64_t)&unk_1011D4C60, a2);
}

void Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t (*v26)();
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t (*v37)();
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t (*v41)();
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  uint64_t v47;

  v43 = a3;
  v44 = a4;
  v46 = a1;
  v47 = a2;
  v45 = a7;
  v9 = *(_QWORD *)(a5 - 8);
  v10 = __chkstk_darwin(a1);
  v42 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v39 = (char *)&v38 - v13;
  v40 = v14;
  v15 = v14;
  __chkstk_darwin(v12);
  v17 = (char *)&v38 - v16;
  v18 = *(void (**)(char *))(v9 + 16);
  v18((char *)&v38 - v16);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = (v19 + 40) & ~v19;
  v21 = v20 + v15;
  v22 = (uint64_t (*)())swift_allocObject(&unk_1010EDFE0, v21, v19 | 7);
  v41 = v22;
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = a6;
  v23 = v47;
  *((_QWORD *)v22 + 4) = v47;
  v38 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v38((char *)v22 + v20, v17, a5);
  v24 = v39;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v39, v46, a5);
  v25 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (uint64_t (*)())swift_allocObject(&unk_1010EE008, v25 + 40, v19 | 7);
  *((_QWORD *)v26 + 2) = a5;
  *((_QWORD *)v26 + 3) = a6;
  *((_QWORD *)v26 + 4) = v23;
  v27 = (char *)v26 + v20;
  v28 = (void (*)(char *, uint64_t, uint64_t))v38;
  v38(v27, v24, a5);
  sub_100065228(v43, (uint64_t)v26 + v25, &qword_1011D2F28);
  v29 = v42;
  v28(v42, v46, a5);
  v30 = (void (*)(uint64_t, char *, uint64_t))v28;
  v31 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = (*(_QWORD *)(v31 + 64) + v19 + v33) & ~v19;
  v35 = swift_allocObject(&unk_1010EE030, v34 + v40, v19 | 7 | v32);
  *(_QWORD *)(v35 + 16) = a5;
  *(_QWORD *)(v35 + 24) = a6;
  sub_100065228(v44, v35 + v33, &qword_1011D2EB8);
  v30(v35 + v34, v29, a5);
  swift_retain(v47);
  v36 = v45;
  v37 = v41;
  *v45 = sub_1009F7D74;
  v36[1] = v37;
  v36[2] = (uint64_t (*)())&unk_1011D4C70;
  v36[3] = v26;
  v36[4] = (uint64_t (*)())&unk_1011D4C80;
  v36[5] = (uint64_t (*)())v35;
}

uint64_t static Actions.SuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 54, (uint64_t)sub_10098CA8C, (uint64_t)&unk_1011D4C88, (uint64_t)&unk_1011D4C90, a2);
}

void Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t (**a6)()@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t (*v28)();
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)();
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t (*v42)();
  char *v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;

  v44 = a3;
  v45 = a6;
  v46 = a2;
  v39 = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = __chkstk_darwin(a1);
  v43 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v37 - v13;
  v16 = v15;
  v41 = v15;
  __chkstk_darwin(v12);
  v18 = (char *)&v37 - v17;
  sub_10004FF60(v19, &qword_1011D2F28);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v40(v18, (uint64_t)a1, a4);
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = v21 + v16;
  v38 = v21 + v16;
  v23 = v20 | 7;
  v24 = (uint64_t (*)())swift_allocObject(&unk_1010EE058, v22, v20 | 7);
  v42 = v24;
  *((_QWORD *)v24 + 2) = a4;
  *((_QWORD *)v24 + 3) = a5;
  v25 = v46;
  *((_QWORD *)v24 + 4) = v46;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26((char *)v24 + v21, v18, a4);
  v27 = v39;
  v40(v14, (uint64_t)v39, a4);
  v28 = (uint64_t (*)())swift_allocObject(&unk_1010EE080, v38, v20 | 7);
  *((_QWORD *)v28 + 2) = a4;
  *((_QWORD *)v28 + 3) = a5;
  *((_QWORD *)v28 + 4) = v25;
  v26((char *)v28 + v21, v14, a4);
  v29 = v43;
  v26(v43, v27, a4);
  v30 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = (*(_QWORD *)(v30 + 64) + v20 + v32) & ~v20;
  v34 = swift_allocObject(&unk_1010EE0A8, v33 + v41, v23 | v31);
  *(_QWORD *)(v34 + 16) = a4;
  *(_QWORD *)(v34 + 24) = a5;
  sub_100065228(v44, v34 + v32, &qword_1011D2EB8);
  v26((char *)(v34 + v33), v29, a4);
  swift_retain(v46);
  v35 = v45;
  v36 = v42;
  *v45 = sub_1009F8AA8;
  v35[1] = v36;
  v35[2] = (uint64_t (*)())&unk_1011D4CA0;
  v35[3] = v28;
  v35[4] = (uint64_t (*)())&unk_1011D4CB0;
  v35[5] = (uint64_t (*)())v34;
}

uint64_t static Actions.UndoSuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D58E0(a1, 56, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4CB8, (uint64_t)&unk_1011D4CC0, a2);
}

uint64_t sub_1009F4578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 10, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4C28, (uint64_t)&unk_1011D4C30, a2);
}

uint64_t sub_1009F4598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 55, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4C58, (uint64_t)&unk_1011D4C60, a2);
}

uint64_t sub_1009F45B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D4DA0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.favorite.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_1009F46F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_1009F46E4()
{
  return sub_1009F8AB4((uint64_t (*)(_QWORD, uint64_t))sub_1009F45B8);
}

uint64_t sub_1009F46F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void (*v20)(char *, char *, uint64_t);
  int v21;
  char *v22;
  unint64_t v23;
  __n128 v24;
  Swift::String v25;
  void *object;
  __n128 v27;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  __n128 v42;
  char *v43;
  Swift::String v44;
  void *v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v48 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v48 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v48 - v9;
  v11 = sub_100007E8C(&qword_1011D4DA0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v48 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v48 - v16, v1, v11);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v19 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v19 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v49 = 0;
      v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v24 = swift_bridgeObjectRelease(v50);
      v49 = 0xD000000000000019;
      v50 = 0x8000000100E4B770;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v18)(v15, v1, v11, v24);
      v25._countAndFlagsBits = String.init<A>(describing:)(v15, v11);
      object = v25._object;
      String.append(_:)(v25);
      v27 = swift_bridgeObjectRelease(object);
      v23 = v49;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v17, v11, v27);
      return v23;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v17, v11);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v17, v2);
  v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v8, v10, v2);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
LABEL_3:
    v22 = v10;
    v23 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v22, v2);
    return v23;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.alreadyFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000011;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cannotFavoriteWhenDisliked(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD00000000000001DLL;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000018;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    v29 = v10;
    if (qword_1011D1C28 != -1)
      swift_once(&qword_1011D1C28, sub_100A2D554);
    v30 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath("Xc4");
    v32 = swift_getKeyPath(&unk_100EDC9D0);
    static Published.subscript.getter(&v49, v30, KeyPath, v32);
    swift_release(KeyPath);
    swift_release(v32);
    v33 = v50;
    v34 = v51;
    v35 = v52;
    v36 = v53;
    v37 = v54;
    v38 = v55;
    v39 = v56;
    swift_bridgeObjectRelease(v57);
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v37);

    if ((v33 & 0x100) != 0)
      v23 = 0;
    else
      v23 = 0xD000000000000016;
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v29, v2, v40);
    return v23;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0x6C20646572616853;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD00000000000001CLL;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000013;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000014;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.networkRequired(_:))
    goto LABEL_3;
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000025;
  }
  else
  {
    v41 = v10;
    if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unknown(_:))
    {
      v23 = 0x206E776F6E6B6E55;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v41, v2);
    }
    else
    {
      v49 = 0;
      v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      v42 = swift_bridgeObjectRelease(v50);
      v49 = 0x206E776F6E6B6E55;
      v50 = 0xEF206E6F73616572;
      v43 = v48;
      ((void (*)(char *, char *, uint64_t, __n128))v20)(v48, v41, v2, v42);
      v44._countAndFlagsBits = String.init<A>(describing:)(v43, v2);
      v45 = v44._object;
      String.append(_:)(v44);
      v46 = swift_bridgeObjectRelease(v45);
      v23 = v49;
      v47 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
      v47(v41, v2, v46);
      ((void (*)(char *, uint64_t))v47)(v8, v2);
    }
  }
  return v23;
}

uint64_t sub_1009F4DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  v8 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[48] = swift_task_alloc(v10);
  v7[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for Notice.Variant(0);
  v7[50] = v11;
  v7[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v7[52] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[53] = v13;
  v7[54] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011D4DA0);
  v7[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[57] = swift_task_alloc(v16);
  v7[58] = swift_task_alloc(v16);
  return swift_task_switch(sub_1009F4EB0, 0, 0);
}

uint64_t sub_1009F4EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 448);
  v5 = *(_QWORD *)(v1 + 432);
  v52 = *(_QWORD *)(v1 + 424);
  v53 = *(_QWORD *)(v1 + 456);
  v6 = *(_QWORD *)(v1 + 416);
  v8 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 320);
  static MusicLibraryAction<>.favorite.getter(a1);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v9, v5, v8, v6, *(_QWORD *)(v7 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v53, v2, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v53, v3);
  if (v10 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v11 = *(_QWORD *)(v1 + 456);
    v13 = *(_QWORD *)(v1 + 384);
    v12 = *(_QWORD *)(v1 + 392);
    v14 = *(_QWORD *)(v1 + 368);
    v15 = *(_QWORD *)(v1 + 376);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 448) + 96))(v11, *(_QWORD *)(v1 + 440));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v13, v14);
    if (v16 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_10004A160(*(_QWORD *)(v1 + 336), v1 + 88, &qword_1011D2F20);
      if (*(_QWORD *)(v1 + 144) != 1)
      {
        sub_100064EF0(v1 + 88, v1 + 16);
        v37 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v1 + 568) = v37;
        *(_QWORD *)(v1 + 576) = static MainActor.shared.getter(v38);
        v39 = dispatch thunk of Actor.unownedExecutor.getter(v37, &protocol witness table for MainActor);
        v33 = v40;
        *(_QWORD *)(v1 + 584) = v39;
        *(_QWORD *)(v1 + 592) = v40;
        v24 = sub_1009F5694;
        v32 = v39;
        return swift_task_switch(v24, v32, v33);
      }
      v17 = *(_QWORD **)(v1 + 344);
      sub_10004FF60(v1 + 88, &qword_1011D2F20);
      v18 = v17[3];
      *(_QWORD *)(v1 + 528) = v18;
      *(_QWORD *)(v1 + 536) = v17[4];
      *(_QWORD *)(v1 + 544) = sub_100007E68(v17, v18);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 552) = static MainActor.shared.getter(v20);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      v23 = v22;
      v24 = sub_1009F55B0;
LABEL_9:
      v32 = v21;
      v33 = v23;
      return swift_task_switch(v24, v32, v33);
    }
    if (v16 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v27 = *(_QWORD **)(v1 + 344);
      v28 = v27[3];
      *(_QWORD *)(v1 + 624) = v28;
      *(_QWORD *)(v1 + 632) = v27[4];
      *(_QWORD *)(v1 + 640) = sub_100007E68(v27, v28);
      v29 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 648) = static MainActor.shared.getter(v30);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
      v23 = v31;
      v24 = sub_1009F58B4;
      goto LABEL_9;
    }
    v41 = *(_QWORD *)(v1 + 464);
    v42 = *(_QWORD *)(v1 + 440);
    v43 = *(_QWORD *)(v1 + 448);
    v44 = *(_QWORD *)(v1 + 384);
    v45 = *(_QWORD *)(v1 + 368);
    v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 376) + 8);
    v46(*(_QWORD *)(v1 + 392), v45);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    v46(v44, v45);
  }
  else
  {
    if (v10 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v25 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.favorite<A>(_:)[1]);
      *(_QWORD *)(v1 + 472) = v25;
      *v25 = v1;
      v25[1] = sub_1009F527C;
      return MusicLibrary.favorite<A>(_:)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
    }
    v34 = *(_QWORD *)(v1 + 456);
    v35 = *(_QWORD *)(v1 + 440);
    v36 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 8);
    v36(*(_QWORD *)(v1 + 464), v35);
    v36(v34, v35);
  }
  v47 = *(_QWORD *)(v1 + 456);
  v48 = *(_QWORD *)(v1 + 432);
  v49 = *(_QWORD *)(v1 + 408);
  v51 = *(_QWORD *)(v1 + 384);
  v50 = *(_QWORD *)(v1 + 392);
  swift_task_dealloc(*(_QWORD *)(v1 + 464));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009F527C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009F5A38;
  else
    v3 = sub_1009F52E0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009F52E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);

  sub_10004A160(v0[41], (uint64_t)(v0 + 34), &qword_1011D2F28);
  v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v3 = v0[50];
    v2 = v0[51];
    v0[62] = v0[38];
    v0[63] = sub_100007E68(v0 + 34, v1);
    swift_storeEnumTagMultiPayload(v2, v3, 9);
    v4 = type metadata accessor for MainActor(0);
    v0[64] = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F53FC, v6, v7);
  }
  else
  {
    sub_10004FF60((uint64_t)(v0 + 34), &qword_1011D2F28);
    v10 = (uint64_t (*)(uint64_t))((char *)&dword_1011DBC00 + dword_1011DBC00);
    v9 = (_QWORD *)swift_task_alloc(unk_1011DBC04);
    v0[65] = v9;
    *v9 = v0;
    v9[1] = sub_1009F54D4;
    return v10(v0[42]);
  }
}

uint64_t sub_1009F53FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[51];
  swift_release();
  sub_1009FF5F0(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_1009F546C, 0, 0);
}

uint64_t sub_1009F546C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v0 + 34);
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1011DBC00 + dword_1011DBC00);
  v1 = (_QWORD *)swift_task_alloc(unk_1011DBC04);
  v0[65] = v1;
  *v1 = v0;
  v1[1] = sub_1009F54D4;
  return v3(v0[42]);
}

uint64_t sub_1009F54D4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  return swift_task_switch(sub_1009F5528, 0, 0);
}

uint64_t sub_1009F5528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F55B0()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release();
  sub_100A56630(5, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_1009F5634;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[66], v0[67]);
}

uint64_t sub_1009F5634()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_100365848(v1);
  return swift_task_switch(sub_1009F96E8, 0, 0);
}

uint64_t sub_1009F5694(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 5;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_1009F5758;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 83, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100E4AA20, sub_1009F96F0, v3, &type metadata for Bool);
}

uint64_t sub_1009F5758()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1009F57C8, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_1009F57C8()
{
  swift_release();
  return swift_task_switch(sub_1009F5804, 0, 0);
}

uint64_t sub_1009F5804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  sub_100064B4C(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 408);
  v11 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F58B4()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[79];
  swift_release();
  sub_100A56824(0, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[82] = v3;
  *v3 = v0;
  v3[1] = sub_1009F5938;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[78], v0[79]);
}

uint64_t sub_1009F5938()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 656));
  sub_100365848(v1);
  return swift_task_switch(sub_1009F5998, 0, 0);
}

uint64_t sub_1009F5998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 368));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F5A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(v2, *(_QWORD *)(v0 + 440));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F5AC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0[4];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v7;
  v12 = (uint64_t)v0 + ((v7 + 79) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D4C0C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10006AEE4;
  return sub_1009F4DAC(v8, v9, v10, v11, v12, v2, v3);
}

uint64_t sub_1009F5B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = sub_100007E8C(&qword_1011D2AE0);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D2EB8);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F5C38, 0, 0);
}

uint64_t sub_1009F5C38()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1)
    v1(10);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  sub_10004A160(*(_QWORD *)(v0 + 88), v4, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011D2EB8);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    sub_1002ED50C(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 168) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v9);
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 176) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 184) = v15;
    *(_QWORD *)(v0 + 192) = v16;
    *(_WORD *)(v0 + 208) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F5E0C, v20, v21);
  }
}

uint64_t sub_1009F5E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(uint64_t **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 17, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009F96EC, 0, 0);
}

uint64_t sub_1009F5EE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0[4];
  v8 = v0[5];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_1011D4C1C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10006AEE4;
  return sub_1009F5B88(v7, v8, v9, v10, v2, v3);
}

uint64_t sub_1009F5F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D4D98);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoFavorite.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_1009F60C8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_1009F60BC()
{
  return sub_1009F8AB4((uint64_t (*)(_QWORD, uint64_t))sub_1009F5F90);
}

uint64_t sub_1009F60C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void (*v20)(char *, char *, uint64_t);
  int v21;
  unint64_t v22;
  __n128 v23;
  Swift::String v24;
  void *object;
  __n128 v26;
  char *v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  __n128 v41;
  char *v42;
  Swift::String v43;
  void *v44;
  __n128 v45;
  void (*v46)(char *, uint64_t, __n128);
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v47 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v47 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v47 - v9;
  v11 = sub_100007E8C(&qword_1011D4D98);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v47 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v47 - v16, v1, v11);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v19 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v19 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v48 = 0;
      v49 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v23 = swift_bridgeObjectRelease(v49);
      v48 = 0xD000000000000019;
      v49 = 0x8000000100E4B770;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v18)(v15, v1, v11, v23);
      v24._countAndFlagsBits = String.init<A>(describing:)(v15, v11);
      object = v24._object;
      String.append(_:)(v24);
      v26 = swift_bridgeObjectRelease(object);
      v22 = v48;
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v17, v11, v26);
      return v22;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v17, v11);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v17, v2);
  v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v8, v10, v2);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
    v22 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return v22;
  }
  if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.notFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0x6F76614620746F4ELL;
  }
  if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000018;
  }
  if (v21 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    if (v21 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.sharedLibrary(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0x6C20646572616853;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD00000000000001CLL;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000013;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.invalidContentType(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000014;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000025;
      }
      else
      {
        v22 = 0x206E776F6E6B6E55;
        if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unknown(_:))
        {
          (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        }
        else
        {
          v48 = 0;
          v49 = 0xE000000000000000;
          v40 = v10;
          _StringGuts.grow(_:)(17);
          v41 = swift_bridgeObjectRelease(v49);
          v48 = 0x206E776F6E6B6E55;
          v49 = 0xEF206E6F73616572;
          v42 = v47;
          ((void (*)(char *, char *, uint64_t, __n128))v20)(v47, v40, v2, v41);
          v43._countAndFlagsBits = String.init<A>(describing:)(v42, v2);
          v44 = v43._object;
          String.append(_:)(v43);
          v45 = swift_bridgeObjectRelease(v44);
          v22 = v48;
          v46 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
          v46(v40, v2, v45);
          ((void (*)(char *, uint64_t))v46)(v8, v2);
        }
      }
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0;
  }
  v28 = v10;
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v29 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath("Xc4");
  v31 = swift_getKeyPath(&unk_100EDC9D0);
  static Published.subscript.getter(&v48, v29, KeyPath, v31);
  swift_release(KeyPath);
  swift_release(v31);
  v32 = v49;
  v33 = v50;
  v34 = v51;
  v35 = v52;
  v36 = v53;
  v37 = v54;
  v38 = v55;
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v36);

  if ((v32 & 0x100) != 0)
    v22 = 0;
  else
    v22 = 0xD000000000000016;
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v28, v2, v39);
  return v22;
}

uint64_t sub_1009F6708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  v8 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[48] = swift_task_alloc(v10);
  v7[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for Notice.Variant(0);
  v7[50] = v11;
  v7[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v7[52] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[53] = v13;
  v7[54] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011D4D98);
  v7[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[57] = swift_task_alloc(v16);
  v7[58] = swift_task_alloc(v16);
  return swift_task_switch(sub_1009F680C, 0, 0);
}

uint64_t sub_1009F680C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 448);
  v5 = *(_QWORD *)(v1 + 432);
  v52 = *(_QWORD *)(v1 + 424);
  v53 = *(_QWORD *)(v1 + 456);
  v6 = *(_QWORD *)(v1 + 416);
  v8 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 320);
  static MusicLibraryAction<>.undoFavorite.getter(a1);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v9, v5, v8, v6, *(_QWORD *)(v7 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v53, v2, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v53, v3);
  if (v10 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v11 = *(_QWORD *)(v1 + 456);
    v13 = *(_QWORD *)(v1 + 384);
    v12 = *(_QWORD *)(v1 + 392);
    v14 = *(_QWORD *)(v1 + 368);
    v15 = *(_QWORD *)(v1 + 376);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 448) + 96))(v11, *(_QWORD *)(v1 + 440));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v13, v14);
    if (v16 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_10004A160(*(_QWORD *)(v1 + 336), v1 + 88, &qword_1011D2F20);
      if (*(_QWORD *)(v1 + 144) != 1)
      {
        sub_100064EF0(v1 + 88, v1 + 16);
        v37 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v1 + 560) = v37;
        *(_QWORD *)(v1 + 568) = static MainActor.shared.getter(v38);
        v39 = dispatch thunk of Actor.unownedExecutor.getter(v37, &protocol witness table for MainActor);
        v33 = v40;
        *(_QWORD *)(v1 + 576) = v39;
        *(_QWORD *)(v1 + 584) = v40;
        v24 = sub_1009F6F64;
        v32 = v39;
        return swift_task_switch(v24, v32, v33);
      }
      v17 = *(_QWORD **)(v1 + 344);
      sub_10004FF60(v1 + 88, &qword_1011D2F20);
      v18 = v17[3];
      *(_QWORD *)(v1 + 520) = v18;
      *(_QWORD *)(v1 + 528) = v17[4];
      *(_QWORD *)(v1 + 536) = sub_100007E68(v17, v18);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 544) = static MainActor.shared.getter(v20);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      v23 = v22;
      v24 = sub_1009F6E80;
LABEL_9:
      v32 = v21;
      v33 = v23;
      return swift_task_switch(v24, v32, v33);
    }
    if (v16 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v27 = *(_QWORD **)(v1 + 344);
      v28 = v27[3];
      *(_QWORD *)(v1 + 616) = v28;
      *(_QWORD *)(v1 + 624) = v27[4];
      *(_QWORD *)(v1 + 632) = sub_100007E68(v27, v28);
      v29 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 640) = static MainActor.shared.getter(v30);
      v21 = dispatch thunk of Actor.unownedExecutor.getter(v29, &protocol witness table for MainActor);
      v23 = v31;
      v24 = sub_1009F70D4;
      goto LABEL_9;
    }
    v41 = *(_QWORD *)(v1 + 464);
    v42 = *(_QWORD *)(v1 + 440);
    v43 = *(_QWORD *)(v1 + 448);
    v44 = *(_QWORD *)(v1 + 384);
    v45 = *(_QWORD *)(v1 + 368);
    v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 376) + 8);
    v46(*(_QWORD *)(v1 + 392), v45);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    v46(v44, v45);
  }
  else
  {
    if (v10 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v25 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.undoFavorite<A>(_:)[1]);
      *(_QWORD *)(v1 + 472) = v25;
      *v25 = v1;
      v25[1] = sub_1009F6BD8;
      return MusicLibrary.undoFavorite<A>(_:)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
    }
    v34 = *(_QWORD *)(v1 + 456);
    v35 = *(_QWORD *)(v1 + 440);
    v36 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 8);
    v36(*(_QWORD *)(v1 + 464), v35);
    v36(v34, v35);
  }
  v47 = *(_QWORD *)(v1 + 456);
  v48 = *(_QWORD *)(v1 + 432);
  v49 = *(_QWORD *)(v1 + 408);
  v51 = *(_QWORD *)(v1 + 384);
  v50 = *(_QWORD *)(v1 + 392);
  swift_task_dealloc(*(_QWORD *)(v1 + 464));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009F6BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009F5A38;
  else
    v3 = sub_1009F6C3C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009F6C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_10004A160(*(_QWORD *)(v0 + 328), v0 + 272, &qword_1011D2F28);
  v1 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 488) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 400);
    v2 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 504) = sub_100007E68((_QWORD *)(v0 + 272), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 10);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F6D7C, v6, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    sub_10004FF60(v0 + 272, &qword_1011D2F28);
    v9 = *(_QWORD *)(v0 + 456);
    v10 = *(_QWORD *)(v0 + 432);
    v11 = *(_QWORD *)(v0 + 408);
    v13 = *(_QWORD *)(v0 + 384);
    v12 = *(_QWORD *)(v0 + 392);
    swift_task_dealloc(*(_QWORD *)(v0 + 464));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009F6D7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[51];
  swift_release();
  sub_1009FF5F0(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_1009F6DEC, 0, 0);
}

uint64_t sub_1009F6DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 272));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F6E80()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[66];
  swift_release();
  sub_100A56630(5, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[69] = v3;
  *v3 = v0;
  v3[1] = sub_1009F6F04;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[65], v0[66]);
}

uint64_t sub_1009F6F04()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 552));
  sub_100365848(v1);
  return swift_task_switch(sub_1009F96E8, 0, 0);
}

uint64_t sub_1009F6F64(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[74] = v2;
  v3 = swift_task_alloc(48);
  v1[75] = v3;
  *(_BYTE *)(v3 + 16) = 5;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[76] = v4;
  *v4 = v1;
  v4[1] = sub_1009F7028;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 82, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100E4AA20, sub_1009919FC, v3, &type metadata for Bool);
}

uint64_t sub_1009F7028()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*v0 + 608));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1009F7098, *(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 584));
}

uint64_t sub_1009F7098()
{
  swift_release();
  return swift_task_switch(sub_1009F5804, 0, 0);
}

uint64_t sub_1009F70D4()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[78];
  swift_release();
  sub_100A56824(0, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[81] = v3;
  *v3 = v0;
  v3[1] = sub_1009F7158;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[77], v0[78]);
}

uint64_t sub_1009F7158()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 648));
  sub_100365848(v1);
  return swift_task_switch(sub_1009F5998, 0, 0);
}

uint64_t sub_1009F71BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v6);
  if (*(_QWORD *)(v0 + v4 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v4));
  v8 = v0 + v5;
  if (*(_QWORD *)(v0 + v5 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v5, v7);
    v9 = *(unsigned __int8 *)(v8 + 48);
    if (v9 != 255)
      sub_100064AA4(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
    if (*(_QWORD *)(v8 + 56))
      swift_release();
  }
  v10 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 40;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11);
}

uint64_t sub_1009F72A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0[4];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v7;
  v12 = (uint64_t)v0 + ((v7 + 79) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D4C3C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10006AEE4;
  return sub_1009F6708(v8, v9, v10, v11, v12, v2, v3);
}

uint64_t sub_1009F7368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = sub_100007E8C(&qword_1011D2AE0);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D2EB8);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F7418, 0, 0);
}

uint64_t sub_1009F7418()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1)
    v1(55);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  sub_10004A160(*(_QWORD *)(v0 + 88), v4, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011D2EB8);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    sub_1002ED50C(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 168) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v9);
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 176) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 184) = v15;
    *(_QWORD *)(v0 + 192) = v16;
    *(_WORD *)(v0 + 208) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F75EC, v20, v21);
  }
}

uint64_t sub_1009F75EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(uint64_t **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 18, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009F76BC, 0, 0);
}

uint64_t sub_1009F76BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005B748(*(_QWORD *)(v0 + 152), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F7718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  v8 = v0 + v3;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    v19 = v7;
    v20 = v4;
    if (*(_QWORD *)(v8 + 8) >= 0xAuLL)
      swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v10 + *(int *)(v11 + 24);
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v19;
    v4 = v20;
  }
  v13 = (v3 + v4 + v6) & ~v6;
  v14 = v13 + v7;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v1);
  return swift_deallocObject(v0, v14);
}

uint64_t sub_1009F78E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0[4];
  v8 = v0[5];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_1011D4C4C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10006AEE4;
  return sub_1009F7368(v7, v8, v9, v10, v2, v3);
}

uint64_t Actions.Favorite.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x657469726F766146, 0xE800000000000000);
}

uint64_t (*Actions.Favorite.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE0D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 1918989427;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1010EE0F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 1918989427;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10098C424;
}

uint64_t sub_1009F7A28(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x657469726F766146, 0xE800000000000000);
}

uint64_t (*sub_1009F7A40())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE660, 32, 7);
  *(_QWORD *)(v0 + 16) = 1918989427;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1010EE688, 32, 7);
  *(_QWORD *)(v1 + 16) = 1918989427;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10098C9EC;
}

uint64_t Actions.UndoFavorite.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x766146206F646E55, 0xED0000657469726FLL);
}

uint64_t (*Actions.UndoFavorite.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE120, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v0 + 24) = 0xEA00000000006873;
  v1 = swift_allocObject(&unk_1010EE148, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  return sub_10098C9EC;
}

uint64_t sub_1009F7B60(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x766146206F646E55, 0xED0000657469726FLL);
}

uint64_t (*sub_1009F7B84())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE610, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v0 + 24) = 0xEA00000000006873;
  v1 = swift_allocObject(&unk_1010EE638, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  return sub_10098C9EC;
}

uint64_t sub_1009F7C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 54, (uint64_t)sub_10098CA8C, (uint64_t)&unk_1011D4C88, (uint64_t)&unk_1011D4C90, a2);
}

uint64_t sub_1009F7C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5974(a1, 56, (uint64_t)sub_1009D6A28, (uint64_t)&unk_1011D4CB8, (uint64_t)&unk_1011D4CC0, a2);
}

uint64_t sub_1009F7C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.DislikeAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D4D90);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.dislike.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.DislikeAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_1009F7D80();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_1009F7D74()
{
  return sub_1009F8AB4((uint64_t (*)(_QWORD, uint64_t))sub_1009F7C48);
}

uint64_t sub_1009F7D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  __n128 v16;
  Swift::String v17;
  void *object;
  unint64_t v20;
  unint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4D90);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v20 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v20 - v11, v1, v6);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v14 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    v15 = sub_1009F8708((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v14 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v16 = swift_bridgeObjectRelease(v21);
    v20 = 0xD000000000000019;
    v21 = 0x8000000100E4B770;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v13)(v10, v1, v6, v16);
    v17._countAndFlagsBits = String.init<A>(describing:)(v10, v6);
    object = v17._object;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(object);
    v15 = v20;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v15;
}

uint64_t sub_1009F7F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  _QWORD *v10;

  v5[7] = a3;
  v9 = type metadata accessor for Notice.Variant(0);
  v5[8] = v9;
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_dislike<A>(_:)[1]);
  v5[10] = v10;
  *v10 = v5;
  v10[1] = sub_1009F8008;
  return MusicLibrary.new_dislike<A>(_:)(a2, a4, a5);
}

uint64_t sub_1009F8008()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_1009F8078, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v2 + 72));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1009F8078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_10004A160(*(_QWORD *)(v0 + 56), v0 + 16, &qword_1011D2F28);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 88) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 104) = sub_100007E68((_QWORD *)(v0 + 16), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 11);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 112) = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F8168, v6, v7);
  }
  else
  {
    sub_10004FF60(v0 + 16, &qword_1011D2F28);
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009F8168()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[9];
  swift_release();
  sub_1009FF5F0(v3, 0, v2, v1);
  sub_10005B748(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_1009F81D8, 0, 0);
}

uint64_t sub_1009F81D8()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F8214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  if (*(_QWORD *)(v0 + v4 + 24))
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + v4));
  return swift_deallocObject(v0, v4 + 40);
}

uint64_t sub_1009F8294()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0[4];
  v7 = (uint64_t)v0 + v5;
  v8 = (uint64_t)v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D4C6C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10005AEE4;
  return sub_1009F7F70(v6, v7, v8, v2, v3);
}

uint64_t sub_1009F832C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F83D8, 0, 0);
}

uint64_t sub_1009F83D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F8598, v19, v20);
  }
}

uint64_t sub_1009F8598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 19, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D5E1C, 0, 0);
}

uint64_t sub_1009F866C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D4C7C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009F832C(v7, v8, v2, v3);
}

uint64_t sub_1009F8708(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  Swift::String v13;
  void *object;
  uint64_t v15;
  unint64_t v16;

  v2 = 0xD000000000000010;
  v3 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v15 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v15 - v8, a1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.unsupportedType(_:)
    && v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.alreadyDisliked(_:))
  {
    if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenFavorited(_:))
    {
      return 0xD00000000000001DLL;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenLiked(_:))
    {
      return 0xD000000000000019;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.subscriptionRequired(_:))
    {
      return 0xD000000000000015;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      return 0xD000000000000016;
    }
    else if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.networkRequired(_:))
    {
      if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.sharedLibrary(_:))
      {
        return 0x6C20646572616853;
      }
      else
      {
        v15 = 0;
        v16 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v16);
        v15 = 0x206E776F6E6B6E55;
        v16 = 0xEF206E6F73616572;
        v10(v7, a1, v3);
        v13._countAndFlagsBits = String.init<A>(describing:)(v7, v3);
        object = v13._object;
        String.append(_:)(v13);
        swift_bridgeObjectRelease(object);
        v2 = v15;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
  return v2;
}

uint64_t sub_1009F897C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.UndoDislikeAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D4D88);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoDislike.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.UndoDislikeAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_1009F8AD8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_1009F8AA8()
{
  return sub_1009F8AB4((uint64_t (*)(_QWORD, uint64_t))sub_1009F897C);
}

uint64_t sub_1009F8AB4(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 32), v1 + ((v2 + 40) & ~v2));
}

uint64_t sub_1009F8AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  void *object;
  unint64_t v23;
  unint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v23 - v7;
  v9 = sub_100007E8C(&qword_1011D4D88);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v23 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v23 - v14, v1, v9);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v15, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v18 = String.init<A>(describing:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else if (v17 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    v23 = 0;
    v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    v19 = swift_bridgeObjectRelease(v24);
    v23 = 0xD000000000000019;
    v24 = 0x8000000100E4B770;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v16)(v13, v1, v9, v19);
    v20._countAndFlagsBits = String.init<A>(describing:)(v13, v9);
    object = v20._object;
    String.append(_:)(v20);
    swift_bridgeObjectRelease(object);
    v18 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return v18;
}

uint64_t sub_1009F8CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10006AEE4;
  return MusicLibrary.new_undoDislike<A>(_:)(a2, a3, a4);
}

uint64_t sub_1009F8D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009F8DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 40) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D4C9C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10006AEE4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10006AEE4;
  return MusicLibrary.new_undoDislike<A>(_:)(v5, v2, v3);
}

uint64_t sub_1009F8E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D2EB8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F8F2C, 0, 0);
}

uint64_t sub_1009F8F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10004A160(*(_QWORD *)(v0 + 72), v3, &qword_1011D2EB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 112), &qword_1011D2EB8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1002ED50C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100007E8C(&qword_1011D2F00);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_1009AF7AC(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1009F90EC, v19, v20);
  }
}

uint64_t sub_1009F90EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1009AFBBC(v5, v4, 5, 20, v7, v3, v2, v1, v8, v6);
  sub_10056C15C(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_10004FF60(v7, &qword_1011D2AE0);
  return swift_task_switch(sub_1009D6A30, 0, 0);
}

uint64_t sub_1009F91C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D4CAC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10006AEE4;
  return sub_1009F8E80(v7, v8, v2, v3);
}

uint64_t Actions.SuggestLess.Context.menuItemTitle.getter()
{
  return sub_1009D5590(0x2074736567677553, 0xEC0000007373654CLL);
}

uint64_t (*Actions.SuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE170, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_1010EE198, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10098C9EC;
}

uint64_t sub_1009F9308(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x2074736567677553, 0xEC0000007373654CLL);
}

uint64_t (*sub_1009F9328())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE5C0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_1010EE5E8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10098C9EC;
}

uint64_t (*Actions.UndoSuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE1C0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_1010EE1E8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10098C9EC;
}

uint64_t (*sub_1009F9444())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE570, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_1010EE598, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10098C9EC;
}

uint64_t _s9MusicCore7ActionsO15UndoSuggestLessO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E4B750);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

ValueMetadata *type metadata accessor for Actions.Favorite()
{
  return &type metadata for Actions.Favorite;
}

ValueMetadata *type metadata accessor for Actions.Favorite.Context()
{
  return &type metadata for Actions.Favorite.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite()
{
  return &type metadata for Actions.UndoFavorite;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite.Context()
{
  return &type metadata for Actions.UndoFavorite.Context;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess()
{
  return &type metadata for Actions.SuggestLess;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess.Context()
{
  return &type metadata for Actions.SuggestLess.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess()
{
  return &type metadata for Actions.UndoSuggestLess;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess.Context()
{
  return &type metadata for Actions.UndoSuggestLess.Context;
}

uint64_t sub_1009F96BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t (*Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a8;
  v37 = a3;
  v32 = a1;
  v33 = a7;
  v38 = a4;
  v39 = a5;
  v35 = a2;
  v11 = *(_QWORD *)(a6 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(a1);
  v34 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  (*(void (**)(char *))(v11 + 16))((char *)&v32 - v14);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = (v16 + 48) & ~v16;
  v18 = v16 | 7;
  v19 = (_QWORD *)swift_allocObject(&unk_1010EE6D0, v17 + v12, v16 | 7);
  v19[2] = a6;
  v19[3] = a7;
  v20 = v36;
  v19[4] = v36;
  v19[5] = a2;
  v21 = (char *)v19 + v17;
  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v21, v15, a6);
  v23 = v34;
  v22(v34, v32, a6);
  v24 = (v16 + 56) & ~v16;
  v25 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject(&unk_1010EE6F8, v26 + 72, v18);
  v28 = v33;
  *((_QWORD *)v27 + 2) = a6;
  *((_QWORD *)v27 + 3) = v28;
  v29 = v37;
  *((_QWORD *)v27 + 4) = v20;
  *((_QWORD *)v27 + 5) = v29;
  *((_QWORD *)v27 + 6) = v38;
  v22(&v27[v24], v23, a6);
  v30 = v35;
  *(_QWORD *)&v27[v25] = v35;
  sub_100064EF0(v39, (uint64_t)&v27[v26]);
  swift_retain(v30);
  return sub_1009F9F34;
}

double static Actions.RateSong.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 38;
  *(_QWORD *)(a5 + 40) = sub_10098CA8C;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_1011D4DB8;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_1011D4DC0;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double sub_1009F993C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 38;
  *(_QWORD *)(a2 + 40) = sub_10098CA8C;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_1011D4DB8;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_1011D4DC0;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain();
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t Actions.RateSong.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6E6F532065746152, 0xAC000000A680E267);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RateSong.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE720, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000017;
  *(_QWORD *)(v0 + 24) = 0x8000000100E4B8F0;
  v1 = swift_allocObject(&unk_1010EE748, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000017;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4B8F0;
  return sub_10098C424;
}

uint64_t (*sub_1009F9BA0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1010EE840, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000017;
  *(_QWORD *)(v0 + 24) = 0x8000000100E4B8F0;
  v1 = swift_allocObject(&unk_1010EE868, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000017;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4B8F0;
  return sub_10098C9EC;
}

unint64_t sub_1009F9C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v35 = a2;
  v36 = a3;
  v5 = type metadata accessor for MusicLibrary.AddAction(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D2F58);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary(0);
  v13 = static MusicLibrary.shared.getter();
  v14 = static MusicLibrary.== infix(_:_:)(a1, v13);
  swift_release(v13);
  if ((v14 & 1) == 0)
    return 0xD00000000000001DLL;
  v30 = v6;
  v31 = v5;
  v16 = v35;
  v15 = v36;
  v32 = v10;
  v33 = a1;
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "BOOLForKey:", v18);

  if (!v19)
    return 0xD000000000000018;
  static MusicLibraryAction<>.add.getter(v20);
  v21 = v31;
  MusicLibrary.supportedStatus<A, B>(for:action:)(v16, v8, v15, v31, v34, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v21);
  v22 = v32;
  v23 = 0xD000000000000011;
  if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v12, v9) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v12, v9);
    v24 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v12, v24);
    v27 = enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
    if (v26 == v27)
      return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  }
  return v23;
}

uint64_t sub_1009F9EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1009F9F34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1009F9C24(v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1, v0[3]);
}

id NSUserDefaults.showStarRatings.getter()
{
  void *v0;
  NSString v1;
  id v2;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

uint64_t sub_1009F9FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = *(_QWORD *)(a6 - 8);
  v8[16] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v8[17] = v10;
  v8[18] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  v8[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v8[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[21] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[22] = swift_task_alloc(v14);
  v8[23] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v8[24] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009FA0A4, v17, v18);
}

uint64_t sub_1009FA0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  NSString v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  void *v30;
  id v31;
  __int128 v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  swift_release();
  String.LocalizationValue.init(stringLiteral:)(0x7461522072617453, 0xEB00000000676E69);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v10, v9, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, 0, 1);

  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(uint64_t (**)(uint64_t))(v0 + 64);
  swift_bridgeObjectRetain();
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v35 = (id)objc_opt_self(UIAlertAction);
  v16 = objc_msgSend(v35, "actionWithTitle:style:handler:", v15, 1, 0);

  v40 = v16;
  objc_msgSend(v12, "addAction:", v16);
  v17 = (void *)v14(v13);
  v34 = v18;
  v36 = v12;
  if (qword_1011D2418 != -1)
    swift_once(&qword_1011D2418, sub_100B62354);
  v37 = *(_QWORD *)(v0 + 184);
  v38 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 144);
  v39 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 88);
  v33 = *(_OWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 16))(v19, *(_QWORD *)(v0 + 80), v24);
  v25 = *(unsigned __int8 *)(v20 + 80);
  v26 = (v25 + 64) & ~v25;
  v27 = swift_allocObject(&unk_1010EE890, v26 + v21, v25 | 7);
  *(_OWORD *)(v27 + 16) = v33;
  *(_QWORD *)(v27 + 32) = v22;
  *(_QWORD *)(v27 + 40) = v17;
  *(_QWORD *)(v27 + 48) = v34;
  *(_QWORD *)(v27 + 56) = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v27 + v26, v19, v24);
  swift_bridgeObjectRetain();
  v28 = v17;
  swift_retain();
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = sub_1009FAD10;
  *(_QWORD *)(v0 + 56) = v27;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_100223938;
  *(_QWORD *)(v0 + 40) = &unk_1010EE8A8;
  v30 = _Block_copy((const void *)(v0 + 16));
  v31 = objc_msgSend(v35, "actionWithTitle:style:handler:", v29, 0, v30, swift_release().n128_f64[0]);
  _Block_release(v30);

  objc_msgSend(v36, "addAction:", v31);
  objc_msgSend(v36, "setPreferredAction:", v31);
  objc_msgSend(v36, "setContentViewController:", v28);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v36, 1, (id)0xF, (void **)1, 0, 0);

  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009FA4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  swift_release();
  v6 = v0 + v4;
  swift_unknownObjectWeakDestroy(v0 + v4, v7);
  v8 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release();
  return swift_deallocObject(v0, v4 + 72);
}

uint64_t sub_1009FA594()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0[4];
  v8 = v0[5];
  v9 = v0[6];
  v10 = (uint64_t)v0 + v5;
  v11 = *(_QWORD *)((char *)v0 + v6);
  v12 = (uint64_t)v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D4DAC);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10005AEE4;
  return sub_1009F9FB4(v8, v9, v10, v11, v12, v2, v3, v7);
}

ValueMetadata *type metadata accessor for Actions.RateSong()
{
  return &type metadata for Actions.RateSong;
}

ValueMetadata *type metadata accessor for Actions.RateSong.Context()
{
  return &type metadata for Actions.RateSong.Context;
}

uint64_t sub_1009FA670()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1009FA694(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;

  v28 = a7;
  v29 = a8;
  v13 = *(_QWORD *)(a6 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(a1);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, a6);
  type metadata accessor for MainActor(0);
  v20 = a2;
  v21 = swift_retain();
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = (v23 + 80) & ~v23;
  v25 = (char *)swift_allocObject(&unk_1010EE8E0, v24 + v14, v23 | 7);
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = &protocol witness table for MainActor;
  v26 = v28;
  *((_QWORD *)v25 + 4) = a6;
  *((_QWORD *)v25 + 5) = v26;
  *((_QWORD *)v25 + 6) = v29;
  *((_QWORD *)v25 + 7) = v20;
  *((_QWORD *)v25 + 8) = a3;
  *((_QWORD *)v25 + 9) = a4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], v15, a6);
  sub_100A3F884((uint64_t)v18, (uint64_t)&unk_1011D4E00, (uint64_t)v25);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1009FA820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v8[8] = v16;
  v8[9] = v17;
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  v9 = *(_QWORD *)(a8 - 8);
  v8[10] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[11] = swift_task_alloc(v10);
  v8[12] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v8[13] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v8[14] = v13;
  v8[15] = v14;
  return swift_task_switch(sub_1009FA8CC, v13, v14);
}

uint64_t sub_1009FA8CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  double v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[8];
  v2 = v0[4];
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  v0[16] = v4;
  v5 = (double)v4 / 5.0;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.setUserRating<A>(_:for:)[1]);
  v0[17] = v6;
  v7 = *(_QWORD *)(v1 + 8);
  *v6 = v0;
  v6[1] = sub_1009FA960;
  return MusicLibrary.setUserRating<A>(_:for:)(v0[6], v0[7], v7, v0[9], v5);
}

uint64_t sub_1009FA960()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009FAA00;
  else
    v4 = sub_1009FA9C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_1009FA9C0()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009FAA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v5, v4);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 144);
  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v30 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 56);
    v16 = (double)*(uint64_t *)(v0 + 128) / 5.0;
    v17 = swift_slowAlloc(32, -1);
    v18 = swift_slowAlloc(64, -1);
    v31 = v18;
    *(_DWORD *)v17 = 134349570;
    *(double *)(v17 + 4) = v16;
    *(_WORD *)(v17 + 12) = 2082;
    v7(v14, v13, v15);
    v19 = (char *)String.init<A>(describing:)(v14, v15);
    *(_QWORD *)(v17 + 14) = sub_10099627C(v19, v20, &v31);
    v21 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v30 + 8))(v13, v15, v21);
    *(_WORD *)(v17 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v12;
    swift_errorRetain(v12);
    v22 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v23 = (char *)String.init<A>(describing:)(v0 + 16, v22);
    *(_QWORD *)(v17 + 24) = sub_10099627C(v23, v24, &v31);
    swift_bridgeObjectRelease();
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to set userRating=%{public}f for item=%{public}s with error=%{public}s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v12);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 56);
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

  }
  v28 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009FAC9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1009FAD10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1009FA694(a1, *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3), v2, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1009FAD34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1009FAD44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1009FAD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009FADC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = v1[4];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = (uint64_t)v1 + ((v4 + 80) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_1011D4DFC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10005AEE4;
  return sub_1009FA820(a1, v5, v6, v7, v8, v9, v10, v3);
}

void static Notice.variant(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  char *v18;
  _QWORD v19[14];

  v2 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v2);
  v3 = sub_100007E8C(&qword_1011D6CB0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = sub_100007E8C(&qword_1011D4E08);
  v6 = __chkstk_darwin(v5);
  v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v19[10] = (char *)v19 - v8;
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v19[7] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  v19[8] = *(_QWORD *)(v11 - 8);
  v19[9] = v11;
  v12 = __chkstk_darwin(v11);
  v19[6] = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v16, v17);
  v18 = (char *)sub_1009FB0B0 + 4 * word_100EDCA58[swift_getEnumCaseMultiPayload(v16, v14)];
  __asm { BR              X10 }
}

uint64_t sub_1009FB0B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(_QWORD *, uint64_t, uint64_t, uint64_t);
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v8 - 112) = *v4;
  *(_QWORD *)(v8 - 152) = v4[1];
  v9 = sub_100007E8C(&qword_1011D4E20);
  v10 = *(_QWORD *)((char *)v4 + *(int *)(v9 + 64));
  sub_1009FD08C((uint64_t)v4 + *(int *)(v9 + 48), v5);
  Notice.Variant.id.getter();
  *(_QWORD *)(v8 - 168) = v12;
  *(_QWORD *)(v8 - 160) = v11;
  sub_10004A160(v5, v2, &qword_1011D6CB0);
  v13 = type metadata accessor for Artwork(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v2, 1, v13) == 1)
  {
    sub_10004FF60(v2, &qword_1011D6CB0);
    v15 = type metadata accessor for Notice.Thumbnail(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v1, v2, v13);
    v15 = type metadata accessor for Notice.Thumbnail(0);
    swift_storeEnumTagMultiPayload(v1, v15, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v1, 0, 1, v15);
  }
  type metadata accessor for Notice.Thumbnail(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v1, 1, v15);
  *(_QWORD *)(v8 - 176) = v15;
  if (v17 == 1)
  {
    *v6 = Image.init(_internalSystemName:)(0x6461622E74786574, 0xEF73756C702E6567);
    swift_storeEnumTagMultiPayload(v6, v15, 0);
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v18(v6, 0, 1, v15);
    sub_10004FF60(v1, &qword_1011D4E08);
  }
  else
  {
    sub_1009FD0D4(v1, (uint64_t)v6);
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v18(v6, 0, 1, v15);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v8 - 96) = v10;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v8 - 96, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v20._countAndFlagsBits = 0x297328676E6F7320;
  v20._object = (void *)0xEE00646564646120;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  String.LocalizationValue.init(stringInterpolation:)(v7);
  v22 = *(_QWORD *)(v8 - 128);
  v21 = *(_QWORD *)(v8 - 120);
  v23 = *(_QWORD *)(v8 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v3, v21);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v24 = qword_10124DE50;
  v25 = (id)qword_10124DE50;
  v26 = *(_QWORD *)(v8 - 136);
  static Locale.current.getter(v25);
  v27 = String.init(localized:table:bundle:locale:comment:)(v23, 0, 0, v24, v26, 0, 0, 256);
  *(_QWORD *)(v8 - 144) = v28;
  *(_QWORD *)(v8 - 136) = v27;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v21);
  v29 = (int *)type metadata accessor for Notice(0);
  v30 = (uint64_t)v0 + v29[5];
  v18((_QWORD *)v30, 1, 1, *(_QWORD *)(v8 - 176));
  v31 = (_QWORD *)((char *)v0 + v29[7]);
  *v31 = 0;
  v31[1] = 0;
  v32 = (_QWORD *)((char *)v0 + v29[8]);
  *v32 = 0;
  v32[1] = 0;
  v33 = (char *)v0 + v29[9];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v34 = v29[10];
  *((_BYTE *)v0 + v34) = 1;
  v35 = *(_QWORD *)(v8 - 168);
  *v0 = *(_QWORD *)(v8 - 160);
  v0[1] = v35;
  sub_1009FCFD4((uint64_t)v6, v30);
  v36 = (_QWORD *)((char *)v0 + v29[6]);
  v37 = *(_QWORD *)(v8 - 152);
  *v36 = *(_QWORD *)(v8 - 112);
  v36[1] = v37;
  swift_bridgeObjectRelease(v31[1]);
  v38 = *(_QWORD *)(v8 - 144);
  *v31 = *(_QWORD *)(v8 - 136);
  v31[1] = v38;
  sub_10004BA30(*v32, v32[1]);
  *v32 = 0;
  v32[1] = 0;
  *(_QWORD *)v33 = 0;
  v33[8] = 0;
  *((_BYTE *)v0 + v34) = 1;
  return sub_10004FF60(v5, &qword_1011D6CB0);
}

uint64_t Notice.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Notice(0);
  return sub_10004A160(v1 + *(int *)(v3 + 20), a1, &qword_1011D4E08);
}

uint64_t Notice.thumbnail.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Notice(0) + 20);
  return sub_1009FCFD4(a1, v3);
}

double (*Notice.thumbnail.modify())(_QWORD)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

void Notice.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Notice(0) + 24));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Notice.message.modify())(_QWORD)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.headnote.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

void Notice.headnote.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Notice(0) + 28));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Notice.headnote.modify())(_QWORD)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.link.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Notice(0) + 32));
  v2 = *v1;
  sub_100048AAC(*v1, v1[1]);
  return v2;
}

uint64_t Notice.link.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for Notice(0) + 32));
  result = sub_10004BA30(*v5, v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Notice.link.modify())(_QWORD)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.hapticFeedback.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 36));
}

uint64_t Notice.hapticFeedback.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Notice(0);
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

double (*Notice.hapticFeedback.modify())(_QWORD)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.isDismissable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Notice(0) + 40));
}

uint64_t Notice.isDismissable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Notice(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*Notice.isDismissable.modify())(_QWORD)
{
  type metadata accessor for Notice(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.init(id:image:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v41 = a8;
  v35 = a5;
  v36 = a6;
  v33 = a2;
  v34 = a4;
  v40 = a12;
  v38 = a7;
  v39 = a11;
  v37 = a10;
  v15 = sub_100007E8C(&qword_1011D4E08);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = a3;
  v18 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 0, 1, v18);
  v20 = (int *)type metadata accessor for Notice(0);
  v21 = (uint64_t)a9 + v20[5];
  v19((_QWORD *)v21, 1, 1, v18);
  v22 = (_QWORD *)((char *)a9 + v20[7]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)((char *)a9 + v20[8]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (char *)a9 + v20[9];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v25 = v20[10];
  *((_BYTE *)a9 + v25) = 1;
  v26 = v33;
  *a9 = a1;
  a9[1] = v26;
  sub_1009FCFD4((uint64_t)v17, v21);
  v27 = (_QWORD *)((char *)a9 + v20[6]);
  v28 = v35;
  *v27 = v34;
  v27[1] = v28;
  swift_bridgeObjectRelease();
  v29 = v38;
  *v22 = v36;
  v22[1] = v29;
  result = sub_10004BA30(*v23, v23[1]);
  v31 = v37;
  *v23 = v41;
  v23[1] = v31;
  *(_QWORD *)v24 = v39;
  v24[8] = v40 & 1;
  *((_BYTE *)a9 + v25) = 1;
  return result;
}

uint64_t Notice.init(id:thumbnail:message:headnote:link:hapticFeedback:isDismissable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;

  v16 = (int *)type metadata accessor for Notice(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[7]);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)((char *)a9 + v16[8]);
  *v20 = 0;
  v20[1] = 0;
  v21 = (char *)a9 + v16[9];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = v16[10];
  *((_BYTE *)a9 + v22) = 1;
  *a9 = a1;
  a9[1] = a2;
  sub_1009FCFD4(a3, v17);
  v23 = (_QWORD *)((char *)a9 + v16[6]);
  *v23 = a4;
  v23[1] = a5;
  swift_bridgeObjectRelease();
  *v19 = a6;
  v19[1] = a7;
  result = sub_10004BA30(*v20, v20[1]);
  *v20 = a8;
  v20[1] = a10;
  *(_QWORD *)v21 = a11;
  v21[8] = a12 & 1;
  *((_BYTE *)a9 + v22) = a13;
  return result;
}

uint64_t Notice.init(id:symbol:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v35 = a5;
  v36 = a6;
  v34 = a2;
  v42 = a13;
  v40 = a12;
  v41 = a8;
  v38 = a11;
  v39 = a7;
  v37 = a10;
  sub_100007E8C(&qword_1011D4E08);
  __chkstk_darwin();
  v18 = (uint64_t *)((char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v18 = Image.init(_internalSystemName:)(a3, a4);
  v19 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v20 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 0, 1, v19);
  v21 = (int *)type metadata accessor for Notice(0);
  v22 = (uint64_t)a9 + v21[5];
  v20((_QWORD *)v22, 1, 1, v19);
  v23 = (_QWORD *)((char *)a9 + v21[7]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (_QWORD *)((char *)a9 + v21[8]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (char *)a9 + v21[9];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  v26 = v21[10];
  *((_BYTE *)a9 + v26) = 1;
  v27 = v34;
  *a9 = a1;
  a9[1] = v27;
  sub_1009FCFD4((uint64_t)v18, v22);
  v28 = (_QWORD *)((char *)a9 + v21[6]);
  v29 = v36;
  *v28 = v35;
  v28[1] = v29;
  swift_bridgeObjectRelease();
  v30 = v41;
  *v23 = v39;
  v23[1] = v30;
  result = sub_10004BA30(*v24, v24[1]);
  v32 = v38;
  *v24 = v37;
  v24[1] = v32;
  *(_QWORD *)v25 = v40;
  v25[8] = v42 & 1;
  *((_BYTE *)a9 + v26) = 1;
  return result;
}

uint64_t Notice.withLink(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_10005B704(v3, a3, type metadata accessor for Notice);
  v7 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Notice(0) + 32));
  v8 = *v7;
  v9 = v7[1];
  swift_retain();
  result = sub_10004BA30(v8, v9);
  *v7 = a1;
  v7[1] = a2;
  return result;
}

void Notice.Variant.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v1, (uint64_t)v4, v5);
  v6 = (char *)sub_1009FCB1C + 4 * byte_100EDCA72[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1009FCB1C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 8));
  v1 = sub_100007E8C(&qword_1011D4E20);
  sub_10004FF60(v0 + *(int *)(v1 + 48), &qword_1011D6CB0);
  return 0x506F546465646461;
}

uint64_t type metadata accessor for Notice.Variant(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011D4FF0, (uint64_t)&nominal type descriptor for Notice.Variant);
}

uint64_t sub_1009FCCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  id v17;
  NSURL *v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  Class isa;
  uint64_t v29;
  char *v30;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2AE0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v29 - v11;
  if (a2)
  {
    v13 = a2;
  }
  else
  {
    a1 = 0xD000000000000010;
    v13 = 0x8000000100E4BA70;
  }
  swift_bridgeObjectRetain();
  v14 = sub_100A136B8((uint64_t)_swiftEmptyArrayStorage);
  sub_100A6F91C(a1, v13, 0xD000000000000032, 0x8000000100E4BA90, (uint64_t)_swiftEmptyArrayStorage, v14, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  sub_10004A160((uint64_t)v12, (uint64_t)v10, &qword_1011D2AE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011D2AE0);
  }
  else
  {
    v15 = v30;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v10, v4);
    v16 = (void *)objc_opt_self(UIApplication);
    v17 = objc_msgSend(v16, "sharedApplication");
    URL._bridgeToObjectiveC()(v18);
    v20 = v19;
    v21 = objc_msgSend(v17, "canOpenURL:", v19);

    if (v21)
    {
      v22 = objc_msgSend(v16, "sharedApplication");
      URL._bridgeToObjectiveC()(v23);
      v25 = v24;
      v26 = sub_100A13584((uint64_t)_swiftEmptyArrayStorage);
      _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
      sub_1009FF5A8();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v22, "openURL:options:completionHandler:", v25, isa, 0, swift_bridgeObjectRelease(v26).n128_f64[0]);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    v10 = v12;
  }
  return sub_10004FF60((uint64_t)v10, &qword_1011D2AE0);
}

uint64_t type metadata accessor for Notice.Thumbnail(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D4F48, (uint64_t)&nominal type descriptor for Notice.Thumbnail);
}

uint64_t type metadata accessor for Notice(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011D4E80, (uint64_t)&nominal type descriptor for Notice);
}

uint64_t sub_1009FCFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D4E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009FD01C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009FD040()
{
  uint64_t v0;

  return sub_1009FCCE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1009FD048()
{
  unint64_t result;

  result = qword_1011D4E18;
  if (!qword_1011D4E18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1011D4E18);
  }
  return result;
}

uint64_t sub_1009FD08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D6CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009FD0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int EnumCaseMultiPayload;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice.Thumbnail(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v25 - v11);
  v13 = sub_100007E8C(&qword_1011D5038);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v15[*(int *)(v16 + 48)];
  sub_10005B704(a1, (uint64_t)v15, type metadata accessor for Notice.Thumbnail);
  sub_10005B704(a2, (uint64_t)v17, type metadata accessor for Notice.Thumbnail);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v7);
  if (!EnumCaseMultiPayload)
  {
    sub_10005B704((uint64_t)v15, (uint64_t)v12, type metadata accessor for Notice.Thumbnail);
    v23 = *v12;
    if (!swift_getEnumCaseMultiPayload(v17, v7))
    {
      v21 = static Image.== infix(_:_:)(v23, *(_QWORD *)v17);
      swift_release();
      swift_release();
      goto LABEL_12;
    }
    swift_release();
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_10005B704((uint64_t)v15, (uint64_t)v9, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload(v17, v7) == 1)
    {
      v19 = v17;
      v20 = v26;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v19, v26);
      v21 = static Artwork.== infix(_:_:)(v9, v6);
      v22 = *(void (**)(char *, uint64_t))(v4 + 8);
      v22(v6, v20);
      v22(v9, v20);
LABEL_12:
      sub_10005B748((uint64_t)v15, type metadata accessor for Notice.Thumbnail);
      return v21 & 1;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v26);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload(v17, v7) != 2)
  {
LABEL_10:
    sub_10004FF60((uint64_t)v15, &qword_1011D5038);
    v21 = 0;
    return v21 & 1;
  }
  sub_10005B748((uint64_t)v15, type metadata accessor for Notice.Thumbnail);
  v21 = 1;
  return v21 & 1;
}

uint64_t _s9MusicCore6NoticeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  uint64_t v81;

  v4 = type metadata accessor for Notice.Thumbnail(0);
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  __chkstk_darwin(v4);
  v72 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4E08);
  __chkstk_darwin(v6);
  v73 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D5030);
  __chkstk_darwin(v8);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v81 = (uint64_t)&v72 - v15;
  __chkstk_darwin(v16);
  v78 = (char *)&v72 - v17;
  __chkstk_darwin(v18);
  v79 = (char *)&v72 - v19;
  __chkstk_darwin(v20);
  v77 = (uint64_t)&v72 - v21;
  __chkstk_darwin(v22);
  v76 = (uint64_t)&v72 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v72 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v72 - v28;
  v30 = *a1;
  v31 = a1[1];
  v32 = *a2;
  v33 = a2[1];
  v34 = *a1 == *a2;
  v80 = a2;
  if (v34 && v31 == v33)
  {
    sub_10005B704((uint64_t)a1, (uint64_t)&v72 - v28, type metadata accessor for Notice);
    sub_10005B704((uint64_t)a2, (uint64_t)v26, type metadata accessor for Notice);
  }
  else
  {
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v32, v33, 0);
    sub_10005B704((uint64_t)a1, (uint64_t)v29, type metadata accessor for Notice);
    sub_10005B704((uint64_t)a2, (uint64_t)v26, type metadata accessor for Notice);
    if ((v35 & 1) == 0)
    {
      sub_10005B748((uint64_t)v26, type metadata accessor for Notice);
      sub_10005B748((uint64_t)v29, type metadata accessor for Notice);
      goto LABEL_13;
    }
  }
  v36 = v11[5];
  v37 = (uint64_t)&v26[v36];
  v38 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10004A160((uint64_t)&v29[v36], (uint64_t)v10, &qword_1011D4E08);
  sub_10004A160(v37, v38, &qword_1011D4E08);
  v39 = v75;
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  if (v40((uint64_t)v10, 1, v75) != 1)
  {
    v46 = v73;
    sub_10004A160((uint64_t)v10, v73, &qword_1011D4E08);
    if (v40(v38, 1, v39) != 1)
    {
      v49 = v38;
      v50 = v72;
      sub_1009FD0D4(v49, v72);
      v51 = _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(v46, v50);
      sub_10005B748(v50, type metadata accessor for Notice.Thumbnail);
      sub_10005B748((uint64_t)v26, type metadata accessor for Notice);
      sub_10005B748((uint64_t)v29, type metadata accessor for Notice);
      sub_10005B748(v46, type metadata accessor for Notice.Thumbnail);
      sub_10004FF60((uint64_t)v10, &qword_1011D4E08);
      v41 = v76;
      sub_10005B704((uint64_t)a1, v76, type metadata accessor for Notice);
      v42 = (uint64_t)v80;
      v43 = v77;
      sub_10005B704((uint64_t)v80, v77, type metadata accessor for Notice);
      v45 = (uint64_t)v78;
      v44 = (uint64_t)v79;
      if ((v51 & 1) != 0)
        goto LABEL_20;
LABEL_14:
      sub_10005B748(v41, type metadata accessor for Notice);
      sub_10005B748(v43, type metadata accessor for Notice);
      sub_10005B704((uint64_t)a1, v44, type metadata accessor for Notice);
      sub_10005B704(v42, v45, type metadata accessor for Notice);
      goto LABEL_15;
    }
    sub_10005B748((uint64_t)v26, type metadata accessor for Notice);
    sub_10005B748((uint64_t)v29, type metadata accessor for Notice);
    sub_10005B748(v46, type metadata accessor for Notice.Thumbnail);
    goto LABEL_11;
  }
  sub_10005B748((uint64_t)v26, type metadata accessor for Notice);
  sub_10005B748((uint64_t)v29, type metadata accessor for Notice);
  if (v40(v38, 1, v39) != 1)
  {
LABEL_11:
    sub_10004FF60((uint64_t)v10, &qword_1011D5030);
LABEL_13:
    v44 = (uint64_t)v79;
    v42 = (uint64_t)v80;
    v43 = v77;
    v45 = (uint64_t)v78;
    v41 = v76;
    sub_10005B704((uint64_t)a1, v76, type metadata accessor for Notice);
    sub_10005B704(v42, v43, type metadata accessor for Notice);
    goto LABEL_14;
  }
  sub_10004FF60((uint64_t)v10, &qword_1011D4E08);
  v41 = v76;
  sub_10005B704((uint64_t)a1, v76, type metadata accessor for Notice);
  v42 = (uint64_t)v80;
  v43 = v77;
  sub_10005B704((uint64_t)v80, v77, type metadata accessor for Notice);
  v45 = (uint64_t)v78;
  v44 = (uint64_t)v79;
LABEL_20:
  v52 = v11[6];
  v53 = *(_QWORD *)(v41 + v52);
  v54 = *(_QWORD *)(v41 + v52 + 8);
  v55 = (_QWORD *)(v43 + v52);
  v56 = v55[1];
  if (v53 == *v55 && v54 == v56)
  {
    sub_10005B748(v41, type metadata accessor for Notice);
    sub_10005B748(v43, type metadata accessor for Notice);
    sub_10005B704((uint64_t)a1, v44, type metadata accessor for Notice);
    sub_10005B704(v42, v45, type metadata accessor for Notice);
    goto LABEL_24;
  }
  v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, *v55, v56, 0);
  sub_10005B748(v41, type metadata accessor for Notice);
  sub_10005B748(v43, type metadata accessor for Notice);
  sub_10005B704((uint64_t)a1, v44, type metadata accessor for Notice);
  sub_10005B704(v42, v45, type metadata accessor for Notice);
  if ((v57 & 1) == 0)
  {
LABEL_15:
    sub_10005B748(v45, type metadata accessor for Notice);
    sub_10005B748(v44, type metadata accessor for Notice);
LABEL_16:
    sub_10005B704((uint64_t)a1, v81, type metadata accessor for Notice);
    sub_10005B704(v42, (uint64_t)v13, type metadata accessor for Notice);
    goto LABEL_17;
  }
LABEL_24:
  v58 = (uint64_t)v13;
  v59 = v11;
  v60 = v11[7];
  v61 = (_QWORD *)(v44 + v60);
  v62 = *(_QWORD *)(v44 + v60 + 8);
  v63 = (_QWORD *)(v45 + v60);
  v64 = v63[1];
  if (!v62)
  {
    swift_bridgeObjectRetain();
    sub_10005B748(v45, type metadata accessor for Notice);
    sub_10005B748(v44, type metadata accessor for Notice);
    if (!v64)
      goto LABEL_30;
    goto LABEL_32;
  }
  if (!v64)
  {
    swift_bridgeObjectRetain();
    sub_10005B748(v45, type metadata accessor for Notice);
    sub_10005B748(v44, type metadata accessor for Notice);
LABEL_32:
    swift_bridgeObjectRelease();
    v13 = (char *)v58;
    goto LABEL_16;
  }
  if (*v61 == *v63 && v62 == v64)
  {
    swift_bridgeObjectRetain();
    sub_10005B748(v45, type metadata accessor for Notice);
    sub_10005B748(v44, type metadata accessor for Notice);
    swift_bridgeObjectRelease();
LABEL_30:
    sub_10005B704((uint64_t)a1, v81, type metadata accessor for Notice);
    v13 = (char *)v58;
    sub_10005B704(v42, v58, type metadata accessor for Notice);
    goto LABEL_34;
  }
  v65 = _stringCompareWithSmolCheck(_:_:expecting:)(*v61, v62, *v63, v63[1], 0);
  swift_bridgeObjectRetain();
  sub_10005B748(v45, type metadata accessor for Notice);
  sub_10005B748(v44, type metadata accessor for Notice);
  swift_bridgeObjectRelease();
  sub_10005B704((uint64_t)a1, v81, type metadata accessor for Notice);
  v13 = (char *)v58;
  sub_10005B704(v42, v58, type metadata accessor for Notice);
  if ((v65 & 1) == 0)
  {
LABEL_17:
    sub_10005B748((uint64_t)v13, type metadata accessor for Notice);
    sub_10005B748(v81, type metadata accessor for Notice);
    return 0;
  }
LABEL_34:
  v66 = (uint64_t *)(v81 + v59[9]);
  v67 = (uint64_t)v13;
  v68 = *v66;
  v69 = *((_BYTE *)v66 + 8);
  sub_10005B748(v81, type metadata accessor for Notice);
  v70 = v67 + v59[9];
  v71 = *(_QWORD *)v70;
  v47 = *(unsigned __int8 *)(v70 + 8);
  sub_10005B748(v67, type metadata accessor for Notice);
  if ((v69 & 1) == 0)
    return (v68 == v71) & ~(_DWORD)v47;
  return v47;
}

_QWORD *initializeBufferWithCopyOfBuffer for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Notice.Thumbnail(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_100007E8C(&qword_1011D4E08);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
      if (EnumCaseMultiPayload == 1)
      {
        v17 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      else
      {
        *v9 = *v10;
        swift_retain();
        swift_storeEnumTagMultiPayload(v9, v11, 0);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v18 = a3[6];
    v19 = a3[7];
    v20 = (_QWORD *)((char *)v4 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)((char *)v4 + v19);
    v24 = (_QWORD *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[8];
    v27 = (_QWORD *)((char *)v4 + v26);
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      v30 = *((_QWORD *)v28 + 1);
      *v27 = v29;
      v27[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
    }
    v31 = a3[9];
    v32 = a3[10];
    v33 = (char *)v4 + v31;
    v34 = (char *)a2 + v31;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
  }
  return v4;
}

double destroy for Notice(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_100007E8C(&qword_1011D4E08);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      swift_storeEnumTagMultiPayload(v8, v10, 0);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v16 = a3[6];
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)((char *)a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    v28 = *((_QWORD *)v26 + 1);
    *v25 = v27;
    v25[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  v29 = a3[9];
  v30 = a3[10];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  return a1;
}

_QWORD *assignWithCopy for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  size_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Notice.Thumbnail(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_10005B748((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
      if (EnumCaseMultiPayload == 1)
      {
        v36 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v7, v8, v36);
        swift_storeEnumTagMultiPayload(v7, v9, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload(v7, v9, 0);
        goto LABEL_17;
      }
      v15 = *(_QWORD *)(v10 + 64);
LABEL_9:
      memcpy(v7, v8, v15);
      goto LABEL_17;
    }
    sub_10005B748((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v15 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D4E08) - 8) + 64);
    goto LABEL_9;
  }
  if (v13)
    goto LABEL_8;
  v14 = swift_getEnumCaseMultiPayload(v8, v9);
  if (v14 == 1)
  {
    v17 = type metadata accessor for Artwork(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else if (v14)
  {
    memcpy(v7, v8, *(_QWORD *)(v10 + 64));
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    swift_storeEnumTagMultiPayload(v7, v9, 0);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a1 + v24);
  v28 = *(_QWORD *)((char *)a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      v30 = *((_QWORD *)v26 + 1);
      *v25 = v28;
      v25[1] = v30;
      swift_retain();
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_24;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_23;
  }
  v29 = *((_QWORD *)v26 + 1);
  *v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
LABEL_24:
  v31 = a3[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *(_QWORD *)v32 = v34;
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for Notice(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Notice.Thumbnail(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011D4E08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v12 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = a3[9];
  v20 = a3[10];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

_QWORD *assignWithTake for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
      {
        v17 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_14;
      }
      v16 = *(_QWORD *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v16);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D4E08) - 8) + 64);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v15 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  v18 = a3[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[7];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[8];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a1 + v28);
  v32 = *(_QWORD *)((char *)a2 + v28);
  if (!v31)
  {
    if (v32)
    {
      v34 = *((_QWORD *)v30 + 1);
      *v29 = v32;
      v29[1] = v34;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    goto LABEL_21;
  }
  if (!v32)
  {
    swift_release();
    goto LABEL_20;
  }
  v33 = *((_QWORD *)v30 + 1);
  *v29 = v32;
  v29[1] = v33;
  swift_release();
LABEL_21:
  v35 = a3[9];
  v36 = a3[10];
  v37 = (char *)a1 + v35;
  v38 = (char *)a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for Notice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009FE710);
}

uint64_t sub_1009FE710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011D4E08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Notice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009FE79C);
}

uint64_t sub_1009FE79C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011D4E08);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1009FE814(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100EDCB20;
  sub_10015C698(319, (unint64_t *)&unk_1011D4E90, type metadata accessor for Notice.Thumbnail);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EDCB20;
    v4[3] = &unk_100EDCB38;
    v4[4] = &unk_100EDCB38;
    v4[5] = &unk_100EDCB50;
    v4[6] = &unk_100EDCB68;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t destroy for Notice.Thumbnail(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else if (!(_DWORD)result)
  {
    return swift_release(*a1);
  }
  return result;
}

uint64_t *initializeWithCopy for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    swift_retain(v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *assignWithCopy for Notice.Thumbnail(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *initializeWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Artwork(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Artwork(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1009FEC98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Variant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = a2[2];
      v22 = a2[3];
      a1[2] = v21;
      a1[3] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      v10 = sub_100007E8C(&qword_1011D4E20);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100007E8C(&qword_1011D6CB0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void destroy for Notice.Variant(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    case 0:
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(sub_100007E8C(&qword_1011D4E20) + 48);
      v5 = type metadata accessor for Artwork(0);
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      break;
  }
}

_QWORD *initializeWithCopy for Notice.Variant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      v16 = a1;
      v17 = a3;
      v18 = 2;
LABEL_11:
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      return a1;
    case 1:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = a2[2];
      v21 = a2[3];
      a1[2] = v20;
      a1[3] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = a1;
      v17 = a3;
      v18 = 1;
      goto LABEL_11;
    case 0:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      v8 = sub_100007E8C(&qword_1011D4E20);
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for Artwork(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_100007E8C(&qword_1011D6CB0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 64));
      v16 = a1;
      v17 = a3;
      v18 = 0;
      goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for Notice.Variant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 == a2)
    return a1;
  sub_10005B748((uint64_t)a1, type metadata accessor for Notice.Variant);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = a3;
      v16 = 2;
LABEL_12:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_12;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = sub_100007E8C(&qword_1011D4E20);
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for Artwork(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011D6CB0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = sub_100007E8C(&qword_1011D4E20);
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Artwork(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100007E8C(&qword_1011D6CB0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 64));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_OWORD *assignWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Notice.Variant);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = sub_100007E8C(&qword_1011D4E20);
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Artwork(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011D6CB0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1009FF500(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[3];

  sub_10015C698(319, (unint64_t *)&unk_1011D5000, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, &unk_100EDCB20, *(_QWORD *)(v2 - 8) + 64, (char *)&value witness table for Builtin.Int64 + 64);
    v5[0] = v4;
    v5[1] = " ";
    v5[2] = &unk_100EDCB38;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
  }
}

unint64_t sub_1009FF5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D88B0;
  if (!qword_1011D88B0)
  {
    _s3__C25OpenExternalURLOptionsKeyVMa_0(255);
    result = swift_getWitnessTable(&unk_100EDA9F8, v1);
    atomic_store(result, (unint64_t *)&qword_1011D88B0);
  }
  return result;
}

uint64_t sub_1009FF5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = type metadata accessor for Notice(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 8))(v10, a2, a3, a4);
  return sub_100556078((uint64_t)v10);
}

uint64_t sub_1009FF68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t PresentedViewState<A>.present(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  *(_OWORD *)(v2 + 72) = v3;
  *(_BYTE *)(v2 + 113) = *(_BYTE *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 96) = v4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 104) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009FF71C, v7, v8);
}

{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100007E8C(&qword_1011DE770);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[8] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[9] = v8;
  v2[10] = v9;
  return swift_task_switch(sub_100C0F964, v8, v9);
}

uint64_t sub_1009FF71C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t KeyPath;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_BYTE *)(v0 + 113);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v18 = *(_OWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 40);
  swift_release();
  v16 = v1 & 1;
  v3 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v3, v0 + 16, 1, 0);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = (void *)v3[6];
  *v3 = v17;
  *(_OWORD *)(v3 + 1) = v18;
  v3[3] = v19;
  v3[4] = v16;
  v3[5] = v21;
  v3[6] = v22;
  sub_1003657F8(v20);
  sub_100462254(v4, v5, v6, v7, v8, v9, v10);
  v11 = (_QWORD *)swift_task_alloc(16);
  *v11 = &type metadata for Alert;
  KeyPath = swift_getKeyPath(&unk_100EDCBB0);
  swift_task_dealloc(v11);
  v13 = (_QWORD *)swift_task_alloc(16);
  *v13 = &type metadata for Alert;
  v14 = swift_getKeyPath(&unk_100EDCBE8);
  swift_task_dealloc(v13);
  *(_BYTE *)(v0 + 112) = 1;
  swift_retain();
  static Published.subscript.setter(v0 + 112, v2, KeyPath, v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009FF8A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011D5044);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_1009FF8F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1009FF920@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1009FF94C(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

uint64_t sub_1009FF970(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

uint64_t sub_1009FF994()
{
  return 8;
}

_QWORD *sub_1009FF9A0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t Logger.actions.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.actions);
}

uint64_t ActionDeclaring.init(context:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v29[32];

  v28 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3, a2, &protocol requirements base descriptor for ActionDeclaring, &associated type descriptor for ActionDeclaring.Context);
  v8 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - v17;
  v27 = a1;
  sub_10004FA40((uint64_t)a1, (uint64_t)v29);
  v19 = sub_100007E8C(&qword_1011D5050);
  v20 = swift_dynamicCast(v11, v29, v19, AssociatedTypeWitness, 6);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v20 & 1) != 0)
  {
    v21(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, AssociatedTypeWitness);
    v22 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 24))(v15, a2, a3);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v27);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, AssociatedTypeWitness);
    v23 = 0;
    v24 = v22;
  }
  else
  {
    v23 = 1;
    v21(v11, 1, 1, AssociatedTypeWitness);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v27);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v24 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v24, v23, 1, a2);
}

uint64_t AnyAction.init(identifier:contexts:resolver:logs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  char *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  void (*v51)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Swift::String v69;
  __n128 v70;
  uint64_t result;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (**v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  Swift::String v85;
  uint64_t *v86;
  uint64_t v87;
  void *v88;
  Swift::String v89;
  Swift::String v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  void *v101;
  Swift::String v102;
  Swift::String v103;
  unint64_t v104;
  unint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  _QWORD *v123;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  _BYTE v129[32];
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v120 = a4;
  v127 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v116 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AnyAction(0, v15, v16, v14);
  v126 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v118 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v109 - v20;
  v23 = (char *)&v109 + v22[10] - v20;
  *(_OWORD *)v23 = xmmword_100EA85A0;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  v121 = v22[11];
  *(uint64_t *)((char *)&v109 + v121 - v20) = 0;
  v24 = (uint64_t *)((char *)&v109 + v22[12] - v20);
  *v24 = 0;
  v24[1] = 0;
  v122 = v24;
  v25 = (uint64_t *)((char *)&v109 + v22[13] - v20);
  *v25 = 0;
  v25[1] = 0;
  v26 = (uint64_t *)((char *)&v109 + v22[14] - v20);
  *v26 = 0;
  v26[1] = 0;
  v125 = v26;
  v128 = v22;
  v27 = (uint64_t *)((char *)&v109 + v22[15] - v20);
  *v27 = 0;
  v27[1] = 0;
  v124 = v27;
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
  v123 = a3;
  if ((v28 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1011D24D8 != -1)
      swift_once(&qword_1011D24D8, sub_100B63A4C);
    v29 = v124;
    v30 = a7;
    if (static DeviceCapabilities.isInternalInstall == 1)
    {
      v133 = 0;
      v134 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      v114 = v23;
      v31 = sub_1009AD19C(a1, a5, *(_QWORD *)(a6 + 8));
      v119 = a7;
      v32 = a5;
      v34 = v33;
      swift_bridgeObjectRelease();
      v133 = v31;
      v134 = v34;
      v35._countAndFlagsBits = 0xD00000000000001ELL;
      v35._object = (void *)0x8000000100E4BB30;
      String.append(_:)(v35);
      Array<A>.appendStringComponents(_:lineLength:bullet:)(v133, v134, 80, 120, 0xE100000000000000);
      v36 = v122;
      v37 = v121;
      v23 = v114;
      v38 = swift_bridgeObjectRelease();
      v39 = v32;
      v30 = v119;
      (*(void (**)(uint64_t, uint64_t, __n128))(v127 + 8))(a1, v39, v38);
      v41 = v125;
      v40 = v126;
LABEL_15:
      v49 = v128;
LABEL_18:
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v123);
      sub_100A01720(*(_QWORD *)v23, *((_QWORD *)v23 + 1), *((_QWORD *)v23 + 2), *((_QWORD *)v23 + 3), *((void **)v23 + 4));

      sub_10004BA30(*v36, v36[1]);
      sub_10004BA30(*v25, v25[1]);
      sub_10004BA30(*v41, v41[1]);
      sub_10004BA30(*v29, v29[1]);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v40 + 56))(v30, 1, 1, v49);
    }
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(a1, a5);
    v40 = v126;
LABEL_14:
    v37 = v121;
    v41 = v125;
    v36 = v122;
    goto LABEL_15;
  }
  v117 = a2;
  v119 = a7;
  v115 = v25;
  v42 = a5;
  v43 = a3[3];
  v44 = a3[4];
  sub_100007E68(a3, v43);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 8))(a1, v42, *(_QWORD *)(a6 + 16), v43, v44);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    v133 = 0;
    v134 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    v59 = sub_1009AD19C(a1, v42, *(_QWORD *)(a6 + 8));
    v61 = v60;
    swift_bridgeObjectRelease();
    v133 = v59;
    v134 = v61;
    v62._countAndFlagsBits = 0xD000000000000014;
    v62._object = (void *)0x8000000100E4BAD0;
    String.append(_:)(v62);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v133, v134, 80, 120, 0xE100000000000000);
    v63 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v127 + 8))(a1, v42, v63);
    v25 = v115;
    v30 = v119;
    v40 = v126;
    v29 = v124;
    goto LABEL_14;
  }
  v47 = v45;
  v111 = a6;
  v112 = a1;
  v113 = v42;
  v48 = *(_QWORD *)(v117 + 16);
  v49 = v128;
  if (!v48)
  {
    swift_bridgeObjectRelease();
    v30 = v119;
    v36 = v122;
LABEL_17:
    v133 = 0;
    v134 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v64 = v112;
    v65 = v113;
    v66 = sub_1009AD19C(v112, v113, *(_QWORD *)(v111 + 8));
    v68 = v67;
    swift_bridgeObjectRelease();
    v133 = v66;
    v134 = v68;
    v69._countAndFlagsBits = 0xD000000000000016;
    v69._object = (void *)0x8000000100E4BAF0;
    String.append(_:)(v69);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v133, v134, 80, 120, 0xE100000000000000);
    v70 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v127 + 8))(v64, v65, v70);
    v41 = v125;
    v40 = v126;
    v25 = v115;
    v29 = v124;
    v37 = v121;
    goto LABEL_18;
  }
  v50 = v46;
  v114 = v23;
  v110 = v21;
  v51 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v46 + 8);
  v52 = v117 + 32;
  while (1)
  {
    sub_10004FA40(v52, (uint64_t)v129);
    v53 = type metadata accessor for Optional(0, v47);
    v54 = *(_QWORD *)(v53 - 8);
    v55 = __chkstk_darwin(v53);
    v57 = (char *)&v109 - v56;
    v51(v129, v47, v50, v55);
    v58 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v57, 1, v47) != 1)
      break;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v53);
    v130 = 0u;
    v131 = 0u;
    v132 = 0;
    sub_10004FF60((uint64_t)&v130, &qword_1011D5058);
    v52 += 32;
    if (!--v48)
    {
      swift_bridgeObjectRelease();
      v30 = v119;
      v49 = v128;
      v21 = v110;
      v36 = v122;
      v23 = v114;
      goto LABEL_17;
    }
  }
  *((_QWORD *)&v131 + 1) = v47;
  v132 = v50;
  v72 = sub_100049F68(&v130);
  (*(void (**)(_QWORD *, char *, uint64_t))(v58 + 32))(v72, v57, v47);
  swift_bridgeObjectRelease();
  sub_100064C48(&v130, (uint64_t)&v133);
  sub_100064C78((uint64_t)&v133, (uint64_t)&v130);
  v73 = (uint64_t)v116;
  v74 = v112;
  v75 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v116, v112, v113);
  v76 = v118;
  result = sub_100A0060C(&v130, v73, v75, v111, v118);
  v49 = v128;
  v77 = (uint64_t (**)(uint64_t))(v76 + v128[12]);
  if (*v77)
  {
    v78 = (*v77)(result);
    v81 = v125;
    v40 = v126;
    v21 = v110;
    v29 = v124;
    v36 = v122;
    v23 = v114;
    if (v79 != 1)
    {
      v94 = v78;
      v95 = v79;
      if ((v80 & 1) != 0)
      {
        sub_10013B670(v78, v79);
        v107 = v74;
        v108 = v113;
        v98 = v118;
      }
      else
      {
        *(_QWORD *)&v130 = sub_1009AD19C(v74, v113, *(_QWORD *)(v111 + 8));
        *((_QWORD *)&v130 + 1) = v96;
        v97._countAndFlagsBits = 10272;
        v97._object = (void *)0xE200000000000000;
        String.append(_:)(v97);
        v98 = v118;
        v99 = (uint64_t *)(v118 + v49[9]);
        v100 = *v99;
        v101 = (void *)v99[1];
        swift_bridgeObjectRetain();
        v102._countAndFlagsBits = v100;
        v21 = v110;
        v102._object = v101;
        String.append(_:)(v102);
        v29 = v124;
        swift_bridgeObjectRelease();
        v103._countAndFlagsBits = 539828265;
        v103._object = (void *)0xE400000000000000;
        String.append(_:)(v103);
        if (v95)
          v104 = v94;
        else
          v104 = 0xD000000000000013;
        if (!v95)
          v95 = 0x8000000100E4BB10;
        v105 = v95;
        String.append(_:)(*(Swift::String *)&v104);
        swift_bridgeObjectRelease();
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v130, *((uint64_t *)&v130 + 1), 80, 120, 0xE100000000000000);
        v40 = v126;
        v106 = swift_bridgeObjectRelease();
        v107 = v112;
        v108 = v113;
      }
      (*(void (**)(uint64_t, uint64_t, __n128))(v127 + 8))(v107, v108, v106);
      (*(void (**)(uint64_t, int *))(v40 + 8))(v98, v49);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v133);
      v25 = v115;
      v30 = v119;
      v37 = v121;
      v41 = v125;
      goto LABEL_18;
    }
    v82 = v74;
    v83 = v113;
    *(_QWORD *)&v130 = sub_1009AD19C(v82, v113, *(_QWORD *)(v111 + 8));
    *((_QWORD *)&v130 + 1) = v84;
    v85._countAndFlagsBits = 10272;
    v85._object = (void *)0xE200000000000000;
    String.append(_:)(v85);
    v86 = (uint64_t *)(v118 + v49[9]);
    v87 = *v86;
    v88 = (void *)v86[1];
    swift_bridgeObjectRetain();
    v89._countAndFlagsBits = v87;
    v89._object = v88;
    String.append(_:)(v89);
    swift_bridgeObjectRelease();
    v90._countAndFlagsBits = 41;
    v90._object = (void *)0xE100000000000000;
    String.append(_:)(v90);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v130, *((uint64_t *)&v130 + 1), 80, 9673954, 0xA300000000000000);
    v91 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v127 + 8))(v112, v83, v91);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v133);
    sub_100A01720(*(_QWORD *)v23, *((_QWORD *)v23 + 1), *((_QWORD *)v23 + 2), *((_QWORD *)v23 + 3), *((void **)v23 + 4));

    sub_10004BA30(*v36, v36[1]);
    sub_10004BA30(*v115, v115[1]);
    sub_10004BA30(*v81, v81[1]);
    sub_10004BA30(*v29, v29[1]);
    v92 = v126;
    (*(void (**)(char *, uint64_t, int *))(v126 + 32))(v21, v118, v49);
    v93 = v119;
    (*(void (**)(uint64_t, char *, int *))(v92 + 16))(v119, v21, v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v92 + 56))(v93, 0, 1, v49);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v123);
    return (*(uint64_t (**)(char *, int *))(v92 + 8))(v21, v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A0060C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t DynamicType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[40];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v58 = a5;
  v8 = type metadata accessor for AnyAction(0, a3, a4, a4);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - v9;
  v12 = (char *)&v48 + v11[10] - v9;
  *(_OWORD *)v12 = xmmword_100EA85A0;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  v51 = v11[11];
  *(_QWORD *)&v10[v51] = 0;
  v13 = (uint64_t *)((char *)&v48 + v11[12] - v9);
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)((char *)&v48 + v11[13] - v9);
  *v14 = 0;
  v14[1] = 0;
  v54 = v14;
  v15 = (uint64_t *)&v10[v11[14]];
  *v15 = 0;
  v15[1] = 0;
  v55 = v15;
  v16 = (uint64_t *)&v10[v11[15]];
  *v16 = 0;
  v16[1] = 0;
  v56 = v16;
  v50 = *(_QWORD *)(a3 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v52 = a2;
  v53 = a3;
  v17(v10, a2, a3);
  v18 = a1[3];
  v19 = sub_100007E68(a1, v18);
  DynamicType = swift_getDynamicType(v19, v18, 1);
  v21 = a1[4];
  v63 = DynamicType;
  v64 = v21;
  v22 = sub_100007E8C(&qword_1011D5180);
  v23 = String.init<A>(describing:)(&v63, v22);
  v24 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v24 = v23;
  v24[1] = v25;
  sub_100064C78((uint64_t)a1, (uint64_t)v59);
  v26 = sub_100007E8C(&qword_1011D5188);
  v27 = sub_100007E8C(&qword_1011D5190);
  if ((swift_dynamicCast(&v60, v59, v26, v27, 6) & 1) != 0)
  {
    v28 = *((_QWORD *)&v61 + 1);
    v29 = v62;
    sub_100007E68(&v60, *((uint64_t *)&v61 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(&v63, v28, v29);
    v30 = v64;
    v49 = v63;
    v31 = v65;
    v32 = v66;
    v34 = v67;
    v33 = v68;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v60);
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    sub_10004FF60((uint64_t)&v60, &qword_1011D5198);
    v49 = 0;
    v31 = 0;
    v32 = 0;
    v34 = 0;
    v33 = 0;
    v30 = 1;
  }
  sub_100A01720(*(_QWORD *)v12, *((_QWORD *)v12 + 1), *((_QWORD *)v12 + 2), *((_QWORD *)v12 + 3), *((void **)v12 + 4));
  *(_QWORD *)v12 = v49;
  *((_QWORD *)v12 + 1) = v30;
  *((_QWORD *)v12 + 2) = v31;
  *((_QWORD *)v12 + 3) = v32;
  *((_QWORD *)v12 + 4) = v34;
  *((_QWORD *)v12 + 5) = v33;
  v35 = a1[3];
  v36 = a1[4];
  sub_100007E68(a1, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v53);
  v38 = v51;

  *(_QWORD *)&v10[v38] = v37;
  sub_100064C78((uint64_t)a1, (uint64_t)&v60);
  v39 = swift_allocObject(&unk_1010EEA58, 56, 7);
  sub_100064C48(&v60, v39 + 16);
  sub_10004BA30(*v13, v13[1]);
  *v13 = (uint64_t)sub_100A0285C;
  v13[1] = v39;
  sub_100064C78((uint64_t)a1, (uint64_t)&v60);
  v40 = swift_allocObject(&unk_1010EEA80, 56, 7);
  sub_100064C48(&v60, v40 + 16);
  v41 = v54;
  sub_10004BA30(*v54, v54[1]);
  *v41 = (uint64_t)&unk_1011D51A0;
  v41[1] = v40;
  sub_100064C78((uint64_t)a1, (uint64_t)&v60);
  v42 = swift_allocObject(&unk_1010EEAA8, 56, 7);
  sub_100064C48(&v60, v42 + 16);
  v43 = v55;
  sub_10004BA30(*v55, v55[1]);
  *v43 = (uint64_t)&unk_1011D51A8;
  v43[1] = v42;
  sub_100064C78((uint64_t)a1, (uint64_t)&v60);
  v44 = swift_allocObject(&unk_1010EEAD0, 56, 7);
  sub_100064C48(&v60, v44 + 16);
  v45 = v56;
  sub_10004BA30(*v56, v56[1]);
  *v45 = (uint64_t)sub_100A02960;
  v45[1] = v44;
  v46 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v58, v10, v8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v10, v8);
}

uint64_t AnyAction.canPerform.getter(uint64_t result)
{
  uint64_t v1;
  uint64_t (**v2)(void);

  v2 = (uint64_t (**)(void))(v1 + *(int *)(result + 48));
  if (*v2)
    return (*v2)();
  __break(1u);
  return result;
}

uint64_t sub_100A00A3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_100A00A7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100A00A94, 0, 0);
}

uint64_t sub_100A00A94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 32);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_100998300;
  return v7(v2, v3);
}

uint64_t sub_100A00B0C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100A00B24, 0, 0);
}

uint64_t sub_100A00B24()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  sub_100007E68(v1, v2);
  v4 = *(int **)(v3 + 40);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_100997B3C;
  return v7(v2, v3);
}

uint64_t sub_100A00B9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t AnyAction.displayConfiguration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100A01768(v2 + *(int *)(a1 + 40), a2);
}

void *AnyAction.submenu.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 44));
  v3 = v2;
  return v2;
}

uint64_t AnyAction.execute()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v2[3] = a1;
  v2[4] = v1;
  v3 = *(_QWORD *)(a1 - 8);
  v2[5] = v3;
  v2[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v2[8] = v6;
  v2[9] = v7;
  return swift_task_switch(sub_100A00C9C, v6, v7);
}

void sub_100A00C9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (**v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  void (*v8)(void);
  uint64_t v9;
  __n128 v10;
  uint64_t (**v11)(__n128);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  __n128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  __n128 v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t v49[2];

  v1 = v0[3];
  v2 = (uint64_t (**)(void))(v0[4] + *(int *)(v1 + 48));
  if (!*v2)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v3 = (*v2)();
  v5 = v4;
  sub_10013B670(v3, v4);
  if (v5 == 1)
  {
    v6 = *(int **)(v0[4] + *(int *)(v0[3] + 52));
    if (v6)
    {
      v47 = (void (*)(void))((char *)v6 + *v6);
      v7 = (_QWORD *)swift_task_alloc(v6[1]);
      v0[10] = v7;
      *v7 = v0;
      v7[1] = sub_100A01014;
      v8 = v47;
LABEL_15:
      v8();
      return;
    }
    goto LABEL_17;
  }
  v9 = v0[4];
  v10 = swift_release();
  v11 = (uint64_t (**)(__n128))(v9 + *(int *)(v1 + 48));
  if (*v11)
  {
    v12 = (*v11)(v10);
    v15 = v0[3];
    if (v13 == 1)
    {
      v16 = type metadata accessor for AnyAction.Error(0, *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v14);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AnyAction<A>.Error, v16);
      v18 = swift_allocError(v16, WitnessTable, 0, 0);
      *v20 = 0;
      v20[1] = 0;
    }
    else
    {
      v21 = v12;
      v22 = v13;
      v23 = type metadata accessor for AnyAction.Error(0, *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), v14);
      v24 = swift_getWitnessTable(&protocol conformance descriptor for AnyAction<A>.Error, v23);
      v18 = swift_allocError(v23, v24, 0, 0);
      *v25 = v21;
      v25[1] = v22;
    }
    swift_willThrow(v19);
    if (qword_1011D1B60 != -1)
      swift_once(&qword_1011D1B60, sub_100A01630);
    v27 = v0[5];
    v26 = v0[6];
    v29 = v0[3];
    v28 = v0[4];
    v30 = type metadata accessor for Logger(0);
    sub_100048B14(v30, (uint64_t)static Logger.actions);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v28, v29);
    swift_errorRetain(v18);
    v31 = swift_errorRetain(v18);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    v34 = os_log_type_enabled(v32, v33);
    v35 = v0[5];
    v36 = v0[6];
    v37 = v0[3];
    if (v34)
    {
      v38 = swift_slowAlloc(22, -1);
      v48 = swift_slowAlloc(64, -1);
      v49[0] = v48;
      *(_DWORD *)v38 = 136446466;
      v39 = (char *)sub_1009AD19C(v36, *(_QWORD *)(v37 + 16), *(_QWORD *)(*(_QWORD *)(v37 + 24) + 8));
      *(_QWORD *)(v38 + 4) = sub_10099627C(v39, v40, v49);
      v41 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v36, v37, v41);
      *(_WORD *)(v38 + 12) = 2082;
      v0[2] = v18;
      swift_errorRetain(v18);
      v42 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
      v43 = (char *)String.init<A>(describing:)(v0 + 2, v42);
      *(_QWORD *)(v38 + 14) = sub_10099627C(v43, v44, v49);
      swift_bridgeObjectRelease();
      swift_errorRelease(v18);
      swift_errorRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v35 + 8))(v0[6], v0[3]);
      swift_errorRelease(v18);
      swift_errorRelease(v18);
    }

    v45 = v0[6];
    swift_willThrow(v46);
    swift_task_dealloc(v45);
    v8 = (void (*)(void))v0[1];
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_100A01014()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A011A0;
  else
    v4 = sub_100A01074;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

void sub_100A01074()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  void (*v3)(void);

  v1 = *(int **)(v0[4] + *(int *)(v0[3] + 56));
  if (v1)
  {
    v3 = (void (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    v0[12] = v2;
    *v2 = v0;
    v2[1] = sub_100A010E0;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A010E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A013E8;
  else
    v4 = sub_100A01140;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_100A01140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void (**v4)(uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  result = swift_release(*(_QWORD *)(v0 + 56));
  v4 = (void (**)(uint64_t))(v2 + *(int *)(v1 + 60));
  if (*v4)
  {
    v5 = *(_QWORD *)(v0 + 48);
    (*v4)(result);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A011A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 88);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 24);
  if (v10)
  {
    v14 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v25[0] = v24;
    *(_DWORD *)v14 = 136446466;
    v15 = (char *)sub_1009AD19C(v12, *(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v13 + 24) + 8));
    *(_QWORD *)(v14 + 4) = sub_10099627C(v15, v16, v25);
    v17 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v12, v13, v17);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v18 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v19 = (char *)String.init<A>(describing:)(v0 + 16, v18);
    *(_QWORD *)(v14 + 14) = sub_10099627C(v19, v20, v25);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24));
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v21 = *(_QWORD *)(v0 + 48);
  swift_willThrow(v22);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A013E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;
  uint64_t v25[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 104);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 24);
  if (v10)
  {
    v14 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v25[0] = v24;
    *(_DWORD *)v14 = 136446466;
    v15 = (char *)sub_1009AD19C(v12, *(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v13 + 24) + 8));
    *(_QWORD *)(v14 + 4) = sub_10099627C(v15, v16, v25);
    v17 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v12, v13, v17);
    *(_WORD *)(v14 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v18 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v19 = (char *)String.init<A>(describing:)(v0 + 16, v18);
    *(_QWORD *)(v14 + 14) = sub_10099627C(v19, v20, v25);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24));
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v21 = *(_QWORD *)(v0 + 48);
  swift_willThrow(v22);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A01630()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.actions);
  sub_100048B14(v0, (uint64_t)static Logger.actions);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x736E6F69746341, 0xE700000000000000);
}

uint64_t type metadata accessor for AnyAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAction);
}

uint64_t static Logger.actions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.actions);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void sub_100A01720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);

  }
}

uint64_t sub_100A01768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D5060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AnyAction.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAction.Error);
}

uint64_t sub_100A017BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EDCD70;
    v4[2] = &unk_100EDCD88;
    v4[3] = &unk_100EDCDA0;
    v4[4] = &unk_100EDCDB8;
    v4[5] = &unk_100EDCDB8;
    v4[6] = &unk_100EDCDB8;
    v4[7] = &unk_100EDCDB8;
    swift_initStructMetadata(a1, 0, 8, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100A01854(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void **v22;
  void *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000F8) != 0
    || (v7 = *(_QWORD *)(v5 + 64),
        ((((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16 > 0x18))
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v8 = (_QWORD *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v9 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v8 = *v9;
    v10 = v9[1];
    v8[1] = v10;
    v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = v12[1];
    if (v13 >= 0xFFFFFFFF)
      LODWORD(v13) = -1;
    v14 = v13 - 1;
    swift_bridgeObjectRetain(v10);
    if (v14 < 0)
    {
      *v11 = *v12;
      v18 = v12[1];
      v11[1] = v18;
      v11[2] = v12[2];
      v19 = v12[3];
      v11[3] = v19;
      v20 = (void *)v12[4];
      v11[4] = v20;
      v11[5] = v12[5];
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      v21 = v20;
    }
    else
    {
      v15 = *(_OWORD *)v12;
      v16 = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
      *((_OWORD *)v11 + 2) = v16;
      *(_OWORD *)v11 = v15;
    }
    v22 = (void **)(((unint64_t)v12 + 55) & 0xFFFFFFFFFFFFFFF8);
    v23 = *v22;
    v24 = (_QWORD *)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFF8);
    *v24 = *v22;
    v25 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    v26 = (unint64_t *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = *v26;
    v28 = v23;
    if (v27 < 0xFFFFFFFF)
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    else
    {
      v29 = v26[1];
      *(_QWORD *)v25 = v27;
      *(_QWORD *)(v25 + 8) = v29;
      swift_retain(v29);
    }
    v30 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    v31 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v31 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
    }
    else
    {
      v32 = *(_QWORD *)(v31 + 8);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_QWORD *)(v30 + 8) = v32;
      swift_retain(v32);
    }
    v33 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v34 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    else
    {
      v35 = *(_QWORD *)(v34 + 8);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *(_QWORD *)(v33 + 8) = v35;
      swift_retain(v35);
    }
    v36 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v37 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      return v4;
    }
    v17 = *(_QWORD *)(v37 + 8);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_QWORD *)(v36 + 8) = v17;
  }
  swift_retain(v17);
  return v4;
}

void sub_100A01AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(v5 + 8);
  if ((int)v7 - 1 < 0)
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));

  }
  v8 = (id *)((v5 + 55) & 0xFFFFFFFFFFFFFFF8);

  v9 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v9 >= 0xFFFFFFFFuLL)
    swift_release(v9[1]);
  v10 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v10 >= 0xFFFFFFFFuLL)
    swift_release(v10[1]);
  v11 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v11 >= 0xFFFFFFFFuLL)
    swift_release(v11[1]);
  v12 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v12 >= 0xFFFFFFFFuLL)
    swift_release(v12[1]);
}

uint64_t sub_100A01BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  int v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  void *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  v13 = v12 - 1;
  swift_bridgeObjectRetain(v9);
  if (v13 < 0)
  {
    *v10 = *v11;
    v16 = v11[1];
    v10[1] = v16;
    v10[2] = v11[2];
    v17 = v11[3];
    v10[3] = v17;
    v18 = (void *)v11[4];
    v10[4] = v18;
    v10[5] = v11[5];
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    v19 = v18;
  }
  else
  {
    v14 = *(_OWORD *)v11;
    v15 = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    *((_OWORD *)v10 + 2) = v15;
    *(_OWORD *)v10 = v14;
  }
  v20 = (void **)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  v22 = (_QWORD *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFF8);
  *v22 = *v20;
  v23 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (unint64_t *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = *v24;
  v26 = v21;
  if (v25 < 0xFFFFFFFF)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  else
  {
    v27 = v24[1];
    *(_QWORD *)v23 = v25;
    *(_QWORD *)(v23 + 8) = v27;
    swift_retain(v27);
  }
  v28 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v29 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  else
  {
    v30 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = v30;
    swift_retain(v30);
  }
  v31 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v32 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  else
  {
    v33 = *(_QWORD *)(v32 + 8);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_QWORD *)(v31 + 8) = v33;
    swift_retain(v33);
  }
  v34 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v35 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  else
  {
    v36 = *(_QWORD *)(v35 + 8);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = v36;
    swift_retain(v36);
  }
  return a1;
}

uint64_t sub_100A01DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  void **v24;
  void **v25;
  void *v26;
  void *v27;
  id v28;
  _QWORD *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v8[1];
  v10 = v7[1];
  v7[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)(v11 + 8);
  LODWORD(v14) = -1;
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  else
    v15 = *(_QWORD *)(v11 + 8);
  v16 = v15 - 1;
  if (v12[1] < 0xFFFFFFFFuLL)
    v14 = v12[1];
  v17 = v14 - 1;
  if ((v16 & 0x80000000) == 0)
  {
    if (v17 < 0)
    {
      *(_QWORD *)v11 = *v12;
      v18 = v12[1];
      *(_QWORD *)(v11 + 8) = v18;
      *(_QWORD *)(v11 + 16) = v12[2];
      v19 = v12[3];
      *(_QWORD *)(v11 + 24) = v19;
      v20 = (void *)v12[4];
      *(_QWORD *)(v11 + 32) = v20;
      *(_QWORD *)(v11 + 40) = v12[5];
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      v21 = v20;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if ((v17 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v11 + 24));

LABEL_11:
    v22 = *(_OWORD *)v12;
    v23 = *((_OWORD *)v12 + 2);
    *(_OWORD *)(v11 + 16) = *((_OWORD *)v12 + 1);
    *(_OWORD *)(v11 + 32) = v23;
    *(_OWORD *)v11 = v22;
    goto LABEL_12;
  }
  *(_QWORD *)v11 = *v12;
  v54 = v12[1];
  *(_QWORD *)(v11 + 8) = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(v11 + 16) = v12[2];
  v55 = v12[3];
  v56 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v11 + 24) = v55;
  swift_bridgeObjectRetain(v55);
  swift_bridgeObjectRelease(v56);
  v57 = *(void **)(v11 + 32);
  v58 = (void *)v12[4];
  *(_QWORD *)(v11 + 32) = v58;
  v59 = v58;

  *(_QWORD *)(v11 + 40) = v12[5];
LABEL_12:
  v24 = (void **)((v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  v25 = (void **)(((unint64_t)v12 + 55) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  v27 = *v24;
  *v24 = *v25;
  v28 = v26;

  v29 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (unint64_t *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = *v30;
  if (*v29 < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      v34 = v30[1];
      *v29 = v31;
      v29[1] = v34;
      swift_retain(v34);
      goto LABEL_19;
    }
  }
  else
  {
    if (v31 >= 0xFFFFFFFF)
    {
      v32 = v30[1];
      v33 = v29[1];
      *v29 = v31;
      v29[1] = v32;
      swift_retain(v32);
      swift_release(v33);
      goto LABEL_19;
    }
    swift_release(v29[1]);
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
LABEL_19:
  v35 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v36 = (unint64_t *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = *v36;
  if (*v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v40 = v36[1];
      *v35 = v37;
      v35[1] = v40;
      swift_retain(v40);
      goto LABEL_26;
    }
  }
  else
  {
    if (v37 >= 0xFFFFFFFF)
    {
      v38 = v36[1];
      v39 = v35[1];
      *v35 = v37;
      v35[1] = v38;
      swift_retain(v38);
      swift_release(v39);
      goto LABEL_26;
    }
    swift_release(v35[1]);
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
LABEL_26:
  v41 = (_QWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (unint64_t *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  if (*v41 < 0xFFFFFFFFuLL)
  {
    if (v43 >= 0xFFFFFFFF)
    {
      v46 = v42[1];
      *v41 = v43;
      v41[1] = v46;
      swift_retain(v46);
      goto LABEL_33;
    }
  }
  else
  {
    if (v43 >= 0xFFFFFFFF)
    {
      v44 = v42[1];
      v45 = v41[1];
      *v41 = v43;
      v41[1] = v44;
      swift_retain(v44);
      swift_release(v45);
      goto LABEL_33;
    }
    swift_release(v41[1]);
  }
  *(_OWORD *)v41 = *(_OWORD *)v42;
LABEL_33:
  v47 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v48 = (unint64_t *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  v49 = *v48;
  if (*v47 < 0xFFFFFFFFuLL)
  {
    if (v49 >= 0xFFFFFFFF)
    {
      v52 = v48[1];
      *v47 = v49;
      v47[1] = v52;
      swift_retain(v52);
      return a1;
    }
LABEL_39:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    return a1;
  }
  if (v49 < 0xFFFFFFFF)
  {
    swift_release(v47[1]);
    goto LABEL_39;
  }
  v50 = v48[1];
  v51 = v47[1];
  *v47 = v49;
  v47[1] = v50;
  swift_retain(v50);
  swift_release(v51);
  return a1;
}

uint64_t sub_100A02124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  v12 = v10[2];
  v9[1] = v10[1];
  v9[2] = v12;
  *v9 = v11;
  v13 = (_QWORD *)(((unint64_t)v9 + 55) & 0xFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v17 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
  }
  v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v20 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
  }
  v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v22 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  else
  {
    v23 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = v23;
  }
  v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (uint64_t *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  if ((unint64_t)*v25 < 0xFFFFFFFF)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  else
  {
    v27 = v25[1];
    *(_QWORD *)v24 = v26;
    *(_QWORD *)(v24 + 8) = v27;
  }
  return a1;
}

uint64_t sub_100A02274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  void **v17;
  void **v18;
  void *v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  void *v46;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v7[1];
  v7[1] = v8[1];
  swift_bridgeObjectRelease(v9);
  v10 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)(v10 + 8);
  LODWORD(v13) = -1;
  if (v12 < 0xFFFFFFFF)
    v13 = *(_QWORD *)(v10 + 8);
  if ((int)v13 - 1 >= 0)
    goto LABEL_8;
  v14 = *(_QWORD *)(v11 + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  if ((int)v14 - 1 >= 0)
  {
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));

LABEL_8:
    v15 = *(_OWORD *)v11;
    v16 = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v16;
    *(_OWORD *)v10 = v15;
    goto LABEL_9;
  }
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
  v45 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v10 + 24) = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRelease(v45);
  v46 = *(void **)(v10 + 32);
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);

  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
LABEL_9:
  v17 = (void **)((v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  v18 = (void **)((v11 + 55) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v17;
  *v17 = *v18;

  v20 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      goto LABEL_16;
    }
  }
  else
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v23 = v21[1];
      v24 = v20[1];
      *v20 = v22;
      v20[1] = v23;
      swift_release(v24);
      goto LABEL_16;
    }
    swift_release(v20[1]);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_16:
  v26 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (unint64_t *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = *v27;
  if (*v26 < 0xFFFFFFFFuLL)
  {
    if (v28 >= 0xFFFFFFFF)
    {
      v31 = v27[1];
      *v26 = v28;
      v26[1] = v31;
      goto LABEL_23;
    }
  }
  else
  {
    if (v28 >= 0xFFFFFFFF)
    {
      v29 = v27[1];
      v30 = v26[1];
      *v26 = v28;
      v26[1] = v29;
      swift_release(v30);
      goto LABEL_23;
    }
    swift_release(v26[1]);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_23:
  v32 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (unint64_t *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = *v33;
  if (*v32 < 0xFFFFFFFFuLL)
  {
    if (v34 >= 0xFFFFFFFF)
    {
      v37 = v33[1];
      *v32 = v34;
      v32[1] = v37;
      goto LABEL_30;
    }
  }
  else
  {
    if (v34 >= 0xFFFFFFFF)
    {
      v35 = v33[1];
      v36 = v32[1];
      *v32 = v34;
      v32[1] = v35;
      swift_release(v36);
      goto LABEL_30;
    }
    swift_release(v32[1]);
  }
  *(_OWORD *)v32 = *(_OWORD *)v33;
LABEL_30:
  v38 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  v39 = (unint64_t *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  v40 = *v39;
  if (*v38 < 0xFFFFFFFFuLL)
  {
    if (v40 >= 0xFFFFFFFF)
    {
      v43 = v39[1];
      *v38 = v40;
      v38[1] = v43;
      return a1;
    }
LABEL_36:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    return a1;
  }
  if (v40 < 0xFFFFFFFF)
  {
    swift_release(v38[1]);
    goto LABEL_36;
  }
  v41 = v39[1];
  v42 = v38[1];
  *v38 = v40;
  v38[1] = v41;
  swift_release(v42);
  return a1;
}

uint64_t sub_100A02554(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100A02600 + 4 * byte_100EDCCC0[v10]))();
  }
}

void sub_100A02684(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_100A027A8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100A02820);
}

void sub_100A027B0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100A027B8);
  JUMPOUT(0x100A02820);
}

void sub_100A027FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100A02820);
}

void sub_100A02804()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100A02820);
}

uint64_t sub_100A0280C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x100A02818);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x100A02820);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_100A02838()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56);
}

uint64_t sub_100A0285C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  sub_100007E68(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_100A028A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D517C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  v2[2] = v0 + 16;
  return swift_task_switch(sub_100A00A94, 0, 0);
}

uint64_t sub_100A02900()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D5174);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10005AEE4;
  v2[2] = v0 + 16;
  return swift_task_switch(sub_100A00B24, 0, 0);
}

uint64_t sub_100A02960()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  sub_100007E68(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t ActionCondition.Result.failure.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a2 == 1)
    v2 = 0;
  else
    v2 = a1;
  sub_1003351D4(a1, a2);
  return v2;
}

BOOL ActionCondition.Result.isTrue.getter(uint64_t a1, uint64_t a2)
{
  return a2 == 1;
}

uint64_t static ActionCondition.Result.failure(_:redactLog:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

BOOL sub_100A02A30(uint64_t a1, uint64_t a2)
{
  return _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t ActionCondition.init(_:file:line:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t ActionCondition.init(_:_:redactLog:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t (*a6)()@<X5>, uint64_t (*a7)()@<X6>, uint64_t (*a8)()@<X7>, uint64_t (**a9)()@<X8>)
{
  uint64_t result;

  result = swift_allocObject(&unk_1010EEB28, 49, 7);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_BYTE *)(result + 48) = a5;
  *a9 = sub_100A02D88;
  a9[1] = (uint64_t (*)())result;
  a9[2] = a6;
  a9[3] = a7;
  a9[4] = a8;
  return result;
}

BOOL ActionCondition.isTrue.getter()
{
  uint64_t (**v0)(void);
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = (*v0)();
  v3 = v2 == 1;
  sub_10013B670(v1, v2);
  return v3;
}

uint64_t static ActionConditionEvaluator.buildBlock(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v4 = 0;
    v15 = v3;
    v16 = v1;
    while (1)
    {
      v5 = *(_QWORD *)(v3 + 8 * v4);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
        break;
LABEL_3:
      if (++v4 == v1)
      {
        swift_bridgeObjectRelease(a1);
        return 0;
      }
    }
    swift_bridgeObjectRetain_n(*(_QWORD *)(v3 + 8 * v4), 2);
    v7 = (uint64_t *)(v5 + 56);
    while (1)
    {
      v8 = *v7;
      v9 = (uint64_t (*)(uint64_t))*(v7 - 3);
      v10 = *(v7 - 2);
      swift_retain(v10);
      v11 = swift_bridgeObjectRetain(v8);
      v1 = v9(v11);
      v13 = v12;
      swift_bridgeObjectRelease(v8);
      swift_release(v10);
      if (v13 != 1)
        break;
      v7 += 5;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n(v5, 2);
        v3 = v15;
        v1 = v16;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  return v1;
}

uint64_t static ActionConditionEvaluator.buildExpression(_:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v7;

  v2 = sub_100007E8C(&qword_1011D51B0);
  v3 = swift_allocObject(v2, 72, 7);
  v5 = *a1;
  v7 = a1[1];
  v4 = v7;
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = v4;
  *(_QWORD *)(v3 + 64) = *((_QWORD *)a1 + 4);
  swift_retain();
  sub_100055CE4((uint64_t)&v7);
  return v3;
}

BOOL _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  char v9;
  char v10;

  if (a2 == 1)
    return a5 == 1;
  if (a5 == 1)
    return 0;
  if (a2)
  {
    if (a5)
    {
      if (a1 != a4 || a2 != a5)
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
        v10 = 0;
        if ((v9 & 1) == 0)
          return v10 & 1;
      }
      goto LABEL_14;
    }
  }
  else
  {
    if (!a5)
    {
LABEL_14:
      v10 = ((a3 & 1) == 0) ^ a6;
      return v10 & 1;
    }
    sub_10013B670(a1, 0);
  }
  v10 = 0;
  return v10 & 1;
}

uint64_t sub_100A02D5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100A02D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  if (((*(uint64_t (**)(void))(v0 + 16))() & 1) != 0)
    return 0;
  swift_bridgeObjectRetain(v2);
  return v1;
}

uint64_t destroy for ActionCondition(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ActionCondition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for ActionCondition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for QRCode(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ActionCondition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ActionCondition()
{
  return &type metadata for ActionCondition;
}

uint64_t sub_100A02F30(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((int)v4 - 1 < 0)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain(v3);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for ActionCondition.Result(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 8);
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = *(_QWORD *)(a1 + 8);
  v7 = v6 - 1;
  if (*((_QWORD *)a2 + 1) < 0xFFFFFFFFuLL)
    v5 = *((_QWORD *)a2 + 1);
  v8 = v5 - 1;
  if (v7 < 0)
  {
    if (v8 < 0)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v12 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v4);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      return a1;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    v10 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v9 = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t assignWithTake for ActionCondition.Result(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 8);
    if ((int)v7 - 1 < 0)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRelease(v4);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease(v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_9:
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCondition.Result(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  if ((v4 + 1) >= 2)
    return v4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionCondition.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_100A03180(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCondition.Result()
{
  return &type metadata for ActionCondition.Result;
}

ValueMetadata *type metadata accessor for ActionConditionEvaluator()
{
  return &type metadata for ActionConditionEvaluator;
}

void *ActionDisplayConfiguration.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t ActionDisplayConfiguration.attributes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ActionDisplayConfiguration.init(title:subtitle:image:attributes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void *ActionDisplayConfiguration.Attributes.disabled.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.disabled;
}

void *ActionDisplayConfiguration.Attributes.destructive.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.destructive;
}

void *ActionDisplayConfiguration.Attributes.hidden.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.hidden;
}

unint64_t sub_100A03234()
{
  unint64_t result;

  result = qword_1011D51B8;
  if (!qword_1011D51B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, (unint64_t *)&qword_1011D51B8);
  }
  return result;
}

unint64_t sub_100A0327C()
{
  unint64_t result;

  result = qword_1011D51C0;
  if (!qword_1011D51C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, (unint64_t *)&qword_1011D51C0);
  }
  return result;
}

unint64_t sub_100A032C4()
{
  unint64_t result;

  result = qword_1011D51C8;
  if (!qword_1011D51C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, (unint64_t *)&qword_1011D51C8);
  }
  return result;
}

unint64_t sub_100A0330C()
{
  unint64_t result;

  result = qword_1011D51D0[0];
  if (!qword_1011D51D0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionDisplayConfiguration.Attributes, &type metadata for ActionDisplayConfiguration.Attributes);
    atomic_store(result, qword_1011D51D0);
  }
  return result;
}

uint64_t sub_100A03350@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10098A904(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

void destroy for ActionDisplayConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

_QWORD *initializeWithCopy for ActionDisplayConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v6 = (void *)a2[4];
  v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for ActionDisplayConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)a1[4];
  v9 = (void *)a2[4];
  a1[4] = v9;
  v10 = v9;

  a1[5] = a2[5];
  return a1;
}

_QWORD *assignWithTake for ActionDisplayConfiguration(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = (void *)a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);

  a1[5] = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionDisplayConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionDisplayConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration()
{
  return &type metadata for ActionDisplayConfiguration;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration.Attributes()
{
  return &type metadata for ActionDisplayConfiguration.Attributes;
}

uint64_t ActionList.init(_:lookup:resolver:excluding:)(uint64_t isUniquelyReferenced_nonNull_native, char *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char **v31;
  __int128 v32;
  char *v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD v41[9];
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  __int128 v45;
  _QWORD v46[4];
  _QWORD v47[4];
  _QWORD *v48;

  v8 = a4;
  v9 = isUniquelyReferenced_nonNull_native;
  v10 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
  v11 = _swiftEmptyArrayStorage;
  v43 = a3;
  if (v10)
  {
    v44 = a2;
    *(_QWORD *)&v45 = a4;
    v48 = _swiftEmptyArrayStorage;
    sub_1009F2508(0, v10, 0);
    v12 = v9 + 32;
    do
    {
      sub_10004FA40(v12, (uint64_t)v47);
      sub_10004FA40((uint64_t)v47, (uint64_t)v46);
      v13 = sub_100007E8C(&qword_1011D5050);
      v14 = String.init<A>(describing:)(v46, v13);
      v16 = String.components(wrappedToLineLength:bullet:)(80, 62, 0xE100000000000000, v14, v15);
      swift_bridgeObjectRelease();
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v47);
      v11 = v48;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1009F2508(0, v11[2] + 1, 1);
        v11 = v48;
      }
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1009F2508((_QWORD *)(v17 > 1), v18 + 1, 1);
        v11 = v48;
      }
      v11[2] = v18 + 1;
      v11[v18 + 4] = v16;
      v12 += 32;
      --v10;
    }
    while (v10);
    v19 = v43;
    a2 = v44;
    v8 = v45;
  }
  else
  {
    v19 = a3;
  }
  v47[0] = v11;
  v46[0] = a2;
  __chkstk_darwin(isUniquelyReferenced_nonNull_native);
  v41[2] = a5;
  v41[3] = a6;
  v41[4] = v9;
  v41[5] = v19;
  v41[6] = v8;
  v41[7] = v47;
  type metadata accessor for ActionLookup.Group(255, a5, a6, v20);
  v21 = type metadata accessor for Array(0);
  v23 = type metadata accessor for ActionGroup(0, a5, a6, v22);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
  v25 = Sequence.compactMap<A>(_:)(sub_100A03ECC, v41, v21, v23, WitnessTable);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = swift_bridgeObjectRetain();
  v27 = Array<A>.asciiBoxed()(v26);
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v27 + 2);
  if (v28)
  {
    v42 = v25;
    v29 = qword_1011D1B60;
    swift_bridgeObjectRetain();
    if (v29 != -1)
      swift_once(&qword_1011D1B60, sub_100A01630);
    v30 = type metadata accessor for Logger(0);
    v41[8] = v27;
    v31 = (char **)(v27 + 40);
    *(_QWORD *)&v32 = 136446210;
    v45 = v32;
    v44 = (char *)&type metadata for Any + 8;
    do
    {
      v33 = *(v31 - 1);
      v34 = *v31;
      sub_100048B14(v30, (uint64_t)static Logger.actions);
      v35 = swift_bridgeObjectRetain_n(v34, 2);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = (_QWORD *)swift_slowAlloc(32, -1);
        v48 = v39;
        *(_DWORD *)v38 = v45;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v38 + 4) = sub_10099627C(v33, v34, (uint64_t *)&v48);
        swift_bridgeObjectRelease_n(v34, 3);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, v44);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v34, 2);
      }
      v31 += 2;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    v25 = v42;
    v19 = v43;
  }
  swift_bridgeObjectRelease();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v19);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_100A039CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v14 = *a1;
  v22 = _swiftEmptyArrayStorage;
  sub_100064C78(a3, (uint64_t)v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_100A03AFC(v14, a2, v21, a4, (uint64_t)&v22, a6, a7);
  v16 = v22;
  v17 = (_QWORD *)*a5;
  result = swift_isUniquelyReferenced_nonNull_native(*a5);
  *a5 = (uint64_t)v17;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1009B9BBC(0, v17[2] + 1, 1, v17);
    v17 = (_QWORD *)result;
    *a5 = result;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_1009B9BBC((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    v17 = (_QWORD *)result;
    *a5 = result;
  }
  v17[2] = v20 + 1;
  v17[v20 + 4] = v16;
  *a8 = v15;
  return result;
}

uint64_t sub_100A03AFC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[10];

  v17[9] = a1;
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a5;
  v17[5] = a4;
  v17[6] = a2;
  v17[7] = a3;
  v10 = type metadata accessor for Array(0);
  v12 = type metadata accessor for AnyAction(0, a6, a7, v11);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v10);
  v14 = Sequence.compactMap<A>(_:)(sub_100A03F70, v17, v10, v12, WitnessTable);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = Array.count.getter(v14, v12);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a3);
  if (v15 < 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v14;
}

uint64_t sub_100A03C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a2;
  v35 = a8;
  v14 = *(_QWORD *)(a6 - 8);
  v15 = __chkstk_darwin(a1);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 24))(v19, v18, v15) & 1) != 0)
  {
    if (qword_1011D24D8 != -1)
      swift_once(&qword_1011D24D8, sub_100B63A4C);
    if (static DeviceCapabilities.isInternalInstall != 1)
      goto LABEL_9;
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    v21 = sub_1009AD19C(a1, a6, *(_QWORD *)(a7 + 8));
    v23 = v22;
    swift_bridgeObjectRelease();
    v36 = v21;
    v37 = v23;
    v24 = 0xD00000000000001ELL;
    v25 = 0x8000000100E4BB30;
LABEL_8:
    String.append(_:)(*(Swift::String *)&v24);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v36, v37, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
LABEL_9:
    v31 = type metadata accessor for AnyAction(0, a6, a7, v20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v35, 1, 1, v31);
  }
  v36 = a3;
  v26 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v26);
  if ((Sequence<>.contains(_:)(a1, v26, WitnessTable, *(_QWORD *)(*(_QWORD *)(a7 + 16) + 8)) & 1) != 0)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v28 = sub_1009AD19C(a1, a6, *(_QWORD *)(a7 + 8));
    v30 = v29;
    swift_bridgeObjectRelease();
    v36 = v28;
    v37 = v30;
    v25 = 0x8000000100E4BB50;
    v24 = 0xD000000000000016;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, a6);
  sub_100064C78(a5, (uint64_t)&v36);
  swift_bridgeObjectRetain();
  return AnyAction.init(identifier:contexts:resolver:logs:)((uint64_t)v17, a4, &v36, v34, a6, a7, v35);
}

uint64_t (*sub_100A03E78(uint64_t (*result)(uint64_t a1), unint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a3 + 16) > a2)
  {
    v3 = result;
    v4 = a3 + 16 * a2;
    v5 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)v3 = *(_QWORD *)(v4 + 32);
    *((_QWORD *)v3 + 1) = v5;
    swift_bridgeObjectRetain();
    return _s7ContextVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_100A03ECC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_100A039CC(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(uint64_t **)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t type metadata accessor for ActionGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionGroup);
}

uint64_t type metadata accessor for ActionList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionList);
}

uint64_t *sub_100A03F04(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32), a2);
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_10043960C;
  }
  __break(1u);
  return result;
}

uint64_t sub_100A03F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100A03C00(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

void ActionType.isHidden.getter(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_100A03FC0@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

uint64_t sub_100A03FD4()
{
  unint64_t v0;
  char v1;

  v0 = sub_100A040A0();
  v1 = FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v0);
  return sub_100A03FC0(v1 ^ 1u);
}

unint64_t sub_100A0405C()
{
  unint64_t result;

  result = qword_1011D52D8;
  if (!qword_1011D52D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.MediaPlayer, &type metadata for Feature.MediaPlayer);
    atomic_store(result, (unint64_t *)&qword_1011D52D8);
  }
  return result;
}

unint64_t sub_100A040A0()
{
  unint64_t result;

  result = qword_1011D52E0;
  if (!qword_1011D52E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.Music, &type metadata for Feature.Music);
    atomic_store(result, (unint64_t *)&qword_1011D52E0);
  }
  return result;
}

_QWORD *static ActionType.modelActionLookup.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t inited;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _BYTE v23[40];
  _BYTE v24[32];
  _QWORD v25[12];

  v0 = (_BYTE *)sub_100007E8C(&qword_1011D3E18);
  v1 = swift_allocObject(v0, 40, 7);
  v22 = xmmword_100EA7AA0;
  *(_OWORD *)(v1 + 16) = xmmword_100EA7AA0;
  v21 = v1;
  *(_QWORD *)(v1 + 32) = &off_1010E58A0;
  v2 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EA7AA0;
  v20 = v2;
  *(_QWORD *)(v2 + 32) = &off_1010E58C8;
  v3 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v3 + 32) = &off_1010E58F0;
  v4 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v4 + 32) = &off_1010E5918;
  v5 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v5 + 32) = &off_1010E5948;
  v6 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v6 + 32) = &off_1010E5970;
  v7 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v7 + 32) = &off_1010E5998;
  v8 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v8 + 32) = &off_1010E59C0;
  v9 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v9 + 32) = &off_1010E59E8;
  v10 = (_QWORD *)swift_allocObject(v0, 40, 7);
  *((_OWORD *)v10 + 1) = xmmword_100EA7AA0;
  v10[4] = &off_1010E5A10;
  if (qword_1011D24D8 != -1)
LABEL_25:
    swift_once(&qword_1011D24D8, sub_100B63A4C);
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    inited = swift_initStackObject(v0, v23);
    *(_OWORD *)(inited + 16) = v22;
    *(_QWORD *)(inited + 32) = &off_1010E5A38;
    sub_100A0554C(inited);
  }
  v0 = v24;
  *(_QWORD *)&v22 = v25;
  v25[0] = v21;
  v25[1] = v20;
  v25[2] = v3;
  v25[3] = v4;
  v25[4] = v5;
  v25[5] = v6;
  v25[6] = v7;
  v25[7] = v8;
  v25[8] = v9;
  v25[9] = v10;
  v7 = 32;
  v25[10] = _swiftEmptyArrayStorage;
  v10 = _swiftEmptyArrayStorage;
  do
  {
    v3 = *(_QWORD *)&v24[v7];
    v4 = *(_QWORD *)(v3 + 16);
    v5 = v10[2];
    v6 = v5 + v4;
    if (__OFADD__(v5, v4))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v10);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v6 <= v10[3] >> 1)
    {
      if (!*(_QWORD *)(v3 + 16))
        goto LABEL_5;
    }
    else
    {
      if (v5 <= v6)
        v13 = v5 + v4;
      else
        v13 = v5;
      v10 = sub_1009B9CDC(isUniquelyReferenced_nonNull_native, v13, 1, v10);
      if (!*(_QWORD *)(v3 + 16))
      {
LABEL_5:
        if (v4)
          goto LABEL_22;
        goto LABEL_6;
      }
    }
    v14 = v10[2];
    if ((v10[3] >> 1) - v14 < v4)
      goto LABEL_23;
    v5 = (uint64_t)&v10[v14 + 4];
    v6 = v3 + 32;
    sub_100007E8C(&qword_1011D3E20);
    swift_arrayInitWithCopy(v5);
    if (v4)
    {
      v15 = v10[2];
      v16 = __OFADD__(v15, v4);
      v17 = v15 + v4;
      if (v16)
        goto LABEL_24;
      v10[2] = v17;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v7 += 8;
  }
  while (v7 != 120);
  v18 = sub_100007E8C(&qword_1011D52E8);
  swift_arrayDestroy(v25, 11, v18);
  return v10;
}

uint64_t static ActionLookupBuilder.buildExpression(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v5 = type metadata accessor for ActionLookup.Group(255, a2, a3, a4);
  v6 = type metadata accessor for _ContiguousArrayStorage(0, v5);
  v7 = swift_allocObject(v6, 40, 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  *v9 = a1;
  v10 = sub_10014273C(v8);
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t static ActionLookupBuilder.buildBlock<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100A04548(a1, a2, a3, a4, a5, (uint64_t)sub_1009AE188);
}

{
  return sub_100A04548(a1, a2, a3, a4, a5, (uint64_t)sub_1009AD1D0);
}

uint64_t static ActionLookupBuilder.buildOptional<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    v5 = a1;
  }
  else
  {
    v6 = type metadata accessor for ActionLookup.Group(0, a3, a5, a4);
    v5 = static Array._allocateUninitialized(_:)(0, v6);
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_100A04548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  _QWORD v12[8];

  v12[7] = a1;
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  type metadata accessor for ActionLookup.Group(255, a3, a5, a4);
  v7 = type metadata accessor for Array(255);
  v8 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for [A], v7);
  return Sequence.flatMap<A>(_:)(a6, v12, v8, v7, WitnessTable, v10);
}

uint64_t static ActionType.socialActionLookup.getter()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[3];

  v1 = sub_100007E8C(&qword_1011D3E18);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v2 + 32) = &off_1010E5A60;
  v3 = v2 + 32;
  v4 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v4 + 32) = &off_1010E5A88;
  v5 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v5 + 32) = &off_1010E5AB0;
  v23[0] = v2;
  v23[1] = v4;
  v23[2] = v5;
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_1009B9CDC(0, 1, 1, _swiftEmptyArrayStorage);
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_37;
  v7 = (_QWORD *)result;
  v8 = *(_QWORD *)(result + 16);
  if (v8 >= *(_QWORD *)(result + 24) >> 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v9 = result + 8 * v8 + 32;
  sub_100007E8C(&qword_1011D3E20);
  swift_arrayInitWithCopy(v9);
  ++v7[2];
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v4 + 16);
  v3 = v7[2];
  v0 = v3 + v2;
  if (__OFADD__(v3, v2))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = v7[3];
  result = swift_bridgeObjectRetain();
  if (v0 <= (uint64_t)(v10 >> 1))
  {
    if (v2)
      goto LABEL_6;
LABEL_16:
    if (v2)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v5 + 16);
    v16 = v7[2];
    v17 = v16 + v15;
    if (__OFADD__(v16, v15))
    {
      __break(1u);
    }
    else
    {
      v18 = v7[3];
      result = swift_bridgeObjectRetain();
      if (v17 <= (uint64_t)(v18 >> 1))
      {
        if (v15)
          goto LABEL_20;
LABEL_29:
        if (!v15)
          goto LABEL_30;
        goto LABEL_32;
      }
    }
    if (v16 <= v17)
      v21 = v16 + v15;
    else
      v21 = v16;
    result = (uint64_t)sub_1009B9CDC((_QWORD *)1, v21, 1, v7);
    v7 = (_QWORD *)result;
    v16 = *(_QWORD *)(result + 16);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_20:
      if ((v7[3] >> 1) - v16 >= v15)
      {
        sub_100007E8C(&qword_1011D3E20);
        result = swift_arrayInitWithCopy(&v7[v16 + 4]);
        if (!v15)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          v22 = sub_100007E8C(&qword_1011D52E8);
          swift_arrayDestroy(v23, 3, v22);
          return (uint64_t)v7;
        }
        v19 = v7[2];
        v12 = __OFADD__(v19, v15);
        v20 = v19 + v15;
        if (!v12)
        {
          v7[2] = v20;
          goto LABEL_30;
        }
        goto LABEL_36;
      }
      goto LABEL_34;
    }
    goto LABEL_29;
  }
LABEL_12:
  if (v3 <= v0)
    v14 = v0;
  else
    v14 = v3;
  result = (uint64_t)sub_1009B9CDC((_QWORD *)1, v14, 1, v7);
  v7 = (_QWORD *)result;
  v3 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_16;
LABEL_6:
  if ((v7[3] >> 1) - v3 < v2)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_100007E8C(&qword_1011D3E20);
  result = swift_arrayInitWithCopy(&v7[v3 + 4]);
  if (!v2)
    goto LABEL_17;
  v11 = v7[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v7[2] = v13;
    goto LABEL_17;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t ActionType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A0494C + 4 * word_100EDD10A[a1]))(0x62694C6F54646461, 0xEC00000079726172);
}

unint64_t sub_100A0494C()
{
  return 0xD000000000000012;
}

uint64_t sub_100A04E8C()
{
  return 0x6E556C6169636F73;
}

uint64_t sub_100A04EC4()
{
  return 1953656691;
}

uint64_t sub_100A04ED4()
{
  return 0x4C74736567677573;
}

uint64_t sub_100A04EF8()
{
  return 0x6F7661466F646E75;
}

uint64_t sub_100A04F18()
{
  return 0x676775536F646E75;
}

uint64_t sub_100A04F3C()
{
  return 0x6C6C754677656976;
}

_UNKNOWN **static ActionType.allCases.getter()
{
  return &off_1010E6068;
}

uint64_t sub_100A04F70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = ActionType.rawValue.getter(*a1);
  v5 = v4;
  v6 = ActionType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_100A04FF8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = ActionType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100A05058(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = ActionType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100A05098(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = ActionType.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100A050F4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100A05120@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100A05148()
{
  char *v0;

  ActionType.isHidden.getter(*v0);
}

void sub_100A05150(_QWORD *a1@<X8>)
{
  *a1 = &off_1010E6068;
}

uint64_t sub_100A05160()
{
  unsigned __int8 *v0;

  return ActionType.rawValue.getter(*v0);
}

uint64_t sub_100A05168(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  result = sub_1009B933C(result, v12, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = sub_100007E8C(&qword_1011D2AE0);
  result = swift_arrayInitWithCopy(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v7);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease(v6);
    *v1 = v3;
    return result;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *(_QWORD *)(v3 + 16) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_100A0526C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  v3 = sub_1009B9948(isUniquelyReferenced_nonNull_native, v13, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = (uint64_t)&v3[11 * v8 + 4];
  sub_100007E8C(&qword_1011D3E30);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v10 = v3[2];
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    v3[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_100A05368(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  v3 = sub_1009B9BA8(isUniquelyReferenced_nonNull_native, v13, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = (uint64_t)&v3[5 * v8 + 4];
  sub_100007E8C(&qword_1011D86F0);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v10 = v3[2];
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    v3[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_100A05464(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  v3 = sub_1009B96FC(isUniquelyReferenced_nonNull_native, v12, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy(&v3[16 * v8 + 32]);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v9 = *((_QWORD *)v3 + 2);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *((_QWORD *)v3 + 2) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_100A0554C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  v3 = sub_1009B9CDC(isUniquelyReferenced_nonNull_native, v13, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = (uint64_t)&v3[v8 + 4];
  sub_100007E8C(&qword_1011D3E20);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v10 = v3[2];
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    v3[2] = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_100A05644(uint64_t a1)
{
  return sub_10080659C(a1, sub_100A6BBC0);
}

void sub_100A05650(uint64_t a1)
{
  size_t *v1;
  uint64_t v2;
  size_t v3;
  int64_t v4;
  int64_t v5;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1009B96D4(isUniquelyReferenced_nonNull_native, v14, 1, (char *)v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for URLQueryItem(0);
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = *(_QWORD *)(v3 + 16);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *(_QWORD *)(v3 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_100A05750(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t *v28;
  _BYTE v29[32];
  uint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = *((_QWORD *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1009B96FC(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = *((_QWORD *)v3 + 3) >> 1;
  }
  v10 = *((_QWORD *)v3 + 2);
  v11 = v8 - v10;
  v12 = sub_100A6B644(&v30, &v3[16 * v10 + 32], v8 - v10, a1);
  if (v12 < v2)
    goto LABEL_15;
  if (v12)
  {
    v13 = *((_QWORD *)v3 + 2);
    v14 = __OFADD__(v13, v12);
    v15 = v13 + v12;
    if (v14)
    {
      __break(1u);
      goto LABEL_32;
    }
    *((_QWORD *)v3 + 2) = v15;
  }
  if (v12 != v11)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
LABEL_16:
  if (!v31)
    goto LABEL_13;
  v16 = v31 - 1;
  if (__OFSUB__(v31, 1))
    goto LABEL_34;
  v17 = *((_QWORD *)v3 + 2);
  v18 = v30;
  v19 = sub_100A03E78((uint64_t (*)(uint64_t))v29, v31 - 1, v30);
  v22 = *v20;
  v21 = v20[1];
  swift_bridgeObjectRetain();
  ((void (*)(_BYTE *, _QWORD))v19)(v29, 0);
LABEL_20:
  while (1)
  {
    v23 = *((_QWORD *)v3 + 3);
    v24 = v23 >> 1;
    v5 = v17 + 1;
    if ((uint64_t)(v23 >> 1) < v17 + 1)
      break;
    if (v17 < v24)
      goto LABEL_22;
LABEL_19:
    *((_QWORD *)v3 + 2) = v17;
  }
  v3 = sub_1009B96FC((char *)(v23 > 1), v17 + 1, 1, v3);
  v24 = *((_QWORD *)v3 + 3) >> 1;
  if (v17 >= v24)
    goto LABEL_19;
LABEL_22:
  v25 = &v3[16 * v17];
  *((_QWORD *)v25 + 4) = v22;
  *((_QWORD *)v25 + 5) = v21;
  if (!v16)
  {
LABEL_32:
    *((_QWORD *)v3 + 2) = v5;
    goto LABEL_13;
  }
  v26 = v25 + 56;
  while (1)
  {
    v14 = __OFSUB__(v16--, 1);
    if (v14)
      break;
    v27 = sub_100A03E78((uint64_t (*)(uint64_t))v29, v16, v18);
    v22 = *v28;
    v21 = v28[1];
    swift_bridgeObjectRetain();
    ((void (*)(_BYTE *, _QWORD))v27)(v29, 0);
    if (v24 == v5)
    {
      v17 = v24;
      *((_QWORD *)v3 + 2) = v24;
      goto LABEL_20;
    }
    *(v26 - 1) = v22;
    *v26 = v21;
    ++v5;
    v26 += 2;
    if (!v16)
      goto LABEL_32;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_100A0595C(uint64_t a1)
{
  return sub_10080659C(a1, sub_100A6BD68);
}

void sub_100A05968(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v12 = v4 + v2;
  else
    v12 = v4;
  v3 = sub_1009BA48C(isUniquelyReferenced_nonNull_native, v12, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  memcpy(&v3[32 * v8 + 32], (const void *)(a1 + 32), 32 * v2);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v9 = *((_QWORD *)v3 + 2);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *((_QWORD *)v3 + 2) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_100A05A48(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v16 = *v1;
  else
    v16 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease();
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    sub_100A6BF20(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v10 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v17 = v4;
    else
      v17 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  if (v10 < 1)
    goto LABEL_19;
  v11 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v12 = __OFADD__(v11, v10);
  v13 = v11 + v10;
  if (!v12)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v13;
LABEL_19:
    swift_bridgeObjectRelease();
    specialized Array._endMutation()(v14);
    return;
  }
  __break(1u);
}

uint64_t type metadata accessor for ActionLookup.Group(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionLookup.Group);
}

uint64_t _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1010E5AD8, a1, a2, &unk_1011D2550);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x3A)
    return 58;
  else
    return v3;
}

unint64_t sub_100A05C60()
{
  unint64_t result;

  result = qword_1011D52F0;
  if (!qword_1011D52F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_1011D52F0);
  }
  return result;
}

unint64_t sub_100A05CA4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100A05CD0();
  result = sub_100A05D14();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100A05CD0()
{
  unint64_t result;

  result = qword_1011D52F8;
  if (!qword_1011D52F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_1011D52F8);
  }
  return result;
}

unint64_t sub_100A05D14()
{
  unint64_t result;

  result = qword_1011D5300;
  if (!qword_1011D5300)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_1011D5300);
  }
  return result;
}

unint64_t sub_100A05D5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D5308;
  if (!qword_1011D5308)
  {
    v1 = sub_100044B54(qword_1011D5310);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D5308);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC7)
    goto LABEL_17;
  if (a2 + 57 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 57) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 57;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 57;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 57;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3A;
  v8 = v6 - 58;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 57 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 57) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC6)
    return ((uint64_t (*)(void))((char *)&loc_100A05E84 + 4 * byte_100EDD183[v4]))();
  *a1 = a2 + 57;
  return ((uint64_t (*)(void))((char *)sub_100A05EB8 + 4 * byte_100EDD17E[v4]))();
}

uint64_t sub_100A05EB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A05EC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A05EC8);
  return result;
}

uint64_t sub_100A05ED4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A05EDCLL);
  *(_BYTE *)result = a2 + 57;
  return result;
}

uint64_t sub_100A05EE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A05EE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionType()
{
  return &type metadata for ActionType;
}

uint64_t type metadata accessor for ActionLookup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionLookup);
}

uint64_t type metadata accessor for ActionLookupBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionLookupBuilder);
}

_QWORD *sub_100A05F1C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(unsigned __int8 *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  _QWORD *result;
  _QWORD *v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  void *v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  Swift::String v60;
  uint64_t v61;
  void *v62;
  Swift::String v63;
  Swift::String v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _QWORD *v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _OWORD v78[8];
  _OWORD v79[9];
  __int128 v80;
  void *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _OWORD v86[4];
  _QWORD v87[5];
  _BYTE v88[80];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  unsigned __int8 v93[17];

  v93[0] = a1;
  ActionType.isHidden.getter(a1);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1011D24D8 != -1)
      swift_once(&qword_1011D24D8, sub_100B63A4C);
    if ((static DeviceCapabilities.isInternalInstall & 1) == 0)
      goto LABEL_17;
    _StringGuts.grow(_:)(32);
    v11 = ActionType.rawValue.getter(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    *(_QWORD *)v88 = v11;
    *(_QWORD *)&v88[8] = v13;
    v14 = 0xD00000000000001ELL;
    v15 = " - Action identifier is hidden";
    goto LABEL_13;
  }
  v16 = a3[3];
  v17 = a3[4];
  sub_100007E68(a3, v16);
  v18 = *(uint64_t (**)(unsigned __int8 *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v17 + 8);
  v19 = sub_100A05D14();
  v20 = v18(v93, &type metadata for ActionType, v19, v16, v17);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(22);
    v32 = ActionType.rawValue.getter(a1);
    v34 = v33;
    swift_bridgeObjectRelease();
    *(_QWORD *)v88 = v32;
    *(_QWORD *)&v88[8] = v34;
    v14 = 0xD000000000000014;
    v15 = " - No implementation";
LABEL_13:
    v35 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v14);
    v37 = *(_QWORD *)&v88[8];
    v36 = *(_QWORD *)v88;
LABEL_16:
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v36, v37, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
LABEL_17:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a3);
    sub_100A01720(0, 1, 0, 0, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
    sub_100A0B31C(v88);
    return (_QWORD *)sub_100065228((uint64_t)v88, a5, &qword_1011D55F0);
  }
  *(_QWORD *)&v75 = a4;
  v22 = *(_QWORD *)(a2 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    *(_QWORD *)v88 = 0;
    *(_QWORD *)&v88[8] = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v38 = ActionType.rawValue.getter(v93[0]);
    v40 = v39;
    swift_bridgeObjectRelease();
    *(_QWORD *)v88 = v38;
    *(_QWORD *)&v88[8] = v40;
    v41._countAndFlagsBits = 0xD000000000000016;
    v41._object = (void *)0x8000000100E4BAF0;
    String.append(_:)(v41);
    v37 = *(_QWORD *)&v88[8];
    v36 = *(_QWORD *)v88;
    goto LABEL_16;
  }
  v23 = v20;
  v24 = v21;
  v72 = a3;
  v73 = a5;
  *(_QWORD *)&v76 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)&v74 = a2;
  v25 = a2 + 32;
  while (1)
  {
    sub_10004FA40(v25, (uint64_t)&v80);
    v26 = type metadata accessor for Optional(0, v23);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = __chkstk_darwin(v26);
    v30 = (char *)&v68 - v29;
    ((void (*)(__int128 *, uint64_t, uint64_t, __n128))v76)(&v80, v23, v24, v28);
    v31 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, v23) != 1)
      break;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
    memset(v88, 0, 40);
    sub_10004FF60((uint64_t)v88, &qword_1011D5058);
    v25 += 32;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      a3 = v72;
      a5 = v73;
      goto LABEL_15;
    }
  }
  *(_QWORD *)&v88[24] = v23;
  *(_QWORD *)&v88[32] = v24;
  v43 = sub_100049F68(v88);
  (*(void (**)(_QWORD *, char *, uint64_t))(v31 + 32))(v43, v30, v23);
  swift_bridgeObjectRelease();
  sub_100064C48((__int128 *)v88, (uint64_t)v87);
  sub_100064C78((uint64_t)v87, (uint64_t)&v80);
  v44 = v93[0];
  result = sub_100A0662C(&v80, v93[0], v88);
  v45 = v89;
  if ((_QWORD)v89)
  {
    v46 = *((_QWORD *)&v89 + 1);
    v47 = ((uint64_t (*)(_QWORD *))v89)(result);
    if (v48 != 1)
    {
      v57 = v47;
      v58 = v48;
      if ((v49 & 1) != 0)
      {
        sub_10013B670(v47, v48);
        v61 = *(_QWORD *)&v88[8];
        v62 = *(void **)&v88[16];
      }
      else
      {
        *(_QWORD *)&v80 = ActionType.rawValue.getter(v44);
        *((_QWORD *)&v80 + 1) = v59;
        v60._countAndFlagsBits = 10272;
        v60._object = (void *)0xE200000000000000;
        String.append(_:)(v60);
        v61 = *(_QWORD *)&v88[8];
        v62 = *(void **)&v88[16];
        swift_bridgeObjectRetain();
        v63._countAndFlagsBits = v61;
        v63._object = v62;
        String.append(_:)(v63);
        swift_bridgeObjectRelease();
        v64._countAndFlagsBits = 539828265;
        v64._object = (void *)0xE400000000000000;
        String.append(_:)(v64);
        if (v58)
          v65 = v57;
        else
          v65 = 0xD000000000000013;
        if (v58)
          v66 = v58;
        else
          v66 = 0x8000000100E4BB10;
        v67 = v66;
        String.append(_:)(*(Swift::String *)&v65);
        swift_bridgeObjectRelease();
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v80, *((uint64_t *)&v80 + 1), 80, 120, 0xE100000000000000);
        swift_bridgeObjectRelease();
      }
      LOBYTE(v80) = v88[0];
      *((_QWORD *)&v80 + 1) = v61;
      v81 = v62;
      v82 = *(_OWORD *)&v88[24];
      v83 = *(_OWORD *)&v88[40];
      v84 = *(_OWORD *)&v88[56];
      *(_QWORD *)&v85 = *(_QWORD *)&v88[72];
      *((_QWORD *)&v85 + 1) = v45;
      *(_QWORD *)&v86[0] = v46;
      *(_OWORD *)((char *)v86 + 8) = v90;
      *(_OWORD *)((char *)&v86[1] + 8) = v91;
      *(_OWORD *)((char *)&v86[2] + 8) = v92;
      sub_100A0B254(&v80);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
      a3 = v72;
      a5 = v73;
      goto LABEL_17;
    }
    *(_QWORD *)&v80 = ActionType.rawValue.getter(v44);
    *((_QWORD *)&v80 + 1) = v50;
    v51._countAndFlagsBits = 10272;
    v51._object = (void *)0xE200000000000000;
    String.append(_:)(v51);
    v52 = *(_QWORD *)&v88[8];
    v53 = *(void **)&v88[16];
    swift_bridgeObjectRetain();
    v54._countAndFlagsBits = v52;
    v54._object = v53;
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    v55._countAndFlagsBits = 41;
    v55._object = (void *)0xE100000000000000;
    String.append(_:)(v55);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v80, *((uint64_t *)&v80 + 1), 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v87);
    sub_100A01720(0, 1, 0, 0, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
    sub_10004BA30(0, 0);
    v78[1] = *(_OWORD *)&v88[32];
    v78[2] = *(_OWORD *)&v88[48];
    v78[3] = *(_OWORD *)&v88[64];
    v78[4] = v89;
    v78[5] = v90;
    v78[6] = v91;
    v78[7] = v92;
    v77 = *(_OWORD *)v88;
    v78[0] = *(_OWORD *)&v88[16];
    v76 = *(_OWORD *)((char *)v78 + 8);
    v75 = *(_OWORD *)((char *)&v78[1] + 8);
    v74 = *(_OWORD *)((char *)&v78[2] + 8);
    v79[6] = v90;
    v79[7] = v91;
    v71 = *(_OWORD *)((char *)&v78[3] + 8);
    v79[8] = v92;
    v79[2] = *(_OWORD *)&v88[32];
    v79[3] = *(_OWORD *)&v88[48];
    v69 = *(_OWORD *)((char *)&v78[5] + 8);
    v70 = *(_OWORD *)((char *)&v78[4] + 8);
    v79[4] = *(_OWORD *)&v88[64];
    v79[5] = v89;
    v68 = *(_OWORD *)((char *)&v78[6] + 8);
    v56 = *((_QWORD *)&v92 + 1);
    v79[0] = *(_OWORD *)v88;
    v79[1] = *(_OWORD *)&v88[16];
    UIScreen.Dimensions.size.getter(v79);
    sub_100065228((uint64_t)v79, v73, &qword_1011D55F0);
    sub_100A0AB70(&v77);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v72);
    v80 = *(_OWORD *)v88;
    v82 = v76;
    v83 = v75;
    v84 = v74;
    v85 = v71;
    v86[0] = v70;
    v86[1] = v69;
    v86[2] = v68;
    v81 = *(void **)&v88[16];
    *(_QWORD *)&v86[3] = v56;
    return sub_100A0B254(&v80);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_100A0662C@<X0>(_QWORD *a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t DynamicType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  __int128 v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)();
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t (*v59)();
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = a1[3];
  v5 = sub_100007E68(a1, v4);
  DynamicType = swift_getDynamicType(v5, v4, 1);
  v7 = a1[4];
  *(_QWORD *)&v45 = DynamicType;
  *((_QWORD *)&v45 + 1) = v7;
  v8 = sub_100007E8C(&qword_1011D5180);
  v9 = String.init<A>(describing:)(&v45, v8);
  v11 = v10;
  sub_100064C78((uint64_t)a1, (uint64_t)&v45);
  v12 = sub_100007E8C(&qword_1011D5188);
  v13 = sub_100007E8C(&qword_1011D5190);
  if (swift_dynamicCast(&v61, &v45, v12, v13, 6))
  {
    v14 = *((_QWORD *)&v62 + 1);
    v15 = v63;
    sub_100007E68(&v61, *((uint64_t *)&v62 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 8))(&v64, v14, v15);
    v16 = v64;
    v34 = v65;
    v33 = v66;
    v30 = v68;
    v31 = v67;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v61);
  }
  else
  {
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
    sub_10004FF60((uint64_t)&v61, &qword_1011D5198);
    v16 = 0;
    v33 = 0;
    v30 = 0;
    v31 = 0;
    v34 = 1uLL;
  }
  sub_100A01720(0, 1, 0, 0, 0);
  v17 = a1[3];
  v18 = a1[4];
  sub_100007E68(a1, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
  sub_100064C78((uint64_t)a1, (uint64_t)&v45);
  v27 = swift_allocObject(&unk_1010EF108, 56, 7);
  sub_100064C48(&v45, v27 + 16);
  sub_10004BA30(0, 0);
  sub_100064C78((uint64_t)a1, (uint64_t)&v45);
  v29 = swift_allocObject(&unk_1010EF130, 56, 7);
  sub_100064C48(&v45, v29 + 16);
  sub_10004BA30(0, 0);
  sub_100064C78((uint64_t)a1, (uint64_t)&v45);
  v28 = swift_allocObject(&unk_1010EF158, 56, 7);
  sub_100064C48(&v45, v28 + 16);
  sub_10004BA30(0, 0);
  sub_100064C78((uint64_t)a1, (uint64_t)&v45);
  v20 = swift_allocObject(&unk_1010EF180, 56, 7);
  sub_100064C48(&v45, v20 + 16);
  sub_10004BA30(0, 0);
  LOBYTE(v36) = a2;
  *((_QWORD *)&v36 + 1) = v9;
  *(_QWORD *)&v37 = v11;
  *((_QWORD *)&v37 + 1) = v16;
  v38 = v34;
  *(_QWORD *)&v39 = v33;
  *((_QWORD *)&v39 + 1) = v31;
  *(_QWORD *)&v40 = v30;
  *((_QWORD *)&v40 + 1) = v19;
  *(_QWORD *)&v41 = sub_100A0B35C;
  *((_QWORD *)&v41 + 1) = v27;
  *(_QWORD *)&v42 = &unk_1011D51A0;
  *((_QWORD *)&v42 + 1) = v29;
  *(_QWORD *)&v43 = &unk_1011D51A8;
  *((_QWORD *)&v43 + 1) = v28;
  *(_QWORD *)&v44 = sub_100A0B364;
  *((_QWORD *)&v44 + 1) = v20;
  v21 = v37;
  *a3 = v36;
  a3[1] = v21;
  v22 = v44;
  v23 = v42;
  a3[7] = v43;
  a3[8] = v22;
  v24 = v40;
  a3[5] = v41;
  a3[6] = v23;
  v25 = v38;
  a3[3] = v39;
  a3[4] = v24;
  a3[2] = v25;
  sub_100A0AB70(&v36);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  LOBYTE(v45) = a2;
  *((_QWORD *)&v45 + 1) = v9;
  v46 = v11;
  v47 = v16;
  v48 = v34;
  v49 = v33;
  v50 = v31;
  v51 = v30;
  v52 = v19;
  v53 = sub_100A0B35C;
  v54 = v27;
  v55 = &unk_1011D51A0;
  v56 = v29;
  v57 = &unk_1011D51A8;
  v58 = v28;
  v59 = sub_100A0B364;
  v60 = v20;
  return sub_100A0B254(&v45);
}

uint64_t sub_100A069BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1[3] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v4;
  v1[6] = v5;
  return swift_task_switch(sub_100A06A28, v4, v5);
}

void sub_100A06A28()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  void (*v7)(void);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  BOOL v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __n128 v35;
  void (*v36)(void);
  uint64_t v37[2];

  v1 = *(uint64_t (**)(void))(v0[3] + 80);
  if (v1)
  {
    v2 = v1();
    v4 = v3;
    sub_10013B670(v2, v3);
    if (v4 != 1)
    {
      v8 = swift_release();
      v9 = ((uint64_t (*)(__n128))v1)(v8);
      if (v10 == 1)
      {
        v11 = sub_100007E8C(&qword_1011D5618);
        v12 = sub_100049F28(&qword_1011D5620, &qword_1011D5618, (uint64_t)&protocol conformance descriptor for AnyAction<A>.Error);
        v13 = swift_allocError(v11, v12, 0, 0);
        *v15 = 0;
        v15[1] = 0;
      }
      else
      {
        v16 = v9;
        v17 = v10;
        v18 = sub_100007E8C(&qword_1011D5618);
        v19 = sub_100049F28(&qword_1011D5620, &qword_1011D5618, (uint64_t)&protocol conformance descriptor for AnyAction<A>.Error);
        v13 = swift_allocError(v18, v19, 0, 0);
        *v20 = v16;
        v20[1] = v17;
      }
      swift_willThrow(v14);
      if (qword_1011D1B60 != -1)
        swift_once(&qword_1011D1B60, sub_100A01630);
      v21 = (_QWORD *)v0[3];
      v22 = type metadata accessor for Logger(0);
      sub_100048B14(v22, (uint64_t)static Logger.actions);
      sub_100A0AB70(v21);
      swift_errorRetain(v13);
      sub_100A0AB70(v21);
      v23 = swift_errorRetain(v13);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter(v24);
      v26 = os_log_type_enabled(v24, v25);
      v27 = (unsigned __int8 *)v0[3];
      if (v26)
      {
        v28 = swift_slowAlloc(22, -1);
        v29 = swift_slowAlloc(64, -1);
        v37[0] = v29;
        *(_DWORD *)v28 = 136446466;
        v30 = (char *)ActionType.rawValue.getter(*v27);
        *(_QWORD *)(v28 + 4) = sub_10099627C(v30, v31, v37);
        swift_bridgeObjectRelease();
        sub_100A0B254(v27);
        sub_100A0B254(v27);
        *(_WORD *)(v28 + 12) = 2082;
        v0[2] = v13;
        swift_errorRetain(v13);
        v32 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
        v33 = (char *)String.init<A>(describing:)(v0 + 2, v32);
        *(_QWORD *)(v28 + 14) = sub_10099627C(v33, v34, v37);
        swift_bridgeObjectRelease();
        swift_errorRelease(v13);
        swift_errorRelease(v13);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }
      else
      {
        sub_100A0B254((_QWORD *)v0[3]);
        sub_100A0B254(v27);
        swift_errorRelease(v13);
        swift_errorRelease(v13);
      }

      swift_willThrow(v35);
      v7 = (void (*)(void))v0[1];
      goto LABEL_14;
    }
    v5 = *(int **)(v0[3] + 96);
    if (v5)
    {
      v36 = (void (*)(void))((char *)v5 + *v5);
      v6 = (_QWORD *)swift_task_alloc(v5[1]);
      v0[7] = v6;
      *v6 = v0;
      v6[1] = sub_100A06D68;
      v7 = v36;
LABEL_14:
      v7();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100A06D68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A06E8C;
  else
    v4 = sub_100A06DC8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_100A06DC8()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  void (*v3)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 24) + 112);
  if (v1)
  {
    v3 = (void (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_100A06E2C;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A06E2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A07100;
  else
    v4 = sub_100A070B4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100A06E8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __n128 v16;
  uint64_t v18[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 64);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)static Logger.actions);
  sub_100A0AB70(v2);
  swift_errorRetain(v1);
  sub_100A0AB70(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(unsigned __int8 **)(v0 + 24);
  if (v7)
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v18[0] = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = (char *)ActionType.rawValue.getter(*v8);
    *(_QWORD *)(v9 + 4) = sub_10099627C(v11, v12, v18);
    swift_bridgeObjectRelease();
    sub_100A0B254(v8);
    sub_100A0B254(v8);
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v13 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v14 = (char *)String.init<A>(describing:)(v0 + 16, v13);
    *(_QWORD *)(v9 + 14) = sub_10099627C(v14, v15, v18);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_100A0B254(*(_QWORD **)(v0 + 24));
    sub_100A0B254(v8);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  swift_willThrow(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A070B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 24);
  result = swift_release(*(_QWORD *)(v0 + 32));
  v3 = *(void (**)(uint64_t))(v1 + 128);
  if (v3)
  {
    v3(result);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A07100()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __n128 v16;
  uint64_t v18[2];

  swift_release();
  v1 = *(_QWORD *)(v0 + 80);
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)static Logger.actions);
  sub_100A0AB70(v2);
  swift_errorRetain(v1);
  sub_100A0AB70(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(unsigned __int8 **)(v0 + 24);
  if (v7)
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v18[0] = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = (char *)ActionType.rawValue.getter(*v8);
    *(_QWORD *)(v9 + 4) = sub_10099627C(v11, v12, v18);
    swift_bridgeObjectRelease();
    sub_100A0B254(v8);
    sub_100A0B254(v8);
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v13 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v14 = (char *)String.init<A>(describing:)(v0 + 16, v13);
    *(_QWORD *)(v9 + 14) = sub_10099627C(v14, v15, v18);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_100A0B254(*(_QWORD **)(v0 + 24));
    sub_100A0B254(v8);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  swift_willThrow(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t property wrapper backing initializer of Actionable.contexts(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[2];

  v3[0] = a1;
  v1 = sub_100007E8C(&qword_1011D5498);
  State.init(wrappedValue:)(v3, v1);
  return v3[1];
}

uint64_t sub_100A07364()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011D5650);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_100A073A8()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011D5658);
  Binding.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t Actionable.init(lookup:excluding:resolver:preview:propertyLoader:hasLoadedModelProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];

  v33 = a6;
  v34 = a7;
  v32 = a5;
  v31 = a10;
  v30 = a9;
  v17 = *(_QWORD *)(a11 - 8);
  __chkstk_darwin(a1);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[0] = _swiftEmptyArrayStorage;
  v20 = sub_100007E8C(&qword_1011D5498);
  State.init(wrappedValue:)(v35, v20);
  v21 = v35[2];
  *(_QWORD *)a8 = v35[1];
  *((_QWORD *)a8 + 1) = v21;
  *((_QWORD *)a8 + 2) = a1;
  *((_QWORD *)a8 + 3) = a2;
  v22 = sub_100064C78((uint64_t)a3, (uint64_t)(a8 + 32));
  a4(v22);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a3);
  v24 = (int *)type metadata accessor for Actionable(0, a11, a12, v23);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(&a8[v24[12]], v19, a11);
  v26 = &a8[v24[13]];
  v27 = v33;
  *(_QWORD *)v26 = v32;
  *((_QWORD *)v26 + 1) = v27;
  v28 = &a8[v24[14]];
  v29 = v30;
  *(_QWORD *)v28 = v34;
  *((_QWORD *)v28 + 1) = v29;
  v28[16] = v31;
  return result;
}

uint64_t type metadata accessor for Actionable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Actionable);
}

uint64_t Actionable.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25[16];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[16];
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v23 = a1;
  v24 = a3;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Actionable<A>, a2);
  v6 = type metadata accessor for _ViewModifier_Content(255, a2, WitnessTable);
  v7 = sub_100044B54(&qword_1011D54A0);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  v33 = sub_100044B54(&qword_1011D54A8);
  v34 = &type metadata for Bool;
  v35 = sub_100A07768();
  v36 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v33, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v11 = *(_QWORD *)(a2 + 24);
  v33 = v6;
  v34 = (void *)v7;
  v35 = v8;
  v36 = (void *)v9;
  v37 = OpaqueTypeConformance2;
  v38 = v11;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v33, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>, 0);
  v22 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v21 - v16;
  v30 = v8;
  v31 = v11;
  v32 = v3;
  v26 = v8;
  v27 = v11;
  v28 = v3;
  v18 = swift_checkMetadataState(0, v6);
  View.contextMenu<A, B>(menuItems:preview:)(sub_100A07868, v29, sub_100A07D60, v25, v18, v7, v8, v9, OpaqueTypeConformance2, v11);
  v33 = v18;
  v34 = (void *)v7;
  v35 = v8;
  v36 = (void *)v9;
  v37 = OpaqueTypeConformance2;
  v38 = v11;
  swift_getOpaqueTypeConformance2(&v33, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>, 1);
  sub_10081EB14((uint64_t)v14, OpaqueTypeMetadata2, (uint64_t)v17);
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v14, OpaqueTypeMetadata2);
  sub_1000EA744((uint64_t)v17, OpaqueTypeMetadata2, v24);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, OpaqueTypeMetadata2);
}

unint64_t sub_100A07768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D54B0;
  if (!qword_1011D54B0)
  {
    v1 = sub_100044B54(&qword_1011D54A8);
    sub_100A077EC();
    sub_100048748(&qword_1011D54D8, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D54B0);
  }
  return result;
}

unint64_t sub_100A077EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D54B8;
  if (!qword_1011D54B8)
  {
    v1 = sub_100044B54(&qword_1011D54C0);
    sub_100049F28(&qword_1011D54C8, &qword_1011D54D0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D54B8);
  }
  return result;
}

uint64_t sub_100A07868@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = type metadata accessor for Actionable(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  return sub_100A0789C(v4, a2);
}

uint64_t sub_100A0789C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;

  v49 = a2;
  v48 = type metadata accessor for TaskPriority(0);
  v45 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v7);
  v8 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011D54C0);
  v44 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v55 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100007E8C(&qword_1011D54A8);
  __chkstk_darwin(v56);
  v42 = v2;
  v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_100EDD358);
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v54(v8, v2, a1);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 32) & ~v11;
  v51 = v12 + v6;
  v13 = v11 | 7;
  v40 = v11 | 7;
  v14 = swift_allocObject(&unk_1010EF1D0, v12 + v6, v11 | 7);
  v15 = *(_QWORD *)(a1 + 24);
  v52 = *(_QWORD *)(a1 + 16);
  v53 = v15;
  *(_QWORD *)(v14 + 16) = v52;
  *(_QWORD *)(v14 + 24) = v15;
  v39 = v12;
  v50 = *(double (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v50(v14 + v12, v8, a1);
  swift_bridgeObjectRetain();
  v16 = sub_100007E8C(&qword_1011D52E8);
  v17 = sub_100007E8C(&qword_1011D54D0);
  v18 = sub_100049F28(&qword_1011D54F0, &qword_1011D52E8, (uint64_t)&protocol conformance descriptor for [A]);
  v19 = sub_1000E4570(&qword_1011D54F8, qword_1011D5310, (void (*)(void))sub_100A05D14, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v20 = sub_100049F28(&qword_1011D54C8, &qword_1011D54D0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  ForEach<>.init(_:id:content:)(&v58, KeyPath, sub_100A0B540, v14, v16, v17, v18, v19, v20);
  v21 = v42;
  v54(v8, v42, a1);
  v22 = swift_allocObject(&unk_1010EF1F8, v51, v13);
  v23 = v53;
  *(_QWORD *)(v22 + 16) = v52;
  *(_QWORD *)(v22 + 24) = v23;
  v24.n128_f64[0] = v50(v22 + v12, v8, a1);
  v25 = v46;
  static TaskPriority.userInitiated.getter(v24);
  v26 = (uint64_t)v43;
  v27 = &v43[*(int *)(v56 + 36)];
  v28 = type metadata accessor for _TaskModifier(0);
  v29 = v45;
  v30 = v48;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v27[*(int *)(v28 + 20)], v25, v48);
  *(_QWORD *)v27 = &unk_1011D5640;
  *((_QWORD *)v27 + 1) = v22;
  v31 = v44;
  v32 = v55;
  v33 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v26, v55, v47);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v30);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  v57 = sub_100A073A8() & 1;
  v54(v8, v21, a1);
  v34 = swift_allocObject(&unk_1010EF220, v51, v40);
  v35 = v53;
  *(_QWORD *)(v34 + 16) = v52;
  *(_QWORD *)(v34 + 24) = v35;
  v50(v34 + v39, v8, a1);
  v36 = sub_100A07768();
  View.onChange<A>(of:initial:_:)(&v57, 0, sub_100A0B630, v34, v56, &type metadata for Bool, v36, &protocol witness table for Bool);
  swift_release();
  return sub_10004FF60(v26, &qword_1011D54A8);
}

uint64_t sub_100A07CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Actionable(0, v9, v10, v11);
  sub_10081EB14(a1 + *(int *)(v12 + 48), a2, (uint64_t)v8);
  sub_1000EA744((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_100A07D60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100A07CB4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

double sub_100A07D6C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  double result;
  _QWORD v51[2];
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  v59 = a5;
  v9 = type metadata accessor for Divider(0);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  __chkstk_darwin(v9);
  v56 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v52 = (char *)v51 - v12;
  v14 = type metadata accessor for Actionable(0, a3, a4, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v18 = (char *)v51 - v17;
  v19 = sub_100007E8C(&qword_1011D5660);
  v54 = *(_QWORD *)(v19 - 8);
  v55 = v19;
  __chkstk_darwin(v19);
  v53 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v60 = (char *)v51 - v22;
  v23 = *a1;
  v24 = swift_allocObject(&unk_1010EF068, 24, 7);
  *(_QWORD *)(v24 + 16) = _swiftEmptyArrayStorage;
  v61 = v23;
  v51[0] = swift_getKeyPath(&unk_100EDD440);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, v14);
  v25 = *(unsigned __int8 *)(v15 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = (v16 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject(&unk_1010EF298, v27 + 8, v25 | 7);
  *(_QWORD *)(v28 + 16) = a3;
  *(_QWORD *)(v28 + 24) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v28 + v26, v18, v14);
  v51[1] = v24;
  *(_QWORD *)(v28 + v27) = v24;
  swift_bridgeObjectRetain();
  swift_retain();
  v29 = sub_100007E8C(qword_1011D5310);
  v30 = sub_100007E8C(&qword_1011D5668);
  v31 = sub_100049F28(&qword_1011D55A8, qword_1011D5310, (uint64_t)&protocol conformance descriptor for [A]);
  v32 = sub_100A05D14();
  v33 = sub_1000E4570(&qword_1011D5670, &qword_1011D5668, (void (*)(void))sub_100A0AADC, (uint64_t)&protocol conformance descriptor for <A> A?);
  v34 = v60;
  v35 = ForEach<>.init(_:id:content:)(&v61, v51[0], sub_100A0B8BC, v28, v29, v30, v31, v32, v33);
  v36 = v52;
  Divider.init()(v35);
  v37 = v53;
  v38 = v54;
  v39 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v40 = v34;
  v41 = v55;
  v39(v53, v40, v55);
  v42 = v56;
  v43 = v57;
  v44 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v45 = v58;
  v44(v56, v36, v58);
  v46 = v59;
  v39(v59, v37, v41);
  v47 = sub_100007E8C(&qword_1011D5678);
  v44(&v46[*(int *)(v47 + 48)], v42, v45);
  v48 = *(void (**)(char *, uint64_t))(v43 + 8);
  v48(v36, v45);
  v49 = *(void (**)(char *, uint64_t))(v38 + 8);
  v49(v60, v41);
  v48(v42, v45);
  v49(v37, v41);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100A080C8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[18];
  _BYTE v17[144];
  _BYTE v18[144];
  _OWORD v19[9];
  _OWORD v20[9];

  v7 = *a1;
  v8 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_100A23F18(v7, v8);
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    goto LABEL_3;
  v11 = a3 + 16;
  v12 = sub_100A07364();
  sub_100064C78(a2 + 32, (uint64_t)v20);
  swift_beginAccess(v11, v16, 33, 0);
  sub_100A05F1C(v7, v12, v20, v11, (uint64_t)v17);
  swift_endAccess(v16);
  sub_100065228((uint64_t)v17, (uint64_t)v18, &qword_1011D55F0);
  sub_100065228((uint64_t)v18, (uint64_t)v19, &qword_1011D55F0);
  if (sub_100A0AB58((uint64_t)v19) == 1)
  {
LABEL_3:
    v13 = sub_100007E8C(&qword_1011D55D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a4, 1, 1, v13);
  }
  else
  {
    v20[6] = v19[6];
    v20[7] = v19[7];
    v20[8] = v19[8];
    v20[2] = v19[2];
    v20[3] = v19[3];
    v20[4] = v19[4];
    v20[5] = v19[5];
    v20[0] = v19[0];
    v20[1] = v19[1];
    sub_100065228((uint64_t)v18, (uint64_t)v16, &qword_1011D55F0);
    sub_100A0AB70(v16);
    sub_100A08268(a4);
    sub_100A0ACDC((uint64_t)v18);
    sub_100A0ACDC((uint64_t)v18);
    v15 = sub_100007E8C(&qword_1011D55D0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 0, 1, v15);
  }
}

void sub_100A08268(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  uint64_t v37;
  _QWORD v38[2];
  _QWORD *v39;
  uint64_t v40;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D3B30);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011D54E0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v38 - v13;
  v15 = v1[4];
  if (v15 < 2)
    goto LABEL_8;
  v16 = (void *)v1[7];
  if (!v16)
    goto LABEL_8;
  v40 = a1;
  v17 = (uint64_t (*)(uint64_t))v1[10];
  if (!v17)
  {
    __break(1u);
    return;
  }
  v18 = (_QWORD *)v1[8];
  v38[1] = v1[3];
  v39 = v18;
  v19 = v16;
  v20 = swift_bridgeObjectRetain();
  v21 = v17(v20);
  v23 = v22;
  sub_10013B670(v21, v22);
  if (v23 != 1)
  {
    swift_bridgeObjectRelease();

    a1 = v40;
LABEL_8:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(a1, 1, 1, v7, v12);
    return;
  }
  v24 = (_OWORD *)swift_allocObject(&unk_1010EF0B8, 160, 7);
  v25 = *((_OWORD *)v2 + 7);
  v24[7] = *((_OWORD *)v2 + 6);
  v24[8] = v25;
  v24[9] = *((_OWORD *)v2 + 8);
  v26 = *((_OWORD *)v2 + 3);
  v24[3] = *((_OWORD *)v2 + 2);
  v24[4] = v26;
  v27 = *((_OWORD *)v2 + 5);
  v24[5] = *((_OWORD *)v2 + 4);
  v24[6] = v27;
  v28 = *((_OWORD *)v2 + 1);
  v24[1] = *(_OWORD *)v2;
  v24[2] = v28;
  if ((v39 & 2) != 0)
  {
    sub_100A0AB70(v2);
    static ButtonRole.destructive.getter(v6);
    v31 = type metadata accessor for ButtonRole(0);
    v30 = (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 0, 1, v31);
  }
  else
  {
    v29 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
    v30 = sub_100A0AB70(v2);
  }
  v39 = v38;
  __chkstk_darwin(v30);
  v38[-4] = v32;
  v38[-3] = v15;
  v38[-2] = v19;
  v33 = sub_100007E8C(&qword_1011D3A88);
  v34 = sub_100049F28(&qword_1011D3A80, &qword_1011D3A88, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(role:action:label:)(v6, sub_100A0AFF4, v24, sub_100A09CF4, &v38[-6], v33, v34);

  v35 = swift_bridgeObjectRelease();
  v36 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 32);
  v36(v14, v10, v7, v35);
  v37 = v40;
  ((void (*)(uint64_t, char *, uint64_t))v36)(v40, v14, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
}

uint64_t AnyAction.button.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t *v17;
  unint64_t v18;
  void *v19;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;

  v5 = sub_100007E8C(&qword_1011D3B30);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100007E8C(&qword_1011D54E0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  __chkstk_darwin(v10);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v16 = __chkstk_darwin(v13);
  v17 = (uint64_t *)(v2 + *(int *)(a1 + 40));
  v18 = v17[1];
  v19 = (void *)v17[4];
  if (v18 < 2 || v19 == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(a2, 1, 1, v8, v16);
  v43 = v14;
  v44 = v15;
  v46 = a2;
  v22 = *v17;
  v41 = v17[5];
  v42 = v22;
  v45 = v19;
  swift_bridgeObjectRetain();
  v23 = AnyAction.canPerform.getter(a1);
  v25 = v24;
  sub_10013B670(v23, v24);
  if (v25 != 1)
  {
    swift_bridgeObjectRelease();

    a2 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56))(a2, 1, 1, v8, v16);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v26 = *(unsigned __int8 *)(v11 + 80);
  v27 = (v26 + 32) & ~v26;
  v28 = swift_allocObject(&unk_1010EEFC0, v27 + v12, v26 | 7);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v29 = v45;
  v30 = v42;
  if ((v41 & 2) != 0)
  {
    static ButtonRole.destructive.getter(v7);
    v33 = type metadata accessor for ButtonRole(0);
    v32 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v7, 0, 1, v33);
  }
  else
  {
    v31 = type metadata accessor for ButtonRole(0);
    v32 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v7, 1, 1, v31);
  }
  __chkstk_darwin(v32);
  *(&v41 - 4) = v30;
  *(&v41 - 3) = v18;
  *(&v41 - 2) = (uint64_t)v29;
  v34 = sub_100007E8C(&qword_1011D3A88);
  v35 = sub_100049F28(&qword_1011D3A80, &qword_1011D3A88, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v36 = v44;
  Button.init(role:action:label:)(v7, sub_100A0959C, v28, sub_100A09CF4, &v41 - 6, v34, v35);

  v37 = swift_bridgeObjectRelease();
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 32);
  v39 = v43;
  v38(v43, v36, v8, v37);
  v40 = v46;
  ((void (*)(uint64_t, uint64_t, uint64_t))v38)(v46, v39, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v40, 0, 1, v8);
}

uint64_t sub_100A08890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[3] = a2;
  v4[4] = a3;
  v4[2] = a1;
  v5 = type metadata accessor for Actionable(0, a2, a3, a4);
  v4[5] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[6] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[7] = v7;
  v4[8] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[9] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100A0892C, v10, v11);
}

uint64_t sub_100A0892C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t (*)(), uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v11 = *(_OWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 72));
  v6 = *(void (**)(uint64_t (*)(), uint64_t))(v5 + *(int *)(v4 + 52));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(&unk_1010EF270, v8 + v2, v7 | 7);
  *(_OWORD *)(v9 + 16) = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v4);
  v6(sub_100A0B69C, v9);
  swift_release(v9);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100A08A10(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t (*)(), uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for Actionable(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v20 - v13;
  if ((*a2 & 1) == 0)
  {
    v15 = *(void (**)(uint64_t (*)(), uint64_t))(a3 + *(int *)(v9 + 52));
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v14, a3, v9, v12);
    v16 = *(unsigned __int8 *)(v10 + 80);
    v17 = (v16 + 32) & ~v16;
    v18 = swift_allocObject(&unk_1010EF248, v17 + v11, v16 | 7);
    *(_QWORD *)(v18 + 16) = a4;
    *(_QWORD *)(v18 + 24) = a5;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, v14, v9);
    v15(sub_100A0B69C, v18);
    v12.n128_u64[0] = swift_release().n128_u64[0];
  }
  return v12.n128_f64[0];
}

uint64_t sub_100A08B18(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v4 = sub_100007E8C(&qword_1011D5648);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  sub_10004FA40(a1, v5 + 32);
  v6 = a2[1];
  v9[1] = *a2;
  v9[2] = v6;
  v9[0] = v5;
  v7 = sub_100007E8C(&qword_1011D5650);
  return State.wrappedValue.setter(v9, v7);
}

uint64_t static Actionable.menuBuilder(lookup:excluding:contexts:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  uint64_t v16;

  v16 = a1;
  KeyPath = swift_getKeyPath(&unk_100EDD358);
  sub_100064C78(a4, (uint64_t)v15);
  v8 = swift_allocObject(&unk_1010EEFE8, 72, 7);
  *(_QWORD *)(v8 + 16) = a3;
  sub_100064C48(v15, v8 + 24);
  *(_QWORD *)(v8 + 64) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_100007E8C(&qword_1011D52E8);
  v10 = sub_100007E8C(&qword_1011D54E8);
  v11 = sub_100049F28(&qword_1011D54F0, &qword_1011D52E8, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_1000E4570(&qword_1011D54F8, qword_1011D5310, (void (*)(void))sub_100A05D14, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v13 = sub_100049F28(qword_1011D5500, &qword_1011D54E8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return ForEach<>.init(_:id:content:)(&v16, KeyPath, sub_100A09D2C, v8, v9, v10, v11, v12, v13);
}

double sub_100A08D08@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  double result;
  _QWORD v44[2];
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51[2];
  uint64_t v52;

  v50 = a5;
  v9 = type metadata accessor for Divider(0);
  v10 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  v49 = v10;
  __chkstk_darwin(v9);
  v47 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v44 - v13;
  v46 = sub_100007E8C(&qword_1011D5598);
  v15 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v44 - v18;
  v20 = *a1;
  v21 = swift_allocObject(&unk_1010EF068, 24, 7);
  *(_QWORD *)(v21 + 16) = _swiftEmptyArrayStorage;
  v44[1] = v21;
  v52 = v20;
  KeyPath = swift_getKeyPath(&unk_100EDD440);
  sub_100064C78(a3, (uint64_t)v51);
  v23 = (_QWORD *)swift_allocObject(&unk_1010EF090, 80, 7);
  v23[2] = a2;
  sub_100064C48(v51, (uint64_t)(v23 + 3));
  v23[8] = v21;
  v23[9] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v24 = sub_100007E8C(qword_1011D5310);
  v25 = sub_100007E8C(&qword_1011D55A0);
  v26 = sub_100049F28(&qword_1011D55A8, qword_1011D5310, (uint64_t)&protocol conformance descriptor for [A]);
  v27 = sub_100A05D14();
  v28 = sub_1000E4570(&qword_1011D55B0, &qword_1011D55A0, (void (*)(void))sub_100A0AA58, (uint64_t)&protocol conformance descriptor for <A> A?);
  v44[0] = v19;
  v29 = ForEach<>.init(_:id:content:)(&v52, KeyPath, sub_100A0AA48, v23, v24, v25, v26, v27, v28);
  v30 = v14;
  Divider.init()(v29);
  v31 = v15;
  v32 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v33 = v45;
  v34 = v46;
  v32(v45, v19, v46);
  v35 = v48;
  v36 = v49;
  v37 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v38 = v47;
  v37(v47, v30, v48);
  v39 = v50;
  v32(v50, v33, v34);
  v40 = sub_100007E8C(&qword_1011D55E8);
  v37(&v39[*(int *)(v40 + 48)], v38, v35);
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v30, v35);
  v42 = *(void (**)(char *, uint64_t))(v31 + 8);
  v42((char *)v44[0], v34);
  v41(v38, v35);
  v42(v33, v34);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100A0900C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  Swift::String v19;
  void *v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[18];
  _OWORD v33[9];
  _OWORD v34[9];
  _QWORD v35[19];

  v29 = a6;
  v28 = sub_100007E8C(&qword_1011D55D0);
  __chkstk_darwin(v28);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D55C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  LOBYTE(a1) = *a1;
  sub_100064C78(a3, (uint64_t)v35);
  swift_beginAccess(a4, v33, 33, 0);
  swift_bridgeObjectRetain();
  sub_100A05F1C(a1, a2, v35, a4, (uint64_t)v34);
  swift_endAccess(v33);
  sub_100065228((uint64_t)v34, (uint64_t)v35, &qword_1011D55F0);
  sub_100A23F18(a1, a5);
  if ((v17 & 1) != 0)
  {
    sub_100A0ACDC((uint64_t)v35);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v29, 1, 1, v13);
  }
  sub_100065228((uint64_t)v35, (uint64_t)v33, &qword_1011D55F0);
  if (sub_100A0AB58((uint64_t)v33) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v29, 1, 1, v13);
  v34[6] = v33[6];
  v34[7] = v33[7];
  v34[8] = v33[8];
  v34[2] = v33[2];
  v34[3] = v33[3];
  v34[4] = v33[4];
  v34[5] = v33[5];
  v34[0] = v33[0];
  v34[1] = v33[1];
  sub_100065228((uint64_t)v35, (uint64_t)v32, &qword_1011D55F0);
  sub_100A0AB70(v32);
  sub_100A08268((uint64_t)v12);
  v30 = 0x2E736E6F69746341;
  v31 = 0xE800000000000000;
  v19._countAndFlagsBits = ActionType.rawValue.getter(v33[0]);
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v21 = v30;
  v20 = (void *)v31;
  if (qword_1011D1F50 != -1)
    swift_once(&qword_1011D1F50, sub_100B51BB0);
  v30 = qword_1011DBBC8;
  v31 = unk_1011DBBD0;
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = 46;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  swift_bridgeObjectRetain();
  v23._countAndFlagsBits = v21;
  v23._object = v20;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v30;
  v25 = v31;
  v26 = sub_100A0AADC();
  View.accessibilityIdentifier(_:)(v24, v25, v28, v26);
  swift_bridgeObjectRelease();
  sub_100A0ACDC((uint64_t)v35);
  sub_100A0ACDC((uint64_t)v35);
  sub_10004FF60((uint64_t)v12, &qword_1011D55D0);
  v27 = v29;
  sub_100065228((uint64_t)v16, v29, &qword_1011D55C0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
}

double sub_100A09318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for AnyAction(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1010EF1A8, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  sub_100A3F884((uint64_t)v14, (uint64_t)&unk_1011D5630, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100A0947C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v8, v5);
  swift_bridgeObjectRelease();
  v11 = v4 + v8 + v6[10];
  if (*(_QWORD *)(v11 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v10 + v6[12]))
    swift_release();
  if (*(_QWORD *)(v10 + v6[13]))
    swift_release();
  if (*(_QWORD *)(v10 + v6[14]))
    swift_release();
  if (*(_QWORD *)(v10 + v6[15]))
    swift_release();
  return swift_deallocObject(v4, v8 + v9);
}

double sub_100A0959C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v5, v6, a4) - 8) + 80);
  return sub_100A09318(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_100A095EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  __n128 v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[3] = a4;
  v4[4] = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v5);
  v8 = (uint64_t (*)(void))((char *)&dword_1011D5610 + dword_1011D5610);
  v6 = (_QWORD *)swift_task_alloc(unk_1011D5614);
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_100A0966C;
  return v8();
}

uint64_t sub_100A0966C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100A096F4;
  else
    v6 = sub_1001B4208;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A096F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;

  swift_release();
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 24);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)static Logger.actions);
  sub_100A0AB70(v2);
  swift_errorRetain(v1);
  sub_100A0AB70(v2);
  v4 = swift_errorRetain(v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(unsigned __int8 **)(v0 + 24);
  if (v7)
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(*v9);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v12, v13, &v18);
    swift_bridgeObjectRelease();
    sub_100A0B254(v9);
    sub_100A0B254(v9);
    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v8;
    swift_errorRetain(v8);
    v14 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v15 = (char *)String.init<A>(describing:)(v0 + 16, v14);
    *(_QWORD *)(v10 + 14) = sub_10099627C(v15, v16, &v18);
    swift_bridgeObjectRelease();
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Action %{public}s failed: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    sub_100A0B254(v9);
    sub_100A0B254(v9);
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A09928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for AnyAction(0, a5, a6, a4);
  v6[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[7] = v8;
  v6[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[9] = type metadata accessor for MainActor(0);
  v6[10] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D506C);
  v6[11] = v10;
  *v10 = v6;
  v10[1] = sub_100A099D8;
  return AnyAction.execute()(v7);
}

uint64_t sub_100A099D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100A09A98;
  else
    v6 = sub_100A09A60;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A09A60()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A09A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;

  swift_release();
  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v7 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 48);
  if (v10)
  {
    v16 = *(_QWORD *)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 40);
    v17 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v26 = v25;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)sub_1009AD19C(v13, v16, *(_QWORD *)(v15 + 8));
    *(_QWORD *)(v17 + 4) = sub_10099627C(v18, v19, &v26);
    v20 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v13, v14, v20);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v11;
    swift_errorRetain(v11);
    v21 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v22 = (char *)String.init<A>(describing:)(v0 + 16, v21);
    *(_QWORD *)(v17 + 14) = sub_10099627C(v22, v23, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Action %{public}s failed: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v11);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    swift_errorRelease(v11);
    swift_errorRelease(v11);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A09CF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 72);
}

double sub_100A09D2C@<D0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_100A08D08(a1, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 64), a2);
}

uint64_t sub_100A09D3C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of Actionable.body(content:)>>, 1);
}

uint64_t sub_100A09D70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100EDD3E0;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = &unk_100EDD3F8;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = (char *)&value witness table for () + 64;
    v4[6] = &unk_100EDD410;
    swift_initStructMetadata(a1, 0, 7, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100A09E18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  v8 = *a2;
  *a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((v6 + ((v5 + 72) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v11 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    v11 = a1;
    v31 = a2[1];
    a1[1] = v31;
    v12 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = *v13;
    *v12 = *v13;
    v15 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
    v16 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    v17 = *v16;
    *v15 = *v16;
    v18 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v18 + 24) = v20;
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    v30 = **(void (***)(unint64_t, unint64_t, uint64_t))(v20 - 8);
    v32 = v3;
    swift_bridgeObjectRetain(v8);
    swift_retain(v31);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
    v30(v18, v19, v20);
    v21 = (v18 + v5 + 40) & ~v5;
    v22 = (v19 + v5 + 40) & ~v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v21, v22, v32);
    v23 = (_QWORD *)((v6 + v21) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((v6 + v22) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    v28 = *(_QWORD *)v27;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v8 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)(v26 + 8) = v8;
    *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
    swift_retain(v25);
    swift_retain(v28);
  }
  swift_retain(v8);
  return v11;
}

double sub_100A09FE0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  double result;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)((((((a1 + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v4
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t *sub_100A0A090(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = *v8;
  *v7 = *v8;
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v11 = (uint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  v12 = *v11;
  *v10 = *v11;
  v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 24) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v16 = **(void (***)(unint64_t, unint64_t, uint64_t))(v15 - 8);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v12);
  v16(v13, v14, v15);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 40 + v13) & ~v18;
  v20 = (v18 + 40 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v19, v20);
  v21 = *(_QWORD *)(v17 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 8) = v28;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  swift_retain(v24);
  swift_retain(v27);
  swift_retain(v28);
  return a1;
}

_QWORD *sub_100A0A1DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  *v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_100625DD8(v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v10 + v13 + 40) & ~v13;
  v15 = ((unint64_t)v11 + v13 + 40) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  swift_retain();
  swift_release();
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  return a1;
}

_OWORD *sub_100A0A348(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  char v21;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = ((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_OWORD *)v9;
  v11 = *(_OWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_OWORD *)v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 40 + v8) & ~v13;
  v15 = (v13 + 40 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = v21;
  return a1;
}

_QWORD *sub_100A0A420(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)v7;
  v7 += 15;
  *v6 = v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (v7 & 0xFFFFFFFFFFFFF8) + 15;
  *v9 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)v11);
  v13 = *(_OWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  v14 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_OWORD *)v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 40 + v11) & ~v16;
  v18 = (v16 + 40 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_OWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = v19 + v18;
  v22 = (v21 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v20 = *(_OWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v22;
  swift_release();
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v22 + 8);
  swift_release();
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v22 + 16);
  return a1;
}

uint64_t sub_100A0A55C(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 40) & ~v7);
    }
    else
    {
      v14 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
  }
  else
  {
    v8 = ((((*(_QWORD *)(v4 + 64) + ((v7 + 72) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100A0A5FC + 4 * byte_100EDD348[v12]))();
  }
}

void sub_100A0A6A4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64)
         + ((*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X13 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_100A0A7DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100A0A860);
}

void sub_100A0A7E4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100A0A7ECLL);
  JUMPOUT(0x100A0A860);
}

void sub_100A0A7FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100A0A860);
}

void sub_100A0A804()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100A0A860);
}

void sub_100A0A80C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x100A0A85CLL);
      JUMPOUT(0x100A0A854);
    }
    JUMPOUT(0x100A0A818);
  }
  JUMPOUT(0x100A0A860);
}

uint64_t sub_100A0A878(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *a1;
  v4 = a1[1];
  v6 = type metadata accessor for Actionable(255, *a1, v4, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Actionable<A>, v6);
  v8 = type metadata accessor for _ViewModifier_Content(255, v6, WitnessTable);
  v9 = sub_100044B54(&qword_1011D54A0);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v8);
  v13 = sub_100044B54(&qword_1011D54A8);
  v14 = &type metadata for Bool;
  v15 = sub_100A07768();
  v16 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v13 = v8;
  v14 = (void *)v9;
  v15 = v5;
  v16 = (void *)v10;
  v17 = OpaqueTypeConformance2;
  v18 = v4;
  return swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>, 1);
}

unint64_t sub_100A0A96C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D5588;
  if (!qword_1011D5588)
  {
    v1 = sub_100044B54(&qword_1011D5590);
    sub_100049F28(qword_1011D5500, &qword_1011D54E8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D5588);
  }
  return result;
}

uint64_t sub_100A0A9E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A0AA0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 80);
}

uint64_t sub_100A0AA48@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100A0900C(a1, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9], a2);
}

unint64_t sub_100A0AA58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D55B8;
  if (!qword_1011D55B8)
  {
    v1 = sub_100044B54(&qword_1011D55C0);
    sub_100A0AADC();
    sub_100048748((unint64_t *)&qword_1011D55E0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D55B8);
  }
  return result;
}

unint64_t sub_100A0AADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D55C8;
  if (!qword_1011D55C8)
  {
    v1 = sub_100044B54(&qword_1011D55D0);
    sub_100049F28(&qword_1011D55D8, &qword_1011D54E0, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011D55C8);
  }
  return result;
}

uint64_t sub_100A0AB58(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_100A0AB70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = (void *)a1[7];
  v8 = (void *)a1[9];
  v7 = a1[10];
  v9 = a1[11];
  v12 = a1[13];
  v13 = a1[12];
  v14 = a1[15];
  v15 = a1[14];
  v16 = a1[17];
  v17 = a1[16];
  swift_bridgeObjectRetain();
  sub_100A0AC38(v2, v3, v4, v5, v6);
  v10 = v8;
  sub_100048AAC(v7, v9);
  sub_100048AAC(v13, v12);
  sub_100048AAC(v15, v14);
  sub_100048AAC(v17, v16);
  return a1;
}

uint64_t sub_100A0AC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7;
  uint64_t result;

  if (a2 != 1)
  {
    v7 = a5;
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_100A0AC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a1;
  v9[1] = a2;
  v4 = sub_10098A8C0();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7 & 1;
  *(_QWORD *)(a3 + 24) = v8;
  return result;
}

uint64_t sub_100A0ACDC(uint64_t a1)
{
  sub_100A0AD34(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136));
  return a1;
}

uint64_t sub_100A0AD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    sub_100A01720(a4, a5, a6, a7, a8);

    sub_10004BA30(a11, a12);
    sub_10004BA30(a13, a14);
    sub_10004BA30(a15, a16);
    return sub_10004BA30(a17, a18);
  }
  return result;
}

double sub_100A0AE10(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  double result;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v2 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1[7];
  v33 = a1[6];
  v34 = v5;
  v35 = a1[8];
  v6 = a1[3];
  v29 = a1[2];
  v30 = v6;
  v7 = a1[5];
  v31 = a1[4];
  v32 = v7;
  v8 = a1[1];
  v27 = *a1;
  v28 = v8;
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v20 = v29;
  v21 = v30;
  v22 = v31;
  v23 = v32;
  v18 = v27;
  v19 = v28;
  type metadata accessor for MainActor(0);
  sub_100A0AB70(&v27);
  v11 = static MainActor.shared.getter(v10);
  v12 = swift_allocObject(&unk_1010EF0E0, 176, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  v13 = v25;
  *(_OWORD *)(v12 + 128) = v24;
  *(_OWORD *)(v12 + 144) = v13;
  *(_OWORD *)(v12 + 160) = v26;
  v14 = v21;
  *(_OWORD *)(v12 + 64) = v20;
  *(_OWORD *)(v12 + 80) = v14;
  v15 = v23;
  *(_OWORD *)(v12 + 96) = v22;
  *(_OWORD *)(v12 + 112) = v15;
  v16 = v19;
  *(_OWORD *)(v12 + 32) = v18;
  *(_OWORD *)(v12 + 48) = v16;
  sub_100A3F884((uint64_t)v4, (uint64_t)&unk_1011D5600, v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100A0AF68()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  }
  if (*(_QWORD *)(v0 + 96))
    swift_release(*(_QWORD *)(v0 + 104));
  if (*(_QWORD *)(v0 + 112))
    swift_release(*(_QWORD *)(v0 + 120));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  if (*(_QWORD *)(v0 + 144))
    swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

double sub_100A0AFF4()
{
  uint64_t v0;

  return sub_100A0AE10((__int128 *)(v0 + 16));
}

uint64_t sub_100A0AFFC(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];
  _BYTE v6[16];
  uint64_t v7;
  uint64_t v8;

  v2 = v1[3];
  v3 = v1[4];
  v7 = v1[2];
  v8 = v2;
  v5[2] = v3;
  return Label.init(title:icon:)(sub_100A0B36C, v6, sub_1009B62BC, v5, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image, a1);
}

uint64_t sub_100A0B060(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v8;
  *(_OWORD *)(v4 + 144) = a4[8];
  v9 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D560C);
  *(_QWORD *)(v4 + 160) = v12;
  *v12 = v4;
  v12[1] = sub_100A0B0F8;
  return sub_100A095EC(a1, a2, a3, v4 + 16);
}

uint64_t sub_100A0B0F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 160));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100A0B140()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  v1 = *(_QWORD *)(v0 + 64);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));

  }
  if (*(_QWORD *)(v0 + 112))
    swift_release(*(_QWORD *)(v0 + 120));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  if (*(_QWORD *)(v0 + 144))
    swift_release(*(_QWORD *)(v0 + 152));
  if (*(_QWORD *)(v0 + 160))
    swift_release(*(_QWORD *)(v0 + 168));
  return swift_deallocObject(v0, 176, 7);
}

uint64_t sub_100A0B1D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D55FC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D55F8 + dword_1011D55F8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_100A0B254(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = (void *)a1[7];
  v8 = (void *)a1[9];
  v7 = a1[10];
  v9 = a1[11];
  v11 = a1[13];
  v12 = a1[12];
  v13 = a1[15];
  v14 = a1[14];
  v15 = a1[17];
  v16 = a1[16];
  swift_bridgeObjectRelease();
  sub_100A01720(v2, v3, v4, v5, v6);

  sub_10004BA30(v7, v9);
  sub_10004BA30(v12, v11);
  sub_10004BA30(v14, v13);
  sub_10004BA30(v16, v15);
  return a1;
}

double sub_100A0B31C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100A0B338()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56);
}

uint64_t sub_100A0B35C()
{
  uint64_t v0;

  return sub_100A00A3C((_QWORD *)(v0 + 16));
}

uint64_t sub_100A0B364()
{
  uint64_t v0;

  return sub_100A00B9C((_QWORD *)(v0 + 16));
}

uint64_t sub_100A0B36C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100A0AC74(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100A0B374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  char *v11;
  id *v12;

  v5 = *((_QWORD *)v4 + 4);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *((_QWORD *)v4 + 5), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  v11 = &v4[v8];
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v4[v8], v5, v10);
  swift_bridgeObjectRelease();
  v12 = (id *)&v4[v8 + v6[10]];
  if (v12[1] != (id)1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)&v11[v6[12]])
    swift_release();
  if (*(_QWORD *)&v11[v6[13]])
    swift_release();
  if (*(_QWORD *)&v11[v6[14]])
    swift_release();
  if (*(_QWORD *)&v11[v6[15]])
    swift_release();
  return swift_deallocObject(v4, v8 + v9);
}

uint64_t sub_100A0B49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D562C);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10006AEE4;
  return sub_100A09928(a1, v10, v11, v12, v7, v8);
}

double sub_100A0B540@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, v6, v7, a2) - 8) + 80);
  return sub_100A07D6C(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_100A0B5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc(dword_1011D563C);
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_10005AEE4;
  return sub_100A08890(v9, v6, v7, v11);
}

double sub_100A0B630(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, v7, v8, a4) - 8) + 80);
  return sub_100A08A10(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_100A0B6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Actionable(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v10 + 32));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10 + *(int *)(v6 + 48), v5);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v9);
}

uint64_t sub_100A0B774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actionable(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  return sub_100A08B18(a1, (_QWORD *)(v4 + ((v6 + 32) & ~v6)));
}

uint64_t sub_100A0B7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for Actionable(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v10 = v4 + v8;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v10 + 32));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v10 + *(int *)(v6 + 48), v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v4, v9);
}

uint64_t sub_100A0B8BC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;

  v6 = *(_QWORD *)(type metadata accessor for Actionable(0, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_100A080C8(a1, v3 + v7, *(_QWORD *)(v3 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), a3);
}

UIMenu ActionList.menu.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  UIMenuElementSize preferredElementSize;
  Swift::String v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::OpaquePointer v15;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  UIImage_optional v20;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  type metadata accessor for ActionGroup(255, a2, a3, a4);
  v4 = type metadata accessor for Array(0);
  v5 = sub_10004A07C(0, &qword_1011D3BA0, UIMenu_ptr);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  v7 = Sequence.compactMap<A>(_:)(sub_100A0BAE4, v16, v4, v5, WitnessTable);
  swift_bridgeObjectRelease();
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease();
    if (v13 >= 1)
    {
      v14 = sub_10004A07C(0, &qword_1011D5680, UIMenuElement_ptr);
      swift_bridgeObjectRetain();
      preferredElementSize = _bridgeCocoaArray<A>(_:)(v12, v14);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v8 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    sub_10004A07C(0, &qword_1011D5680, UIMenuElement_ptr);
    preferredElementSize = v7;
LABEL_4:
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v20.value.super.isa = 0;
    v20.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v20, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v15);
  }
  swift_bridgeObjectRelease();
  return 0;
}

UIMenu sub_100A0BAE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, UIMenu *a3@<X8>)
{
  uint64_t v3;
  UIMenu result;

  result.super.super.isa = ActionGroup.menu.getter(*a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2).super.super.isa;
  a3->super.super.isa = result.super.super.isa;
  return result;
}

UIMenu ActionGroup.menu.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  UIMenuElementSize preferredElementSize;
  Swift::String v8;
  uint64_t v10;
  uint64_t v11;
  Swift::OpaquePointer v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  UIImage_optional v17;

  v16 = a1;
  v14 = a2;
  v15 = a3;
  type metadata accessor for AnyAction(255, a2, a3, a4);
  v4 = type metadata accessor for Array(0);
  v5 = sub_10004A07C(0, &qword_1011D5680, UIMenuElement_ptr);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  preferredElementSize = Sequence.compactMap<A>(_:)(sub_100A0C2BC, v13, v4, v5, WitnessTable);
  swift_bridgeObjectRelease();
  if ((unint64_t)preferredElementSize >> 62)
  {
    if (preferredElementSize < UIMenuElementSizeSmall)
      v10 = preferredElementSize;
    else
      v10 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_10004A07C(0, &qword_1011D3BA0, UIMenu_ptr);
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v17.value.super.isa = 0;
    v17.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v17, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v12);
  }
  swift_bridgeObjectRelease();
  return 0;
}

id ActionList.contextMenuConfiguration(identifier:previewProvider:)(uint64_t a1, void *(*a2)(), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  UIMenu v9;
  Class isa;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  objc_class *v15;
  void *v16;
  id v17;
  void **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *(*v23)();
  uint64_t v24;

  v9.super.super.isa = ActionList.menu.getter(a4, a5, a6, a4).super.super.isa;
  if (v9.super.super.isa)
  {
    isa = v9.super.super.isa;
    v11 = swift_allocObject(&unk_1010EF300, 24, 7);
    *(_QWORD *)(v11 + 16) = isa;
    v12 = (void *)objc_opt_self(UIContextMenuConfiguration);
    v23 = a2;
    v24 = a3;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_1000FA900;
    v22 = &unk_1010EF318;
    v13 = _Block_copy(&v19);
    swift_unknownObjectRetain(a1, v14);
    v15 = isa;
    swift_retain_n(a3, 2);
    swift_release();
    v23 = JSSegue.Context.pageDetailsProvider.getter;
    v24 = v11;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_100A0C340;
    v22 = &unk_1010EF340;
    v16 = _Block_copy(&v19);
    swift_retain();
    v17 = objc_msgSend(v12, "configurationWithIdentifier:previewProvider:actionProvider:", a1, v13, v16, swift_release().n128_f64[0]);
    swift_unknownObjectRelease(a1);
    swift_release();
    swift_release();
    _Block_release(v16);
    _Block_release(v13);

  }
  else
  {
    return 0;
  }
  return v17;
}

id AnyAction.menuElement.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  Swift::String v34;
  void *v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;
  NSString v39;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  v11 = (uint64_t *)(v1 + *(int *)(v10 + 40));
  v12 = v11[1];
  if (v12 == 1)
    return 0;
  v13 = *v11;
  v14 = v11[2];
  v15 = v11[3];
  v17 = (void *)v11[4];
  v16 = v11[5];
  v42 = v13;
  v43 = v16;
  v44 = v17;
  v45 = v14;
  v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = AnyAction.canPerform.getter(a1);
  v21 = v20;
  sub_10013B670(v19, v20);
  if (v21 != 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v46 = v15;
  v22 = *(void **)(v2 + *(int *)(a1 + 44));
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v23(v9, v2, a1);
  if (!v22)
  {
    if (v12)
      v26 = v42;
    else
      v26 = 0;
    v27 = 0xE000000000000000;
    if (v12)
      v27 = v12;
    v41 = v27;
    v42 = v26;
    if ((v43 & 1) != 0)
    {
      if ((v43 & 2) != 0)
        v28 = 3;
      else
        v28 = 1;
    }
    else
    {
      if ((v43 & 2) == 0)
      {
        v28 = 0;
        if ((v43 & 4) == 0)
          goto LABEL_22;
        goto LABEL_21;
      }
      v28 = 2;
    }
    if ((v43 & 4) == 0)
    {
LABEL_22:
      v43 = sub_10004A07C(0, &qword_1011D7760, UIAction_ptr);
      v23(v6, (uint64_t)v9, a1);
      v29 = *(unsigned __int8 *)(v4 + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = swift_allocObject(&unk_1010EF378, v30 + v5, v29 | 7);
      *(_OWORD *)(v31 + 16) = *(_OWORD *)(a1 + 16);
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v31 + v30, v6, a1);
      swift_bridgeObjectRetain();
      v32 = v46;
      swift_bridgeObjectRetain();
      v33 = v18;
      v25 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v42, v41, v45, v32, v44, 0, 0, 0, 0, v28, 0, sub_100A0C4D8, v31);
      v24 = *(void (**)(char *, uint64_t))(v4 + 8);
      goto LABEL_23;
    }
LABEL_21:
    v28 |= 4uLL;
    goto LABEL_22;
  }
  v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v25 = v22;
LABEL_23:
  v24(v9, a1);
  v47 = 0;
  v48 = 0xE000000000000000;
  v34._countAndFlagsBits = 0x2E736E6F69746341;
  v34._object = (void *)0xE800000000000000;
  String.append(_:)(v34);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  v36 = v47;
  v35 = (void *)v48;
  if (qword_1011D1F50 != -1)
    swift_once(&qword_1011D1F50, sub_100B51BB0);
  v47 = qword_1011DBBC8;
  v48 = unk_1011DBBD0;
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = v36;
  v38._object = v35;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setAccessibilityIdentifier:", v39, swift_bridgeObjectRelease().n128_f64[0]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v25;
}

double sub_100A0C150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for AnyAction(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v22 - v10;
  v12 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1010EF3A0, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a3;
  *((_QWORD *)v20 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  sub_100A3F884((uint64_t)v14, (uint64_t)&unk_1011D5690, (uint64_t)v20);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_100A0C2BC@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  id result;

  v4 = type metadata accessor for AnyAction(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  result = AnyAction.menuElement.getter(v4);
  *a2 = result;
  return result;
}

uint64_t sub_100A0C304()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A0C328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A0C338(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100A0C340(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_10004A07C(0, &qword_1011D5680, UIMenuElement_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v7 = (void *)v3(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100A0C3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = v4 + v8;
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v8, v5);
  swift_bridgeObjectRelease();
  v11 = v4 + v8 + v6[10];
  if (*(_QWORD *)(v11 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v10 + v6[12]))
    swift_release();
  if (*(_QWORD *)(v10 + v6[13]))
    swift_release();
  if (*(_QWORD *)(v10 + v6[14]))
    swift_release();
  if (*(_QWORD *)(v10 + v6[15]))
    swift_release();
  return swift_deallocObject(v4, v8 + v9);
}

double sub_100A0C4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v6, v7, a4) - 8) + 80);
  return sub_100A0C150(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_100A0C530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  char *v11;
  id *v12;

  v5 = *((_QWORD *)v4 + 4);
  v6 = (int *)type metadata accessor for AnyAction(0, v5, *((_QWORD *)v4 + 5), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  v11 = &v4[v8];
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v4[v8], v5, v10);
  swift_bridgeObjectRelease();
  v12 = (id *)&v4[v8 + v6[10]];
  if (v12[1] != (id)1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)&v11[v6[12]])
    swift_release();
  if (*(_QWORD *)&v11[v6[13]])
    swift_release();
  if (*(_QWORD *)&v11[v6[14]])
    swift_release();
  if (*(_QWORD *)&v11[v6[15]])
    swift_release();
  return swift_deallocObject(v4, v8 + v9);
}

uint64_t sub_100A0C658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AnyAction(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_1011D568C);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10005AEE4;
  return sub_100A09928(a1, v10, v11, v12, v7, v8);
}

double View.alertPresenting(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double result;
  _QWORD v13[2];

  swift_retain();
  v8 = sub_100007E8C(&qword_1011D5698);
  v9 = sub_100049F28(&qword_1011D56A0, &qword_1011D5698, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v13[0] = ObservedObject.init(wrappedValue:)(a1, v8, v9);
  v13[1] = v10;
  v11 = sub_100A0C7C0();
  View.viewPresenting<A, B>(_:modifier:)(a1, (uint64_t)v13, a2, (uint64_t)&type metadata for Modifier, a3, v11, a4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unint64_t sub_100A0C7C0()
{
  unint64_t result;

  result = qword_1011D56A8;
  if (!qword_1011D56A8)
  {
    result = swift_getWitnessTable(&unk_100EDD474, &type metadata for Modifier);
    atomic_store(result, (unint64_t *)&qword_1011D56A8);
  }
  return result;
}

uint64_t sub_100A0C804(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for Modifier);
  v2 = sub_100044B54(&qword_1011D56B0);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100A0C7C0();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_100049F28(&qword_1011D56B8, &qword_1011D56B0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t sub_100A0C8C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FB41A0, 1);
}

uint64_t sub_100A0C8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  __n128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t OpaqueTypeConformance2;
  uint64_t v85;
  void *v87;
  unint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  _QWORD v123[3];
  char v124[8];
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  void *v131;

  v6 = sub_100007E8C(&qword_1011D56D8);
  v108 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v111 = (char *)&v91 - v10;
  v112 = sub_100007E8C(&qword_1011D56E0);
  __chkstk_darwin(v112);
  v113 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D56E8);
  v110 = *(uint64_t **)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v109 = (char *)&v91 - v16;
  v17 = sub_100007E8C(&qword_1011D56F0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v114 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 96));
  v21 = swift_beginAccess(v20, v124, 0, 0);
  v22 = v20[5];
  if (v22)
  {
    v103 = v12;
    v104 = v18;
    v105 = v17;
    v106 = v6;
    v107 = a3;
    v24 = v20[1];
    v25 = v20[2];
    v26 = v20[3];
    v27 = v20[4];
    v28 = (void *)v20[6];
    v125 = *v20;
    v23 = v125;
    v126 = v24;
    v97 = v25;
    v127 = v25;
    v128 = v26;
    v129 = v27 & 1;
    v130 = v22;
    v131 = v28;
    v29 = v22;
    v101 = v28;
    v30 = v28;
    swift_bridgeObjectRetain();
    v99 = v26;
    swift_bridgeObjectRetain();
    v102 = v29;
    v31 = swift_bridgeObjectRetain();
    v32 = static Color.clear.getter(v31);
    v98 = v23;
    if (v24)
      v33 = v23;
    else
      v33 = 0;
    v34 = 0xE000000000000000;
    if (v24)
      v34 = v24;
    v100 = v27;
    v96 = v32;
    v95 = v24;
    v123[1] = v34;
    v123[2] = v32;
    v123[0] = v33;
    swift_bridgeObjectRetain();
    if ((v27 & 1) != 0)
    {
      v62 = sub_100007E8C(&qword_1011D5698);
      v63 = sub_100049F28(&qword_1011D56A0, &qword_1011D5698, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v64 = ObservedObject.projectedValue.getter(a1, a2, v62, v63);
      KeyPath = swift_getKeyPath(&unk_100EDD4C8);
      ObservedObject.Wrapper.subscript.getter(&v115, KeyPath, v64, v63);
      swift_release();
      swift_release();
      v110 = &v91;
      v67 = v115;
      v66 = v116;
      v68 = v117;
      __chkstk_darwin(v69);
      __chkstk_darwin(v70);
      v71 = sub_100007E8C(&qword_1011D56F8);
      v92 = v71;
      v72 = sub_100007E8C(&qword_1011D5700);
      v73 = sub_10098A8C0();
      v93 = v73;
      v74 = sub_100A0D8FC();
      v94 = v74;
      v109 = (char *)sub_100A0D978();
      v88 = v74;
      v89 = v109;
      v87 = (void *)v73;
      ((void (*)(_QWORD *, void *, _QWORD *, uint64_t, _QWORD, uint64_t (*)(), void **, uint64_t (*)@<X0>(uint64_t *@<X8>), void **, void *, _QWORD *, uint64_t, uint64_t, void *))View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:))(v123, v67, v66, v68, 0, sub_100A0D8E4, &v87, sub_100A0DBDC, &v87, &type metadata for Color, &type metadata for String, v71, v72, &protocol witness table for Color);
      swift_release();
      swift_release();
      v75 = swift_bridgeObjectRelease();
      v76 = v108;
      v77 = v111;
      v78 = v106;
      (*(void (**)(char *, char *, uint64_t, __n128))(v108 + 32))(v111, v8, v106, v75);
      v79 = v113;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v113, v77, v78);
      swift_storeEnumTagMultiPayload(v79, v112, 1);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v80 = v92;
      v117 = v92;
      v118 = v72;
      v81 = v93;
      v119 = &protocol witness table for Color;
      v120 = v93;
      v82 = v94;
      v83 = v109;
      v121 = v94;
      v122 = v109;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.alert<A, B, C>(_:isPresented:actions:message:)>>, 1);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v117 = v80;
      v118 = v72;
      v119 = &protocol witness table for Color;
      v120 = v81;
      v121 = v82;
      v122 = v83;
      v85 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)>>, 1);
      v60 = (uint64_t)v114;
      _ConditionalContent<>.init(storage:)(v79, v103, v78, OpaqueTypeConformance2, v85);
      swift_release();
      sub_100462254(v98, v95, v97, v99, v100, v102, v101);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
    }
    else
    {
      v35 = sub_100007E8C(&qword_1011D5698);
      v36 = sub_100049F28(&qword_1011D56A0, &qword_1011D5698, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
      v37 = ObservedObject.projectedValue.getter(a1, a2, v35, v36);
      v38 = swift_getKeyPath(&unk_100EDD4C8);
      ObservedObject.Wrapper.subscript.getter(&v115, v38, v37, v36);
      swift_release();
      swift_release();
      v111 = (char *)&v91;
      v40 = v115;
      v39 = v116;
      LODWORD(v108) = v117;
      __chkstk_darwin(v41);
      __chkstk_darwin(v42);
      v43 = sub_100007E8C(&qword_1011D56F8);
      v91 = v43;
      v44 = sub_100007E8C(&qword_1011D5700);
      v92 = v44;
      v45 = sub_10098A8C0();
      v93 = v45;
      v46 = sub_100A0D8FC();
      v94 = v46;
      v47 = sub_100A0D978();
      v89 = (char *)v46;
      v90 = v47;
      v87 = &protocol witness table for Color;
      v88 = v45;
      ((void (*)(_QWORD *, void *, _QWORD *, _QWORD, uint64_t (*)(), void **, uint64_t (*)@<X0>(uint64_t *@<X8>), void **, void *, _QWORD *, uint64_t, uint64_t))View.alert<A, B, C>(_:isPresented:actions:message:))(v123, v40, v39, v108, sub_100A0DBD8, &v87, sub_100A0D9D4, &v87, &type metadata for Color, &type metadata for String, v43, v44);
      swift_release();
      swift_release();
      v48 = swift_bridgeObjectRelease();
      v49 = v110;
      v50 = v109;
      v51 = v14;
      v52 = v103;
      ((void (*)(char *, char *, uint64_t, __n128))v110[4])(v109, v51, v103, v48);
      v53 = v113;
      ((void (*)(char *, char *, uint64_t))v49[2])(v113, v50, v52);
      swift_storeEnumTagMultiPayload(v53, v112, 0);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v54 = v91;
      v55 = v92;
      v117 = v91;
      v118 = v92;
      v56 = v93;
      v119 = &protocol witness table for Color;
      v120 = v93;
      v57 = v94;
      v121 = v94;
      v122 = (char *)v47;
      v58 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.alert<A, B, C>(_:isPresented:actions:message:)>>, 1);
      v115 = &type metadata for Color;
      v116 = &type metadata for String;
      v117 = v54;
      v118 = v55;
      v119 = &protocol witness table for Color;
      v120 = v56;
      v121 = v57;
      v122 = (char *)v47;
      v59 = swift_getOpaqueTypeConformance2(&v115, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)>>, 1);
      v60 = (uint64_t)v114;
      _ConditionalContent<>.init(storage:)(v53, v52, v106, v58, v59);
      swift_release();
      sub_100462254(v98, v95, v97, v99, v100, v102, v101);
      ((void (*)(char *, uint64_t))v49[1])(v50, v52);
    }
    a3 = v107;
    sub_100065228(v60, v107, &qword_1011D56F0);
    v61 = 0;
    v17 = v105;
    v18 = v104;
  }
  else
  {
    v61 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))(a3, v61, 1, v17, v21);
}

uint64_t sub_100A0D234@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EDD4F0);
  v5 = swift_getKeyPath(&unk_100EDD528);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100A0D2C8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EDD4F0);
  v5 = swift_getKeyPath(&unk_100EDD528);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100A0D350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  v1 = sub_100007E8C(&qword_1011D5728);
  v2 = sub_100007E8C(&qword_1011D5718);
  v3 = sub_100049F28(&qword_1011D5730, &qword_1011D5728, (uint64_t)&protocol conformance descriptor for [A]);
  v4 = sub_100049F28(&qword_1011D5710, &qword_1011D5718, (uint64_t)&protocol conformance descriptor for Button<A>);
  v5 = sub_100A0D9EC();
  return ForEach<>.init(_:content:)(&v7, sub_100A0D4A8, 0, v1, &type metadata for String, v2, v3, v4, v5);
}

uint64_t sub_100A0D428@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    v10[0] = *(_QWORD *)(a1 + 16);
    v10[1] = v3;
    v4 = sub_10098A8C0();
    swift_bridgeObjectRetain();
    result = Text.init<A>(_:)(v10, &type metadata for String, v4);
    v9 = v8 & 1;
  }
  else
  {
    result = 0;
    v6 = 0;
    v9 = 0;
    v7 = 0;
  }
  *a2 = result;
  a2[1] = v6;
  a2[2] = v9;
  a2[3] = v7;
  return result;
}

uint64_t sub_100A0D4A8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  __n128 v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  char v31;

  v4 = sub_100007E8C(&qword_1011D3B30);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C(&qword_1011D5718);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v24 = *a1;
  v25 = v11;
  v26 = a1[2];
  v27 = *((_QWORD *)a1 + 6);
  v29 = v11;
  v23 = v11;
  sub_100065228((uint64_t)&v26, (uint64_t)&v28, &qword_1011D5740);
  sub_100065228((uint64_t)&v28, (uint64_t)&v31, &qword_1011D5740);
  v12 = v31;
  if (v31 == 2)
  {
    v13 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = swift_bridgeObjectRetain();
    if ((v12 & 1) != 0)
      static ButtonRole.destructive.getter(v6);
    else
      static ButtonRole.cancel.getter(v14);
    v15 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
  }
  v30 = v24;
  v16 = *((_QWORD *)&v26 + 1);
  v17 = v27;
  v18 = swift_allocObject(&unk_1010EF448, 72, 7);
  v19 = v25;
  *(_OWORD *)(v18 + 16) = v24;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = v26;
  *(_QWORD *)(v18 + 64) = v27;
  sub_100055CE4((uint64_t)&v29);
  sub_100055CE4((uint64_t)&v30);
  sub_100048AAC(v16, v17);
  v20 = sub_10098A8C0();
  Button<>.init<A>(_:role:action:)(&v23, v6, sub_100A0DA6C, v18, &type metadata for String, v20, v21);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

double sub_100A0D6BC(uint64_t a1)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v2 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)&result = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    type metadata accessor for MainActor(0);
    swift_retain_n(v7, 2);
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_1010EF470, 48, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v6;
    v11[5] = v7;
    sub_100A3F884((uint64_t)v5, (uint64_t)&unk_1011D5750, (uint64_t)v11);
    sub_10004BA30(v6, v7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100A0D7BC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  __n128 v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v4[2] = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v6);
  v9 = (uint64_t (*)(void))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc(a4[1]);
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_100088358;
  return v9();
}

uint64_t sub_100A0D838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v6 = *v2;
  v5 = v2[1];
  v7 = static Alignment.center.getter(a1);
  v9 = v8;
  v10 = a2 + *(int *)(sub_100007E8C(&qword_1011D56C0) + 36);
  sub_100A0C8D8(v6, v5, v10);
  v11 = (uint64_t *)(v10 + *(int *)(sub_100007E8C(&qword_1011D56C8) + 36));
  *v11 = v7;
  v11[1] = v9;
  v12 = sub_100007E8C(&qword_1011D56D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, a1, v12);
}

uint64_t sub_100A0D8E4()
{
  uint64_t v0;

  return sub_100A0D350(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100A0D8FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D5708;
  if (!qword_1011D5708)
  {
    v1 = sub_100044B54(&qword_1011D56F8);
    sub_100049F28(&qword_1011D5710, &qword_1011D5718, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D5708);
  }
  return result;
}

unint64_t sub_100A0D978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D5720;
  if (!qword_1011D5720)
  {
    v1 = sub_100044B54(&qword_1011D5700);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011D5720);
  }
  return result;
}

uint64_t sub_100A0D9D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100A0D428(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100A0D9EC()
{
  unint64_t result;

  result = qword_1011D5738;
  if (!qword_1011D5738)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Alert.Action, &type metadata for Alert.Action);
    atomic_store(result, (unint64_t *)&qword_1011D5738);
  }
  return result;
}

uint64_t sub_100A0DA30()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_100A0DA6C()
{
  uint64_t v0;

  return sub_100A0D6BC(v0 + 16);
}

uint64_t sub_100A0DA74()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A0DAA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D574C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_100A0D7BC(a1, v4, v5, v6);
}

uint64_t sub_100A0DB20()
{
  return 8;
}

_QWORD *sub_100A0DB2C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100A0DB3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D5758;
  if (!qword_1011D5758)
  {
    v1 = sub_100044B54(&qword_1011D56C0);
    sub_100049F28(&qword_1011D5760, &qword_1011D56D0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100049F28(&qword_1011D5768, &qword_1011D56C8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D5758);
  }
  return result;
}

id static UIAlertController.alertController(with:overrideStyle:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100A0E10C(a1, a2, a3 & 1);
}

double sub_100A0DBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)&result = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 40);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 48);
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor(0);
    swift_retain_n(v8, 2);
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_1010EF580, 48, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v7;
    v12[5] = v8;
    sub_100A3F884((uint64_t)v6, (uint64_t)&unk_1011D5778, (uint64_t)v12);
    sub_10004BA30(v7, v8);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

id static UIAlertAction.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  id v28;
  NSURL *v29;
  void *v30;
  void *v31;
  unsigned int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  void *v38;
  id v39;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[6];

  v43 = a6;
  v44 = a7;
  v45 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v45 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v45);
  v41 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v42 = (char *)&v41 - v17;
  v18 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v41 - v22;
  if (qword_1011D24D8 != -1)
    swift_once(&qword_1011D24D8, sub_100B63A4C);
  if (static DeviceCapabilities.isInternalInstall != 1)
    return 0;
  sub_100A6F91C(a1, a2, a3, a4, a5, v43, v44, a8 & 1, (uint64_t)v23);
  sub_10098B074((uint64_t)v23, (uint64_t)v20);
  v24 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v45) == 1)
  {
    sub_10098B0BC((uint64_t)v23);
    v25 = (uint64_t)v20;
LABEL_9:
    sub_10098B0BC(v25);
    return 0;
  }
  v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v27 = v42;
  v26(v42, v20, v24);
  v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v29);
  v31 = v30;
  v32 = objc_msgSend(v28, "canOpenURL:", v30);

  if (!v32)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v24);
    v25 = (uint64_t)v23;
    goto LABEL_9;
  }
  v33 = v41;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v41, v27, v24);
  v34 = *(unsigned __int8 *)(v14 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_1010EF4E0, v35 + v15, v34 | 7);
  v26((char *)(v36 + v35), v33, v24);
  v37 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_100A0E44C;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  aBlock[3] = &unk_1010EF4F8;
  v38 = _Block_copy(aBlock);
  swift_release();
  v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "actionWithTitle:style:handler:", v37, 0, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v24);
  sub_10098B0BC((uint64_t)v23);
  return v39;
}

void sub_100A0E034()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  sub_100A13584((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_1009FF5A8();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "openURL:options:completionHandler:", v3, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

}

id Alert.uiAlertController.getter()
{
  uint64_t v0;

  return sub_100A0E10C(v0, 0, 1);
}

id sub_100A0E10C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  id v22;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD aBlock[6];
  uint64_t v28;
  _BYTE v29[16];
  _BYTE v30[16];
  _QWORD v31[2];
  _QWORD v32[3];

  if ((a3 & 1) != 0)
    a2 = ~*(unsigned __int8 *)(a1 + 32) & 1;
  sub_100A0E4A0(a1, (uint64_t)v30);
  sub_100A0E4A0(a1 + 16, (uint64_t)v29);
  sub_100A0E4A0((uint64_t)v30, (uint64_t)v31);
  if (v31[1])
  {
    sub_100055CE4((uint64_t)v29);
    sub_100055CE4((uint64_t)v30);
    v5 = String._bridgeToObjectiveC()();
    sub_1001C7464((uint64_t)v30);
  }
  else
  {
    sub_100055CE4((uint64_t)v29);
    v5 = 0;
  }
  sub_100A0E4A0((uint64_t)v29, (uint64_t)v32);
  if (v32[1])
  {
    v6 = String._bridgeToObjectiveC()();
    sub_1001C7464((uint64_t)v29);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, v6, a2);

  if (!a2)
    objc_msgSend(v7, "setModalPresentationStyle:", 7);
  v8 = *(_QWORD *)(a1 + 40);
  v28 = v8;
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v24 = (id)objc_opt_self(UIAlertAction);
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(v8 + 40);
    v25 = v7;
    do
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      v14 = v10[1];
      v13 = v10[2];
      v15 = *((unsigned __int8 *)v10 + 24);
      v16 = v10[4];
      v17 = v10[5];
      v18 = 1;
      if ((v15 & 1) != 0)
        v18 = 2;
      if (v15 == 2)
        v18 = 0;
      v26 = v18;
      v19 = swift_allocObject(&unk_1010EF530, 72, 7);
      *(_QWORD *)(v19 + 16) = v11;
      *(_QWORD *)(v19 + 24) = v12;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v13;
      *(_BYTE *)(v19 + 48) = v15;
      *(_QWORD *)(v19 + 56) = v16;
      *(_QWORD *)(v19 + 64) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100048AAC(v16, v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100048AAC(v16, v17);
      v20 = String._bridgeToObjectiveC()();
      aBlock[4] = sub_100A0E524;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100223938;
      aBlock[3] = &unk_1010EF548;
      v21 = _Block_copy(aBlock);
      v22 = objc_msgSend(v24, "actionWithTitle:style:handler:", v20, v26, v21, swift_release().n128_f64[0]);
      _Block_release(v21);

      v7 = v25;
      objc_msgSend(v25, "addAction:", v22);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);

      sub_10004BA30(v16, v17);
      v10 += 7;
      --v9;
    }
    while (v9);
    sub_1001E3E14(&v28);
  }
  return v7;
}

uint64_t sub_100A0E3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100A0E44C()
{
  type metadata accessor for URL(0);
  sub_100A0E034();
}

uint64_t sub_100A0E488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A0E498(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A0E4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D3FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A0E4E8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_100A0E524(uint64_t a1)
{
  uint64_t v1;

  return sub_100A0DBE8(a1, v1 + 16);
}

uint64_t sub_100A0E52C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A0E558(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D5774);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_100A0D7BC(a1, v4, v5, v6);
}

uint64_t Alert.Action.init(id:title:role:perform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a7;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  result = __chkstk_darwin(v15);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v20 = UUID.init()(result);
    a1 = UUID.uuidString.getter(v20);
    a2 = v21;
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  v22 = v24;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = v22;
  return result;
}

uint64_t Alert.init(title:message:image:style:actions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a6 & 1;
  *(_QWORD *)(a8 + 40) = a7;
  *(_QWORD *)(a8 + 48) = a5;
  return result;
}

uint64_t Alert.Action.role.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Library.Menu.userSelectedIdentifiers.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
}

void *Alert.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

uint64_t Alert.Action.perform.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

unint64_t sub_100A0E734()
{
  unint64_t result;

  result = qword_1011D5780;
  if (!qword_1011D5780)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Alert.Style, &type metadata for Alert.Style);
    atomic_store(result, (unint64_t *)&qword_1011D5780);
  }
  return result;
}

unint64_t sub_100A0E77C()
{
  unint64_t result;

  result = qword_1011D5788[0];
  if (!qword_1011D5788[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Alert.Action.Role, &type metadata for Alert.Action.Role);
    atomic_store(result, qword_1011D5788);
  }
  return result;
}

void destroy for Alert(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v7 = v6;
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for Alert(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

ValueMetadata *type metadata accessor for Alert.Style()
{
  return &type metadata for Alert.Style;
}

uint64_t destroy for Alert.Action(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  result = swift_bridgeObjectRelease(a1[3]);
  if (a1[5])
    return swift_release(a1[6]);
  return result;
}

uint64_t initializeWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain(v8);
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  if (!v8)
  {
    if (v9)
    {
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (!v9)
  {
    if (v8)
    {
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v8)
  {
    swift_release(*(_QWORD *)(a1 + 48));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v10;
  swift_release(v11);
  return a1;
}

ValueMetadata *type metadata accessor for Alert.Action()
{
  return &type metadata for Alert.Action;
}

uint64_t _s9MusicCore5AlertV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A0ECA0 + 4 * byte_100EDD551[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A0ECD4 + 4 * byte_100EDD54C[v4]))();
}

uint64_t sub_100A0ECD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A0ECDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A0ECE4);
  return result;
}

uint64_t sub_100A0ECF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A0ECF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A0ECFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A0ED04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Alert.Action.Role()
{
  return &type metadata for Alert.Action.Role;
}

uint64_t ArtworkVideoReportingController.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 48, 7);
  ArtworkVideoReportingController.init()();
  return v1;
}

uint64_t *ArtworkVideoReportingController.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;

  v1 = *v0;
  *((_BYTE *)v0 + 16) = 0;
  v0[3] = 0;
  v0[4] = 0;
  v2 = *(_QWORD *)(v1 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v2, &type metadata for ComponentRenderEventSignposts, 0, 0);
  v4 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  v0[5] = Dictionary.init(dictionaryLiteral:)(v4, v2, &type metadata for ComponentRenderEventSignposts, *(_QWORD *)(v1 + 88));
  return v0;
}

uint64_t ArtworkVideoReportingController.isEnabled.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ArtworkVideoReportingController.isEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 16, v4, 1, 0);
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 24, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 24, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return sub_10004BA30(v5, v6);
}

uint64_t (*BindingRequestResponseInvalidation.onInvalidation.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j__swift_endAccess;
}

void ArtworkVideoReportingController.componentWillAppear(at:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  Class isa;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  _BYTE v44[24];
  id v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  unsigned __int8 v51;
  _BYTE v52[32];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v1 + 5;
  swift_beginAccess(v1 + 5, v52, 0, 0);
  v12 = v1[5];
  v13 = *(_QWORD *)(v3 + 88);
  swift_bridgeObjectRetain(v12);
  v42 = v13;
  Dictionary.subscript.getter(&v45, a1, v12, v4, &type metadata for ComponentRenderEventSignposts, v13);
  swift_bridgeObjectRelease(v12);
  v14 = v45;
  if (v45 == (id)1)
  {
    v38 = 0;
    v39 = 0;
    v36 = 0;
    v37 = 0;
    v40 = 0;
    v41 = 4;
LABEL_6:
    v20 = (void *)objc_opt_self(AMSMetrics);
    Date.init()();
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v22 = objc_msgSend(v20, "serverTimeFromDate:", isa);

    v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14 = v22;
    v32 = v7;
    v23(v7, a1, v4);
    v24 = v40;
    v35 = v40;
    v25 = v39;
    v26 = v39;
    v27 = v36;
    v34 = v36;
    v28 = v4;
    v29 = v37;
    v33 = v37;
    v30 = v38;
    v16 = v38;
    v45 = v22;
    v46 = v25;
    v47 = v27;
    v48 = v29;
    v19 = v26;
    v49 = v30;
    v50 = v24;
    v51 = v41;
    swift_beginAccess(v43, v44, 33, 0);
    v31 = type metadata accessor for Dictionary(0, v28, &type metadata for ComponentRenderEventSignposts, v42);
    v17 = v33;
    Dictionary.subscript.setter(&v45, v32, v31);
    v18 = v34;
    swift_endAccess(v44);
    v15 = v35;
    goto LABEL_7;
  }
  v15 = v50;
  if (!v45)
  {
    v39 = v46;
    v40 = v50;
    v41 = v51;
    v37 = v48;
    v38 = v49;
    v36 = v47;
    goto LABEL_6;
  }
  v16 = v49;
  v17 = v48;
  v18 = v47;
  v19 = v46;
LABEL_7:

}

void ArtworkVideoReportingController.placeholderDidAppear(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Class isa;
  id v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  int v34;
  id v35;
  uint64_t *v36;
  uint64_t v37;
  _BYTE v38[24];
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  unsigned __int8 v45;
  _BYTE v46[24];
  _BYTE v47[32];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 2, v47, 0, 0);
  if (*((_BYTE *)v1 + 16) == 1)
  {
    v12 = v1 + 5;
    swift_beginAccess(v1 + 5, v46, 0, 0);
    v13 = v1[5];
    v14 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain();
    v37 = v14;
    Dictionary.subscript.getter(&v39, a1, v13, v4, &type metadata for ComponentRenderEventSignposts, v14);
    swift_bridgeObjectRelease();
    v15 = v39;
    if (v39 == (void *)1)
    {
      v36 = v12;
      v15 = 0;
      v31 = 0;
      v32 = 0;
      v33 = 0;
      v35 = 0;
      v34 = 4;
    }
    else
    {
      if (v40)
      {
        sub_100A10A40(v39, v40, v41, v42, v43, v44);
        return;
      }
      v36 = v12;
      v31 = v41;
      v32 = v42;
      v33 = v43;
      v35 = v44;
      v34 = v45;
    }
    v16 = (void *)objc_opt_self(AMSMetrics);
    Date.init()(v16);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = objc_msgSend(v16, "serverTimeFromDate:", isa);

    v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v30 = v18;
    v19(v7, a1, v4);
    v20 = v35;
    v27 = v35;
    v29 = v15;
    v21 = v31;
    v28 = v31;
    v22 = v32;
    v23 = v32;
    v24 = v33;
    v25 = v33;
    v39 = v15;
    v40 = v18;
    v41 = v21;
    v42 = v22;
    v43 = v24;
    v44 = v20;
    v45 = v34;
    swift_beginAccess(v36, v38, 33, 0);
    v26 = type metadata accessor for Dictionary(0, v4, &type metadata for ComponentRenderEventSignposts, v37);
    Dictionary.subscript.setter(&v39, v7, v26);
    swift_endAccess(v38);

  }
}

void ArtworkVideoReportingController.videoArtworkWasSelectedForPlayback(at:isReadyForDisplay:)(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  __int128 v19;
  char v20;
  __int128 v21;
  void *v22;
  Class isa;
  id v24;
  void *v25;
  __int128 v26;
  void *v27;
  __int128 v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  int v37;
  _BYTE v38[24];
  void *v39;
  __int128 v40;
  __int128 v41;
  void *v42;
  char v43;
  char v44[24];
  void *v45;
  __int128 v46;
  __int128 v47;
  void *v48;
  char v49;
  char v50[32];

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v50, 0, 0);
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v37 = a2;
    v14 = v2 + 5;
    swift_beginAccess(v2 + 5, v44, 0, 0);
    v15 = v2[5];
    v16 = *(_QWORD *)(v5 + 88);
    swift_bridgeObjectRetain();
    v36 = v16;
    Dictionary.subscript.getter(&v39, a1, v15, v6, &type metadata for ComponentRenderEventSignposts, v16);
    swift_bridgeObjectRelease();
    v17 = v39;
    if (v39 == (void *)1)
    {
      v17 = 0;
      v18 = 0;
      v19 = 0uLL;
      v20 = 4;
      v21 = 0uLL;
    }
    else
    {
      v20 = v43;
      v18 = v42;
      v19 = v40;
      v21 = v41;
    }
    v45 = v17;
    v46 = v19;
    v47 = v21;
    v48 = v18;
    v49 = v20;
    v22 = (void *)objc_opt_self(AMSMetrics);
    Date.init()(v22);
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v24 = objc_msgSend(v22, "serverTimeFromDate:", isa);

    *((_QWORD *)&v46 + 1) = v24;
    sub_100A0F784();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v25 = v45;
    v26 = v46;
    v28 = v47;
    v27 = v48;
    v39 = v45;
    v40 = v46;
    v41 = v47;
    v42 = v48;
    v43 = v49;
    swift_beginAccess(v14, v38, 33, 0);
    v29 = type metadata accessor for Dictionary(0, v6, &type metadata for ComponentRenderEventSignposts, v36);
    v30 = v25;
    v31 = (id)v26;
    v32 = *((id *)&v26 + 1);
    v33 = (id)v28;
    v34 = *((id *)&v28 + 1);
    v35 = v27;
    Dictionary.subscript.setter(&v39, v9, v29);
    swift_endAccess(v38);

  }
}

void sub_100A0F784()
{
  __asm { BR              X10 }
}

uint64_t sub_100A0F7C0()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  char v4;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C616974726170, 0xE700000000000000, 0x73756F6976657270, 0xEF6E776F6853796CLL, 0);
  result = swift_bridgeObjectRelease(0xE700000000000000);
  if ((v2 & 1) == 0)
  {
    if ((v0 & 1) != 0)
    {
      *(_BYTE *)(v1 + 48) = 0;
      return result;
    }
    if (*(_QWORD *)(v1 + 24))
    {
      v4 = 1;
    }
    else
    {
      if (!*(_QWORD *)(v1 + 8))
        return result;
      v4 = 2;
    }
    *(_BYTE *)(v1 + 48) = v4;
  }
  return result;
}

void ArtworkVideoReportingController.videoArtworkWillBeginLoading(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  Class isa;
  id v18;
  char *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  _BYTE v40[24];
  void *v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  char v47;
  char v48[24];
  char v49[32];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v1 + 2, v49, 0, 0);
  if (*((_BYTE *)v1 + 16) == 1)
  {
    v38 = v1 + 5;
    v39 = v7;
    swift_beginAccess(v1 + 5, v48, 0, 0);
    v12 = v1[5];
    v13 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain(v12);
    v35 = v13;
    Dictionary.subscript.getter(&v41, a1, v12, v4, &type metadata for ComponentRenderEventSignposts, v13);
    swift_bridgeObjectRelease(v12);
    v14 = v41;
    v37 = a1;
    if (v41 == (void *)1)
    {
      v36 = 0;
      v34 = 0;
      v15 = 0;
      v33 = 0;
      v32 = 0;
      v14 = 0;
    }
    else
    {
      v36 = v46;
      v15 = v44;
      v34 = v45;
      v33 = v43;
      v32 = v42;
    }
    v16 = (void *)objc_opt_self(AMSMetrics);
    Date.init()();
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = objc_msgSend(v16, "serverTimeFromDate:", isa);

    v19 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v39, v37, v4);
    v20 = v32;
    v41 = v14;
    v42 = v32;
    v21 = v33;
    v43 = v33;
    v44 = v18;
    v22 = v34;
    v23 = v36;
    v45 = v34;
    v46 = v36;
    v47 = 4;
    swift_beginAccess(v38, v40, 33, 0);
    v24 = type metadata accessor for Dictionary(0, v4, &type metadata for ComponentRenderEventSignposts, v35);
    v25 = v14;
    v26 = v20;
    v27 = v21;
    v28 = v18;
    v29 = v22;
    v30 = v23;
    Dictionary.subscript.setter(&v41, v19, v24);
    swift_endAccess(v40);

  }
}

void ArtworkVideoReportingController.videoArtworkDidCancelLoading(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  Class isa;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t *v42;
  _BYTE v43[24];
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unsigned __int8 v50;
  char v51[24];
  char v52[24];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v52, 0, 0);
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v42 = v2 + 5;
    swift_beginAccess(v2 + 5, v51, 0, 0);
    v13 = v2[5];
    v14 = *(_QWORD *)(v4 + 88);
    swift_bridgeObjectRetain();
    v41 = v14;
    Dictionary.subscript.getter(&v44, a1, v13, v5, &type metadata for ComponentRenderEventSignposts, v14);
    swift_bridgeObjectRelease();
    v15 = v44;
    if (v44 != (void *)1)
    {
      v29 = v44;
      v35 = v50;
      v32 = v49;
      v34 = a1;
      v16 = v48;
      v30 = v48;
      v33 = v8;
      v17 = v47;
      v28 = v47;
      v31 = v6;
      v19 = v45;
      v18 = v46;
      v27 = (id)objc_opt_self(AMSMetrics);
      v38 = v16;
      v40 = v15;
      v39 = v19;
      v37 = v18;
      v36 = v17;
      Date.init()(v36);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v21 = objc_msgSend(v27, "serverTimeFromDate:", isa);

      v22 = v21;
      v23 = v33;
      v24 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v34, v5);
      v44 = v29;
      v45 = v19;
      v46 = v18;
      v47 = v28;
      v48 = v30;
      v49 = v21;
      v50 = v35;
      swift_beginAccess(v42, v43, 33, 0);
      v25 = type metadata accessor for Dictionary(0, v5, &type metadata for ComponentRenderEventSignposts, v41);
      Dictionary.subscript.setter(&v44, v23, v25);
      swift_endAccess(v43);
      sub_100A10174(v24);
      _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(v24);

    }
  }
}

void ArtworkVideoReportingController.videoArtworkDidStartPlayback(at:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  Class isa;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  char *v33;
  uint64_t v34;
  int v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t *v42;
  _BYTE v43[24];
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unsigned __int8 v50;
  char v51[24];
  char v52[24];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v2 + 2, v52, 0, 0);
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v42 = v2 + 5;
    swift_beginAccess(v2 + 5, v51, 0, 0);
    v13 = v2[5];
    v14 = *(_QWORD *)(v4 + 88);
    swift_bridgeObjectRetain();
    v41 = v14;
    Dictionary.subscript.getter(&v44, a1, v13, v5, &type metadata for ComponentRenderEventSignposts, v14);
    swift_bridgeObjectRelease();
    v15 = v44;
    if (v44 != (void *)1)
    {
      v35 = v50;
      v16 = v49;
      v32 = v49;
      v31 = v48;
      v34 = a1;
      v17 = v47;
      v28 = v47;
      v33 = v8;
      v18 = v46;
      v29 = v46;
      v30 = v6;
      v19 = v45;
      v27 = (id)objc_opt_self(AMSMetrics);
      v38 = v16;
      v40 = v15;
      v39 = v19;
      v37 = v18;
      v36 = v17;
      Date.init()(v36);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v21 = objc_msgSend(v27, "serverTimeFromDate:", isa);

      v22 = v21;
      v23 = v33;
      v24 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v34, v5);
      v44 = v15;
      v45 = v19;
      v46 = v29;
      v47 = v28;
      v48 = v21;
      v49 = v32;
      v50 = v35;
      swift_beginAccess(v42, v43, 33, 0);
      v25 = type metadata accessor for Dictionary(0, v5, &type metadata for ComponentRenderEventSignposts, v41);
      Dictionary.subscript.setter(&v44, v23, v25);
      swift_endAccess(v43);
      sub_100A10174(v24);

    }
  }
}

void sub_100A10174(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t (*v17)(uint64_t, __n128);
  uint64_t v18;
  __n128 v19;
  NSObject *v20;
  void *v21;
  void *v22;
  char v23;
  char v24;
  NSObject *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  NSObject *v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  NSObject *v38;
  id v39;
  id v40;
  NSObject *v41;
  id v42;
  NSObject *v43;
  id v44;
  id v45;
  NSObject *v46;
  id v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  char *v58;
  NSObject *v59;
  __n128 v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  os_log_t v66;
  uint64_t v67;
  id v68;
  NSObject *v69;
  NSObject *v70;
  id v71;
  NSObject *v72;
  NSObject *v73;
  id v74;
  id v75;
  NSObject *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  os_log_t v81;
  uint64_t v82;
  NSObject *v83;
  NSObject *v84;
  NSObject *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void *v91;
  void *v92;
  id v93;
  int v94;
  uint64_t v95;
  char v96[24];
  char v97[24];
  char v98[24];
  NSObject *v99;
  void *v100;
  void *v101;
  NSObject *v102;
  void *v103;
  void *v104;
  NSObject *v105;
  void *v106;
  id v107;
  char v108;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - v9;
  swift_beginAccess(v1 + 2, v98, 0, 0);
  if (*((_BYTE *)v1 + 16) == 1)
  {
    swift_beginAccess(v1 + 5, v97, 0, 0);
    v11 = v1[5];
    v12 = *(_QWORD *)(v3 + 88);
    swift_bridgeObjectRetain();
    Dictionary.subscript.getter(&v99, a1, v11, v4, &type metadata for ComponentRenderEventSignposts, v12);
    swift_bridgeObjectRelease();
    v13 = v99;
    if (v99 != 1)
    {
      v89 = v7;
      v90 = v10;
      v15 = v100;
      v14 = v101;
      v16 = v102;
      v92 = v103;
      v93 = v104;
      v94 = v105;
      swift_beginAccess(v1 + 3, v96, 0, 0);
      v17 = (uint64_t (*)(_QWORD, __n128))v1[3];
      if (v17)
      {
        v88 = v5;
        v91 = v14;
        v18 = v1[4];
        v19 = swift_retain();
        v20 = v17(a1, v19);
        v22 = v21;
        v24 = v23;
        sub_10004BA30((uint64_t)v17, v18);
        if (v16)
        {
          v99 = v20;
          v100 = v22;
          v87 = (uint64_t)v22;
          LOBYTE(v101) = v24;
          v25 = v13;
          v102 = v13;
          v103 = v15;
          v14 = v91;
          v104 = v91;
          v105 = v16;
          v26 = v92;
          v106 = v92;
          v107 = v93;
          v108 = v94;
          if (v92)
          {
            v81 = v20;
            v83 = v93;
            v27 = v15;
            v28 = v26;
            v85 = v16;
            v29 = v16;
            v30 = v13;
            v86 = v27;
            v31 = v27;
            v32 = v14;
            objc_msgSend(v28, "doubleValue");
            v34 = v33;
            -[NSObject doubleValue](v29, "doubleValue");
            v36 = v35;
            v84 = v25;
            if (qword_1011D1D58 != -1)
              swift_once(&qword_1011D1D58, sub_100A68E6C);
            v37 = type metadata accessor for Logger(0);
            v82 = sub_100048B14(v37, (uint64_t)static Logger.motion);
            v80 = *(void (**)(_QWORD, _QWORD, _QWORD))(v88 + 16);
            v80(v90, a1, v4);
            swift_bridgeObjectRetain_n(v87, 2);
            v38 = v30;
            v39 = v31;
            v40 = v32;
            v41 = v29;
            v42 = v28;
            v43 = v83;
            v83 = v38;
            v44 = v39;
            v45 = v40;
            v46 = v41;
            v47 = v42;
            v48 = v43;
            v49 = Logger.logObject.getter(v48);
            v50 = static os_log_type_t.debug.getter();
            v51 = v50;
            if (os_log_type_enabled(v49, v50))
            {
              v52 = swift_slowAlloc(32, -1);
              LODWORD(v82) = v51;
              v53 = v52;
              v79 = swift_slowAlloc(64, -1);
              v95 = v79;
              *(_DWORD *)v53 = 136315650;
              v54 = v87;
              swift_bridgeObjectRetain();
              v55 = v45;
              v56 = (char *)Optional<A>.description.getter(v81, v54);
              v81 = v49;
              v58 = v57;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v53 + 4) = sub_10099627C(v56, v58, &v95);

              v59 = v83;
              swift_bridgeObjectRelease_n(v54, 2);
              v60 = swift_bridgeObjectRelease();
              *(_WORD *)(v53 + 12) = 2080;
              v61 = v89;
              v62 = v90;
              ((void (*)(char *, char *, uint64_t, __n128))v80)(v89, v90, v4, v60);
              v63 = (char *)String.init<A>(describing:)(v61, v4);
              *(_QWORD *)(v53 + 14) = sub_10099627C(v63, v64, &v95);
              v65 = swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v62, v4, v65);
              *(_WORD *)(v53 + 22) = 2048;
              *(double *)(v53 + 24) = v34 - v36;
              v66 = v81;
              _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v82, "Item with id: %s at index: %s loaded enough data to start playback in %f ms.", (uint8_t *)v53, 0x20u);
              v67 = v79;
              swift_arrayDestroy(v79, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v67, -1, -1);
              swift_slowDealloc(v53, -1, -1);

            }
            else
            {

              v76 = v83;
              v77 = swift_bridgeObjectRelease_n(v87, 2);
              (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v90, v4, v77);

            }
            v15 = v86;
            v14 = v91;
            v26 = v92;
            v69 = v85;
            v70 = v84;
          }
          else
          {
            v71 = v93;
            v72 = v16;
            v73 = v13;
            v74 = v15;
            v75 = v14;
            v69 = v16;
            v70 = v13;
          }
          if (qword_1011D1C18 != -1)
            swift_once(&qword_1011D1C18, sub_100A19B6C);
          MetricsReportingController.recordComponentRenderEvent(_:)((uint64_t)&v99);

          swift_bridgeObjectRelease();
          v68 = v93;

        }
        else
        {
          swift_bridgeObjectRelease();
          v69 = 0;
          v14 = v91;
          v26 = v92;
          v68 = v93;
          v70 = v13;
        }
      }
      else
      {
        v26 = v92;
        v68 = v93;
        v69 = v16;
        v70 = v13;
      }
      sub_100A10A40(v70, v15, v14, v69, v26, v68);
    }
  }
}

void _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  _BYTE v24[24];
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  char v32[24];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + 5;
  swift_beginAccess(v1 + 5, v32, 0, 0);
  v9 = v1[5];
  v10 = *(_QWORD *)(v3 + 88);
  swift_bridgeObjectRetain(v9);
  Dictionary.subscript.getter(&v25, a1, v9, v4, &type metadata for ComponentRenderEventSignposts, v10);
  swift_bridgeObjectRelease(v9);
  v11 = v25;
  if (v25 != (void *)1)
  {
    v22 = v26;
    v23 = v28;
    v13 = v29;
    v12 = v30;
    v14 = v31;

    if (v13)
    {

      v14 = 3;
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v16 = v22;
    v15 = v23;
    v25 = v11;
    v26 = v22;
    v27 = 0;
    v28 = v23;
    v29 = 0;
    v30 = 0;
    v31 = v14;
    swift_beginAccess(v8, v24, 33, 0);
    v17 = type metadata accessor for Dictionary(0, v4, &type metadata for ComponentRenderEventSignposts, v10);
    v18 = v11;
    v19 = v16;
    v20 = v15;
    Dictionary.subscript.setter(&v25, v7, v17);
    swift_endAccess(v24);

  }
}

uint64_t ArtworkVideoReportingController.deinit()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ArtworkVideoReportingController.__deallocating_deinit()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, 48, 7);
}

void sub_100A10A40(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  if (a1 != (void *)1)
  {

  }
}

uint64_t sub_100A10AA0(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100EDD6E0;
  v2[1] = &unk_100EDD6F8;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t type metadata accessor for ArtworkVideoReportingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ArtworkVideoReportingController);
}

void destroy for ComponentRenderEventSignposts(id *a1)
{

}

uint64_t initializeWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(void **)(a1 + 24);
  v14 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v14;
  v15 = v14;

  v16 = *(void **)(a1 + 32);
  v17 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v17;
  v18 = v17;

  v19 = *(void **)(a1 + 40);
  v20 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v20;
  v21 = v20;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentRenderEventSignposts()
{
  return &type metadata for ComponentRenderEventSignposts;
}

void CarNowPlayingMetrics.Data.timePlayed.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t ApplicationCapabilities.subscriptionCapabilities.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t CarNowPlayingMetrics.Data.tracksPlayed.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

double UIView.Shadow.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void UIView.Shadow.radius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t ApplicationCapabilities.allowedServices.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
}

uint64_t Library.Menu.Revision.selected.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

double (*UIView.Shadow.offset.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t QRCode.errorCorrectionLevel.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t CarNowPlayingMetrics.Data.sharedSessionMaxParticipants.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

double (*Library.Menu.Request.excludedIdentifiers.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t CarNowPlayingMetrics.Data.init(timePlayed:tracksPlayed:rangeStartTime:sharedSessionIds:sharedSessionMaxParticipants:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(double *)a4 = a5;
  *(_QWORD *)(a4 + 8) = result;
  *(double *)(a4 + 16) = a6;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_100A10E5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A10E94 + 4 * byte_100EDD730[a1]))(0x79616C50656D6974, 0xEA00000000006465);
}

uint64_t sub_100A10E94()
{
  return 0x6C50736B63617274;
}

uint64_t sub_100A10EB4()
{
  return 0x61745365676E6172;
}

unint64_t sub_100A10ED8()
{
  return 0xD000000000000010;
}

unint64_t sub_100A10EF4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100A10F14()
{
  unsigned __int8 *v0;

  return sub_100A10E5C(*v0);
}

uint64_t sub_100A10F1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100A124F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A10F40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100A11158();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A10F68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100A11158();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CarNowPlayingMetrics.Data.encode(to:)(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_100007E8C(&qword_1011D5818);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100A11158();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CarNowPlayingMetrics.Data.CodingKeys, &type metadata for CarNowPlayingMetrics.Data.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v25, v5, v12);
  if (!v2)
  {
    v13 = *((_QWORD *)v3 + 1);
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, &v24, v5);
    v14 = v3[2];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v23, v5, v14);
    v22 = *((_QWORD *)v3 + 3);
    v21 = 3;
    v15 = sub_100007E8C(&qword_1011D5828);
    v16 = sub_100A132D0(&qword_1011D5830, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v5, v15, v16);
    v17 = *((_QWORD *)v3 + 4);
    v20 = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100A11158()
{
  unint64_t result;

  result = qword_1011D5820;
  if (!qword_1011D5820)
  {
    result = swift_getWitnessTable(&unk_100EDD900, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011D5820);
  }
  return result;
}

double CarNowPlayingMetrics.Data.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_100A12748(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_100A111E0(_QWORD *a1)
{
  return CarNowPlayingMetrics.Data.encode(to:)(a1);
}

uint64_t static CarNowPlayingMetrics.persistedMetricsData(for:)@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[40];

  sub_100A12990((uint64_t)v3);
  return sub_100065228((uint64_t)v3, a1, &qword_1011D5838);
}

uint64_t Logger.carMetrics.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1B70 != -1)
    swift_once(&qword_1011D1B70, sub_100A12408);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.carMetrics);
}

void static CarNowPlayingMetrics.storeMetricsData(_:for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  _OWORD v12[2];
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  sub_100065228(a1, (uint64_t)&v14, &qword_1011D5838);
  if (*((_QWORD *)&v15 + 1))
  {
    v17 = v14;
    v18 = v15;
    v19 = v16;
    v1 = type metadata accessor for JSONEncoder(0);
    v2 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    JSONEncoder.init()(v2);
    v12[0] = v17;
    v12[1] = v18;
    v13 = v19;
    v3 = sub_100A12D34();
    v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, &type metadata for CarNowPlayingMetrics.Data, v3);
    v8 = v7;
    swift_release();
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Data._bridgeToObjectiveC()().super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v11, swift_bridgeObjectRelease().n128_f64[0]);

    sub_1000652DC(v6, v8);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKey:", 0, v5, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void sub_100A1163C(char a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  double v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  double v37;
  uint64_t v38;
  double v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _BYTE v72[40];
  __int128 v73;
  double v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v68 = *v1;
  v2 = a1 & 1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v67 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - v14;
  if (qword_1011D1B70 != -1)
    swift_once(&qword_1011D1B70, sub_100A12408);
  v16 = type metadata accessor for Logger(0);
  v69 = sub_100048B14(v16, (uint64_t)static Logger.carMetrics);
  v17 = Logger.logObject.getter(v69);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v64 = v9;
    v20 = v19;
    v21 = swift_slowAlloc(32, -1);
    v66 = v6;
    v65 = v5;
    v22 = v11;
    v23 = v21;
    *(_QWORD *)&v73 = v21;
    *(_DWORD *)v20 = 136446210;
    v72[0] = v2;
    v24 = (char *)String.init<A>(describing:)(v72, &type metadata for CarNowPlayingMetrics.EventType);
    *(_QWORD *)(v20 + 4) = sub_10099627C(v24, v25, (uint64_t *)&v73);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reporting %{public}s playsSummary event if needed", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v26 = v23;
    v11 = v22;
    v5 = v65;
    v6 = v66;
    swift_slowDealloc(v26, -1, -1);
    v27 = v20;
    v9 = v64;
    swift_slowDealloc(v27, -1, -1);
  }

  if (qword_1011D1C18 != -1)
    swift_once(&qword_1011D1C18, sub_100A19B6C);
  *(double *)&v28 = COERCE_DOUBLE(sub_100A1E3E8());
  if ((v29 & 1) != 0)
  {
    if (qword_1011D1B68 != -1)
      swift_once(&qword_1011D1B68, sub_100A123F4);
    v30 = *(double *)&qword_1011D5810;
  }
  else
  {
    v30 = *(double *)&v28;
  }
  sub_100A12990((uint64_t)v72);
  v31 = sub_100065228((uint64_t)v72, (uint64_t)&v73, &qword_1011D5838);
  if ((_QWORD)v75)
  {
    v32 = v74;
    v76 = v75;
    v77 = v73;
    v33 = static Date.now.getter(v31);
    v34 = Date.timeIntervalSince1970.getter(v33);
    v35 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v36 = v35(v15, v10);
    v37 = (v34 - v32) * 1000.0;
    if (v30 < v37)
    {
      v38 = static Date.now.getter(v36);
      v39 = Date.timeIntervalSince1970.getter(v38);
      v40.n128_f64[0] = ((double (*)(char *, uint64_t))v35)(v15, v10);
      v41 = static Calendar.current.getter(v40);
      v42 = v67;
      static Date.now.getter(v41);
      Calendar.startOfDay(for:)(v42);
      v35(v42, v10);
      v43 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v44 = Date.timeIntervalSince1970.getter(v43);
      v35(v15, v10);
      v45 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v5, 1, 1, v45);
      type metadata accessor for MainActor(0);
      v47 = static MainActor.shared.getter(v46);
      v48 = swift_allocObject(&unk_1010EFB88, 104, 7);
      *(_QWORD *)(v48 + 16) = v47;
      *(_QWORD *)(v48 + 24) = &protocol witness table for MainActor;
      *(_OWORD *)(v48 + 32) = v77;
      *(double *)(v48 + 48) = v32;
      *(_OWORD *)(v48 + 56) = v76;
      *(double *)(v48 + 72) = v44;
      *(_BYTE *)(v48 + 80) = v2;
      *(double *)(v48 + 88) = v39;
      *(_QWORD *)(v48 + 96) = v68;
      sub_100A3F884((uint64_t)v5, (uint64_t)&unk_1011D5910, v48);
      swift_release();
      return;
    }
    v58 = v2;
    v59 = sub_10062EBC0((uint64_t)v72);
    v49 = Logger.logObject.getter(v59);
    v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v60))
    {
      v51 = swift_slowAlloc(32, -1);
      v61 = swift_slowAlloc(32, -1);
      v71 = v61;
      *(_DWORD *)v51 = 136446722;
      v70 = v58;
      v62 = (char *)String.init<A>(describing:)(&v70, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v51 + 4) = sub_10099627C(v62, v63, &v71);
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2050;
      *(double *)(v51 + 14) = v37;
      *(_WORD *)(v51 + 22) = 2050;
      *(double *)(v51 + 24) = v30;
      _os_log_impl((void *)&_mh_execute_header, v49, v60, "❌ Failed to configure %{public}s playsSummary event: range=%{public}f ms isn't greater than post frequency=%{public}f ms", (uint8_t *)v51, 0x20u);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      v57 = v61;
      goto LABEL_19;
    }
  }
  else
  {
    v49 = Logger.logObject.getter(v31);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc(12, -1);
      v52 = swift_slowAlloc(32, -1);
      v53 = v2;
      v54 = v52;
      *(_QWORD *)&v77 = v52;
      *(_DWORD *)v51 = 136446210;
      LOBYTE(v76) = v53;
      v55 = (char *)String.init<A>(describing:)(&v76, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v51 + 4) = sub_10099627C(v55, v56, (uint64_t *)&v77);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "❌ Failed to configure %{public}s playsSummary event: no persisted metrics data", (uint8_t *)v51, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      v57 = v54;
LABEL_19:
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v51, -1, -1);
    }
  }

}

uint64_t sub_100A11CBC(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + 512) = a7;
  *(double *)(v7 + 488) = a1;
  *(double *)(v7 + 496) = a2;
  *(_QWORD *)(v7 + 480) = a6;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 504) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100A11D30, v10, v11);
}

uint64_t sub_100A11D30()
{
  uint64_t v0;
  char v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;

  swift_release();
  if (qword_1011D1C18 != -1)
    swift_once(&qword_1011D1C18, sub_100A19B6C);
  v1 = *(_BYTE *)(v0 + 512);
  v3 = *(double *)(v0 + 488);
  v2 = *(double *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = sub_100007E8C(&qword_1011DBD80);
  inited = swift_initStackObject(v5, v0 + 16);
  v7 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EBF180;
  strcpy((char *)(inited + 32), "totalDuration");
  *(_WORD *)(inited + 46) = -4864;
  *(double *)(inited + 48) = round(*(double *)v4 * 1000.0);
  *(_QWORD *)(inited + 72) = &type metadata for Double;
  *(_QWORD *)(inited + 80) = 0x6E756F4379616C70;
  *(_QWORD *)(inited + 88) = 0xE900000000000074;
  *(_QWORD *)(inited + 96) = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(inited + 120) = &type metadata for Int;
  *(_QWORD *)(inited + 128) = 0x6D6954746E657665;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  *(double *)(inited + 144) = round(v3 * 1000.0);
  *(_QWORD *)(inited + 168) = &type metadata for Double;
  *(_QWORD *)(inited + 176) = 0x707954746E657665;
  *(_QWORD *)(inited + 184) = 0xE900000000000065;
  strcpy((char *)(inited + 192), "playsSummary");
  *(_BYTE *)(inited + 205) = 0;
  *(_WORD *)(inited + 206) = -5120;
  *(_QWORD *)(inited + 216) = &type metadata for String;
  *(_QWORD *)(inited + 224) = 0x6F436E6F69746361;
  v8 = v1 & 1;
  v9 = 0x746F6F7465756C62;
  if (!v8)
    v9 = 0x79616C50726143;
  v10 = 0xE900000000000068;
  if (!v8)
    v10 = 0xE700000000000000;
  *(_QWORD *)(inited + 232) = 0xED0000747865746ELL;
  *(_QWORD *)(inited + 240) = v9;
  *(_QWORD *)(inited + 248) = v10;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  strcpy((char *)(inited + 272), "rangeStartTime");
  *(_BYTE *)(inited + 287) = -18;
  *(double *)(inited + 288) = round(*(double *)(v4 + 16) * 1000.0);
  *(_QWORD *)(inited + 312) = &type metadata for Double;
  strcpy((char *)(inited + 320), "rangeEndTime");
  *(_BYTE *)(inited + 333) = 0;
  *(_WORD *)(inited + 334) = -5120;
  *(double *)(inited + 336) = round(v2 * 1000.0);
  *(_QWORD *)(inited + 360) = &type metadata for Double;
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x8000000100E4BC90;
  *(_QWORD *)(inited + 384) = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 16);
  *(_QWORD *)(inited + 408) = &type metadata for Int;
  *(_QWORD *)(inited + 416) = 0xD000000000000018;
  *(_QWORD *)(inited + 424) = 0x8000000100E4BCB0;
  v11 = sub_100A20040(*(_QWORD *)(v4 + 32));
  v7[57] = &type metadata for String;
  v7[54] = v11;
  v7[55] = v12;
  v13 = sub_100A13450((uint64_t)v7);
  v14 = swift_allocObject(&unk_1010EFBB0, 17, 7);
  *(_BYTE *)(v14 + 16) = v8;
  MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(0xD000000000000014, 0x8000000100E4BC70, v13, 0, (uint64_t)sub_100A13244, v14);
  swift_release();
  v15 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v15);
}

void sub_100A12044(uint64_t a1, char a2)
{
  char v2;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  NSString v23;
  NSObject *oslog;
  uint64_t v25;
  uint64_t v26;

  v2 = a2 & 1;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1011D1B70 != -1)
      swift_once(&qword_1011D1B70, sub_100A12408);
    v4 = type metadata accessor for Logger(0);
    sub_100048B14(v4, (uint64_t)static Logger.carMetrics);
    swift_errorRetain(a1);
    v5 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v5);
    v6 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc(22, -1);
      v8 = swift_slowAlloc(64, -1);
      v26 = v8;
      *(_DWORD *)v7 = 136446466;
      LOBYTE(v25) = v2;
      v9 = (char *)String.init<A>(describing:)(&v25, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v7 + 4) = sub_10099627C(v9, v10, &v26);
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      v25 = a1;
      swift_errorRetain(a1);
      v11 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
      v12 = (char *)String.init<A>(describing:)(&v25, v11);
      *(_QWORD *)(v7 + 14) = sub_10099627C(v12, v13, &v26);
      swift_bridgeObjectRelease();
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "❌ Failed to report %{public}s playsSummary event with error=%{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_1011D1B70 != -1)
      swift_once(&qword_1011D1B70, sub_100A12408);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048B14(v14, (uint64_t)static Logger.carMetrics);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v26 = v19;
      *(_DWORD *)v18 = 136446210;
      LOBYTE(v25) = v2;
      v20 = (char *)String.init<A>(describing:)(&v25, &type metadata for CarNowPlayingMetrics.EventType);
      *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v26);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "✅ Reported %{public}s playsSummary event", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v22, "setValue:forKey:", 0, v23, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void sub_100A123F4()
{
  qword_1011D5810 = 0x4194997000000000;
}

uint64_t sub_100A12408()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.carMetrics);
  sub_100048B14(v0, (uint64_t)static Logger.carMetrics);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x697274654D726143, 0xEA00000000007363);
}

uint64_t static Logger.carMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1B70 != -1)
    swift_once(&qword_1011D1B70, sub_100A12408);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.carMetrics);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100A124F0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465)
  {
    v5 = 0xEA00000000006465;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x79616C50656D6974, 0xEA00000000006465, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6C50736B63617274 && a2 == 0xEC00000064657961)
  {
    v7 = 0xEC00000064657961;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C50736B63617274, 0xEC00000064657961, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x61745365676E6172 && a2 == 0xEE00656D69547472)
  {
    v8 = 0xEE00656D69547472;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61745365676E6172, 0xEE00656D69547472, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0xD000000000000010)
  {
    v9 = 0x8000000100E4BC30;
    if (a2 == 0x8000000100E4BC30)
      goto LABEL_25;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100E4BC30, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100E4BC50)
  {
    swift_bridgeObjectRelease(0x8000000100E4BC50);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x8000000100E4BC50, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_100A12748(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v5 = sub_100007E8C(&qword_1011D5920);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100007E68(a1, v9);
  v11 = sub_100A11158();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CarNowPlayingMetrics.Data.CodingKeys, &type metadata for CarNowPlayingMetrics.Data.CodingKeys, v11, v9, v10);
  if (v2)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v27 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v27, v5);
    v13 = v12;
    v26 = 1;
    v14 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v25 = 2;
    KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
    v16 = v15;
    v17 = sub_100007E8C(&qword_1011D5828);
    v24 = 3;
    v18 = sub_100A132D0(&qword_1011D5928, (uint64_t)&protocol witness table for String, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v22, v17, &v24, v5, v17, v18);
    v19 = v22;
    v23 = 4;
    swift_bridgeObjectRetain();
    v20 = KeyedDecodingContainer.decode(_:forKey:)(&v23, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    swift_bridgeObjectRelease();
    *a2 = v13;
    a2[1] = v14;
    a2[2] = v16;
    a2[3] = v19;
    a2[4] = v20;
  }
}

void sub_100A12990(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _OWORD v18[2];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3, swift_bridgeObjectRelease().n128_f64[0]);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v18, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_100065228((uint64_t)v18, (uint64_t)&v13, &qword_1011D7160);
  if (!v15)
  {
    sub_100A1324C((uint64_t)&v13);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v17, &v13, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_8:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v9 = 0uLL;
    goto LABEL_9;
  }
  v6 = v17[0];
  v5 = v17[1];
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  JSONDecoder.init()();
  v8 = sub_100A1328C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v13, &type metadata for CarNowPlayingMetrics.Data, v6, v5, &type metadata for CarNowPlayingMetrics.Data, v8);
  sub_1000652DC(v6, v5);
  swift_release();
  v9 = v13;
  v10 = v14;
  v11 = v15;
  v12 = v16;
LABEL_9:
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v12;
}

unint64_t sub_100A12D34()
{
  unint64_t result;

  result = qword_1011D5840;
  if (!qword_1011D5840)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CarNowPlayingMetrics.Data, &type metadata for CarNowPlayingMetrics.Data);
    atomic_store(result, (unint64_t *)&qword_1011D5840);
  }
  return result;
}

unint64_t sub_100A12D7C()
{
  unint64_t result;

  result = qword_1011D5848;
  if (!qword_1011D5848)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CarNowPlayingMetrics.EventType, &type metadata for CarNowPlayingMetrics.EventType);
    atomic_store(result, (unint64_t *)&qword_1011D5848);
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics()
{
  return &type metadata for CarNowPlayingMetrics;
}

uint64_t storeEnumTagSinglePayload for CarNowPlayingMetrics.EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A12E1C + 4 * byte_100EDD73A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A12E50 + 4 * byte_100EDD735[v4]))();
}

uint64_t sub_100A12E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A12E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A12E60);
  return result;
}

uint64_t sub_100A12E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A12E74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A12E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A12E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.EventType()
{
  return &type metadata for CarNowPlayingMetrics.EventType;
}

uint64_t destroy for Lyrics.Syllable(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for CarNowPlayingMetrics.Data(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for CarNowPlayingMetrics.Data(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a2[3];
  v5 = a1[3];
  a1[3] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for CarNowPlayingMetrics.Data(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v4);
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data()
{
  return &type metadata for CarNowPlayingMetrics.Data;
}

uint64_t type metadata accessor for CarNowPlayingMetrics.Reporter()
{
  return objc_opt_self(_TtCO9MusicCore20CarNowPlayingMetrics8Reporter);
}

uint64_t storeEnumTagSinglePayload for CarNowPlayingMetrics.Data.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100A13014 + 4 * byte_100EDD744[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100A13048 + 4 * byte_100EDD73F[v4]))();
}

uint64_t sub_100A13048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A13050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A13058);
  return result;
}

uint64_t sub_100A13064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A1306CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100A13070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A13078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data.CodingKeys()
{
  return &type metadata for CarNowPlayingMetrics.Data.CodingKeys;
}

unint64_t sub_100A13098()
{
  unint64_t result;

  result = qword_1011D58F0;
  if (!qword_1011D58F0)
  {
    result = swift_getWitnessTable(&unk_100EDD8D8, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011D58F0);
  }
  return result;
}

unint64_t sub_100A130E0()
{
  unint64_t result;

  result = qword_1011D58F8;
  if (!qword_1011D58F8)
  {
    result = swift_getWitnessTable(&unk_100EDD848, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1011D58F8);
  }
  return result;
}

unint64_t sub_100A13128()
{
  unint64_t result;

  result = qword_1011D5900;
  if (!qword_1011D5900)
  {
    result = swift_getWitnessTable(&unk_100EDD870, &type metadata for CarNowPlayingMetrics.Data.CodingKeys);
    atomic_store(result, &qword_1011D5900);
  }
  return result;
}

uint64_t sub_100A1316C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100A13198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char v7;
  double v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(double *)(v1 + 72);
  v7 = *(_BYTE *)(v1 + 80);
  v8 = *(double *)(v1 + 88);
  v9 = (_QWORD *)swift_task_alloc(dword_1011D590C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_100A11CBC(v6, v8, a1, v4, v5, v1 + 32, v7);
}

uint64_t sub_100A13234()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_100A13244(uint64_t a1)
{
  uint64_t v1;

  sub_100A12044(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_100A1324C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011D7160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100A1328C()
{
  unint64_t result;

  result = qword_1011D5918;
  if (!qword_1011D5918)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CarNowPlayingMetrics.Data, &type metadata for CarNowPlayingMetrics.Data);
    atomic_store(result, (unint64_t *)&qword_1011D5918);
  }
  return result;
}

uint64_t sub_100A132D0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(&qword_1011D5828);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100A13330(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_1011D59E0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    v13 = (_QWORD *)(v3[7] + 16 * result);
    *v13 = v9;
    v13[1] = v8;
    v14 = v3[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5 += 4;
    v3[2] = v16;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D59D0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10004A160(v7, (uint64_t)&v16, &qword_1011D59D8);
    v8 = v16;
    v9 = v17;
    result = sub_10079C2C4(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100048ABC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13584(uint64_t a1)
{
  return sub_100043490(a1, &qword_1011D5988, &qword_1011D5990, (uint64_t (*)(uint64_t))sub_10079C328);
}

unint64_t sub_100A135A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D59B0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    v10 = v9;
    result = sub_10079C2C4(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A136B8(uint64_t a1)
{
  return sub_100A136C4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10079C2C4);
}

unint64_t sub_100A136C4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t result;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v6 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D59B8);
  v5 = static _DictionaryStorage.allocate(capacity:)(v3);
  v6 = (_QWORD *)v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v6;
  }
  swift_retain(v5);
  v8 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v9 = *(v8 - 3);
    v10 = *(v8 - 2);
    v11 = *(v8 - 1);
    v12 = *v8;
    swift_bridgeObjectRetain();
    sub_100079DE4(v11, v12);
    result = a2(v9, v10);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (_QWORD *)(v6[6] + 16 * result);
    *v15 = v9;
    v15[1] = v10;
    v16 = (uint64_t *)(v6[7] + 16 * result);
    *v16 = v11;
    v16[1] = v12;
    v17 = v6[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8 += 4;
    v6[2] = v19;
    if (!--v7)
    {
      swift_release(v6);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A137FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_1011D77C0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10004A160(v7, (uint64_t)v16, &qword_1011D59F0);
    result = sub_10079C294((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100048ABC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A1393C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C((uint64_t *)&unk_1011D59C0);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13A54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D59A8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_10079C2C4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13B64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = sub_100007E8C(&qword_1011D5998);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D59A0);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_1011D5998);
    result = sub_100A1FABC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v20 = v8[7];
    v21 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    result = sub_100A156A0(v10, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D5980);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_unknownObjectRetain(v7, v9);
    result = sub_100A1FB20((uint64_t)v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v4[6] + v12) = v8;
    *(_QWORD *)(v4[7] + v12) = v7;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13E1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = sub_100007E8C(&qword_1011D5948);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007E8C(&qword_1011D5950);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10004A160(v13, (uint64_t)v5, &qword_1011D5948);
    v15 = *v5;
    v16 = v5[1];
    result = sub_10079C2C4(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for SocialProfile(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A13FBC(uint64_t a1)
{
  return sub_100043490(a1, &qword_1011D5968, (uint64_t *)&unk_1011D5970, sub_10079C328);
}

unint64_t sub_100A13FD8(uint64_t a1)
{
  return sub_100043490(a1, &qword_1011D5958, &qword_1011D5960, (uint64_t (*)(uint64_t))sub_100A1FBBC);
}

void *MPModelObject.metricsDictionary.getter()
{
  void *v0;
  id v1;
  char *v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t ObjectType;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v31[2];
  __int128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[104];
  _BYTE v37[176];

  objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  v1 = v0;
  v2 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "effectiveStorePlatformDictionary");

    if (v4)
    {
      v5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      swift_bridgeObjectRelease();

      return v5;
    }
  }
  objc_opt_self(MPModelGenericObject);
  v6 = (void *)swift_dynamicCastObjCClass(v1);
  if (v6)
  {
    v7 = objc_msgSend(v6, "anyObject");
    goto LABEL_8;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v8 = (void *)swift_dynamicCastObjCClass(v1);
  if (v8)
  {
    v7 = objc_msgSend(v8, "innerObject");
LABEL_8:
    v9 = v7;
    if (v9)
      goto LABEL_10;
  }
  v9 = v1;
LABEL_10:
  ObjectType = swift_getObjectType();
  v11 = objc_msgSend(v9, "identifiers");
  v12 = sub_100A15048(ObjectType, 2, 0, v11);
  v14 = v13;

  if (v14)
  {
    v15 = sub_100007E8C(&qword_1011D5930);
    inited = swift_initStackObject(v15, v36);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyStoreID);
    v35 = v17;
    AnyHashable.init<A>(_:)(&v34, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 72) = v12;
    *(_QWORD *)(inited + 80) = v14;
    v5 = (void *)sub_100A137FC(inited);
    swift_bridgeObjectRelease();
    objc_opt_self(MPModelRadioStation);
    if (swift_dynamicCastObjCClass(v1) && v5)
    {
      *(_QWORD *)&v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyKind);
      *((_QWORD *)&v32 + 1) = v18;
      AnyHashable.init<A>(_:)(&v32, &type metadata for String, &protocol witness table for String);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindRadioStation);
      v33 = &type metadata for String;
      *(_QWORD *)&v32 = v19;
      *((_QWORD *)&v32 + 1) = v20;
      sub_100048ABC(&v32, v31);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      sub_100A14574(v31, (uint64_t)&v34, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_10004FF2C((uint64_t)&v34);
    }
  }
  else
  {
    objc_opt_self(MPModelPlaylist);
    v5 = (void *)swift_dynamicCastObjCClass(v1);
    if (v5)
    {
      v22 = MPModelPropertyPlaylistType;
      v23 = v1;
      if (objc_msgSend(v5, "hasLoadedValueForKey:", v22) && objc_msgSend(v5, "type") == (id)9)
      {
        v24 = sub_100007E8C(&qword_1011D5930);
        v25 = swift_initStackObject(v24, v37);
        *(_OWORD *)(v25 + 16) = xmmword_100EA7A80;
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyStoreID);
        v35 = v26;
        AnyHashable.init<A>(_:)(&v34, &type metadata for String, &protocol witness table for String);
        *(_QWORD *)(v25 + 96) = &type metadata for String;
        strcpy((char *)(v25 + 72), "FavoriteSongs");
        *(_WORD *)(v25 + 86) = -4864;
        v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataStorePlatformDictionaryKeyKind);
        v35 = v27;
        AnyHashable.init<A>(_:)(&v34, &type metadata for String, &protocol witness table for String);
        v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreItemMetadataItemKindPlaylist);
        *(_QWORD *)(v25 + 168) = &type metadata for String;
        *(_QWORD *)(v25 + 144) = v28;
        *(_QWORD *)(v25 + 152) = v29;
        v5 = (void *)sub_100A137FC(v25);
        swift_bridgeObjectRelease();

      }
      else
      {

        return 0;
      }
    }
  }
  return v5;
}

void *sub_100A143E4()
{
  return MPModelObject.metricsDictionary.getter();
}

void sub_100A14404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10079C2C4(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100B2C030();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      *v21 = a1;
      v21[1] = a2;
      swift_bridgeObjectRelease();
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v24 = (uint64_t *)(v20[6] + 16 * v14);
    *v24 = a3;
    v24[1] = a4;
    v25 = (_QWORD *)(v20[7] + 16 * v14);
    *v25 = a1;
    v25[1] = a2;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_100B29CBC(v17, a5 & 1);
  v22 = sub_10079C2C4(a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    v14 = v22;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

_OWORD *sub_100A14574(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_10079C294(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v17);
        return sub_100048ABC(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100B2C1D0();
      goto LABEL_7;
    }
    sub_100B29FC8(v13, a3 & 1);
    v19 = sub_10079C294(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100051FEC(a2, (uint64_t)v21);
      return sub_1005EF89C(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void sub_100A146AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10079C2C4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100B2C540();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_100B2A5A0(v15, a4 & 1);
  v20 = sub_10079C2C4(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_100A14808(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100A1FABC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
        return sub_100A156E4(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_100B2C6F4();
      goto LABEL_7;
    }
    sub_100B2A8B4(v17, a3 & 1);
    v24 = sub_100A1FABC(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_100A14EDC(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

_OWORD *sub_100A14988(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_10079C2C4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v19);
        return sub_100048ABC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100B2C9BC();
      goto LABEL_7;
    }
    sub_100B2ACD0(v15, a4 & 1);
    v21 = sub_10079C2C4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1005EF694(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100A14AB8(uint64_t a1, Swift::UInt a2, Swift::UInt a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  Swift::UInt *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100A1FB50(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100B2CBA0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (Swift::UInt *)(v18[6] + 16 * v12);
    *v21 = a2;
    v21[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return;
    }
    goto LABEL_14;
  }
  sub_100B2AFCC(v15, a4 & 1);
  v19 = sub_100A1FB50(a2, a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = v19;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for MPCPlayerRequestTracklistRange(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v25);
  __break(1u);
}

void sub_100A14BF0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_100A1FB20((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100B2CD30();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      swift_unknownObjectRelease(*(_QWORD *)(v16 + 8 * v9));
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_100B2B2A8(v12, a3 & 1);
  v17 = sub_100A1FB20((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = sub_10004A07C(0, &qword_1011D5938, MPCPlayerPath_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

uint64_t sub_100A14D50(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_100A1FABC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_100007E8C(&qword_1011D8310);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_100B2CED8();
      goto LABEL_7;
    }
    sub_100B2B57C(v17, a3 & 1);
    v24 = sub_100A1FABC(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_100A14F8C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

uint64_t sub_100A14EDC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  result = sub_100A156A0(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_100A14F8C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_100007E8C(&qword_1011D8310);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_100A15048(uint64_t a1, uint64_t a2, unsigned __int8 a3, void *a4)
{
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Class isa;
  id v31;

  v5 = a2;
  if (a3 > 1u)
    __asm { BR              X9 }
  v7 = sub_10004A07C(0, &qword_1011D59F8, MPModelPlaylist_ptr);
  if (!swift_dynamicCastMetatype(a1, v7))
  {
    v10 = sub_10004A07C(0, &qword_1011D5A00, MPModelSocialPerson_ptr);
    if (swift_dynamicCastMetatype(a1, v10))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v11)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      v17 = objc_msgSend(a4, "universalStore");
      if (!v17)
        return MPIdentifierSet.bestStoreIdentifier.getter();
      v14 = v17;
      v15 = objc_msgSend(v17, "socialProfileID");
      goto LABEL_24;
    }
    v12 = sub_10004A07C(0, qword_1011D5A08, MPModelRadioStation_ptr);
    if (!swift_dynamicCastMetatype(a1, v12))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v16)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0)
      return 0;
    v23 = objc_msgSend(a4, "radio");
    if (!v23)
      return 0;
    v24 = v23;
    v25 = objc_msgSend(v23, "stationStringID");
    if (v25)
    {
      v26 = v25;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0)
        v29 = v19 & 0xFFFFFFFFFFFFLL;
      if (v29)
      {
LABEL_40:
        swift_unknownObjectRelease(v24);
        return v19;
      }
      swift_bridgeObjectRelease(v28);
    }
    if (!objc_msgSend(v24, "stationID")
      || (objc_msgSend(v24, "stationID"),
          isa = Int64._bridgeToObjectiveC()().super.super.isa,
          v31 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
          isa,
          !v31))
    {
      swift_unknownObjectRelease(v24);
      return 0;
    }
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);

    goto LABEL_40;
  }
  if ((v5 & 1) != 0)
  {
    v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v9)
      return v8;
  }
  if ((v5 & 2) == 0)
    return 0;
  v13 = objc_msgSend(a4, "universalStore");
  if (!v13)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v14 = v13;
  v15 = objc_msgSend(v13, "globalPlaylistID");
LABEL_24:
  v18 = v15;
  swift_unknownObjectRelease(v14);
  if (!v18)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    swift_bridgeObjectRelease(v21);
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v19;
}

unint64_t sub_100A154C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C((uint64_t *)&unk_1011DAFF0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_10079C9A8(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100A15594(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100007E8C(&qword_1011D5940);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v4 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_10079C9A8(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_BYTE *)v9 - 16);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_10079C9A8(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100A156A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A156E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A15728(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 96);
}

uint64_t sub_100A1576C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for MetricsEventSampler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsEventSampler);
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, unsigned __int16 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t *v35;
  int *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  unsigned int (*v42)(uint64_t *, uint64_t, int *);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t *v53;
  unsigned int v54;
  uint64_t v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v61;
  _BYTE v62[4];
  int v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t *v71;
  _BYTE *v72;
  uint64_t v73;

  v73 = a8;
  v68 = a6;
  v69 = a7;
  v64 = a5;
  v63 = a4;
  v67 = a12;
  v66 = a11;
  v65 = a10;
  v18 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v18);
  v70 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_100007E8C(&qword_1011D3860);
  v21 = __chkstk_darwin(v20);
  v72 = &v62[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __chkstk_darwin(v21);
  v71 = (uint64_t *)&v62[-v24];
  v25 = __chkstk_darwin(v23);
  v27 = (uint64_t *)&v62[-v26];
  v28 = __chkstk_darwin(v25);
  v30 = (uint64_t *)&v62[-v29];
  v31 = __chkstk_darwin(v28);
  v33 = &v62[-v32];
  __chkstk_darwin(v31);
  v35 = (uint64_t *)&v62[-v34];
  v36 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(a9 + v36[18]) = 0;
  v37 = (_QWORD *)(a9 + v36[19]);
  *v37 = 0;
  v37[1] = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = v63;
  sub_100065228(v64, a9 + v36[7], &qword_1011D2AE0);
  *(_QWORD *)(a9 + v36[8]) = v68;
  v38 = (_QWORD *)(a9 + v36[9]);
  v39 = v73;
  *v38 = v69;
  v38[1] = v39;
  v40 = a9 + v36[10];
  *(_OWORD *)v40 = v65;
  *(_QWORD *)(v40 + 16) = v66;
  *(_WORD *)(v40 + 24) = v67;
  v73 = a13;
  sub_10004A160(a13, (uint64_t)v35, &qword_1011D3860);
  v41 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v42 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(*((_QWORD *)v41 - 1) + 48);
  if (v42(v35, 1, v41) == 1)
  {
    sub_10004FF60((uint64_t)v35, &qword_1011D3860);
    v43 = 0;
    v44 = 0;
  }
  else
  {
    v43 = *v35;
    v44 = v35[1];
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v35, type metadata accessor for MetricsEvent.Page);
  }
  v45 = (_QWORD *)(a9 + v36[12]);
  *v45 = v43;
  v45[1] = v44;
  v46 = v73;
  sub_10004A160(v73, (uint64_t)v33, &qword_1011D3860);
  if (v42((uint64_t *)v33, 1, v41) == 1)
  {
    sub_10004FF60((uint64_t)v33, &qword_1011D3860);
    v47 = 0;
    v48 = 0;
  }
  else
  {
    v47 = *((_QWORD *)v33 + 2);
    v48 = *((_QWORD *)v33 + 3);
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v33, type metadata accessor for MetricsEvent.Page);
  }
  v49 = (_QWORD *)(a9 + v36[13]);
  *v49 = v47;
  v49[1] = v48;
  sub_10004A160(v46, (uint64_t)v30, &qword_1011D3860);
  if (v42(v30, 1, v41) == 1)
  {
    sub_10004FF60((uint64_t)v30, &qword_1011D3860);
    v50 = type metadata accessor for URL(0);
    v51 = v70;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v70, 1, 1, v50);
  }
  else
  {
    v51 = v70;
    sub_10004A160((uint64_t)v30 + v41[6], (uint64_t)v70, &qword_1011D2AE0);
    sub_10005B748((uint64_t)v30, type metadata accessor for MetricsEvent.Page);
  }
  sub_100065228((uint64_t)v51, a9 + v36[14], &qword_1011D2AE0);
  sub_10004A160(v46, (uint64_t)v27, &qword_1011D3860);
  if (v42(v27, 1, v41) == 1)
  {
    sub_10004FF60((uint64_t)v27, &qword_1011D3860);
    v52 = 0;
  }
  else
  {
    v52 = *(uint64_t *)((char *)v27 + v41[7]);
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v27, type metadata accessor for MetricsEvent.Page);
  }
  *(_QWORD *)(a9 + v36[15]) = v52;
  v53 = v71;
  sub_10004A160(v46, (uint64_t)v71, &qword_1011D3860);
  v54 = v42(v53, 1, v41);
  v55 = (uint64_t)v72;
  if (v54 == 1)
  {
    sub_10004FF60((uint64_t)v53, &qword_1011D3860);
    v56 = 1;
  }
  else
  {
    v56 = *((_BYTE *)v53 + v41[9]);
    sub_10005B748((uint64_t)v53, type metadata accessor for MetricsEvent.Page);
  }
  *(_BYTE *)(a9 + v36[16]) = v56;
  sub_100065228(v73, v55, &qword_1011D3860);
  if (v42((uint64_t *)v55, 1, v41) == 1)
  {
    result = sub_10004FF60(v55, &qword_1011D3860);
    v58 = 0;
    v59 = 0;
  }
  else
  {
    v60 = (uint64_t *)(v55 + v41[8]);
    v58 = *v60;
    v59 = v60[1];
    swift_bridgeObjectRetain();
    result = sub_10005B748(v55, type metadata accessor for MetricsEvent.Page);
  }
  v61 = (_QWORD *)(a9 + v36[17]);
  *v61 = v58;
  v61[1] = v59;
  *(_QWORD *)(a9 + v36[11]) = a14;
  return result;
}

uint64_t type metadata accessor for MetricsEvent.Click(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D5C18, (uint64_t)&nominal type descriptor for MetricsEvent.Click);
}

uint64_t type metadata accessor for MetricsEvent.Page(uint64_t a1)
{
  return sub_100055934(a1, qword_1011D5B70, (uint64_t)&nominal type descriptor for MetricsEvent.Page);
}

uint64_t *MetricsReportingController.shared.unsafeMutableAddressor()
{
  if (qword_1011D1C18 != -1)
    swift_once(&qword_1011D1C18, sub_100A19B6C);
  return &static MetricsReportingController.shared;
}

uint64_t MetricsEvent.ComponentRender.init(componentIdentifier:componentType:componentAppearTime:componentPlaceholderAppearTime:componentMotionActivationTime:componentRequestTime:componentEndTime:componentInterruptTime:preloadStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  return result;
}

uint64_t sub_100A15D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id *v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void *v28;
  double v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  uint64_t v33;
  double v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  double v49;
  char *v52;
  char v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  double v64;
  char v65;
  char v66[24];

  v63 = a1;
  v2 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v2);
  v61 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v62 = (char *)&v54 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v54 - v20;
  v22 = (id *)(v1 + 16);
  swift_beginAccess(v1 + 16, v66, 0, 0);
  v23 = *(id *)(v1 + 16);
  v24 = sub_100A266DC();

  if ((v24 & 1) != 0)
    return 1;
  v55 = v18;
  v56 = v15;
  v57 = v11;
  v58 = v8;
  v59 = v13;
  v60 = v21;
  v26 = sub_100A267B4();
  v25 = 1;
  if (v26)
  {
    v28 = (void *)v26;
    v64 = 0.0;
    v65 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)(v26, &v64, v27);

    if ((v65 & 1) == 0)
    {
      v29 = v64;
      v30 = sub_100A26634();
      if (v30)
      {
        v32 = (void *)v30;
        v64 = 0.0;
        v65 = 1;
        static Double._conditionallyBridgeFromObjectiveC(_:result:)(v30, &v64, v31);

        if ((v65 & 1) == 0)
        {
          v34 = v64;
          Date.init()(v33);
          v35 = *v22;
          v36 = (uint64_t)v58;
          sub_100A2677C((uint64_t)v58);

          v37 = v59;
          v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
          v39 = v12;
          if (v38(v36, 1, v12))
          {
            sub_10004FF60(v36, &qword_1011D5D00);
            v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
            v41 = (uint64_t)v57;
            v40(v57, 1, 1, v39);
          }
          else
          {
            v42 = v56;
            (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v56, v36, v12);
            v43 = sub_10004FF60(v36, &qword_1011D5D00);
            v41 = (uint64_t)v57;
            Date.addingTimeInterval(_:)(v43, v34 / 1000.0);
            v44 = *(void (**)(char *, uint64_t))(v37 + 8);
            v44(v42, v12);
            v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
            v40((char *)v41, 0, 1, v39);
            if (v38(v41, 1, v39) != 1)
            {
              v52 = v55;
              (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v55, v41, v39);
              v47 = v60;
              v53 = static Date.< infix(_:_:)(v60, v52);
              v44(v52, v39);
              v45 = (uint64_t)v61;
              v46 = (uint64_t)v62;
              if ((v53 & 1) != 0)
              {
                v25 = 1;
                goto LABEL_20;
              }
LABEL_11:
              v48 = sub_1002A7D18(0x20000000000001uLL);
              if (v48 == 0x20000000000000)
              {
                if (v29 < 1.0)
                {
LABEL_13:
                  v25 = 0;
LABEL_19:
                  v44 = *(void (**)(char *, uint64_t))(v37 + 8);
LABEL_20:
                  v44(v47, v39);
                  return v25;
                }
              }
              else
              {
                v49 = (double)v48 * 1.11022302e-16 + 0.0;
                if (v49 <= 0.0 || v49 > v29)
                  goto LABEL_13;
              }
              (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v46, v47, v39);
              v25 = 1;
              v40((char *)v46, 0, 1, v39);
              swift_beginAccess(v22, &v64, 33, 0);
              sub_10004A160(v46, v45, &qword_1011D5D00);
              sub_100A26798(v45);
              swift_endAccess(&v64);
              sub_10004FF60(v46, &qword_1011D5D00);
              goto LABEL_19;
            }
          }
          v45 = (uint64_t)v61;
          v46 = (uint64_t)v62;
          sub_10004FF60(v41, &qword_1011D5D00);
          v47 = v60;
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t sub_100A1616C(void (*a1)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id *v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void *v28;
  double v29;
  uint64_t v30;
  __n128 v31;
  void *v32;
  uint64_t v33;
  double v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  double v52;
  char *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  double v66;
  char v67;
  char v68[24];

  v65 = a1;
  v2 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v2);
  v63 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v64 = (char *)&v56 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v22 = (id *)(v1 + 16);
  swift_beginAccess(v1 + 16, v68, 0, 0);
  v23 = *(id *)(v1 + 16);
  v24 = sub_100A26B84();

  if ((v24 & 1) != 0)
    return 1;
  v57 = v18;
  v58 = v15;
  v59 = v11;
  v60 = v8;
  v61 = v21;
  v62 = v13;
  v26 = sub_100A1F9EC();
  v25 = 1;
  if (v26)
  {
    v28 = (void *)v26;
    v66 = 0.0;
    v67 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)(v26, &v66, v27);

    if ((v67 & 1) == 0)
    {
      v29 = v66;
      v30 = sub_100A1F9EC();
      if (v30)
      {
        v32 = (void *)v30;
        v66 = 0.0;
        v67 = 1;
        static Double._conditionallyBridgeFromObjectiveC(_:result:)(v30, &v66, v31);

        if ((v67 & 1) == 0)
        {
          v34 = v66;
          v35 = v61;
          Date.init()(v33);
          v36 = *v22;
          v37 = (uint64_t)v60;
          sub_100A26BA0((uint64_t)v60);

          v38 = v62;
          v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
          v40 = v12;
          v41 = v39(v37, 1, v12);
          v42 = v35;
          if (v41)
          {
            sub_10004FF60(v37, &qword_1011D5D00);
            v43 = (uint64_t)v59;
            v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
            v65(v59, 1, 1, v40);
          }
          else
          {
            v44 = v58;
            (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v58, v37, v40);
            v45 = sub_10004FF60(v37, &qword_1011D5D00);
            v43 = (uint64_t)v59;
            Date.addingTimeInterval(_:)(v45, v34 / 1000.0);
            v46 = *(void (**)(char *, uint64_t))(v38 + 8);
            v46(v44, v40);
            v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
            v47((char *)v43, 0, 1, v40);
            v48 = v39(v43, 1, v40);
            v65 = v47;
            if (v48 != 1)
            {
              v54 = v57;
              (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v57, v43, v40);
              v55 = static Date.< infix(_:_:)(v42, v54);
              v46(v54, v40);
              v49 = (uint64_t)v63;
              v50 = (uint64_t)v64;
              if ((v55 & 1) != 0)
              {
                v25 = 1;
                goto LABEL_18;
              }
LABEL_11:
              v51 = sub_1002A7D18(0x20000000000001uLL);
              if (v51 == 0x20000000000000)
              {
                if (v29 < 1.0)
                {
                  v25 = 0;
LABEL_17:
                  v46 = *(void (**)(char *, uint64_t))(v38 + 8);
LABEL_18:
                  v46(v42, v40);
                  return v25;
                }
              }
              else
              {
                v25 = 0;
                v52 = (double)v51 * 1.11022302e-16 + 0.0;
                if (v52 <= 0.0 || v52 > v29)
                  goto LABEL_17;
              }
              (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v50, v42, v40);
              v25 = 1;
              v65((char *)v50, 0, 1, v40);
              swift_beginAccess(v22, &v66, 33, 0);
              sub_10004A160(v50, v49, &qword_1011D5D00);
              sub_100A26C84(v49);
              swift_endAccess(&v66);
              sub_10004FF60(v50, &qword_1011D5D00);
              goto LABEL_17;
            }
          }
          v49 = (uint64_t)v63;
          v50 = (uint64_t)v64;
          sub_10004FF60(v43, &qword_1011D5D00);
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t MetricsEvent.TargetType.init(contentItem:)(void *a1)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = objc_msgSend(a1, "itemType");
  switch((unint64_t)v2)
  {
    case 1uLL:

      result = 0;
      break;
    case 2uLL:

      result = 3;
      break;
    case 4uLL:

      result = 16;
      break;
    case 7uLL:

      result = 20;
      break;
    default:
      v4 = static os_log_type_t.error.getter(v2);
      v5 = sub_100007E8C(&qword_1011D4E10);
      v6 = swift_allocObject(v5, 72, 7);
      *(_OWORD *)(v6 + 16) = xmmword_100EA7AA0;
      v12 = objc_msgSend(a1, "itemType");
      type metadata accessor for MPModelStoreBrowseContentItemType(0);
      v8 = String.init<A>(describing:)(&v12, v7);
      v10 = v9;
      *(_QWORD *)(v6 + 56) = &type metadata for String;
      *(_QWORD *)(v6 + 64) = sub_1009FD048();
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v10;
      sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
      v11 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v11, "MPModelStoreBrowseContentItem.Kind.targetType: Returning nil for [targetType for this kind not yet implemented] self=%@", 119, 2, v6);

      swift_bridgeObjectRelease();
      result = 24;
      break;
  }
  return result;
}

uint64_t MetricsEvent.TargetType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A16784 + 4 * byte_100EDDA17[a1]))(0x6D75626C41, 0xE500000000000000);
}

uint64_t sub_100A16784()
{
  return 0x7465446D75626C41;
}

uint64_t sub_100A167A4()
{
  return 7368801;
}

uint64_t sub_100A167B4()
{
  return 0x747369747241;
}

uint64_t sub_100A167C8()
{
  return 0x72656E6E6162;
}

uint64_t sub_100A167DC()
{
  return 0x6E6F74747562;
}

uint64_t sub_100A167F0()
{
  return 0x6954656C62627562;
}

uint64_t sub_100A16810()
{
  return 1685217603;
}

unint64_t sub_100A16820()
{
  return 0xD000000000000011;
}

uint64_t sub_100A1683C()
{
  return 0x7265746C6966;
}

uint64_t sub_100A16850()
{
  return 0x7449726564616548;
}

uint64_t sub_100A1686C()
{
  return 0x7473694C746E6948;
}

uint64_t sub_100A1688C()
{
  return 7955819;
}

uint64_t sub_100A1689C()
{
  return 1802398060;
}

uint64_t sub_100A168AC()
{
  return 0x6E694C636972796CLL;
}

uint64_t sub_100A168C8()
{
  return 0x6D6574497473694CLL;
}

uint64_t sub_100A168E0()
{
  return 0x7473696C79616C50;
}

uint64_t sub_100A1690C()
{
  return 0x4C746E65746E6F43;
}

uint64_t sub_100A16930()
{
  return 0x726564696C73;
}

uint64_t sub_100A16944()
{
  return 1735290707;
}

uint64_t sub_100A16954()
{
  return 0x6C6C65737055;
}

uint64_t sub_100A16968()
{
  return 0x657449666C656853;
}

uint64_t sub_100A16988()
{
  return 0x6D65744964697247;
}

uint64_t sub_100A169A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100A18D98(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_100A169AC(uint64_t a1, uint64_t a2)
{
  return sub_100A18E30(a1, a2, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_100A169B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A18EA0(a1, a2, a3, (uint64_t (*)(_QWORD))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_100A169C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A18EEC(a1, a2, a3, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_100A169D0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100A169FC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MetricsEvent.TargetType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  int *v17;
  uint64_t result;
  _QWORD *v19;
  _QWORD *v20;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  v17 = (int *)type metadata accessor for MetricsEvent.Page(0);
  result = sub_100065228(a5, (uint64_t)a9 + v17[6], &qword_1011D2AE0);
  *(_QWORD *)((char *)a9 + v17[7]) = a6;
  v19 = (_QWORD *)((char *)a9 + v17[8]);
  *v19 = a7;
  v19[1] = a8;
  *((_BYTE *)a9 + v17[9]) = a10 & 1;
  v20 = (_QWORD *)((char *)a9 + v17[10]);
  *v20 = a11;
  v20[1] = a12;
  return result;
}

uint64_t static MetricsEvent.Page.contextualActionMenu(storeID:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  int *v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (a2)
    v4 = a1;
  else
    v4 = 0xD000000000000014;
  if (a2)
    v5 = a2;
  else
    v5 = 0x8000000100E4BD50;
  v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v7 = (char *)a3 + v6[6];
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = 0xD000000000000014;
  a3[3] = 0x8000000100E4BD50;
  *(unint64_t *)((char *)a3 + v6[7]) = 0;
  v9 = (unint64_t *)((char *)a3 + v6[8]);
  *v9 = 0;
  v9[1] = 0;
  *((_BYTE *)a3 + v6[9]) = 1;
  v10 = (unint64_t *)((char *)a3 + v6[10]);
  *v10 = 0;
  v10[1] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100A16BA4()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryMenuSelection);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuSelection);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000014;
  v1[1] = 0x8000000100E4C2D0;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuSelection.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1B78, (uint64_t)static MetricsEvent.Page.libraryMenuSelection, (uint64_t)sub_100A16BA4);
}

uint64_t static MetricsEvent.Page.libraryMenuSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1B78, (uint64_t)static MetricsEvent.Page.libraryMenuSelection, (uint64_t)sub_100A16BA4, a1);
}

uint64_t sub_100A16CB4()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryMenuEdit);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuEdit);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x4D7972617262694CLL;
  v1[1] = 0xEF74696445756E65;
  v1[2] = 0x72656B636950;
  v1[3] = 0xE600000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuEdit.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1B80, (uint64_t)static MetricsEvent.Page.libraryMenuEdit, (uint64_t)sub_100A16CB4);
}

uint64_t sub_100A16DAC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = type metadata accessor for MetricsEvent.Page(0);
  return sub_100048B14(v4, a2);
}

uint64_t static MetricsEvent.Page.libraryMenuEdit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1B80, (uint64_t)static MetricsEvent.Page.libraryMenuEdit, (uint64_t)sub_100A16CB4, a1);
}

uint64_t sub_100A16E08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for MetricsEvent.Page(0);
  v7 = sub_100048B14(v6, a2);
  return sub_100166414(v7, a4);
}

uint64_t sub_100A16E54()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryMadeForYou);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMadeForYou);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x59726F466564614DLL;
  v1[1] = 0xEA0000000000756FLL;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMadeForYou.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1B88, (uint64_t)static MetricsEvent.Page.libraryMadeForYou, (uint64_t)sub_100A16E54);
}

uint64_t static MetricsEvent.Page.libraryMadeForYou.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1B88, (uint64_t)static MetricsEvent.Page.libraryMadeForYou, (uint64_t)sub_100A16E54, a1);
}

uint64_t sub_100A16F64()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryAlbumsList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000011;
  v1[1] = 0x8000000100E4C2B0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumsList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1B90, (uint64_t)static MetricsEvent.Page.libraryAlbumsList, (uint64_t)sub_100A16F64);
}

uint64_t static MetricsEvent.Page.libraryAlbumsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1B90, (uint64_t)static MetricsEvent.Page.libraryAlbumsList, (uint64_t)sub_100A16F64, a1);
}

uint64_t sub_100A1706C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryArtistsList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000012;
  v1[1] = 0x8000000100E4C290;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistsList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1B98, (uint64_t)static MetricsEvent.Page.libraryArtistsList, (uint64_t)sub_100A1706C);
}

uint64_t static MetricsEvent.Page.libraryArtistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1B98, (uint64_t)static MetricsEvent.Page.libraryArtistsList, (uint64_t)sub_100A1706C, a1);
}

uint64_t sub_100A17174()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryCompilationsList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000017;
  v1[1] = 0x8000000100E4C270;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryCompilationsList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BA0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList, (uint64_t)sub_100A17174);
}

uint64_t static MetricsEvent.Page.libraryCompilationsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BA0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList, (uint64_t)sub_100A17174, a1);
}

uint64_t sub_100A1727C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryComposersList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposersList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000014;
  v1[1] = 0x8000000100E4C250;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposersList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BA8, (uint64_t)static MetricsEvent.Page.libraryComposersList, (uint64_t)sub_100A1727C);
}

uint64_t static MetricsEvent.Page.libraryComposersList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BA8, (uint64_t)static MetricsEvent.Page.libraryComposersList, (uint64_t)sub_100A1727C, a1);
}

uint64_t sub_100A17384()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryGenresList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenresList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000011;
  v1[1] = 0x8000000100E4C230;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenresList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BB0, (uint64_t)static MetricsEvent.Page.libraryGenresList, (uint64_t)sub_100A17384);
}

uint64_t static MetricsEvent.Page.libraryGenresList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BB0, (uint64_t)static MetricsEvent.Page.libraryGenresList, (uint64_t)sub_100A17384, a1);
}

uint64_t sub_100A1748C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryMusicVideosList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000016;
  v1[1] = 0x8000000100E4C210;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryMusicVideosList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BB8, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList, (uint64_t)sub_100A1748C);
}

uint64_t static MetricsEvent.Page.libraryMusicVideosList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BB8, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList, (uint64_t)sub_100A1748C, a1);
}

uint64_t sub_100A17594()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistsList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000014;
  v1[1] = 0x8000000100E4C1F0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BC0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList, (uint64_t)sub_100A17594);
}

uint64_t static MetricsEvent.Page.libraryPlaylistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BC0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList, (uint64_t)sub_100A17594, a1);
}

uint64_t sub_100A1769C()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.librarySongsList);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.librarySongsList);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000010;
  v1[1] = 0x8000000100E4C1D0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.librarySongsList.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BC8, (uint64_t)static MetricsEvent.Page.librarySongsList, (uint64_t)sub_100A1769C);
}

uint64_t static MetricsEvent.Page.librarySongsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BC8, (uint64_t)static MetricsEvent.Page.librarySongsList, (uint64_t)sub_100A1769C, a1);
}

uint64_t sub_100A177A4()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyAdded);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000018;
  v1[1] = 0x8000000100E4C1B0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyAdded.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BD0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded, (uint64_t)sub_100A177A4);
}

uint64_t static MetricsEvent.Page.libraryRecentlyAdded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BD0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded, (uint64_t)sub_100A177A4, a1);
}

uint64_t sub_100A178AC()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyDownloaded);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD00000000000001DLL;
  v1[1] = 0x8000000100E4C190;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyDownloaded.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BD8, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded, (uint64_t)sub_100A178AC);
}

uint64_t static MetricsEvent.Page.libraryRecentlyDownloaded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BD8, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded, (uint64_t)sub_100A178AC, a1);
}

uint64_t sub_100A179B4()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryAlbumDetail);
  v1 = sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail);
  v2 = v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryAlbum");
  *(_BYTE *)(v1 + 13) = 0;
  *(_WORD *)(v1 + 14) = -5120;
  *(_QWORD *)(v1 + 16) = 0x6D75626C41;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  *(_QWORD *)(v1 + v0[7]) = 0;
  v5 = (_QWORD *)(v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v0[9]) = 1;
  v6 = (_QWORD *)(v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumDetail.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BE0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail, (uint64_t)sub_100A179B4);
}

uint64_t static MetricsEvent.Page.libraryAlbumDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BE0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail, (uint64_t)sub_100A179B4, a1);
}

uint64_t sub_100A17AC4()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryArtistDetail);
  v1 = sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistDetail);
  v2 = v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryArtist");
  *(_WORD *)(v1 + 14) = -4864;
  *(_QWORD *)(v1 + 16) = 0x747369747241;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  *(_QWORD *)(v1 + v0[7]) = 0;
  v5 = (_QWORD *)(v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v0[9]) = 1;
  v6 = (_QWORD *)(v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistDetail.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BE8, (uint64_t)static MetricsEvent.Page.libraryArtistDetail, (uint64_t)sub_100A17AC4);
}

uint64_t static MetricsEvent.Page.libraryArtistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BE8, (uint64_t)static MetricsEvent.Page.libraryArtistDetail, (uint64_t)sub_100A17AC4, a1);
}

uint64_t sub_100A17BD8()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistDetail);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x507972617262694CLL;
  v1[1] = 0xEF7473696C79616CLL;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BF0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail, (uint64_t)sub_100A17BD8);
}

uint64_t static MetricsEvent.Page.libraryPlaylistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BF0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail, (uint64_t)sub_100A17BD8, a1);
}

uint64_t sub_100A17CF0()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryComposerDetail);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposerDetail);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x437972617262694CLL;
  v1[1] = 0xEF7265736F706D6FLL;
  v1[2] = 0x747369747241;
  v1[3] = 0xE600000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposerDetail.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1BF8, (uint64_t)static MetricsEvent.Page.libraryComposerDetail, (uint64_t)sub_100A17CF0);
}

uint64_t static MetricsEvent.Page.libraryComposerDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1BF8, (uint64_t)static MetricsEvent.Page.libraryComposerDetail, (uint64_t)sub_100A17CF0, a1);
}

uint64_t sub_100A17E04()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.libraryGenreDetail);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0xD000000000000012;
  v1[1] = 0x8000000100E4C170;
  v1[2] = 0x65726E6547;
  v1[3] = 0xE500000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 1;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenreDetail.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1C00, (uint64_t)static MetricsEvent.Page.libraryGenreDetail, (uint64_t)sub_100A17E04);
}

uint64_t static MetricsEvent.Page.libraryGenreDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1C00, (uint64_t)static MetricsEvent.Page.libraryGenreDetail, (uint64_t)sub_100A17E04, a1);
}

uint64_t sub_100A17F10()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.playlistCreation);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistCreation);
  v2 = (char *)v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *v1 = 0x6C79616C5077654ELL;
  v1[1] = 0xEB00000000747369;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(_QWORD *)((char *)v1 + v0[7]) = 0;
  v5 = (_QWORD *)((char *)v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + v0[9]) = 0;
  v6 = (_QWORD *)((char *)v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.playlistCreation.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1C08, (uint64_t)static MetricsEvent.Page.playlistCreation, (uint64_t)sub_100A17F10);
}

uint64_t static MetricsEvent.Page.playlistCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1C08, (uint64_t)static MetricsEvent.Page.playlistCreation, (uint64_t)sub_100A17F10, a1);
}

uint64_t sub_100A18020()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004FACC((uint64_t)v0, static MetricsEvent.Page.playlistPicker);
  v1 = sub_100048B14((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistPicker);
  v2 = v1 + v0[6];
  v3 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "PlaylistPicker");
  *(_BYTE *)(v1 + 15) = -18;
  *(_QWORD *)(v1 + 16) = 0x72656B636950;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  *(_QWORD *)(v1 + v0[7]) = 0;
  v5 = (_QWORD *)(v1 + v0[8]);
  *v5 = 0;
  v5[1] = 0;
  *(_BYTE *)(v1 + v0[9]) = 0;
  v6 = (_QWORD *)(v1 + v0[10]);
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t MetricsEvent.Page.playlistPicker.unsafeMutableAddressor()
{
  return sub_100A16DAC(&qword_1011D1C10, (uint64_t)static MetricsEvent.Page.playlistPicker, (uint64_t)sub_100A18020);
}

uint64_t static MetricsEvent.Page.playlistPicker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A16E08(&qword_1011D1C10, (uint64_t)static MetricsEvent.Page.playlistPicker, (uint64_t)sub_100A18020, a1);
}

void MetricsEvent.Page.metricsPageProperties.getter(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = v1[3];
  v18 = v1[2];
  v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_10004A160((uint64_t)v1 + v9[6], (uint64_t)v5, &qword_1011D2AE0);
  v10 = *(uint64_t *)((char *)v1 + v9[7]);
  v11 = (uint64_t *)((char *)v1 + v9[10]);
  v12 = v11[1];
  v19 = *v11;
  v13 = (int *)type metadata accessor for MetricsPageProperties(0);
  v14 = (uint64_t)a1 + v13[6];
  v15 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v13[7];
  *(_QWORD *)((char *)a1 + v16) = 0;
  v17 = (_QWORD *)((char *)a1 + v13[8]);
  *v17 = 0;
  v17[1] = 0;
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v18;
  a1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100A202C4((uint64_t)v5, v14);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v16));
  *(_QWORD *)((char *)a1 + v16) = v10;
  swift_bridgeObjectRelease(v17[1]);
  *v17 = v19;
  v17[1] = v12;
}

BOOL MetricsEvent.Page.DisplayType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6328, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t MetricsEvent.Page.DisplayType.rawValue.getter()
{
  return 0x7765695664726163;
}

Swift::Int sub_100A182F0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0x7765695664726163, 0xE800000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100A18340(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7765695664726163, 0xE800000000000000);
}

Swift::Int sub_100A18358(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0x7765695664726163, 0xE800000000000000);
  return Hasher._finalize()();
}

uint64_t sub_100A183A4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6360, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100A183F4(_QWORD *a1@<X8>)
{
  *a1 = 0x7765695664726163;
  a1[1] = 0xE800000000000000;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t result;
  _QWORD *v35;

  v28 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(a9 + v28[18]) = 0;
  v29 = (_QWORD *)(a9 + v28[19]);
  *v29 = 0;
  v29[1] = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 17) = a4;
  sub_100065228(a5, a9 + v28[7], &qword_1011D2AE0);
  *(_QWORD *)(a9 + v28[8]) = a6;
  v30 = (_QWORD *)(a9 + v28[9]);
  *v30 = a7;
  v30[1] = a8;
  v31 = a9 + v28[10];
  *(_OWORD *)v31 = a10;
  *(_QWORD *)(v31 + 16) = a11;
  *(_WORD *)(v31 + 24) = a12;
  v32 = (_QWORD *)(a9 + v28[12]);
  *v32 = a13;
  v32[1] = a14;
  v33 = (_QWORD *)(a9 + v28[13]);
  *v33 = a15;
  v33[1] = a16;
  result = sub_100065228(a17, a9 + v28[14], &qword_1011D2AE0);
  *(_QWORD *)(a9 + v28[15]) = a18;
  *(_BYTE *)(a9 + v28[16]) = a19 & 1;
  *(_QWORD *)(a9 + v28[11]) = a20;
  v35 = (_QWORD *)(a9 + v28[17]);
  *v35 = a21;
  v35[1] = a22;
  return result;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, unsigned __int16 a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t result;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a7;
  v44 = a8;
  v38 = a5;
  v36 = a3;
  v37 = a4;
  v42 = a12;
  v40 = a11;
  v41 = a6;
  v39 = a10;
  v45 = a14;
  v17 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a13[1];
  v21 = a13[2];
  v22 = a13[3];
  v34 = *a13;
  v35 = v21;
  v23 = type metadata accessor for MetricsPageProperties(0);
  sub_10004A160((uint64_t)a13 + *(int *)(v23 + 24), (uint64_t)v19, &qword_1011D2AE0);
  v24 = *(uint64_t *)((char *)a13 + *(int *)(v23 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10005B748((uint64_t)a13, type metadata accessor for MetricsPageProperties);
  v25 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(a9 + v25[18]) = 0;
  v26 = (_QWORD *)(a9 + v25[19]);
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v36;
  *(_BYTE *)(a9 + 17) = v37;
  sub_100065228(v38, a9 + v25[7], &qword_1011D2AE0);
  *(_QWORD *)(a9 + v25[8]) = v41;
  v27 = (_QWORD *)(a9 + v25[9]);
  v28 = v44;
  *v27 = v43;
  v27[1] = v28;
  v29 = a9 + v25[10];
  *(_OWORD *)v29 = v39;
  *(_QWORD *)(v29 + 16) = v40;
  *(_WORD *)(v29 + 24) = v42;
  v30 = (_QWORD *)(a9 + v25[12]);
  *v30 = v34;
  v30[1] = v20;
  v31 = (_QWORD *)(a9 + v25[13]);
  *v31 = v35;
  v31[1] = v22;
  result = sub_100065228((uint64_t)v19, a9 + v25[14], &qword_1011D2AE0);
  *(_QWORD *)(a9 + v25[15]) = v24;
  *(_BYTE *)(a9 + v25[16]) = 1;
  *(_QWORD *)(a9 + v25[11]) = v45;
  v33 = (_QWORD *)(a9 + v25[17]);
  *v33 = 0;
  v33[1] = 0;
  return result;
}

uint64_t MetricsEvent.Click.isSharedContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 72));
}

uint64_t MetricsEvent.Click.isSharedContent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MetricsEvent.Click(0);
  *(_BYTE *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

double (*MetricsEvent.Click.isSharedContent.modify())(_QWORD)
{
  type metadata accessor for MetricsEvent.Click(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.Click.dataRecoDataSetId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

void MetricsEvent.Click.dataRecoDataSetId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 76));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*MetricsEvent.Click.dataRecoDataSetId.modify())(_QWORD)
{
  type metadata accessor for MetricsEvent.Click(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.Click.ActionType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A1890C + 4 * word_100EDDA30[a1]))(0x6E6F69746361, 0xE600000000000000);
}

uint64_t sub_100A1890C()
{
  return 0x6574617669746361;
}

uint64_t sub_100A18924()
{
  return 6579297;
}

uint64_t sub_100A18934()
{
  return 0x62694C6F54646461;
}

uint64_t sub_100A18954()
{
  return 0x6575516F54646461;
}

uint64_t sub_100A18974()
{
  return 0x7473756A6461;
}

uint64_t sub_100A18984()
{
  return 0x616C506E69676562;
}

uint64_t sub_100A189A8()
{
  return 0x6C65636E6163;
}

uint64_t sub_100A189B8()
{
  return 0x726F62616C6C6F63;
}

uint64_t sub_100A189D8()
{
  return 0x657461657263;
}

uint64_t sub_100A189E8()
{
  return 0x7453657461657263;
}

unint64_t sub_100A18A0C()
{
  return 0xD000000000000015;
}

unint64_t sub_100A18BD0()
{
  return 0xD000000000000012;
}

uint64_t sub_100A18BEC()
{
  return 0x6F4374726F706572;
}

uint64_t sub_100A18C10()
{
  return 0x686372616573;
}

uint64_t sub_100A18C20()
{
  return 0x7463656C6573;
}

uint64_t sub_100A18C30()
{
  return 0x6572616873;
}

uint64_t sub_100A18C44()
{
  return 0x694C646572616873;
}

uint64_t sub_100A18C68()
{
  return 0x72794C6572616873;
}

uint64_t sub_100A18C88()
{
  return 0x6972794C776F6873;
}

uint64_t sub_100A18CA8()
{
  return 0x74696D627573;
}

uint64_t sub_100A18CB8()
{
  return 0x656C67676F74;
}

uint64_t sub_100A18CC8()
{
  return 0x75626C4177656976;
}

uint64_t sub_100A18CE8()
{
  return 0x6974724177656976;
}

uint64_t sub_100A18D08()
{
  return 0x6465724377656976;
}

uint64_t sub_100A18D28()
{
  return 0x79616C5077656976;
}

uint64_t sub_100A18D48()
{
  return 0x77656976657270;
}

uint64_t sub_100A18D60()
{
  return 0x6573756170;
}

uint64_t sub_100A18D74()
{
  return 0x68736572666572;
}

uint64_t sub_100A18D8C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100A18D98(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_100A18D98(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  v10 = a5(v6);
  if (v7 == v10 && v9 == v11)
  {
    v14 = 1;
    v13 = v9;
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
  }
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  return v14 & 1;
}

Swift::Int sub_100A18E24(uint64_t a1, uint64_t a2)
{
  return sub_100A18E30(a1, a2, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_100A18E30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  v5 = *v3;
  Hasher.init(_seed:)(v10, 0);
  v6 = a3(v5);
  v8 = v7;
  String.hash(into:)(v10, v6, v7);
  swift_bridgeObjectRelease(v8);
  return Hasher._finalize()();
}

uint64_t sub_100A18E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A18EA0(a1, a2, a3, (uint64_t (*)(_QWORD))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_100A18EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  unsigned __int8 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a4(*v4);
  v8 = v7;
  String.hash(into:)(a1, v6, v7);
  return swift_bridgeObjectRelease(v8);
}

Swift::Int sub_100A18EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A18EEC(a1, a2, a3, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_100A18EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  v6 = *v4;
  Hasher.init(_seed:)(v11, a1);
  v7 = a4(v6);
  v9 = v8;
  String.hash(into:)(v11, v7, v8);
  swift_bridgeObjectRelease(v9);
  return Hasher._finalize()();
}

uint64_t sub_100A18F4C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100A18F78@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MetricsEvent.Click.ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t MetricsEvent.Click.ActionContext.rawValue.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = 0x6472616F6279656BLL;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      v2 = 0x79726F7473;
      break;
    case 2uLL:
      v2 = 1701998445;
      break;
    case 3uLL:
      v2 = 0x636972796CLL;
      break;
    case 4uLL:
      v2 = 0x6B63617274;
      break;
    case 5uLL:
    case 8uLL:
      v2 = 0xD000000000000010;
      break;
    case 6uLL:
      v2 = 0xD000000000000015;
      break;
    case 7uLL:
      v2 = 0x6E654D6570697773;
      break;
    default:
      v2 = a1;
      break;
  }
  sub_10064B124(a1, a2);
  return v2;
}

uint64_t sub_100A190B8(uint64_t *a1, uint64_t a2)
{
  return _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

void MetricsEvent.Click.ActionDetails.dictionary.getter(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  __asm { BR              X10 }
}

unint64_t sub_100A19110()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v5;

  v1 = sub_100007E8C(&qword_1011D5A98);
  inited = swift_initStackObject(v1, &v5);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  strcpy((char *)(inited + 32), "actionSubType");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = MetricsEvent.Click.ActionType.rawValue.getter(v0);
  *(_QWORD *)(inited + 56) = v3;
  return sub_100A13330(inited);
}

uint64_t MetricsEvent.ComponentRender.PreloadStatus.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A19604 + 4 * byte_100EDDA99[a1]))(1819047270, 0xE400000000000000);
}

uint64_t sub_100A19604()
{
  return 0x6C616974726170;
}

uint64_t sub_100A1961C()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_100A1963C()
{
  return 0x73756F6976657270;
}

void sub_100A19660(char *a1)
{
  sub_1009A5608(*a1);
}

void sub_100A1966C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_100A196B0()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C616974726170, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_100A19734()
{
  __asm { BR              X10 }
}

uint64_t sub_100A19768(uint64_t a1)
{
  String.hash(into:)(a1, 0x6C616974726170, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100A197D8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100A19818()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C616974726170, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_100A1989C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A198C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100A198F0 + 4 * byte_100EDDAA9[*v0]))();
}

void sub_100A198F0(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616974726170;
  a1[1] = 0xE700000000000000;
}

void sub_100A1990C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F686563616C70;
  a1[1] = 0xEB00000000726564;
}

void sub_100A19930(_QWORD *a1@<X8>)
{
  *a1 = 0x73756F6976657270;
  a1[1] = 0xEF6E776F6853796CLL;
}

uint64_t SharePlayTogetherSession.Participant.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t MetricsEvent.ComponentRender.componentType.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

void *Library.Menu.Request.mediaPickerConfiguration.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void MPCPlaybackEngine.Configuration.fallbackPlaybackIntent.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

void GroupActivitiesManager.Activity.Metadata.previewImage.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

void *MetricsEvent.ComponentRender.componentMotionActivationTime.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentMotionActivationTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

double (*Library.Menu.Request.filtersToAvailableContentGroups.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id PlaylistCovers.Cover.Representation.textColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

void MetricsEvent.ComponentRender.componentRequestTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
}

void *MetricsEvent.ComponentRender.componentEndTime.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentEndTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
}

double (*PresentationSource.configurationHandler.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

void *MetricsEvent.ComponentRender.componentInterruptTime.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentInterruptTime.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
}

double (*MetricsEvent.ComponentRender.componentInterruptTime.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

double (*LibraryModelRequest.scopedContainers.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

id sub_100A19B6C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MetricsReportingController()), "init");
  static MetricsReportingController.shared = (uint64_t)result;
  return result;
}

id static MetricsReportingController.shared.getter()
{
  if (qword_1011D1C18 != -1)
    swift_once(&qword_1011D1C18, sub_100A19B6C);
  return (id)static MetricsReportingController.shared;
}

void MetricsReportingController.recordPerformanceMetrics(for:)(void *a1)
{
  id v1;
  id v2;
  MusicCore::MetricsEvent::LoadUrl v3;

  if (a1)
  {
    v1 = objc_msgSend(a1, "performanceMetrics");
    if (v1)
    {
      v2 = v1;
      sub_100A2035C(v2, (uint64_t)&v3);
      MetricsReportingController.recordLoadUrlEvent(_:)(&v3);
      sub_100A207A8(&v3);

    }
  }
}

void MetricsReportingController.recordPageEvent(_:pageContext:sharedListeningContext:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  Class isa;
  NSString v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  id v51;
  void *v52;
  double v53;
  NSString v54;
  uint64_t v55;
  id v56;
  NSDictionary v57;
  NSString v58;
  uint64_t *v59;
  uint64_t v60;
  char **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t inited;
  Class v65;
  uint64_t v66;
  uint64_t v67;
  Class v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  Class v76;
  Class v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Class v83;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  unint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101[80];
  _QWORD aBlock[7];

  v92 = a5;
  v95 = a4;
  v9 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v24 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v24 & 1) != 0)
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)SSMetricsPageEvent), "init");
    v91 = a6;
    v93 = v11;
    v26 = v25;
    if (a3)
      v27 = String._bridgeToObjectiveC()();
    else
      v27 = 0;
    objc_msgSend(v25, "setPageContext:", v27, v91);

    v29 = *a1;
    v28 = a1[1];
    v30 = v25;
    swift_bridgeObjectRetain();
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v30, "setProperty:forBodyKey:", v31, v32);

    v34 = a1[2];
    v33 = a1[3];
    v96 = a1;
    v35 = v30;
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v35, "setPageType:", v36);

    v94 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    v37 = *(void **)&v97[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v37)
    {
      v38 = sub_100007E8C(&qword_1011D5AA8);
      v39 = swift_allocObject(v38, 96, 7);
      *(_OWORD *)(v39 + 16) = xmmword_100EA7A80;
      *(_QWORD *)(v39 + 32) = v34;
      *(_QWORD *)(v39 + 40) = v33;
      *(_QWORD *)(v39 + 88) = &type metadata for String;
      *(_QWORD *)(v39 + 56) = &type metadata for String;
      *(_QWORD *)(v39 + 64) = v29;
      *(_QWORD *)(v39 + 72) = v28;
      v40 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41 = v37;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v43 = objc_msgSend(v41, "compoundStringWithElements:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      if (v43)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v43);

        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v44 = v35;
      v43 = 0;
    }
    v45 = v96;
    v46 = (uint64_t)v93;
    objc_msgSend(v35, "setPageDescription:", v43);

    v47 = (int *)type metadata accessor for MetricsEvent.Page(0);
    sub_10004A160((uint64_t)v45 + v47[6], v46, &qword_1011D2AE0);
    v48 = type metadata accessor for URL(0);
    v49 = *(_QWORD *)(v48 - 8);
    v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v48);
    v51 = v35;
    v52 = v51;
    if (v50 == 1)
    {
      sub_10004FF60(v46, &qword_1011D2AE0);
      v54 = 0;
    }
    else
    {
      URL.absoluteString.getter(v51);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v46, v48);
      v54 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v53 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v52, "setPageURL:", v54, v53);

    v55 = *(_QWORD *)((char *)v45 + v47[7]);
    v56 = v52;
    if (v55)
    {
      swift_bridgeObjectRetain();
      v57.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v57.super.isa = 0;
    }
    v58 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "setProperty:forBodyKey:", v57.super.isa, v58);

    swift_unknownObjectRelease(v57.super.isa);
    v59 = (_QWORD *)((char *)v45 + v47[8]);
    v60 = v59[1];
    v61 = &selRef_handleVolumeDownButton;
    if (v60)
    {
      v62 = *v59;
      v63 = sub_100007E8C(&qword_1011DBD80);
      inited = swift_initStackObject(v63, &v98);
      *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(inited + 32) = 0x6554686372616573;
      *(_QWORD *)(inited + 40) = 0xEA00000000006D72;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = v62;
      *(_QWORD *)(inited + 56) = v60;
      v61 = &selRef_handleVolumeDownButton;
      swift_bridgeObjectRetain();
      sub_100A13450(inited);
      v65 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v52, "addPropertiesWithDictionary:", v65, swift_bridgeObjectRelease().n128_f64[0]);

    }
    if ((*((_BYTE *)v45 + v47[9]) & 1) == 0)
    {
      v66 = sub_100007E8C(&qword_1011DBD80);
      v67 = swift_initStackObject(v66, &v99);
      *(_OWORD *)(v67 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v67 + 32) = 0x7073694465676170;
      *(_QWORD *)(v67 + 40) = 0xEF6570795479616CLL;
      *(_QWORD *)(v67 + 72) = &type metadata for String;
      *(_QWORD *)(v67 + 48) = 0x7765695664726163;
      *(_QWORD *)(v67 + 56) = 0xE800000000000000;
      sub_100A13450(v67);
      v68 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v52, v61[308], v68, swift_bridgeObjectRelease().n128_f64[0]);

    }
    if (v55)
    {
      if (*(_QWORD *)(v55 + 16))
      {
        v69 = sub_10079C2C4(0x4974655361746164, 0xE900000000000064);
        if ((v70 & 1) != 0)
        {
          v71 = (uint64_t *)(*(_QWORD *)(v55 + 56) + 16 * v69);
          v73 = *v71;
          v72 = v71[1];
          v74 = sub_100007E8C(&qword_1011DBD80);
          v75 = swift_initStackObject(v74, &v100);
          *(_OWORD *)(v75 + 16) = xmmword_100EA7AA0;
          *(_QWORD *)(v75 + 32) = 0x4974655361746164;
          *(_QWORD *)(v75 + 40) = 0xE900000000000064;
          *(_QWORD *)(v75 + 72) = &type metadata for String;
          *(_QWORD *)(v75 + 48) = v73;
          *(_QWORD *)(v75 + 56) = v72;
          v45 = v96;
          swift_bridgeObjectRetain();
          sub_100A13450(v75);
          v76 = Dictionary._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v52, "addPropertiesWithDictionary:", v76, swift_bridgeObjectRelease().n128_f64[0]);

        }
      }
    }
    if (v95 != 2 && sub_100A20144(v95 & 1, v92, v91))
    {
      v77 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v52, "addPropertiesWithDictionary:", v77, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v78 = (_QWORD *)((char *)v45 + v47[10]);
    v79 = v78[1];
    if (v79)
    {
      v80 = *v78;
      v81 = sub_100007E8C(&qword_1011DBD80);
      v82 = swift_initStackObject(v81, v101);
      *(_OWORD *)(v82 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v82 + 32) = 0x7255666552747865;
      *(_QWORD *)(v82 + 40) = 0xE90000000000006CLL;
      *(_QWORD *)(v82 + 72) = &type metadata for String;
      *(_QWORD *)(v82 + 48) = v80;
      *(_QWORD *)(v82 + 56) = v79;
      swift_bridgeObjectRetain();
      sub_100A13450(v82);
      v83 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v52, "addPropertiesWithDictionary:", v83, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v84 = v97;
    v85 = *(void **)&v97[v94];
    v86 = swift_allocObject(&unk_1010EFD50, 32, 7);
    *(_QWORD *)(v86 + 16) = v84;
    *(_QWORD *)(v86 + 24) = v52;
    aBlock[4] = sub_100A2085C;
    aBlock[5] = v86;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010EFD68;
    v87 = _Block_copy(aBlock);
    v88 = v85;
    v89 = v84;
    v90 = v52;
    objc_msgSend(v90, "setStandardPropertiesWith:completionHandler:", v88, v87, swift_release().n128_f64[0]);
    _Block_release(v87);

  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordImpressionsEvent(_:with:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  id v29;
  NSString v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  NSString v33;
  NSString v34;
  double v35;
  NSString v36;
  uint64_t v37;
  uint64_t inited;
  Class isa;
  Class v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD aBlock[6];
  char v54[88];

  v51 = a5;
  v49 = a6;
  v50 = a7;
  v10 = sub_100007E8C(&qword_1011D5AB0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - v14;
  v16 = type metadata accessor for DispatchPredicate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v19 = static OS_dispatch_queue.main.getter(v20, v21, v22, v23, v24, v25, v26, v27);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v28 = _dispatchPreconditionTest(_:)(v19);
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if ((v28 & 1) != 0)
  {
    v29 = objc_msgSend(objc_allocWithZone((Class)SSMetricsBaseEvent), "init");
    if (a4)
      v30 = String._bridgeToObjectiveC()();
    else
      v30 = 0;
    objc_msgSend(v29, "setPageContext:", v30);

    sub_10004A160(a2, (uint64_t)v15, &qword_1011D5AB0);
    v31 = type metadata accessor for MetricsPageProperties(0);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
    if (v32(v15, 1, v31) == 1)
    {
      sub_10004FF60((uint64_t)v15, &qword_1011D5AB0);
      v33 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10005B748((uint64_t)v15, type metadata accessor for MetricsPageProperties);
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v34 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setProperty:forBodyKey:", v33, v34);
    swift_unknownObjectRelease(v33);

    sub_10004A160(a2, (uint64_t)v12, &qword_1011D5AB0);
    if (v32(v12, 1, v31) == 1)
    {
      sub_10004FF60((uint64_t)v12, &qword_1011D5AB0);
      v36 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10005B748((uint64_t)v12, type metadata accessor for MetricsPageProperties);
      v36 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v35 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v29, "setPageType:", v36, v35);

    objc_msgSend(v29, "setEventType:", SSMetricsEventTypeImpressions);
    v37 = sub_100007E8C(&qword_1011DBD80);
    inited = swift_initStackObject(v37, v54);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = 0x6973736572706D69;
    *(_QWORD *)(inited + 40) = 0xEB00000000736E6FLL;
    *(_QWORD *)(inited + 72) = sub_100007E8C(&qword_1011D5AB8);
    *(_QWORD *)(inited + 48) = a1;
    swift_bridgeObjectRetain();
    sub_100A13450(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "addPropertiesWithDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    if (v51 != 2)
    {
      if (sub_100A20144(v51 & 1, v49, v50))
      {
        v40 = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v29, "addPropertiesWithDictionary:", v40, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
    v41 = v52;
    v42 = *(void **)&v52[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v43 = swift_allocObject(&unk_1010EFDA0, 32, 7);
    *(_QWORD *)(v43 + 16) = v41;
    *(_QWORD *)(v43 + 24) = v29;
    aBlock[4] = sub_100A2089C;
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010EFDB8;
    v44 = _Block_copy(aBlock);
    v45 = v42;
    v46 = v41;
    v47 = v29;
    objc_msgSend(v47, "setStandardPropertiesWith:completionHandler:", v45, v44, swift_release().n128_f64[0]);
    _Block_release(v44);

  }
  else
  {
    __break(1u);
  }
}

double sub_100A1A9C0(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v8;
  id v9;
  id v10;
  double result;

  sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v8 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = a1;
  v10 = a2;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(a4, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void MetricsReportingController.recordSearchEvent(_:pageContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  id v24;
  NSString v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  NSString v38;
  NSString v39;
  NSString v40;
  id v41;
  uint64_t *v42;
  unint64_t v43;
  id v44;
  NSString v45;
  id v46;
  NSString v47;
  id v48;
  NSDictionary v49;
  id v50;
  NSString v51;
  id v52;
  NSString v53;
  id v54;
  NSString v55;
  id v56;
  NSArray v57;
  id v58;
  NSString v59;
  NSString v60;
  void *v61;
  uint64_t v62;
  void *v63;
  id v64;
  char *v65;
  id v66;
  _QWORD aBlock[6];

  v4 = v3;
  v7 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (_QWORD *)((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v22 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v22 & 1) != 0)
  {
    v23 = objc_msgSend(objc_allocWithZone((Class)SSMetricsSearchEvent), "init");
    v24 = v23;
    if (a3)
      v25 = String._bridgeToObjectiveC()();
    else
      v25 = 0;
    objc_msgSend(v23, "setPageContext:", v25);

    v26 = (int *)type metadata accessor for MetricsEvent.Click(0);
    v27 = 0;
    v28 = a1 + v26[10];
    v29 = *(unsigned __int16 *)(v28 + 24);
    if (v29 >> 8 <= 0xFE)
    {
      MetricsEvent.Click.ActionDetails.dictionary.getter(*(_QWORD *)v28, *(_QWORD *)(v28 + 8), *(_QWORD *)(v28 + 16), v29);
      if (v30)
      {
        aBlock[0] = v30;
        v31 = sub_100007E8C(&qword_1011D5AC0);
        v27 = _bridgeAnythingToObjectiveC<A>(_:)(aBlock, v31);
        sub_10004FF60((uint64_t)aBlock, &qword_1011D5AC0);
      }
      else
      {
        v27 = 0;
      }
    }
    objc_msgSend(v23, "setActionDetails:", v27);
    swift_unknownObjectRelease(v27);
    MetricsEvent.Click.ActionType.rawValue.getter(*(_BYTE *)(a1 + 17));
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setActionType:", v32, swift_bridgeObjectRelease().n128_f64[0]);

    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setTargetIdentifier:", v33);

    sub_10004A160(a1 + v26[7], (uint64_t)v9, &qword_1011D2AE0);
    v34 = type metadata accessor for URL(0);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v9, 1, v34);
    if ((_DWORD)v36 == 1)
    {
      sub_10004FF60((uint64_t)v9, &qword_1011D2AE0);
      v38 = 0;
    }
    else
    {
      URL.absoluteString.getter(v36);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v34);
      v38 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v37 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v23, "setTargetURL:", v38, v37);

    MetricsEvent.TargetType.rawValue.getter(*(_BYTE *)(a1 + 16));
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setTargetType:", v39, swift_bridgeObjectRelease().n128_f64[0]);

    v40 = *(NSString *)(a1 + v26[13] + 8);
    v41 = v23;
    if (v40)
      v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setPageType:", v40);

    v42 = (uint64_t *)(a1 + v26[9]);
    v43 = v42[1];
    if (v43 == 9)
    {
      v44 = v23;
      v45 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v42, v43);
      v46 = v23;
      v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v45, v47);

    swift_unknownObjectRelease(v45);
    if (*(_QWORD *)(a1 + v26[15]))
    {
      v48 = v23;
      swift_bridgeObjectRetain();
      v49.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v50 = v23;
      v49.super.isa = 0;
    }
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v49.super.isa, v51);

    swift_unknownObjectRelease(v49.super.isa);
    if (*(_QWORD *)(a1 + v26[12] + 8))
    {
      v52 = v23;
      swift_bridgeObjectRetain();
      v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v54 = v23;
      v53 = 0;
    }
    v55 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v53, v55);

    swift_unknownObjectRelease(v53);
    if (*(_QWORD *)(a1 + v26[8]))
    {
      v56 = v23;
      swift_bridgeObjectRetain();
      sub_100007E8C((uint64_t *)&unk_1011D8950);
      v57.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v58 = v23;
      v57.super.isa = 0;
    }
    v59 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v57.super.isa, v59);

    swift_unknownObjectRelease(v57.super.isa);
    if (*(_QWORD *)(a1 + v26[17] + 8))
      v60 = String._bridgeToObjectiveC()();
    else
      v60 = 0;
    objc_msgSend(v23, "setSearchTerm:", v60);

    v61 = *(void **)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v62 = swift_allocObject(&unk_1010EFDF0, 32, 7);
    *(_QWORD *)(v62 + 16) = v4;
    *(_QWORD *)(v62 + 24) = v23;
    aBlock[4] = sub_100A208C4;
    aBlock[5] = v62;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010EFE08;
    v63 = _Block_copy(aBlock);
    v64 = v61;
    v65 = v4;
    v66 = v23;
    objc_msgSend(v66, "setStandardPropertiesWith:completionHandler:", v64, v63, swift_release().n128_f64[0]);
    _Block_release(v63);

  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  NSString v29;
  NSString v30;
  NSString v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  NSString v37;
  id v38;
  NSArray v39;
  id v40;
  NSString v41;
  uint64_t *v42;
  unint64_t v43;
  id v44;
  NSString v45;
  id v46;
  NSString v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  Class isa;
  uint64_t v55;
  uint64_t inited;
  Class v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Class v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  Class v69;
  Class v70;
  NSString v71;
  id v72;
  id v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  NSString v78;
  NSString v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  NSString v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  Class v91;
  NSString v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  id v97;
  void *v98;
  double v99;
  NSString v100;
  id v101;
  NSDictionary v102;
  id v103;
  NSString v104;
  uint64_t v105;
  uint64_t v106;
  Class v107;
  void *v108;
  void *v109;
  uint64_t v110;
  void *v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(char *, uint64_t, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127[80];
  _QWORD aBlock[7];

  v122 = a3;
  v116 = a5;
  v117 = a6;
  v9 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v115 - v13;
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v18 = static OS_dispatch_queue.main.getter(v19, v20, v21, v22, v23, v24, v25, v26);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v27 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if ((v27 & 1) != 0)
  {
    v118 = a2;
    v28 = objc_msgSend(objc_allocWithZone((Class)SSMetricsClickEvent), "init");
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setTargetIdentifier:", v29);

    MetricsEvent.TargetType.rawValue.getter(*(_BYTE *)(a1 + 16));
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setTargetType:", v30, swift_bridgeObjectRelease().n128_f64[0]);

    MetricsEvent.Click.ActionType.rawValue.getter(*(_BYTE *)(a1 + 17));
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setActionType:", v31, swift_bridgeObjectRelease().n128_f64[0]);

    v32 = (int *)type metadata accessor for MetricsEvent.Click(0);
    sub_10004A160(a1 + v32[7], (uint64_t)v14, &qword_1011D2AE0);
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v35 = v119(v14, 1, v33);
    v120 = v33;
    v115 = v34;
    if ((_DWORD)v35 == 1)
    {
      sub_10004FF60((uint64_t)v14, &qword_1011D2AE0);
      v37 = 0;
    }
    else
    {
      URL.absoluteString.getter(v35);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v33);
      v37 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v36 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v28, "setTargetURL:", v37, v36, v115);

    if (*(_QWORD *)(a1 + v32[8]))
    {
      v38 = v28;
      swift_bridgeObjectRetain();
      sub_100007E8C((uint64_t *)&unk_1011D8950);
      v39.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = v28;
      v39.super.isa = 0;
    }
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setProperty:forBodyKey:", v39.super.isa, v41);

    swift_unknownObjectRelease(v39.super.isa);
    v42 = (uint64_t *)(a1 + v32[9]);
    v43 = v42[1];
    if (v43 == 9)
    {
      v44 = v28;
      v45 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v42, v43);
      v46 = v28;
      v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setProperty:forBodyKey:", v45, v47);

    swift_unknownObjectRelease(v45);
    v48 = a1 + v32[10];
    v49 = *(unsigned __int16 *)(v48 + 24);
    if (v49 >> 8 <= 0xFE
      && (MetricsEvent.Click.ActionDetails.dictionary.getter(*(_QWORD *)v48, *(_QWORD *)(v48 + 8), *(_QWORD *)(v48 + 16), v49), v50))
    {
      aBlock[0] = v50;
      v51 = sub_100007E8C(&qword_1011D5AC0);
      v52 = _bridgeAnythingToObjectiveC<A>(_:)(aBlock, v51);
      sub_10004FF60((uint64_t)aBlock, &qword_1011D5AC0);
    }
    else
    {
      v52 = 0;
    }
    objc_msgSend(v28, "setActionDetails:", v52);
    *(_QWORD *)&v53 = swift_unknownObjectRelease(v52).n128_u64[0];
    isa = *(Class *)(a1 + v32[11]);
    v121 = v11;
    if (isa)
    {
      sub_100007E8C((uint64_t *)&unk_1011D6120);
      isa = Array._bridgeToObjectiveC()().super.isa;
    }
    objc_msgSend(v28, "setImpressions:", isa, v53);
    swift_unknownObjectRelease(isa);
    if (*(_BYTE *)(a1 + v32[18]) == 1)
    {
      v55 = sub_100007E8C(&qword_1011DBD80);
      inited = swift_initStackObject(v55, &v124);
      *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
      strcpy((char *)(inited + 32), "sharedContent");
      *(_WORD *)(inited + 46) = -4864;
      *(_QWORD *)(inited + 72) = &type metadata for Bool;
      *(_BYTE *)(inited + 48) = 1;
      sub_100A13450(inited);
      v57 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v57, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v58 = (uint64_t *)(a1 + v32[19]);
    v59 = v58[1];
    if (v59)
    {
      v60 = *v58;
      v61 = sub_100007E8C(&qword_1011DBD80);
      v62 = swift_initStackObject(v61, &v125);
      *(_OWORD *)(v62 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v62 + 32) = 0xD000000000000013;
      *(_QWORD *)(v62 + 40) = 0x8000000100E4BDD0;
      *(_QWORD *)(v62 + 72) = &type metadata for String;
      *(_QWORD *)(v62 + 48) = v60;
      *(_QWORD *)(v62 + 56) = v59;
      swift_bridgeObjectRetain();
      sub_100A13450(v62);
      v63 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v63, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v64 = (uint64_t *)(a1 + v32[17]);
    v65 = v64[1];
    if (v65)
    {
      v66 = *v64;
      v67 = sub_100007E8C(&qword_1011DBD80);
      v68 = swift_initStackObject(v67, &v126);
      *(_OWORD *)(v68 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v68 + 32) = 0x6554686372616573;
      *(_QWORD *)(v68 + 40) = 0xEA00000000006D72;
      *(_QWORD *)(v68 + 72) = &type metadata for String;
      *(_QWORD *)(v68 + 48) = v66;
      *(_QWORD *)(v68 + 56) = v65;
      swift_bridgeObjectRetain();
      sub_100A13450(v68);
      v69 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v69, swift_bridgeObjectRelease().n128_f64[0]);

    }
    if (a4 != 2 && sub_100A20144(a4 & 1, v116, v117))
    {
      v70 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v28, "addPropertiesWithDictionary:", v70, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v71 = (NSString)v122;
    if (v122)
    {
      v72 = v28;
      v71 = String._bridgeToObjectiveC()();
    }
    else
    {
      v73 = v28;
    }
    objc_msgSend(v28, "setPageContext:", v71);

    v74 = (uint64_t *)(a1 + v32[12]);
    v76 = *v74;
    v75 = v74[1];
    if (v75)
    {
      v77 = v28;
      swift_bridgeObjectRetain();
      v78 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v79 = String._bridgeToObjectiveC()();
      objc_msgSend(v77, "setProperty:forBodyKey:", v78, v79);

    }
    v80 = (uint64_t *)(a1 + v32[13]);
    v81 = *v80;
    v82 = v80[1];
    if (v82)
    {
      v83 = v28;
      v84 = String._bridgeToObjectiveC()();
      objc_msgSend(v83, "setPageType:", v84);

    }
    v122 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    v85 = *(void **)&v123[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v85)
    {
      v86 = sub_100007E8C(&qword_1011D5AA8);
      v87 = swift_allocObject(v86, 96, 7);
      *(_OWORD *)(v87 + 16) = xmmword_100EA7A80;
      v88 = sub_100007E8C(&qword_1011D3FC8);
      *(_QWORD *)(v87 + 32) = v81;
      *(_QWORD *)(v87 + 40) = v82;
      *(_QWORD *)(v87 + 88) = v88;
      *(_QWORD *)(v87 + 56) = v88;
      *(_QWORD *)(v87 + 64) = v76;
      *(_QWORD *)(v87 + 72) = v75;
      swift_bridgeObjectRetain();
      v89 = v28;
      swift_bridgeObjectRetain();
      v90 = v85;
      v91 = Array._bridgeToObjectiveC()().super.isa;
      v92 = objc_msgSend(v90, "compoundStringWithElements:", v91, swift_bridgeObjectRelease().n128_f64[0]);

      if (v92)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v92);

        v92 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v93 = v28;
      v92 = 0;
    }
    v95 = v120;
    v94 = (uint64_t)v121;
    objc_msgSend(v28, "setPageDescription:", v92);

    sub_10004A160(a1 + v32[14], v94, &qword_1011D2AE0);
    v96 = v119((char *)v94, 1, v95);
    v97 = v28;
    v98 = v97;
    if (v96 == 1)
    {
      sub_10004FF60(v94, &qword_1011D2AE0);
      v100 = 0;
    }
    else
    {
      URL.absoluteString.getter(v97);
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v94, v95);
      v100 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v99 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v98, "setPageURL:", v100, v99);

    if (*(_QWORD *)(a1 + v32[15]))
    {
      v101 = v98;
      swift_bridgeObjectRetain();
      v102.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v103 = v98;
      v102.super.isa = 0;
    }
    v104 = String._bridgeToObjectiveC()();
    objc_msgSend(v98, "setProperty:forBodyKey:", v102.super.isa, v104);

    swift_unknownObjectRelease(v102.super.isa);
    if ((*(_BYTE *)(a1 + v32[16]) & 1) == 0)
    {
      v105 = sub_100007E8C(&qword_1011DBD80);
      v106 = swift_initStackObject(v105, v127);
      *(_OWORD *)(v106 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v106 + 32) = 0x7073694465676170;
      *(_QWORD *)(v106 + 40) = 0xEF6570795479616CLL;
      *(_QWORD *)(v106 + 72) = &type metadata for String;
      *(_QWORD *)(v106 + 48) = 0x7765695664726163;
      *(_QWORD *)(v106 + 56) = 0xE800000000000000;
      sub_100A13450(v106);
      v107 = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v98, "addPropertiesWithDictionary:", v107, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v108 = v123;
    v109 = *(void **)&v123[v122];
    v110 = swift_allocObject(&unk_1010EFE40, 32, 7);
    *(_QWORD *)(v110 + 16) = v108;
    *(_QWORD *)(v110 + 24) = v98;
    aBlock[4] = sub_100A208EC;
    aBlock[5] = v110;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010EFE58;
    v111 = _Block_copy(aBlock);
    v112 = v109;
    v113 = v108;
    v114 = v98;
    objc_msgSend(v114, "setStandardPropertiesWith:completionHandler:", v112, v111, swift_release().n128_f64[0]);
    _Block_release(v111);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MetricsReportingController.recordLoadUrlEvent(_:)(MusicCore::MetricsEvent::LoadUrl *a1)
{
  char *v1;
  id v3;
  _BOOL8 cachedResponse;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  NSString v9;
  NSString v10;
  NSString v11;
  NSString v12;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v15;
  uint64_t inited;
  Class isa;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  _QWORD aBlock[6];
  _BYTE v26[16];
  _BYTE v27[16];
  _BYTE v28[16];
  _BYTE v29[16];
  _BYTE v30[16];
  _BYTE v31[16];
  _BYTE v32[16];
  _BYTE v33[16];
  _BYTE v34[16];
  _BYTE v35[16];
  _BYTE v36[16];
  _BYTE v37[16];
  _BYTE v38[16];
  _BYTE v39[16];
  _BYTE v40[16];
  _BYTE v41[16];
  double v42;
  char v43;
  double v44;
  char v45;
  double v46;
  char v47;
  double v48;
  char v49;
  double v50;
  char v51;
  double v52;
  char v53;
  double v54;
  char v55;
  double v56;
  char v57;
  double v58;
  char v59;
  _QWORD v60[2];
  uint64_t v61;
  char v62;
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];

  v3 = objc_msgSend(objc_allocWithZone((Class)SSMetricsLoadURLEvent), "init");
  cachedResponse = a1->cachedResponse;
  objc_msgSend(v3, "setCachedResponse:", cachedResponse);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = objc_msgSend(v5, "bundleIdentifier");

  objc_msgSend(v3, "setOriginalApp:", v6);
  sub_100065228((uint64_t)a1, (uint64_t)v41, &qword_1011D5AC8);
  sub_100065228((uint64_t)v41, (uint64_t)&v42, &qword_1011D5AC8);
  if ((v43 & 1) == 0)
    objc_msgSend(v3, "setDomainLookupStartTime:", v42);
  sub_100065228((uint64_t)&a1->domainLookupEndTime, (uint64_t)v40, &qword_1011D5AC8);
  sub_100065228((uint64_t)v40, (uint64_t)&v44, &qword_1011D5AC8);
  if ((v45 & 1) == 0)
    objc_msgSend(v3, "setDomainLookupEndTime:", v44);
  sub_100065228((uint64_t)&a1->connectionStartTime, (uint64_t)v39, &qword_1011D5AC8);
  sub_100065228((uint64_t)v39, (uint64_t)&v46, &qword_1011D5AC8);
  if ((v47 & 1) == 0)
    objc_msgSend(v3, "setConnectionStartTime:", v46);
  sub_100065228((uint64_t)&a1->secureConnectionStartTime, (uint64_t)v38, &qword_1011D5AC8);
  sub_100065228((uint64_t)v38, (uint64_t)&v48, &qword_1011D5AC8);
  if ((v49 & 1) == 0)
    objc_msgSend(v3, "setSecureConnectionStartTime:", v48);
  sub_100065228((uint64_t)&a1->connectionEndTime, (uint64_t)v37, &qword_1011D5AC8);
  sub_100065228((uint64_t)v37, (uint64_t)&v50, &qword_1011D5AC8);
  if ((v51 & 1) == 0)
    objc_msgSend(v3, "setConnectionEndTime:", v50);
  sub_100065228((uint64_t)&a1->requestStartTime, (uint64_t)v36, &qword_1011D5AC8);
  sub_100065228((uint64_t)v36, (uint64_t)&v52, &qword_1011D5AC8);
  if ((v53 & 1) == 0)
    objc_msgSend(v3, "setRequestStartTime:", v52);
  sub_100065228((uint64_t)&a1->responseStartTime, (uint64_t)v35, &qword_1011D5AC8);
  sub_100065228((uint64_t)v35, (uint64_t)&v54, &qword_1011D5AC8);
  if ((v55 & 1) == 0)
    objc_msgSend(v3, "setResponseStartTime:", v54);
  sub_100065228((uint64_t)&a1->responseEndTime, (uint64_t)v34, &qword_1011D5AC8);
  sub_100065228((uint64_t)v34, (uint64_t)&v56, &qword_1011D5AC8);
  if ((v57 & 1) == 0)
    objc_msgSend(v3, "setResponseEndTime:", v56);
  sub_100065228((uint64_t)&a1->fetchStartTime, (uint64_t)v33, &qword_1011D5AC8);
  sub_100065228((uint64_t)v33, (uint64_t)&v58, &qword_1011D5AC8);
  if ((v59 & 1) == 0)
    objc_msgSend(v3, "setFetchStartTime:", v58);
  sub_100065228((uint64_t)&a1->requestUrl, (uint64_t)v32, &qword_1011D3FC8);
  sub_100065228((uint64_t)v32, (uint64_t)v60, &qword_1011D3FC8);
  if (v60[1])
  {
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setRequestURL:", v7);

  }
  sub_100065228((uint64_t)&a1->redirectCount, (uint64_t)v31, &qword_1011D5AD0);
  sub_100065228((uint64_t)v31, (uint64_t)&v61, &qword_1011D5AD0);
  if ((v62 & 1) == 0)
  {
    if (v61 < 0)
      goto LABEL_41;
    objc_msgSend(v3, "setRedirectCount:");
  }
  sub_100065228((uint64_t)&a1->appleTimingApp, (uint64_t)v30, &qword_1011D3FC8);
  sub_100065228((uint64_t)v30, (uint64_t)v63, &qword_1011D3FC8);
  if (v63[1])
  {
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAppleTimingApp:", v8);

  }
  sub_100065228((uint64_t)&a1->connectionType, (uint64_t)v29, &qword_1011D3FC8);
  sub_100065228((uint64_t)v29, (uint64_t)v64, &qword_1011D3FC8);
  if (v64[1])
  {
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setConnectionType:", v9);

  }
  sub_100065228((uint64_t)&a1->edgeNodeCacheStatus, (uint64_t)v28, &qword_1011D3FC8);
  sub_100065228((uint64_t)v28, (uint64_t)v65, &qword_1011D3FC8);
  if (v65[1])
  {
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setEdgeNodeCacheStatus:", v10);

  }
  sub_100065228((uint64_t)&a1->responseDate, (uint64_t)v27, &qword_1011D3FC8);
  sub_100065228((uint64_t)v27, (uint64_t)v66, &qword_1011D3FC8);
  if (v66[1])
  {
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setResponseDate:", v11);

  }
  sub_100065228((uint64_t)&a1->resolvedIPAddress, (uint64_t)v26, &qword_1011D3FC8);
  sub_100065228((uint64_t)v26, (uint64_t)v67, &qword_1011D3FC8);
  if (v67[1])
  {
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setResolvedIPAddress:", v12);

  }
  object = a1->environmentDataCenter.value._object;
  if (object)
  {
    countAndFlagsBits = a1->environmentDataCenter.value._countAndFlagsBits;
    v15 = sub_100007E8C(&qword_1011DBD80);
    inited = swift_initStackObject(v15, &v24);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = 0xD000000000000015;
    *(_QWORD *)(inited + 40) = 0x8000000100E4BDF0;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = countAndFlagsBits;
    *(_QWORD *)(inited + 56) = object;
    swift_bridgeObjectRetain();
    sub_100A13450(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "addPropertiesWithDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  objc_msgSend(v3, "setCachedResponse:", cachedResponse);
  objc_msgSend(v3, "setConnectionReused:", a1->connectionReused);
  objc_msgSend(v3, "setStatusCode:", a1->statusCode);
  if (a1->requestMessageSize < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v3, "setRequestMessageSize:");
    if ((a1->responseMessageSize & 0x8000000000000000) == 0)
    {
      objc_msgSend(v3, "setResponseMessageSize:");
      v18 = *(void **)&v1[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
      v19 = swift_allocObject(&unk_1010EFE90, 32, 7);
      *(_QWORD *)(v19 + 16) = v3;
      *(_QWORD *)(v19 + 24) = v1;
      aBlock[4] = sub_100A20914;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      aBlock[3] = &unk_1010EFEA8;
      v20 = _Block_copy(aBlock);
      v21 = v18;
      v22 = v3;
      v23 = v1;
      objc_msgSend(v22, "setStandardPropertiesWith:completionHandler:", v21, v20, swift_release().n128_f64[0]);
      _Block_release(v20);

      return;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_100A1C3D8(void *a1)
{
  if (sub_100A24C08())
    sub_100A1F15C(a1, (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

void MetricsReportingController.recordComponentRenderEvent(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  NSString v16;
  NSString v17;
  NSString v18;
  NSString v19;
  id v20;
  NSString v21;
  id v22;
  NSString v23;
  id v24;
  NSString v25;
  id v26;
  NSString v27;
  id v28;
  NSString v29;
  id v30;
  NSString v31;
  uint64_t v32;
  char v33;
  char v34;
  unsigned __int8 v35;
  char v36;

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6, v7, v8, v9, v10, v11, v12, v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v14 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v14 & 1) != 0)
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsComponentRenderEvent()), "init");
    if (*(_QWORD *)(a1 + 8))
    {
      swift_bridgeObjectRetain();
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v16, v17);
    swift_unknownObjectRelease(v16);

    sub_100065228(a1 + 16, (uint64_t)&v34, &qword_1011D5AD8);
    sub_100065228((uint64_t)&v34, (uint64_t)&v35, &qword_1011D5AD8);
    if (v35 == 24)
    {
      v18 = 0;
    }
    else
    {
      MetricsEvent.TargetType.rawValue.getter(v35);
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v18, v19);
    swift_unknownObjectRelease(v18);

    v20 = *(id *)(a1 + 24);
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v20, v21);

    v22 = *(id *)(a1 + 32);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v22, v23);

    v24 = *(id *)(a1 + 40);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v24, v25);

    v26 = *(id *)(a1 + 48);
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v26, v27);

    v28 = *(id *)(a1 + 56);
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v28, v29);

    v30 = *(id *)(a1 + 64);
    v31 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setProperty:forBodyKey:", v30, v31);

    sub_100065228(a1 + 72, (uint64_t)&v33, &qword_1011D5AE0);
    sub_100065228((uint64_t)&v33, (uint64_t)&v36, &qword_1011D5AE0);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x100A1C988);
}

void MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  uint64_t v27;
  double v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  NSString v33;
  uint64_t v34;
  id v35;
  id v36;
  NSString v37;
  uint64_t v38;
  id v39;
  id v40;
  NSString v41;
  uint64_t v42;
  id v43;
  id v44;
  NSString v45;
  uint64_t v46;
  id v47;
  id v48;
  NSString v49;
  uint64_t v50;
  id v51;
  id v52;
  NSString v53;
  uint64_t v54;
  id v55;
  id v56;
  NSString v57;
  double v58;
  id v59;
  id v60;
  uint64_t v61;
  NSString v62;
  double v63;
  id v64;
  id v65;
  uint64_t v66;
  NSString v67;
  NSString v68;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  NSString v73;
  unsigned __int8 v74;
  NSString v75;
  uint64_t v76;
  NSString v77;
  id *v78;
  id v79;
  uint64_t v80;
  NSString v81;
  id v82;
  uint64_t v83;
  NSString v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  NSString v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  NSString v99;
  uint64_t v100;
  NSString v101;
  void *v102;
  void *v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  void *v115;
  char *v116;
  uint64_t v117;
  id v118;
  _QWORD v119[3];
  _QWORD v120[3];
  _QWORD v121[3];
  _QWORD v122[3];
  _QWORD v123[3];
  _QWORD v124[3];
  char v125[24];
  char v126[32];

  v4 = v3;
  v113 = a2;
  v7 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v7);
  v9 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v13 = static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v22 = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v22 & 1) != 0)
  {
    v114 = v9;
    v116 = v4;
    v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsPageRenderEvent()), "init");
    swift_beginAccess(a1 + 16, v126, 0, 0);
    v24 = *(void **)(a1 + 16);
    swift_beginAccess(a1 + 24, v125, 0, 0);
    v25 = *(_BYTE *)(a1 + 32);
    v115 = a3;
    if ((v25 & 1) != 0)
    {
      v26 = v24;
      v27 = 0;
    }
    else
    {
      v28 = *(double *)(a1 + 24);
      v29 = (void *)objc_opt_self(AMSMetrics);
      v30 = v24;
      v31 = objc_msgSend(v29, "serverTimeFromTimeInterval:", v28);
      v32 = objc_msgSend(v31, "unsignedLongLongValue");

      v124[0] = v32;
      v27 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v124, &type metadata for UInt64);
    }
    v33 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v27, v33);
    swift_unknownObjectRelease(v27);

    swift_beginAccess(a1 + 40, v124, 0, 0);
    v34 = 0;
    if ((*(_BYTE *)(a1 + 48) & 1) == 0)
    {
      v35 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 40));
      v36 = objc_msgSend(v35, "unsignedLongLongValue");

      v123[0] = v36;
      v34 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v123, &type metadata for UInt64);
    }
    v37 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v34, v37);
    swift_unknownObjectRelease(v34);

    swift_beginAccess(a1 + 56, v123, 0, 0);
    v38 = 0;
    if ((*(_BYTE *)(a1 + 64) & 1) == 0)
    {
      v39 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 56));
      v40 = objc_msgSend(v39, "unsignedLongLongValue");

      v122[0] = v40;
      v38 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v122, &type metadata for UInt64);
    }
    v41 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v38, v41);
    swift_unknownObjectRelease(v38);

    swift_beginAccess(a1 + 72, v122, 0, 0);
    v42 = 0;
    if ((*(_BYTE *)(a1 + 80) & 1) == 0)
    {
      v43 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 72));
      v44 = objc_msgSend(v43, "unsignedLongLongValue");

      v121[0] = v44;
      v42 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v121, &type metadata for UInt64);
    }
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v42, v45);
    swift_unknownObjectRelease(v42);

    swift_beginAccess(a1 + 88, v121, 0, 0);
    v46 = 0;
    if ((*(_BYTE *)(a1 + 96) & 1) == 0)
    {
      v47 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 88));
      v48 = objc_msgSend(v47, "unsignedLongLongValue");

      v120[0] = v48;
      v46 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v120, &type metadata for UInt64);
    }
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v46, v49);
    swift_unknownObjectRelease(v46);

    swift_beginAccess(a1 + 104, v120, 0, 0);
    v50 = 0;
    if ((*(_BYTE *)(a1 + 112) & 1) == 0)
    {
      v51 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 104));
      v52 = objc_msgSend(v51, "unsignedLongLongValue");

      v119[0] = v52;
      v50 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v119, &type metadata for UInt64);
    }
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v50, v53);
    swift_unknownObjectRelease(v50);

    swift_beginAccess(a1 + 120, v119, 0, 0);
    v54 = 0;
    if ((*(_BYTE *)(a1 + 128) & 1) == 0)
    {
      v55 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", *(double *)(a1 + 120));
      v56 = objc_msgSend(v55, "unsignedLongLongValue");

      v117 = (uint64_t)v56;
      v54 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for UInt64);
    }
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v54, v57);
    swift_unknownObjectRelease(v54);

    if (v24)
    {
      objc_msgSend(v24, "requestStartTime");
      v59 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", v58);
      v60 = objc_msgSend(v59, "unsignedLongLongValue");

      v117 = (uint64_t)v60;
      v61 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for UInt64);
      v62 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", v61, v62);
      swift_unknownObjectRelease(v61);

      objc_msgSend(v24, "responseStartTime");
      v64 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", v63);
      v65 = objc_msgSend(v64, "unsignedLongLongValue");

      v117 = (uint64_t)v65;
      v66 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for UInt64);
    }
    else
    {
      v67 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", 0, v67);

      v66 = 0;
    }
    v68 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v66, v68);
    swift_unknownObjectRelease(v66);

    if (v24)
    {
      objc_msgSend(v24, "responseEndTime");
      v70 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", v69);
      v71 = objc_msgSend(v70, "unsignedLongLongValue");

      v117 = (uint64_t)v71;
      v72 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for UInt64);
      v73 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", v72, v73);
      swift_unknownObjectRelease(v72);

      v74 = objc_msgSend(v24, "cachedResponse");
    }
    else
    {
      v75 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setProperty:forBodyKey:", 0, v75);

      v74 = 0;
    }
    LOBYTE(v117) = v74;
    v76 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for Bool);
    v77 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v76, v77);
    swift_unknownObjectRelease(v76);

    v78 = (id *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 160));
    v79 = v78[1];
    v117 = (uint64_t)*v78;
    v118 = v79;
    swift_bridgeObjectRetain_n(v79, 2);
    v80 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for String);
    v81 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v80, v81);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v80);

    v82 = v78[3];
    v117 = (uint64_t)v78[2];
    v118 = v82;
    swift_bridgeObjectRetain_n(v82, 2);
    v83 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for String);
    v84 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v83, v84);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v83);

    v85 = type metadata accessor for MetricsPageProperties(0);
    v86 = (uint64_t)v114;
    sub_10004A160((uint64_t)v78 + *(int *)(v85 + 24), (uint64_t)v114, &qword_1011D2AE0);
    v87 = type metadata accessor for URL(0);
    v88 = *(_QWORD *)(v87 - 8);
    v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87);
    if ((_DWORD)v89 == 1)
    {
      sub_10004FF60(v86, &qword_1011D2AE0);
      v90 = 0;
    }
    else
    {
      v91 = URL.absoluteString.getter(v89);
      v93 = v92;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v87);
      v117 = v91;
      v118 = v93;
      swift_bridgeObjectRetain();
      v90 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for String);
    }
    v94 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v90, v94);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v90);

    v95 = *(uint64_t *)((char *)v78 + *(int *)(v85 + 28));
    if (v95)
    {
      v117 = *(uint64_t *)((char *)v78 + *(int *)(v85 + 28));
      swift_bridgeObjectRetain_n(v95, 2);
      v96 = sub_100007E8C(&qword_1011D5AC0);
      v97 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, v96);
    }
    else
    {
      v97 = 0;
    }
    v98 = v115;
    v99 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v97, v99);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v97);

    if (v98)
    {
      v117 = v113;
      v118 = v98;
      swift_bridgeObjectRetain_n(v98, 2);
      v100 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v117, &type metadata for String);
    }
    else
    {
      v100 = 0;
    }
    v101 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setProperty:forBodyKey:", v100, v101);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v100);

    v102 = v116;
    v103 = *(void **)&v116[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v104 = swift_allocObject(&unk_1010EFF30, 32, 7);
    *(_QWORD *)(v104 + 16) = v102;
    *(_QWORD *)(v104 + 24) = v23;
    v105 = v103;
    v106 = v23;
    v107 = v105;
    v108 = v106;
    swift_retain();
    v109 = v102;
    v110 = v108;
    sub_100A276A8(v103, v110, v110, (uint64_t)v103, (uint64_t)sub_100A20964, v104);

    swift_release_n(v104, 2, v111);
  }
  else
  {
    __break(1u);
  }
}

void sub_100A1D6F0(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void *))
{
  if ((a4(a2) & 1) != 0)
    sub_100A1F15C(a2, (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

void MetricsReportingController.recordCustomEvent(with:properties:sharedListeningContext:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  NSString v26;
  Class isa;
  Class v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v31 = a6;
  v30 = a5;
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v24 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v24 & 1) != 0)
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)SSMetricsCustomEvent), "init");
    v26 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setTopic:", v26);

    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "addPropertiesWithDictionary:", isa);

    objc_msgSend(v25, "setShouldSuppressUserInfo:", a7 & 1);
    objc_msgSend(v25, "setShouldSuppressDSIDHeader:", a7 & 1);
    if (a4 != 2)
    {
      if (sub_100A20144(a4 & 1, v30, v31))
      {
        v28 = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v25, "addPropertiesWithDictionary:", v28, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
    sub_100A1F15C(v25, a8, a9);

  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  void *v26;
  Class isa;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  void *v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD aBlock[6];
  char v51[88];

  v48 = a2;
  v46 = a1;
  v47 = a5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v24 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v24 & 1) != 0)
  {
    v25 = objc_msgSend(objc_allocWithZone((Class)SSMetricsCustomEvent), "init");
    v45 = a6;
    v26 = v25;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "addPropertiesWithDictionary:", isa);

    objc_msgSend(v26, "setShouldSuppressUserInfo:", a4 & 1);
    objc_msgSend(v26, "setShouldSuppressDSIDHeader:", a4 & 1);
    v28 = sub_100007E8C(&qword_1011DBD80);
    inited = swift_initStackObject(v28, v51);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    v30 = UUID.init()(inited);
    v31 = UUID.uuidString.getter(v30);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v31;
    *(_QWORD *)(inited + 56) = v33;
    sub_100A13450(inited);
    v34 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "addPropertiesWithDictionary:", v34, swift_bridgeObjectRelease().n128_f64[0]);

    v35 = v49;
    v36 = *(void **)&v49[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    v37 = (_QWORD *)swift_allocObject(&unk_1010EFF58, 64, 7);
    v39 = v45;
    v38 = v46;
    v37[2] = v26;
    v37[3] = v38;
    v40 = v47;
    v37[4] = v48;
    v37[5] = v35;
    v37[6] = v40;
    v37[7] = v39;
    aBlock[4] = sub_100A20AC4;
    aBlock[5] = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    aBlock[3] = &unk_1010EFF70;
    v41 = _Block_copy(aBlock);
    v42 = v36;
    v43 = v26;
    swift_bridgeObjectRetain();
    v44 = v35;
    swift_retain();
    objc_msgSend(v43, "setStandardPropertiesWith:completionHandler:", v42, v41, swift_release().n128_f64[0]);
    _Block_release(v41);

  }
  else
  {
    __break(1u);
  }
}

void sub_100A1DCB8(void *a1, char *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21[6];

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setTopic:", v12);

  if (qword_1011D1B70 != -1)
    swift_once(&qword_1011D1B70, sub_100A12408);
  v13 = type metadata accessor for Logger(0);
  sub_100048B14(v13, (uint64_t)static Logger.carMetrics);
  v14 = swift_bridgeObjectRetain_n(a3, 2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v21[0] = v18;
    *(_DWORD *)v17 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v17 + 4) = sub_10099627C(a2, a3, v21);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Inserting carPlay custom event with topic=%{public}s in metrics controller", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  v19 = *(void **)(a4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
  v21[4] = a5;
  v21[5] = a6;
  v21[0] = (uint64_t)_NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = (uint64_t)sub_1001E5304;
  v21[3] = (uint64_t)&unk_1010F05D0;
  v20 = _Block_copy(v21);
  swift_retain();
  objc_msgSend(v19, "insertEvent:withCompletionHandler:", a1, v20, swift_release().n128_f64[0]);
  _Block_release(v20);
}

Swift::Void __swiftcall MetricsReportingController.reportEventForLocalEvaluation(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  Class isa;
  uint64_t v16;

  v1 = type metadata accessor for DispatchPredicate(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v4 = static OS_dispatch_queue.main.getter(v5, v6, v7, v8, v9, v10, v11, v12);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  v13 = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if ((v13 & 1) != 0)
  {
    v14 = objc_msgSend(objc_allocWithZone((Class)SSMetricsCustomEvent), "init");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "addPropertiesWithDictionary:", isa);

  }
  else
  {
    __break(1u);
  }
}

uint64_t MetricsReportingController.flushUnreportedEvents()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch(sub_100A1E030, 0, 0);
}

uint64_t sub_100A1E030()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;

  if (qword_1011D1C20 != -1)
    swift_once(&qword_1011D1C20, sub_100A2A524);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)qword_10124E070);
  v0[16] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MetricsReportingController] Attempting to flush unreported events", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0 + 2;
  v7 = v0[15];

  v8 = *(void **)(v7 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
  v0[2] = v0;
  v0[3] = sub_100A1E180;
  v9 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v10 = v0 + 10;
  v10[1] = 0x40000000;
  v10[2] = sub_100A1E374;
  v10[3] = &unk_1010EFF98;
  v10[4] = v9;
  objc_msgSend(v8, "flushUnreportedEventsWithCompletionHandler:", v10);
  return swift_continuation_await(v6, v11);
}

uint64_t sub_100A1E180()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_100A1E1E8;
  else
    v2 = sub_100A1E1E0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A1E1E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A1E1E8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRetain(v2);
  v3 = swift_errorRetain(v2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v1 + 136);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v14 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v1 + 80) = v6;
    swift_errorRetain(v6);
    v9 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v10 = (char *)String.init<A>(describing:)(v1 + 80, v9);
    *(_QWORD *)(v7 + 4) = sub_10099627C(v10, v11, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MetricsReportingController] Failed to flush unreported events with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 136);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);

  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_100A1E374(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    v4 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
    *v6 = a2;
    v7 = a2;
    swift_continuation_throwingResumeWithError(v2, v5);
  }
  else
  {
    swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  }
}

uint64_t sub_100A1E3E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
  if (!v1)
  {
    v7 = 0u;
    v8 = 0u;
LABEL_11:
    sub_10004FF60((uint64_t)&v7, &qword_1011D7160);
    return 0;
  }
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForConfigurationKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v6, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100065228((uint64_t)v6, (uint64_t)&v7, &qword_1011D7160);
  if (!*((_QWORD *)&v8 + 1))
    goto LABEL_11;
  if (swift_dynamicCast(v6, &v7, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
    return *(_QWORD *)&v6[0];
  else
    return 0;
}

char *sub_100A1E518()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  NSString *v27;
  uint64_t v28;
  objc_super v30;

  v1 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler;
  v2 = sub_100007E8C(&qword_1011D25B8);
  v3 = swift_allocObject(v2, 24, 7);
  v4 = (void *)objc_opt_self(NSUserDefaults);
  v5 = v0;
  *(_QWORD *)(v3 + 16) = objc_msgSend(v4, "standardUserDefaults");
  *(_QWORD *)&v0[v1] = v3;
  v6 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler;
  v7 = sub_100007E8C((uint64_t *)&unk_1011D25C0);
  v8 = swift_allocObject(v7, 24, 7);
  *(_QWORD *)(v8 + 16) = objc_msgSend(v4, "standardUserDefaults");
  *(_QWORD *)&v5[v6] = v8;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration] = 0;
  v9 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
  v10 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
  v11 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carMetricsReporter;
  v12 = type metadata accessor for CarNowPlayingMetrics.Reporter();
  *(_QWORD *)&v5[v11] = swift_allocObject(v12, 16, 7);
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory] = _swiftEmptyArrayStorage;

  v30.receiver = v5;
  v30.super_class = (Class)type metadata accessor for MetricsReportingController();
  v13 = objc_msgSendSuper2(&v30, "init");
  v14 = qword_1011D1CF0;
  v15 = (char *)v13;
  if (v14 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  v16 = static BagProvider.shared;
  v17 = swift_allocObject(&unk_1010F0540, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = type metadata accessor for BagProvider.Observer();
  v19 = swift_allocObject(v18, 40, 7);
  v20 = swift_weakInit(v19 + 16, 0);
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = 0;
  swift_weakAssign(v20, v16);
  v21 = *(_QWORD *)(v19 + 24);
  v22 = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v19 + 24) = sub_100A23CE8;
  *(_QWORD *)(v19 + 32) = v17;
  swift_retain_n(v17, 3);
  v23 = sub_10004BA30(v21, v22);
  __chkstk_darwin(v23);
  UnfairLock.locked<A>(_:)(sub_100A23CF0);
  sub_100A3CF60(0);
  v24 = swift_release();
  swift_release_n(v17, 2, v24);
  *(_QWORD *)&v15[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = v19;
  swift_release();
  v25 = swift_allocObject(&unk_1010F0540, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = type metadata accessor for NotificationObserver();
  swift_allocObject(v26, 64, 7);
  v27 = UISceneDidEnterBackgroundNotification;
  swift_retain();
  v28 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v27, 0, 1, 1, (uint64_t)sub_100A23D0C, v25);
  swift_release();

  *(_QWORD *)&v15[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = v28;
  swift_release();
  return v15;
}

double sub_100A1E904(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  double result;

  sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v4 = swift_allocObject(&unk_1010F05B8, 32, 7);
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  v5 = a1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_100A23E9C, v4);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100A1E988(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100A1EDA8(a2);

  }
}

uint64_t sub_100A1E9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  _QWORD *v15;
  _BYTE v18[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1011D1C20 != -1)
    swift_once(&qword_1011D1C20, sub_100A2A524);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048B14(v6, (uint64_t)qword_10124E070);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = a2 + 16;
  static TaskPriority.low.getter();
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 0, 1, v12);
  v13 = swift_allocObject(&unk_1010F0540, 24, 7);
  swift_beginAccess(v11, v18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  swift_unknownObjectWeakInit(v13 + 16);

  v15 = (_QWORD *)swift_allocObject(&unk_1010F0590, 40, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v13;
  sub_1009AA68C((uint64_t)v5, (uint64_t)&unk_1011D5CF0, (uint64_t)v15);
  swift_release();
  return sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011D8CF0);
}

uint64_t sub_100A1EBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch(sub_100A1EBD0, 0, 0);
}

uint64_t sub_100A1EBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    swift_retain();

    sub_100A1163C(0);
    swift_release();
  }
  v4 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v4, v0 + 40, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v4);
  if (v5)
  {
    v6 = (void *)v5;
    swift_retain();

    sub_100A1163C(1);
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v7, v0 + 64, 0, 0);
  v8 = swift_unknownObjectWeakLoadStrong(v7);
  *(_QWORD *)(v0 + 96) = v8;
  if (!v8)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v9 = v8;
  v10 = (_QWORD *)swift_task_alloc(dword_1011D5AEC);
  *(_QWORD *)(v0 + 104) = v10;
  *v10 = v0;
  v10[1] = sub_100A1ED3C;
  v10[15] = v9;
  return swift_task_switch(sub_100A1E030, 0, 0);
}

uint64_t sub_100A1ED3C()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 96);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));

  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_100A1EDA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  int v26;
  id v27;
  Class isa;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  _QWORD v34[2];
  __int128 v35;
  __int128 v36;
  _BYTE v37[40];
  _OWORD v38[2];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8, v9, v10, v11, v12, v13, v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v16 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v17 = objc_msgSend(a1, "dictionaryForBagKey:", SSMetricsURLBagKey);
  if (v17)
  {
    v18 = v17;
    v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    if (!*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRelease();
      return;
    }
    v20 = objc_msgSend(a1, "dictionaryForBagKey:", SSVURLBagKeyMusicCommon);
    if (v20)
    {
      v21 = v20;
      v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      *(_QWORD *)&v35 = 0xD000000000000023;
      *((_QWORD *)&v35 + 1) = 0x8000000100E4C0D0;
      AnyHashable.init<A>(_:)(&v35, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v22 + 16) && (v23 = sub_10079C294((uint64_t)v37), (v24 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v35);
      }
      else
      {
        v35 = 0u;
        v36 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10004FF2C((uint64_t)v37);
      if (*((_QWORD *)&v36 + 1))
      {
        sub_100048ABC(&v35, v38);
        strcpy((char *)&v35, "postFrequency");
        HIWORD(v35) = -4864;
        AnyHashable.init<A>(_:)(&v35, &type metadata for String, &protocol witness table for String);
        sub_10004FA40((uint64_t)v38, (uint64_t)&v35);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
        v34[1] = v19;
        sub_100A14574(&v35, (uint64_t)v37, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_10004FF2C((uint64_t)v37);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v38);
        v26 = 1;
        goto LABEL_14;
      }
      sub_10004FF60((uint64_t)&v35, &qword_1011D7160);
    }
    v26 = 0;
LABEL_14:
    v27 = objc_allocWithZone((Class)SSMetricsConfiguration);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v29 = objc_msgSend(v27, "initWithGlobalConfiguration:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    if (v29)
    {
      v30 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration) = v29;
      v31 = v29;

      objc_msgSend(v31, "setDisableEventDecoration:", objc_msgSend(v31, "_decorateITMLEvents") ^ 1);
      v32 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
      objc_msgSend(v32, "setGlobalConfiguration:", v31);
      objc_msgSend(v32, "setFlushTimerEnabled:", 1);
      if (v26)
      {
        v33 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
        objc_msgSend(v33, "setGlobalConfiguration:", v31);
        objc_msgSend(v33, "setFlushTimerEnabled:", 1);
      }

    }
  }
}

void sub_100A1F15C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];
  _BYTE v37[80];

  v4 = v3;
  v35 = a2;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  *v14 = static OS_dispatch_queue.main.getter(v15, v16, v17, v18, v19, v20, v21, v22);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v23 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if ((v23 & 1) != 0)
  {
    sub_100A1F3F8(a1);
    v24 = sub_100007E8C(&qword_1011DBD80);
    inited = swift_initStackObject(v24, v37);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    v26 = UUID.init()(inited);
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v27;
    *(_QWORD *)(inited + 56) = v29;
    sub_100A13450(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "addPropertiesWithDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    v31 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
    v32 = swift_allocObject(&unk_1010F0608, 32, 7);
    *(_QWORD *)(v32 + 16) = v35;
    *(_QWORD *)(v32 + 24) = a3;
    aBlock[4] = sub_10004D5F4;
    aBlock[5] = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001E5304;
    aBlock[3] = &unk_1010F0620;
    v33 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend(v31, "insertEvent:withCompletionHandler:", a1, v33, swift_release().n128_f64[0]);
    _Block_release(v33);
  }
  else
  {
    __break(1u);
  }
}

void sub_100A1F3F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  Class isa;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  char *v29;

  v2 = v1;
  v4 = objc_msgSend(a1, "eventType");
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(SSMetricsEventTypePage);
    goto LABEL_10;
  }
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(SSMetricsEventTypePage);
  if (!v8)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return;
  }
  v13 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory;
  swift_bridgeObjectRetain();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setProperty:forBodyKey:", isa, v15);

  v16 = sub_100A24D4C();
  if (v17)
  {
    v18 = v16;
    v19 = v17;
    v20 = *(char **)(v2 + v13);
    if (*((_QWORD *)v20 + 2) >= 5uLL)
    {
      swift_bridgeObjectRetain();
      sub_100A1F618(4, (uint64_t)v20);
      *(_QWORD *)(v2 + v13) = v21;
      swift_bridgeObjectRelease();
      v20 = *(char **)(v2 + v13);
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
    *(_QWORD *)(v2 + v13) = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_1009B96FC(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
      *(_QWORD *)(v2 + v13) = v20;
    }
    v23 = *((_QWORD *)v20 + 2);
    v24 = *((_QWORD *)v20 + 3);
    v25 = v23 + 1;
    if (v23 >= v24 >> 1)
    {
      v27 = v20;
      v28 = *((_QWORD *)v20 + 2);
      v29 = sub_1009B96FC((char *)(v24 > 1), v23 + 1, 1, v27);
      v23 = v28;
      v20 = v29;
      *(_QWORD *)(v2 + v13) = v29;
    }
    *((_QWORD *)v20 + 2) = v25;
    v26 = &v20[16 * v23];
    *((_QWORD *)v26 + 4) = v18;
    *((_QWORD *)v26 + 5) = v19;
  }
}

void sub_100A1F618(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;

  if (a1 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    if (!a1)
      goto LABEL_31;
    v4 = *(_QWORD *)(a2 + 16) >= a1 ? a1 : *(_QWORD *)(a2 + 16);
    sub_1009F24EC(0, v4, 0);
    v5 = *(_QWORD *)(a2 + 16);
    if (!v5)
      goto LABEL_31;
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = 0;
    v8 = -v5;
    v20 = v5;
    do
    {
LABEL_8:
      if (v7 >= *(_QWORD *)(a2 + 16))
        goto LABEL_38;
      v9 = (uint64_t *)(a2 + 32 + 16 * v7);
      v11 = *v9;
      v10 = v9[1];
      v12 = _swiftEmptyArrayStorage[2];
      if ((uint64_t)v12 < a1)
      {
        ++v7;
LABEL_22:
        v15 = _swiftEmptyArrayStorage[3];
        v21 = v12 + 1;
        swift_bridgeObjectRetain();
        if (v12 >= v15 >> 1)
          sub_1009F24EC((char *)(v15 > 1), v21, 1);
        _swiftEmptyArrayStorage[2] = v21;
        v16 = &_swiftEmptyArrayStorage[2 * v12];
        v16[4] = v11;
        v16[5] = v10;
      }
      else
      {
        swift_bridgeObjectRetain();
        if (v6 >= v12)
          goto LABEL_39;
        v13 = &_swiftEmptyArrayStorage[2 * v6 + 4];
        swift_bridgeObjectRelease();
        *v13 = v11;
        v13[1] = v10;
        if ((uint64_t)++v6 >= a1)
        {
          if (v7 + 1 == v20)
          {
LABEL_30:
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
          v14 = (uint64_t *)(a2 + 56 + 16 * v7);
          v7 += 2;
          while (v7 - 1 < *(_QWORD *)(a2 + 16))
          {
            v11 = *(v14 - 1);
            v10 = *v14;
            v12 = _swiftEmptyArrayStorage[2];
            if ((uint64_t)v12 < a1)
            {
              v6 = 0;
              goto LABEL_22;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            _swiftEmptyArrayStorage[4] = v11;
            _swiftEmptyArrayStorage[5] = v10;
            if (a1 > 1)
            {
              v6 = 1;
              if (v8 + v7)
                goto LABEL_8;
              swift_bridgeObjectRelease();
              v6 = 1;
              goto LABEL_33;
            }
            ++v7;
            v14 += 2;
            if (v8 + v7 == 1)
              goto LABEL_30;
          }
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        ++v7;
      }
    }
    while (v7 != v20);
    swift_bridgeObjectRelease();
    if (!v6)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_33:
    v17 = _swiftEmptyArrayStorage[2];
    sub_1009F24EC(0, v17, 0);
    if (v17 < (uint64_t)v6)
      goto LABEL_41;
    if ((v6 & 0x8000000000000000) == 0)
    {
      v18 = _swiftEmptyArrayStorage[2];
      if (v18 >= v6 && v18 >= v17)
      {
        swift_retain();
        sub_100A2098C(v19, (uint64_t)&_swiftEmptyArrayStorage[4], v6, (2 * v17) | 1);
        swift_bridgeObjectRelease();
        swift_release();
        sub_100A2098C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage[4], 0, (2 * v6) | 1);
        swift_release();
        return;
      }
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

id MetricsReportingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetricsReportingController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A1F9EC()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD v6[2];
  _OWORD v7[2];

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "propertyForBodyKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v2);
    sub_100048ABC(v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  v3 = sub_100007E8C(&qword_1011D7160);
  v4 = sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
  if (swift_dynamicCast(v6, v7, v3, v4, 6))
    return *(_QWORD *)&v6[0];
  else
    return 0;
}

unint64_t sub_100A1FABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_100A23DB0(&qword_1011D96F0, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_100A1FC98(a1, v7);
}

unint64_t sub_100A1FB20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100A1FDD0(a1, v4);
}

unint64_t sub_100A1FB50(Swift::UInt a1, Swift::UInt a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  v5 = Hasher._finalize()();
  return sub_100A1FEE8(a1, a2, v5);
}

unint64_t sub_100A1FBBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10079E2A4(a1, v7);
}

unint64_t sub_100A1FC3C(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1 + 1);
  v3 = Hasher._finalize()();
  return sub_10079DE34(a1, v3);
}

unint64_t sub_100A1FC98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v19 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_100A23DB0(&qword_1011D5CF8, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v19, v5, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_100A1FDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_10004A07C(0, &qword_1011D5938, MPCPlayerPath_ptr);
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_100A1FEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v10 = *v8;
      v9 = v8[1];
      if (v10 == a1 && v9 == a2)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
      if (a4)
        goto LABEL_24;
      result = 1;
      break;
    case 1:
      if (a4 != 1)
        goto LABEL_24;
      result = 1;
      break;
    case 2:
      if (a4 != 2)
        goto LABEL_24;
      result = 1;
      break;
    case 3:
      if (a4 != 3)
        goto LABEL_24;
      result = 1;
      break;
    case 4:
      if (a4 != 4)
        goto LABEL_24;
      result = 1;
      break;
    case 5:
      if (a4 != 5)
        goto LABEL_24;
      result = 1;
      break;
    case 6:
      if (a4 != 6)
        goto LABEL_24;
      result = 1;
      break;
    case 7:
      if (a4 != 7)
        goto LABEL_24;
      result = 1;
      break;
    case 8:
      if (a4 != 8)
        goto LABEL_24;
      result = 1;
      break;
    default:
      if (a4 < 9)
      {
LABEL_24:
        result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        result = 1;
      }
      else
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
      }
      break;
  }
  return result;
}

uint64_t sub_100A20040(unint64_t a1)
{
  if (a1 <= 1)
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  if (a1 - 5 > 0xFFFFFFFFFFFFFFFCLL)
    return 3419442;
  if (a1 - 8 > 0xFFFFFFFFFFFFFFFCLL)
    return 3616053;
  if (a1 - 11 > 0xFFFFFFFFFFFFFFFCLL)
    return 808529208;
  if (a1 - 16 > 0xFFFFFFFFFFFFFFFALL)
    return 0x35312D3131;
  if (a1 - 21 > 0xFFFFFFFFFFFFFFFALL)
    return 0x30322D3631;
  if (a1 - 26 >= 0xFFFFFFFFFFFFFFFBLL)
    return 0x35322D3132;
  return 2831922;
}

unint64_t sub_100A20144(char a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[80];

  v6 = sub_100007E8C(&qword_1011DBD80);
  if ((a1 & 1) != 0)
  {
    inited = swift_initStackObject(v6, &v12);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(_BYTE *)(inited + 47) = -18;
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 72) = &type metadata for Bool;
    *(_QWORD *)(inited + 80) = 0xD00000000000001CLL;
    *(_QWORD *)(inited + 88) = 0x8000000100E4C150;
    *(_QWORD *)(inited + 96) = sub_100A20040(a2);
    *(_QWORD *)(inited + 104) = v8;
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 128) = 0xD000000000000018;
    *(_QWORD *)(inited + 136) = 0x8000000100E4BCB0;
    v9 = sub_100A20040(a3);
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v9;
    *(_QWORD *)(inited + 152) = v10;
  }
  else
  {
    inited = swift_initStackObject(v6, v13);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(_BYTE *)(inited + 47) = -18;
    *(_QWORD *)(inited + 72) = &type metadata for Bool;
    *(_BYTE *)(inited + 48) = 0;
  }
  return sub_100A13450(inited);
}

uint64_t _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1010E60C8, a1, a2, &unk_1011D2560);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x18)
    return 24;
  else
    return v3;
}

uint64_t sub_100A202C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D2AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1010E6398, a1, a2, &unk_1011D2570);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x30)
    return 48;
  else
    return v3;
}

double sub_100A2035C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double result;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  double v70;

  objc_msgSend(a1, "domainLookupStartTime");
  v70 = v4;
  objc_msgSend(a1, "domainLookupEndTime");
  v6 = v5;
  objc_msgSend(a1, "connectionStartTime");
  v8 = v7;
  objc_msgSend(a1, "secureConnectionStartTime");
  v10 = v9;
  objc_msgSend(a1, "connectionEndTime");
  v12 = v11;
  objc_msgSend(a1, "requestStartTime");
  v14 = v13;
  objc_msgSend(a1, "responseStartTime");
  v16 = v15;
  objc_msgSend(a1, "responseEndTime");
  v18 = v17;
  objc_msgSend(a1, "fetchStartTime");
  v20 = v19;
  v69 = objc_msgSend(a1, "redirectCount");
  v21 = objc_msgSend(a1, "requestUrl");
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v67 = v24;
    v68 = v23;

  }
  else
  {
    v67 = 0;
    v68 = 0;
  }
  v66 = objc_msgSend(a1, "cachedResponse");
  v65 = objc_msgSend(a1, "connectionReused");
  v25 = objc_msgSend(a1, "appleTimingApp");
  if (v25)
  {
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v63 = v28;
    v64 = v27;

  }
  else
  {
    v63 = 0;
    v64 = 0;
  }
  v29 = objc_msgSend(a1, "connectionType");
  if (v29)
  {
    v30 = v29;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v61 = v32;
    v62 = v31;

  }
  else
  {
    v61 = 0;
    v62 = 0;
  }
  v33 = objc_msgSend(a1, "edgeNodeCacheStatus");
  if (v33)
  {
    v34 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v59 = v36;
    v60 = v35;

  }
  else
  {
    v59 = 0;
    v60 = 0;
  }
  v37 = objc_msgSend(a1, "environmentDataCenter");
  if (v37)
  {
    v38 = v37;
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v55 = v40;
    v57 = v39;

  }
  else
  {
    v55 = 0;
    v57 = 0;
  }
  v41 = objc_msgSend(a1, "responseDate", v55, v57);
  if (v41)
  {
    v42 = v41;
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v45 = v44;

  }
  else
  {
    v43 = 0;
    v45 = 0;
  }
  v46 = objc_msgSend(a1, "statusCode");
  v47 = objc_msgSend(a1, "requestMessageSize");
  v48 = objc_msgSend(a1, "responseMessageSize");
  v49 = objc_msgSend(a1, "resolvedIPAddress");
  if (v49)
  {
    v50 = v49;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v53 = v52;

  }
  else
  {

    v51 = 0;
    v53 = 0;
  }
  result = v70;
  *(double *)a2 = v70;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v10;
  *(_BYTE *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v14;
  *(_BYTE *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = v16;
  *(_BYTE *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = v18;
  *(_BYTE *)(a2 + 120) = 0;
  *(_QWORD *)(a2 + 128) = v20;
  *(_BYTE *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = v69;
  *(_BYTE *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = v68;
  *(_QWORD *)(a2 + 168) = v67;
  *(_BYTE *)(a2 + 176) = v66;
  *(_BYTE *)(a2 + 177) = v65;
  *(_QWORD *)(a2 + 184) = v64;
  *(_QWORD *)(a2 + 192) = v63;
  *(_QWORD *)(a2 + 200) = v62;
  *(_QWORD *)(a2 + 208) = v61;
  *(_QWORD *)(a2 + 216) = v60;
  *(_QWORD *)(a2 + 224) = v59;
  *(_QWORD *)(a2 + 232) = v58;
  *(_QWORD *)(a2 + 240) = v56;
  *(_QWORD *)(a2 + 248) = v43;
  *(_QWORD *)(a2 + 256) = v45;
  *(_QWORD *)(a2 + 264) = v46;
  *(_QWORD *)(a2 + 272) = v47;
  *(_QWORD *)(a2 + 280) = v48;
  *(_QWORD *)(a2 + 288) = v51;
  *(_QWORD *)(a2 + 296) = v53;
  return result;
}

unint64_t _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6838, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

_QWORD *sub_100A207A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[24];
  v3 = a1[26];
  v4 = a1[28];
  v5 = a1[30];
  v6 = a1[32];
  v7 = a1[37];
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_100A20830()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100A2085C()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F0748, (uint64_t (*)(void))sub_100A23E6C);
}

uint64_t sub_100A20884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A20894(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_100A2089C()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F0720, sub_100A23F14);
}

double sub_100A208C4()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F06F8, sub_100A23F14);
}

double sub_100A208EC()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F06D0, sub_100A23F14);
}

double sub_100A20914()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F06A8, (uint64_t (*)(void))sub_100A23E64);
}

double sub_100A2093C()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F0680, (uint64_t (*)(void))sub_100A23E3C);
}

double sub_100A20964()
{
  uint64_t v0;

  return sub_100A1A9C0(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_1010F0658, (uint64_t (*)(void))sub_100A23E14);
}

void sub_100A2098C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v4);
  *v4 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v7 + 24) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v12 = v8 + v6;
      else
        v12 = v8;
      isUniquelyReferenced_nonNull_native = sub_1009F24EC(isUniquelyReferenced_nonNull_native, v12, 1);
      v7 = *v4;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_16;
  }
LABEL_12:
  v13 = *(_QWORD *)(v7 + 16);
  if ((*(_QWORD *)(v7 + 24) >> 1) - v13 < v6)
    goto LABEL_19;
  swift_arrayInitWithCopy(v7 + 16 * v13 + 32);
  if (v6 <= 0)
  {
LABEL_16:
    *v4 = v7;
    return;
  }
  v14 = *(_QWORD *)(v7 + 16);
  v15 = __OFADD__(v14, v6);
  v16 = v14 + v6;
  if (!v15)
  {
    *(_QWORD *)(v7 + 16) = v16;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_100A20A88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100A20AC4()
{
  uint64_t v0;

  sub_100A1DCB8(*(void **)(v0 + 16), *(char **)(v0 + 24), *(char **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t type metadata accessor for MetricsReportingController()
{
  return objc_opt_self(_TtC9MusicCore26MetricsReportingController);
}

unint64_t sub_100A20AF8()
{
  unint64_t result;

  result = qword_1011D5AF8;
  if (!qword_1011D5AF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.TargetType, &type metadata for MetricsEvent.TargetType);
    atomic_store(result, (unint64_t *)&qword_1011D5AF8);
  }
  return result;
}

unint64_t sub_100A20B40()
{
  unint64_t result;

  result = qword_1011D5B00;
  if (!qword_1011D5B00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Page.DisplayType, &type metadata for MetricsEvent.Page.DisplayType);
    atomic_store(result, (unint64_t *)&qword_1011D5B00);
  }
  return result;
}

unint64_t sub_100A20B88()
{
  unint64_t result;

  result = qword_1011D5B08;
  if (!qword_1011D5B08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionType, &type metadata for MetricsEvent.Click.ActionType);
    atomic_store(result, (unint64_t *)&qword_1011D5B08);
  }
  return result;
}

unint64_t sub_100A20BD0()
{
  unint64_t result;

  result = qword_1011D5B10;
  if (!qword_1011D5B10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.ComponentRender.PreloadStatus, &type metadata for MetricsEvent.ComponentRender.PreloadStatus);
    atomic_store(result, (unint64_t *)&qword_1011D5B10);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent()
{
  return &type metadata for MetricsEvent;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.TargetType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.TargetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_100A20D00 + 4 * byte_100EDDABB[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_100A20D34 + 4 * byte_100EDDAB6[v4]))();
}

uint64_t sub_100A20D34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A20D3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A20D44);
  return result;
}

uint64_t sub_100A20D50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A20D58);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_100A20D5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A20D64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.TargetType()
{
  return &type metadata for MetricsEvent.TargetType;
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C(&qword_1011D2AE0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsEvent.Page(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
}

_QWORD *initializeWithCopy for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v18 = a3[10];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MetricsEvent.Page(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for MetricsEvent.Page(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A21518);
}

uint64_t sub_100A21518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011D2AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A215A4);
}

uint64_t sub_100A215A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011D2AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_100A2161C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100EDDDB8;
  v4[1] = &unk_100EDDDB8;
  sub_100A216B4(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100EDDDD0;
    v4[4] = &unk_100EDDDE8;
    v4[5] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[6] = &unk_100EDDDE8;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

void sub_100A216B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011DB4A0)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011DB4A0);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Page.DisplayType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100A21748 + 4 * byte_100EDDAC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100A21768 + 4 * byte_100EDDAC5[v4]))();
}

_BYTE *sub_100A21748(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100A21768(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A21770(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A21778(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A21780(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A21788(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Page.DisplayType()
{
  return &type metadata for MetricsEvent.Page.DisplayType;
}

_QWORD *initializeBufferWithCopyOfBuffer for MetricsEvent.Click(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = a3[7];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_100007E8C(&qword_1011D2AE0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    swift_bridgeObjectRetain();
    if (v19 > 9)
    {
      *v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
    v20 = a3[10];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = *(unsigned __int16 *)(v22 + 24);
    v52 = v13;
    if (v23 >> 8 <= 0xFE)
    {
      v24 = *(id *)v22;
      v25 = *(_QWORD *)(v22 + 8);
      v51 = v11;
      v26 = v12;
      v27 = *(_QWORD *)(v22 + 16);
      sub_10056C0FC(*(id *)v22, v25, v27, v23, SBYTE1(v23));
      *(_QWORD *)v21 = v24;
      *((_QWORD *)v21 + 1) = v25;
      *((_QWORD *)v21 + 2) = v27;
      v12 = v26;
      v11 = v51;
      *((_WORD *)v21 + 12) = v23;
    }
    else
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 10) = *(_OWORD *)(v22 + 10);
    }
    v28 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[13];
    v33 = a3[14];
    v34 = (_QWORD *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (char *)v4 + v33;
    v38 = (char *)a2 + v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52(v38, 1, v11))
    {
      v39 = sub_100007E8C(&qword_1011D2AE0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v37, v38, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    }
    v40 = a3[16];
    *(_QWORD *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *((_BYTE *)v4 + v40) = *((_BYTE *)a2 + v40);
    v41 = a3[17];
    v42 = a3[18];
    v43 = (_QWORD *)((char *)v4 + v41);
    v44 = (uint64_t *)((char *)a2 + v41);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    *((_BYTE *)v4 + v42) = *((_BYTE *)a2 + v42);
    v46 = a3[19];
    v47 = (_QWORD *)((char *)v4 + v46);
    v48 = (uint64_t *)((char *)a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

double destroy for MetricsEvent.Click(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v8 = a1 + a2[10];
  v9 = *(unsigned __int16 *)(v8 + 24);
  if (v9 >> 8 <= 0xFE)
    sub_10056C15C(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), v9, SBYTE1(v9));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = swift_bridgeObjectRelease();
  v11 = a1 + a2[14];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(v11, 1, v5, v10))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  unsigned int (*v50)(const void *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  if (v17 > 9)
  {
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(unsigned __int16 *)(v20 + 24);
  v50 = v12;
  if (v21 >> 8 <= 0xFE)
  {
    v22 = *(id *)v20;
    v23 = *(_QWORD *)(v20 + 8);
    v49 = v10;
    v24 = v11;
    v25 = *(_QWORD *)(v20 + 16);
    sub_10056C0FC(*(id *)v20, v23, v25, v21, SBYTE1(v21));
    *(_QWORD *)v19 = v22;
    *(_QWORD *)(v19 + 8) = v23;
    *(_QWORD *)(v19 + 16) = v25;
    v11 = v24;
    v10 = v49;
    *(_WORD *)(v19 + 24) = v21;
  }
  else
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 10) = *(_OWORD *)(v20 + 10);
  }
  v26 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[13];
  v31 = a3[14];
  v32 = (_QWORD *)(a1 + v30);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (void *)(a1 + v31);
  v36 = (const void *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50(v36, 1, v10))
  {
    v37 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v35, v36, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  }
  v38 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[17];
  v40 = a3[18];
  v41 = (_QWORD *)(a1 + v39);
  v42 = (_QWORD *)(a2 + v39);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v44 = a3[19];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  unsigned int v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  __n128 v44;
  uint64_t v45;
  void *v46;
  void *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  uint64_t (*v59)(void *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a1 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 8);
  if (v18 == 9)
  {
    if (v19 >= 0xA)
      goto LABEL_14;
    goto LABEL_18;
  }
  if (v19 == 9)
  {
    sub_1001C5334(v16);
LABEL_18:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_19;
  }
  if (v18 < 9)
  {
    if (v19 >= 9)
    {
LABEL_14:
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v19 < 9)
  {
    sub_10004FF60(v16, &qword_1011D3880);
    goto LABEL_18;
  }
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = (__int128 *)(a2 + v20);
  v23 = *(unsigned __int16 *)(a2 + v20 + 24);
  v24 = v23 >> 8;
  if (*(unsigned __int8 *)(a1 + v20 + 25) == 255)
  {
    if (v24 <= 0xFE)
    {
      v58 = v11;
      v60 = v10;
      v27 = *(void **)v22;
      v28 = *((_QWORD *)v22 + 1);
      v29 = *((_QWORD *)v22 + 2);
      sub_10056C0FC(v27, v28, v29, v23, SBYTE1(v23));
      *(_QWORD *)v21 = v27;
      *(_QWORD *)(v21 + 8) = v28;
      v11 = v58;
      v10 = v60;
      *(_QWORD *)(v21 + 16) = v29;
      *(_WORD *)(v21 + 24) = v23;
    }
    else
    {
      v25 = *v22;
      *(_OWORD *)(v21 + 10) = *(__int128 *)((char *)v22 + 10);
      *(_OWORD *)v21 = v25;
    }
  }
  else if (v24 <= 0xFE)
  {
    v59 = v11;
    v61 = v10;
    v30 = *(void **)v22;
    v31 = *((_QWORD *)v22 + 1);
    v32 = *((_QWORD *)v22 + 2);
    sub_10056C0FC(v30, v31, v32, v23, SBYTE1(v23));
    v33 = *(void **)v21;
    v34 = *(_QWORD *)(v21 + 8);
    v35 = *(_QWORD *)(v21 + 16);
    *(_QWORD *)v21 = v30;
    *(_QWORD *)(v21 + 8) = v31;
    v11 = v59;
    v10 = v61;
    *(_QWORD *)(v21 + 16) = v32;
    v36 = *(unsigned __int8 *)(v21 + 24);
    *(_BYTE *)(v21 + 24) = v23;
    v37 = *(_BYTE *)(v21 + 25);
    *(_BYTE *)(v21 + 25) = BYTE1(v23);
    sub_10056C15C(v33, v34, v35, v36, v37);
  }
  else
  {
    sub_100A22318(v21);
    v26 = *(__int128 *)((char *)v22 + 10);
    *(_OWORD *)v21 = *v22;
    *(_OWORD *)(v21 + 10) = v26;
  }
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[12];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = a3[13];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  v44 = swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = (void *)(a1 + v45);
  v47 = (void *)(a2 + v45);
  v48 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(a1 + v45, 1, v9, v44);
  v49 = v11(v47, 1, v9);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v46, v47, v9);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v46, v9);
    goto LABEL_31;
  }
  if (v49)
  {
LABEL_31:
    v50 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v46, v47, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v9);
LABEL_32:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v51 = a3[17];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v54 = a3[19];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A22318(uint64_t a1)
{
  sub_10056C15C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
  return a1;
}

uint64_t initializeWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[10];
  v15 = a3[11];
  v16 = (_OWORD *)(a1 + v14);
  v17 = (_OWORD *)(a2 + v14);
  *v16 = *v17;
  *(_OWORD *)((char *)v16 + 10) = *(_OWORD *)((char *)v17 + 10);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v18 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[14];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  if (v11((const void *)(a2 + v19), 1, v9))
  {
    v22 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  }
  v23 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  void *v42;
  void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = (_OWORD *)(a2 + v16);
  v19 = *(_QWORD *)(a1 + v16 + 8);
  v20 = *(_QWORD *)(a2 + v16 + 8);
  if (v19 == 9)
  {
LABEL_13:
    *(_OWORD *)v17 = *v18;
    goto LABEL_14;
  }
  if (v20 == 9)
  {
    sub_1001C5334(v17);
    goto LABEL_13;
  }
  if (v19 < 9)
    goto LABEL_13;
  if (v20 < 9)
  {
    sub_10004FF60(v17, &qword_1011D3880);
    goto LABEL_13;
  }
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v20;
  swift_bridgeObjectRelease();
LABEL_14:
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int16 *)(a1 + v21 + 24);
  if (v24 >> 8 > 0xFE)
  {
LABEL_17:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 10) = *(_OWORD *)(v23 + 10);
    goto LABEL_19;
  }
  v25 = *(unsigned __int16 *)(v23 + 24);
  if (v25 >> 8 > 0xFE)
  {
    sub_100A22318(v22);
    goto LABEL_17;
  }
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(void **)v22;
  v28 = *(_QWORD *)(v22 + 8);
  v29 = *(_QWORD *)(v22 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = v26;
  *(_WORD *)(v22 + 24) = v25;
  sub_10056C15C(v27, v28, v29, v24, SBYTE1(v24));
LABEL_19:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v30 = a3[12];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[13];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  v40 = swift_bridgeObjectRelease();
  v41 = a3[14];
  v42 = (void *)(a1 + v41);
  v43 = (void *)(a2 + v41);
  v44 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v12)(a1 + v41, 1, v10, v40);
  v45 = v12(v43, 1, v10);
  if (!v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v42, v43, v10);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v42, v10);
    goto LABEL_24;
  }
  if (v45)
  {
LABEL_24:
    v46 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v42, v43, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
LABEL_25:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  v47 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)(a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  v52 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v53 = (_QWORD *)(a1 + v52);
  v54 = (uint64_t *)(a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A22890);
}

uint64_t sub_100A22890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011D2AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A2291C);
}

uint64_t sub_100A2291C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011D2AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_100A22994(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  void *v15;
  void *v16;
  void *v17;

  v4[0] = &unk_100EDDDB8;
  v4[1] = &unk_100EDDE18;
  v4[2] = &unk_100EDDE30;
  sub_100A216B4(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = &unk_100EDDDD0;
    v7 = &unk_100EDDE48;
    v8 = &unk_100EDDE60;
    v9 = &unk_100EDDDD0;
    v10 = &unk_100EDDDE8;
    v11 = &unk_100EDDDE8;
    v12 = v5;
    v13 = &unk_100EDDDD0;
    v14 = (char *)&value witness table for Builtin.Int8 + 64;
    v15 = &unk_100EDDDE8;
    v16 = &unk_100EDDE78;
    v17 = &unk_100EDDDE8;
    swift_initStructMetadata(a1, 256, 16, v4, a1 + 16);
  }
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD1)
    goto LABEL_17;
  if (a2 + 47 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 47) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 47;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 47;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 47;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x30;
  v8 = v6 - 48;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 47 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 47) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD0)
    return ((uint64_t (*)(void))((char *)&loc_100A22B44 + 4 * byte_100EDDACF[v4]))();
  *a1 = a2 + 47;
  return ((uint64_t (*)(void))((char *)sub_100A22B78 + 4 * byte_100EDDACA[v4]))();
}

uint64_t sub_100A22B78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A22B80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A22B88);
  return result;
}

uint64_t sub_100A22B94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A22B9CLL);
  *(_BYTE *)result = a2 + 47;
  return result;
}

uint64_t sub_100A22BA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A22BA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionType()
{
  return &type metadata for MetricsEvent.Click.ActionType;
}

unint64_t destroy for MetricsEvent.Click.ActionContext(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for MetricsEvent.Click.ActionContext(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_7;
  }
  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionContext(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF6 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483639);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 8;
  if (v4 >= 0xA)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 8;
  }
  return result;
}

_QWORD *sub_100A22DD0(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionContext()
{
  return &type metadata for MetricsEvent.Click.ActionContext;
}

double destroy for MetricsEvent.Click.ActionDetails(uint64_t a1)
{
  return sub_10056C15C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25));
}

uint64_t initializeWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_10056C0FC(*(id *)a2, v4, v5, v7, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_10056C0FC(*(id *)a2, v4, v5, v7, v6);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v11 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  v12 = *(_BYTE *)(a1 + 25);
  *(_BYTE *)(a1 + 25) = v6;
  sub_10056C15C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 25);
  v9 = *(unsigned __int8 *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_10056C15C(v5, v7, v6, v9, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 26))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 25) = -(char)a2;
  }
  return result;
}

uint64_t sub_100A22FF0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 25) <= 3u)
    return *(unsigned __int8 *)(a1 + 25);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_100A23008(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
    *(_BYTE *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 25) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails()
{
  return &type metadata for MetricsEvent.Click.ActionDetails;
}

id *destroy for MetricsEvent.Click.ActionDetails.SearchSource(id *result)
{
  id *v1;

  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    v1 = result;

    return (id *)swift_bridgeObjectRelease(v1[2]);
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO12SearchSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    v6 = v3;
    swift_bridgeObjectRetain(v5);
  }
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 16) = v9;
      v10 = v5;
      swift_bridgeObjectRetain(v9);
      return a1;
    }
LABEL_7:
    v11 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v11;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

__n128 initializeWithTake for Player.NowPlayingConfiguration(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_100A232D8(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.SearchSource()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.SearchSource;
}

uint64_t destroy for MetricsEvent.LoadUrl(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[24]);
  swift_bridgeObjectRelease(a1[26]);
  swift_bridgeObjectRelease(a1[28]);
  swift_bridgeObjectRelease(a1[30]);
  swift_bridgeObjectRelease(a1[32]);
  return swift_bridgeObjectRelease(a1[37]);
}

uint64_t initializeWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v4 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v4;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  v5 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v5;
  v6 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v6;
  v7 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v7;
  v8 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v8;
  v9 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v9;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v10 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v10;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = a2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 160) = a2[20];
  v14 = a2[21];
  v15 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_BYTE *)(a1 + 177) = *((_BYTE *)a2 + 177);
  *(_QWORD *)(a1 + 184) = a2[23];
  v16 = a2[24];
  v17 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 200) = a2[25];
  v18 = a2[26];
  v19 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)(a1 + 216) = a2[27];
  v20 = a2[28];
  v21 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a1 + 232) = a2[29];
  v22 = a2[30];
  v23 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)(a1 + 248) = a2[31];
  v24 = a2[32];
  v25 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(a1 + 264) = a2[33];
  *(_QWORD *)(a1 + 272) = a2[34];
  *(_QWORD *)(a1 + 280) = a2[35];
  *(_QWORD *)(a1 + 288) = a2[36];
  v26 = a2[37];
  v27 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 296) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  return a1;
}

void *initializeWithTake for MetricsEvent.LoadUrl(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

uint64_t assignWithTake for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a2 + 168);
  v6 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
  v7 = *(_QWORD *)(a2 + 192);
  v8 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 224);
  v12 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 240);
  v14 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a2 + 256);
  v16 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v15;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v17 = *(_QWORD *)(a2 + 296);
  v18 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v17;
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 304))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 168);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 304) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 304) = 0;
    if (a2)
      *(_QWORD *)(result + 168) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.LoadUrl()
{
  return &type metadata for MetricsEvent.LoadUrl;
}

void destroy for MetricsEvent.ComponentRender(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

uint64_t initializeWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(void **)(a2 + 40);
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(void **)(a2 + 56);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain(v3);
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = v7;

  v9 = *(void **)(a1 + 32);
  v10 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 40);
  v13 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = v13;

  v15 = *(void **)(a2 + 48);
  v16 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v15;
  v17 = v15;

  v18 = *(void **)(a1 + 56);
  v19 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v19;
  v20 = v19;

  v21 = *(void **)(a1 + 64);
  v22 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v22;
  v23 = v22;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v7 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v8 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender()
{
  return &type metadata for MetricsEvent.ComponentRender;
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.ComponentRender.PreloadStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100A23C44 + 4 * byte_100EDDAD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100A23C78 + 4 * byte_100EDDAD4[v4]))();
}

uint64_t sub_100A23C78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A23C80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A23C88);
  return result;
}

uint64_t sub_100A23C94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A23C9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100A23CA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A23CA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender.PreloadStatus()
{
  return &type metadata for MetricsEvent.ComponentRender.PreloadStatus;
}

uint64_t sub_100A23CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

double sub_100A23CE8(void *a1)
{
  uint64_t v1;

  return sub_100A1E904(a1, v1);
}

void sub_100A23CF0()
{
  uint64_t v0;

  sub_100A3D0E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_100A23D0C(uint64_t a1)
{
  uint64_t v1;

  return sub_100A1E9E0(a1, v1);
}

void sub_100A23D18()
{
  uint64_t v0;

  sub_100A1E988(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100A23D20()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A23D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011D5CEC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  v3[11] = v2;
  return swift_task_switch(sub_100A1EBD0, 0, 0);
}

uint64_t sub_100A23DB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A23DF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100A23E14()
{
  uint64_t v0;

  sub_100A1D6F0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler, (uint64_t (*)(void *))sub_100A1616C);
}

void sub_100A23E3C()
{
  uint64_t v0;

  sub_100A1D6F0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler, (uint64_t (*)(void *))sub_100A15D38);
}

void sub_100A23E64()
{
  uint64_t v0;

  sub_100A1C3D8(*(void **)(v0 + 16));
}

void sub_100A23E6C()
{
  uint64_t v0;

  sub_100A1F15C(*(void **)(v0 + 24), (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

void sub_100A23F18(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v5 = ActionType.rawValue.getter(*(_BYTE *)(a2 + 32));
    v7 = v6;
    v8 = ActionType.rawValue.getter(a1);
    if (v5 == v8 && v7 == v9)
    {
LABEL_20:
      swift_bridgeObjectRelease_n(v7, 2);
    }
    else
    {
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
LABEL_7:
        swift_bridgeObjectRelease();
      }
      else if (v2 == 1)
      {
LABEL_17:
        swift_bridgeObjectRelease();
      }
      else
      {
        v12 = 33;
        while (1)
        {
          v13 = v12 - 31;
          if (__OFADD__(v12 - 32, 1))
            break;
          v14 = ActionType.rawValue.getter(*(_BYTE *)(a2 + v12));
          v7 = v15;
          v16 = ActionType.rawValue.getter(a1);
          if (v14 == v16 && v7 == v17)
          {
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
          v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v7, v16, v17, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) != 0)
            goto LABEL_7;
          ++v12;
          if (v13 == v2)
            goto LABEL_17;
        }
        __break(1u);
      }
    }
  }
}

uint64_t sub_100A2406C(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }
  return 0;
}

double Double.toMilliseconds.getter(double a1)
{
  return a1 * 1000.0;
}

void MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v16 = (int *)type metadata accessor for MetricsPageProperties(0);
  v17 = (uint64_t)a9 + v16[6];
  v18 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v16[7];
  *(_QWORD *)((char *)a9 + v19) = 0;
  v20 = (_QWORD *)((char *)a9 + v16[8]);
  *v20 = 0;
  v20[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_100A202C4(a5, v17);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v19));
  *(_QWORD *)((char *)a9 + v19) = a6;
  swift_bridgeObjectRelease(v20[1]);
  *v20 = a7;
  v20[1] = a8;
}

uint64_t type metadata accessor for MetricsPageProperties(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D5D70;
  if (!qword_1011D5D70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MetricsPageProperties);
  return result;
}

uint64_t sub_100A244A8(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  void **aBlock;
  unint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  unsigned __int8 v30;

  objc_opt_self(MPModelGenericObject);
  v2 = (void *)swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = objc_msgSend(v2, "innermostModelObject");
LABEL_3:
    v4 = sub_100A244A8(v3);

    v5 = 0;
    v6 = 0;
LABEL_8:
    v30 = v4;
LABEL_9:
    sub_10004BA30((uint64_t)v5, v6);
    return v4;
  }
  objc_opt_self(MPModelArtist);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 3;
    goto LABEL_8;
  }
  objc_opt_self(MPModelSocialPerson);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 4;
    goto LABEL_8;
  }
  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(a1))
  {

    v4 = 0;
    v5 = 0;
    v6 = 0;
    v30 = 0;
    goto LABEL_9;
  }
  objc_opt_self(MPModelComposer);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 8;
    goto LABEL_8;
  }
  objc_opt_self(MPModelCurator);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 10;
    goto LABEL_8;
  }
  objc_opt_self(MPModelGenre);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 11;
    goto LABEL_8;
  }
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 1;
    goto LABEL_8;
  }
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(a1))
  {

    v5 = 0;
    v6 = 0;
    v4 = 12;
    goto LABEL_8;
  }
  objc_opt_self(MPModelSong);
  v8 = swift_dynamicCastObjCClass(a1);
  if (v8)
  {
    v9 = v8;
    v30 = 2;
    v10 = (void *)objc_opt_self(MPModelObject);
    v11 = swift_allocObject(&unk_1010F0E98, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = &v30;
    v12 = swift_allocObject(&unk_1010F0EC0, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100A29F48;
    *(_QWORD *)(v12 + 24) = v11;
    v23 = v11;
    v28 = sub_10010942C;
    v29 = v12;
    aBlock = _NSConcreteStackBlock;
    v25 = 1107296256;
    v26 = sub_10046D7B4;
    v27 = &unk_1010F0ED8;
    v13 = _Block_copy(&aBlock);
    v14 = a1;
    swift_retain();
    objc_msgSend(v10, "performWithoutEnforcement:", v13, swift_release().n128_f64[0]);

    _Block_release(v13);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v12, "", 127, 609, 53, 1);
    swift_release();
    if ((v14 & 1) == 0)
    {
      v5 = sub_100A29F48;
      v4 = v30;
      v6 = v23;
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    objc_opt_self(MPModelTVShow);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 6;
      goto LABEL_8;
    }
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 7;
      goto LABEL_8;
    }
    objc_opt_self(MPModelMovie);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 5;
      goto LABEL_8;
    }
    objc_opt_self(MPModelPlaylistEntry);
    v15 = (void *)swift_dynamicCastObjCClass(a1);
    if (v15)
    {
      v16 = objc_msgSend(v15, "innermostModelObject");
      objc_opt_self(MPModelPlaylistEntry);
      if (swift_dynamicCastObjCClass(v16))
      {

        v5 = 0;
        v6 = 0;
        v4 = 17;
        goto LABEL_8;
      }
      v3 = v16;
      goto LABEL_3;
    }
    objc_opt_self(MPModelRecordLabel);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 19;
      goto LABEL_8;
    }
    objc_opt_self(MPModelCreditsArtist);
    if (swift_dynamicCastObjCClass(a1))
    {

      v5 = 0;
      v6 = 0;
      v4 = 9;
      goto LABEL_8;
    }
  }
  aBlock = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  aBlock = (void **)0xD00000000000002BLL;
  v25 = 0x8000000100E4C6E0;
  v17 = sub_100B443D4((uint64_t)&off_1010E5168);
  MPModelObject.humanDescription(including:)(v17);
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v25, "MusicCore/MetricsUtilities.swift", 32, 2, 635, 0);
  __break(1u);
  return result;
}

uint64_t MetricsContentType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A24A3C + 4 * byte_100EDDF2A[a1]))(0x6D75626C61, 0xE500000000000000);
}

uint64_t sub_100A24A3C()
{
  return 0x7473696C79616C70;
}

uint64_t sub_100A24BC8()
{
  return 0x497972617262696CLL;
}

uint64_t sub_100A24BE8()
{
  return 0x614C64726F636572;
}

BOOL sub_100A24C08()
{
  void *v0;
  uint64_t ObjectType;
  void *v2;
  void *ObjCClassFromMetadata;
  double v4;
  double v5;
  double v6;
  _BOOL8 result;

  ObjectType = swift_getObjectType();
  result = 1;
  if (!objc_msgSend(v0, "cachedResponse")
    || (v2 = (void *)swift_getObjCClassFromMetadata(ObjectType),
        objc_msgSend(v0, "xpSamplingPercentageCachedResponses"),
        (objc_msgSend(v2, "shouldReportCachedEventWithSamplingPercentage:") & 1) == 0))
  {
    if ((objc_msgSend(v0, "cachedResponse") & 1) != 0)
      return 0;
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(ObjectType);
    objc_msgSend(v0, "xpSessionDuration");
    v5 = v4;
    objc_msgSend(v0, "xpSamplingPercentageUsers");
    if ((objc_msgSend(ObjCClassFromMetadata, "shouldCollectTimingDataWithSessionDuration:samplingPercentage:", v5, v6) & 1) == 0)return 0;
  }
  return result;
}

id Double.toMillisecondsInServerTime.getter(double a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(AMSMetrics), "serverTimeFromTimeInterval:", a1);
  v2 = objc_msgSend(v1, "unsignedLongLongValue");

  return v2;
}

uint64_t sub_100A24D4C()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "propertyForBodyKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100A286FC((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10004FF60((uint64_t)v6, &qword_1011D7160);
    return 0;
  }
}

uint64_t SharePlayTogetherSession.Participant.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t MetricsPageProperties.pageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MetricsPageProperties(0);
  return sub_10004A160(v1 + *(int *)(v3 + 24), a1, &qword_1011D2AE0);
}

uint64_t MetricsPageProperties.pageURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MetricsPageProperties(0) + 24);
  return sub_100A202C4(a1, v3);
}

double (*MetricsPageProperties.pageURL.modify())(_QWORD)
{
  type metadata accessor for MetricsPageProperties(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsPageProperties.pageDetails.getter()
{
  type metadata accessor for MetricsPageProperties(0);
  return swift_bridgeObjectRetain();
}

void MetricsPageProperties.pageDetails.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MetricsPageProperties(0) + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*MetricsPageProperties.pageDetails.modify())(_QWORD)
{
  type metadata accessor for MetricsPageProperties(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsPageProperties.extRefUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MetricsPageProperties(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

void MetricsPageProperties.extRefUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MetricsPageProperties(0) + 32));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*MetricsPageProperties.extRefUrl.modify())(_QWORD)
{
  type metadata accessor for MetricsPageProperties(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t sub_100A25030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = MetricsContentType.rawValue.getter(*a1);
  v5 = v4;
  v6 = MetricsContentType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_100A250B8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = MetricsContentType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100A25118(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = MetricsContentType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100A25158(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = MetricsContentType.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100A251B4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100A251E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MetricsContentType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

char *sub_100A25208()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v17;
  unint64_t v18;
  _BYTE v19[24];
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForConfigurationKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(&v21, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_100A286FC((uint64_t)&v21, (uint64_t)v19);
  if (!v20)
  {
    sub_10004FF60((uint64_t)v19, &qword_1011D7160);
    return 0;
  }
  v3 = sub_100007E8C(&qword_1011D5E18);
  if ((swift_dynamicCast(&v17, v19, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(v17 + 16);
  if (v4)
  {
    v5 = v17 + 32;
    v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      sub_10004FA40(v5, (uint64_t)v19);
      v7 = sub_100007E8C((uint64_t *)&unk_1011D6120);
      if ((swift_dynamicCast(&v21, v19, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
      {
        v8 = v21;
        v17 = 0x6D614E646C656966;
        v18 = 0xE900000000000065;
        AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v8 + 16) && (v9 = sub_10079C294((uint64_t)v19), (v10 & 1) != 0))
        {
          sub_10004FA40(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v21);
        }
        else
        {
          v21 = 0u;
          v22 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_10004FF2C((uint64_t)v19);
        if (*((_QWORD *)&v22 + 1))
        {
          if ((swift_dynamicCast(&v17, &v21, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
          {
            v11 = v17;
            v12 = v18;
            if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
              v6 = sub_1009B96FC(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
            v14 = *((_QWORD *)v6 + 2);
            v13 = *((_QWORD *)v6 + 3);
            if (v14 >= v13 >> 1)
              v6 = sub_1009B96FC((char *)(v13 > 1), v14 + 1, 1, v6);
            *((_QWORD *)v6 + 2) = v14 + 1;
            v15 = &v6[16 * v14];
            *((_QWORD *)v15 + 4) = v11;
            *((_QWORD *)v15 + 5) = v12;
          }
        }
        else
        {
          sub_10004FF60((uint64_t)&v21, &qword_1011D7160);
        }
      }
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t SSMetricsMutableEvent.dictionaryRepresentation.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
  objc_msgSend(v0, "appendPropertiesToBody:", v1);
  v4 = 0;
  v2 = v1;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

  return v4;
}

uint64_t sub_100A25564(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v2;
  NSString v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v22[2];
  _QWORD v23[3];
  uint64_t v24;

  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setProperty:forBodyKey:", v5, v6);

  if (!a1)
    goto LABEL_7;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(a1, "valueForConfigurationKey:", v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(v22, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_100A286FC((uint64_t)v22, (uint64_t)v23);
  v9 = v24;
  if (v24)
  {
    v10 = sub_100007E68(v23, v24);
    v11 = *(_QWORD *)(v9 - 8);
    v12 = __chkstk_darwin(v10);
    v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v23);
  }
  else
  {
LABEL_7:
    v15 = 0;
  }
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setProperty:forBodyKey:", v15, v16);
  swift_unknownObjectRelease(v15);

  return a2(v17, v18, v19, v20);
}

double sub_100A25768(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD aBlock[6];

  v4 = v3;
  v27 = a2;
  v28 = a3;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v9 - 8);
  v30 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS.QoSClass(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchQoS.QoSClass.userInitiated(_:), v12);
  v16 = (void *)static OS_dispatch_queue.global(qos:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v17 = (_QWORD *)swift_allocObject(&unk_1010F0D80, 48, 7);
  v17[2] = a1;
  v17[3] = v3;
  v18 = v28;
  v17[4] = v27;
  v17[5] = v18;
  aBlock[4] = sub_100A29EA0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F0D98;
  v19 = _Block_copy(aBlock);
  v20 = a1;
  v21 = v4;
  v22 = swift_retain();
  static DispatchQoS.unspecified.getter(v22);
  v32 = _swiftEmptyArrayStorage;
  v23 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100007E8C(&qword_1011D5E08);
  v25 = sub_100A29EAC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v24, v25, v6, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100A259E0(uint64_t a1, void *a2, void (*a3)(__n128))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  double v16;
  id v17;
  id v18;
  NSString v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v44;
  uint64_t *v45;
  void (*v46)(__n128);
  uint64_t v47;
  int64_t v48;
  unint64_t v49;

  v5 = _s9MusicCore18DeviceCapabilitiesO9diskUsageSDyAC04DiskF8CategoryOs5Int64VGvgZ_0();
  v6 = sub_100A15594((uint64_t)&off_1010E6AB8);
  v7 = sub_100007E8C(&qword_1011D5E10);
  swift_arrayDestroy(&unk_1010E6AD8, 5, v7);
  v46 = a3;
  if (a1 && (v8 = sub_100A25208()) != 0)
  {
    v9 = v8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = (char *)_swiftEmptyArrayStorage;
  }
  v10 = 0;
  v11 = v6 + 64;
  v12 = 1 << *(_BYTE *)(v6 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v6 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  v45 = (uint64_t *)(v9 + 72);
  v48 = v15;
  v49 = v6;
  while (1)
  {
    do
    {
      do
      {
        while (v14)
        {
          v20 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
          v21 = v20 | (v10 << 6);
          if (*(_QWORD *)(v5 + 16))
            goto LABEL_28;
        }
        v22 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v22 >= v15)
          goto LABEL_51;
        v23 = *(_QWORD *)(v11 + 8 * v22);
        ++v10;
        if (!v23)
        {
          v10 = v22 + 1;
          if (v22 + 1 >= v15)
            goto LABEL_51;
          v23 = *(_QWORD *)(v11 + 8 * v10);
          if (!v23)
          {
            v10 = v22 + 2;
            if (v22 + 2 >= v15)
              goto LABEL_51;
            v23 = *(_QWORD *)(v11 + 8 * v10);
            if (!v23)
            {
              v24 = v22 + 3;
              if (v24 >= v15)
              {
LABEL_51:
                swift_bridgeObjectRelease();
                swift_release();
                v44 = swift_bridgeObjectRelease();
                v46(v44);
                return;
              }
              v23 = *(_QWORD *)(v11 + 8 * v24);
              if (!v23)
              {
                while (1)
                {
                  v10 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_53;
                  if (v10 >= v15)
                    goto LABEL_51;
                  v23 = *(_QWORD *)(v11 + 8 * v10);
                  ++v24;
                  if (v23)
                    goto LABEL_27;
                }
              }
              v10 = v24;
            }
          }
        }
LABEL_27:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v10 << 6);
      }
      while (!*(_QWORD *)(v5 + 16));
LABEL_28:
      v25 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v21);
      v27 = *v25;
      v26 = v25[1];
      v28 = sub_10079C9A8(*(_BYTE *)(*(_QWORD *)(v6 + 48) + v21));
    }
    while ((v29 & 1) == 0);
    v16 = (double)(*(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v28) / 0x100000);
    v30 = *((_QWORD *)v9 + 2);
    if (v30)
      break;
LABEL_10:
    v17 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    v18 = objc_msgSend(v17, "initWithDouble:", v16);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setProperty:forBodyKey:", v18, v19, swift_bridgeObjectRelease().n128_f64[0]);

  }
  v31 = v11;
  v32 = *((_QWORD *)v9 + 4);
  v33 = *((_QWORD *)v9 + 5);
  v34 = v9;
  v35 = v32 == v27 && v33 == v26;
  if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v27, v26, 0) & 1) != 0)
    goto LABEL_8;
  if (v30 == 1)
    goto LABEL_9;
  v36 = *((_QWORD *)v9 + 6);
  v37 = *((_QWORD *)v9 + 7);
  v38 = v36 == v27 && v37 == v26;
  if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v27, v26, 0) & 1) != 0)
  {
LABEL_8:
    v16 = floor(v16 / 100.0) * 100.0;
LABEL_9:
    v9 = v34;
    v11 = v31;
    v15 = v48;
    v6 = v49;
    goto LABEL_10;
  }
  if (v30 == 2)
    goto LABEL_9;
  v39 = v45;
  v40 = 2;
  while (!__OFADD__(v40, 1))
  {
    v41 = *(v39 - 1);
    v42 = *v39;
    if (v41 == v27 && v42 == v26)
      goto LABEL_8;
    v47 = v40 + 1;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v27, v26, 0) & 1) != 0)
      goto LABEL_8;
    v39 += 2;
    ++v40;
    if (v47 == v30)
      goto LABEL_9;
  }
LABEL_54:
  __break(1u);
}

void sub_100A25D4C(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  void *v4;
  void *v7;
  void (*v9)(void **, _QWORD *);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[2];
  void *v16;
  uint64_t v17;

  v17 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v7 = v4;
    v9 = *(void (**)(void **, _QWORD *))(a2 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1009BBAB8(0, 1);
    v10 = v17;
    v11 = (_QWORD *)swift_allocObject(&unk_1010F0D08, 56, 7);
    v11[2] = v7;
    v11[3] = a1;
    v11[4] = v10;
    v11[5] = a3;
    v11[6] = a4;
    v16 = a1;
    v12 = swift_allocObject(&unk_1010F0D30, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100A29E2C;
    *(_QWORD *)(v12 + 24) = v11;
    v15[0] = sub_1001095DC;
    v15[1] = v12;
    v13 = a1;
    swift_retain();
    swift_retain();
    v14 = v7;
    v9(&v16, v15);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    a3();
  }
}

uint64_t sub_100A25E80(void *a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  Class isa;

  if (a1)
  {
    v6 = objc_msgSend(a1, "eventFields");
    if (v6)
    {
      v7 = v6;
      v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v9 = sub_100B69144(v8);
      swift_bridgeObjectRelease();
      if (v9)
      {
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(a4, "addPropertiesWithDictionary:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      }
    }
  }
  return a2();
}

double sub_100A25F5C(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(), uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  double result;

  v4 = *a1;
  v6 = *a2;
  v5 = a2[1];
  v7 = swift_allocObject(&unk_1010F0DD0, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  v8 = swift_retain();
  a3(v4, sub_10004D5F4, v7, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100A25FD0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSString v8;

  v6 = objc_msgSend((id)objc_opt_self(ICDeviceInfo), "currentDeviceInfo");
  v7 = objc_msgSend(v6, "buildVersion");

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a4, "setProperty:forBodyKey:", v7, v8);

  return a2();
}

void sub_100A26134(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  double v7;
  objc_super v8;
  _QWORD aBlock[6];

  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F0A28;
  v6 = _Block_copy(aBlock);
  swift_retain();
  *(_QWORD *)&v7 = swift_release().n128_u64[0];
  v8.receiver = a1;
  v8.super_class = (Class)SSMetricsBaseEvent;
  objc_msgSendSuper2(&v8, "setStandardPropertiesWith:completionHandler:", a2, v6, v7);
  _Block_release(v6);
}

void ICURLSession.enqueueDataRequestRecordingPerformanceMetrics(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v7 = swift_allocObject(&unk_1010F07C8, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v9[4] = sub_100A27C9C;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004E2F4;
  v9[3] = &unk_1010F07E0;
  v8 = _Block_copy(v9);
  swift_retain();
  objc_msgSend(v3, "enqueueDataRequest:withCompletionHandler:", a1, v8, swift_release().n128_f64[0]);
  _Block_release(v8);
}

uint64_t sub_100A26378(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t);
  _QWORD aBlock[6];

  v31 = a4;
  v32 = a3;
  v30 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
  v21 = swift_allocObject(&unk_1010F0DF8, 24, 7);
  *(_QWORD *)(v21 + 16) = a1;
  aBlock[4] = sub_100A29F1C;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F0E10;
  v22 = _Block_copy(aBlock);
  v23 = a1;
  v24 = swift_release();
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100007E8C(&qword_1011D5E08);
  v27 = sub_100A29EAC();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v5, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v32(a1, v30);
}

void sub_100A2658C(id a1)
{
  id v2;
  id v3;
  MusicCore::MetricsEvent::LoadUrl v4;

  if (qword_1011D1C18 == -1)
  {
    if (!a1)
      return;
  }
  else
  {
    swift_once(&qword_1011D1C18, sub_100A19B6C);
    if (!a1)
      return;
  }
  v2 = objc_msgSend(a1, "performanceMetrics");
  if (v2)
  {
    v3 = v2;
    sub_100A2035C(v3, (uint64_t)&v4);
    MetricsReportingController.recordLoadUrlEvent(_:)(&v4);
    sub_100A207A8(&v4);

  }
}

uint64_t sub_100A26634()
{
  return sub_100A267D0();
}

uint64_t sub_100A266DC()
{
  return sub_100A266F8(0xD00000000000001CLL, 0x8000000100E4C460);
}

uint64_t sub_100A266F8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD v4[2];
  _BYTE v5[24];
  uint64_t v6;

  v4[0] = a1;
  v4[1] = a2;
  v2 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v4, (uint64_t)&type metadata for String, v2, (uint64_t)v5);
  if (v6)
  {
    if ((swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      return LOBYTE(v4[0]);
  }
  else
  {
    sub_10004FF60((uint64_t)v5, &qword_1011D7160);
  }
  return 0;
}

uint64_t sub_100A2677C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A26BBC(0xD00000000000001CLL, 0x8000000100E4C6C0, a1);
}

uint64_t sub_100A26798(uint64_t a1)
{
  return sub_100A26CA0(a1, 0xD00000000000001CLL, 0x8000000100E4C6C0);
}

uint64_t sub_100A267B4()
{
  return sub_100A267D0();
}

uint64_t sub_100A267D0()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "propertyForBodyKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100A286FC((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_10004FF60((uint64_t)v7, &qword_1011D7160);
    return 0;
  }
}

uint64_t sub_100A268E4(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  id v8;
  NSString v9;
  id v10;
  id v11;
  __n128 v12;

  v7 = a1;
  swift_retain();
  v8 = v3;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setEventType:", v9);

  v10 = v8;
  v11 = v7;
  swift_retain();
  sub_100A298D8(a1, v10, v10, (uint64_t)a1, a2, a3);

  return swift_release_n(a3, 2, v12);
}

id sub_100A26B28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A26B84()
{
  return sub_100A266F8(0xD000000000000017, 0x8000000100E4C670);
}

uint64_t sub_100A26BA0@<X0>(uint64_t a1@<X8>)
{
  return sub_100A26BBC(0xD000000000000026, 0x8000000100E4C690, a1);
}

uint64_t sub_100A26BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _QWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v9[0] = a1;
  v9[1] = a2;
  v4 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v9, (uint64_t)&type metadata for String, v4, (uint64_t)v10);
  if (v11)
  {
    v5 = type metadata accessor for Date(0);
    v6 = swift_dynamicCast(a3, v10, (char *)&type metadata for Any + 8, v5, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_10004FF60((uint64_t)v10, &qword_1011D7160);
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a3, 1, 1, v8);
  }
}

uint64_t sub_100A26C84(uint64_t a1)
{
  return sub_100A26CA0(a1, 0xD000000000000026, 0x8000000100E4C690);
}

uint64_t sub_100A26CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;

  v6 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v8, &qword_1011D5D00);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011D5D00);
    v15 = 0u;
    v16 = 0u;
  }
  else
  {
    *((_QWORD *)&v16 + 1) = v9;
    v11 = sub_100049F68(&v15);
    (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 32))(v11, v8, v9);
  }
  v14[0] = a2;
  v14[1] = a3;
  v12 = sub_10098A8C0();
  NSUserDefaults.subscript.setter((uint64_t)&v15, (uint64_t)v14, (uint64_t)&type metadata for String, v12);
  return sub_10004FF60(a1, &qword_1011D5D00);
}

id DeviceCapabilitiesObjC.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "init");
}

id Music_SSMetricsPageRenderEvent.__allocating_init(bodyDictionary:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone(v1);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v5 = objc_msgSend(v3, "initWithBodyDictionary:", isa);

  return v5;
}

id Music_SSMetricsPageRenderEvent.init(bodyDictionary:)(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  Class isa;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithBodyDictionary:", isa);

  return v5;
}

void sub_100A27080(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  char v27;
  int64_t v28;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v28)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v28)
        return;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v28)
          return;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v28)
            return;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_10079C2C4(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    v25 = v24[1];
    if (*v24 == v20 && v25 == v19)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(*v24, v25, v20, v19, 0);
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        return;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v28)
    return;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v28)
      return;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_36:
  __break(1u);
}

uint64_t _s9MusicCore21MetricsPagePropertiesV23__derived_struct_equalsySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100007E8C(&qword_1011D5E20);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v11);
  v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v47[-v15];
  __chkstk_darwin(v17);
  v19 = &v47[-v18];
  v20 = a1[1];
  v21 = a2[1];
  if (*a1 == *a2 && v20 == v21
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v20, *a2, v21, 0), result = 0, (v22 & 1) != 0))
  {
    if ((v24 = a1[2], v25 = a1[3], v26 = a2[2], v27 = a2[3], v24 == v26) && v25 == v27
      || (v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v26, v27, 0), result = 0, (v28 & 1) != 0))
    {
      v51 = v13;
      v49 = v7;
      v29 = type metadata accessor for MetricsPageProperties(0);
      sub_10004A160((uint64_t)a1 + *(int *)(v29 + 24), (uint64_t)v19, &qword_1011D2AE0);
      v50 = v29;
      sub_10004A160((uint64_t)a2 + *(int *)(v29 + 24), (uint64_t)v16, &qword_1011D2AE0);
      v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_10004A160((uint64_t)v19, (uint64_t)v10, &qword_1011D2AE0);
      sub_10004A160((uint64_t)v16, v30, &qword_1011D2AE0);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v31((uint64_t)v10, 1, v4) == 1)
      {
        sub_10004FF60((uint64_t)v16, &qword_1011D2AE0);
        sub_10004FF60((uint64_t)v19, &qword_1011D2AE0);
        if (v31(v30, 1, v4) == 1)
        {
          sub_10004FF60((uint64_t)v10, &qword_1011D2AE0);
LABEL_16:
          v36 = v50;
          v37 = *(int *)(v50 + 28);
          v38 = *(_QWORD *)((char *)a2 + v37);
          if (*(_QWORD *)((char *)a1 + v37))
          {
            if (v38)
            {
              swift_bridgeObjectRetain();
              v39 = swift_bridgeObjectRetain();
              sub_100A27080(v39, v38);
              v41 = v40;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v41 & 1) != 0)
              {
LABEL_21:
                v42 = *(int *)(v36 + 32);
                v43 = (_QWORD *)((char *)a1 + v42);
                v44 = *(_QWORD *)((char *)a1 + v42 + 8);
                v45 = (_QWORD *)((char *)a2 + v42);
                v46 = v45[1];
                if (v44)
                {
                  if (v46
                    && (*v43 == *v45 && v44 == v46
                     || (_stringCompareWithSmolCheck(_:_:expecting:)(*v43, v44, *v45, v46, 0) & 1) != 0))
                  {
                    return 1;
                  }
                }
                else if (!v46)
                {
                  return 1;
                }
              }
            }
          }
          else if (!v38)
          {
            goto LABEL_21;
          }
          return 0;
        }
      }
      else
      {
        v32 = (uint64_t)v51;
        sub_10004A160((uint64_t)v10, (uint64_t)v51, &qword_1011D2AE0);
        if (v31(v30, 1, v4) != 1)
        {
          v33 = v49;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v49, v30, v4);
          v34 = sub_100048748(qword_1011D5E28, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v48 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v4, v34);
          v35 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
          v35(v33, v4);
          sub_10004FF60((uint64_t)v16, &qword_1011D2AE0);
          sub_10004FF60((uint64_t)v19, &qword_1011D2AE0);
          v35((_BYTE *)v32, v4);
          sub_10004FF60((uint64_t)v10, &qword_1011D2AE0);
          if ((v48 & 1) == 0)
            return 0;
          goto LABEL_16;
        }
        sub_10004FF60((uint64_t)v16, &qword_1011D2AE0);
        sub_10004FF60((uint64_t)v19, &qword_1011D2AE0);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
      }
      sub_10004FF60((uint64_t)v10, &qword_1011D5E20);
      return 0;
    }
  }
  return result;
}

void sub_100A276A8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  char v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  _QWORD *receiver;
  unint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  Class isa;
  void *v29;
  objc_class *v30;
  objc_class *v31;
  NSString v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  id v36;
  id v37;
  NSString v38;
  void *v39;
  objc_super v40;
  objc_super v41[2];
  objc_super v42;
  __int128 aBlock;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = sub_100A266F8(0xD000000000000017, 0x8000000100E4C670);

  LOBYTE(aBlock) = v13 & 1;
  v14 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&aBlock, &type metadata for Bool);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v14, v15);
  swift_unknownObjectRelease(v14);

  *(_QWORD *)&aBlock = 0x646E655265676170;
  *((_QWORD *)&aBlock + 1) = 0xEA00000000007265;
  v16 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&aBlock, &type metadata for String);
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v16, v17);
  swift_unknownObjectRelease(v16);

  if (!a1)
  {
    aBlock = 0u;
    v44 = 0u;
LABEL_16:
    sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
    goto LABEL_17;
  }
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(a1, "valueForConfigurationKey:", v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)(v41, v19);
    swift_unknownObjectRelease(v19);
  }
  else
  {
    memset(v41, 0, sizeof(v41));
  }
  sub_100A286FC((uint64_t)v41, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v44 + 1))
    goto LABEL_16;
  v20 = sub_100007E8C((uint64_t *)&unk_1011D8950);
  if (swift_dynamicCast(v41, &aBlock, (char *)&type metadata for Any + 8, v20, 6))
  {
    receiver = v41[0].receiver;
    if (*((_QWORD *)v41[0].receiver + 2)
      && (v22 = sub_10079C2C4(0xD000000000000021, 0x8000000100E4C620), (v23 & 1) != 0))
    {
      sub_10004FA40(receiver[7] + 32 * v22, (uint64_t)&aBlock);
      v24 = sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
      if (swift_dynamicCast(v41, &aBlock, (char *)&type metadata for Any + 8, v24, 6))
        v25 = v41[0].receiver;
      else
        v25 = 0;
      if ((v13 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      v25 = 0;
      if ((v13 & 1) == 0)
      {
LABEL_14:
        if (v25)
        {
          v26 = v25;
          v27 = v25;
          isa = (Class)v25;
        }
        else
        {
          v27 = 0;
          isa = 0;
        }
        goto LABEL_22;
      }
    }
    v27 = v25;
    sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
    isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
LABEL_22:
    v31 = isa;
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setProperty:forBodyKey:", v31, v32);

    if (receiver[2])
    {
      v33 = sub_10079C2C4(0xD000000000000019, 0x8000000100E4C650);
      if ((v34 & 1) != 0)
      {
        sub_10004FA40(receiver[7] + 32 * v33, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v44 = 0u;
      }
    }
    else
    {
      aBlock = 0u;
      v44 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v44 + 1))
    {
      v35 = sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
      if (swift_dynamicCast(v41, &aBlock, (char *)&type metadata for Any + 8, v35, 6))
      {
        v36 = v41[0].receiver;
LABEL_32:
        v37 = v36;
        v38 = String._bridgeToObjectiveC()();
        objc_msgSend(a2, "setProperty:forBodyKey:", v37, v38);

        v45 = a5;
        v46 = a6;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v44 = sub_1001DBD98;
        *((_QWORD *)&v44 + 1) = &unk_1010F0E60;
        v39 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v40.receiver = a3;
        v40.super_class = (Class)type metadata accessor for Music_SSMetricsPageRenderEvent();
        objc_msgSendSuper2(&v40, "setStandardPropertiesWith:completionHandler:", a4, v39);
        _Block_release(v39);

        return;
      }
    }
    else
    {
      sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
    }
    v36 = 0;
    goto LABEL_32;
  }
LABEL_17:
  v45 = a5;
  v46 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v44 = sub_1001DBD98;
  *((_QWORD *)&v44 + 1) = &unk_1010F0E38;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v30 = (objc_class *)type metadata accessor for Music_SSMetricsPageRenderEvent();
  v42.receiver = a3;
  v42.super_class = v30;
  objc_msgSendSuper2(&v42, "setStandardPropertiesWith:completionHandler:", a4, v29);
  _Block_release(v29);
}

uint64_t _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_1010E68B8, a1, a2, &unk_1011D2580);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x14)
    return 20;
  else
    return v3;
}

uint64_t sub_100A27C78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A27C9C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100A26378(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100A27CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A27CB4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100A27CC0()
{
  unint64_t result;

  result = qword_1011D5D10;
  if (!qword_1011D5D10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsContentType, &type metadata for MetricsContentType);
    atomic_store(result, (unint64_t *)&qword_1011D5D10);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MetricsPageProperties(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C(&qword_1011D2AE0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsPageProperties(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
}

_QWORD *initializeWithCopy for MetricsPageProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MetricsPageProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MetricsPageProperties(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

_QWORD *assignWithTake for MetricsPageProperties(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100007E8C(&qword_1011D2AE0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A283D4);
}

uint64_t sub_100A283D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011D2AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A28460);
}

uint64_t sub_100A28460(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011D2AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_100A284D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EDE048;
  v4[1] = &unk_100EDE048;
  sub_100A216B4(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100EDE060;
    v4[4] = &unk_100EDE078;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t getEnumTagSinglePayload for MetricsContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_100A2863C + 4 * byte_100EDDF43[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_100A28670 + 4 * byte_100EDDF3E[v4]))();
}

uint64_t sub_100A28670(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A28678(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A28680);
  return result;
}

uint64_t sub_100A2868C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A28694);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_100A28698(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A286A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsContentType()
{
  return &type metadata for MetricsContentType;
}

uint64_t type metadata accessor for Music_SSMetricsComponentRenderEvent()
{
  return objc_opt_self(_TtC9MusicCore35Music_SSMetricsComponentRenderEvent);
}

uint64_t type metadata accessor for Music_SSMetricsPageRenderEvent()
{
  return objc_opt_self(_TtC9MusicCore30Music_SSMetricsPageRenderEvent);
}

uint64_t sub_100A286FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D7160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100A28744(void (*a1)(void))
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  _BOOL8 v8;
  id v9;
  uint64_t v10;
  __n128 v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  id v22;
  id v23;
  unint64_t v24;

  v3 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
  v4 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v23 = 0;
  v5 = objc_msgSend(v3, "DSIDForUserIdentity:outError:", v4, &v23);

  v6 = v23;
  if (v5)
  {
    v7 = v23;
    objc_msgSend(v1, "setAccountIdentifier:", v5);
    v8 = objc_msgSend(v5, "longLongValue") != 0;
  }
  else
  {
    v9 = v23;
    v10 = _convertNSErrorToError(_:)(v6);

    swift_willThrow(v11);
    swift_errorRelease(v10);
    objc_msgSend(v1, "setAccountIdentifier:", 0);
    v8 = 1;
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v8);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forBodyKey:", v12, v13);

  v14 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v15 = objc_msgSend(v14, "musicSubscriptionStatus");

  if (v15)
  {
    switch((unint64_t)objc_msgSend(v15, "statusType"))
    {
      case 0uLL:
      case 1uLL:
      case 3uLL:

        break;
      case 2uLL:
        objc_msgSend(v15, "reasonType");

        break;
      default:
        v23 = 0;
        v24 = 0xE000000000000000;
        _StringGuts.grow(_:)(24);
        v18._object = (void *)0x8000000100E3CCE0;
        v18._countAndFlagsBits = 0xD000000000000013;
        String.append(_:)(v18);
        objc_msgSend(v15, "statusType");
        v19._countAndFlagsBits = 0xD00000000000001DLL;
        v19._object = (void *)0x8000000100E4C5E0;
        String.append(_:)(v19);
        v20._countAndFlagsBits = 32;
        v20._object = (void *)0xE100000000000000;
        String.append(_:)(v20);
        v22 = objc_msgSend(v15, "statusType");
        type metadata accessor for ICMusicSubscriptionStatusType(0);
        _print_unlocked<A, B>(_:_:)(&v22, &v23, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v23, v24, "MusicCore/MetricsUtilities.swift", 32, 2, 151, 0);
        __break(1u);
        JUMPOUT(0x100A28B68);
    }
  }
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forBodyKey:", v16, v17);

  a1();
}

uint64_t sub_100A28B78(uint64_t (*a1)(void))
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  double v10;
  NSString v11;
  char v12;
  unint64_t v13;
  char v14;
  NSString v15;
  NSString v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v2 = v1;
  swift_getObjectType();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "Topic");
  objc_msgSend(v2, "setTopic:", v4);

  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = objc_msgSend(v5, "infoDictionary");

  if (!v6
    || (v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String), v6, !v7))
  {
    v7 = 0;
    v19 = 0u;
    v20 = 0u;
    v12 = 1;
LABEL_12:
    sub_10004FF60((uint64_t)&v19, &qword_1011D7160);
    goto LABEL_13;
  }
  if (!*(_QWORD *)(v7 + 16))
  {
    v12 = 0;
    v19 = 0u;
    v20 = 0u;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v8 = sub_10079C2C4(0xD000000000000012, 0x8000000100E4C590);
  if ((v9 & 1) == 0)
  {
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_10004FA40(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_11:
    v12 = 0;
    goto LABEL_12;
  }
  if ((swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v11 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
    v12 = 0;
    goto LABEL_14;
  }
  v12 = 0;
LABEL_13:
  v11 = 0;
LABEL_14:
  objc_msgSend(v2, "setApplicationIdentifier:", v11, v10);

  if ((v12 & 1) != 0)
  {
    v19 = 0u;
    v20 = 0u;
LABEL_23:
    sub_10004FF60((uint64_t)&v19, &qword_1011D7160);
    goto LABEL_24;
  }
  if (*(_QWORD *)(v7 + 16) && (v13 = sub_10079C2C4(0xD00000000000001ALL, 0x8000000100E4C570), (v14 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v7 + 56) + 32 * v13, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_24:
    v15 = 0;
    goto LABEL_25;
  }
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_25:
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setProperty:forBodyKey:", v15, v16);
  swift_unknownObjectRelease(v15);

  return a1();
}

void sub_100A28E6C(void (*a1)(void))
{
  void *v1;
  NSString v3;
  double v4;
  id v5;
  void *v6;
  id v7;
  NSString v8;
  double v9;
  _QWORD v10[6];

  v3 = objc_msgSend((id)objc_opt_self(ICStoreURLRequest), "currentConnectionTypeHeader");
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v3 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v1, "setConnection:", v3, v4);

  v5 = objc_allocWithZone((Class)ICStoreRequestContext);
  v10[4] = UIScreen.Dimensions.size.getter;
  v10[5] = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10004BF88;
  v10[3] = &unk_1010F0D48;
  v6 = _Block_copy(v10);
  v7 = objc_msgSend(v5, "initWithBlock:", v6);
  _Block_release(v6);
  swift_release();
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = objc_msgSend(v7, "userAgent");
    if (!v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v8 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v9 = swift_bridgeObjectRelease().n128_u64[0];
    }
    objc_msgSend(v1, "setUserAgent:", v8, v9);

    a1();
  }
}

double sub_100A28FFC(void *a1, uint64_t a2, void *a3, void (**a4)(_QWORD))
{
  uint64_t v8;
  void (*v9)(void **, _QWORD *);
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  double result;
  _QWORD v16[2];
  void *v17;
  uint64_t v18;

  v8 = swift_allocObject(&unk_1010F0C90, 24, 7);
  *(_QWORD *)(v8 + 16) = a4;
  v18 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v9 = *(void (**)(void **, _QWORD *))(a2 + 32);
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1009BBAB8(0, 1);
    v10 = v18;
    v11 = (_QWORD *)swift_allocObject(&unk_1010F0CB8, 56, 7);
    v11[2] = a3;
    v11[3] = a1;
    v11[4] = v10;
    v11[5] = sub_100A2A018;
    v11[6] = v8;
    v17 = a1;
    v12 = swift_allocObject(&unk_1010F0CE0, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100A29E2C;
    *(_QWORD *)(v12 + 24) = v11;
    v16[0] = sub_10010942C;
    v16[1] = v12;
    v13 = a1;
    swift_retain();
    swift_retain();
    v14 = a3;
    v9(&v17, v16);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    _Block_copy(a4);
    a4[2](a4);
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100A2915C(void *a1, void *a2, void (**a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;

  v6 = sub_100007E8C(&qword_1011D3D78);
  v7 = swift_allocObject(v6, 144, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EA8160;
  v8 = swift_allocObject(&unk_1010F0A60, 24, 7);
  *(_QWORD *)(v8 + 16) = a2;
  v9 = swift_allocObject(&unk_1010F0A88, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100A29D58;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)(v7 + 32) = sub_100A29D60;
  *(_QWORD *)(v7 + 40) = v9;
  v10 = swift_allocObject(&unk_1010F0AB0, 24, 7);
  *(_QWORD *)(v10 + 16) = a2;
  v11 = swift_allocObject(&unk_1010F0AD8, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_100A29D68;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v7 + 48) = sub_100A2A014;
  *(_QWORD *)(v7 + 56) = v11;
  v12 = swift_allocObject(&unk_1010F0B00, 24, 7);
  *(_QWORD *)(v12 + 16) = a2;
  v13 = swift_allocObject(&unk_1010F0B28, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_100A29D88;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v7 + 64) = sub_100A2A014;
  *(_QWORD *)(v7 + 72) = v13;
  v14 = swift_allocObject(&unk_1010F0B50, 24, 7);
  *(_QWORD *)(v14 + 16) = a2;
  v15 = swift_allocObject(&unk_1010F0B78, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100A29DB0;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v7 + 80) = sub_100A2A014;
  *(_QWORD *)(v7 + 88) = v15;
  v16 = swift_allocObject(&unk_1010F0BA0, 24, 7);
  *(_QWORD *)(v16 + 16) = a2;
  v17 = swift_allocObject(&unk_1010F0BC8, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100A29DD8;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v7 + 96) = sub_100A2A014;
  *(_QWORD *)(v7 + 104) = v17;
  v18 = swift_allocObject(&unk_1010F0BF0, 24, 7);
  *(_QWORD *)(v18 + 16) = a2;
  v19 = swift_allocObject(&unk_1010F0C18, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_100A29DF8;
  *(_QWORD *)(v19 + 24) = v18;
  *(_QWORD *)(v7 + 112) = sub_100A2A014;
  *(_QWORD *)(v7 + 120) = v19;
  v20 = swift_allocObject(&unk_1010F0C40, 24, 7);
  *(_QWORD *)(v20 + 16) = a2;
  v21 = swift_allocObject(&unk_1010F0C68, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_100A29E00;
  *(_QWORD *)(v21 + 24) = v20;
  *(_QWORD *)(v7 + 128) = sub_100A2A014;
  *(_QWORD *)(v7 + 136) = v21;
  sub_100A28FFC(a1, v7, a2, a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100A293E4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  NSString v7;
  id v8;
  NSString v9;
  uint64_t v10;
  double result;

  v3 = v2;
  v6 = objc_msgSend(v3, "windowHeight");
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setProperty:forBodyKey:", v6, v7);

  v8 = objc_msgSend(v3, "windowWidth");
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setProperty:forBodyKey:", v8, v9);

  sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v10 = swift_allocObject(&unk_1010F0A10, 32, 7);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10004D5F4, v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100A29528(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  char v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  void *v24;
  double v25;
  __int128 v26;
  __int128 v27;
  objc_super v28;
  __int128 aBlock;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = sub_100A266F8(0xD000000000000017, 0x8000000100E4C4F0);

  objc_msgSend(a2, "setXPSamplingForced:", v13 & 1);
  if (!a1)
  {
    aBlock = 0u;
    v30 = 0u;
LABEL_23:
    sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
    goto LABEL_24;
  }
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(a1, "valueForConfigurationKey:", v14);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(&v26, v15);
    swift_unknownObjectRelease(v15);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_100A286FC((uint64_t)&v26, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v30 + 1))
    goto LABEL_23;
  v16 = sub_100007E8C((uint64_t *)&unk_1011D8950);
  if (!swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, v16, 6))
    goto LABEL_24;
  v17 = v26;
  if (*(_QWORD *)(v26 + 16))
  {
    v18 = sub_10079C2C4(0xD000000000000017, 0x8000000100E4C4A0);
    if ((v19 & 1) != 0)
    {
      sub_10004FA40(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&aBlock);
      if (swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6))objc_msgSend(a2, "setXPSamplingPercentageUsers:", *(double *)&v26);
    }
  }
  if (*(_QWORD *)(v17 + 16))
  {
    v20 = sub_10079C2C4(0x446E6F6973736573, 0xEF6E6F6974617275);
    if ((v21 & 1) != 0)
    {
      sub_10004FA40(*(_QWORD *)(v17 + 56) + 32 * v20, (uint64_t)&aBlock);
      if (swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6))objc_msgSend(a2, "setXPSessionDuration:", *(double *)&v26);
    }
  }
  if (*(_QWORD *)(v17 + 16) && (v22 = sub_10079C2C4(0xD000000000000021, 0x8000000100E4C4C0), (v23 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v17 + 56) + 32 * v22, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
    goto LABEL_23;
  if ((swift_dynamicCast(&v26, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    objc_msgSend(a2, "setXPSamplingPercentageCachedResponses:", *(double *)&v26);
LABEL_24:
  if (objc_msgSend(a2, "xpSamplingForced", v26, v27))
  {
    objc_msgSend(a2, "setXPSamplingPercentageUsers:", 1.0);
    objc_msgSend(a2, "setXPSamplingPercentageCachedResponses:", 1.0);
  }
  v31 = a5;
  v32 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v30 = sub_1001DBD98;
  *((_QWORD *)&v30 + 1) = &unk_1010F0988;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  *(_QWORD *)&v25 = swift_release().n128_u64[0];
  v28.receiver = a3;
  v28.super_class = (Class)SSMetricsLoadURLEvent;
  objc_msgSendSuper2(&v28, "setStandardPropertiesWith:completionHandler:", a4, v24, v25);
  _Block_release(v24);
}

void sub_100A298D8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  char v13;
  Class isa;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  _QWORD *receiver;
  unint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  id v24;
  id v25;
  NSString v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  int v30;
  id v31;
  id v32;
  NSString v33;
  void *v34;
  objc_class *v35;
  objc_super v36[2];
  objc_super v37;
  __int128 aBlock;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v13 = sub_100A266F8(0xD00000000000001CLL, 0x8000000100E4C460);

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", isa, v15);

  if (!a1)
  {
    aBlock = 0u;
    v39 = 0u;
LABEL_10:
    sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
    goto LABEL_29;
  }
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(a1, "valueForConfigurationKey:", v16);

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)(v36, v17);
    swift_unknownObjectRelease(v17);
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_100A286FC((uint64_t)v36, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v39 + 1))
    goto LABEL_10;
  v18 = sub_100007E8C((uint64_t *)&unk_1011D8950);
  if (!swift_dynamicCast(v36, &aBlock, (char *)&type metadata for Any + 8, v18, 6))
    goto LABEL_29;
  receiver = v36[0].receiver;
  if ((v13 & 1) != 0)
  {
    *((_QWORD *)&v39 + 1) = &type metadata for Double;
    *(_QWORD *)&aBlock = 0x3FF0000000000000;
    goto LABEL_14;
  }
  if (*((_QWORD *)v36[0].receiver + 2))
  {
    v20 = sub_10079C2C4(0xD000000000000026, 0x8000000100E4C3F0);
    if ((v21 & 1) != 0)
    {
      sub_10004FA40(receiver[7] + 32 * v20, (uint64_t)&aBlock);
LABEL_14:
      v22 = sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
      v23 = swift_dynamicCast(v36, &aBlock, (char *)&type metadata for Any + 8, v22, 6);
      v24 = v36[0].receiver;
      if (!v23)
        v24 = 0;
      goto LABEL_18;
    }
  }
  aBlock = 0u;
  v39 = 0u;
  sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
  v24 = 0;
LABEL_18:
  v25 = v24;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v25, v26);

  if (receiver[2])
  {
    v27 = sub_10079C2C4(0xD00000000000001ELL, 0x8000000100E4C420);
    if ((v28 & 1) != 0)
    {
      sub_10004FA40(receiver[7] + 32 * v27, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v39 = 0u;
    }
  }
  else
  {
    aBlock = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v39 + 1))
  {
    v29 = sub_10004A07C(0, &qword_1011D5D08, NSNumber_ptr);
    v30 = swift_dynamicCast(v36, &aBlock, (char *)&type metadata for Any + 8, v29, 6);
    v31 = v36[0].receiver;
    if (!v30)
      v31 = 0;
  }
  else
  {
    sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
    v31 = 0;
  }
  v32 = v31;
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setProperty:forBodyKey:", v32, v33);

LABEL_29:
  v40 = a5;
  v41 = a6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v39 = sub_1001DBD98;
  *((_QWORD *)&v39 + 1) = &unk_1010F0938;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v35 = (objc_class *)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  v37.receiver = a3;
  v37.super_class = v35;
  objc_msgSendSuper2(&v37, "setStandardPropertiesWith:completionHandler:", a4, v34);
  _Block_release(v34);
}

uint64_t sub_100A29D24()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100A29D4C()
{
  uint64_t v0;

  sub_100A26134(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100A29D58(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;

  return sub_100A25E80(a1, a2, a3, *(void **)(v3 + 16));
}

double sub_100A29D60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_100A25F5C(a1, a2, *(void (**)(uint64_t, uint64_t (*)(), uint64_t, __n128))(v2 + 16));
}

uint64_t sub_100A29D68(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_100A25564(a1, a2);
}

void sub_100A29D88(uint64_t a1, void (*a2)(void))
{
  sub_100A28744(a2);
}

uint64_t sub_100A29DB0(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_100A28B78(a2);
}

double sub_100A29DD8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100A25768(a1, a2, a3);
}

uint64_t sub_100A29DF8(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v3;

  return sub_100A25FD0(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_100A29E00(uint64_t a1, void (*a2)(void))
{
  sub_100A28E6C(a2);
}

uint64_t sub_100A29E34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100A29E70()
{
  uint64_t v0;

  sub_100A25D4C(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_100A29EA0()
{
  uint64_t v0;

  sub_100A259E0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(__n128))(v0 + 32));
}

unint64_t sub_100A29EAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7790;
  if (!qword_1011D7790)
  {
    v1 = sub_100044B54(&qword_1011D5E08);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D7790);
  }
  return result;
}

uint64_t sub_100A29EF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100A29F1C()
{
  uint64_t v0;

  sub_100A2658C(*(id *)(v0 + 16));
}

uint64_t sub_100A29F24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A29F48()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = *(_BYTE **)(v0 + 24);
  result = sub_100413E0C((uint64_t)objc_msgSend(*(id *)(v0 + 16), "cloudStatus"), (uint64_t)&off_1010E6B50);
  if ((result & 1) != 0)
    *v1 = 18;
  return result;
}

uint64_t sub_100A29F88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void static MusicCoreAnalytics.sendEvent<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, __n128);
  uint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t);
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  void *v42;
  __n128 v43;
  _BYTE v44[4];
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  void (*v49)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v50;
  uint64_t aBlock[6];

  v5 = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(a1);
  v50 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v44[-v9];
  __chkstk_darwin(v11);
  v13 = &v44[-v12];
  if (qword_1011D1C20 != -1)
    swift_once(&qword_1011D1C20, sub_100A2A524);
  v14 = type metadata accessor for Logger(0);
  sub_100048B14(v14, (uint64_t)qword_10124E070);
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v15(v13, v5, a2);
  v49 = v15;
  v16 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v15)(v10, v5, a2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc(22, -1);
    v46 = v17;
    v21 = a3;
    v22 = v20;
    v47 = swift_slowAlloc(64, -1);
    aBlock[0] = v47;
    *(_DWORD *)v22 = 136315395;
    v48 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    v45 = v19;
    v23 = (char *)v48(a2, v21);
    *(_QWORD *)(v22 + 4) = sub_10099627C(v23, v24, aBlock);
    v25 = swift_bridgeObjectRelease();
    v26 = v5;
    v27 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
    v27(v13, a2, v25);
    *(_WORD *)(v22 + 12) = 2081;
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(a2, v21);
    ((void (*)(_BYTE *, uint64_t))v27)(v10, a2);
    v5 = v26;
    v29 = sub_100A2A640();
    v30 = (char *)Dictionary.description.getter(v28, &type metadata for String, v29, &protocol witness table for String);
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 14) = sub_10099627C(v30, v32, aBlock);
    swift_bridgeObjectRelease();
    v33 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v45, "Send analytics event: %s, payload: %{private}s", (uint8_t *)v22, 0x16u);
    v34 = v47;
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    v35 = v22;
    a3 = v21;
    swift_slowDealloc(v35, -1, -1);

    v48(a2, v21);
  }
  else
  {
    v36 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v36(v10, a2);
    v36(v13, a2);

    (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  }
  v37 = v50;
  v49(v50, v5, a2);
  v38 = *(unsigned __int8 *)(v6 + 80);
  v39 = (v38 + 32) & ~v38;
  v40 = swift_allocObject(&unk_1010F0F70, v39 + v7, v38 | 7);
  *(_QWORD *)(v40 + 16) = a2;
  *(_QWORD *)(v40 + 24) = a3;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v40 + v39, v37, a2);
  v41 = String._bridgeToObjectiveC()();
  aBlock[4] = (uint64_t)sub_100A2A5F0;
  aBlock[5] = v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100A2A4B0;
  aBlock[3] = (uint64_t)&unk_1010F0F88;
  v42 = _Block_copy(aBlock);
  swift_retain();
  v43 = swift_release();
  AnalyticsSendEventLazy(v41, v42, v43);
  _Block_release(v42);
  swift_release();
  swift_bridgeObjectRelease();

}

void static MusicCoreAnalytics.sendEvent(eventName:eventPayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;
  void *v7;
  __n128 v8;
  _QWORD v9[6];

  v6 = String._bridgeToObjectiveC()();
  v9[4] = a3;
  v9[5] = a4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100A2A4B0;
  v9[3] = &unk_1010F0FB0;
  v7 = _Block_copy(v9);
  swift_retain();
  v8 = swift_release();
  AnalyticsSendEventLazy(v6, v7, v8);
  _Block_release(v7);

}

Class sub_100A2A4B0(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  __n128 v2;
  uint64_t v3;
  NSDictionary v4;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_100A2A640();
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.isa = 0;
  }
  return v4.super.isa;
}

uint64_t sub_100A2A524()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124E070);
  sub_100048B14(v0, (uint64_t)qword_10124E070);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x7363697274654DLL, 0xE700000000000000);
}

uint64_t sub_100A2A598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100A2A5F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 16))();
}

uint64_t sub_100A2A628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A2A638(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100A2A640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6EC0;
  if (!qword_1011D6EC0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D6EC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCoreAnalytics()
{
  return &type metadata for MusicCoreAnalytics;
}

void *MetricsEvent.PageRender.performanceMetrics.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t MetricsEvent.PageRender.onScreenResourcesAppearEndTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return *(_QWORD *)(v0 + 24);
}

uint64_t MetricsEvent.PageRender.pageUserInteractiveTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(_QWORD *)(v0 + 40);
}

uint64_t MetricsEvent.PageRender.resourceRequestStartTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 56, v2, 0, 0);
  return *(_QWORD *)(v0 + 56);
}

uint64_t MetricsEvent.PageRender.pageEndTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 72, v2, 0, 0);
  return *(_QWORD *)(v0 + 72);
}

uint64_t MetricsEvent.PageRender.pageInterruptTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(_QWORD *)(v0 + 88);
}

uint64_t MetricsEvent.PageRender.pageAppearTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 104, v2, 0, 0);
  return *(_QWORD *)(v0 + 104);
}

uint64_t MetricsEvent.PageRender.pageRequestTime.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return *(_QWORD *)(v0 + 120);
}

uint64_t MetricsEvent.PageRender.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t MetricsEvent.PageRender.request.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
  swift_beginAccess(v4, v7, 33, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess(v7);
}

uint64_t (*MetricsEvent.PageRender.request.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152), a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t MetricsEvent.PageRender.pageProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F3A98(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160), a1);
}

uint64_t MetricsEvent.PageRender.__allocating_init(pageProperties:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  MetricsEvent.PageRender.init(pageProperties:)(a1);
  return v3;
}

uint64_t *MetricsEvent.PageRender.init(pageProperties:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  v1[2] = 0;
  v1[3] = 0;
  *((_BYTE *)v1 + 32) = 1;
  v1[5] = 0;
  *((_BYTE *)v1 + 48) = 1;
  v1[7] = 0;
  *((_BYTE *)v1 + 64) = 1;
  v1[9] = 0;
  *((_BYTE *)v1 + 80) = 1;
  v1[11] = 0;
  *((_BYTE *)v1 + 96) = 1;
  v1[13] = 0;
  *((_BYTE *)v1 + 112) = 1;
  v1[15] = 0;
  *((_BYTE *)v1 + 128) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 56))((uint64_t)v1 + *(_QWORD *)(v3 + 152), 1, 1);
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 168)) = 0;
  sub_100A2AA5C(a1, (uint64_t)v1 + *(_QWORD *)(*v1 + 160));
  return v1;
}

uint64_t sub_100A2AA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricsPageProperties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void MetricsEvent.PageRender.updatePerformanceMetrics(_:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  swift_beginAccess(v3 + 16, v13, 1, 0);
  v7 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = a1;
  v8 = a1;

  v9 = *(void **)(v3 + 16);
  if (v9)
  {
    objc_msgSend(v9, "responseEndTime");
    v11 = v10;
    swift_beginAccess(v3 + 24, v14, 0, 0);
    if ((*(_BYTE *)(v3 + 32) & 1) == 0)
    {
      swift_beginAccess(v3 + 72, v12, 1, 0);
      *(_QWORD *)(v3 + 72) = v11;
      *(_BYTE *)(v3 + 80) = 0;
      sub_100A2AB64(a2, a3);
    }
  }
}

double sub_100A2AB64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  if ((*(_BYTE *)(v2 + v3) & 1) == 0)
  {
    *(_BYTE *)(v2 + v3) = 1;
    sub_1009E0478();
    v6 = (_QWORD *)swift_allocObject(&unk_1010F10E8, 40, 7);
    v6[2] = v2;
    v6[3] = a1;
    v6[4] = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_100A2B318, (uint64_t)v6);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAppear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 104, v10, 1, 0);
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 104) = v8;
    *(_BYTE *)(v1 + 112) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageRequest()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 120, v10, 1, 0);
  if (*(_BYTE *)(v1 + 128) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 120) = v8;
    *(_BYTE *)(v1 + 128) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAsUserInteractive()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 40, v10, 1, 0);
  if (*(_BYTE *)(v1 + 48) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 40) = v8;
    *(_BYTE *)(v1 + 48) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markResourceRequestStartTime()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BYTE v10[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = swift_beginAccess(v1 + 56, v10, 1, 0);
  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v7 = Date.init()(v6);
    v8 = Date.timeIntervalSince1970.getter(v7);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(double *)(v1 + 56) = v8;
    *(_BYTE *)(v1 + 64) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markOnScreenResourcesAppearEndTime(with:)(Swift::String_optional with)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  void *v13;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  v2 = v1;
  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(v2 + 24, v17, 1, 0);
  if (*(_BYTE *)(v2 + 32) == 1)
  {
    v10 = Date.init()(v9);
    v11 = Date.timeIntervalSince1970.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(double *)(v2 + 24) = v11;
    *(_BYTE *)(v2 + 32) = 0;
    *(_QWORD *)&v12 = swift_beginAccess(v2 + 16, v16, 0, 0).n128_u64[0];
    v13 = *(void **)(v2 + 16);
    if (v13)
    {
      objc_msgSend(v13, "responseEndTime", v12);
      swift_beginAccess(v2 + 72, v15, 1, 0);
      *(double *)(v2 + 72) = v11;
      *(_BYTE *)(v2 + 80) = 0;
      sub_100A2AB64(countAndFlagsBits, (uint64_t)object);
    }
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageDisappearanceAndRecordIfNecessary(with:)(Swift::String_optional with)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v2 = v1;
  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess(v2 + 72, v13, 0, 0);
  if (*(_BYTE *)(v2 + 80) == 1)
  {
    swift_beginAccess(v2 + 88, v12, 1, 0);
    if (*(_BYTE *)(v2 + 96) == 1)
    {
      v10 = Date.init()(v9);
      v11 = Date.timeIntervalSince1970.getter(v10);
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
      *(double *)(v2 + 88) = v11;
      *(_BYTE *)(v2 + 96) = 0;
    }
  }
  sub_100A2AB64(countAndFlagsBits, (uint64_t)object);
}

void sub_100A2B0F0(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1011D1C18 != -1)
    swift_once(&qword_1011D1C18, sub_100A19B6C);
  MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(a1, a2, a3);
}

id *MetricsEvent.PageRender.deinit()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  v1 = *v0;

  v2 = (char *)v0 + *((_QWORD *)*v0 + 19);
  v3 = type metadata accessor for Optional(0, v1[10]);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_100A2B1CC((uint64_t)v0 + *((_QWORD *)*v0 + 20));
  return v0;
}

uint64_t sub_100A2B1CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MetricsPageProperties(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MetricsEvent.PageRender.__deallocating_deinit()
{
  uint64_t v0;

  MetricsEvent.PageRender.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A2B22C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[11];

  v5[0] = "\b";
  v5[1] = &unk_100EDE1D8;
  v5[2] = &unk_100EDE1D8;
  v5[3] = &unk_100EDE1D8;
  v5[4] = &unk_100EDE1D8;
  v5[5] = &unk_100EDE1D8;
  v5[6] = &unk_100EDE1D8;
  v5[7] = &unk_100EDE1D8;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v5[8] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for MetricsPageProperties(319);
    if (v4 <= 0x3F)
    {
      v5[9] = *(_QWORD *)(result - 8) + 64;
      v5[10] = &unk_100EDE1F0;
      result = swift_initClassMetadata2(a1, 0, 11, v5, a1 + 88);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsEvent.PageRender(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsEvent.PageRender);
}

uint64_t sub_100A2B2EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100A2B318()
{
  uint64_t v0;

  sub_100A2B0F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

__n128 static ApplicationCapabilities.shared.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v2 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDE2E8);
  v4 = swift_getKeyPath(&unk_100EDE310);
  static Published.subscript.getter(&v16, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = BYTE1(v16);
  v6 = BYTE2(v16);
  v7 = v22;
  v8 = v23;
  v9 = v24;
  v10 = v25;
  v12 = v17;
  result = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  *(_BYTE *)a1 = v16;
  *(_BYTE *)(a1 + 1) = v5;
  *(_BYTE *)(a1 + 2) = v6;
  *(_OWORD *)(a1 + 8) = v12;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v14;
  *(_OWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  return result;
}

uint64_t *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor()
{
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  return &static ApplicationCapabilities.Controller.shared;
}

__n128 ApplicationCapabilities.Controller.capabilities.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  KeyPath = swift_getKeyPath(&unk_100EDE2E8);
  v4 = swift_getKeyPath(&unk_100EDE310);
  static Published.subscript.getter(&v16, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = BYTE1(v16);
  v6 = BYTE2(v16);
  v7 = v22;
  v8 = v23;
  v9 = v24;
  v10 = v25;
  v12 = v17;
  result = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  *(_BYTE *)a1 = v16;
  *(_BYTE *)(a1 + 1) = v5;
  *(_BYTE *)(a1 + 2) = v6;
  *(_OWORD *)(a1 + 8) = v12;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v14;
  *(_OWORD *)(a1 + 72) = v15;
  *(_BYTE *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  return result;
}

uint64_t ApplicationCapabilities.hasNetworkConnectivity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ApplicationCapabilities.isCloudLibraryEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ApplicationCapabilities.Service.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A2B564 + 4 * byte_100EDE210[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_100A2B564()
{
  return 0x646956636973756DLL;
}

unint64_t sub_100A2B584()
{
  return 0xD000000000000013;
}

uint64_t ApplicationCapabilities.Service.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A2B698 + 4 * byte_100EDE21B[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_100A2B698()
{
  return 0x646956636973756DLL;
}

unint64_t sub_100A2B6B8()
{
  return 0xD000000000000013;
}

Swift::Int sub_100A2B7A0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = ApplicationCapabilities.Service.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100A2B800(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = ApplicationCapabilities.Service.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100A2B840(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = ApplicationCapabilities.Service.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100A2B89C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A2B8C8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ApplicationCapabilities.Service.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100A2B8F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = ApplicationCapabilities.Service.rawValue.getter(*a1);
  v5 = v4;
  v6 = ApplicationCapabilities.Service.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_100A2B978()
{
  unsigned __int8 *v0;

  return ApplicationCapabilities.Service.rawValue.getter(*v0);
}

Swift::Void __swiftcall ApplicationCapabilities.setServiceEnabled(_:service:)(Swift::Bool _, MusicCore::ApplicationCapabilities::Service service)
{
  if (objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection"))
    __asm { BR              X11 }
  __break(1u);
  JUMPOUT(0x100A2BA78);
}

uint64_t ApplicationCapabilities.ratingWarning.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  swift_bridgeObjectRetain(v3);
  return swift_bridgeObjectRetain(v2);
}

uint64_t ApplicationCapabilities.RatingWarning.threshold.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ApplicationCapabilities.RatingWarning.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t ApplicationCapabilities.RatingWarning.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  _QWORD v23[2];

  v1 = v0;
  strcpy((char *)v23, "RatingWarning(");
  HIBYTE(v23[1]) = -18;
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 10;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 0x6C6F687365726874;
  v5._object = (void *)0xEA00000000003D64;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(0xEA00000000003D64);
  v6 = v0[1];
  v7 = v1[2];
  swift_bridgeObjectRetain(v7);
  v8 = Optional<A>.description.getter(v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 10;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x3D656C746974;
  v13._object = (void *)0xE600000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(0xE600000000000000);
  v15 = v1[3];
  v14 = v1[4];
  swift_bridgeObjectRetain(v14);
  v16 = Optional<A>.description.getter(v15, v14);
  v18 = v17;
  swift_bridgeObjectRelease(v14);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 10;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x3D6567617373656DLL;
  v21._object = (void *)0xE800000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(0xE800000000000000);
  return v23[0];
}

uint64_t sub_100A2BCE4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

void *ApplicationCapabilities.subscriptionStatus.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

uint64_t ApplicationCapabilities.subscriptionState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

MusicCore::ApplicationCapabilities::SubscriptionState_optional __swiftcall ApplicationCapabilities.SubscriptionState.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_1010E6CA8;
  return (MusicCore::ApplicationCapabilities::SubscriptionState_optional)sub_100A35D64(rawValue, v1);
}

uint64_t ApplicationCapabilities.SubscriptionState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A2BDB0 + 4 * byte_100EDE226[a1]))(0x6564696365646E75, 0xE900000000000064);
}

uint64_t sub_100A2BDB0()
{
  return 0x63697373616C63;
}

uint64_t sub_100A2BDC8()
{
  return 0x6269726373627573;
}

uint64_t sub_100A2BDE4()
{
  return 0x6275536563696F76;
}

uint64_t sub_100A2BE08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1009A4BA4(*a1, *a2);
}

void sub_100A2BE14()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_100A2BE64()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x63697373616C63, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_100A2BEE4()
{
  __asm { BR              X10 }
}

uint64_t sub_100A2BF24(uint64_t a1)
{
  String.hash(into:)(a1, 0x63697373616C63, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100A2BF90(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100A2BFDC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x63697373616C63, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_100A2C05C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1010E6CA8;
  result = sub_100A35D64(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100A2C090()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100A2C0C4 + 4 * byte_100EDE236[*v0]))();
}

void sub_100A2C0C4(_QWORD *a1@<X8>)
{
  *a1 = 0x63697373616C63;
  a1[1] = 0xE700000000000000;
}

void sub_100A2C0E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6269726373627573;
  a1[1] = 0xEA00000000007265;
}

void sub_100A2C100(_QWORD *a1@<X8>)
{
  *a1 = 0x6275536563696F76;
  a1[1] = 0xEF72656269726373;
}

uint64_t Player.ReplaceCommand.replaceIntent.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100A2C130(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_1009A4D58(*(_BYTE *)a1);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t ApplicationCapabilities.Tabs.description.getter(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  char v19;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;

  v21 = 0x2873626154;
  v22 = 0xE500000000000000;
  v3 = swift_bridgeObjectRetain();
  v4 = Array.description.getter(v3, &type metadata for TabIdentifier);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v4;
  v8._object = v6;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD000000000000010;
  v20._object = (void *)0x8000000100E4C7A0;
  v19 = a2;
  v9 = sub_100007E8C(&qword_1011D5EE8);
  v10._countAndFlagsBits = String.init<A>(describing:)(&v19, v9);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 10;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD000000000000012;
  v20._object = (void *)0x8000000100E4C7C0;
  v12 = swift_bridgeObjectRetain();
  v13 = Array.description.getter(v12, &type metadata for ApplicationCapabilities.Tabs.Configuration);
  v15 = v14;
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 10;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t static ApplicationCapabilities.Tabs.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v10;

  if ((sub_100A2C6CC(a1, a4) & 1) == 0)
    return 0;
  if (a2 != 6)
  {
    if (a5 == 6)
      return 0;
    sub_1009A4BA8(a2);
    if ((v10 & 1) == 0)
      return 0;
    return sub_100A2C8D8(a3, a6);
  }
  if (a5 == 6)
    return sub_100A2C8D8(a3, a6);
  return 0;
}

uint64_t sub_100A2C3BC(uint64_t a1, uint64_t a2)
{
  return sub_1002EC32C(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (unint64_t *)&qword_1011D6160, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
}

uint64_t sub_100A2C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_100A2C6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_100A2C8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_100A2CB30(uint64_t a1, uint64_t a2)
{
  return sub_100A2CB58(a1, a2, (uint64_t)&qword_1011D6140, NSSortDescriptor_ptr);
}

uint64_t sub_100A2CB44(uint64_t a1, uint64_t a2)
{
  return sub_100A2CB58(a1, a2, (uint64_t)&qword_1011D6148, MPIdentifierSet_ptr);
}

uint64_t sub_100A2CB58(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v8 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = (unint64_t)a2 >> 62;
    if (!((unint64_t)a2 >> 62))
      goto LABEL_3;
LABEL_38:
    if (a2 < 0)
      v26 = a2;
    else
      v26 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = (void *)_CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a2);
    if ((void *)v9 == v11)
      goto LABEL_4;
    return 0;
  }
  if (a1 < 0)
    v25 = a1;
  else
    v25 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v9 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(a1);
  v10 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
    goto LABEL_38;
LABEL_3:
  v11 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v9 != v11)
    return 0;
LABEL_4:
  if (!v9)
    return 1;
  v12 = a1 & 0xFFFFFFFFFFFFFF8;
  v13 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v12 = a1;
  if (v8)
    v13 = v12;
  v14 = a2 & 0xFFFFFFFFFFFFFF8;
  v15 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0)
    v14 = a2;
  if (v10)
    v15 = v14;
  if (v13 == v15)
    return 1;
  if (v9 < 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v27 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_47:
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_49;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v11 = (void *)result;
  v10 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_49:
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_21:
    v18 = v17;
    a4 = (_QWORD *)sub_10004A07C(0, (unint64_t *)a3, a4);
    a3 = static NSObject.== infix(_:_:)(v11, v18);

    if ((a3 & 1) != 0)
    {
      v19 = 1 - v9;
      for (i = 5; ; ++i)
      {
        v9 = v19 + i == 5;
        if (v19 + i == 5)
          return v9;
        v24 = i - 4;
        if (v27)
        {
          a3 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
          if (v10)
            goto LABEL_23;
        }
        else
        {
          if (v24 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v10)
          {
LABEL_23:
            v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v24 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v21 = *(id *)(a2 + 8 * i);
LABEL_24:
        v22 = v21;
        v23 = static NSObject.== infix(_:_:)(a3, v21);

        if ((v23 & 1) == 0)
          return v9;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100A2CDE0(uint64_t a1, uint64_t a2)
{
  return sub_100A2CB58(a1, a2, (uint64_t)&qword_1011D6150, MPModelObject_ptr);
}

uint64_t sub_100A2CDF4(uint64_t a1, uint64_t a2)
{
  return sub_1002EC32C(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry, &qword_1011D6158, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
}

uint64_t sub_100A2CE10(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_100A2C6CC(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (v2 != 6)
  {
    if (v4 == 6)
      return 0;
    sub_1009A4BA8(v2);
    if ((v6 & 1) == 0)
      return 0;
    return sub_100A2C8D8(v3, v5);
  }
  if (v4 == 6)
    return sub_100A2C8D8(v3, v5);
  return 0;
}

uint64_t sub_100A2CEA0()
{
  uint64_t v0;

  return ApplicationCapabilities.Tabs.description.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t ApplicationCapabilities.tabs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  return v1;
}

void sub_100A2CEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[512];
  _BYTE v22[8];
  id v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v27[16];
  _BYTE v28[32];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011DBD80);
  inited = swift_initStackObject(v2, v21);
  *(_OWORD *)(inited + 16) = xmmword_100EB4E60;
  *(_QWORD *)(inited + 32) = 0x64656E6769537369;
  *(_QWORD *)(inited + 40) = 0xEA00000000006E49;
  *(_BYTE *)(inited + 48) = *(_BYTE *)v0;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_QWORD *)(inited + 80) = 0xD000000000000016;
  *(_QWORD *)(inited + 88) = 0x8000000100E365F0;
  *(_BYTE *)(inited + 96) = *(_BYTE *)(v0 + 1);
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_QWORD *)(inited + 128) = 0xD000000000000015;
  *(_QWORD *)(inited + 136) = 0x8000000100E4CF30;
  *(_BYTE *)(inited + 144) = *(_BYTE *)(v0 + 2);
  *(_QWORD *)(inited + 168) = &type metadata for Bool;
  *(_QWORD *)(inited + 176) = 0xD000000000000018;
  *(_QWORD *)(inited + 184) = 0x8000000100E4CF50;
  sub_100A2D3C0(v0, (uint64_t *)(inited + 192));
  *(_QWORD *)(inited + 224) = 0x536465776F6C6C61;
  *(_QWORD *)(inited + 232) = 0xEF73656369767265;
  v4 = *(_QWORD *)(v0 + 24);
  v5 = sub_100A35B74();
  v6 = swift_bridgeObjectRetain();
  v7 = Set.description.getter(v6, &type metadata for ApplicationCapabilities.Service, v5);
  v9 = v8;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(inited + 240) = v7;
  *(_QWORD *)(inited + 248) = v9;
  *(_QWORD *)(inited + 264) = &type metadata for String;
  *(_QWORD *)(inited + 272) = 0xD000000000000012;
  *(_QWORD *)(inited + 280) = 0x8000000100E4CF70;
  v10 = *(_QWORD *)(v1 + 32);
  v11 = swift_bridgeObjectRetain();
  v12 = Set.description.getter(v11, &type metadata for ApplicationCapabilities.Service, v5);
  v14 = v13;
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(inited + 288) = v12;
  *(_QWORD *)(inited + 296) = v14;
  *(_QWORD *)(inited + 312) = &type metadata for String;
  strcpy((char *)(inited + 320), "ratingWarning");
  *(_WORD *)(inited + 334) = -4864;
  v15 = *(_OWORD *)(v1 + 56);
  v24 = *(_OWORD *)(v1 + 40);
  v25 = v15;
  v26 = *(_QWORD *)(v1 + 72);
  sub_100065228((uint64_t)&v24 + 8, (uint64_t)v28, &qword_1011D3FC8);
  sub_100065228((uint64_t)&v25 + 8, (uint64_t)v27, &qword_1011D3FC8);
  sub_100055CE4((uint64_t)v28);
  sub_100055CE4((uint64_t)v27);
  v16 = ApplicationCapabilities.RatingWarning.description.getter();
  v18 = v17;
  sub_1001C7464((uint64_t)v28);
  sub_1001C7464((uint64_t)v27);
  *(_QWORD *)(inited + 336) = v16;
  *(_QWORD *)(inited + 344) = v18;
  *(_QWORD *)(inited + 360) = &type metadata for String;
  *(_QWORD *)(inited + 368) = 0xD000000000000012;
  *(_QWORD *)(inited + 376) = 0x8000000100E2BC70;
  sub_100065228(v1 + 80, (uint64_t)&v23, (uint64_t *)&unk_1011D61B0);
  sub_100065228((uint64_t)&v23, (uint64_t)v22, (uint64_t *)&unk_1011D61B0);
  sub_1005518D0(&v23);
  v19 = sub_100007E8C((uint64_t *)&unk_1011D61B0);
  *(_QWORD *)(inited + 384) = String.init<A>(describing:)(v22, v19);
  *(_QWORD *)(inited + 392) = v20;
  *(_QWORD *)(inited + 408) = &type metadata for String;
  *(_QWORD *)(inited + 416) = 0xD000000000000011;
  *(_QWORD *)(inited + 424) = 0x8000000100E4CF90;
  __asm { BR              X12 }
}

unint64_t sub_100A2D1DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;

  v0[54] = 0x63697373616C63;
  v0[55] = 0xE700000000000000;
  v0[57] = v2;
  v0[58] = 1935827316;
  v0[59] = 0xE400000000000000;
  v4 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v3 - 192) = v4;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1009F24EC(0, v5, 0);
    __asm { BR              X9 }
  }
  v0[63] = sub_100007E8C(&qword_1011D3728);
  v0[60] = _swiftEmptyArrayStorage;
  return sub_100A13450((uint64_t)v0);
}

void sub_100A2D3C0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;

  v3 = 0xE700000000000000;
  v4 = 0x6E776F6E6B6E75;
  switch(*(_QWORD *)(a1 + 16))
  {
    case 0:
      break;
    case 1:
      v4 = 0x64656C62616E65;
      break;
    case 2:
      v3 = 0xE800000000000000;
      v4 = 0x64656C6261736964;
      break;
    case 3:
      v3 = 0xE500000000000000;
      v4 = 0x6564696C67;
      break;
    default:
      v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v5._object;
      String.append(_:)(v5);
      swift_bridgeObjectRelease(object);
      v7._countAndFlagsBits = 62;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
      v4 = 0x3C6E776F6E6B6E75;
      v3 = 0xE800000000000000;
      break;
  }
  a2[3] = (uint64_t)&type metadata for String;
  *a2 = v4;
  a2[1] = v3;
}

BOOL sub_100A2D4D4(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  uint64_t v13;
  _OWORD v14[7];
  uint64_t v15;

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v15 = *((_QWORD *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v12, (unsigned __int8 *)v14);
}

uint64_t sub_100A2D554()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for ApplicationCapabilities.Controller(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100A2D5D0();
  static ApplicationCapabilities.Controller.shared = result;
  return result;
}

double static ApplicationCapabilities.Controller.shared.getter()
{
  double result;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_100A2D5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  uint64_t v27;
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[32];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate) = 0;
  v2 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_stateHandler;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  v3 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_lock;
  v4 = type metadata accessor for UnfairLock();
  swift_allocObject(v4, 24, 7);
  *(_QWORD *)(v0 + v3) = UnfairLock.init()();
  v5 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag;
  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  *(_QWORD *)(v0 + v5) = v41;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings) = _swiftEmptyArrayStorage;
  result = UIApp;
  if (UIApp)
  {
    *(_BYTE *)(v0 + 16) = objc_msgSend(UIApp, "launchedToTest");
    v7 = type metadata accessor for MusicTabsDictionaryProvider();
    swift_allocObject(v7, 56, 7);
    v8 = sub_100B69DAC(0x626154636973756DLL, 0xE900000000000073, (uint64_t)sub_100A2D9D8, 0);
    *(_QWORD *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider) = v8;
    swift_retain(v8);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
    v9 = *(_BYTE *)(v0 + 16);
    swift_retain(v8);
    sub_100A34000((void *)v41, (uint64_t)v8, v9, (uint64_t)&v41);
    v10 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
    v11 = v46;
    *(_OWORD *)(v10 + 64) = v45;
    *(_OWORD *)(v10 + 80) = v11;
    *(_OWORD *)(v10 + 96) = v47;
    *(_QWORD *)(v10 + 112) = v48;
    v12 = v42;
    *(_OWORD *)v10 = v41;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v44;
    v14 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities;
    *(_OWORD *)(v10 + 32) = v43;
    *(_OWORD *)(v10 + 48) = v13;
    swift_beginAccess(v14, v40, 33, 0);
    v36 = v45;
    v37 = v46;
    v38 = v47;
    v39 = v48;
    v32 = v41;
    v33 = v42;
    v34 = v43;
    v35 = v44;
    sub_100A35754((uint64_t)&v41);
    Published.init(initialValue:)(&v32, &type metadata for ApplicationCapabilities);
    swift_endAccess(v40);
    v15 = swift_allocObject(&unk_1010F1500, 24, 7);
    swift_weakInit(v15 + 16, v1);
    swift_retain(v15);
    sub_100B69C6C((uint64_t)sub_100A35B28, v15);
    swift_release_n(v15, 2, v16);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3573C);
    sub_100A2DBA0();
    v17 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
    v25 = (void *)static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24, v32, *((_QWORD *)&v32 + 1), v33, *((_QWORD *)&v33 + 1), v34, *((_QWORD *)&v34 + 1), v35);
    v26 = String._bridgeToObjectiveC()();
    v27 = swift_allocObject(&unk_1010F1500, 24, 7);
    swift_weakInit(v27 + 16, v1);
    *(_QWORD *)&v34 = sub_100A35B30;
    *((_QWORD *)&v34 + 1) = v27;
    *(_QWORD *)&v32 = _NSConcreteStackBlock;
    *((_QWORD *)&v32 + 1) = 1107296256;
    *(_QWORD *)&v33 = sub_100A2E4B4;
    *((_QWORD *)&v33 + 1) = &unk_1010F15B8;
    v28 = _Block_copy(&v32);
    v29 = swift_release(*((_QWORD *)&v34 + 1));
    v30 = MSVLogAddStateHandler(v25, v26, v28, v29);
    swift_release(v8);
    _Block_release(v28);

    v31 = v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_stateHandler;
    *(_QWORD *)v31 = v30;
    *(_BYTE *)(v31 + 8) = 0;
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A2D9D8()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_100A2DA24();

  return v1;
}

uint64_t sub_100A2DA24()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  LOBYTE(v4) = 1;
  v0 = sub_100A35908();
  v1 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&_s3KeyON, v0, v1, (uint64_t)v5);
  if (v6)
  {
    v2 = sub_100007E8C(&qword_1011D61C8);
    if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, v2, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10004FF60((uint64_t)v5, &qword_1011D7160);
    return 0;
  }
}

uint64_t property wrapper backing initializer of ApplicationCapabilities.Controller.capabilities(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[7];
  uint64_t v6;

  v1 = *(_OWORD *)(a1 + 80);
  v5[4] = *(_OWORD *)(a1 + 64);
  v5[5] = v1;
  v5[6] = *(_OWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 112);
  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v3 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v3;
  return Published.init(initialValue:)(v5, &type metadata for ApplicationCapabilities);
}

double sub_100A2DB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3573C);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_100A2DBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t inited;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  void *v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  double result;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  ValueMetadata *v106;
  _UNKNOWN **v107;

  v1 = v0;
  v2 = type metadata accessor for Whitetail.Binding();
  v3 = (void *)ICUserIdentityStoreDidChangeNotification;
  v4 = (void *)objc_opt_self(ICUserIdentityStore);
  v5 = v3;
  v6 = objc_msgSend(v4, "defaultIdentityStore");
  UIScreen.Dimensions.size.getter(v5);
  v106 = &type metadata for NotificationTrigger;
  v107 = &protocol witness table for NotificationTrigger;
  v104 = v7;
  v105 = v8;
  v9 = swift_allocObject(&unk_1010F1500, 24, 7);
  v100 = v1;
  swift_weakInit(v9 + 16, v1);
  v102 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v104, 1, (uint64_t)sub_100A35BB8, v9);
  v10 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v11 = (void *)MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification;
  UIScreen.Dimensions.size.getter(MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification);
  v106 = &type metadata for NotificationTrigger;
  v107 = &protocol witness table for NotificationTrigger;
  v104 = v12;
  v105 = v13;
  v14 = swift_allocObject(&unk_1010F1500, 24, 7);
  swift_weakInit(v14 + 16, v1);
  v15 = v11;
  v97 = v10;
  v101 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v104, 1, (uint64_t)sub_100A35BC0, v14);
  v98 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v16 = sub_100007E8C(&qword_1011D61C0);
  inited = swift_initStackObject(v16, &v103);
  *(_OWORD *)(inited + 16) = xmmword_100EC06D0;
  v18 = (void *)MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification;
  UIScreen.Dimensions.size.getter(MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v20;
  v21 = (void *)MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification;
  UIScreen.Dimensions.size.getter(MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = v23;
  v24 = (void *)RadioAvailabilityControllerRadioAvailableDidChangeNotification;
  UIScreen.Dimensions.size.getter(RadioAvailabilityControllerRadioAvailableDidChangeNotification);
  *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 112) = v25;
  *(_QWORD *)(inited + 120) = v26;
  v27 = (void *)MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification;
  UIScreen.Dimensions.size.getter(MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification);
  *(_QWORD *)(inited + 176) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 184) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 152) = v28;
  *(_QWORD *)(inited + 160) = v29;
  v30 = (void *)MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification;
  UIScreen.Dimensions.size.getter(MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification);
  *(_QWORD *)(inited + 216) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 224) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 192) = v31;
  *(_QWORD *)(inited + 200) = v32;
  v33 = swift_allocObject(&unk_1010F1500, 24, 7);
  swift_weakInit(v33 + 16, v100);
  v96 = v2;
  swift_allocObject(v2, 48, 7);
  v34 = v18;
  v99 = v98;
  v35 = v21;
  v36 = v24;
  v37 = v27;
  v38 = v30;
  v39 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_100A35BC0, v33);
  v40 = (uint64_t *)(v100 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings);
  swift_beginAccess(v100 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings, &v104, 33, 0);
  v41 = *v40;
  if ((unint64_t)*v40 >> 62)
  {
    if (v41 < 0)
      v95 = *v40;
    else
      v95 = v41 & 0xFFFFFFFFFFFFFF8;
    v43 = v102;
    swift_retain(v102);
    v44 = v101;
    swift_retain(v101);
    swift_retain(v39);
    swift_bridgeObjectRetain();
    v42 = _CocoaArrayWrapper.endIndex.getter(v95);
    swift_bridgeObjectRelease(v41);
    v46 = v42 + 3;
    if (!__OFADD__(v42, 3))
    {
LABEL_3:
      v47 = sub_10024D6B8(v46, 1);
      specialized Array._endMutation()(v47);
      swift_retain(v43);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
      v42 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v45 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v42 < v45 >> 1)
        goto LABEL_4;
      goto LABEL_24;
    }
  }
  else
  {
    v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    v43 = v102;
    swift_retain(v102);
    v44 = v101;
    swift_retain(v101);
    swift_retain(v39);
    v46 = v42 + 3;
    if (!__OFADD__(v42, 3))
      goto LABEL_3;
  }
  __break(1u);
LABEL_24:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v42 + 1, 1);
LABEL_4:
  v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v43);
  specialized Array._endMutation()(v49);
  swift_retain(v44);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
  v52 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v51 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v52 >= v51 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
  v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v44);
  specialized Array._endMutation()(v53);
  swift_retain(v39);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
  v56 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v55 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v56 >= v55 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
  v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v39);
  specialized Array._endMutation()(v57);
  swift_endAccess(&v104);
  swift_release(v43);
  swift_release(v39);
  v58 = v44;
  swift_release(v44);
  v59 = sub_100A358C4();
  v61 = UserDefaultsKeyValueTrigger.init<A>(suiteName:key:)(0xD000000000000014, 0x8000000100E4CFB0, v60, (uint64_t)&type metadata for NSUserDefaults.MobileiPod, v59);
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v106 = &type metadata for UserDefaultsKeyValueTrigger;
  v107 = &protocol witness table for UserDefaultsKeyValueTrigger;
  v68 = (_QWORD *)swift_allocObject(&unk_1010F1618, 48, 7);
  v104 = v68;
  v68[2] = v61;
  v68[3] = v63;
  v68[4] = v65;
  v68[5] = v67;
  v69 = swift_allocObject(&unk_1010F1500, 24, 7);
  swift_weakInit(v69 + 16, v100);
  v70 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(&v104, 1, (uint64_t)sub_100A35BC0, v69);
  swift_beginAccess(v40, &v104, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
  v73 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v72 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v73 >= v72 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
  v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v70);
  specialized Array._endMutation()(v74);
  swift_endAccess(&v104);
  v75 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver()), "init", v96);
  v76 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver;
  v77 = *(void **)(v100 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver);
  *(_QWORD *)(v100 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver) = v75;

  v78 = *(_QWORD *)(v100 + v76);
  if (v78)
    swift_weakAssign(v78+ OBJC_IVAR____TtCCV9MusicCore23ApplicationCapabilities10ControllerP33_3C92A9FA31E0FE3D8D536795352BB0D115ProfileObserver_controller, v100);
  v79 = v58;
  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  v80 = static BagProvider.shared;
  v81 = swift_allocObject(&unk_1010F1500, 24, 7);
  swift_weakInit(v81 + 16, v100);
  v82 = type metadata accessor for BagProvider.Observer();
  v83 = swift_allocObject(v82, 40, 7);
  v84 = swift_weakInit(v83 + 16, 0);
  *(_QWORD *)(v83 + 24) = 0;
  *(_QWORD *)(v83 + 32) = 0;
  swift_weakAssign(v84, v80);
  v85 = *(_QWORD *)(v83 + 24);
  v86 = *(_QWORD *)(v83 + 32);
  *(_QWORD *)(v83 + 24) = sub_100A35C0C;
  *(_QWORD *)(v83 + 32) = v81;
  swift_retain_n(v81, 3);
  v87 = sub_10004BA30(v85, v86);
  v104 = 0;
  __chkstk_darwin(v87);
  UnfairLock.locked<A>(_:)(sub_100A23CF0);
  if (v104)
  {
    v88 = v104;
    sub_100A3043C(v88, v81);

    v89 = v88;
    v90 = v88;
    v91 = v102;
  }
  else
  {
    sub_100A3CF60(0);
    v91 = v102;
    v90 = v97;
    v89 = v99;
  }

  swift_release_n(v81, 2, v92);
  swift_release(v39);
  swift_release(v79);
  swift_release(v91);
  swift_release(v81);
  v93 = *(_QWORD *)(v100 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver);
  *(_QWORD *)(v100 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver) = v83;
  *(_QWORD *)&result = swift_release(v93).n128_u64[0];
  return result;
}

uint64_t sub_100A2E390(char a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[7];
  uint64_t v17;
  _BYTE v18[24];
  _OWORD v19[7];
  uint64_t v20;

  if ((a1 & 1) == 0)
    return 0;
  v5 = a4 + 16;
  swift_beginAccess(a4 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = Strong;
  KeyPath = swift_getKeyPath(&unk_100EDE2E8);
  v9 = swift_getKeyPath(&unk_100EDE310);
  static Published.subscript.getter(v16, v7, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v19[4] = v16[4];
  v19[5] = v16[5];
  v19[6] = v16[6];
  v20 = v17;
  v19[0] = v16[0];
  v19[1] = v16[1];
  v19[2] = v16[2];
  v19[3] = v16[3];
  sub_100A2CEF8();
  v11 = v10;
  sub_100065184(v19);
  sub_100A7066C(v11);
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  v14 = a2(v13);
  swift_release(v7);
  swift_bridgeObjectRelease(v13);
  return v14;
}

uint64_t sub_100A2E4B4(uint64_t a1, char a2, void *aBlock)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t (*)(uint64_t), uint64_t, __n128);
  void *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;

  v3 = a2 & 1;
  v5 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, __n128))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_1010F15F0, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  v8 = swift_retain(v4);
  v9 = v5(v3, sub_100334734, v7, v8);
  swift_release(v4);
  swift_release(v7);
  return v9;
}

__n128 sub_100A2E540@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EDE2E8);
  v5 = swift_getKeyPath(&unk_100EDE310);
  static Published.subscript.getter(&v17, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = BYTE1(v17);
  v7 = BYTE2(v17);
  v8 = v23;
  v9 = v24;
  v10 = v25;
  v11 = v26;
  v13 = v18;
  result = v19;
  v14 = v20;
  v15 = v21;
  v16 = v22;
  *(_BYTE *)a2 = v17;
  *(_BYTE *)(a2 + 1) = v6;
  *(_BYTE *)(a2 + 2) = v7;
  *(_OWORD *)(a2 + 8) = v13;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v14;
  *(_OWORD *)(a2 + 56) = v15;
  *(_OWORD *)(a2 + 72) = v16;
  *(_BYTE *)(a2 + 88) = v8;
  *(_QWORD *)(a2 + 96) = v9;
  *(_BYTE *)(a2 + 104) = v10;
  *(_QWORD *)(a2 + 112) = v11;
  return result;
}

uint64_t sub_100A2E610(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  _BYTE v24[8];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = *a1;
  v19 = a1[2];
  v20 = a1[1];
  v3 = *((_QWORD *)a1 + 3);
  v17 = *((_QWORD *)a1 + 2);
  v18 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 4);
  v16 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v5 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v7 = *((_QWORD *)a1 + 9);
  v9 = (void *)*((_QWORD *)a1 + 10);
  v10 = *((_QWORD *)a1 + 12);
  v14 = a1[104];
  v15 = a1[88];
  v11 = *((_QWORD *)a1 + 14);
  v21 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EDE2E8);
  v22 = swift_getKeyPath(&unk_100EDE310);
  v24[0] = v2;
  v24[1] = v20;
  v24[2] = v19;
  v25 = v18;
  v26 = v17;
  v27 = v3;
  v28 = v4;
  v29 = v16;
  v30 = v6;
  v31 = v5;
  v32 = v8;
  v33 = v7;
  v34 = v9;
  v35 = v15;
  v36 = v10;
  v37 = v14;
  v38 = v11;
  v12 = v9;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_retain(v21);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  return static Published.subscript.setter(v24, v21, KeyPath, v22);
}

uint64_t ApplicationCapabilities.Controller.$capabilities.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, v3, 33, 0);
  v1 = sub_100007E8C((uint64_t *)&unk_1011D5EF0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100A2E7BC(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, v3, 33, 0);
  v1 = sub_100007E8C((uint64_t *)&unk_1011D5EF0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100A2E820(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = sub_100007E8C(&qword_1011D8D00);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, v17, 33, 0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011D5EF0);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

Swift::Void __swiftcall ApplicationCapabilities.Controller.setNeedsNetworkReachabilityUpdate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v8[16];
  uint64_t v9;
  char *v10;
  char v11;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v2);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = 0;
  v9 = v0;
  v10 = &v11;
  UnfairLock.locked<A>(_:)(sub_100A34C14);
  if (v11 == 1)
  {
    static TaskPriority.userInitiated.getter(v5);
    v6 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
    v7 = (_QWORD *)swift_allocObject(&unk_1010F1118, 40, 7);
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v1;
    swift_retain();
    sub_1009AA68C((uint64_t)v4, (uint64_t)&unk_1011D5F10, (uint64_t)v7);
    swift_release();
    sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011D8CF0);
  }
}

uint64_t sub_100A2EA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100A2EA6C, 0, 0);
}

uint64_t sub_100A2EA6C()
{
  uint64_t v0;

  UnfairLock.locked<A>(_:)(sub_100A35AA0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100A2EAC8(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  unsigned int v13;
  uint64_t KeyPath;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint8_t *v46;
  _QWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _BYTE v55[32];
  _BYTE v56[48];
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;

  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v3);
  v5 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate;
  if (a1[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate] == 1)
  {
    v54 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    v60 = v1;
    if (qword_1011D1C40 != -1)
      swift_once(&qword_1011D1C40, sub_100A322A4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048B14(v6, (uint64_t)qword_1011D5EC8);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Needs Network Reachability Update", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    a1[v5] = 0;
    v11 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
    if (v11)
    {
      v12 = v11;
      if ((objc_msgSend(v11, "shouldProhibitMusicActionForCurrentNetworkConditions") & 1) != 0)
        v13 = 0;
      else
        v13 = objc_msgSend(v12, "hasProperNetworkConditionsToShowCloudMedia");

    }
    else
    {
      v13 = 0;
    }
    KeyPath = swift_getKeyPath(&unk_100EDE2E8);
    v15 = swift_getKeyPath(&unk_100EDE310);
    v53 = a1;
    static Published.subscript.getter(v55, a1, KeyPath, v15);
    swift_release();
    swift_release();
    v16 = v55[1];
    v17 = (void *)v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter();
    v21 = os_log_type_enabled(v19, v20);
    if (v13 == v16)
    {
      if (v21)
      {
        v46 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Network Reachability status does not differ from currently known capabilities.", v46, 2u);
        swift_slowDealloc(v46, -1, -1);
      }

    }
    else
    {
      v22 = v13;
      if (v21)
      {
        v23 = swift_slowAlloc(12, -1);
        v24 = swift_slowAlloc(32, -1);
        *(_QWORD *)v55 = v24;
        *(_DWORD *)v23 = 136315138;
        if (v13)
          v25 = 0x1000000000000012;
        else
          v25 = 0x1000000000000016;
        if (v13)
          v26 = (char *)0x8000000100E4CF10;
        else
          v26 = (char *)0x8000000100E4CEF0;
        *(_QWORD *)(v23 + 4) = sub_10099627C((char *)v25, v26, (uint64_t *)v55);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Updating Network Reachability to: %s", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v23, -1, -1);
      }

      v27 = v53;
      v28 = &v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities];
      v29 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96];
      v30 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64];
      v57 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80];
      v58 = v29;
      v32 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16];
      v31 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32];
      *(_OWORD *)v55 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities];
      *(_OWORD *)&v55[16] = v32;
      v59 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112];
      v33 = v59;
      v34 = *(_OWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48];
      *(_OWORD *)v56 = v31;
      *(_OWORD *)&v56[16] = v34;
      *(_OWORD *)&v56[32] = v30;
      v35 = BYTE8(v57);
      v36 = (void *)v57;
      v37 = *(_QWORD *)&v55[24];
      v38 = v55[2];
      v39 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 24];
      v49 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32];
      v50 = v39;
      v40 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 72];
      v51 = *(_QWORD *)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 56];
      v52 = v40;
      v53 = *(char **)&v53[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80];
      v47[1] = *((_QWORD *)v28 + 12);
      *v28 = v55[0];
      v28[1] = v22;
      v28[2] = v38;
      *(_OWORD *)(v28 + 8) = *(_OWORD *)&v55[8];
      *((_QWORD *)v28 + 3) = v37;
      *((_QWORD *)v28 + 4) = v31;
      *(_OWORD *)(v28 + 40) = *(_OWORD *)&v56[8];
      v48 = *(_OWORD *)&v56[24];
      *(_OWORD *)(v28 + 56) = *(_OWORD *)&v56[24];
      *((_QWORD *)v28 + 9) = *((_QWORD *)&v30 + 1);
      *((_QWORD *)v28 + 10) = v36;
      v28[88] = v35;
      *((_QWORD *)v28 + 12) = v29;
      v28[104] = BYTE8(v29);
      *((_QWORD *)v28 + 14) = v33;
      sub_100A35754((uint64_t)v55);
      sub_100A35754((uint64_t)v55);
      *(_QWORD *)&v48 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_100A2F1E4((uint64_t)v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100065184(v55);
      v41 = type metadata accessor for TaskPriority(0);
      v42 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v54, 1, 1, v41);
      type metadata accessor for MainActor(0);
      v43 = swift_retain();
      v44 = static MainActor.shared.getter(v43);
      v45 = (_QWORD *)swift_allocObject(&unk_1010F15A0, 40, 7);
      v45[2] = v44;
      v45[3] = &protocol witness table for MainActor;
      v45[4] = v27;
      sub_100A3F884(v42, (uint64_t)&unk_1011D6180, (uint64_t)v45);
      swift_release();
    }
  }
}

uint64_t sub_100A2F09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100A2F108, v7, v8);
}

uint64_t sub_100A2F108()
{
  uint64_t v0;
  id v1;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1011D1C98 != -1)
    swift_once(&qword_1011D1C98, sub_100A32644);
  objc_msgSend(v1, "postNotificationName:object:", static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange, *(_QWORD *)(v0 + 16));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C98 != -1)
    swift_once(&qword_1011D1C98, sub_100A32644);
  return &static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange;
}

_QWORD *sub_100A2F1E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  id v38[4];
  void *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = &_swiftEmptySetSingleton;
  v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v44 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v45 = v7;
  v46 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v47 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  v8 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v40 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v41 = v8;
  v9 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v42 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v43 = v9;
  sub_100A35754((uint64_t)&v40);
  if (qword_1011D1D80 != -1)
    swift_once(&qword_1011D1D80, sub_100A6C1F4);
  if (static NSUserDefaults.mobileiPod)
  {
    v10 = sub_100A358C4();
    v11 = sub_10098A8C0();
    NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v10, v11, (uint64_t)v38);
    if (v38[3])
    {
      if ((swift_dynamicCast((char *)&v37 + 7, v38, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0
        && (v37 & 0x100000000000000) != 0)
      {
        __asm { BR              X10 }
      }
    }
    else
    {
      sub_10004FF60((uint64_t)v38, &qword_1011D7160);
    }
  }
  if (!_s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)&v40, (unsigned __int8 *)a1))
  {
    if ((v40 & 1) != (*(_BYTE *)a1 & 1))
    {
      if (qword_1011D1C90 != -1)
        swift_once(&qword_1011D1C90, sub_100A325F4);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.activeAccountDidChange);

    }
    v12 = *((_QWORD *)&v41 + 1);
    v13 = sub_100A3FBA4(5u, *((uint64_t *)&v41 + 1)) & 1;
    v14 = *(_QWORD *)(a1 + 24);
    if (v13 != (sub_100A3FBA4(5u, v14) & 1))
    {
      if (qword_1011D1C48 != -1)
        swift_once(&qword_1011D1C48, sub_100A32324);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange);

    }
    v15 = sub_100A3FBA4(0, v12) & 1;
    if (v15 != (sub_100A3FBA4(0, v14) & 1))
    {
      if (qword_1011D1C50 != -1)
        swift_once(&qword_1011D1C50, sub_100A32374);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange);

    }
    v16 = sub_100A3FBA4(3u, v12) & 1;
    if (v16 != (sub_100A3FBA4(3u, v14) & 1))
    {
      if (qword_1011D1C58 != -1)
        swift_once(&qword_1011D1C58, sub_100A323C4);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange);

    }
    v17 = sub_100A3FBA4(9u, v12) & 1;
    if (v17 != (sub_100A3FBA4(9u, v14) & 1))
    {
      if (qword_1011D1C78 != -1)
        swift_once(&qword_1011D1C78, sub_100A32504);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange);

    }
    v18 = sub_100A3FBA4(4u, v12) & 1;
    if (v18 != (sub_100A3FBA4(4u, v14) & 1))
    {
      if (qword_1011D1C60 != -1)
        swift_once(&qword_1011D1C60, sub_100A32414);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange);

    }
    v19 = sub_100A3FBA4(2u, v12) & 1;
    if (v19 != (sub_100A3FBA4(2u, v14) & 1))
    {
      if (qword_1011D1C68 != -1)
        swift_once(&qword_1011D1C68, sub_100A32464);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange);

    }
    v20 = sub_100A3FBA4(0xAu, v12) & 1;
    if (v20 != (sub_100A3FBA4(0xAu, v14) & 1))
    {
      if (qword_1011D1C70 != -1)
        swift_once(&qword_1011D1C70, sub_100A324B4);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.mliEnabledDidChange);

    }
    if ((BYTE1(v40) & 1) != (*(_BYTE *)(a1 + 1) & 1))
    {
      if (qword_1011D1C98 != -1)
        swift_once(&qword_1011D1C98, sub_100A32644);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange);

    }
    if ((BYTE2(v40) & 1) != (*(_BYTE *)(a1 + 2) & 1))
    {
      if (qword_1011D1CA8 != -1)
        swift_once(&qword_1011D1CA8, sub_100A326E4);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange);

    }
    if (*((_QWORD *)&v42 + 1) != *(_QWORD *)(a1 + 40))
    {
      if (qword_1011D1CA0 != -1)
        swift_once(&qword_1011D1CA0, sub_100A32694);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange);

    }
    if ((sub_1009A4BA4(BYTE8(v45), *(unsigned __int8 *)(a1 + 88)) & 1) == 0)
    {
      if (qword_1011D1C88 != -1)
        swift_once(&qword_1011D1C88, sub_100A325A4);
      sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange);

    }
    v21 = BYTE8(v46);
    v22 = v47;
    v23 = *(unsigned __int8 *)(a1 + 104);
    v24 = *(_QWORD *)(a1 + 112);
    if ((sub_100A2C6CC(v46, *(_QWORD *)(a1 + 96)) & 1) == 0)
      goto LABEL_65;
    if (v21 == 6)
    {
      if (v23 != 6)
        goto LABEL_65;
    }
    else
    {
      if (v23 == 6)
        goto LABEL_65;
      sub_1009A4BA8(v21);
      if ((v25 & 1) == 0)
        goto LABEL_65;
    }
    if ((sub_100A2C8D8(v22, v24) & 1) != 0)
    {
LABEL_68:
      if (*((_QWORD *)&v40 + 1) != *(_QWORD *)(a1 + 8))
      {
        if (qword_1011D1CB0 != -1)
          swift_once(&qword_1011D1CB0, sub_100A32734);
        sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange);

      }
      goto LABEL_72;
    }
LABEL_65:
    if (qword_1011D1C80 != -1)
      swift_once(&qword_1011D1C80, sub_100A32554);
    sub_100AAACDC(v38, (id)static ApplicationCapabilities.NotificationNames.supportedTabsDidChange);

    goto LABEL_68;
  }
LABEL_72:
  if (_s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)&v40, (unsigned __int8 *)a1))
  {
    swift_bridgeObjectRelease(v39);
  }
  else
  {
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
    v27 = v39;
    type metadata accessor for MainActor(0);
    sub_100A35754((uint64_t)&v40);
    v28 = swift_retain(v2);
    v29 = static MainActor.shared.getter(v28);
    v30 = swift_allocObject(&unk_1010F14D8, 168, 7);
    v31 = v45;
    *(_OWORD *)(v30 + 104) = v44;
    *(_OWORD *)(v30 + 120) = v31;
    *(_OWORD *)(v30 + 136) = v46;
    v32 = v41;
    *(_OWORD *)(v30 + 40) = v40;
    *(_OWORD *)(v30 + 56) = v32;
    v33 = v43;
    *(_OWORD *)(v30 + 72) = v42;
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v30 + 32) = v2;
    v34 = v47;
    *(_OWORD *)(v30 + 88) = v33;
    *(_QWORD *)(v30 + 152) = v34;
    *(_QWORD *)(v30 + 160) = v27;
    v35 = sub_100A3F884((uint64_t)v6, (uint64_t)&unk_1011D6110, v30);
    swift_release(v35);
  }
  return sub_100065184(&v40);
}

uint64_t *ApplicationCapabilities.NotificationNames.activeAccountDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C90 != -1)
    swift_once(&qword_1011D1C90, sub_100A325F4);
  return &static ApplicationCapabilities.NotificationNames.activeAccountDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C48 != -1)
    swift_once(&qword_1011D1C48, sub_100A32324);
  return &static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C50 != -1)
    swift_once(&qword_1011D1C50, sub_100A32374);
  return &static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C58 != -1)
    swift_once(&qword_1011D1C58, sub_100A323C4);
  return &static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C78 != -1)
    swift_once(&qword_1011D1C78, sub_100A32504);
  return &static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C60 != -1)
    swift_once(&qword_1011D1C60, sub_100A32414);
  return &static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C68 != -1)
    swift_once(&qword_1011D1C68, sub_100A32464);
  return &static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.mliEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C70 != -1)
    swift_once(&qword_1011D1C70, sub_100A324B4);
  return &static ApplicationCapabilities.NotificationNames.mliEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1CA8 != -1)
    swift_once(&qword_1011D1CA8, sub_100A326E4);
  return &static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1CA0 != -1)
    swift_once(&qword_1011D1CA0, sub_100A32694);
  return &static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C88 != -1)
    swift_once(&qword_1011D1C88, sub_100A325A4);
  return &static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.supportedTabsDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1C80 != -1)
    swift_once(&qword_1011D1C80, sub_100A32554);
  return &static ApplicationCapabilities.NotificationNames.supportedTabsDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1CB0 != -1)
    swift_once(&qword_1011D1CB0, sub_100A32734);
  return &static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange;
}

uint64_t sub_100A2FEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[20] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100A2FF34, v9, v10);
}

uint64_t sub_100A2FF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 v12;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100EDE2E8);
  v5 = swift_getKeyPath(&unk_100EDE310);
  v6 = *(_OWORD *)(v3 + 48);
  v8 = *(_OWORD *)v3;
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v0 + 64) = v6;
  *(_OWORD *)(v0 + 16) = v8;
  *(_OWORD *)(v0 + 32) = v7;
  v10 = *(_OWORD *)(v3 + 80);
  v9 = *(_OWORD *)(v3 + 96);
  v11 = *(_OWORD *)(v3 + 64);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v3 + 112);
  *(_OWORD *)(v0 + 96) = v10;
  *(_OWORD *)(v0 + 112) = v9;
  *(_OWORD *)(v0 + 80) = v11;
  sub_100A35754(v3);
  swift_retain();
  static Published.subscript.setter(v0 + 16, v2, KeyPath, v5);
  swift_retain();
  sub_100A34854(v1, v2);
  v12 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
}

_QWORD *sub_100A30010(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[7];
  uint64_t v24;
  _OWORD v25[7];
  uint64_t v26;

  v2 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = v2;
  swift_retain(v3);
  sub_100A34000(v2, v3, v4, (uint64_t)v23);
  v6 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  v7 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v25[5] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v25[6] = v8;
  v26 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  v9 = v26;
  v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v25[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v11 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v25[1] = v10;
  v25[2] = v11;
  v25[3] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v25[4] = v7;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 24);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 56);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 72);
  v16 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v18 = v23[3];
  *(_OWORD *)(v6 + 32) = v23[2];
  *(_OWORD *)(v6 + 48) = v18;
  v19 = v23[1];
  *(_OWORD *)v6 = v23[0];
  *(_OWORD *)(v6 + 16) = v19;
  *(_QWORD *)(v6 + 112) = v24;
  v20 = v23[6];
  v21 = v23[4];
  *(_OWORD *)(v6 + 80) = v23[5];
  *(_OWORD *)(v6 + 96) = v20;
  *(_OWORD *)(v6 + 64) = v21;
  sub_100A35754((uint64_t)v25);
  sub_100A35754((uint64_t)v23);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);

  sub_100A2F1E4((uint64_t)v25);
  sub_100065184(v23);
  return sub_100065184(v25);
}

double sub_100A30174(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  char v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD v13[3];
  void *v14;
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    v6 = sub_100A302B0();
    v8 = v7;

    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    if ((v8 & 1) != 0)
    {
      v6 = 0;
      v13[1] = 0;
      v13[2] = 0;
      v14 = 0;
    }
    else
    {
      v14 = &type metadata for UInt64;
    }
    v13[0] = v6;
    v12 = 2;
    v10 = sub_100A35908();
    v11 = sub_10098A8C0();
    NSUserDefaults.subscript.setter((uint64_t)v13, (uint64_t)&v12, (uint64_t)&_s3KeyON, v10, v11);

    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3573C);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

id sub_100A302B0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v6;
  uint64_t v7;
  id v8;
  char v9;

  v1 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v8 = 0;
  v2 = objc_msgSend(v0, "DSIDForUserIdentity:outError:", v1, &v8);

  v3 = v8;
  if (v2)
  {
    v8 = 0;
    v9 = 1;
    v4 = v3;
    static UInt64._conditionallyBridgeFromObjectiveC(_:result:)(v2, &v8);

    return v8;
  }
  else
  {
    v6 = v8;
    v7 = _convertNSErrorToError(_:)(v3);

    swift_willThrow();
    swift_errorRelease(v7);
    return 0;
  }
}

double sub_100A303B8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    UnfairLock.locked<A>(_:)(a2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

void sub_100A3043C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_lock);
    __chkstk_darwin(Strong);
    swift_retain(v6);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A35C14);
    swift_release(v6);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3573C);
    v7 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(a1, "dictionaryForBagKey:", v8);

    if (v9
      && (v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v9, v11 = sub_100B69514(v10), swift_bridgeObjectRelease(v10), v11))
    {
      *((_QWORD *)&v16 + 1) = sub_100007E8C(&qword_1011D61C8);
      *(_QWORD *)&v15 = v11;
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    v14 = 1;
    v12 = sub_100A35908();
    v13 = sub_10098A8C0();
    NSUserDefaults.subscript.setter((uint64_t)&v15, (uint64_t)&v14, (uint64_t)&_s3KeyON, v12, v13);
    swift_release(v5);

  }
}

uint64_t ApplicationCapabilities.Controller.updated()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return swift_task_switch(sub_100A30644, 0, 0);
}

uint64_t sub_100A30644()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_100A306CC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x2864657461647075, 0xE900000000000029, sub_100A34CA0, *(_QWORD *)(v0 + 144), &type metadata for ApplicationCapabilities);
}

uint64_t sub_100A306CC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_100A30720, 0, 0);
}

uint64_t sub_100A30720()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v1 = *(_BYTE *)(v0 + 17);
  v2 = *(_BYTE *)(v0 + 18);
  v3 = *(_BYTE *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_BYTE *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_OWORD *)(v0 + 40);
  v9 = *(_OWORD *)(v0 + 24);
  v10 = *(_OWORD *)(v0 + 56);
  v11 = *(_OWORD *)(v0 + 72);
  v12 = *(_OWORD *)(v0 + 88);
  *(_BYTE *)v6 = *(_BYTE *)(v0 + 16);
  *(_BYTE *)(v6 + 1) = v1;
  *(_BYTE *)(v6 + 2) = v2;
  *(_OWORD *)(v6 + 8) = v9;
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 40) = v10;
  *(_OWORD *)(v6 + 56) = v11;
  *(_OWORD *)(v6 + 72) = v12;
  *(_BYTE *)(v6 + 88) = v3;
  *(_QWORD *)(v6 + 96) = v4;
  *(_BYTE *)(v6 + 104) = v5;
  *(_QWORD *)(v6 + 112) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100A30788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  char *v30;
  void *v31;

  v4 = sub_100007E8C(&qword_1011D6168);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  v11 = static BagProvider.shared;
  v12 = swift_allocObject(&unk_1010F1500, 24, 7);
  swift_weakInit(v12 + 16, a2);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, a1, v4);
  v13(v7, (uint64_t)v10, v4);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = swift_allocObject(&unk_1010F1528, v15 + v6, v14 | 7);
  *(_QWORD *)(v16 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, v10, v4);
  swift_retain_n(v12, 2);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  v17 = v31;
  if (v31)
  {
    sub_100A30A78(v31, v12);
    swift_release();
    swift_release();

  }
  else
  {
    v19 = type metadata accessor for BagProvider.Observer();
    v20 = swift_allocObject(v19, 40, 7);
    v21 = swift_weakInit(v20 + 16, 0);
    *(_QWORD *)(v20 + 24) = 0;
    *(_QWORD *)(v20 + 32) = 0;
    swift_weakAssign(v21, v11);
    v22 = swift_allocObject(&unk_1010F1550, 24, 7);
    v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v23 = v22;
    swift_weakInit(v22 + 16, v11);
    v24 = (_QWORD *)swift_allocObject(&unk_1010F1578, 48, 7);
    v24[2] = sub_100A359E8;
    v24[3] = v16;
    v24[4] = v23;
    v24[5] = v20;
    v25 = *(_QWORD *)(v20 + 24);
    v26 = *(_QWORD *)(v20 + 32);
    *(_QWORD *)(v20 + 24) = sub_100A35A60;
    *(_QWORD *)(v20 + 32) = v24;
    swift_retain();
    swift_retain();
    v27 = sub_10004BA30(v25, v26);
    __chkstk_darwin(v27);
    *(&v29 - 2) = v11;
    *(&v29 - 1) = v20;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A35A6C);
    v7 = v30;
    sub_100A3CF60(0);
    swift_release();
    swift_release();
    v18 = swift_release();
  }
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v18);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100A30A78(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  _OWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[7];
  uint64_t v14;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, &v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider);
    v7 = *(_BYTE *)(Strong + 16);
    a1;
    swift_retain();
    v8 = sub_100A34000(a1, v6, v7, (uint64_t)v13);
    __chkstk_darwin(v8);
    swift_retain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A35A84);
    swift_release();
    v10[4] = v13[4];
    v10[5] = v13[5];
    v10[6] = v13[6];
    v11 = v14;
    v10[0] = v13[0];
    v10[1] = v13[1];
    v10[2] = v13[2];
    v10[3] = v13[3];
    v9 = sub_100007E8C(&qword_1011D6168);
    CheckedContinuation.resume(returning:)(v10, v9);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_100A30BD8(uint64_t a1, void *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  id v21;
  void *v23;
  _OWORD v24[7];
  uint64_t v25;

  v6 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = a2;

  v7 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v24[4] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v24[5] = v8;
  v24[6] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  v9 = v25;
  v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v24[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v24[1] = v10;
  v11 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v24[2] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v24[3] = v11;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 24);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 56);
  v15 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 72);
  v23 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v17 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v7 + 48) = v17;
  v18 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 16) = v18;
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(a3 + 112);
  v19 = *(_OWORD *)(a3 + 96);
  v20 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v7 + 96) = v19;
  *(_OWORD *)(v7 + 64) = v20;
  sub_100A35754(a3);
  sub_100A35754(a3);
  v21 = a2;
  sub_100A35754((uint64_t)v24);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);

  sub_100A2F1E4((uint64_t)v24);
  sub_100065184((_QWORD *)a3);
  return sub_100065184(v24);
}

uint64_t ApplicationCapabilities.Controller.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D5EF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  v3 = *(void **)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ApplicationCapabilities.Controller.__deallocating_deinit()
{
  uint64_t v0;

  ApplicationCapabilities.Controller.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

Swift::Bool __swiftcall ApplicationCapabilities.Tabs.shouldShowLoadingUpsellBanner(for:)(MusicCore::TabIdentifier a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v1;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

BOOL sub_100A31074(_BOOL8 a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  _BYTE v14[24];
  uint64_t v15;

  v4 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1D80 != -1)
    swift_once(&qword_1011D1D80, sub_100A6C1F4);
  if (!static NSUserDefaults.mobileiPod)
    goto LABEL_10;
  v7 = sub_100A358C4();
  v8 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v7, v8, (uint64_t)v14);
  if (!v15)
  {
    sub_10004FF60((uint64_t)v14, &qword_1011D7160);
LABEL_10:
    a1 = 1;
    goto LABEL_11;
  }
  if ((swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0
    || v13 != 1)
  {
    goto LABEL_10;
  }
  if (a1)
    a1 = objc_msgSend((id)a1, "statusType") == (id)1;
LABEL_11:
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.applicationScriptURL.getter((uint64_t)v6);

  v10 = type metadata accessor for URL(0);
  LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10);
  sub_10004FF60((uint64_t)v6, &qword_1011D2AE0);
  if ((_DWORD)v9 == 1 && objc_msgSend(a2, "hasLoadedSubscriptionAvailability"))
    return objc_msgSend(a2, "isSubscriptionAvailable") & a1;
  return a1;
}

uint64_t sub_100A31248(void *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  _BOOL4 v7;
  NSString v8;
  id v9;
  id v10;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  unsigned __int8 v16;
  _BYTE v17[24];
  uint64_t v18;

  if (a1)
  {
    v3 = a1;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureMusicArtistActivityAllowed);
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
    LODWORD(v3) = objc_msgSend(v3, "effectiveBoolValueForSetting:", v6);

    v7 = (_DWORD)v3 == 2;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v7 = 1;
    if (!a2)
      goto LABEL_12;
  }
  if (qword_1011D1C30 != -1)
    swift_once(&qword_1011D1C30, sub_100A31A40);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a2, "dictionaryForBagKey:", v8);

  if (v9)
  {

    sub_10004A07C(0, &qword_1011D6138, ICUserIdentityStore_ptr);
    v10 = static ICUserIdentityStore.activeAccountDSID.getter();

    if (v10 && !v7)
      return 1;
  }
LABEL_12:
  if (qword_1011D24D8 != -1)
    swift_once(&qword_1011D24D8, sub_100B63A4C);
  if (static DeviceCapabilities.isInternalInstall != 1)
    return 0;
  v12 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v16 = 3;
  v13 = sub_100A35908();
  v14 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&_s3KeyON, v13, v14, (uint64_t)v17);

  if (!v18)
  {
    sub_10004FF60((uint64_t)v17, &qword_1011D7160);
    return 0;
  }
  result = swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
  if ((_DWORD)result)
    return v16;
  return result;
}

uint64_t sub_100A3145C()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD v11[2];
  unsigned __int8 v12[40];
  __int128 v13;
  __int128 v14;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForBagKey:", v1);

  if (!v2
    || (v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v2, !v3))
  {
    v13 = 0u;
    v14 = 0u;
LABEL_7:
    sub_10004FF60((uint64_t)&v13, &qword_1011D7160);
LABEL_8:
    v13 = 0u;
    v14 = 0u;
LABEL_9:
    sub_10004FF60((uint64_t)&v13, &qword_1011D7160);
    return 2;
  }
  v11[0] = 6909037;
  v11[1] = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_10079C294((uint64_t)v12), (v5 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_10004FF2C((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_7;
  v7 = sub_100007E8C((uint64_t *)&unk_1011D6120);
  if ((swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    goto LABEL_8;
  v8 = *(_QWORD *)v12;
  if (!*(_QWORD *)v12)
    goto LABEL_8;
  strcpy((char *)v11, "ismliEnabled");
  BYTE5(v11[1]) = 0;
  HIWORD(v11[1]) = -5120;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_10079C294((uint64_t)v12), (v10 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v8);
  sub_10004FF2C((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_9;
  if (swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    return v12[0];
  else
    return 2;
}

uint64_t sub_100A31688()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v13[5];
  __int128 v14;
  __int128 v15;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForBagKey:", v1);

  if (!v2
    || (v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v2, !v3))
  {
    v14 = 0u;
    v15 = 0u;
LABEL_7:
    sub_10004FF60((uint64_t)&v14, &qword_1011D7160);
LABEL_8:
    v14 = 0u;
    v15 = 0u;
LABEL_9:
    sub_10004FF60((uint64_t)&v14, &qword_1011D7160);
    return 0;
  }
  v11 = 6909037;
  v12 = 0xE300000000000000;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_10079C294((uint64_t)v13), (v5 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_10004FF2C((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_7;
  v7 = sub_100007E8C((uint64_t *)&unk_1011D6120);
  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    goto LABEL_8;
  v8 = v13[0];
  if (!v13[0])
    goto LABEL_8;
  v11 = 0xD000000000000011;
  v12 = 0x8000000100E4C960;
  AnyHashable.init<A>(_:)(&v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_10079C294((uint64_t)v13), (v10 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v8);
  sub_10004FF2C((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_9;
  result = swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((_DWORD)result)
  {
    swift_bridgeObjectRelease(v13[1]);
    return 1;
  }
  return result;
}

void sub_100A318B0(char a1)
{
  __asm { BR              X10 }
}

_UNKNOWN **sub_100A318F8()
{
  return &off_1010E5258;
}

uint64_t sub_100A31A40()
{
  uint64_t result;
  uint64_t v1;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreSocialBagKey);
  qword_1011D5EB0 = result;
  *(_QWORD *)algn_1011D5EB8 = v1;
  return result;
}

uint64_t sub_100A31A6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  unsigned __int8 v9;
  unint64_t v10;
  char v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;
  Swift::String v15;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v5 = *a1;
  v15._countAndFlagsBits = 25705;
  v15._object = (void *)0xE200000000000000;
  AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_10079C294((uint64_t)v16), (v7 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_10004FF2C((uint64_t)v16);
  if (*((_QWORD *)&v18 + 1))
  {
    result = swift_dynamicCast(&v15, &v17, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if ((result & 1) != 0)
    {
      result = sub_100A3F300(v15);
      if (result != 7)
      {
        v9 = result;
        v15._countAndFlagsBits = 0xD000000000000012;
        v15._object = (void *)0x8000000100E4C980;
        AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v5 + 16) && (v10 = sub_10079C294((uint64_t)v16), (v11 & 1) != 0))
        {
          sub_10004FA40(*(_QWORD *)(v5 + 56) + 32 * v10, (uint64_t)&v17);
        }
        else
        {
          v17 = 0u;
          v18 = 0u;
        }
        sub_10004FF2C((uint64_t)v16);
        if (*((_QWORD *)&v18 + 1))
        {
          result = swift_dynamicCast(&v15, &v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
          if ((result & 1) != 0)
          {
            if (LOBYTE(v15._countAndFlagsBits) != 2)
            {
              v13 = v9;
              if ((v15._countAndFlagsBits & 1) != 0)
                v14 = 256;
              else
                v14 = 0;
LABEL_26:
              v12 = v14 | v13;
              goto LABEL_13;
            }
LABEL_22:
            if (*(_QWORD *)(a2 + 16))
            {
              swift_bridgeObjectRetain();
              v19 = a2;
              __asm { BR              X9 }
            }
            v14 = 0;
            v13 = v9;
            goto LABEL_26;
          }
        }
        else
        {
          result = sub_10004FF60((uint64_t)&v17, &qword_1011D7160);
        }
        LOBYTE(v15._countAndFlagsBits) = 2;
        goto LABEL_22;
      }
    }
  }
  else
  {
    result = sub_10004FF60((uint64_t)&v17, &qword_1011D7160);
  }
  v12 = 512;
LABEL_13:
  *a3 = v12;
  return result;
}

id sub_100A31F38()
{
  void *v0;
  id result;
  void *v2;
  objc_super v3;

  result = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "unregisterObserver:", v0);

    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver();
    return objc_msgSendSuper2(&v3, "dealloc");
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100A32078(char *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  char *v8;
  double result;
  id v10;

  if (a4)
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  if (swift_weakLoadStrong(&a1[OBJC_IVAR____TtCCV9MusicCore23ApplicationCapabilities10ControllerP33_3C92A9FA31E0FE3D8D536795352BB0D115ProfileObserver_controller]))
  {
    v10 = a3;
    v8 = a1;
    UnfairLock.locked<A>(_:)(a5);
    swift_release();
    swift_bridgeObjectRelease();

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

id sub_100A32170()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)RadioAvailabilityController), "init");
  qword_1011D5EC0 = (uint64_t)result;
  return result;
}

uint64_t sub_100A321A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100A321E0 + 4 * byte_100EDE2A3[a1]))(0xD00000000000001FLL, 0x8000000100E4A2B0);
}

uint64_t sub_100A321E0()
{
  uint64_t v0;

  return v0 + 16;
}

unint64_t sub_100A32208()
{
  return 0xD000000000000014;
}

void sub_100A32224(char *a1)
{
  sub_1009A4224(*a1);
}

void sub_100A32230()
{
  char *v0;

  sub_100A377E0(*v0);
}

void sub_100A32238(uint64_t a1)
{
  char *v1;

  sub_100A37CB8(a1, *v1);
}

void sub_100A32240(uint64_t a1)
{
  char *v1;

  sub_100A38260(a1, *v1);
}

unint64_t sub_100A32248@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_1010E6D28;
  result = sub_100A35D64(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100A3227C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100A321A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100A322A4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D5EC8);
  sub_100048B14(v0, (uint64_t)qword_1011D5EC8);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x6261706143707041, 0xEF73656974696C69);
}

NSString sub_100A32324()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C48, (id *)&static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange, (uint64_t)sub_100A32324);
}

NSString sub_100A32374()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C50, (id *)&static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange, (uint64_t)sub_100A32374);
}

NSString sub_100A323C4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C58, (id *)&static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange, (uint64_t)sub_100A323C4);
}

NSString sub_100A32414()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C60, (id *)&static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange, (uint64_t)sub_100A32414);
}

NSString sub_100A32464()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C68, (id *)&static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange, (uint64_t)sub_100A32464);
}

NSString sub_100A324B4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.mliEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.mliEnabledDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C70, (id *)&static ApplicationCapabilities.NotificationNames.mliEnabledDidChange, (uint64_t)sub_100A324B4);
}

NSString sub_100A32504()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C78, (id *)&static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange, (uint64_t)sub_100A32504);
}

NSString sub_100A32554()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.supportedTabsDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.supportedTabsDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C80, (id *)&static ApplicationCapabilities.NotificationNames.supportedTabsDidChange, (uint64_t)sub_100A32554);
}

NSString sub_100A325A4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C88, (id *)&static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange, (uint64_t)sub_100A325A4);
}

NSString sub_100A325F4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.activeAccountDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.activeAccountDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C90, (id *)&static ApplicationCapabilities.NotificationNames.activeAccountDidChange, (uint64_t)sub_100A325F4);
}

NSString sub_100A32644()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.getter()
{
  return sub_100A32784(&qword_1011D1C98, (id *)&static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange, (uint64_t)sub_100A32644);
}

NSString sub_100A32694()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.getter()
{
  return sub_100A32784(&qword_1011D1CA0, (id *)&static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange, (uint64_t)sub_100A32694);
}

NSString sub_100A326E4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.getter()
{
  return sub_100A32784(&qword_1011D1CA8, (id *)&static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange, (uint64_t)sub_100A326E4);
}

NSString sub_100A32734()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.getter()
{
  return sub_100A32784(&qword_1011D1CB0, (id *)&static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange, (uint64_t)sub_100A32734);
}

id sub_100A32784(_QWORD *a1, id *a2, uint64_t a3)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return *a2;
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*a1 != *a2)
    return 0;
  v4 = a1[2];
  v5 = a2[2];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_11;
  }
  if (!v5)
    return 0;
  v6 = a1[1];
  v7 = a2[1];
  v8 = v6 == v7 && v4 == v5;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, v7, v5, 0), result = 0, (v9 & 1) != 0))
  {
LABEL_11:
    v11 = a1[4];
    v12 = a2[4];
    if (v11)
    {
      if (v12)
      {
        v13 = a1[3];
        v14 = a2[3];
        if (v13 == v14 && v11 == v12)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v13, v11, v14, v12, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  if (((*a1 ^ *a2) & 1) != 0)
    return 0;
  if (((a1[1] ^ a2[1]) & 1) != 0)
    return 0;
  if (((a1[2] ^ a2[2]) & 1) != 0)
    return 0;
  if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
    return 0;
  if (*((_QWORD *)a1 + 2) != *((_QWORD *)a2 + 2))
    return 0;
  if ((sub_100AA4F70(*((_QWORD *)a1 + 3), *((_QWORD *)a2 + 3)) & 1) == 0)
    return 0;
  if ((sub_100AA4F70(*((_QWORD *)a1 + 4), *((_QWORD *)a2 + 4)) & 1) == 0)
    return 0;
  v4 = *(_OWORD *)(a1 + 56);
  v21[0] = *(_OWORD *)(a1 + 40);
  v21[1] = v4;
  v22 = *((_QWORD *)a1 + 9);
  v5 = *(_OWORD *)(a2 + 56);
  v19[0] = *(_OWORD *)(a2 + 40);
  v19[1] = v5;
  v20 = *((_QWORD *)a2 + 9);
  if ((_s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v21, v19) & 1) == 0)
    return 0;
  v6 = (void *)*((_QWORD *)a1 + 10);
  v7 = (void *)*((_QWORD *)a2 + 10);
  if (v6)
  {
    if (!v7)
      return 0;
    sub_10004A07C(0, &qword_1011DB7C0, ICMusicSubscriptionStatus_ptr);
    v8 = v7;
    v9 = v6;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if ((sub_1009A4BA4(a1[88], a2[88]) & 1) == 0)
    return 0;
  v11 = *((_QWORD *)a1 + 12);
  v12 = a1[104];
  v13 = *((_QWORD *)a1 + 14);
  v14 = *((_QWORD *)a2 + 12);
  v15 = a2[104];
  v16 = *((_QWORD *)a2 + 14);
  if ((sub_100A2C6CC(v11, v14) & 1) == 0)
    return 0;
  if (v12 == 6)
  {
    if (v15 != 6)
      return 0;
  }
  else
  {
    if (v15 == 6)
      return 0;
    sub_1009A4BA8(v12);
    if ((v17 & 1) == 0)
      return 0;
  }
  return (sub_100A2C8D8(v13, v16) & 1) != 0;
}

char *sub_100A32A24(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;
  _BYTE v12[24];
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (char *)_swiftEmptyArrayStorage;
    v4 = 32;
    do
    {
      v5 = *(_BYTE *)(a1 + v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_1009B94B8(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v7 = *((_QWORD *)v3 + 2);
      v6 = *((_QWORD *)v3 + 3);
      if (v7 >= v6 >> 1)
        v3 = sub_1009B94B8((char *)(v6 > 1), v7 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v7 + 1;
      v3[v7 + 32] = 0x5040302010100uLL >> (8 * v5);
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = (char *)_swiftEmptyArrayStorage;
  }
  if (qword_1011D1D80 != -1)
    swift_once(&qword_1011D1D80, sub_100A6C1F4);
  if (static NSUserDefaults.mobileiPod)
  {
    v8 = sub_100A358C4();
    v9 = sub_10098A8C0();
    NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v8, v9, (uint64_t)v12);
    if (v13)
    {
      if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        if (!*((_QWORD *)v3 + 2))
          return v3;
LABEL_19:
        swift_bridgeObjectRetain();
        __asm { BR              X10 }
      }
    }
    else
    {
      sub_10004FF60((uint64_t)v12, &qword_1011D7160);
    }
  }
  if (*((_QWORD *)v3 + 2))
    goto LABEL_19;
  return v3;
}

uint64_t sub_100A32D54(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (!*(_QWORD *)(a1 + 16))
    return 1;
  if (*(_QWORD *)(a2 + 16))
  {
    v3 = *(_BYTE *)(a1 + 32);
    Hasher.init(_seed:)(v9, *(_QWORD *)(a2 + 40));
    v4 = ApplicationCapabilities.Service.rawValue.getter(v3);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_100A33158(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1)
  {
    v3 = a1;
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "numberForBagKey:", v4);

    if (v5)
    {
      v19 = 0;
      v20 = 1;
      static Int._conditionallyBridgeFromObjectiveC(_:result:)(v5, &v19);

      if (v20)
        v6 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v6 = v19;
    }
    else
    {

      v6 = 0x7FFFFFFFFFFFFFFFLL;
    }
    v11 = v3;
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "stringForBagKey:", v12);

    if (v13)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v10 = v14;

    }
    else
    {

      v9 = 0;
      v10 = 0;
    }
    v15 = v11;
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "stringForBagKey:", v16);

    if (v17)
    {
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v8 = v18;

    }
    else
    {

      v7 = 0;
      v8 = 0;
    }
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v6 = 0x7FFFFFFFFFFFFFFFLL;
  }
  *a2 = v6;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v7;
  a2[4] = v8;
}

void sub_100A33340(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  int64_t v19;

  if (!a2)
  {
LABEL_25:
    sub_100A318B0(a1);
    return;
  }
  v18 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v19 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v7 >= v19)
      goto LABEL_23;
    v11 = *(_QWORD *)(v18 + 8 * v7);
    if (!v11)
      break;
LABEL_17:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_18:
    v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v9);
    v14 = *v13;
    v15 = (void *)v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v14;
    v17._object = v15;
    _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E5370, v17);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v16);
  }
  v12 = v7 + 1;
  if (v7 + 1 >= v19)
    goto LABEL_23;
  v11 = *(_QWORD *)(v18 + 8 * v12);
  if (v11)
    goto LABEL_16;
  v12 = v7 + 2;
  if (v7 + 2 >= v19)
    goto LABEL_23;
  v11 = *(_QWORD *)(v18 + 8 * v12);
  if (v11)
  {
LABEL_16:
    v7 = v12;
    goto LABEL_17;
  }
  v12 = v7 + 3;
  if (v7 + 3 < v19)
  {
    v11 = *(_QWORD *)(v18 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        v7 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v7 >= v19)
          goto LABEL_23;
        v11 = *(_QWORD *)(v18 + 8 * v7);
        ++v12;
        if (v11)
          goto LABEL_17;
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x100A337F8);
    }
    goto LABEL_16;
  }
LABEL_23:
  swift_release(a2);
  if (!_swiftEmptyArrayStorage[2])
  {
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_25;
  }
}

_QWORD *sub_100A33818(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unsigned __int8 v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unsigned __int8 v23;
  uint64_t v24;
  _QWORD v25[9];
  _QWORD *v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = a2;
  v4 = 0;
  v5 = _swiftEmptyArrayStorage;
  v24 = a1 + 32;
  v20 = *(_QWORD *)(a1 + 16);
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v21 = v6;
    v22 = v5;
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        JUMPOUT(0x100A33F7CLL);
      }
      v7 = (unsigned __int8 *)(v24 + 2 * v4);
      v8 = *v7;
      ++v4;
      if (v8 == 2)
      {
        v9 = *(_QWORD *)(v3 + 24);
        if (!*(_QWORD *)(v9 + 16))
          goto LABEL_9;
        Hasher.init(_seed:)(v25, *(_QWORD *)(v9 + 40));
        swift_bridgeObjectRetain();
        String.hash(into:)(v25, 0xD000000000000013, 0x8000000100E441F0);
        v11 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
        if (((*(_QWORD *)(v9 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
          __asm { BR              X9 }
        goto LABEL_7;
      }
      if (v8 == 6)
      {
        v9 = *(_QWORD *)(v3 + 24);
        if (!*(_QWORD *)(v9 + 16))
          goto LABEL_9;
        Hasher.init(_seed:)(v25, *(_QWORD *)(v9 + 40));
        swift_bridgeObjectRetain();
        String.hash(into:)(v25, 0x646956636973756DLL, 0xEB00000000736F65);
        v12 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
        if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          __asm { BR              X9 }
LABEL_7:
        v2 = v20;
        v5 = v22;
        goto LABEL_8;
      }
      if (v8 != 4)
        break;
      v9 = *(_QWORD *)(v3 + 24);
      if (!*(_QWORD *)(v9 + 16))
        goto LABEL_9;
      Hasher.init(_seed:)(v25, *(_QWORD *)(v9 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v25, 0x6F69646172, 0xE500000000000000);
      v10 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
      if (((*(_QWORD *)(v9 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        __asm { BR              X9 }
      v3 = a2;
LABEL_8:
      v6 = v21;
      swift_bridgeObjectRelease(v9);
LABEL_9:
      if (v4 == v2)
        return v5;
    }
    v23 = v7[1];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
    v26 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1009F2498(0, v5[2] + 1, 1);
      v5 = v26;
    }
    v14 = v23;
    v16 = v5[2];
    v15 = v5[3];
    if (v16 >= v15 >> 1)
    {
      sub_1009F2498((char *)(v15 > 1), v16 + 1, 1);
      v14 = v23;
      v5 = v26;
    }
    v5[2] = v16 + 1;
    v17 = (char *)v5 + 2 * v16;
    v17[32] = v8;
    v17[33] = v14;
  }
  while (v4 != v2);
  return v5;
}

id sub_100A34000@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  void *v7;
  id result;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  char v20;
  char v21;
  id v22;
  id v23;
  NSString v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  char v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  id v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  id v57;
  _QWORD *v58;
  _QWORD *v59;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  os_unfair_lock_s *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  unsigned int v79;
  id v80;
  char v81;
  id v83;
  uint64_t v84;
  BOOL v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  __int128 v88;
  __int128 v89;
  _BYTE v90[40];
  void *v91;
  char v92;
  char *v93;
  char v94;
  uint64_t v95;
  _OWORD v96[2];
  uint64_t v97;

  v7 = (void *)objc_opt_self(MPCloudController);
  result = objc_msgSend(v7, "sharedCloudController");
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    v86 = v10;
    v87 = 0;
    v88 = 0uLL;
    *(_QWORD *)&v89 = &_swiftEmptySetSingleton;
    *((_QWORD *)&v89 + 1) = &_swiftEmptySetSingleton;
    *(_QWORD *)v90 = 0x7FFFFFFFFFFFFFFFLL;
    memset(&v90[8], 0, 32);
    v11 = (void *)objc_opt_self(MPCloudServiceStatusController);
    v12 = objc_msgSend(v11, "sharedController");
    v80 = objc_msgSend(v12, "musicSubscriptionStatus");

    v92 = 1;
    v93 = sub_100A32A24((uint64_t)_swiftEmptyArrayStorage);
    v94 = v13;
    v95 = v14;
    v15 = objc_msgSend(v11, "sharedController");
    v16 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
    v83 = objc_msgSend(v7, "sharedCloudController");
    v17 = objc_msgSend(v15, "musicSubscriptionStatus");
    v18 = v17;
    v81 = a3;
    if (v17)
      v79 = objc_msgSend(v17, "capabilities") & 1;
    else
      v79 = 0;
    v19 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    sub_100A302B0();
    v21 = v20;

    v85 = (v21 & 1) == 0;
    if (v18)
    {
      v22 = v18;
      *((_QWORD *)&v88 + 1) = objc_msgSend(v22, "statusType");
      v23 = objc_msgSend(v22, "capabilities");

      *(_QWORD *)&v88 = v23;
    }
    if (sub_100A31074((_BOOL8)v18, v15))
      sub_100AAA638((unsigned __int8 *)v96, 2u);
    if (qword_1011D1C38 != -1)
      swift_once(&qword_1011D1C38, sub_100A32170);
    if (objc_msgSend((id)qword_1011D5EC0, "isRadioAvailable"))
      sub_100AAA638((unsigned __int8 *)v96, 4u);
    if ((sub_100A31248(v16, a1) & 1) != 0)
      sub_100AAA638((unsigned __int8 *)v96, 3u);
    if (a1)
    {
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(a1, "BOOLValueForBagKey:", v24);

      if (v25)
        sub_100AAA638((unsigned __int8 *)v96, 9u);
    }
    if (v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureGroupActivityAllowed);
      v27 = v26;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v27);
      LODWORD(v27) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v28);

      if ((_DWORD)v27 != 2)
        sub_100AAA638((unsigned __int8 *)v96, 6u);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureMusicServiceAllowed);
      v30 = v29;
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      LODWORD(v30) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v31);

      if ((_DWORD)v30 != 2)
        sub_100AAA638((unsigned __int8 *)v96, 0);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureMusicVideosAllowed);
      v33 = v32;
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
      LODWORD(v33) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v34);

      if ((_DWORD)v33 != 2)
        sub_100AAA638((unsigned __int8 *)v96, 1u);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureITunesAllowed);
      v36 = v35;
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      LODWORD(v36) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v37);

      if ((_DWORD)v36 != 2)
        sub_100AAA638((unsigned __int8 *)v96, 5u);
      v91 = v18;
      v38 = v18;

      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureAccountModificationAllowed);
      v40 = v39;
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v40);
      LODWORD(v40) = objc_msgSend(v16, "effectiveBoolValueForSetting:", v41);

      if ((_DWORD)v40 != 2)
        sub_100AAA638((unsigned __int8 *)v96, 8u);
      static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureExplicitContentAllowed);
      v43 = v42;
      v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v43);
      LODWORD(v43) = objc_msgSend(v16, "isBoolSettingLockedDownByRestrictions:", v44);

      if ((_DWORD)v43)
        sub_100AAA638((unsigned __int8 *)v96, 7u);
    }
    else
    {
      v91 = v18;
      v45 = v18;

    }
    swift_bridgeObjectRetain();
    v46 = sub_100A32D54((uint64_t)&off_1010E53F0, v89);
    swift_bridgeObjectRelease(v89);
    if ((v46 & 1) != 0)
    {
      v47 = v79 ? 2 : 0;
      v92 = v47;
      if (v18)
      {
        v48 = v18;
        if (objc_msgSend(v48, "statusType") == (id)3)
        {
          if (qword_1011D1C40 != -1)
            swift_once(&qword_1011D1C40, sub_100A322A4);
          v49 = type metadata accessor for Logger(0);
          v50 = sub_100048B14(v49, (uint64_t)qword_1011D5EC8);
          v51 = Logger.logObject.getter(v50);
          v52 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v53 = 0;
            _os_log_impl((void *)&_mh_execute_header, v51, v52, "Unexpectedly found a Voice subscriber! 😡", v53, 2u);
            swift_slowDealloc(v53, -1, -1);
          }

        }
      }
    }
    if (a1 && (v88 & 1) != 0 && (sub_100A3145C() & 1) != 0 && (sub_100A31688() & 1) != 0)
      sub_100AAA638((unsigned __int8 *)v96, 0xAu);
    if (v83)
    {
      v54 = v83;
      if ((objc_msgSend(v54, "shouldProhibitMusicActionForCurrentNetworkConditions") & 1) != 0)
        v55 = 0;
      else
        v55 = objc_msgSend(v54, "hasProperNetworkConditionsToShowCloudMedia");

    }
    else
    {
      v55 = 0;
    }
    v86 = v55;
    v56 = objc_msgSend(v15, "isCloudLibraryEnabled");
    v87 = v56;
    v57 = a1;
    sub_100A33158(a1, (uint64_t *)v96);
    swift_bridgeObjectRelease(*(_QWORD *)&v90[16]);
    swift_bridgeObjectRelease(*(_QWORD *)&v90[32]);
    *(_OWORD *)v90 = v96[0];
    *(_OWORD *)&v90[16] = v96[1];
    *(_QWORD *)&v90[32] = v97;
    if ((v81 & 1) != 0)
    {
      sub_100A318B0(2);
      v59 = v58;
    }
    else
    {
      v60 = *(os_unfair_lock_s **)(a2 + 16);
      v61 = v60 + 4;
      v62 = v60 + 11;
      os_unfair_lock_lock(v60 + 11);
      sub_100B6AABC(v61, a1, a2, &v84);
      os_unfair_lock_unlock(v62);
      v63 = v84;
      if (v84)
      {
        sub_100A33340(v92, v84);
        v65 = v64;
        swift_bridgeObjectRelease(v63);
      }
      else
      {
        sub_100A318B0(v92);
        v65 = v66;
      }
      v59 = sub_100A33818(v65, (uint64_t)&v85);
      swift_bridgeObjectRelease(v65);
      v55 = v86;
      v56 = v87;
    }
    v67 = sub_100A32A24((uint64_t)v59);
    v69 = v68;
    v71 = v70;

    swift_release(a2);
    swift_bridgeObjectRelease(v93);
    result = (id)swift_bridgeObjectRelease(v95);
    v72 = *(_QWORD *)&v90[32];
    v73 = v91;
    v74 = v92;
    v76 = v88;
    v75 = v89;
    v77 = *(_OWORD *)v90;
    v78 = *(_OWORD *)&v90[16];
    *(_BYTE *)a4 = v85;
    *(_BYTE *)(a4 + 1) = v55;
    *(_BYTE *)(a4 + 2) = v56;
    *(_OWORD *)(a4 + 8) = v76;
    *(_OWORD *)(a4 + 24) = v75;
    *(_OWORD *)(a4 + 40) = v77;
    *(_OWORD *)(a4 + 56) = v78;
    *(_QWORD *)(a4 + 72) = v72;
    *(_QWORD *)(a4 + 80) = v73;
    *(_BYTE *)(a4 + 88) = v74;
    *(_QWORD *)(a4 + 96) = v67;
    *(_BYTE *)(a4 + 104) = v69;
    *(_QWORD *)(a4 + 112) = v71;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100A34854(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  _QWORD *v8;
  _UNKNOWN **v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _UNKNOWN **v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  id v38;
  uint64_t v39;

  v3 = a1;
  v34 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v35 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = &unk_1011D1000;
  v33 = a2;
  v9 = MPLibraryAddStatusObserver_ptr;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v12 = (v6 - 1) & v6;
      v37 = v7;
      v13 = v11 | (v7 << 6);
      goto LABEL_24;
    }
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v35)
      goto LABEL_28;
    v15 = *(_QWORD *)(v34 + 8 * v14);
    v16 = v7 + 1;
    if (!v15)
    {
      v16 = v7 + 2;
      if (v7 + 2 >= v35)
        goto LABEL_28;
      v15 = *(_QWORD *)(v34 + 8 * v16);
      if (!v15)
      {
        v16 = v7 + 3;
        if (v7 + 3 >= v35)
          goto LABEL_28;
        v15 = *(_QWORD *)(v34 + 8 * v16);
        if (!v15)
        {
          v16 = v7 + 4;
          if (v7 + 4 >= v35)
            goto LABEL_28;
          v15 = *(_QWORD *)(v34 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v12 = (v15 - 1) & v15;
    v37 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v36 = v12;
    v18 = v8[392];
    v19 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (v18 != -1)
      swift_once(&qword_1011D1C40, sub_100A322A4);
    v20 = type metadata accessor for Logger(0);
    sub_100048B14(v20, (uint64_t)qword_1011D5EC8);
    v21 = v19;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v39 = v25;
      *(_DWORD *)v24 = 136446210;
      v38 = v21;
      _s3__C4NameVMa_1(0);
      v26 = v3;
      v28 = v27;
      v29 = v9;
      v30 = v21;
      v31 = (char *)String.init<A>(describing:)(&v38, v28);
      *(_QWORD *)(v24 + 4) = sub_10099627C(v31, v32, &v39);

      v9 = v29;
      v3 = v26;
      a2 = v33;
      v8 = (_QWORD *)&unk_1011D1000;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Notifying changes for '%{public}s'", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

    }
    v6 = v36;
    v7 = v37;
    v10 = objc_msgSend((id)objc_opt_self(v9[162]), "defaultCenter");
    objc_msgSend(v10, "postNotificationName:object:", v21, a2);

  }
  v17 = v7 + 5;
  if (v7 + 5 >= v35)
  {
LABEL_28:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v34 + 8 * v17);
  if (v15)
  {
    v16 = v7 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v35)
      goto LABEL_28;
    v15 = *(_QWORD *)(v34 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
}

unint64_t _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6B80, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xB)
    return 11;
  else
    return v3;
}

void sub_100A34C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate) & 1) == 0)
  {
    **(_BYTE **)(v0 + 24) = 1;
    *(_BYTE *)(v1 + v2) = 1;
  }
}

uint64_t sub_100A34C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1011D5F0C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  v3[2] = v2;
  return swift_task_switch(sub_100A2EA6C, 0, 0);
}

double sub_100A34CA0(uint64_t a1)
{
  uint64_t v1;

  return sub_100A30788(a1, v1);
}

unint64_t sub_100A34CAC()
{
  unint64_t result;

  result = qword_1011D5F50;
  if (!qword_1011D5F50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.Service, &type metadata for ApplicationCapabilities.Service);
    atomic_store(result, (unint64_t *)&qword_1011D5F50);
  }
  return result;
}

unint64_t sub_100A34CF4()
{
  unint64_t result;

  result = qword_1011D5F58;
  if (!qword_1011D5F58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.SubscriptionState, &type metadata for ApplicationCapabilities.SubscriptionState);
    atomic_store(result, (unint64_t *)&qword_1011D5F58);
  }
  return result;
}

uint64_t destroy for ApplicationCapabilities(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));
}

uint64_t initializeWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a1 + 80);
  v9 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  v6 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities()
{
  return &type metadata for ApplicationCapabilities;
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Service(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_100A35134 + 4 * byte_100EDE2C8[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_100A35168 + 4 * byte_100EDE2C3[v4]))();
}

uint64_t sub_100A35168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A35170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A35178);
  return result;
}

uint64_t sub_100A35184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A3518CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_100A35190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A35198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Service()
{
  return &type metadata for ApplicationCapabilities.Service;
}

uint64_t destroy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ApplicationCapabilities.RatingWarning(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[3] = a2[3];
  v5 = a2[4];
  v6 = a1[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.RatingWarning()
{
  return &type metadata for ApplicationCapabilities.RatingWarning;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.SubscriptionState()
{
  return &type metadata for ApplicationCapabilities.SubscriptionState;
}

uint64_t destroy for ApplicationCapabilities.Tabs(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV4TabsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ApplicationCapabilities.Tabs(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a2[2];
  v6 = a1[2];
  a1[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t *assignWithTake for ApplicationCapabilities.Tabs(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs()
{
  return &type metadata for ApplicationCapabilities.Tabs;
}

uint64_t sub_100A354F0()
{
  return type metadata accessor for ApplicationCapabilities.Controller(0);
}

uint64_t type metadata accessor for ApplicationCapabilities.Controller(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D5F98;
  if (!qword_1011D5F98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ApplicationCapabilities.Controller);
  return result;
}

void sub_100A35534(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100EDE600;
  sub_100A355EC();
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100EDE600;
    v4[3] = &unk_100EDE618;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = &unk_100EDE630;
    v4[6] = &unk_100EDE648;
    v4[7] = &unk_100EDE630;
    v4[8] = &unk_100EDE630;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_100A355EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011D5FA8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for ApplicationCapabilities);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011D5FA8);
  }
}

uint64_t type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver()
{
  return objc_opt_self(_TtCCV9MusicCore23ApplicationCapabilities10ControllerP33_3C92A9FA31E0FE3D8D536795352BB0D115ProfileObserver);
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.NotificationNames()
{
  return &type metadata for ApplicationCapabilities.NotificationNames;
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Tabs.Configuration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A356BC + 4 * byte_100EDE2D2[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_100A356F0 + 4 * byte_100EDE2CD[v4]))();
}

uint64_t sub_100A356F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_100A356F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x100A35700);
  return result;
}

uint64_t sub_100A3570C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x100A35714);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_100A35718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_100A35720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs.Configuration()
{
  return &type metadata for ApplicationCapabilities.Tabs.Configuration;
}

_QWORD *sub_100A3573C()
{
  uint64_t v0;

  return sub_100A30010(v0);
}

uint64_t sub_100A35754(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100A357D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_100A35840(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v8 = v1[20];
  v9 = (_QWORD *)swift_task_alloc(dword_1011D610C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10005AEE4;
  return sub_100A2FEC4(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_100A358C4()
{
  unint64_t result;

  result = qword_1011D6118;
  if (!qword_1011D6118)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NSUserDefaults.MobileiPod, &type metadata for NSUserDefaults.MobileiPod);
    atomic_store(result, (unint64_t *)&qword_1011D6118);
  }
  return result;
}

unint64_t sub_100A35908()
{
  unint64_t result;

  result = qword_1011D6130;
  if (!qword_1011D6130)
  {
    result = swift_getWitnessTable(&unk_100EDE724, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_1011D6130);
  }
  return result;
}

uint64_t sub_100A3594C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A35970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;

  v1 = sub_100007E8C(&qword_1011D6168);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = swift_release();
  (*(void (**)(unint64_t, uint64_t, __n128))(v2 + 8))(v0 + v3, v1, v5);
  return swift_deallocObject(v0, v4);
}

double sub_100A359E8(void *a1)
{
  uint64_t v1;

  sub_100007E8C(&qword_1011D6168);
  return sub_100A30A78(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100A35A2C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_100A35A60(uint64_t a1)
{
  uint64_t v1;

  return sub_100A3CCAC(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100A35A6C()
{
  uint64_t v0;

  return sub_100A3CEBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

_QWORD *sub_100A35A84()
{
  uint64_t v0;

  return sub_100A30BD8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_100A35AA0()
{
  char *v0;

  sub_100A2EAC8(v0);
}

uint64_t sub_100A35ABC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011D617C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100A2F09C(a1, v4, v5, v6);
}

double sub_100A35B28(uint64_t a1)
{
  uint64_t v1;

  return sub_100A2DB1C(a1, v1);
}

uint64_t sub_100A35B30(char a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;

  return sub_100A2E390(a1, a2, a3, v3);
}

uint64_t sub_100A35B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A35B48(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A35B50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100A35B74()
{
  unint64_t result;

  result = qword_1011D61A0;
  if (!qword_1011D61A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities.Service, &type metadata for ApplicationCapabilities.Service);
    atomic_store(result, (unint64_t *)&qword_1011D61A0);
  }
  return result;
}

double sub_100A35BB8()
{
  uint64_t v0;

  return sub_100A30174(v0);
}

double sub_100A35BC0()
{
  uint64_t v0;

  return sub_100A303B8(v0, (void (*)(void))sub_100A3573C);
}

uint64_t sub_100A35BE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100A35C0C(void *a1)
{
  uint64_t v1;

  sub_100A3043C(a1, v1);
}

id sub_100A35C14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = v2;

  return v2;
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV17SubscriptionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100A35C9C + 4 * byte_100EDE2DC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100A35CD0 + 4 * byte_100EDE2D7[v4]))();
}

uint64_t sub_100A35CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A35CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A35CE0);
  return result;
}

uint64_t sub_100A35CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A35CF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100A35CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A35D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_100A35D20()
{
  unint64_t result;

  result = qword_1011D61D0;
  if (!qword_1011D61D0)
  {
    result = swift_getWitnessTable(&unk_100EDE6FC, &_s3KeyON);
    atomic_store(result, (unint64_t *)&qword_1011D61D0);
  }
  return result;
}

unint64_t sub_100A35D64(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 4)
    return 4;
  else
    return v5;
}

void *BackgroundFetchManager.httpHeader.unsafeMutableAddressor()
{
  return &static BackgroundFetchManager.httpHeader;
}

unint64_t static BackgroundFetchManager.httpHeader.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_100A35DD4()
{
  uint64_t Manager;
  uint64_t result;

  Manager = type metadata accessor for BackgroundFetchManager();
  result = swift_initStaticObject(Manager, &unk_1011D2598);
  static BackgroundFetchManager.shared = result;
  return result;
}

uint64_t *BackgroundFetchManager.shared.unsafeMutableAddressor()
{
  if (qword_1011D1CB8 != -1)
    swift_once(&qword_1011D1CB8, sub_100A35DD4);
  return &static BackgroundFetchManager.shared;
}

uint64_t static BackgroundFetchManager.shared.getter()
{
  uint64_t v0;

  return swift_initStaticObject(v0, &unk_1011D2598);
}

void BackgroundFetchManager.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];
  __int128 v14;
  __int128 v15;

  swift_bridgeObjectRetain();
  v6 = sub_100A3665C();
  if (!*(_QWORD *)(v6 + 16) || (v7 = sub_10079C2C4(a1, a2), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v9 + 16) || (v10 = sub_10079C2C4(7107189, 0xE300000000000000), (v11 & 1) == 0))
  {
    v14 = 0u;
    v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10004FA40(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_10:
    sub_10004FF60((uint64_t)&v14, &qword_1011D7160);
    goto LABEL_11;
  }
  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    URL.init(string:)(v13[0], v13[1]);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_11:
  v12 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
}

void (*BackgroundFetchManager.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  size_t v6;
  void *v7;

  *a1 = a2;
  a1[1] = a3;
  v6 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64);
  a1[2] = (uint64_t)malloc(v6);
  v7 = malloc(v6);
  a1[3] = (uint64_t)v7;
  BackgroundFetchManager.subscript.getter(a2, a3, (uint64_t)v7);
  return sub_100A36024;
}

void sub_100A36024(uint64_t *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v5 = *a1;
  v4 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_10098B074(a1[3], (uint64_t)v2);
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v2, v5, v4);
    sub_10004FF60((uint64_t)v3, &qword_1011D2AE0);
  }
  else
  {
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v3, v5, v4);
  }
  free(v3);
  free(v2);
}

Swift::Void __swiftcall BackgroundFetchManager.removeAll()()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "removeObjectForKey:", v1);

}

void sub_100A36130(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), int a4, int a5, int a6, dispatch_group_t group)
{
  if (a3)
    a1 = a3(a1, a2);
  if (a2)
  {
    __chkstk_darwin(a1);
    swift_errorRetain(a2);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A377B8);
    swift_errorRelease(a2);
  }
  dispatch_group_leave(group);
}

uint64_t sub_100A361EC(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _BYTE v8[24];

  swift_beginAccess(a1, v8, 1, 0);
  v4 = (_QWORD *)*a1;
  swift_errorRetain(a2);
  result = swift_isUniquelyReferenced_nonNull_native(v4);
  *a1 = (uint64_t)v4;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1009B9DFC(0, v4[2] + 1, 1, v4);
    v4 = (_QWORD *)result;
    *a1 = result;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    result = (uint64_t)sub_1009B9DFC((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    v4 = (_QWORD *)result;
    *a1 = result;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  return result;
}

double sub_100A362BC(uint64_t a1, uint64_t a2, void (*a3)())
{
  double result;

  sub_100007E8C(&qword_1011D6288);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A37760);
  a3();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100A36338()
{
  void *v0;
  char v1;
  uint64_t v2;
  void *v3;
  char v4;

  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  v0 = v3;
  if (v3 && (sub_100A36414(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    v1 = 0;
    v2 = (uint64_t)v3;
  }
  else
  {
    v1 = 1;
    v2 = 0x4122750000000000;
  }
  qword_1011D61E0 = v2;
  byte_1011D61E8 = v1;
}

uint64_t sub_100A36414@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 *v15;
  char v16;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicCommon);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "valueForBagKey:", v4, swift_bridgeObjectRelease().n128_f64[0]);

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)(&v20, v5);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_100A286FC((uint64_t)&v20, (uint64_t)&v18);
  if (!*((_QWORD *)&v19 + 1))
    goto LABEL_15;
  v6 = sub_100007E8C((uint64_t *)&unk_1011D8950);
  result = swift_dynamicCast(&v20, &v18, (char *)&type metadata for Any + 8, v6, 6);
  if ((result & 1) == 0)
  {
LABEL_17:
    *(_QWORD *)a2 = 0;
    v16 = 1;
    goto LABEL_18;
  }
  v8 = v20;
  if (*(_QWORD *)(v20 + 16) && (v9 = sub_10079C2C4(0xD00000000000001ELL, 0x8000000100E4D040), (v10 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
  {
LABEL_15:
    v15 = &v18;
LABEL_16:
    result = sub_10004FF60((uint64_t)v15, &qword_1011D7160);
    goto LABEL_17;
  }
  v11 = sub_100007E8C((uint64_t *)&unk_1011D6120);
  result = swift_dynamicCast(&v20, &v18, (char *)&type metadata for Any + 8, v11, 6);
  if ((result & 1) == 0)
    goto LABEL_17;
  v12 = v20;
  v17[0] = 0xD000000000000021;
  v17[1] = 0x8000000100E4D060;
  AnyHashable.init<A>(_:)(v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_10079C294((uint64_t)&v18), (v14 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10004FF2C((uint64_t)&v18);
  if (!*((_QWORD *)&v21 + 1))
  {
    v15 = &v20;
    goto LABEL_16;
  }
  result = swift_dynamicCast(a2, &v20, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
    *(_QWORD *)a2 = 0;
  v16 = result ^ 1;
LABEL_18:
  *(_BYTE *)(a2 + 8) = v16;
  return result;
}

uint64_t BackgroundFetchManager.deinit()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_100A3665C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dictionaryForKey:", v1);

  if (v2)
  {
    v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    sub_100B698EC(v3);
    v5 = v4;

    swift_bridgeObjectRelease();
    if (v5)
      return v5;
  }
  else
  {

  }
  v7 = sub_100A1393C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  return v7;
}

void _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  Class isa;
  NSString v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  id v23;
  Class v24;
  NSString v25;
  _BYTE v27[128];
  unint64_t v28;

  v6 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10098B074(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v8, &qword_1011D2AE0);
    v28 = sub_100A3665C();
    sub_100AF84B0(a2, a3);
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    sub_100007E8C((uint64_t *)&unk_1011D8950);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setObject:forKey:", isa, v15);

    sub_10004FF60(a1, &qword_1011D2AE0);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v16 = sub_100007E8C(&qword_1011DBD80);
    inited = swift_initStackObject(v16, v27);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 32) = 7107189;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    *(_QWORD *)(inited + 48) = URL.absoluteString.getter(inited);
    *(_QWORD *)(inited + 56) = v18;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 80) = 1702125924;
    *(_QWORD *)(inited + 88) = 0xE400000000000000;
    *(_QWORD *)(inited + 120) = type metadata accessor for Date(0);
    v19 = sub_100049F68((_QWORD *)(inited + 96));
    Date.init()(v19);
    v20 = sub_100A13450(inited);
    v21 = sub_100A3665C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    v28 = v21;
    sub_100A146AC(v20, a2, a3, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    sub_100007E8C((uint64_t *)&unk_1011D8950);
    v24 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v23, "setObject:forKey:", v24, v25);

    sub_10004FF60(a1, &qword_1011D2AE0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  dispatch_group_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  __n128 v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void (**v49)(dispatch_group_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  double v54;
  char *v55;
  Swift::String v56;
  Swift::String v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  Class isa;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  NSObject *v72;
  double v73;
  void *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  __n128 v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  dispatch_group_t v86;
  _QWORD *v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  id v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  dispatch_group_t v113;
  char *v114;
  dispatch_group_t v115;
  uint64_t v116;
  void (**v117)(dispatch_group_t, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  int64_t v122;
  __int128 aBlock;
  __int128 v124;
  void *v125;
  _QWORD *v126;
  _QWORD v127[2];

  v98 = a5;
  v97 = a4;
  v94 = a3;
  v93 = a2;
  v101 = a1;
  v105 = type metadata accessor for DispatchWorkItemFlags(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for DispatchQoS(0);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v99 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for URLRequest(0);
  v107 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v108 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v87 - v9;
  v11 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v11);
  v13 = (dispatch_group_t)((char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for Date(0);
  v117 = *(void (***)(dispatch_group_t, uint64_t, uint64_t, uint64_t))(v14 - 8);
  v118 = v14;
  __chkstk_darwin(v14);
  v110 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v87 - v17;
  v19 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v19);
  v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v96 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v119 = (char *)&v87 - v25;
  v113 = dispatch_group_create();
  v26 = type metadata accessor for UnfairLock();
  swift_allocObject(v26, 24, 7);
  v111 = UnfairLock.init()();
  v112 = swift_allocObject(&unk_1010F1768, 24, 7);
  *(_QWORD *)(v112 + 16) = _swiftEmptyArrayStorage;
  if (qword_1011D1CC0 != -1)
LABEL_45:
    swift_once(&qword_1011D1CC0, sub_100A36338);
  v27 = *(double *)&qword_1011D61E0;
  v28 = sub_100A3665C();
  v29 = v28;
  v30 = 0;
  v31 = v28 + 64;
  v32 = 1 << *(_BYTE *)(v28 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(v28 + 64);
  v122 = (unint64_t)(v32 + 63) >> 6;
  v121 = (char *)&type metadata for Any + 8;
  v95 = (void *)0x8000000100E4CFD0;
  v115 = v13;
  v114 = v18;
  v106 = v21;
  v116 = v22;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          do
          {
            if (v34)
            {
              v35 = __clz(__rbit64(v34));
              v34 &= v34 - 1;
              v36 = v35 | (v30 << 6);
            }
            else
            {
              v37 = v30 + 1;
              if (__OFADD__(v30, 1))
              {
                __break(1u);
LABEL_44:
                __break(1u);
                goto LABEL_45;
              }
              if (v37 >= v122)
                goto LABEL_42;
              v38 = *(_QWORD *)(v31 + 8 * v37);
              ++v30;
              if (!v38)
              {
                v30 = v37 + 1;
                if (v37 + 1 >= v122)
                  goto LABEL_42;
                v38 = *(_QWORD *)(v31 + 8 * v30);
                if (!v38)
                {
                  v30 = v37 + 2;
                  if (v37 + 2 >= v122)
                    goto LABEL_42;
                  v38 = *(_QWORD *)(v31 + 8 * v30);
                  if (!v38)
                  {
                    v30 = v37 + 3;
                    if (v37 + 3 >= v122)
                      goto LABEL_42;
                    v38 = *(_QWORD *)(v31 + 8 * v30);
                    if (!v38)
                    {
                      v39 = v37 + 4;
                      if (v39 >= v122)
                      {
LABEL_42:
                        swift_release();
                        v75 = (_QWORD *)swift_allocObject(&unk_1010F1808, 48, 7);
                        v76 = v112;
                        v75[2] = v111;
                        v75[3] = v76;
                        v77 = v98;
                        v75[4] = v97;
                        v75[5] = v77;
                        v125 = sub_100A3770C;
                        v126 = v75;
                        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
                        *((_QWORD *)&aBlock + 1) = 1107296256;
                        *(_QWORD *)&v124 = sub_1001DBD98;
                        *((_QWORD *)&v124 + 1) = &unk_1010F1820;
                        v78 = _Block_copy(&aBlock);
                        swift_retain();
                        swift_retain();
                        v79 = swift_retain();
                        v80 = v99;
                        static DispatchQoS.unspecified.getter(v79);
                        v127[0] = _swiftEmptyArrayStorage;
                        v81 = sub_100A37718();
                        v82 = sub_100007E8C(&qword_1011D5E08);
                        v83 = sub_100A29EAC();
                        v84 = v103;
                        v85 = v105;
                        dispatch thunk of SetAlgebra.init<A>(_:)(v127, v82, v83, v105, v81);
                        v86 = v113;
                        OS_dispatch_group.notify(qos:flags:queue:execute:)(v80, v84, v101, v78);
                        _Block_release(v78);
                        swift_release();

                        (*(void (**)(char *, uint64_t))(v104 + 8))(v84, v85);
                        (*(void (**)(char *, uint64_t))(v100 + 8))(v80, v102);
                        swift_release();
                        swift_release();
                        return;
                      }
                      v38 = *(_QWORD *)(v31 + 8 * v39);
                      if (!v38)
                      {
                        while (1)
                        {
                          v30 = v39 + 1;
                          if (__OFADD__(v39, 1))
                            goto LABEL_44;
                          if (v30 >= v122)
                            goto LABEL_42;
                          v38 = *(_QWORD *)(v31 + 8 * v30);
                          ++v39;
                          if (v38)
                            goto LABEL_23;
                        }
                      }
                      v30 = v39;
                    }
                  }
                }
              }
LABEL_23:
              v34 = (v38 - 1) & v38;
              v36 = __clz(__rbit64(v38)) + (v30 << 6);
            }
            v40 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v36);
          }
          while (!*(_QWORD *)(v40 + 16));
          swift_bridgeObjectRetain();
          v41 = sub_10079C2C4(7107189, 0xE300000000000000);
          if ((v42 & 1) != 0)
          {
            sub_10004FA40(*(_QWORD *)(v40 + 56) + 32 * v41, (uint64_t)&aBlock);
            if ((swift_dynamicCast(v127, &aBlock, v121, &type metadata for String, 6) & 1) != 0)
              break;
          }
          swift_bridgeObjectRelease();
        }
        URL.init(string:)(v127[0], v127[1]);
        v43 = swift_bridgeObjectRelease();
        v18 = (char *)v120;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v22 + 48))(v21, 1, v120, v43) != 1)
          break;
        swift_bridgeObjectRelease();
        sub_10004FF60((uint64_t)v21, &qword_1011D2AE0);
      }
      (*(void (**)(char *, char *, char *))(v22 + 32))(v119, v21, v18);
      if (*(_QWORD *)(v40 + 16) && (v44 = sub_10079C2C4(1702125924, 0xE400000000000000), (v45 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v40 + 56) + 32 * v44, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v124 = 0u;
      }
      v13 = (dispatch_group_t)v119;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v124 + 1))
        break;
      sub_10004FF60((uint64_t)&aBlock, &qword_1011D7160);
      v46 = (uint64_t)v115;
      v117[7](v115, 1, 1, v118);
LABEL_39:
      v22 = v116;
      (*(void (**)(dispatch_group_t, uint64_t))(v116 + 8))(v13, v120);
      sub_10004FF60(v46, &qword_1011D5D00);
    }
    v46 = (uint64_t)v115;
    v47 = v118;
    v48 = swift_dynamicCast(v115, &aBlock, (char *)&type metadata for Any + 8, v118, 6);
    v18 = (char *)v117;
    v117[7]((dispatch_group_t)v46, v48 ^ 1u, 1, v47);
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v18 + 6))(v46, 1, v47) == 1)
      goto LABEL_39;
    v49 = v117;
    v50 = v118;
    v51 = v114;
    v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v117[4])(v114, v46, v118);
    v53 = v110;
    Date.init()(v52);
    v54 = Date.timeIntervalSince(_:)(v51);
    v18 = (char *)v49[1];
    ((void (*)(char *, uint64_t))v18)(v53, v50);
    if (v54 < v27)
      break;
    ((void (*)(char *, uint64_t))v18)(v51, v50);
    v22 = v116;
    (*(void (**)(dispatch_group_t, uint64_t))(v116 + 8))(v13, v120);
LABEL_41:
    v21 = v106;
  }
  v92 = v18;
  v55 = v96;
  (*(void (**)(char *, dispatch_group_t, uint64_t))(v116 + 16))(v96, v13, v120);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v55, 0, 60.0);
  v56._countAndFlagsBits = 1702195828;
  v56._object = (void *)0xE400000000000000;
  v57._countAndFlagsBits = 0xD00000000000001ALL;
  v57._object = v95;
  URLRequest.addValue(_:forHTTPHeaderField:)(v56, v57);
  v58 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v91 = v10;
  v59 = v109;
  v58(v108, v10, v109);
  v60 = objc_allocWithZone((Class)ICMusicKitRequestContext);
  v125 = sub_100A6D964;
  v126 = 0;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v124 = sub_10004BF88;
  *((_QWORD *)&v124 + 1) = &unk_1010F1780;
  v61 = _Block_copy(&aBlock);
  v62 = objc_msgSend(v60, "initWithBlock:", v61);
  v63 = v59;
  v64 = v62;
  _Block_release(v61);
  swift_release();
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) == 0)
  {
    v65 = objc_allocWithZone((Class)ICMusicKitURLRequest);
    isa = URLRequest._bridgeToObjectiveC()().super.isa;
    v90 = objc_msgSend(v65, "initWithURLRequest:requestContext:", isa, v64);

    v89 = *(void (**)(char *, uint64_t))(v107 + 8);
    v89(v108, v63);
    v13 = v113;
    dispatch_group_enter(v113);
    v88 = (char *)objc_msgSend((id)objc_opt_self(ICURLSessionManager), "highPrioritySession");
    v67 = (_QWORD *)swift_allocObject(&unk_1010F17B8, 56, 7);
    v68 = v93;
    v69 = v94;
    v67[2] = v93;
    v67[3] = v69;
    v70 = v112;
    v67[4] = v111;
    v67[5] = v70;
    v67[6] = v13;
    v125 = sub_100A376C8;
    v126 = v67;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v124 = sub_10004E2F4;
    *((_QWORD *)&v124 + 1) = &unk_1010F17D0;
    v71 = _Block_copy(&aBlock);
    v87 = v126;
    sub_100048AAC(v68, v69);
    v22 = v116;
    swift_retain();
    swift_retain();
    v72 = v13;
    *(_QWORD *)&v73 = swift_release().n128_u64[0];
    v18 = v88;
    v74 = v90;
    objc_msgSend(v88, "enqueueDataRequest:withCompletionHandler:", v90, v71, v73);
    _Block_release(v71);

    v10 = v91;
    v89(v91, v109);
    ((void (*)(char *, uint64_t))v92)(v114, v118);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v119, v120);
    goto LABEL_41;
  }
  __break(1u);
}

uint64_t type metadata accessor for BackgroundFetchManager()
{
  return objc_opt_self(_TtC9MusicCore22BackgroundFetchManager);
}

uint64_t sub_100A37648()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A3766C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A3767C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A37684()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_100A376C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100A36130(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(dispatch_group_t *)(v2 + 48));
}

uint64_t sub_100A376D8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_100A3770C()
{
  uint64_t v0;

  return sub_100A362BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)())(v0 + 32));
}

unint64_t sub_100A37718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7780;
  if (!qword_1011D7780)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1011D7780);
  }
  return result;
}

uint64_t sub_100A37760@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100A377B8()
{
  uint64_t v0;

  return sub_100A361EC(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100A377E0(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100A37840()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 16, 0x8000000100E4A2D0);
  swift_bridgeObjectRelease(0x8000000100E4A2D0);
  return Hasher._finalize()();
}

Swift::Int sub_100A378B0(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if ((a1 & 1) != 0)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000019;
  if ((a1 & 1) != 0)
    v3 = 0x8000000100E4A370;
  else
    v3 = 0x8000000100E4A350;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_100A37934(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100A37990()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 11, 0x8000000100E4A3C0);
  swift_bridgeObjectRelease(0x8000000100E4A3C0);
  return Hasher._finalize()();
}

void sub_100A37A00(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100A37A50()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  return Hasher._finalize()();
}

Swift::Int sub_100A37AE4(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if ((a1 & 1) != 0)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  if ((a1 & 1) != 0)
    v3 = 0x8000000100E4A5F0;
  else
    v3 = 0x8000000100E4A5D0;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_100A37B68(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_100A37BBC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6E776F6E6B6E75, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_100A37C34(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if ((a1 & 1) != 0)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000019;
  if ((a1 & 1) != 0)
    v3 = 0x8000000100E4A770;
  else
    v3 = 0x8000000100E4A750;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_100A37CB8(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100A37D04(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 + 16, 0x8000000100E4A2D0);
  return swift_bridgeObjectRelease(0x8000000100E4A2D0);
}

void sub_100A37D5C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100A37DA4(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, v1 + 11, 0x8000000100E4A3C0);
  return swift_bridgeObjectRelease(0x8000000100E4A3C0);
}

void sub_100A37DFC(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100A37E48()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  return Hasher._finalize()();
}

Swift::Int sub_100A37EDC(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if ((a2 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v4 = 0x8000000100E4A770;
  else
    v4 = 0x8000000100E4A750;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_100A37F5C(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100A37FAC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6E776F6E6B6E75, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_100A38024(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100A38070()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x756F795F726F66, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

Swift::Int sub_100A38118(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if ((a2 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v4 = 0x8000000100E4A370;
  else
    v4 = 0x8000000100E4A350;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_100A38198(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100A381F0()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 11, 0x8000000100E4A3C0);
  swift_bridgeObjectRelease(0x8000000100E4A3C0);
  return Hasher._finalize()();
}

void sub_100A38260(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_100A382BC()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, v0 + 16, 0x8000000100E4A2D0);
  swift_bridgeObjectRelease(0x8000000100E4A2D0);
  return Hasher._finalize()();
}

Swift::Int sub_100A3832C(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if ((a2 & 1) != 0)
    v3 = 0xD00000000000001CLL;
  else
    v3 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v4 = 0x8000000100E4A5F0;
  else
    v4 = 0x8000000100E4A5D0;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

id sub_100A383AC()
{
  uint64_t refreshed;
  _QWORD *v1;
  id result;

  refreshed = type metadata accessor for BackgroundRefreshController();
  v1 = (_QWORD *)swift_allocObject(refreshed, 40, 7);
  v1[2] = 0;
  v1[3] = 0;
  result = objc_msgSend(objc_allocWithZone((Class)ICCloudClient), "init");
  v1[4] = result;
  static BackgroundRefreshController.shared = (uint64_t)v1;
  return result;
}

uint64_t *BackgroundRefreshController.shared.unsafeMutableAddressor()
{
  if (qword_1011D1CC8 != -1)
    swift_once(&qword_1011D1CC8, sub_100A383AC);
  return &static BackgroundRefreshController.shared;
}

double static BackgroundRefreshController.shared.getter()
{
  double result;

  if (qword_1011D1CC8 != -1)
    swift_once(&qword_1011D1CC8, sub_100A383AC);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t (*BackgroundRefreshController.performanceMetricsRecorder.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j__swift_endAccess;
}

Swift::Void __swiftcall BackgroundRefreshController.registerAllTasks()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  id v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSString v13;
  _QWORD aBlock[6];

  v0 = static os_log_type_t.default.getter();
  v1 = sub_100007E8C(&qword_1011D4E10);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v2 + 56) = &type metadata for String;
  v3 = sub_1009FD048();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v2 + 40) = 0x8000000100E4D0C0;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v0, &_mh_execute_header, v4, "BackgroundRefreshController: REGISTER TASK: %@", 46, 2, v2);
  swift_bridgeObjectRelease();

  v5 = (void *)objc_opt_self(BGTaskScheduler);
  v6 = objc_msgSend(v5, "sharedScheduler");
  v7 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_100A38734;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  aBlock[3] = &unk_1010F1848;
  v8 = _Block_copy(aBlock);
  objc_msgSend(v6, "registerForTaskWithIdentifier:usingQueue:launchHandler:", v7, 0, v8);
  _Block_release(v8);

  v9 = static os_log_type_t.default.getter();
  v10 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 64) = v3;
  *(_QWORD *)(v10 + 32) = 0xD000000000000041;
  *(_QWORD *)(v10 + 40) = 0x8000000100E4D150;
  v11 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v11, "BackgroundRefreshController: CANCEL DEPRECATED TASK: %@", 55, 2, v10);
  swift_bridgeObjectRelease();

  v12 = objc_msgSend(v5, "sharedScheduler");
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "cancelTaskRequestWithIdentifier:", v13);

}

double sub_100A38734(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  if (qword_1011D1CC8 != -1)
    swift_once(&qword_1011D1CC8, sub_100A383AC);
  v2 = objc_opt_self(BGAppRefreshTask);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v2, 0, 0, 0);
  return sub_100A387A8(v3);
}

double sub_100A387A8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  double result;

  v3 = *v1;
  v4 = static os_log_type_t.default.getter(a1);
  v5 = sub_100007E8C(&qword_1011D4E10);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  *(_QWORD *)(v6 + 64) = sub_1009FD048();
  *(_QWORD *)(v6 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v6 + 40) = 0x8000000100E4D0C0;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v7 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v7, "BackgroundRefreshController: EXECUTING REFRESH SUBTASKS: %@", 59, 2, v6);
  swift_bridgeObjectRelease();

  v8 = swift_allocObject(&unk_1010F19E0, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v3;
  v9 = a1;
  sub_100A39A98((uint64_t)sub_100A3BC94, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100A388CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A388DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

Swift::Void __swiftcall BackgroundRefreshController.scheduleAllTasks()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  double v41;
  char v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  char v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71;
  id v72;
  NSString v73;
  id v74;
  id v75;
  Class isa;
  uint64_t v77;
  void *v78;
  id v79;
  __n128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t *v102;
  id v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  _QWORD *v110;
  _QWORD aBlock[3];
  void *v112;
  void (*v113)();
  uint64_t v114;

  v91 = *v0;
  v97 = type metadata accessor for DispatchWorkItemFlags(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v88 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for DispatchQoS(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v92 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v105 = (char *)&v88 - v7;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v98 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v100 = (char *)&v88 - v12;
  __chkstk_darwin(v13);
  v107 = (char *)&v88 - v14;
  __chkstk_darwin(v15);
  v17 = (uint64_t)&v88 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v88 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v88 - v22;
  __chkstk_darwin(v24);
  v106 = (char *)&v88 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v88 - v27;
  __chkstk_darwin(v29);
  v32 = (uint64_t)&v88 - v31;
  if (qword_1011D1CD8 != -1)
LABEL_46:
    v30 = swift_once(&qword_1011D1CD8, sub_100A3B380);
  v33 = (char *)off_1011D6298;
  static Date.distantFuture.getter(v30);
  v109 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v109(v28, v32, v8);
  v34 = (char *)*((_QWORD *)v33 + 2);
  v108 = v9;
  v99 = v34;
  if (v34)
  {
    v89 = v32;
    v104 = v17;
    v102 = v5;
    v103 = (id)objc_opt_self(NSUserDefaults);
    swift_bridgeObjectRetain();
    v90 = v33;
    v35 = v33 + 49;
    v101 = (char *)&type metadata for Any + 8;
    v36 = v34;
    do
    {
      v41 = *(double *)(v35 - 9);
      v42 = *v35;
      v43 = objc_msgSend(v103, "standardUserDefaults");
      LOBYTE(v110) = v42;
      v44 = sub_100A3B478();
      v45 = sub_10098A8C0();
      NSUserDefaults.subscript.getter((uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v44, v45, (uint64_t)aBlock);

      if (v112)
      {
        v46 = (uint64_t)v105;
        v47 = swift_dynamicCast(v105, aBlock, v101, v8, 6);
        v48 = v108;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56))(v46, v47 ^ 1u, 1, v8);
      }
      else
      {
        sub_10004FF60((uint64_t)aBlock, &qword_1011D7160);
        v48 = v108;
        v46 = (uint64_t)v105;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v105, 1, 1, v8);
      }
      v49 = (uint64_t)v102;
      sub_100A3B4BC(v46, (uint64_t)v102);
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v8);
      v51 = v104;
      if ((_DWORD)v50 == 1)
      {
        Date.init()(v50);
        sub_10004FF60(v49, &qword_1011D5D00);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v104, v49, v8);
      }
      sub_10004FF60(v46, &qword_1011D5D00);
      static Date.+ infix(_:_:)(v51, v41);
      v52 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8);
      v53 = v52(v51, v8);
      v54 = v107;
      Date.init()(v53);
      if ((static Date.< infix(_:_:)(v20, v54) & 1) != 0)
      {
        v55 = v100;
        static Date.+ infix(_:_:)(v54, 3600.0);
        v52((uint64_t)v54, v8);
        v52((uint64_t)v20, v8);
        v37 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
        v37(v20, v55, v8);
      }
      else
      {
        v52((uint64_t)v54, v8);
        v37 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      }
      v35 += 24;
      v37(v23, v20, v8);
      v38 = sub_100048748(&qword_1011D62D8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      if ((dispatch thunk of static Comparable.< infix(_:_:)(v23, v28, v8, v38) & 1) != 0)
        v39 = v23;
      else
        v39 = v28;
      v40 = v106;
      v109(v106, (uint64_t)v39, v8);
      v52((uint64_t)v23, v8);
      v52((uint64_t)v28, v8);
      v37(v28, v40, v8);
      --v36;
    }
    while (v36);
    v33 = v90;
    swift_bridgeObjectRelease(v90);
    v9 = v108;
    v34 = v99;
    v32 = v89;
  }
  v56 = swift_allocBox(v8);
  v57 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v107 = v58;
  v57(v58, v28, v8);
  v59 = *(char **)(v9 + 8);
  ((void (*)(uint64_t, uint64_t))v59)(v32, v8);
  if (!v34)
  {
    v66 = v100;
    v67 = v98;
    goto LABEL_36;
  }
  v28 = v34;
  v105 = v59;
  v106 = (char *)v56;
  v23 = v33;
  swift_bridgeObjectRetain();
  LOBYTE(v9) = 0;
  v32 = 50;
  v17 = 1;
  v20 = (char *)&type metadata for Bool;
  v5 = &qword_1011D7160;
  while (1)
  {
    if ((v9 & 1) != 0)
    {
      if (v28 == (char *)v17)
      {
        swift_bridgeObjectRelease(v33);
LABEL_33:
        v66 = v100;
        Date.init()(v68);
        v69 = v107;
        (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v107, v66, v8);
        LOBYTE(v34) = 1;
        v67 = v98;
        v59 = v105;
        v56 = (uint64_t)v106;
        goto LABEL_37;
      }
      v9 = 1;
      goto LABEL_21;
    }
    v61 = v33[v32];
    v62 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    LOBYTE(v110) = v61;
    v63 = sub_100A3B478();
    v64 = sub_10098A8C0();
    NSUserDefaults.subscript.getter((uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v63, v64, (uint64_t)aBlock);

    if (!v112)
    {
      sub_10004FF60((uint64_t)aBlock, &qword_1011D7160);
      v28 = v99;
      if (v99 == (char *)v17)
      {
LABEL_34:
        swift_bridgeObjectRelease(v33);
        goto LABEL_35;
      }
      goto LABEL_30;
    }
    v65 = swift_dynamicCast(&v110, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    v28 = v99;
    if ((v65 & 1) == 0)
    {
      if (v99 == (char *)v17)
        goto LABEL_34;
LABEL_30:
      v9 = 0;
      goto LABEL_21;
    }
    v9 = v110;
    if (v99 == (char *)v17)
      break;
LABEL_21:
    v32 += 24;
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease(v33);
  if ((_DWORD)v9)
    goto LABEL_33;
LABEL_35:
  LOBYTE(v34) = 0;
  v66 = v100;
  v67 = v98;
  v59 = v105;
  v56 = (uint64_t)v106;
LABEL_36:
  v69 = v107;
LABEL_37:
  v70 = ((uint64_t (*)(char *, char *, uint64_t))v109)(v66, v69, v8);
  static Date.distantFuture.getter(v70);
  v71 = static Date.< infix(_:_:)(v66, v67);
  ((void (*)(char *, uint64_t))v59)(v67, v8);
  ((void (*)(char *, uint64_t))v59)(v66, v8);
  if ((v34 & 1) != 0 || (v71 & 1) != 0)
  {
    v72 = objc_allocWithZone((Class)BGAppRefreshTaskRequest);
    v73 = String._bridgeToObjectiveC()();
    v74 = objc_msgSend(v72, "initWithIdentifier:", v73);

    v109(v66, (uint64_t)v69, v8);
    v75 = v74;
    isa = Date._bridgeToObjectiveC()().super.isa;
    ((void (*)(char *, uint64_t))v59)(v66, v8);
    objc_msgSend(v75, "setEarliestBeginDate:", isa);

    if (qword_1011D1CD0 != -1)
      swift_once(&qword_1011D1CD0, sub_100A3B164);
    v77 = swift_allocObject(&unk_1010F1880, 48, 7);
    *(_QWORD *)(v77 + 16) = v75;
    *(_QWORD *)(v77 + 24) = v56;
    *(_BYTE *)(v77 + 32) = (_BYTE)v34;
    *(_QWORD *)(v77 + 40) = v91;
    v113 = sub_100A3B530;
    v114 = v77;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001DBD98;
    v112 = &unk_1010F1898;
    v78 = _Block_copy(aBlock);
    v79 = v75;
    v80 = swift_retain();
    v81 = v92;
    static DispatchQoS.unspecified.getter(v80);
    v110 = _swiftEmptyArrayStorage;
    v82 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v83 = sub_100007E8C(&qword_1011D5E08);
    v84 = sub_1001EBC18((unint64_t *)&qword_1011D7790, &qword_1011D5E08);
    v85 = v95;
    v86 = v83;
    v87 = v97;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v110, v86, v84, v97, v82);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v81, v85, v78);
    _Block_release(v78);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v85, v87);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v81, v94);
    swift_release();
  }
  swift_release();
}

void sub_100A392E8(void *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  double v19;
  void *v20;
  void *v21;
  id v22;
  unsigned int v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  NSString v44;
  __int128 v45;
  uint64_t v46;
  int v47;
  id v48;
  _BYTE v49[24];

  v47 = a3;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_projectBox(a2);
  v10 = static os_log_type_t.default.getter(v9);
  v46 = sub_100007E8C(&qword_1011D4E10);
  v11 = swift_allocObject(v46, 112, 7);
  v45 = xmmword_100EA7A80;
  *(_OWORD *)(v11 + 16) = xmmword_100EA7A80;
  v12 = objc_msgSend(a1, "identifier");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  *(_QWORD *)(v11 + 56) = &type metadata for String;
  v16 = sub_1009FD048();
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  v17 = swift_beginAccess(v9, v49, 0, 0);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v9, v5, v17);
  v19 = Date.timeIntervalSince1970.getter(v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v19 >= 9.22337204e18)
    goto LABEL_12;
  *(_QWORD *)(v11 + 96) = &type metadata for Int;
  *(_QWORD *)(v11 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v11 + 72) = (uint64_t)v19;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v20 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v10, &_mh_execute_header, v20, "BackgroundRefreshController: SCHEDULING TASK: %@ EARLIEST BEGIN DATE %{time_t}d", 79, 2, v11);
  swift_bridgeObjectRelease(v11);

  v21 = (void *)objc_opt_self(BGTaskScheduler);
  v22 = objc_msgSend(v21, "sharedScheduler");
  v48 = 0;
  v23 = objc_msgSend(v22, "submitTaskRequest:error:", a1, &v48);

  v24 = v48;
  if (v23)
  {
    v25 = v48;
    if ((v47 & 1) == 0)
      return;
  }
  else
  {
    v26 = v48;
    v27 = (void *)_convertNSErrorToError(_:)(v24);

    v29 = swift_willThrow(v28);
    v30 = static os_log_type_t.error.getter(v29);
    v31 = swift_allocObject(v46, 112, 7);
    *(_OWORD *)(v31 + 16) = v45;
    v32 = objc_msgSend(a1, "identifier");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = v16;
    *(_QWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 40) = v35;
    v48 = v27;
    swift_errorRetain(v27);
    v36 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v37 = String.init<A>(describing:)(&v48, v36);
    *(_QWORD *)(v31 + 96) = &type metadata for String;
    *(_QWORD *)(v31 + 104) = v16;
    *(_QWORD *)(v31 + 72) = v37;
    *(_QWORD *)(v31 + 80) = v38;
    v39 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v30, &_mh_execute_header, v39, "BackgroundRefreshController: SCHEDULING TASK: %@ ERROR %@", 57, 2, v31);
    swift_bridgeObjectRelease(v31);

    v25 = (id)swift_errorRelease(v27);
    if ((v47 & 1) == 0)
      return;
  }
  v40 = static os_log_type_t.default.getter(v25);
  v41 = swift_allocObject(v46, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v41 + 56) = &type metadata for String;
  *(_QWORD *)(v41 + 64) = v16;
  *(_QWORD *)(v41 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v41 + 40) = 0x8000000100E4D0C0;
  v42 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v42, "BackgroundRefreshController: FORCING TASK: %@", 45, 2, v41);
  swift_bridgeObjectRelease(v41);

  v43 = objc_msgSend(v21, "sharedScheduler");
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "_simulateLaunchForTaskWithIdentifier:", v44);

}

double sub_100A39750(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1CD0 != -1)
    swift_once(&qword_1011D1CD0, sub_100A3B164);
  v13 = swift_allocObject(&unk_1010F1B48, 40, 7);
  *(_QWORD *)(v13 + 16) = a2;
  *(_BYTE *)(v13 + 24) = a1 & 1;
  *(_QWORD *)(v13 + 32) = a3;
  aBlock[4] = sub_100A3BE78;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F1B60;
  v14 = _Block_copy(aBlock);
  v15 = a2;
  static DispatchQoS.unspecified.getter(v16);
  v22 = _swiftEmptyArrayStorage;
  v17 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100007E8C(&qword_1011D5E08);
  v19 = sub_1001EBC18((unint64_t *)&qword_1011D7790, &qword_1011D5E08);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_100A39970(void *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;

  if ((a2 & 1) != 0)
    v2 = 1702195828;
  else
    v2 = 0x65736C6166;
  if ((a2 & 1) != 0)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  v4 = static os_log_type_t.error.getter(objc_msgSend(a1, "setTaskCompletedWithSuccess:", a2 & 1));
  v5 = sub_100007E8C(&qword_1011D4E10);
  v6 = swift_allocObject(v5, 112, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v6 + 56) = &type metadata for String;
  v7 = sub_1009FD048();
  *(_QWORD *)(v6 + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(v6 + 40) = 0x8000000100E4D0C0;
  *(_QWORD *)(v6 + 96) = &type metadata for String;
  *(_QWORD *)(v6 + 104) = v7;
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = v2;
  *(_QWORD *)(v6 + 80) = v3;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v8 = (id)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v8, "BackgroundRefreshController: COMPLETED REFRESH SUBTASKS: %@ SUCCESS: %@", 71, 2, v6);
  swift_bridgeObjectRelease();

}

void sub_100A39A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int v35;
  char *v36;
  char *v37;
  unint64_t v38;
  _QWORD aBlock[11];
  unsigned __int8 v40;

  v25[2] = a2;
  v25[1] = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v27 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v25[4] = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v25[3] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v5);
  v32 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v8 = type metadata accessor for Date(0);
  v33 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v29 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v37 = (char *)v25 - v11;
  __chkstk_darwin(v12);
  v36 = (char *)v25 - v13;
  __chkstk_darwin(v14);
  v31 = (char *)v25 - v15;
  __chkstk_darwin(v16);
  v30 = (char *)v25 - v17;
  __chkstk_darwin(v18);
  v34 = (char *)v25 - v19;
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v38 = 0xEA00000000007265;
  v20 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDE900);
  v22 = swift_getKeyPath(&unk_100EDE928);
  static Published.subscript.getter(aBlock, v20, KeyPath, v22);
  swift_release();
  swift_release();
  v23 = (void *)aBlock[10];
  v24 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v35 = 1;
  __asm { BR              X9 }
}

void sub_100A3A5A0(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3BDE4);
  dispatch_group_leave(a4);
}

uint64_t sub_100A3A604(_BYTE *a1, char a2)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  _BYTE v7[24];

  swift_beginAccess(a1, v7, 0, 0);
  v4 = *a1 & a2;
  result = swift_beginAccess(a1, &v6, 1, 0);
  *a1 = v4;
  return result;
}

void sub_100A3A66C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[3];
  void *v32;
  uint64_t (*v33)(uint64_t, __n128);
  uint64_t v34;
  char v35;

  v30 = a1;
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1CE0 != -1)
    v5 = swift_once(&qword_1011D1CE0, sub_100A3B684);
  v8 = word_1011D62A0;
  v9 = HIBYTE(word_1011D62A0);
  v10 = qword_1011D62A8;
  v11 = word_1011D62B0;
  v12 = HIBYTE(word_1011D62B0);
  HIDWORD(v28) = byte_1011D62B2;
  Date.init()(v5);
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v32 = (void *)v3;
  v14 = sub_100049F68(aBlock);
  (*(void (**)(_QWORD *, char *, uint64_t))(v4 + 16))(v14, v7, v3);
  v35 = v12;
  v15 = sub_100A3B478();
  v16 = sub_10098A8C0();
  NSUserDefaults.subscript.setter((uint64_t)aBlock, (uint64_t)&v35, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v15, v16);

  v17 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = sub_100007E8C(&qword_1011D4E10);
  v20 = swift_allocObject(v19, 72, 7);
  v21 = v20;
  *(_OWORD *)(v20 + 16) = xmmword_100EA7AA0;
  if (v8)
    v22 = 0xD000000000000018;
  else
    v22 = 0xD000000000000019;
  if (v8)
    v23 = 0x8000000100E4A370;
  else
    v23 = 0x8000000100E4A350;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = sub_1009FD048();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = v23;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v24 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v18, &_mh_execute_header, v24, "BackgroundRefreshController: EXECUTING SUBTASK: %@", 50, 2, v21);
  swift_bridgeObjectRelease();

  v25 = *(void **)(v29 + 32);
  v26 = swift_allocObject(&unk_1010F1AD0, 56, 7);
  *(_BYTE *)(v26 + 16) = v8;
  *(_BYTE *)(v26 + 17) = v9;
  *(_QWORD *)(v26 + 24) = v10;
  *(_BYTE *)(v26 + 32) = v11;
  *(_BYTE *)(v26 + 33) = v12;
  *(_BYTE *)(v26 + 34) = BYTE4(v28);
  *(_QWORD *)(v26 + 40) = v30;
  *(_QWORD *)(v26 + 48) = a2;
  v33 = sub_100A3BD88;
  v34 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001E5304;
  v32 = &unk_1010F1AE8;
  v27 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(v25, "updatePinnedSubscribedPlaylistsWithCompletion:", v27, swift_release().n128_f64[0]);
  _Block_release(v27);
}

void sub_100A3A954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  char v11;
  uint64_t v12;
  char v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  char v32;
  _QWORD v33[4];

  v3 = v2;
  v31 = a1;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1CE8 != -1)
    v7 = swift_once(&qword_1011D1CE8, sub_100A3B744);
  v10 = word_1011D62B8;
  v11 = HIBYTE(word_1011D62B8);
  v12 = qword_1011D62C0;
  v13 = byte_1011D62C9;
  v29 = byte_1011D62CA;
  v30 = byte_1011D62C8;
  Date.init()(v7);
  v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v33[3] = v5;
  v15 = sub_100049F68(v33);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v15, v9, v5);
  v32 = v13;
  v16 = sub_100A3B478();
  v17 = sub_10098A8C0();
  NSUserDefaults.subscript.setter((uint64_t)v33, (uint64_t)&v32, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey, v16, v17);

  v18 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = sub_100007E8C(&qword_1011D4E10);
  v21 = swift_allocObject(v20, 72, 7);
  v22 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
  if (v10)
    v23 = 0xD000000000000018;
  else
    v23 = 0xD000000000000019;
  if (v10)
    v24 = 0x8000000100E4A370;
  else
    v24 = 0x8000000100E4A350;
  *(_QWORD *)(v21 + 56) = &type metadata for String;
  *(_QWORD *)(v21 + 64) = sub_1009FD048();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v24;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v25 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v19, &_mh_execute_header, v25, "BackgroundRefreshController: EXECUTING SUBTASK: %@", 50, 2, v22);
  swift_bridgeObjectRelease();

  if (qword_1011D1CB8 != -1)
    swift_once(&qword_1011D1CB8, sub_100A35DD4);
  if (qword_1011D1CD0 != -1)
    swift_once(&qword_1011D1CD0, sub_100A3B164);
  v26 = qword_1011D6290;
  v27 = swift_allocObject(&unk_1010F1B20, 56, 7);
  *(_BYTE *)(v27 + 16) = v10;
  *(_BYTE *)(v27 + 17) = v11;
  *(_QWORD *)(v27 + 24) = v12;
  *(_BYTE *)(v27 + 32) = v30;
  *(_BYTE *)(v27 + 33) = v13;
  *(_BYTE *)(v27 + 34) = v29;
  *(_QWORD *)(v27 + 40) = v31;
  *(_QWORD *)(v27 + 48) = a2;
  swift_retain();
  swift_retain();
  _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(v26, (uint64_t)sub_100A3BD94, v3, (uint64_t)sub_100A3BD9C, v27);
  swift_release();
  swift_release();
}

uint64_t sub_100A3AC64(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v28;

  v7 = 0xD000000000000018;
  if (a1)
  {
    v8 = swift_errorRetain(a1);
    v9 = static os_log_type_t.error.getter(v8);
    v10 = sub_100007E8C(&qword_1011D4E10);
    v11 = swift_allocObject(v10, 112, 7);
    v12 = (_QWORD *)v11;
    *(_OWORD *)(v11 + 16) = xmmword_100EA7A80;
    if ((a2 & 1) != 0)
    {
      v13 = 0x8000000100E4A370;
    }
    else
    {
      v7 = 0xD000000000000019;
      v13 = 0x8000000100E4A350;
    }
    *(_QWORD *)(v11 + 56) = &type metadata for String;
    v14 = sub_1009FD048();
    v12[8] = v14;
    v12[4] = v7;
    v12[5] = v13;
    v28 = a1;
    swift_errorRetain(a1);
    v15 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v16 = String.init<A>(describing:)(&v28, v15);
    v12[12] = &type metadata for String;
    v12[13] = v14;
    v12[9] = v16;
    v12[10] = v17;
    sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
    v18 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v9, &_mh_execute_header, v18, "BackgroundRefreshController: COMPLETED SUBTASK: %@ ERROR %@", 59, 2, v12);
    swift_bridgeObjectRelease();

    swift_errorRelease(a1);
  }
  else
  {
    v19 = static os_log_type_t.error.getter(0);
    v20 = sub_100007E8C(&qword_1011D4E10);
    v21 = swift_allocObject(v20, 72, 7);
    v22 = v21;
    *(_OWORD *)(v21 + 16) = xmmword_100EA7AA0;
    v23 = (a2 & 1) == 0;
    if ((a2 & 1) != 0)
      v24 = 0xD000000000000018;
    else
      v24 = 0xD000000000000019;
    if (v23)
      v25 = 0x8000000100E4A350;
    else
      v25 = 0x8000000100E4A370;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 64) = sub_1009FD048();
    *(_QWORD *)(v22 + 32) = v24;
    *(_QWORD *)(v22 + 40) = v25;
    sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
    v26 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)(v19, &_mh_execute_header, v26, "BackgroundRefreshController: COMPLETED SUBTASK: %@ SUCCESS", 58, 2, v22);
    swift_bridgeObjectRelease();

  }
  return a4(a1 == 0);
}

uint64_t sub_100A3AEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void (*v6)(uint64_t);
  uint64_t v7;
  _BYTE v8[24];

  result = swift_beginAccess(a3 + 16, v8, 0, 0);
  v6 = *(void (**)(uint64_t))(a3 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(a3 + 24);
    swift_retain(v7);
    v6(a1);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_100A3AF14(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;

  v7 = static os_log_type_t.default.getter(a1);
  v8 = sub_100007E8C(&qword_1011D4E10);
  v9 = swift_allocObject(v8, 72, 7);
  v10 = (_QWORD *)v9;
  *(_OWORD *)(v9 + 16) = xmmword_100EA7AA0;
  v11 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v12 = 0xD000000000000018;
  else
    v12 = 0xD000000000000019;
  if (v11)
    v13 = 0x8000000100E4A350;
  else
    v13 = 0x8000000100E4A370;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  v14 = sub_1009FD048();
  v10[8] = v14;
  v10[4] = v12;
  v10[5] = v13;
  v15 = v13;
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v16 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)(v7, &_mh_execute_header, v16, "BackgroundRefreshController: COMPLETED SUBTASK: %@", 50, 2, v10);
  swift_bridgeObjectRelease();

  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v30 = a4;
    swift_bridgeObjectRetain();
    v18 = 0;
    v31 = v8;
    do
    {
      v19 = *(_QWORD *)(a1 + 8 * v18++ + 32);
      v20 = swift_errorRetain(v19);
      v21 = v17;
      v22 = static os_log_type_t.error.getter(v20);
      v23 = swift_allocObject(v31, 112, 7);
      *(_OWORD *)(v23 + 16) = xmmword_100EA7A80;
      *(_QWORD *)(v23 + 56) = &type metadata for String;
      *(_QWORD *)(v23 + 64) = v14;
      *(_QWORD *)(v23 + 32) = v12;
      *(_QWORD *)(v23 + 40) = v15;
      v32 = v19;
      swift_errorRetain(v19);
      v24 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
      v25 = String.init<A>(describing:)(&v32, v24);
      *(_QWORD *)(v23 + 96) = &type metadata for String;
      *(_QWORD *)(v23 + 104) = v14;
      *(_QWORD *)(v23 + 72) = v25;
      *(_QWORD *)(v23 + 80) = v26;
      v27 = (void *)static OS_os_log.default.getter();
      v28 = v22;
      v17 = v21;
      os_log(_:dso:log:_:_:)(v28, &_mh_execute_header, v27, "BackgroundRefreshController: ERROR EXECUTING SUBTASK: %@ ERROR %@", 65, 2, v23);
      swift_bridgeObjectRelease();

      swift_errorRelease(v19);
    }
    while (v21 != v18);
    swift_bridgeObjectRelease();
    a4 = v30;
  }
  return a4(v17 == 0);
}

uint64_t sub_100A3B164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_100048748(&qword_1011D6390, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_100007E8C(&qword_1011D6398);
  v13 = sub_1001EBC18(&qword_1011D63A0, &qword_1011D6398);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003ELL, 0x8000000100E4D2C0, v9, v6, v3, 0);
  qword_1011D6290 = result;
  return result;
}

uint64_t BackgroundRefreshController.deinit()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t BackgroundRefreshController.__deallocating_deinit()
{
  uint64_t v0;

  sub_10004BA30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

double sub_100A3B380()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  __int16 v5;
  char v6;
  double result;
  char v8;
  __int16 v9;

  v0 = sub_100007E8C(&qword_1011D63A8);
  v1 = swift_allocObject(v0, 80, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7A80;
  if (qword_1011D1CE0 != -1)
    swift_once(&qword_1011D1CE0, sub_100A3B684);
  v2 = HIBYTE(word_1011D62A0);
  v3 = qword_1011D62A8;
  v4 = word_1011D62B0;
  v5 = *(__int16 *)((char *)&word_1011D62B0 + 1);
  *(_BYTE *)(v1 + 32) = word_1011D62A0;
  *(_BYTE *)(v1 + 33) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  *(_WORD *)(v1 + 49) = v5;
  if (qword_1011D1CE8 != -1)
    swift_once(&qword_1011D1CE8, sub_100A3B744);
  v6 = HIBYTE(word_1011D62B8);
  result = *(double *)&qword_1011D62C0;
  v8 = byte_1011D62C8;
  v9 = *(_WORD *)&byte_1011D62C9;
  *(_BYTE *)(v1 + 56) = word_1011D62B8;
  *(_BYTE *)(v1 + 57) = v6;
  *(double *)(v1 + 64) = result;
  *(_BYTE *)(v1 + 72) = v8;
  *(_WORD *)(v1 + 73) = v9;
  off_1011D6298 = (_UNKNOWN *)v1;
  return result;
}

unint64_t sub_100A3B478()
{
  unint64_t result;

  result = qword_1011D62D0;
  if (!qword_1011D62D0)
  {
    result = swift_getWitnessTable(&unk_100EDE8C4, &type metadata for BackgroundTaskConfiguration.UserDefaultsKey);
    atomic_store(result, (unint64_t *)&qword_1011D62D0);
  }
  return result;
}

uint64_t sub_100A3B4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D5D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A3B504()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100A3B530()
{
  uint64_t v0;

  sub_100A392E8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t type metadata accessor for BackgroundRefreshController()
{
  return objc_opt_self(_TtC9MusicCore27BackgroundRefreshController);
}

ValueMetadata *type metadata accessor for BackgroundRefreshController.PerformanceMetricsRecorder()
{
  return &type metadata for BackgroundRefreshController.PerformanceMetricsRecorder;
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration.UserDefaultsKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100A3B5BC + 4 * byte_100EDE7C8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100A3B5F0 + 4 * byte_100EDE7C3[v4]))();
}

uint64_t sub_100A3B5F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3B5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A3B600);
  return result;
}

uint64_t sub_100A3B60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A3B614);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100A3B618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3B620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.UserDefaultsKey()
{
  return &type metadata for BackgroundTaskConfiguration.UserDefaultsKey;
}

unint64_t sub_100A3B640()
{
  unint64_t result;

  result = qword_1011D6388;
  if (!qword_1011D6388)
  {
    result = swift_getWitnessTable(&unk_100EDE89C, &type metadata for BackgroundTaskConfiguration.UserDefaultsKey);
    atomic_store(result, (unint64_t *)&qword_1011D6388);
  }
  return result;
}

void sub_100A3B684()
{
  void *v0;

  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);

  word_1011D62A0 = 256;
  qword_1011D62A8 = 0x40E5180000000000;
  word_1011D62B0 = 257;
  byte_1011D62B2 = 0;
}

void sub_100A3B744()
{
  void *v0;
  char v1;
  uint64_t v2;
  void *v3;
  char v4;

  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  v0 = v3;
  if (v3 && (sub_100A3B830(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    v1 = 0;
    v2 = (uint64_t)v3;
  }
  else
  {
    v1 = 1;
    v2 = 0x40D5180000000000;
  }
  word_1011D62B8 = 257;
  qword_1011D62C0 = v2;
  byte_1011D62C8 = v1;
  *(_WORD *)&byte_1011D62C9 = 515;
}

void sub_100A3B830(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "dictionaryForBagKey:", v4);

  if (!v5)
    goto LABEL_12;
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v7 = sub_100B69144(v6);
  swift_bridgeObjectRelease(v6);
  if (!v7)
    goto LABEL_12;
  if (!*(_QWORD *)(v7 + 16) || (v8 = sub_10079C2C4(0xD00000000000001ELL, 0x8000000100E4D040), (v9 & 1) == 0))
  {
    v17 = 0u;
    v18 = 0u;
    swift_bridgeObjectRelease(v7);
    goto LABEL_11;
  }
  sub_10004FA40(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v17);
  swift_bridgeObjectRelease(v7);
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_11;
  v10 = sub_100007E8C((uint64_t *)&unk_1011D8950);
  if ((swift_dynamicCast(&v16, &v17, (char *)&type metadata for Any + 8, v10, 6) & 1) == 0)
  {
LABEL_12:
    *(_QWORD *)a2 = 0;
    v14 = 1;
    goto LABEL_13;
  }
  v11 = v16;
  if (*(_QWORD *)(v16 + 16) && (v12 = sub_10079C2C4(0xD00000000000001DLL, 0x8000000100E4D300), (v13 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease(v11);
  if (!*((_QWORD *)&v18 + 1))
  {
LABEL_11:
    sub_10004FF60((uint64_t)&v17, &qword_1011D7160);
    goto LABEL_12;
  }
  v15 = swift_dynamicCast(a2, &v17, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((v15 & 1) == 0)
    *(_QWORD *)a2 = 0;
  v14 = v15 ^ 1;
LABEL_13:
  *(_BYTE *)(a2 + 8) = v14;
}

uint64_t sub_100A3BA14(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100A3BA50 + 4 * byte_100EDE7CD[a1]))(0xD00000000000002FLL, 0x8000000100E4A390);
}

uint64_t sub_100A3BA50()
{
  uint64_t v0;

  return v0 + 11;
}

unint64_t sub_100A3BA78()
{
  return 0xD000000000000027;
}

uint64_t sub_100A3BA94(char *a1, char *a2)
{
  return sub_1009A4AFC(*a1, *a2);
}

Swift::Int sub_100A3BAA0()
{
  char *v0;

  return sub_100A378B0(*v0);
}

uint64_t sub_100A3BAA8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000019;
  if (*v1)
    v3 = 0x8000000100E4A370;
  else
    v3 = 0x8000000100E4A350;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100A3BB08(uint64_t a1)
{
  char *v1;

  return sub_100A38118(a1, *v1);
}

uint64_t sub_100A3BB10@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6DA8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100A3BB6C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD000000000000019;
  v3 = 0x8000000100E4A350;
  if (*v1)
    v3 = 0x8000000100E4A370;
  *a1 = v2;
  a1[1] = v3;
}

void sub_100A3BBB0(char *a1)
{
  sub_1009A49B0(*a1);
}

void sub_100A3BBBC()
{
  char *v0;

  sub_100A37934(*v0);
}

void sub_100A3BBC4(uint64_t a1)
{
  char *v1;

  sub_100A37D5C(a1, *v1);
}

void sub_100A3BBCC(uint64_t a1)
{
  char *v1;

  sub_100A38198(a1, *v1);
}

unint64_t sub_100A3BBD4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100A3BC28(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A3BC00@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100A3BA14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100A3BC28(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6DF8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_100A3BC70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100A3BC94(char a1)
{
  uint64_t v1;

  return sub_100A39750(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100A3BCA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100A3BCB4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A3BCE8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  unsigned __int8 v3;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 32);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3BE00);
  return v1(v3);
}

void sub_100A3BD54(uint64_t a1)
{
  uint64_t v1;

  sub_100A3A5A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_100A3BD64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100A3BD88(uint64_t a1, __n128 a2)
{
  return sub_100A3BDA8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, __n128))sub_100A3AC64, a2);
}

uint64_t sub_100A3BD94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100A3AEAC(a1, a2, v2);
}

uint64_t sub_100A3BD9C(uint64_t a1, __n128 a2)
{
  return sub_100A3BDA8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, __n128))sub_100A3AF14, a2);
}

uint64_t sub_100A3BDA8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, __n128), __n128 a3)
{
  uint64_t v3;
  int v4;

  if (*(_BYTE *)(v3 + 17))
    v4 = 256;
  else
    v4 = 0;
  a3.n128_u64[0] = *(_QWORD *)(v3 + 24);
  return a2(a1, v4 | *(unsigned __int8 *)(v3 + 16), *(unsigned __int8 *)(v3 + 32) | (*(unsigned __int8 *)(v3 + 33) << 8) | (*(unsigned __int8 *)(v3 + 34) << 16), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a3);
}

uint64_t sub_100A3BDE4()
{
  uint64_t v0;

  return sub_100A3A604(*(_BYTE **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100A3BE00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *(_BYTE **)(v1 + 16);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return result;
}

uint64_t sub_100A3BE54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_100A3BE78()
{
  uint64_t v0;

  sub_100A39970(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

__n128 initializeBufferWithCopyOfBuffer for BackgroundTaskConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BackgroundTaskConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[19])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration()
{
  return &type metadata for BackgroundTaskConfiguration;
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration.Identifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A3BF84 + 4 * byte_100EDE7D6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A3BFB8 + 4 * byte_100EDE7D1[v4]))();
}

uint64_t sub_100A3BFB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3BFC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A3BFC8);
  return result;
}

uint64_t sub_100A3BFD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A3BFDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A3BFE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3BFE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.Identifier()
{
  return &type metadata for BackgroundTaskConfiguration.Identifier;
}

unint64_t sub_100A3C008()
{
  unint64_t result;

  result = qword_1011D63B0[0];
  if (!qword_1011D63B0[0])
  {
    result = swift_getWitnessTable(&unk_100EDE9CC, &type metadata for BackgroundTaskConfiguration.Identifier);
    atomic_store(result, qword_1011D63B0);
  }
  return result;
}

uint64_t BagControlledValue.init(fallback:reader:)@<X0>(uint64_t a1@<X0>, void (*a2)(void *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *);
  uint64_t v22;
  void *v23;

  v21 = a2;
  v22 = a1;
  v6 = type metadata accessor for Optional(0, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - v8;
  v10 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  v16 = v23;
  if (!v23)
    goto LABEL_6;
  v21(v23);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    *(_BYTE *)(a4 + *(int *)(type metadata accessor for BagControlledValue(0, a3, v14, v15) + 28)) = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a4, v22, a3);
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v22, a3);
  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v18(v13, v9, a3);
  *(_BYTE *)(a4 + *(int *)(type metadata accessor for BagControlledValue(0, a3, v19, v20) + 28)) = 0;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a4, v13, a3);
}

uint64_t BagControlledValue.source.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t type metadata accessor for BagControlledValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BagControlledValue);
}

uint64_t sub_100A3C26C(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for BagControlledValue<A>.Source, a1);
}

uint64_t sub_100A3C27C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EDEAA8;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 24);
    return 0;
  }
  return result;
}

_QWORD *sub_100A3C2F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain(v10);
  }
  return v4;
}

uint64_t sub_100A3C37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_100A3C3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_100A3C40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_100A3C454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_100A3C49C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = v7 + 1;
  v10 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 >= 0xFE)
        return (*(uint64_t (**)(void))(v4 + 48))();
      v15 = *(unsigned __int8 *)(v7 + a1);
      if (v15 >= 2)
        return v15 - 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if ((_DWORD)v7 == -1)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100A3C564 + 4 * byte_100EDEA00[(v9 - 1)]))();
}

void sub_100A3C5C4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_100000004;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v7 + 1);
        if (v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if (v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_100A3C798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_100A3C7A0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A3C7EC + 4 * byte_100EDEA13[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A3C820 + 4 * byte_100EDEA0E[v4]))();
}

uint64_t sub_100A3C820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3C828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A3C830);
  return result;
}

uint64_t sub_100A3C83C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A3C844);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A3C848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3C850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for BagControlledValue.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BagControlledValue.Source);
}

uint64_t *BagProvider.shared.unsafeMutableAddressor()
{
  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  return &static BagProvider.shared;
}

uint64_t BagProvider.createObserver(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for BagProvider.Observer();
  v6 = swift_allocObject(v5, 40, 7);
  v7 = swift_weakInit(v6 + 16, 0);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  swift_weakAssign(v7, v2);
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v6 + 32);
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  swift_retain();
  sub_10004BA30(v8, v9);
  UnfairLock.locked<A>(_:)(sub_100A23CF0);
  sub_100A3CF60(0);
  return v6;
}

uint64_t BagProvider.bag.getter()
{
  uint64_t v1;

  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3D19C);
  return v1;
}

double BagProvider.getBag(completion:)(void (*a1)(), uint64_t a2)
{
  uint64_t v2;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3D19C);
  if (v14)
  {
    a1();

  }
  else
  {
    v6 = type metadata accessor for BagProvider.Observer();
    v7 = swift_allocObject(v6, 40, 7);
    v8 = swift_weakInit(v7 + 16, 0);
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    swift_weakAssign(v8, v2);
    v9 = swift_allocObject(&unk_1010F1E10, 24, 7);
    swift_weakInit(v9 + 16, v2);
    v10 = (_QWORD *)swift_allocObject(&unk_1010F1E38, 48, 7);
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v9;
    v10[5] = v7;
    v11 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD *)(v7 + 32);
    *(_QWORD *)(v7 + 24) = sub_100A35A60;
    *(_QWORD *)(v7 + 32) = v10;
    swift_retain();
    swift_retain();
    v13 = sub_10004BA30(v11, v12);
    __chkstk_darwin(v13);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A35A6C);
    sub_100A3CF60(0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100A3CB80()
{
  void *v0;
  uint64_t v1;
  uint64_t result;

  if (qword_1011D1D88 != -1)
    swift_once(&qword_1011D1D88, sub_100A6D2D0);
  v0 = (void *)static ICClientInfo.music;
  v1 = type metadata accessor for BagProvider(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  result = sub_100A3D410(v0);
  static BagProvider.shared = result;
  return result;
}

uint64_t type metadata accessor for BagProvider.Observer()
{
  return objc_opt_self(_TtCC9MusicCore11BagProvider8Observer);
}

double static BagProvider.shared.getter()
{
  double result;

  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

_BYTE *sub_100A3CC54@<X0>(_BYTE *result@<X0>, _QWORD *a2@<X8>)
{
  id *v3;
  id v4;

  v3 = (id *)&result[OBJC_IVAR____TtC9MusicCore11BagProvider_result];
  if (result[OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8] == 1)
  {
    v4 = *v3;
    result = *v3;
  }
  else
  {
    v4 = 0;
  }
  *a2 = v4;
  return result;
}

double sub_100A3CCAC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  _BYTE v7[31];

  v4 = a4 + 16;
  a2();
  swift_beginAccess(v4, v7, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    swift_retain();
    swift_release();
    __chkstk_darwin(v6);
    sub_100007E8C((uint64_t *)&unk_1011D6750);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3E874);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_100A3CD8C(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  v7 = Strong;
  if (!Strong)
    goto LABEL_5;
  v8 = (unint64_t *)(Strong + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess(Strong + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers, v13, 33, 0);
  swift_retain();
  v9 = sub_100A3E9AC(v8, a2);
  swift_release();
  v10 = *v8;
  if (*v8 >> 62)
  {
    if (v10 < 0)
      v12 = *v8;
    else
      v12 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v10);
    if (v11 >= v9)
      goto LABEL_4;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v9)
    {
LABEL_4:
      sub_1009BBBDC(v9, v11);
      swift_endAccess(v13);
      swift_release();
LABEL_5:
      *a3 = v7 == 0;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_100A3CEBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers, v9, 33, 0);
  v4 = swift_retain(a2);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v5 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v6 >= v5 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
  v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, a2);
  specialized Array._endMutation()(v7);
  return swift_endAccess(v9);
}

void sub_100A3CF60(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD aBlock[5];
  uint64_t v10;

  v2 = v1;
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3ECC4);
  if (LOBYTE(aBlock[0]) == 1)
  {
    UnfairLock.locked<A>(_:)(sub_100A3ECFC);
    v4 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    v5 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:clientInfo:", v4, *(_QWORD *)(v1 + 16));

    v6 = objc_msgSend((id)objc_opt_self(ICURLBagProvider), "sharedBagProvider");
    aBlock[4] = sub_100A3ED10;
    v10 = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004E2F4;
    aBlock[3] = &unk_1010F1EE0;
    v7 = _Block_copy(aBlock);
    v8 = v10;
    swift_retain(v2);
    objc_msgSend(v6, "getBagForRequestContext:forceRefetch:withCompletionHandler:", v5, a1 & 1, v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);

  }
}

void sub_100A3D0E4(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v6;
  id v7;
  id *v8;
  id v9;
  void *v10;
  _BYTE v11[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers, v11, 33, 0);
  v6 = sub_100007E8C(&qword_1011D6748);
  WeakArray.append(_:)(a2, v6);
  swift_endAccess(v11);
  v7 = 0;
  v8 = (id *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    v7 = *v8;
    v9 = *v8;
  }
  v10 = *a3;
  *a3 = v7;

}

id sub_100A3D19C@<X0>(_QWORD *a1@<X8>)
{
  return sub_100A3D1B0(a1);
}

id sub_100A3D1B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id *v3;
  id v4;
  id result;

  v3 = (id *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    v4 = *v3;
    result = *v3;
  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_100A3D208()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A3D22C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A3D260@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = sub_100007E8C(&qword_1011D64E0);
  v4 = __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost, v15, 0, 0);
  sub_100A3ED68(v9, (uint64_t)v8);
  v10 = type metadata accessor for Signpost(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_1008F1704((uint64_t)v8, (uint64_t)a1);
  sub_100A3E5BC((uint64_t)v8);
  if (qword_1011D1D40 != -1)
    swift_once(&qword_1011D1D40, sub_100A68C6C);
  v12 = (id)static OS_os_log.musicBag;
  swift_retain(v1);
  Signpost.init(name:object:log:)((uint64_t)"Bag", 3, 2, v1, v12, a1);
  sub_1008F1678((uint64_t)a1, (uint64_t)v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v14, 33, 0);
  sub_100A3EDB0((uint64_t)v6, v9);
  return swift_endAccess(v14);
}

uint64_t sub_100A3D410(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v27[5];

  v2 = v1;
  v4 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56))(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost, 1, 1);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings) = _swiftEmptyArrayStorage;
  v8 = OBJC_IVAR____TtC9MusicCore11BagProvider_lock;
  v9 = type metadata accessor for UnfairLock();
  swift_allocObject(v9, 24, 7);
  *(_QWORD *)(v1 + v8) = UnfairLock.init()();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers) = _swiftEmptyArrayStorage;
  v10 = OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers;
  v11 = type metadata accessor for BagProvider.Observer();
  *(_QWORD *)(v2 + v10) = WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v11);
  if (qword_1011D1D40 != -1)
    swift_once(&qword_1011D1D40, sub_100A68C6C);
  Logger.init(_:)((id)static OS_os_log.musicBag);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = 0;
  v12 = OBJC_IVAR____TtC9MusicCore11BagProvider_retry;
  *(_QWORD *)(v2 + v12) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()), "init");
  *(_QWORD *)(v2 + 16) = a1;
  v13 = v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_result;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 2;
  v14 = a1;
  sub_100A3D260(v6);
  Signpost.begin(dso:)((uint64_t)&_mh_execute_header);
  sub_1008F157C((uint64_t)v6);
  sub_100A3CF60(0);
  type metadata accessor for Whitetail.Binding();
  if (qword_1011D1CF8 != -1)
    swift_once(&qword_1011D1CF8, sub_100A3E88C);
  v15 = (void *)qword_1011D64C0;
  UIScreen.Dimensions.size.getter(qword_1011D64C0);
  v27[3] = &type metadata for DistributedNotificationTrigger;
  v27[4] = &protocol witness table for DistributedNotificationTrigger;
  v27[0] = v16;
  v17 = swift_allocObject(&unk_1010F1E10, 24, 7);
  swift_weakInit(v17 + 16, v2);
  v18 = v15;
  v19 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(v27, 0, (uint64_t)sub_100A3EDF8, v17);
  v20 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings, v27, 33, 0);
  swift_retain(v19);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v19);
  specialized Array._endMutation()(v24);
  swift_endAccess(v27);
  swift_release(v19);

  return v2;
}

double sub_100A3D700(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_100A3D754();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

void sub_100A3D754()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  char v6;

  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3EE00);

  if (v6 == 1)
  {
    UnfairLock.locked<A>(_:)(sub_100A3EE40);
    __chkstk_darwin(v0);
    UnfairLock.locked<A>(_:)(sub_100A3ED44);
    v1 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v2 = Logger.logObject.getter(v1);
    v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Notification triggered to update bag: storefrontChanged", v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }

    sub_100A3CF60(1);
  }
}

void sub_100A3D8C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)();
  void *v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void *, __n128);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  id v24;
  char v25;
  char v26;
  uint64_t *v27;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for Signpost(0);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9MusicCore11BagProvider_lock);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3ED30);
  if ((v31 & 1) != 0)
  {
    sub_100A3CF60(1);
    v11 = sub_100A3EE80;
LABEL_23:
    UnfairLock.locked<A>(_:)(v11);
    return;
  }
  v12 = a1;
  if (!a1)
  {
    if (!a2)
      goto LABEL_25;
    swift_errorRetain(a2);
    v12 = (void *)_convertErrorToNSError(_:)(a2);
    v10 = swift_errorRelease(a2);
  }
  v31 = (uint64_t)_swiftEmptyArrayStorage;
  __chkstk_darwin(v10);
  v28[-4] = a3;
  v28[-3] = v12;
  v25 = v13;
  v26 = 1;
  v27 = &v31;
  v14 = a1;
  UnfairLock.locked<A>(_:)(sub_100A3ED44);
  if (!a1)
  {
LABEL_22:
    swift_bridgeObjectRelease(v31);
    sub_100A3D260(v8);
    Signpost.end(dso:)((uint64_t)&_mh_execute_header);

    sub_1008F157C((uint64_t)v8);
    v11 = sub_100A3ED58;
    goto LABEL_23;
  }
  v15 = v31;
  v29 = v8;
  v30 = v9;
  v28[1] = (char *)&type metadata for () + 8;
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v23 = v31;
    else
      v23 = v31 & 0xFFFFFFFFFFFFFF8;
    v24 = v12;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (v16)
      goto LABEL_9;
    goto LABEL_21;
  }
  v16 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  v17 = v12;
  swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_21:

    swift_bridgeObjectRelease(v15);
    v8 = v29;
    goto LABEL_22;
  }
LABEL_9:
  if (v16 >= 1)
  {
    v18 = 0;
    while ((v15 & 0xC000000000000001) == 0)
    {
      v19 = *(_QWORD *)(v15 + 8 * v18 + 32);
      swift_retain(v19);
      v20 = *(void (**)(void *, __n128))(v19 + 24);
      if (v20)
        goto LABEL_16;
LABEL_11:
      ++v18;
      swift_release(v19);
      if (v16 == v18)
        goto LABEL_21;
    }
    v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v15);
    v20 = *(void (**)(void *, __n128))(v19 + 24);
    if (!v20)
      goto LABEL_11;
LABEL_16:
    v21 = *(_QWORD *)(v19 + 32);
    v22 = swift_retain(v21);
    v20(v12, v22);
    sub_10004BA30((uint64_t)v20, v21);
    goto LABEL_11;
  }
  __break(1u);
LABEL_25:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E4D650, "MusicCore/BagProvider.swift", 27, 2, 149, 0);
  __break(1u);
}

uint64_t sub_100A3DBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers, v5, 33, 0);
  v3 = sub_100007E8C(&qword_1011D6748);
  WeakArray.remove(_:)(a2, v3);
  return swift_endAccess(v5);
}

double sub_100A3DC50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t Strong;
  char *v19;
  double result;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8))
  {
    v12 = v2;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      *(_DWORD *)v15 = 134217984;
      *(_QWORD *)(v15 + 4) = objc_msgSend(v12, "code");

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error retrieving bag: %ld", (uint8_t *)v15, 0xCu);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {

    }
    v16 = *(char **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_retry);
    v17 = &v16[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider];
    Strong = swift_weakLoadStrong(&v16[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider]);
    swift_weakAssign(v17, v1);
    v19 = v16;
    swift_retain(v1);
    sub_100A3E120(Strong);

    swift_release(Strong);
    v11 = v1;
    goto LABEL_11;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    v3 = v2;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully loaded a bag from iTunesCloud", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v7 = *(char **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_retry);
    v8 = &v7[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider];
    v9 = swift_weakLoadStrong(&v7[OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider]);
    swift_weakAssign(v8, 0);
    v10 = v7;
    sub_100A3E120(v9);

    v11 = v9;
LABEL_11:
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_100A3DE90(uint64_t a1, void *a2, char a3, char a4, uint64_t *a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[24];
  char v21[24];

  v8 = a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  *(_QWORD *)v8 = a2;
  *(_BYTE *)(v8 + 8) = a3;
  v10 = a2;

  sub_100A3DC50();
  if ((a4 & 1) != 0)
  {
    v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers);
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers, v21, 0, 0);
    v12 = *v11;
    v13 = type metadata accessor for BagProvider.Observer();
    v14 = swift_bridgeObjectRetain();
    v17 = WeakArray.allElements.getter(v14, v13, v15, v16);
    swift_bridgeObjectRelease(v12);
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers, v20, 0, 0);
    v18 = swift_bridgeObjectRetain();
    sub_100A05644(v18);
    v19 = *a5;
    *a5 = v17;
    swift_bridgeObjectRelease(v19);
  }
}

uint64_t BagProvider.Observer.deinit()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3E048);
    swift_release();
  }
  swift_weakDestroy(v0 + 16);
  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t sub_100A3E048()
{
  uint64_t v0;

  return sub_100A3DBD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t BagProvider.Observer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A3EE98);
    swift_release();
  }
  swift_weakDestroy(v0 + 16);
  sub_10004BA30(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

void sub_100A3E120(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char **v21;
  uint64_t v22;
  os_log_type_t v23;
  id v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v25 - v9;
  v11 = v2 + OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider;
  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry_provider);
  v13 = Strong;
  if (!a1)
  {
    if (!Strong)
      return;
    swift_release(Strong);
LABEL_7:
    v14 = swift_weakLoadStrong(v11);
    swift_release(v14);
    v15 = swift_weakLoadStrong(v11);
    v16 = v15;
    if (v14)
    {
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v15 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger, v4);
        v17 = swift_release(v16);
        v18 = Logger.logObject.getter(v17);
        v19 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v18, v19))
        {
          v21 = &selRef_registerObserver_;
          goto LABEL_19;
        }
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Beginning observation to retry loading bag", v20, 2u);
        v21 = &selRef_registerObserver_;
LABEL_14:
        swift_slowDealloc(v20, -1, -1);
LABEL_19:

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        goto LABEL_20;
      }
      v21 = &selRef_registerObserver_;
    }
    else
    {
      if (v15)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v15 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger, v4);
        v22 = swift_release(v16);
        v18 = Logger.logObject.getter(v22);
        v23 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v18, v23))
        {
          v21 = &selRef_unregisterObserver_;
          v10 = v8;
          goto LABEL_19;
        }
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v23, "Stopping observation to retry loading bag", v20, 2u);
        v21 = &selRef_unregisterObserver_;
        v10 = v8;
        goto LABEL_14;
      }
      v21 = &selRef_unregisterObserver_;
    }
LABEL_20:
    v24 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    objc_msgSend(v24, *v21, v2);

    return;
  }
  if (!Strong)
    goto LABEL_7;
  swift_release(Strong);
  if (v13 != a1)
    goto LABEL_7;
}

id sub_100A3E494()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BagProvider.Retry();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t BagProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100A3E5BC(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_100A3E5BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011D64E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BagProvider.__deallocating_deinit()
{
  uint64_t v0;

  BagProvider.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A3E620()
{
  return type metadata accessor for BagProvider(0);
}

uint64_t type metadata accessor for BagProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D6550;
  if (!qword_1011D6550)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BagProvider);
  return result;
}

void sub_100A3E664(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100A3E734(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      v6[7] = "\t";
      v6[8] = &unk_100EDEB28;
      v6[9] = &unk_100EDEB28;
      v6[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 11, v6, a1 + 80);
    }
  }
}

void sub_100A3E734(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011D6560)
  {
    v2 = type metadata accessor for Signpost(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011D6560);
  }
}

uint64_t type metadata accessor for BagProvider.Retry()
{
  return objc_opt_self(_TtCC9MusicCore11BagProviderP33_D1F028703756EAFCB4E62A24E619467F5Retry);
}

uint64_t initializeBufferWithCopyOfBuffer for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t initializeWithTake for BagProvider.Result(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for BagProvider.Result()
{
  return &type metadata for BagProvider.Result;
}

void sub_100A3E874(BOOL *a1@<X8>)
{
  uint64_t v1;

  sub_100A3CD8C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

NSString sub_100A3E88C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1011D64C0 = (uint64_t)result;
  return result;
}

uint64_t sub_100A3E8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        swift_unknownObjectRelease(v6);
        if (v6 == a2)
          return v5;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(a1);
  }
  return 0;
}

uint64_t sub_100A3E9AC(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *a1;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_100A3E8C0(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(v5);
  if (v2)
    return v7;
  if ((v9 & 1) == 0)
  {
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_57;
    v9 = *a1;
    if (*a1 >> 62)
    {
LABEL_58:
      if ((v9 & 0x8000000000000000) != 0)
        v26 = v9;
      else
        v26 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v27 = _CocoaArrayWrapper.endIndex.getter(v26);
      swift_bridgeObjectRelease(v9);
      if (v10 != v27)
        goto LABEL_6;
    }
    else if (v10 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v7 + 5; ; ++i)
      {
        v9 = i - 4;
        v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
          break;
        if ((v9 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        if (v9 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_48;
        if (*(_QWORD *)(v12 + 8 * i) != a2)
          goto LABEL_11;
LABEL_31:
        v10 = i - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_49;
        v20 = *a1;
        if (*a1 >> 62)
        {
          if (v20 < 0)
            v23 = *a1;
          else
            v23 = v20 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v21 = _CocoaArrayWrapper.endIndex.getter(v23);
          swift_bridgeObjectRelease(v20);
        }
        else
        {
          v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v10 == v21)
          return v7;
      }
      v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v12);
      swift_unknownObjectRelease(v22);
      if (v22 == a2)
        goto LABEL_31;
LABEL_11:
      if (v9 == v7)
      {
LABEL_30:
        if (__OFADD__(v7++, 1))
          goto LABEL_50;
        goto LABEL_31;
      }
      v10 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
        v10 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v14 = *(_QWORD *)(v10 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v7 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v13 = *(_QWORD *)(v10 + 8 * v7 + 32);
        swift_retain();
        if ((v10 & 0xC000000000000001) == 0)
          goto LABEL_16;
      }
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v10);
      v10 = *a1;
LABEL_19:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v10);
      *a1 = v10;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_10072E154(v10);
        *a1 = v10;
      }
      *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v14;
      swift_release();
      specialized Array._endMutation()(v16);
      v10 = *a1;
      v17 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = v10;
      if (!v17 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
      {
        v10 = sub_10072E154(v10);
        *a1 = v10;
      }
      if ((v9 & 0x8000000000000000) != 0)
        goto LABEL_55;
      if (v9 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      specialized Array._endMutation()(v18);
      goto LABEL_30;
    }
    return v7;
  }
  v24 = *a1;
  if (!((unint64_t)v24 >> 62))
    return *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v24 < 0)
    v28 = v24;
  else
    v28 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v24);
  return v29;
}

void sub_100A3ECC4(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) & 1) == 0
     && *(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) != 1;
}

void sub_100A3ECFC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 1;
}

void sub_100A3ED10(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100A3D8C8(a1, a2, v2);
}

uint64_t sub_100A3ED18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A3ED28(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100A3ED30(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload);
}

void sub_100A3ED44()
{
  sub_100A3EE5C();
}

void sub_100A3ED58()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 0;
}

uint64_t sub_100A3ED68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D64E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A3EDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D64E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_100A3EDF8()
{
  uint64_t v0;

  return sub_100A3D700(v0);
}

id sub_100A3EE00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return v2;
}

void sub_100A3EE40()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = *(_BYTE *)(v0
                                                                                  + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching);
}

void sub_100A3EE5C()
{
  uint64_t v0;

  sub_100A3DE90(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33), *(uint64_t **)(v0 + 40));
}

void sub_100A3EE80()
{
  sub_100A3ED58();
}

uint64_t sub_100A3EE98()
{
  return sub_100A3E048();
}

uint64_t TabIdentifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A3EEE0 + 4 * byte_100EDEB70[a1]))(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_100A3EEE0()
{
  return 0x6F4E6E657473696CLL;
}

uint64_t sub_100A3EEFC()
{
  return 0x6573776F7262;
}

uint64_t sub_100A3EF10()
{
  return 0x6F69646172;
}

uint64_t sub_100A3EF24()
{
  return 0x686372616573;
}

uint64_t sub_100A3EF38()
{
  return 0x736F65646976;
}

_UNKNOWN **static TabIdentifier.allCases.getter()
{
  return &off_1010E6F28;
}

void sub_100A3EF5C(char *a1)
{
  sub_1009A4BA8(*a1);
}

void sub_100A3EF68()
{
  char *v0;

  sub_100A37A00(*v0);
}

void sub_100A3EF70()
{
  __asm { BR              X10 }
}

uint64_t sub_100A3EFAC(uint64_t a1)
{
  String.hash(into:)(a1, 0x6F4E6E657473696CLL, 0xE900000000000077);
  return swift_bridgeObjectRelease(0xE900000000000077);
}

void sub_100A3F02C(uint64_t a1)
{
  char *v1;

  sub_100A37DFC(a1, *v1);
}

unint64_t sub_100A3F034@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A3F060()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100A3F090 + 4 * byte_100EDEB7C[*v0]))();
}

void sub_100A3F090(_QWORD *a1@<X8>)
{
  *a1 = 0x6F4E6E657473696CLL;
  a1[1] = 0xE900000000000077;
}

void sub_100A3F0B0(_QWORD *a1@<X8>)
{
  *a1 = 0x6573776F7262;
  a1[1] = 0xE600000000000000;
}

void sub_100A3F0C8(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69646172;
  a1[1] = 0xE500000000000000;
}

void sub_100A3F0E0(_QWORD *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void sub_100A3F0F8(_QWORD *a1@<X8>)
{
  *a1 = 0x736F65646976;
  a1[1] = 0xE600000000000000;
}

void sub_100A3F110(_QWORD *a1@<X8>)
{
  *a1 = &off_1010E6F28;
}

void sub_100A3F120(char *a1)
{
  sub_1009A4D58(*a1);
}

void sub_100A3F12C()
{
  char *v0;

  sub_100A38024(0, *v0);
}

void sub_100A3F138()
{
  __asm { BR              X10 }
}

uint64_t sub_100A3F174(uint64_t a1)
{
  String.hash(into:)(a1, 0x756F795F726F66, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100A3F208(uint64_t a1)
{
  char *v1;

  sub_100A38024(a1, *v1);
}

unint64_t sub_100A3F210@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100A3F300(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A3F23C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100A3F26C + 4 * byte_100EDEB89[*v0]))();
}

void sub_100A3F26C(_QWORD *a1@<X8>)
{
  *a1 = 0x756F795F726F66;
  a1[1] = 0xE700000000000000;
}

void sub_100A3F288(_QWORD *a1@<X8>)
{
  *a1 = 0x6E5F6E657473696CLL;
  a1[1] = 0xEA0000000000776FLL;
}

void sub_100A3F2A8(_QWORD *a1@<X8>)
{
  *a1 = 0x6573776F7262;
  a1[1] = 0xE600000000000000;
}

void sub_100A3F2C0(_QWORD *a1@<X8>)
{
  *a1 = 0x6F69646172;
  a1[1] = 0xE500000000000000;
}

unint64_t sub_100A3F300(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E52A8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

unint64_t _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6E78, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t sub_100A3F394()
{
  unint64_t result;

  result = qword_1011D6760;
  if (!qword_1011D6760)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011D6760);
  }
  return result;
}

unint64_t sub_100A3F3DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6768;
  if (!qword_1011D6768)
  {
    v1 = sub_100044B54(&qword_1011D6770);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D6768);
  }
  return result;
}

unint64_t sub_100A3F42C()
{
  unint64_t result;

  result = qword_1011D6778;
  if (!qword_1011D6778)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011D6778);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TabIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100A3F4BC + 4 * byte_100EDEB95[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100A3F4F0 + 4 * byte_100EDEB90[v4]))();
}

uint64_t sub_100A3F4F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3F4F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A3F500);
  return result;
}

uint64_t sub_100A3F50C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A3F514);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100A3F518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3F520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TabIdentifier()
{
  return &type metadata for TabIdentifier;
}

uint64_t storeEnumTagSinglePayload for BagTabIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100A3F588 + 4 * byte_100EDEB9F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100A3F5BC + 4 * byte_100EDEB9A[v4]))();
}

uint64_t sub_100A3F5BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3F5C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A3F5CCLL);
  return result;
}

uint64_t sub_100A3F5D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A3F5E0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100A3F5E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3F5EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BagTabIdentifier()
{
  return &type metadata for BagTabIdentifier;
}

unint64_t sub_100A3F60C()
{
  unint64_t result;

  result = qword_1011D6780;
  if (!qword_1011D6780)
  {
    result = swift_getWitnessTable(&unk_100EDED5C, &type metadata for BagTabIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011D6780);
  }
  return result;
}

uint64_t Playlist.hasActiveCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v20;

  v0 = sub_100007E8C(&qword_1011D67B0);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011D67B8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v20 - v8;
  Playlist.collaboration.getter(v7);
  v10 = type metadata accessor for Playlist.Collaboration(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v2, &qword_1011D67B0);
    v12 = type metadata accessor for Playlist.Collaborator.Status(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
LABEL_13:
    v18 = 0;
    goto LABEL_14;
  }
  Playlist.Collaboration.collaboratorStatus.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  v13 = type metadata accessor for Playlist.Collaborator.Status(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    goto LABEL_13;
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011D67B8);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v6, v13);
  if (v15 != enum case for Playlist.Collaborator.Status.host(_:)
    && v15 != enum case for Playlist.Collaborator.Status.joined(_:)
    && v15 != enum case for Playlist.Collaborator.Status.pending(_:))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    goto LABEL_13;
  }
  v18 = 1;
LABEL_14:
  sub_10004FF60((uint64_t)v9, &qword_1011D67B8);
  return v18;
}

uint64_t static Collaboration.Setup.contextualImageName(active:)(char a1)
{
  if ((a1 & 1) != 0)
    return 0x322E6E6F73726570;
  else
    return 0xD000000000000011;
}

uint64_t sub_100A3F884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3F8DC(a1, a2, a3, (uint64_t)&unk_1010F24D8, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1011D6BB0);
}

uint64_t sub_100A3F8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3FA48(a1, a2, a3, (uint64_t)&unk_1010F26E0, (uint64_t *)&unk_1011D6750, (uint64_t)&unk_1011D6CC0);
}

uint64_t sub_100A3F8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3F8DC(a1, a2, a3, (uint64_t)&unk_1010F2488, (uint64_t)&type metadata for Bool, (uint64_t)&unk_1011D6B88);
}

uint64_t sub_100A3F8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10004FF60(a1, (uint64_t *)&unk_1011D8CF0);
    v14 = 7168;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15, v18);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v21 = v20;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v14 = v22 | 0x1C00;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  if (v21 | v19)
  {
    v26[0] = 0;
    v26[1] = 0;
    v24 = v26;
    v26[2] = v19;
    v26[3] = v21;
  }
  else
  {
    v24 = 0;
  }
  return swift_task_create(v14, v24, a5, a6, v23);
}

uint64_t sub_100A3FA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3FA48(a1, a2, a3, (uint64_t)&unk_1010F24B0, &qword_1011D6BA0, (uint64_t)&unk_1011D6B98);
}

uint64_t sub_100A3FA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10004FF60(a1, (uint64_t *)&unk_1011D8CF0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v16, v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v22 = v21;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v23 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v23 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v20 = 0;
  v22 = 0;
LABEL_6:
  v24 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = sub_100007E8C(a5);
  if (v22 | v20)
  {
    v28[0] = 0;
    v28[1] = 0;
    v26 = v28;
    v28[2] = v20;
    v28[3] = v22;
  }
  else
  {
    v26 = 0;
  }
  return swift_task_create(v15, v26, v25, a6, v24);
}

uint64_t sub_100A3FBA4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9, *(_QWORD *)(a2 + 40));
    v4 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_100A3FF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for AudioVariant(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_100048748(&qword_1011D6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_100A400F4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[10];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9, *(_QWORD *)(a2 + 40));
    v4 = Library.Menu.Identifier.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_100A40458(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(&v24, *(_QWORD *)(a2 + 40));
  v4 = SortOptions.ContentType.identifier.getter(a1);
  String.hash(into:)(&v24, v4, v5);
  swift_bridgeObjectRelease();
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  while (1)
  {
    v10 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v8);
    v11 = v10 >> 6;
    if (v10 >> 6)
      break;
    if (a1 >= 0x40u)
    {
      Hasher.init(_seed:)(&v24, 0);
      v21 = v26;
      v22 = v27;
      v23 = v28;
      v19 = v24;
      v20 = v25;
      v14 = (v10 & 1) == 0;
      if ((v10 & 1) != 0)
        v15 = 0xD000000000000011;
      else
        v15 = 0x646956636973756DLL;
      v16 = 0xEB00000000736F65;
      v13 = 0x8000000100E4D9A0;
      goto LABEL_34;
    }
    if (((v10 ^ a1) & 1) == 0)
      return 1;
LABEL_4:
    v8 = (v8 + 1) & v9;
    if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      return 0;
  }
  if (v11 == 1)
  {
    if ((a1 & 0xC0) != 0x40)
    {
      Hasher.init(_seed:)(&v24, 0);
      v21 = v26;
      v22 = v27;
      v23 = v28;
      v19 = v24;
      v20 = v25;
      __asm { BR              X9 }
    }
    if (((v10 ^ a1) & 0x3F) == 0)
      return 1;
    goto LABEL_4;
  }
  if (v11 != 3)
  {
    Hasher.init(_seed:)(&v24, 0);
    v21 = v26;
    v22 = v27;
    v23 = v28;
    v19 = v24;
    v20 = v25;
    if ((v10 & 1) != 0)
      v15 = 0xD000000000000018;
    else
      v15 = 0x7473696C79616C70;
    if ((v10 & 1) != 0)
      v17 = 0x8000000100E4D960;
    else
      v17 = 0xE900000000000073;
    goto LABEL_37;
  }
  if (v10 != 192 || a1 != 192)
  {
    Hasher.init(_seed:)(&v24, 0);
    v21 = v26;
    v22 = v27;
    v23 = v28;
    v19 = v24;
    v20 = v25;
    v12 = 0x7473696C79616C70;
    if (v10 == 193)
      v12 = 0x736569766F6DLL;
    v13 = 0xEE006C6961746544;
    if (v10 == 193)
      v13 = 0xE600000000000000;
    v14 = v10 == 192;
    if (v10 == 192)
      v15 = 0x73676E6F73;
    else
      v15 = v12;
    v16 = 0xE500000000000000;
LABEL_34:
    if (v14)
      v17 = v16;
    else
      v17 = v13;
LABEL_37:
    String.hash(into:)(&v19, v15, v17);
    swift_bridgeObjectRelease();
    Hasher._finalize()();
    Hasher.init(_seed:)(&v19, 0);
    __asm { BR              X8 }
  }
  return 1;
}

void sub_100A409D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for Collaboration.ArtworkCachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000027;
  *(_QWORD *)(v1 + 24) = 0x8000000100E4A790;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 100, v3, v1);

  static Collaboration.artworkCaching = v1;
}

uint64_t *Collaboration.artworkCaching.unsafeMutableAddressor()
{
  if (qword_1011D1D00 != -1)
    swift_once(&qword_1011D1D00, sub_100A409D4);
  return &static Collaboration.artworkCaching;
}

double static Collaboration.artworkCaching.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_1011D1D00 != -1)
    swift_once(&qword_1011D1D00, sub_100A409D4);
  swift_beginAccess(&static Collaboration.artworkCaching, v1, 0, 0);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double static Collaboration.artworkCaching.setter(uint64_t a1)
{
  double result;
  _BYTE v3[24];

  if (qword_1011D1D00 != -1)
    swift_once(&qword_1011D1D00, sub_100A409D4);
  swift_beginAccess(&static Collaboration.artworkCaching, v3, 1, 0);
  static Collaboration.artworkCaching = a1;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t (*static Collaboration.artworkCaching.modify(uint64_t a1))(_QWORD)
{
  if (qword_1011D1D00 != -1)
    swift_once(&qword_1011D1D00, sub_100A409D4);
  swift_beginAccess(&static Collaboration.artworkCaching, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_100A40BFC()
{
  id result;

  result = sub_100A40C18();
  static Collaboration.requiredProperties = (uint64_t)result;
  return result;
}

id sub_100A40C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  id v23;
  id v24;
  Class v25;
  Class v26;
  id v27;
  _BYTE v29[56];

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v1 = swift_allocObject(v0, 272, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EBE9C0;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistIsOwner);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEditorialArtwork);
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistType);
  *(_QWORD *)(v1 + 104) = v6;
  *(_QWORD *)(v1 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistUserEditableComponents);
  *(_QWORD *)(v1 + 120) = v7;
  *(_QWORD *)(v1 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistVisiblePlaylist);
  *(_QWORD *)(v1 + 136) = v8;
  *(_QWORD *)(v1 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCuratorPlaylist);
  *(_QWORD *)(v1 + 152) = v9;
  *(_QWORD *)(v1 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistSubscribed);
  *(_QWORD *)(v1 + 168) = v10;
  *(_QWORD *)(v1 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistIsCollaborative);
  *(_QWORD *)(v1 + 184) = v11;
  *(_QWORD *)(v1 + 192) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaboratorStatus);
  *(_QWORD *)(v1 + 200) = v12;
  *(_QWORD *)(v1 + 208) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaborationMode);
  *(_QWORD *)(v1 + 216) = v13;
  *(_QWORD *)(v1 + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaboratorPermissions);
  *(_QWORD *)(v1 + 232) = v14;
  *(_QWORD *)(v1 + 240) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaborationInvitationURL);
  *(_QWORD *)(v1 + 248) = v15;
  *(_QWORD *)(v1 + 256) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCollaborationInvitationURLExpirationDate);
  *(_QWORD *)(v1 + 264) = v16;
  v17 = sub_100007E8C((uint64_t *)&unk_1011D6870);
  inited = swift_initStackObject(v17, v29);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
  *(_QWORD *)(inited + 40) = v19;
  v20 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v20 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
  *(_QWORD *)(v20 + 40) = v21;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v23 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v23;
  sub_100A135A0(inited);
  v24 = objc_allocWithZone((Class)MPPropertySet);
  v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10004A07C(0, (unint64_t *)&qword_1011D6EB0, MPPropertySet_ptr);
  v26 = Dictionary._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v24, "initWithProperties:relationships:", v25, v26, swift_bridgeObjectRelease().n128_f64[0]);

  return v27;
}

uint64_t *Collaboration.requiredProperties.unsafeMutableAddressor()
{
  if (qword_1011D1D08 != -1)
    swift_once(&qword_1011D1D08, sub_100A40BFC);
  return &static Collaboration.requiredProperties;
}

id static Collaboration.requiredProperties.getter()
{
  _BYTE v1[24];

  if (qword_1011D1D08 != -1)
    swift_once(&qword_1011D1D08, sub_100A40BFC);
  swift_beginAccess(&static Collaboration.requiredProperties, v1, 0, 0);
  return (id)static Collaboration.requiredProperties;
}

void static Collaboration.requiredProperties.setter(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  if (qword_1011D1D08 != -1)
    swift_once(&qword_1011D1D08, sub_100A40BFC);
  swift_beginAccess(&static Collaboration.requiredProperties, v3, 1, 0);
  v2 = (void *)static Collaboration.requiredProperties;
  static Collaboration.requiredProperties = a1;

}

uint64_t (*static Collaboration.requiredProperties.modify(uint64_t a1))(_QWORD)
{
  if (qword_1011D1D08 != -1)
    swift_once(&qword_1011D1D08, sub_100A40BFC);
  swift_beginAccess(&static Collaboration.requiredProperties, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t static Collaboration.Setup.imageName(active:)(char a1)
{
  if ((a1 & 1) != 0)
    return 0x322E6E6F73726570;
  else
    return 0xD000000000000016;
}

void Collaboration.Error.errorDescription.getter(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_100A410F8()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[8];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  swift_errorRetain(v0);
  _StringGuts.grow(_:)(25);
  v2._object = (void *)0x8000000100E4D760;
  v2._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v2);
  v5 = v0;
  v3 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  _print_unlocked<A, B>(_:_:)(&v5, v6, v3, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  sub_10044BB60(v0, v1, 0);
  return v6[0];
}

uint64_t sub_100A41270()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)&loc_100A4125C + 4 * byte_100EDEDD2[v0]))(0x636120726F6E694DLL, 0xED0000746E756F63);
}

void sub_100A412A8()
{
  JUMPOUT(0x100A4125CLL);
}

void sub_100A412C4()
{
  JUMPOUT(0x100A4125CLL);
}

double static Collaboration.Error.tapToRadarAlert()()
{
  uint64_t v0;
  double result;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[56];

  v0 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)&result = __chkstk_darwin(v0).n128_u64[0];
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1011D24D8 != -1)
    swift_once(&qword_1011D24D8, sub_100B63A4C);
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    v4 = sub_100A136B8((uint64_t)_swiftEmptyArrayStorage);
    sub_100A57950(0xD00000000000001FLL, 0x8000000100E4D810, 0xD000000000000032, 0x8000000100E4BA90, (uint64_t)_swiftEmptyArrayStorage, v4, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v8);
    swift_bridgeObjectRelease(v4);
    v5 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
    v6 = swift_allocObject(&unk_1010F20D0, 88, 7);
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = 0;
    sub_100065228((uint64_t)v8, v6 + 32, &qword_1011D67D8);
    sub_100A3FA48((uint64_t)v3, (uint64_t)&unk_1011D67E0, v6, (uint64_t)&unk_1010F26E0, (uint64_t *)&unk_1011D6750, (uint64_t)&unk_1011D6CC0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100A4151C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch(sub_100A41534, 0, 0);
}

uint64_t sub_100A41534()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  sub_100065228(*(_QWORD *)(v0 + 80), v0 + 16, &qword_1011D67D8);
  if (*(_QWORD *)(v0 + 24) && (v1 = *(int **)(v0 + 56)) != 0)
  {
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_100A415CC;
    return v4();
  }
  else
  {
    **(_BYTE **)(v0 + 72) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A415CC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_100A41620, 0, 0);
}

uint64_t sub_100A41620()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 72) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100A41630()
{
  uint64_t v0;

  Collaboration.Error.errorDescription.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t Collaboration.Object.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9.n128_f64[0] = (*(double (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = Playlist.name.getter(v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v11 = *v8;
    v12 = objc_msgSend(*v8, "name");
    if (v12)
    {
      v13 = v12;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);

    }
    else
    {

      return 0;
    }
  }
  return v10;
}

uint64_t Collaboration.Object.storeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t ObjectType;
  id v19;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
  {
    v13 = *v8;
    objc_opt_self(MPModelGenericObject);
    v14 = (void *)swift_dynamicCastObjCClass(v13);
    if (v14)
    {
      v15 = objc_msgSend(v14, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v16 = (void *)swift_dynamicCastObjCClass(v13);
      if (!v16)
        goto LABEL_10;
      v15 = objc_msgSend(v16, "innerObject");
    }
    v17 = v15;
    if (v17)
    {
LABEL_11:
      ObjectType = swift_getObjectType();
      v19 = objc_msgSend(v17, "identifiers");
      v10 = sub_100A15048(ObjectType, 3, 2u, v19);

      return v10;
    }
LABEL_10:
    v17 = v13;
    goto LABEL_11;
  }
  v9 = (*(uint64_t (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
  v10 = Playlist.catalogID.getter(v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v12)
    return 0;
  return v10;
}

uint64_t Collaboration.Object.hasActiveCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  char active;
  id v10;
  char *v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    active = Playlist.hasActiveCollaboration.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = *v8;
    v11 = (char *)objc_msgSend(*v8, "collaboratorStatus");

    active = (unint64_t)(v11 - 2) < 3;
  }
  return active & 1;
}

BOOL MPModelPlaylist.hasActiveCollaboration.getter()
{
  void *v0;

  return (char *)objc_msgSend(v0, "collaboratorStatus") - 2 < (char *)3;
}

uint64_t Collaboration.Object.isOpenInvitation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011D67B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v9);
  v11 = (id *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v1, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload(v11, v9) == 1)
  {
    v12 = (*(uint64_t (**)(char *, id *, uint64_t))(v6 + 32))(v8, v11, v5);
    Playlist.collaboration.getter(v12);
    v13 = type metadata accessor for Playlist.Collaboration(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_10004FF60((uint64_t)v4, &qword_1011D67B0);
      v15 = 0;
    }
    else
    {
      v15 = Playlist.Collaboration.isOpenInvitation.getter();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
    }
  }
  else
  {
    v16 = *v11;
    v17 = objc_msgSend(*v11, "collaborationMode");

    v15 = v17 == (id)1;
  }
  return v15 & 1;
}

uint64_t Playlist.Collaboration.isOpenInvitation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  int v19;
  uint64_t *v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v0 = type metadata accessor for Playlist.Collaboration.InvitationMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D67E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D67F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v25 - v15;
  Playlist.Collaboration.invitationMode.getter(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaboration.InvitationMode.open(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v17 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10004A160((uint64_t)v16, (uint64_t)v6, &qword_1011D67F0);
  sub_10004A160((uint64_t)v12, v17, &qword_1011D67F0);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v6, 1, v0) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011D67F0);
    sub_10004FF60((uint64_t)v16, &qword_1011D67F0);
    v19 = v18(v17, 1, v0);
    if (v19 == 1)
      v20 = &qword_1011D67F0;
    else
      v20 = &qword_1011D67E8;
    if (v19 == 1)
      v21 = -1;
    else
      v21 = 0;
  }
  else
  {
    sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011D67F0);
    if (v18(v17, 1, v0) == 1)
    {
      sub_10004FF60((uint64_t)v12, &qword_1011D67F0);
      sub_10004FF60((uint64_t)v16, &qword_1011D67F0);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      v21 = 0;
      v20 = &qword_1011D67E8;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      v22 = sub_100048748((unint64_t *)&unk_1011D67F8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaboration.InvitationMode, (uint64_t)&protocol conformance descriptor for Playlist.Collaboration.InvitationMode);
      v21 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v3, v0, v22);
      v23 = *(void (**)(char *, uint64_t))(v1 + 8);
      v23(v3, v0);
      v20 = &qword_1011D67F0;
      sub_10004FF60((uint64_t)v12, &qword_1011D67F0);
      sub_10004FF60((uint64_t)v16, &qword_1011D67F0);
      v23(v9, v0);
    }
  }
  sub_10004FF60((uint64_t)v6, v20);
  return v21 & 1;
}

uint64_t Collaboration.Object.collaborationURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D67B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v14);
  v16 = (id *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v17 = (*(uint64_t (**)(char *, id *, uint64_t))(v8 + 32))(v10, v16, v7);
    Playlist.collaboration.getter(v17);
    v18 = type metadata accessor for Playlist.Collaboration(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_10004FF60((uint64_t)v6, &qword_1011D67B0);
      v20 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v6, v18);
    }
  }
  else
  {
    v22 = *v16;
    v23 = objc_msgSend(*v16, "collaborationInvitationURL");
    if (v23)
    {
      v24 = v23;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

      v25 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 0, 1, v25);
    }
    else
    {

      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v13, 1, 1, v26);
    }
    return sub_100065228((uint64_t)v13, a1, &qword_1011D2AE0);
  }
}

void Collaboration.Object.artwork.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v8);
  v10 = (void **)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v11 = (*(uint64_t (**)(char *, void **, uint64_t))(v5 + 32))(v7, v10, v4);
    Playlist.artwork.getter(v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v12 = *v10;
    v13 = MPModelPlaylist.preferredArtworkCatalog.getter();
    if (v13)
    {
      Artwork.init(_:)(v13);

      v14 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 0, 1, v14);
    }
    else
    {
      v15 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);

    }
  }
}

void Collaboration.Object.lpImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void (*v14)(char *, void **, uint64_t);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  uint64_t v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  char *v47;
  char v48[24];
  void **aBlock;
  uint64_t v50;
  double (*v51)(uint64_t, void *, uint64_t, uint64_t);
  void *v52;
  void *v53;
  uint64_t v54;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v47 = (char *)&v45 - v6;
  v7 = type metadata accessor for UTType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v11);
  v13 = (void **)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_100A4BA84(v0, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    v14 = *(void (**)(char *, void **, uint64_t))(v2 + 32);
    v14(v47, v13, v1);
    v16 = static UTType.png.getter(v15);
    UTType.identifier.getter(v16);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19 = String._bridgeToObjectiveC()();
    v20 = swift_bridgeObjectRelease(v18);
    v21 = v47;
    (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, v47, v1, v20);
    v22 = *(unsigned __int8 *)(v2 + 80);
    v23 = (v22 + 16) & ~v22;
    v24 = swift_allocObject(&unk_1010F20F8, v23 + v3, v22 | 7);
    v14((char *)(v24 + v23), (void **)v4, v1);
    v53 = sub_100A4BB28;
    v54 = v24;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_100A42A38;
    v52 = &unk_1010F2110;
    v25 = _Block_copy(&aBlock);
    *(_QWORD *)&v26 = swift_release().n128_u64[0];
    v27 = v46;
    objc_msgSend(v46, "registerItemForTypeIdentifier:loadHandler:", v19, v25, v26);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v21, v1);
  }
  else
  {
    v28 = v7;
    v29 = v46;
    v30 = *v13;
    v31 = MPModelPlaylist.preferredArtworkCatalog.getter();
    if (v31)
    {
      v32 = v31;
      if (qword_1011D1D00 != -1)
        swift_once(&qword_1011D1D00, sub_100A409D4);
      swift_beginAccess(&static Collaboration.artworkCaching, v48, 0, 0);
      v33 = static Collaboration.artworkCaching;
      v34 = swift_retain();
      v35 = static UTType.png.getter(v34);
      UTType.identifier.getter(v35);
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
      v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v37);
      v39 = swift_allocObject(&unk_1010F2148, 32, 7);
      *(_QWORD *)(v39 + 16) = v32;
      *(_QWORD *)(v39 + 24) = v33;
      v53 = sub_100A4BBD0;
      v54 = v39;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_100A42A38;
      v52 = &unk_1010F2160;
      v40 = _Block_copy(&aBlock);
      swift_retain();
      v41 = v32;
      v27 = v29;
      objc_msgSend(v29, "registerItemForTypeIdentifier:loadHandler:", v38, v40, swift_release().n128_f64[0]);
      _Block_release(v40);

      swift_release();
    }
    else
    {

      v27 = v29;
    }
  }
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v42);

  if (v43)
  {
    v44 = objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithPlatformImage:", v43);

    objc_msgSend(objc_allocWithZone((Class)LPImage), "initWithItemProvider:properties:placeholderImage:", v27, 0, v44);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A427CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  if (result)
  {
    v9 = result;
    swift_retain();
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(a5, "setCacheIdentifier:forCacheReference:", v10, a6);

    objc_msgSend(a5, "setFittingSize:", 300.0, 300.0);
    objc_msgSend(a5, "setDestinationScale:", 0.0);
    v11 = swift_allocObject(&unk_1010F2618, 32, 7);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = a2;
    v12 = swift_allocObject(&unk_1010F2640, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_100A4DCE0;
    *(_QWORD *)(v12 + 24) = v11;
    v14[4] = sub_100A4DCEC;
    v14[5] = v12;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10004E2F4;
    v14[3] = &unk_1010F2658;
    v13 = _Block_copy(v14);
    sub_100048AAC(v9, a2);
    swift_retain();
    objc_msgSend(a5, "requestImageWithCompletion:", v13, swift_release().n128_f64[0]);
    _Block_release(v13);
    swift_release();
    return sub_10004BA30(v9, a2);
  }
  return result;
}

void sub_100A4294C(void *a1, char a2, void (*a3)(Class, _QWORD))
{
  NSData *v5;
  Class isa;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;

  if ((a2 & 1) != 0)
  {
    v11 = a1;
    v10 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    swift_willThrowTypedImpl(&v11, v10, &protocol self-conformance witness table for Error);
    a3(0, 0);
  }
  else
  {
    v5 = UIImagePNGRepresentation((UIImage *)a1);
    isa = (Class)v5;
    if (v5)
    {
      v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000652DC(v7, v9);
    }
    a3(isa, 0);
    swift_unknownObjectRelease(isa);
    sub_1000652D0(a1, 0);
  }
}

double sub_100A42A38(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  void (*v6)(void *, uint64_t, uint64_t, uint64_t, __n128);
  void *v7;
  uint64_t v8;
  __n128 v9;
  double result;

  v6 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(a1 + 32);
  v7 = _Block_copy(aBlock);
  if (v7)
  {
    v8 = swift_allocObject(&unk_1010F2690, 24, 7);
    *(_QWORD *)(v8 + 16) = v7;
    v7 = sub_10040FAA8;
    if (!ObjCClassMetadata)
      goto LABEL_4;
    goto LABEL_3;
  }
  v8 = 0;
  if (ObjCClassMetadata)
LABEL_3:
    ObjCClassMetadata = swift_getObjCClassMetadata(ObjCClassMetadata);
LABEL_4:
  if (a4)
    a4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  v9 = swift_retain();
  v6(v7, v8, ObjCClassMetadata, a4, v9);
  swift_bridgeObjectRelease(a4);
  sub_10004BA30((uint64_t)v7, v8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100A42B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)&result = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v8);
    v17 = *(unsigned __int8 *)(v9 + 80);
    v18 = (v17 + 32) & ~v17;
    v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject(&unk_1010F26B8, v19 + 16, v17 | 7);
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20 + v18, v11, v8);
    v21 = (_QWORD *)(v20 + v19);
    *v21 = a1;
    v21[1] = a2;
    swift_retain();
    sub_100A3F8DC((uint64_t)v15, (uint64_t)&unk_1011D6C98, v20, (uint64_t)&unk_1010F24D8, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1011D6BB0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100A42C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = sub_100007E8C(&qword_1011D6CA0);
  v6[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D6CA8);
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D6CB0);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100A42D44, 0, 0);
}

uint64_t sub_100A42D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(v1 + 56);
  Playlist.artwork.getter(a1);
  v3 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v1 + 64) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v1 + 72) = v4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10004FF60(*(_QWORD *)(v1 + 56), &qword_1011D6CB0);
    (*(void (**)(_QWORD, _QWORD))(v1 + 24))(0, 0);
    v5 = *(_QWORD *)(v1 + 48);
    v6 = *(_QWORD *)(v1 + 40);
    swift_task_dealloc(*(_QWORD *)(v1 + 56));
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v1 + 40);
    v9 = *(_QWORD *)(v1 + 48);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = type metadata accessor for Artwork.ImageFormat(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
    *(_QWORD *)(v1 + 80) = v12;
    *v12 = v1;
    v12[1] = sub_100A42E90;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 40), 0, 0, 300.0, 300.0, 1.0);
  }
}

uint64_t sub_100A42E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v2;
  v4 = (*v2)[10];
  (*v2)[11] = a1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v6 = v3[5];
    v5 = v3[6];
    swift_errorRelease(v1);
    sub_10004FF60(v6, &qword_1011D6CA0);
    sub_10004FF60(v5, &qword_1011D6CA8);
    v7 = sub_100A43030;
  }
  else
  {
    v8 = v3[8];
    v9 = v3[9];
    v11 = v3[6];
    v10 = v3[7];
    sub_10004FF60(v3[5], &qword_1011D6CA0);
    sub_10004FF60(v11, &qword_1011D6CA8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    v7 = sub_100A42F70;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100A42F70()
{
  uint64_t v0;
  NSData *v1;
  NSData *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  NSData v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = UIImagePNGRepresentation((UIImage *)*(id *)(v0 + 88));
  if (v1)
  {
    v2 = v1;
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    v6.super.isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1000652DC(v3, v5);
  }
  else
  {
    v6.super.isa = 0;
  }
  v7 = *(void **)(v0 + 88);
  (*(void (**)(Class, _QWORD))(v0 + 24))(v6.super.isa, 0);

  swift_unknownObjectRelease(v6.super.isa);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A43030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  (*(void (**)(_QWORD, _QWORD))(v0 + 24))(0, 0);
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A43094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  char v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v1 = type metadata accessor for Playlist.EditableComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D6C10);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v0, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = (*(uint64_t (**)(char *, id *, uint64_t))(v9 + 32))(v11, v14, v8);
    Playlist.editableComponents.getter(v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011D6C10);
      v16 = 0;
    }
    else
    {
      static Playlist.EditableComponents.tracklist.getter();
      v19 = sub_100048748((unint64_t *)&qword_1011D34B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v16 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v1, v19);
      v20 = *(void (**)(char *, uint64_t))(v2 + 8);
      v20(v4, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v20(v7, v1);
    }
  }
  else
  {
    v17 = *v14;
    v18 = objc_msgSend(*v14, "userEditableComponents");

    v16 = v18 & 1;
  }
  return v16 & 1;
}

id Collaboration.Object.isOwner.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = (*(uint64_t (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = Playlist.isOwner.getter(v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v10 == 2)
      return 0;
    else
      return (id)(v10 & 1);
  }
  else
  {
    v12 = *v8;
    v11 = objc_msgSend(*v8, "isOwner");

  }
  return v11;
}

uint64_t Collaboration.Object.ownerName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = (*(uint64_t (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = Playlist.curatorName.getter(v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v11 = *v8;
    v12 = objc_msgSend(*v8, "curator");
    if (v12 && (v13 = v12, v14 = objc_msgSend(v12, "name"), v13, v14))
    {
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);

    }
    else
    {

      return 0;
    }
  }
  return v10;
}

uint64_t Collaboration.Object.musicItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100A4BA84(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    v7 = type metadata accessor for Playlist(0);
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v8 + 32))(a1, v6, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  else
  {
    v10 = *v6;
    v11 = type metadata accessor for Playlist(0);
    return dispatch thunk of LegacyModelObjectConvertible.init(_:)(v10, v11, &protocol witness table for Playlist);
  }
}

uint64_t Collaboration.Object.hasUnsupportedContent.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[32] = v0;
  v2 = type metadata accessor for Playlist.Entry(0);
  v1[33] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[34] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[35] = swift_task_alloc(v4);
  v1[36] = swift_task_alloc(v4);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D6810);
  v1[37] = v5;
  v1[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D3000);
  v1[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D6820);
  v1[40] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[41] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[42] = swift_task_alloc(v9);
  v1[43] = swift_task_alloc(v9);
  v10 = sub_100007E8C(&qword_1011D6828);
  v1[44] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[45] = v11;
  v1[46] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D6830);
  v1[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D6838);
  v1[48] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v1[49] = v14;
  v1[50] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v1[51] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[52] = v16;
  v1[53] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Collaboration.Object(0);
  v1[54] = v17;
  v1[55] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100A437F8, 0, 0);
}

uint64_t sub_100A437F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD *v11;
  id v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  Class isa;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  Class v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  Class v47;
  Class v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 440);
  sub_100A4BA84(*(_QWORD *)(v0 + 256), v2);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 416);
    v3 = *(_QWORD *)(v0 + 424);
    v5 = *(_QWORD *)(v0 + 408);
    v6 = *(_QWORD *)(v0 + 376);
    v7 = *(_QWORD *)(v0 + 384);
    v8 = *(_QWORD *)(v0 + 264);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v3, *(_QWORD *)(v0 + 440), v5);
    MusicLibraryRequest.init()(v8, &protocol witness table for Playlist.Entry);
    KeyPath = swift_getKeyPath(&unk_100EDEDF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v3, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    v10 = sub_100048748(&qword_1011D6840, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v6, v7, &protocol witness table for Playlist.Entry, v10);
    swift_release();
    sub_10004FF60(v6, &qword_1011D6830);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
    *(_QWORD *)(v0 + 488) = v11;
    *v11 = v0;
    v11[1] = sub_100A44100;
    return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 384));
  }
  v53 = **(void ***)(v0 + 440);
  *(_QWORD *)(v0 + 448) = v53;
  v13 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  *(_QWORD *)(v0 + 456) = v13;
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setLabel:", v15);

  v16 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  objc_msgSend(v14, "setMediaLibrary:", v16);

  v52 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v17 = swift_allocObject(v52, 56, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100EA7AD0;
  *(_QWORD *)(v17 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
  v18 = (void *)objc_opt_self(NSUserDefaults);
  v19 = objc_msgSend(v18, "standardUserDefaults");
  strcpy((char *)(v0 + 232), "showAllTVShows");
  *(_BYTE *)(v0 + 247) = -18;
  v20 = sub_10098A8C0();
  NSUserDefaults.subscript.getter(v0 + 232, (uint64_t)&type metadata for String, v20, v0 + 152);
  if (!*(_QWORD *)(v0 + 176))
  {
    sub_10004FF60(v0 + 152, &qword_1011D7160);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v0 + 506, v0 + 152, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_8:

    v22 = v0 + 216;
    goto LABEL_9;
  }
  v21 = *(_BYTE *)(v0 + 506);

  v22 = v0 + 216;
  if ((v21 & 1) != 0)
  {
    v23 = 3;
    goto LABEL_10;
  }
LABEL_9:
  v23 = 2;
LABEL_10:
  *(_QWORD *)(v17 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v23);
  v24 = objc_msgSend(v18, "standardUserDefaults");
  strcpy((char *)(v0 + 216), "showAllTVShows");
  *(_BYTE *)(v0 + 231) = -18;
  v54 = v0 + 184;
  NSUserDefaults.subscript.getter(v22, (uint64_t)&type metadata for String, v20, v0 + 184);
  if (!*(_QWORD *)(v0 + 208))
  {
    sub_10004FF60(v54, &qword_1011D7160);
    goto LABEL_15;
  }
  if ((swift_dynamicCast(v0 + 505, v54, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_15:

    v26 = v52;
    v27 = v53;
    goto LABEL_16;
  }
  v25 = *(_BYTE *)(v0 + 505);

  v26 = v52;
  v27 = v53;
  if ((v25 & 1) == 0)
  {
LABEL_16:
    v28 = 2;
    goto LABEL_17;
  }
  v28 = 3;
LABEL_17:
  v29 = (void *)objc_opt_self(MPModelPlaylistEntry);
  v30 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v28);
  *(_QWORD *)(v17 + 48) = v30;
  specialized Array._endMutation()(v30);
  sub_100007E8C((uint64_t *)&unk_1011D6860);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v29, "kindWithKinds:", isa, swift_bridgeObjectRelease().n128_f64[0]);
  *(_QWORD *)(v0 + 464) = v32;

  v33 = (void *)objc_opt_self(MPModelPlaylist);
  v34 = v14;
  v35 = objc_msgSend(v33, "kindWithVariants:playlistEntryKind:options:", 215, v32, 0);
  objc_msgSend(v34, "setSectionKind:", v35);

  objc_msgSend(v34, "setItemKind:", v32);
  v36 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v36 + 32) = v27;
  specialized Array._endMutation()(v36);
  sub_10004A07C(0, &qword_1011D6150, MPModelObject_ptr);
  v37 = v27;
  v38 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "setScopedContainers:", v38, swift_bridgeObjectRelease().n128_f64[0]);

  v39 = sub_100007E8C((uint64_t *)&unk_1011D6870);
  inited = swift_initStackObject(v39, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(inited + 40) = v41;
  v42 = (void *)objc_opt_self(MPPropertySet);
  v43 = v34;
  *(_QWORD *)(inited + 48) = objc_msgSend(v42, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryTVEpisode);
  *(_QWORD *)(inited + 64) = v44;
  *(_QWORD *)(inited + 72) = objc_msgSend(v42, "emptyPropertySet");
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryMovie);
  *(_QWORD *)(inited + 88) = v45;
  *(_QWORD *)(inited + 96) = objc_msgSend(v42, "emptyPropertySet");
  sub_100A135A0(inited);
  v46 = objc_allocWithZone((Class)MPPropertySet);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  sub_10004A07C(0, (unint64_t *)&qword_1011D6EB0, MPPropertySet_ptr);
  v48 = Dictionary._bridgeToObjectiveC()().super.isa;
  v49 = objc_msgSend(v46, "initWithProperties:relationships:", v47, v48, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v43, "setItemProperties:", v49);
  v50 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 472) = v50;
  *(_QWORD *)(v50 + 16) = v43;
  v51 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 480) = v51;
  *v51 = v0;
  v51[1] = sub_100A43FC8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 504, 0, 0, 0xD000000000000015, 0x8000000100E4D860, sub_100A4BC60, v50, &type metadata for Bool);
}

uint64_t sub_100A43FC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 472);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100A44024, 0, 0);
}

uint64_t sub_100A44024()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned int v14;

  v1 = *(void **)(v0 + 464);
  v2 = *(void **)(v0 + 448);

  v14 = *(unsigned __int8 *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 376);
  v8 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 344);
  v10 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 288);
  v13 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v14);
}

uint64_t sub_100A44100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 488);
  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A444E8;
  else
    v3 = sub_100A44164;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A44164()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *, _QWORD);
  void (*v18)(uint64_t, uint64_t);
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = v0[43];
  v2 = v0[41];
  v3 = v0[42];
  v4 = v0[40];
  v6 = v0[37];
  v5 = v0[38];
  MusicLibraryResponse.items.getter(v0[44]);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v56(v3, v1, v4);
  v7 = sub_100A4BC1C(&qword_1011D6848, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Sequence.makeIterator()(v4, v7);
  v8 = (uint64_t *)(v5 + *(int *)(v6 + 36));
  v9 = *v8;
  v10 = sub_100A4BC1C((unint64_t *)&qword_1011D6850, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v54 = v0 + 31;
  dispatch thunk of Collection.endIndex.getter(v0 + 31, v4, v10);
  if (v9 == v0[31])
  {
LABEL_5:
    v26 = v0[41];
    v27 = v0[39];
    v28 = v0[33];
    v29 = v0[34];
    sub_10004FF60(v0[38], (uint64_t *)&unk_1011D6810);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    v18 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  }
  else
  {
    v52 = v0[41];
    v61 = v0[34];
    v53 = v0;
    v11 = v0 + 15;
    while (1)
    {
      v12 = v0[42];
      v13 = v0[40];
      v14 = v0[38];
      v15 = v0[36];
      v58 = v0[35];
      v16 = v0[33];
      v17 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v11, v8, v13, v10);
      (*(void (**)(uint64_t))(v61 + 16))(v15);
      v17(v11, 0);
      v56(v12, v14, v13);
      dispatch thunk of Collection.formIndex(after:)(v8, v13, v10);
      v18 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v18(v12, v13);
      v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 32);
      v20 = v19(v58, v15, v16);
      Playlist.Entry.catalogID.getter(v20);
      v22 = v21;
      v23 = swift_bridgeObjectRelease();
      if (!v22)
        break;
      v0 = v53;
      v24 = v53[40];
      (*(void (**)(_QWORD, _QWORD, __n128))(v61 + 8))(v53[35], v53[33], v23);
      v25 = *v8;
      dispatch thunk of Collection.endIndex.getter(v54, v24, v10);
      if (v25 == v53[31])
        goto LABEL_5;
    }
    v0 = v53;
    v30 = v53[39];
    v32 = v53[34];
    v31 = v53[35];
    v33 = v53[33];
    sub_10004FF60(v53[38], (uint64_t *)&unk_1011D6810);
    v19(v30, v31, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v33);
  }
  v34 = v0[50];
  v59 = v0[51];
  v62 = v0[53];
  v36 = v0[48];
  v35 = v0[49];
  v37 = v0[45];
  v38 = v0[46];
  v39 = v0[44];
  v40 = v0[39];
  v41 = v0[34];
  v55 = v0[33];
  v57 = v0[52];
  v18(v0[43], v0[40]);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v62, v59);
  LODWORD(v62) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v40, 1, v55) != 1;
  sub_10004FF60(v40, &qword_1011D3000);
  v42 = v0[53];
  v43 = v0[50];
  v45 = v0[46];
  v44 = v0[47];
  v47 = v0[42];
  v46 = v0[43];
  v49 = v0[38];
  v48 = v0[39];
  v50 = v0[36];
  v60 = v0[35];
  swift_task_dealloc(v0[55]);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v60);
  return ((uint64_t (*)(_QWORD))v0[1])(v62);
}

uint64_t sub_100A444E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 408);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_errorRelease(v1);
  v5 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 400);
  v8 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 376);
  v10 = *(_QWORD *)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_100A445D8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_100007E8C(&qword_1011D77A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1010F2550, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100A4DCA4;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E2F4;
  aBlock[3] = &unk_1010F2568;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
}

void sub_100A44708(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(void *, uint64_t, _BYTE *);
  char v7;
  uint64_t v8;
  _QWORD aBlock[6];
  char v10;

  v10 = 0;
  if (!a1)
  {
    v7 = 0;
    v6 = 0;
    v3 = 0;
    goto LABEL_6;
  }
  v1 = objc_msgSend(a1, "results");
  if (v1)
  {
    v2 = v1;
    v3 = swift_allocObject(&unk_1010F25A0, 24, 7);
    *(_QWORD *)(v3 + 16) = &v10;
    v4 = swift_allocObject(&unk_1010F25C8, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_100A4DCC8;
    *(_QWORD *)(v4 + 24) = v3;
    aBlock[4] = sub_10004D5F4;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100A4492C;
    aBlock[3] = &unk_1010F25E0;
    v5 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend(v2, "enumerateItemsUsingBlock:", v5, swift_release().n128_f64[0]);

    _Block_release(v5);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 128, 264, 62, 1);
    swift_release();
    if ((v2 & 1) == 0)
    {
      v6 = sub_100A4DCC8;
      v7 = v10;
LABEL_6:
      LOBYTE(aBlock[0]) = v7;
      v8 = sub_100007E8C(&qword_1011D77A0);
      CheckedContinuation.resume(returning:)(aBlock, v8);
      sub_10004BA30((uint64_t)v6, v3);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100A44898(void *a1, uint64_t a2, _BYTE *a3, _BYTE *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = objc_msgSend(a1, "anyObject");
  if (v6)
  {
    v9 = v6;
    MPModelObject.bestIdentifier(for:)(2, 1u);
    v8 = v7;
    swift_bridgeObjectRelease();
    if (!v8)
    {
      *a4 = 1;
      *a3 = 1;
    }

  }
}

uint64_t sub_100A4492C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(void);
  id v11;
  uint64_t v13;

  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(void))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a2;
  v10();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Collaboration.Object.duplicate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[2] = v0;
  v2 = type metadata accessor for MusicLibraryPlaylistResponse(0);
  v1[3] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicLibraryPlaylistRequest(0);
  v1[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[7] = v5;
  v1[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v1[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[10] = v7;
  v1[11] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Collaboration.Object(0);
  v1[12] = v8;
  v1[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100A44ABC, 0, 0);
}

id sub_100A44ABC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t *v4;
  uint64_t v5;
  uint64_t **v6;
  id result;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t **v12;

  v1 = v0[12];
  v2 = v0[13];
  sub_100A4BA84(v0[2], v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  v4 = (uint64_t *)v0[13];
  if (EnumCaseMultiPayload == 1)
  {
    v5 = v0[11];
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v0[10] + 32))(v5, v4, v0[9]);
    static MusicLibraryPlaylistRequest.duplicatingPlaylist(_:)(v5);
    v6 = (uint64_t **)swift_task_alloc(async function pointer to MusicLibraryPlaylistRequest.response()[1]);
    v0[19] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = (uint64_t *)sub_100A44D14;
    return (id)MusicLibraryPlaylistRequest.response()(v0[5]);
  }
  else
  {
    v8 = *v4;
    v0[14] = *v4;
    result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
    if (result)
    {
      v9 = result;
      v10 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryDuplicatePlaylistChangeRequest), "initWithLibrary:playlist:", result, v8);
      v0[15] = (uint64_t)v10;

      v11 = swift_task_alloc(32);
      v0[16] = v11;
      *(_QWORD *)(v11 + 16) = v10;
      v12 = (uint64_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
      v0[17] = (uint64_t)v12;
      *v12 = v0;
      v12[1] = (uint64_t *)sub_100A44C3C;
      return (id)withCheckedThrowingContinuation<A>(isolation:function:_:)(v12, 0, 0, 0x746163696C707564, 0xEB00000000292865, sub_100A4BC68, v11, (char *)&type metadata for () + 8);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100A44C3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100A44E0C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 128));
    v4 = sub_100A44CA8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100A44CA8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 120);

  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A44D14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100A44E84;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    v4 = sub_100A44D88;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100A44D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A44E0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);

  swift_task_dealloc(v2);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A44E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100A44F08(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_100007E8C((uint64_t *)&unk_1011D6C20);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1010F2500, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100A4DC84;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100A4509C;
  aBlock[3] = &unk_1010F2518;
  v11 = _Block_copy(aBlock);
  objc_msgSend(a2, "performWithResponseHandler:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
}

uint64_t sub_100A45038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (a2)
  {
    v5 = a2;
    swift_errorRetain(a2);
    v2 = sub_100007E8C((uint64_t *)&unk_1011D6C20);
    return CheckedContinuation.resume(throwing:)(&v5, v2);
  }
  else
  {
    v4 = sub_100007E8C((uint64_t *)&unk_1011D6C20);
    return CheckedContinuation.resume(returning:)(v4, v4);
  }
}

void sub_100A4509C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t Collaboration.Manager.__allocating_init(coordinator:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 56, 7);
  sub_100064C48(a1, v3 + 16);
  return v3;
}

uint64_t Collaboration.Manager.init(coordinator:)(__int128 *a1)
{
  uint64_t v1;

  sub_100064C48(a1, v1 + 16);
  return v1;
}

uint64_t GroupActivitiesManager.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100064C78(v3, a1);
}

id Collaboration.Manager.participantProfile.getter()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v1 = objc_msgSend(v0, "activeUserState");

  v2 = objc_msgSend(v1, "music");
  v3 = objc_msgSend(v2, "userProfile");

  return v3;
}

double Collaboration.Manager.supportsCollaboration(for:)(uint64_t a1)
{
  return sub_100A4BC70(a1);
}

uint64_t Collaboration.Manager.isCollaborationSupported(for:)(uint64_t a1)
{
  return sub_100A454E0(a1);
}

uint64_t Logger.collaboration.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.collaboration);
}

void Collaboration.Manager.canCollaborate(for:)()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v0 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDEE20);
  v2 = swift_getKeyPath(&unk_100EDEE48);
  static Published.subscript.getter(&v19, v0, KeyPath, v2);
  swift_release();
  swift_release();
  v3 = v21;
  v4 = v22;
  v5 = v23;
  v6 = v24;
  v7 = v25;
  v8 = v26;
  v9 = v27;
  if ((v20 & 1) == 0)
  {
    v10 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v10, 0, 0);
    v13 = 3;
LABEL_10:
    *(_QWORD *)v11 = v13;
    goto LABEL_11;
  }
  if (!BYTE2(v19))
  {
    v18 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v18, 0, 0);
    v13 = 6;
    goto LABEL_10;
  }
  v28 = v25;
  v14 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "isInitialImport");

    if ((v16 & 1) != 0)
    {
      v17 = sub_100A4BFF4();
      swift_allocError(&type metadata for Collaboration.Error, v17, 0, 0);
      *(_QWORD *)v11 = 7;
      v7 = v28;
LABEL_11:
      *(_QWORD *)(v11 + 8) = 0;
      *(_BYTE *)(v11 + 16) = 3;
      swift_willThrow(v12);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v6);

      return;
    }
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);

  }
  else
  {
    __break(1u);
  }
}

uint64_t Collaboration.Manager.isCollaborationPossible(for:)(uint64_t a1)
{
  return sub_100A454E0(a1);
}

uint64_t sub_100A454E0(uint64_t a1)
{
  sub_100A4BC70(a1);
  return 1;
}

uint64_t *Collaboration.Manager.DeepLinkType.actionKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.actionKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.getter()
{
  return sub_100A45720(&static Collaboration.Manager.DeepLinkType.actionKey);
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_100A45780(a1, a2, &static Collaboration.Manager.DeepLinkType.actionKey, &qword_1011D6798);
}

uint64_t (*static Collaboration.Manager.DeepLinkType.actionKey.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static Collaboration.Manager.DeepLinkType.actionKey, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *Collaboration.Manager.DeepLinkType.profileKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.profileKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.getter()
{
  return sub_100A45720((uint64_t *)&static Collaboration.Manager.DeepLinkType.profileKey);
}

uint64_t sub_100A45720(uint64_t *a1)
{
  uint64_t v2;
  _BYTE v4[24];

  swift_beginAccess(a1, v4, 0, 0);
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_100A45780(a1, a2, static Collaboration.Manager.DeepLinkType.profileKey, &static Collaboration.Manager.DeepLinkType.profileKey[1]);
}

uint64_t sub_100A45780(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v8;
  _BYTE v10[24];

  swift_beginAccess(a3, v10, 1, 0);
  v8 = *a4;
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease(v8);
}

uint64_t (*static Collaboration.Manager.DeepLinkType.profileKey.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static Collaboration.Manager.DeepLinkType.profileKey, a1, 33, 0);
  return j_j__swift_endAccess;
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::Int v10;
  MusicCore::Collaboration::Manager::DeepLinkType_optional v11;
  _BYTE v13[24];

  swift_beginAccess(&static Collaboration.Manager.DeepLinkType.actionKey, v13, 0, 0);
  if (!*((_QWORD *)a1._rawValue + 2))
    goto LABEL_10;
  v2 = qword_1011D6798;
  v3 = static Collaboration.Manager.DeepLinkType.actionKey;
  swift_bridgeObjectRetain();
  v4 = sub_10079C2C4(v3, v2);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease(v2);
LABEL_10:
    swift_bridgeObjectRelease(a1._rawValue);
    return (MusicCore::Collaboration::Manager::DeepLinkType_optional)2;
  }
  v6 = (uint64_t *)(*((_QWORD *)a1._rawValue + 7) + 16 * v4);
  v7 = *v6;
  v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(a1._rawValue);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  v10 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6F50, v9);
  swift_bridgeObjectRelease(v8);
  if (v10 == 1)
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  else
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  if (v10)
    return v11;
  else
    return 0;
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MusicCore::Collaboration::Manager::DeepLinkType_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6F50, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  else
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t Collaboration.Manager.DeepLinkType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E69646E6570;
  else
    return 1852403562;
}

uint64_t sub_100A45980(char *a1, char *a2)
{
  return sub_1009A5364(*a1, *a2);
}

Swift::Int sub_100A4598C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x676E69646E6570;
  else
    v2 = 1852403562;
  if (v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100A45A04(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x676E69646E6570;
  else
    v2 = 1852403562;
  if (*v1)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE400000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100A45A58(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x676E69646E6570;
  else
    v3 = 1852403562;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE400000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100A45ACC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6F50, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100A45B28(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1852403562;
  if (*v1)
    v2 = 0x676E69646E6570;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t Collaboration.Manager.queryItemsDictionary(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::Int v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  _BYTE v23[24];

  v2 = sub_100007E8C(&qword_1011D6890);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for URLComponents(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  URLComponents.init(url:resolvingAgainstBaseURL:)(a1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011D6890);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v9 = URLComponents.queryItemsDictionary.getter();
  if (v9)
  {
    v10 = sub_100A4B6BC((uint64_t)&off_1010E6FA0);
    swift_arrayDestroy(&unk_1010E6FC0, 2, &type metadata for String);
    v11 = swift_beginAccess(&static Collaboration.Manager.DeepLinkType.actionKey, v23, 0, 0);
    if (*(_QWORD *)(v9 + 16))
    {
      v12 = qword_1011D6798;
      v13 = static Collaboration.Manager.DeepLinkType.actionKey;
      swift_bridgeObjectRetain();
      v14 = sub_10079C2C4(v13, v12);
      if ((v15 & 1) != 0)
      {
        v16 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v14);
        v17 = *v16;
        v18 = v16[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v12);
        v19 = sub_10075CF20(v17, v18, v10);
        v20 = swift_bridgeObjectRelease(v10);
        (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v20);
        swift_bridgeObjectRelease(v18);
        if ((v19 & 1) != 0)
          return v9;
        goto LABEL_11;
      }
      v11 = swift_bridgeObjectRelease(v12);
    }
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v11);
    swift_bridgeObjectRelease(v10);
LABEL_11:
    swift_bridgeObjectRelease(v9);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t Collaboration.Manager.start(_:isOpen:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t started;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)(v3 + 328) = a3;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  v4 = sub_100007E8C(&qword_1011D67B0);
  *(_QWORD *)(v3 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v3 + 56) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 64) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 72) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 80) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 88) = swift_task_alloc(v7);
  *(_QWORD *)(v3 + 96) = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  *(_QWORD *)(v3 + 104) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 112) = v9;
  *(_QWORD *)(v3 + 120) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2AE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 128) = swift_task_alloc(v10);
  *(_QWORD *)(v3 + 136) = swift_task_alloc(v10);
  v11 = type metadata accessor for Playlist.Collaboration.InvitationMode(0);
  *(_QWORD *)(v3 + 144) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 152) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 160) = swift_task_alloc(v13);
  *(_QWORD *)(v3 + 168) = swift_task_alloc(v13);
  v14 = sub_100007E8C((uint64_t *)&unk_1011D68A0);
  *(_QWORD *)(v3 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  started = type metadata accessor for MusicCollaborativePlaylist.StartCollaborationRequest(0);
  *(_QWORD *)(v3 + 184) = started;
  v16 = *(_QWORD *)(started - 8);
  *(_QWORD *)(v3 + 192) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v17);
  v18 = type metadata accessor for Collaboration.Object(0);
  *(_QWORD *)(v3 + 216) = v18;
  *(_QWORD *)(v3 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 232) = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 240) = v21;
  *(_QWORD *)(v3 + 248) = v22;
  return swift_task_switch(sub_100A45F74, v21, v22);
}

uint64_t sub_100A45F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void (*v20)(uint64_t, void **, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  unsigned int *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void *v32;
  void (*v33)(uint64_t, _QWORD, uint64_t);
  unsigned int *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.collaboration);
  *(_QWORD *)(v0 + 256) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 328);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Start called - isOpenInvite=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 40);

  sub_100A4BA84(v9, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  v11 = *(void ***)(v0 + 224);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 64);
    v19 = *(unsigned __int8 *)(v0 + 328);
    v20 = *(void (**)(uint64_t, void **, uint64_t))(v18 + 32);
    *(_QWORD *)(v0 + 296) = v20;
    v20(v15, v11, v17);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    *(_QWORD *)(v0 + 304) = v21;
    v21(v16, v15, v17);
    v22 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    if (!v19)
      v22 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v12, *v22, v14);
    MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)(v16, v12);
    v23 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.StartCollaborationRequest.response()[1]);
    *(_QWORD *)(v0 + 312) = v23;
    *v23 = v0;
    v23[1] = sub_100A46920;
    return MusicCollaborativePlaylist.StartCollaborationRequest.response()(*(_QWORD *)(v0 + 80));
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 152);
    v31 = *(unsigned __int8 *)(v0 + 328);
    v32 = *v11;
    *(_QWORD *)(v0 + 264) = *v11;
    v33 = *(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104);
    if (v31)
      v34 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    else
      v34 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    v33(v28, *v34, v29);
    v35 = v32;
    MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
    {
      v36 = *(_QWORD *)(v0 + 176);
      swift_release();
      sub_10004FF60(v36, (uint64_t *)&unk_1011D68A0);
      v37 = sub_100A4BFF4();
      swift_allocError(&type metadata for Collaboration.Error, v37, 0, 0);
      *(_OWORD *)v38 = xmmword_100ED8620;
      *(_BYTE *)(v38 + 16) = 3;
      swift_willThrow((__n128)xmmword_100ED8620);

      v40 = *(_QWORD *)(v0 + 200);
      v39 = *(_QWORD *)(v0 + 208);
      v42 = *(_QWORD *)(v0 + 168);
      v41 = *(_QWORD *)(v0 + 176);
      v43 = *(_QWORD *)(v0 + 160);
      v45 = *(_QWORD *)(v0 + 128);
      v44 = *(_QWORD *)(v0 + 136);
      v46 = *(_QWORD *)(v0 + 120);
      v47 = *(_QWORD *)(v0 + 96);
      v49 = *(_QWORD *)(v0 + 88);
      v50 = *(_QWORD *)(v0 + 80);
      v51 = *(_QWORD *)(v0 + 72);
      v52 = *(_QWORD *)(v0 + 48);
      swift_task_dealloc(*(_QWORD *)(v0 + 224));
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v51);
      swift_task_dealloc(v52);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
      v48 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.StartCollaborationRequest.perform()[1]);
      *(_QWORD *)(v0 + 272) = v48;
      *v48 = v0;
      v48[1] = sub_100A46340;
      return MusicCollaborativePlaylist.StartCollaborationRequest.perform()();
    }
  }
}

uint64_t sub_100A46340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 272);
  v3[35] = a1;
  v3[36] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100A46F54;
  else
    v5 = sub_100A463A8;
  return swift_task_switch(v5, v3[30], v3[31]);
}

uint64_t sub_100A463A8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  void *v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[2];

  v1 = objc_msgSend(*(id *)(v0 + 280), "collaborationInvitationURL", swift_release().n128_f64[0]);
  v2 = *(_QWORD *)(v0 + 136);
  if (v1)
  {
    v3 = v1;
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v1);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v6) != 1)
    {
      v7 = *(_QWORD *)(v0 + 280);
      v8 = *(_QWORD *)(v0 + 208);
      v9 = *(_QWORD *)(v0 + 216);
      v10 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD *)(v0 + 192);
      v12 = *(_QWORD *)(v0 + 136);
      v13 = *(_QWORD **)(v0 + 32);

      sub_10004FF60(v12, &qword_1011D2AE0);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
      *v13 = v7;
      swift_storeEnumTagMultiPayload(v13, v9, 0);
      v14 = *(_QWORD *)(v0 + 200);
      v15 = *(_QWORD *)(v0 + 208);
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 160);
      v20 = *(_QWORD *)(v0 + 128);
      v19 = *(_QWORD *)(v0 + 136);
      v21 = *(_QWORD *)(v0 + 120);
      v22 = *(_QWORD *)(v0 + 96);
      v65 = *(_QWORD *)(v0 + 88);
      v67 = *(_QWORD *)(v0 + 80);
      v69 = *(_QWORD *)(v0 + 72);
      v71 = *(_QWORD *)(v0 + 48);
      swift_task_dealloc(*(_QWORD *)(v0 + 224));
      swift_task_dealloc(v15);
      swift_task_dealloc(v14);
      swift_task_dealloc(v16);
      swift_task_dealloc(v17);
      swift_task_dealloc(v18);
      swift_task_dealloc(v19);
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v65);
      swift_task_dealloc(v67);
      swift_task_dealloc(v69);
      swift_task_dealloc(v71);
      v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23();
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 104));
  }
  v24 = *(void **)(v0 + 280);
  sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011D2AE0);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.error.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(void **)(v0 + 280);
  if (v27)
  {
    v29 = swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v72[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v31 = v28;
    v32 = objc_msgSend(v31, "description");
    v33 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v29 + 4) = sub_10099627C(v33, v35, v72);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "invitationURL missing for=%{public}s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {

  }
  v36 = sub_100A4BFF4();
  v37 = swift_allocError(&type metadata for Collaboration.Error, v36, 0, 0);
  *(_OWORD *)v38 = xmmword_100EC2D70;
  *(_BYTE *)(v38 + 16) = 3;
  swift_willThrow((__n128)xmmword_100EC2D70);

  swift_errorRetain(v37);
  v39 = swift_errorRetain(v37);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    v72[0] = v43;
    *(_DWORD *)v42 = 136446210;
    *(_QWORD *)(v0 + 24) = v37;
    swift_errorRetain(v37);
    v44 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v45 = (char *)String.init<A>(describing:)(v0 + 24, v44);
    *(_QWORD *)(v42 + 4) = sub_10099627C(v45, v46, v72);
    swift_bridgeObjectRelease();
    swift_errorRelease(v37);
    swift_errorRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Start failed with error=%{public}s", (uint8_t *)v42, 0xCu);
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);
  }
  else
  {
    swift_errorRelease(v37);
    swift_errorRelease(v37);
  }

  v47 = *(void **)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 208);
  v49 = *(_QWORD *)(v0 + 184);
  v50 = *(_QWORD *)(v0 + 192);
  v51 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v51, 0, 0);
  *(_QWORD *)v52 = v37;
  *(_QWORD *)(v52 + 8) = 0;
  *(_BYTE *)(v52 + 16) = 1;
  swift_willThrow(v53);

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v55 = *(_QWORD *)(v0 + 200);
  v54 = *(_QWORD *)(v0 + 208);
  v57 = *(_QWORD *)(v0 + 168);
  v56 = *(_QWORD *)(v0 + 176);
  v58 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 128);
  v59 = *(_QWORD *)(v0 + 136);
  v61 = *(_QWORD *)(v0 + 120);
  v62 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 88);
  v66 = *(_QWORD *)(v0 + 80);
  v68 = *(_QWORD *)(v0 + 72);
  v70 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_100A46920()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A471C4;
  else
    v4 = sub_100A46980;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 240), *(_QWORD *)(v2 + 248));
}

uint64_t sub_100A46980()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  void (*v27)(uint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void);
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[2];

  v1 = v0[6];
  swift_release();
  Playlist.collaboration.getter(v2);
  v3 = type metadata accessor for Playlist.Collaboration(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = v0[16];
  v7 = v0[13];
  v8 = v0[14];
  v9 = v0[6];
  if (v5 == 1)
  {
    sub_10004FF60(v0[6], &qword_1011D67B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    Playlist.Collaboration.invitationURL.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v59 = (void (*)(uint64_t, uint64_t, uint64_t))v0[37];
      v85 = v0[27];
      v61 = v0[24];
      v60 = v0[25];
      v62 = v0[23];
      v63 = v0[12];
      v64 = v0[10];
      v66 = v0[7];
      v65 = v0[8];
      v67 = v0[4];
      sub_10004FF60(v0[16], &qword_1011D2AE0);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v66);
      v59(v67, v64, v66);
      swift_storeEnumTagMultiPayload(v67, v85, 1);
      v68 = v0[25];
      v69 = v0[26];
      v71 = v0[21];
      v70 = v0[22];
      v72 = v0[20];
      v74 = v0[16];
      v73 = v0[17];
      v75 = v0[15];
      v76 = v0[12];
      v80 = v0[11];
      v82 = v0[10];
      v84 = v0[9];
      v86 = v0[6];
      swift_task_dealloc(v0[28]);
      swift_task_dealloc(v69);
      swift_task_dealloc(v68);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v75);
      swift_task_dealloc(v76);
      swift_task_dealloc(v80);
      swift_task_dealloc(v82);
      swift_task_dealloc(v84);
      swift_task_dealloc(v86);
      v58 = (uint64_t (*)(void))v0[1];
      return v58();
    }
  }
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[38];
  v12 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  sub_10004FF60(v0[16], &qword_1011D2AE0);
  v14 = v10(v12, v11, v13);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  v17 = os_log_type_enabled(v15, v16);
  v19 = v0[8];
  v18 = v0[9];
  v20 = v0[7];
  if (v17)
  {
    v21 = swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v87[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v23 = sub_100048748(&qword_1011D4880, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v23);
    *(_QWORD *)(v21 + 4) = sub_10099627C(v24, v25, v87);
    v26 = swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    v27(v18, v20, v26);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "invitationURL missing for=%{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
    ((void (*)(_QWORD, _QWORD))v27)(v0[9], v0[7]);
  }

  v28 = v0[10];
  v29 = v0[7];
  v30 = sub_100A4BFF4();
  v31 = swift_allocError(&type metadata for Collaboration.Error, v30, 0, 0);
  *(_OWORD *)v32 = xmmword_100EC2D70;
  *(_BYTE *)(v32 + 16) = 3;
  swift_willThrow((__n128)xmmword_100EC2D70);
  ((void (*)(uint64_t, uint64_t))v27)(v28, v29);
  swift_errorRetain(v31);
  v33 = swift_errorRetain(v31);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.error.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v87[0] = v37;
    *(_DWORD *)v36 = 136446210;
    v0[2] = v31;
    swift_errorRetain(v31);
    v38 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v39 = (char *)String.init<A>(describing:)(v0 + 2, v38);
    *(_QWORD *)(v36 + 4) = sub_10099627C(v39, v40, v87);
    swift_bridgeObjectRelease();
    swift_errorRelease(v31);
    swift_errorRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Start failed with error=%{public}s", (uint8_t *)v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);
  }
  else
  {
    swift_errorRelease(v31);
    swift_errorRelease(v31);
  }

  v41 = v0[24];
  v42 = v0[25];
  v43 = v0[23];
  v44 = v0[12];
  v45 = v0[7];
  v46 = v0[8];
  swift_allocError(&type metadata for Collaboration.Error, v30, 0, 0);
  *(_QWORD *)v47 = v31;
  *(_QWORD *)(v47 + 8) = 0;
  *(_BYTE *)(v47 + 16) = 1;
  swift_willThrow(v48);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  v50 = v0[25];
  v49 = v0[26];
  v52 = v0[21];
  v51 = v0[22];
  v53 = v0[20];
  v55 = v0[16];
  v54 = v0[17];
  v56 = v0[15];
  v57 = v0[12];
  v78 = v0[11];
  v79 = v0[10];
  v81 = v0[9];
  v83 = v0[6];
  swift_task_dealloc(v0[28]);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  v58 = (uint64_t (*)(void))v0[1];
  return v58();
}

uint64_t sub_100A46F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  v1 = *(_QWORD *)(v0 + 288);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v31 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 24) = v1;
    swift_errorRetain(v1);
    v7 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v8 = (char *)String.init<A>(describing:)(v0 + 24, v7);
    *(_QWORD *)(v5 + 4) = sub_10099627C(v8, v9, &v31);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Start failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = *(void **)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 192);
  v14 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v14, 0, 0);
  *(_QWORD *)v15 = v1;
  *(_QWORD *)(v15 + 8) = 0;
  *(_BYTE *)(v15 + 16) = 1;
  swift_willThrow(v16);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v18 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 168);
  v19 = *(_QWORD *)(v0 + 176);
  v21 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 136);
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 80);
  v29 = *(_QWORD *)(v0 + 72);
  v30 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A471C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  swift_release();
  v1 = *(_QWORD *)(v0 + 320);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v33 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v8 = (char *)String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v5 + 4) = sub_10099627C(v8, v9, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Start failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v16, 0, 0);
  *(_QWORD *)v17 = v1;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  swift_willThrow(v18);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v20 = *(_QWORD *)(v0 + 200);
  v19 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 160);
  v25 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 136);
  v26 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 88);
  v30 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 72);
  v32 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.validate(_:url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.JoinRequest(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  v3[9] = v6;
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D6830);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist(0);
  v3[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[13] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[14] = swift_task_alloc(v10);
  v3[15] = swift_task_alloc(v10);
  v11 = type metadata accessor for URL(0);
  v3[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v3[17] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[18] = swift_task_alloc(v13);
  v3[19] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v3[20] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v3[21] = v16;
  v3[22] = v17;
  return swift_task_switch(sub_100A47594, v16, v17);
}

uint64_t sub_100A47594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 184) = sub_100048B14(v5, (uint64_t)static Logger.collaboration);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = v42(v1, v4, v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v43 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_100048748((unint64_t *)&qword_1011D68B8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
    *(_QWORD *)(v13 + 4) = sub_10099627C(v16, v17, &v43);
    v18 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v18);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Validate called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  }

  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  sub_100A4BA84(*(_QWORD *)(v0 + 32), v20);
  if (swift_getEnumCaseMultiPayload(v20, v19) == 1)
  {
    v21 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 32))(v23, *(_QWORD *)(v0 + 80), v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
  }
  else
  {
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(**(_QWORD **)(v0 + 80), *(_QWORD *)(v0 + 96), &protocol witness table for Playlist);
  }
  v24 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v26, 1, v24) == 1)
  {
    swift_release();
    sub_10004FF60(v26, &qword_1011D6830);
    v27 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v27, 0, 0);
    *(_OWORD *)v28 = xmmword_100ED8620;
    *(_BYTE *)(v28 + 16) = 3;
    swift_willThrow((__n128)xmmword_100ED8620);
    v29 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 112);
    v30 = *(_QWORD *)(v0 + 120);
    v33 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v36 = *(_QWORD *)(v0 + 144);
    v38 = *(_QWORD *)(v0 + 120);
    v37 = *(_QWORD *)(v0 + 128);
    v39 = *(_QWORD *)(v0 + 112);
    v40 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v38, v26, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v39, v38, v24);
    v42(v36, v40, v37);
    MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)(v39, v36);
    v41 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.JoinRequest.validate()[1]);
    *(_QWORD *)(v0 + 192) = v41;
    *v41 = v0;
    v41[1] = sub_100A47944;
    return MusicCollaborativePlaylist.JoinRequest.validate()(*(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_100A47944()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 192);
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A47A70;
  else
    v4 = sub_100A479A4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
}

uint64_t sub_100A479A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A47A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v5);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 200);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v30 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 16) = v9;
    swift_errorRetain(v9);
    v12 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v13 = (char *)String.init<A>(describing:)(v0 + 16, v12);
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v14, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Validate failed with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 200);
    swift_errorRelease(v15);
    swift_errorRelease(v15);
  }

  v16 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 104);
  v20 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v20, 0, 0);
  *(_QWORD *)v21 = v16;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  swift_willThrow(v22);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  v23 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.join(_:url:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for MusicCollaborativePlaylist.JoinRequest(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Collaboration.Object(0);
  v2[8] = v5;
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D6830);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v9);
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  v10 = type metadata accessor for URL(0);
  v2[16] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[17] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v12);
  v2[19] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v2[20] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v2[21] = v15;
  v2[22] = v16;
  return swift_task_switch(sub_100A47DF4, v15, v16);
}

uint64_t sub_100A47DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 184) = sub_100048B14(v5, (uint64_t)static Logger.collaboration);
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = v43(v1, v4, v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v44 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_100048748((unint64_t *)&qword_1011D68B8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
    *(_QWORD *)(v13 + 4) = sub_10099627C(v16, v17, &v44);
    v18 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v18);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Join called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v12 + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  }

  v19 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 72);
  sub_100A4BA84(*(_QWORD *)(v0 + 24), v20);
  if (swift_getEnumCaseMultiPayload(v20, v19) == 1)
  {
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 32))(v23, *(_QWORD *)(v0 + 72), v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
  }
  else
  {
    dispatch thunk of LegacyModelObjectConvertible.init(_:)(**(_QWORD **)(v0 + 72), *(_QWORD *)(v0 + 88), &protocol witness table for Playlist);
  }
  v24 = *(_QWORD *)(v0 + 88);
  v25 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v26, 1, v24) == 1)
  {
    swift_release();
    sub_10004FF60(v26, &qword_1011D6830);
    v27 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v27, 0, 0);
    *(_OWORD *)v28 = xmmword_100ED8620;
    *(_BYTE *)(v28 + 16) = 3;
    swift_willThrow((__n128)xmmword_100ED8620);
    v29 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 112);
    v30 = *(_QWORD *)(v0 + 120);
    v32 = *(_QWORD *)(v0 + 104);
    v34 = *(_QWORD *)(v0 + 72);
    v33 = *(_QWORD *)(v0 + 80);
    v35 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v37 = *(_QWORD *)(v0 + 144);
    v39 = *(_QWORD *)(v0 + 120);
    v38 = *(_QWORD *)(v0 + 128);
    v40 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v39, v26, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v40, v39, v24);
    v43(v37, v41, v38);
    MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)(v40, v37);
    v42 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.JoinRequest.response()[1]);
    *(_QWORD *)(v0 + 192) = v42;
    *v42 = v0;
    v42[1] = sub_100A481B0;
    return MusicCollaborativePlaylist.JoinRequest.response()(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_100A481B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[21];
    v5 = v2[22];
    v6 = sub_100A48300;
  }
  else
  {
    v7 = v2[13];
    v8 = v2[11];
    v9 = *(void (**)(uint64_t, uint64_t))(v2[12] + 8);
    v2[26] = v9;
    v9(v7, v8);
    v4 = v2[21];
    v5 = v2[22];
    v6 = sub_100A48228;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100A48228()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 160));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  v1(v4, v6);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A48300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 200);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v30 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Join failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 200);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 48);
  v16 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 40);
  v19 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v19, 0, 0);
  *(_QWORD *)v20 = v12;
  *(_QWORD *)(v20 + 8) = 0;
  *(_BYTE *)(v20 + 16) = 1;
  swift_willThrow(v21);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v22 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v28 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.end(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicCollaborativePlaylist.EndCollaborationRequest(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[11] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[12] = v9;
  v2[13] = v10;
  return swift_task_switch(sub_100A485F8, v9, v10);
}

uint64_t sub_100A485F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.collaboration);
  v0[14] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "End called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[4];
  v8 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  MusicCollaborativePlaylist.EndCollaborationRequest.init(playlist:)(v6);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.EndCollaborationRequest.response()[1]);
  v0[15] = v10;
  *v10 = v0;
  v10[1] = sub_100A48738;
  return MusicCollaborativePlaylist.EndCollaborationRequest.response()(v0[3]);
}

uint64_t sub_100A48738()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A48798;
  else
    v4 = sub_100A4DEEC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_100A48798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v21 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "End failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v17 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v17, 0, 0);
  *(_QWORD *)v18 = v12;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  swift_willThrow(v19);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc(v13);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.moderate(_:collaborator:in:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  *(_BYTE *)(v3 + 193) = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest(0);
  *(_QWORD *)(v3 + 40) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v3 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 72) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 80) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist.Collaborator(0);
  *(_QWORD *)(v3 + 96) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 104) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 112) = swift_task_alloc(v11);
  *(_QWORD *)(v3 + 120) = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 128) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 136) = v14;
  *(_QWORD *)(v3 + 144) = v15;
  return swift_task_switch(sub_100A48A80, v14, v15);
}

uint64_t sub_100A48A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t type;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 152) = sub_100048B14(v9, (uint64_t)static Logger.collaboration);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v44(v1, v8, v2);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v10(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  if (v14)
  {
    type = v13;
    v21 = *(_BYTE *)(v0 + 193) & 1;
    v41 = *(_QWORD *)(v0 + 72);
    v22 = swift_slowAlloc(32, -1);
    v42 = swift_slowAlloc(96, -1);
    v45 = v42;
    *(_DWORD *)v22 = 136446722;
    *(_BYTE *)(v0 + 192) = v21;
    v23 = (char *)String.init<A>(describing:)(v0 + 192, &type metadata for Collaboration.Manager.Moderation);
    *(_QWORD *)(v22 + 4) = sub_10099627C(v23, v24, &v45);
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v25 = sub_100048748(&qword_1011D68D8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v25);
    *(_QWORD *)(v22 + 14) = sub_10099627C(v26, v27, &v45);
    v28 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v28);
    *(_WORD *)(v22 + 22) = 2082;
    v29 = sub_100048748(&qword_1011D4880, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v29);
    *(_QWORD *)(v22 + 24) = sub_10099627C(v30, v31, &v45);
    v32 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v18, v20, v32);
    _os_log_impl((void *)&_mh_execute_header, v12, type, "    Moderate called for:\n        - type=%{public}s\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy(v42, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v16 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }

  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 80);
  v35 = *(_QWORD *)(v0 + 64);
  v36 = *(_QWORD *)(v0 + 32);
  v37 = *(_BYTE *)(v0 + 193);
  v44(v33, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  v10(v34, v36, v35);
  MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.init(collaborator:playlist:)(v33, v34);
  if ((v37 & 1) != 0)
  {
    v40 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.reject()[1]);
    *(_QWORD *)(v0 + 176) = v40;
    *v40 = v0;
    v40[1] = sub_100A48EDC;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.reject()();
  }
  else
  {
    v38 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.approve()[1]);
    *(_QWORD *)(v0 + 160) = v38;
    *v38 = v0;
    v38[1] = sub_100A48DE8;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.approve()();
  }
}

uint64_t sub_100A48DE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 160);
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A48F3C;
  else
    v4 = sub_100A48E48;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_100A48E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A48EDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A4913C;
  else
    v4 = sub_100A4DF1C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_100A48F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v21 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v8 = (char *)String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v5 + 4) = sub_10099627C(v8, v9, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Moderate failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v11 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 40);
  v16 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v16, 0, 0);
  *(_QWORD *)v17 = v1;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  swift_willThrow(v18);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v20);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4913C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v21 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 16) = v1;
    swift_errorRetain(v1);
    v7 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v8 = (char *)String.init<A>(describing:)(v0 + 16, v7);
    *(_QWORD *)(v5 + 4) = sub_10099627C(v8, v9, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Moderate failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v11 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 40);
  v16 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v16, 0, 0);
  *(_QWORD *)v17 = v1;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 1;
  swift_willThrow(v18);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v20);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.remove(collaborator:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = type metadata accessor for MusicCollaborativePlaylist.RemoveCollaboratorRequest(0);
  v3[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[7] = v5;
  v3[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[10] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v8);
  v3[12] = swift_task_alloc(v8);
  v9 = type metadata accessor for Playlist.Collaborator(0);
  v3[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[14] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[15] = swift_task_alloc(v11);
  v3[16] = swift_task_alloc(v11);
  v12 = type metadata accessor for MainActor(0);
  v3[17] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v3[18] = v14;
  v3[19] = v15;
  return swift_task_switch(sub_100A49444, v14, v15);
}

uint64_t sub_100A49444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = v0[16];
  v2 = v0[13];
  v3 = v0[14];
  v4 = v0[12];
  v5 = v0[9];
  v6 = v0[10];
  v8 = v0[4];
  v7 = v0[5];
  v9 = type metadata accessor for Logger(0);
  v0[20] = sub_100048B14(v9, (uint64_t)static Logger.collaboration);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v38(v1, v8, v2);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v10(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = v0[16];
  v17 = v0[13];
  v16 = v0[14];
  v18 = v0[12];
  v20 = v0[9];
  v19 = v0[10];
  if (v14)
  {
    v36 = v0[10];
    v21 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v39 = v37;
    *(_DWORD *)v21 = 136446466;
    v22 = sub_100048748(&qword_1011D68D8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v23 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v22);
    *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, &v39);
    v25 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v25);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = sub_100048748(&qword_1011D4880, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v20, v26);
    *(_QWORD *)(v21 + 14) = sub_10099627C(v27, v28, &v39);
    v29 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v36 + 8))(v18, v20, v29);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "    Remove called for:\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v16 + 8))(v0[16], v0[13]);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }

  v30 = v0[15];
  v31 = v0[11];
  v32 = v0[9];
  v33 = v0[5];
  v38(v30, v0[4], v0[13]);
  v10(v31, v33, v32);
  MusicCollaborativePlaylist.RemoveCollaboratorRequest.init(collaborator:playlist:)(v30, v31);
  v34 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.RemoveCollaboratorRequest.response()[1]);
  v0[21] = v34;
  *v34 = v0;
  v34[1] = sub_100A49728;
  return MusicCollaborativePlaylist.RemoveCollaboratorRequest.response()(v0[3]);
}

uint64_t sub_100A49728()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A4981C;
  else
    v4 = sub_100A49788;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_100A49788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4981C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v24 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v24);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Remove failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 176);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  v16 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 56);
  v17 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 48);
  v20 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v20, 0, 0);
  *(_QWORD *)v21 = v12;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  swift_willThrow(v22);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.resetInvitationURL(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v2[3] = a1;
  v2[4] = a2;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicCollaborativePlaylist.ResetInvitationLinkRequest(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[11] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[12] = v9;
  v2[13] = v10;
  return swift_task_switch(sub_100A49AE0, v9, v10);
}

uint64_t sub_100A49AE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.collaboration);
  v0[14] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Reset URL called", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[6];
  v6 = v0[7];
  v9 = v0[4];
  v8 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  MusicCollaborativePlaylist.ResetInvitationLinkRequest.init(playlist:)(v6);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.ResetInvitationLinkRequest.response()[1]);
  v0[15] = v10;
  *v10 = v0;
  v10[1] = sub_100A49C20;
  return MusicCollaborativePlaylist.ResetInvitationLinkRequest.response()(v0[3]);
}

uint64_t sub_100A49C20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A49CE4;
  else
    v4 = sub_100A49C80;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_100A49C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A49CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v21 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Reset failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v17 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v17, 0, 0);
  *(_QWORD *)v18 = v12;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  swift_willThrow(v19);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc(v13);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.updateShareOption(_:for:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v2 + 24) = a2;
  *(_BYTE *)(v2 + 168) = a1;
  v3 = type metadata accessor for Playlist.Collaboration.InvitationMode(0);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for MusicCollaborativePlaylist.UpdateInvitationModeRequest(0);
  *(_QWORD *)(v2 + 56) = updated;
  v6 = *(_QWORD *)(updated - 8);
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D67B0);
  *(_QWORD *)(v2 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Collaboration(0);
  *(_QWORD *)(v2 + 88) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v2 + 96) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v2 + 112) = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 120) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 128) = v13;
  *(_QWORD *)(v2 + 136) = v14;
  return swift_task_switch(sub_100A49FE0, v13, v14);
}

uint64_t sub_100A49FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unsigned int *v27;
  _QWORD *v28;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.collaboration);
  *(_QWORD *)(v0 + 144) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 168);
    v6 = swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    *(_DWORD *)(v6 + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "updateShareOption called with isOpen=%{BOOL,public}d", (uint8_t *)v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);

  Playlist.collaboration.getter(v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    v11 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_10004FF60(v11, &qword_1011D67B0);
    v12 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v12, 0, 0);
    *(_OWORD *)v13 = xmmword_100ED8620;
    *(_BYTE *)(v13 + 16) = 3;
    swift_willThrow((__n128)xmmword_100ED8620);
    v14 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 96);
    v24 = *(_QWORD *)(v0 + 40);
    v23 = *(_QWORD *)(v0 + 48);
    v25 = *(_QWORD *)(v0 + 32);
    v26 = *(unsigned __int8 *)(v0 + 168);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 32))(v20, *(_QWORD *)(v0 + 80), v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v19, v20, v21);
    v27 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    if (!v26)
      v27 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v23, *v27, v25);
    MusicCollaborativePlaylist.UpdateInvitationModeRequest.init(collaboration:updatedInvitationMode:)(v19, v23);
    v28 = (_QWORD *)swift_task_alloc(async function pointer to MusicCollaborativePlaylist.UpdateInvitationModeRequest.response()[1]);
    *(_QWORD *)(v0 + 152) = v28;
    *v28 = v0;
    v28[1] = sub_100A4A260;
    return MusicCollaborativePlaylist.UpdateInvitationModeRequest.response()();
  }
}

uint64_t sub_100A4A260()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A4A36C;
  else
    v4 = sub_100A4A2C0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_100A4A2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4A36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 160);
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v27 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 16, v8);
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v27);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "updateShareOption failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 56);
  v19 = sub_100A4BFF4();
  swift_allocError(&type metadata for Collaboration.Error, v19, 0, 0);
  *(_QWORD *)v20 = v12;
  *(_QWORD *)(v20 + 8) = 0;
  *(_BYTE *)(v20 + 16) = 1;
  swift_willThrow(v21);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v22 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Collaboration.Manager.handleError(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v2 = v1;
  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v4 = type metadata accessor for Logger(0);
  sub_100048B14(v4, (uint64_t)static Logger.collaboration);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138543362;
    swift_errorRetain(a1);
    v10 = _swift_stdlib_bridgeErrorToNSError(a1);
    *(_QWORD *)(v8 + 4) = v10;
    *v9 = v10;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Calling coordinator to handle error=%{public}@", (uint8_t *)v8, 0xCu);
    v11 = sub_100007E8C(&qword_1011D9EE0);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  swift_beginAccess(v2 + 16, v18, 0, 0);
  sub_100064C78(v2 + 16, (uint64_t)v15);
  v12 = v16;
  v13 = v17;
  sub_100007E68(v15, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, v12, v13);
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v15);
}

uint64_t Collaboration.Manager.activityViewController(for:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSURL *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  NSURL *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  Class isa;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t result;
  uint64_t v58;
  id v59;
  uint64_t v60;
  _QWORD aBlock[7];

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - v10;
  v12 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    URL._bridgeToObjectiveC()(v17);
    v18 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  v20 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "initWithContentsOfURL:", v18);

  if (v20)
  {
    v21 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
    URL._bridgeToObjectiveC()(v22);
    v24 = v23;
    objc_msgSend(v21, "setURL:", v23);

    v25 = objc_msgSend(objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata), "init");
    v27 = Collaboration.Object.name.getter();
    if (v26)
    {
      v28 = v26;
    }
    else
    {
      v59 = v20;
      v29 = v5;
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E2C360);
      v30 = v6;
      v31 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v32 = v60;
      v31(v8, v11, v60);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v33 = qword_10124DE50;
      static Locale.current.getter((id)qword_10124DE50);
      String.init(localized:table:bundle:locale:comment:)(v8, v27, 0, v33, v29, 0, 0, 256);
      v28 = v34;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v32);
      v20 = v59;
    }
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v25, "setName:", v35, swift_bridgeObjectRelease(v28).n128_f64[0]);

    Collaboration.Object.ownerName.getter();
    if (v36)
    {
      v38 = v36;
      v39 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v38).n128_u64[0];
    }
    else
    {
      v39 = 0;
    }
    objc_msgSend(v25, "setCurator:", v39, v37);

    Collaboration.Object.storeIdentifier.getter();
    if (v40)
    {
      v42 = v40;
      v43 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v41 = swift_bridgeObjectRelease(v42).n128_u64[0];
    }
    else
    {
      v43 = 0;
    }
    objc_msgSend(v25, "setStoreIdentifier:", v43, v41);

    Collaboration.Object.lpImage.getter();
    v45 = v44;
    objc_msgSend(v25, "setArtwork:", v44);

    objc_msgSend(v21, "setSpecialization:", v25);
    v46 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v47 = swift_allocObject(v46, 40, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v47 + 32) = v20;
    aBlock[0] = v47;
    specialized Array._endMutation()(v47);
    v48 = aBlock[0];
    v49 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_10004A07C(0, &qword_1011D6900, NSItemProvider_ptr);
    v50 = v20;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v52 = objc_msgSend(v49, "initWithItemProviders:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v53 = swift_allocObject(&unk_1010F2198, 24, 7);
    *(_QWORD *)(v53 + 16) = v21;
    aBlock[4] = sub_100A4C05C;
    aBlock[5] = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100A4ADBC;
    aBlock[3] = &unk_1010F21B0;
    v54 = _Block_copy(aBlock);
    v55 = v21;
    objc_msgSend(v52, "setPerItemMetadataProvider:", v54, swift_release().n128_f64[0]);
    _Block_release(v54);
    v56 = objc_msgSend(objc_allocWithZone((Class)UIActivityViewController), "initWithActivityItemsConfiguration:", v52);
    objc_msgSend(v56, "setAllowsProminentActivity:", 0);

    return (uint64_t)v56;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000019, 0x8000000100E4D8A0, "MusicCore/Collaboration.swift", 29, 2, 620, 0);
    __break(1u);
  }
  return result;
}

void sub_100A4ACDC(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  id v12;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) == 0)
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
  }
  *(_QWORD *)(a3 + 24) = sub_10004A07C(0, &qword_1011D6BF8, LPLinkMetadata_ptr);
  *(_QWORD *)a3 = a2;
  v12 = a2;
}

id sub_100A4ADBC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(_QWORD *__return_ptr, uint64_t, id);
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[3];
  uint64_t v16;

  v5 = *(void (**)(_QWORD *__return_ptr, uint64_t, id))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(v15, a2, v6);
  swift_release();

  v7 = v16;
  if (!v16)
    return 0;
  v8 = sub_100007E68(v15, v16);
  v9 = *(_QWORD *)(v7 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
  v13 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v12, v7);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v15);
  return v13;
}

uint64_t Collaboration.Manager.deinit()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return v0;
}

uint64_t Collaboration.Manager.__deallocating_deinit()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t Collaboration.ArtworkCachingReference.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_100A4AF14()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.collaboration);
  sub_100048B14(v0, (uint64_t)static Logger.collaboration);
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x726F62616C6C6F43, 0xED00006E6F697461);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1D10 != -1)
    swift_once(&qword_1011D1D10, sub_100A4AF14);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.collaboration);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t Playlist.Collaborator.isHost.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  uint64_t *v17;
  char v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v0 = type metadata accessor for Playlist.Collaborator.Role(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D6908);
  __chkstk_darwin();
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011D6910);
  __chkstk_darwin();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v22 - v9;
  v11 = __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  Playlist.Collaborator.role.getter(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v10, enum case for Playlist.Collaborator.Role.host(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v10, 0, 1, v0);
  v14 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10004A160((uint64_t)v13, (uint64_t)v6, &qword_1011D6910);
  sub_10004A160((uint64_t)v10, v14, &qword_1011D6910);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v15((uint64_t)v6, 1, v0) == 1)
  {
    sub_10004FF60((uint64_t)v10, &qword_1011D6910);
    sub_10004FF60((uint64_t)v13, &qword_1011D6910);
    v16 = v15(v14, 1, v0);
    if (v16 == 1)
      v17 = &qword_1011D6910;
    else
      v17 = &qword_1011D6908;
    if (v16 == 1)
      v18 = -1;
    else
      v18 = 0;
  }
  else
  {
    sub_10004A160((uint64_t)v6, (uint64_t)v8, &qword_1011D6910);
    if (v15(v14, 1, v0) == 1)
    {
      sub_10004FF60((uint64_t)v10, &qword_1011D6910);
      sub_10004FF60((uint64_t)v13, &qword_1011D6910);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v8, v0);
      v18 = 0;
      v17 = &qword_1011D6908;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v14, v0);
      v19 = sub_100048748(&qword_1011D6918, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Role, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Role);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v3, v0, v19);
      v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      v17 = &qword_1011D6910;
      sub_10004FF60((uint64_t)v10, &qword_1011D6910);
      sub_10004FF60((uint64_t)v13, &qword_1011D6910);
      v20(v8, v0);
    }
  }
  sub_10004FF60((uint64_t)v6, v17);
  return v18 & 1;
}

uint64_t Playlist.hasJoinedCollaboration.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint64_t v19;

  v0 = sub_100007E8C(&qword_1011D67B0);
  __chkstk_darwin(v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011D67B8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v19 - v8;
  Playlist.collaboration.getter(v7);
  v10 = type metadata accessor for Playlist.Collaboration(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v2, &qword_1011D67B0);
    v12 = type metadata accessor for Playlist.Collaborator.Status(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
LABEL_10:
    v17 = 0;
    goto LABEL_11;
  }
  Playlist.Collaboration.collaboratorStatus.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  v13 = type metadata accessor for Playlist.Collaborator.Status(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    goto LABEL_10;
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011D67B8);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v6, v13);
  if (v15 != enum case for Playlist.Collaborator.Status.host(_:)
    && v15 != enum case for Playlist.Collaborator.Status.joined(_:))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    goto LABEL_10;
  }
  v17 = 1;
LABEL_11:
  sub_10004FF60((uint64_t)v9, &qword_1011D67B8);
  return v17;
}

BOOL MPModelPlaylist.hasJoinedCollaboration.getter()
{
  void *v0;

  return (char *)objc_msgSend(v0, "collaboratorStatus") - 3 < (char *)2;
}

uint64_t _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if ((a1 & 1) != 0)
  {
    v12 = 0x8000000100E4DA40;
    v13 = 0x1000000000000017;
  }
  else
  {
    v13 = 0x726F62616C6C6F43;
    v12 = 0xAE00A680E2657461;
  }
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v14 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

Swift::Int sub_100A4B6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C((uint64_t *)&unk_1011D6C00);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_100A4B85C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_1011D6BA8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100A4B99C()
{
  _QWORD *v0;
  uint64_t v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = v0[5];
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[7]);
    if (v0[9])
      swift_release(v0[10]);
  }
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100A4B9E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_1011D67D4);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10005AEE4;
  v4[9] = a1;
  v4[10] = v1 + 32;
  return swift_task_switch(sub_100A41534, 0, 0);
}

uint64_t type metadata accessor for Collaboration.Object(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D69A8;
  if (!qword_1011D69A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Collaboration.Object);
  return result;
}

uint64_t sub_100A4BA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A4BAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100A4BB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  return sub_100A42B1C(a1, a2, a3, a4, v4 + ((v9 + 16) & ~v9));
}

uint64_t sub_100A4BB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A4BB9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A4BBA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A4BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100A427CC(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_100A4BBD8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter(v1, v2);
}

uint64_t sub_100A4BC1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100044B54(&qword_1011D6820);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100A4BC60(uint64_t a1)
{
  uint64_t v1;

  sub_100A445D8(a1, *(void **)(v1 + 16));
}

void sub_100A4BC68(uint64_t a1)
{
  uint64_t v1;

  sub_100A44F08(a1, *(void **)(v1 + 16));
}

double sub_100A4BC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  char active;
  id v16;
  char *v17;
  unint64_t v18;
  __n128 v19;
  __n128 *v20;
  __n128 *v21;
  __n128 *v22;
  unint64_t v23;
  __n128 *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[16];
  uint64_t v36;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v9 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDEE20);
  v11 = swift_getKeyPath(&unk_100EDEE48);
  static Published.subscript.getter(v35, v9, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = BYTE1(v35[0]);
  v13 = v35[3];
  v33 = v35[4];
  v34 = v35[7];
  v14 = (void *)v35[10];
  v36 = v35[9];
  v32 = v35[12];
  v30 = v35[1];
  v31 = v35[14];
  sub_100A4BA84(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    active = Playlist.hasActiveCollaboration.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((active & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    v16 = *v8;
    v17 = (char *)objc_msgSend(*v8, "collaboratorStatus");

    if ((unint64_t)(v17 - 2) < 3)
      goto LABEL_9;
  }
  if (!v12)
  {
    v25 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v25, 0, 0);
    v19 = (__n128)xmmword_100EA93A0;
    goto LABEL_18;
  }
  if ((sub_100A43094() & 1) == 0)
  {
    v26 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v26, 0, 0);
    v19 = (__n128)xmmword_100ED8630;
    goto LABEL_18;
  }
LABEL_9:
  if ((sub_100A3FBA4(3u, v13) & 1) == 0)
  {
    v23 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v23, 0, 0);
    v19 = (__n128)xmmword_100ED8640;
LABEL_18:
    *v24 = v19;
    v22 = v24 + 1;
    goto LABEL_19;
  }
  if (!v14 || (objc_msgSend(v14, "isMinorAccountHolder") & 1) != 0)
  {
    v18 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v18, 0, 0);
    v21 = v20;
    v22 = v20 + 1;
    v21->n128_u64[0] = 0;
    v21->n128_u64[1] = 0;
LABEL_19:
    v22->n128_u8[0] = 3;
    swift_willThrow(v19);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v36);

    return result;
  }
  if ((v30 & 1) == 0)
  {
    v27 = sub_100A4BFF4();
    swift_allocError(&type metadata for Collaboration.Error, v27, 0, 0);
    v19 = (__n128)xmmword_100EBF9C0;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v32);

  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v34);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v36).n128_u64[0];
  return result;
}

unint64_t sub_100A4BFF4()
{
  unint64_t result;

  result = qword_1011D6888;
  if (!qword_1011D6888)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Error, &type metadata for Collaboration.Error);
    atomic_store(result, (unint64_t *)&qword_1011D6888);
  }
  return result;
}

uint64_t sub_100A4C038()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100A4C05C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_100A4ACDC(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_100A4C068()
{
  unint64_t result;

  result = qword_1011D6920;
  if (!qword_1011D6920)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Collaborator.Change, &type metadata for Collaboration.Collaborator.Change);
    atomic_store(result, (unint64_t *)&qword_1011D6920);
  }
  return result;
}

unint64_t sub_100A4C0B4()
{
  unint64_t result;

  result = qword_1011D6928;
  if (!qword_1011D6928)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Manager.DeepLinkType, &type metadata for Collaboration.Manager.DeepLinkType);
    atomic_store(result, (unint64_t *)&qword_1011D6928);
  }
  return result;
}

unint64_t sub_100A4C0FC()
{
  unint64_t result;

  result = qword_1011D6930;
  if (!qword_1011D6930)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Manager.Moderation, &type metadata for Collaboration.Manager.Moderation);
    atomic_store(result, (unint64_t *)&qword_1011D6930);
  }
  return result;
}

ValueMetadata *type metadata accessor for Collaboration()
{
  return &type metadata for Collaboration;
}

ValueMetadata *type metadata accessor for Collaboration.Collaborator()
{
  return &type metadata for Collaboration.Collaborator;
}

uint64_t storeEnumTagSinglePayload for Collaboration.Collaborator.Change(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100A4C1AC + 4 * byte_100EDEDE1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100A4C1E0 + 4 * byte_100EDEDDC[v4]))();
}

uint64_t sub_100A4C1E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A4C1E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A4C1F0);
  return result;
}

uint64_t sub_100A4C1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A4C204);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100A4C208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A4C210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Collaborator.Change()
{
  return &type metadata for Collaboration.Collaborator.Change;
}

ValueMetadata *type metadata accessor for Collaboration.Setup()
{
  return &type metadata for Collaboration.Setup;
}

uint64_t sub_100A4C240(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return swift_bridgeObjectRetain();
  if (a3 <= 1u)
    return swift_errorRetain(result);
  return result;
}

uint64_t destroy for Collaboration.Error(uint64_t a1)
{
  return sub_10044BB60(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9MusicCore13CollaborationO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100A4C240(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100A4C240(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10044BB60(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10044BB60(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSNowPlayingViewModel.MetricsValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSNowPlayingViewModel.MetricsValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100A4C3E4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_100A4C3FC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Error()
{
  return &type metadata for Collaboration.Error;
}

char *initializeBufferWithCopyOfBuffer for Collaboration.Object(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void destroy for Collaboration.Object(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **initializeWithCopy for Collaboration.Object(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **assignWithCopy for Collaboration.Object(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_100A4C660((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_100A4C660(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for Collaboration.Object(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Playlist(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Collaboration.Object(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100A4C660((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Playlist(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A4C7C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Manager()
{
  return objc_opt_self(_TtCO9MusicCore13Collaboration7Manager);
}

ValueMetadata *type metadata accessor for Collaboration.Manager.DeepLinkType()
{
  return &type metadata for Collaboration.Manager.DeepLinkType;
}

uint64_t _s9MusicCore13CollaborationO7ManagerC12DeepLinkTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A4C8B8 + 4 * byte_100EDEDEB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A4C8EC + 4 * byte_100EDEDE6[v4]))();
}

uint64_t sub_100A4C8EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A4C8F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A4C8FCLL);
  return result;
}

uint64_t sub_100A4C908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A4C910);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A4C914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A4C91C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Manager.Moderation()
{
  return &type metadata for Collaboration.Manager.Moderation;
}

uint64_t type metadata accessor for Collaboration.ArtworkCachingReference()
{
  return objc_opt_self(_TtCO9MusicCore13Collaboration23ArtworkCachingReference);
}

uint64_t sub_100A4C958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011D6B84);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011D6B80 + dword_1011D6B80))(a1, v4);
}

uint64_t sub_100A4C9C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011D6B94);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011D6B90 + dword_1011D6B90))(a1, v4);
}

uint64_t sub_100A4CA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011DBC1C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011DBC18 + dword_1011DBC18))(a1, v4);
}

void sub_100A4CAA8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_100007E8C(&qword_1011D6BD0);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_100048748(&qword_1011D6BE0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_100A4CD3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_1011D6BC8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v24 = v1;
    v25 = a1 + 32;
    while (1)
    {
      v6 = *(unsigned __int8 *)(v25 + v4++);
      Hasher.init(_seed:)(v26, *(_QWORD *)(v3 + 40));
      v7 = 0x657469726F766166;
      if (v6 != 1)
        v7 = 0x64616F6C6E776F64;
      if (v6)
        v8 = v7;
      else
        v8 = 7105633;
      if (v6)
        v9 = 0xE900000000000073;
      else
        v9 = 0xE300000000000000;
      String.hash(into:)(v26, v8, v9);
      swift_bridgeObjectRelease(v9);
      v10 = Hasher._finalize()();
      v11 = ~(-1 << *(_BYTE *)(v3 + 32));
      v12 = v10 & v11;
      v13 = (v10 & (unint64_t)v11) >> 6;
      v14 = *(_QWORD *)(v5 + 8 * v13);
      v15 = 1 << (v10 & v11);
      if ((v15 & v14) != 0)
      {
        do
        {
          if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v12))
          {
            if (*(_BYTE *)(*(_QWORD *)(v3 + 48) + v12) == 1)
              v16 = 0x657469726F766166;
            else
              v16 = 0x64616F6C6E776F64;
            v17 = 0xE900000000000073;
            if (!v6)
            {
LABEL_18:
              v18 = 0xE300000000000000;
              v19 = 7105633;
              if (v16 != 7105633)
                goto LABEL_27;
              goto LABEL_26;
            }
          }
          else
          {
            v17 = 0xE300000000000000;
            v16 = 7105633;
            if (!v6)
              goto LABEL_18;
          }
          if (v6 == 1)
            v19 = 0x657469726F766166;
          else
            v19 = 0x64616F6C6E776F64;
          v18 = 0xE900000000000073;
          if (v16 != v19)
            goto LABEL_27;
LABEL_26:
          if (v17 == v18)
          {
            swift_bridgeObjectRelease_n(v17, 2);
            goto LABEL_4;
          }
LABEL_27:
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v19, v18, 0);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v18);
          if ((v20 & 1) != 0)
            goto LABEL_4;
          v12 = (v12 + 1) & v11;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
          v15 = 1 << v12;
        }
        while ((v14 & (1 << v12)) != 0);
      }
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v12) = v6;
      v21 = *(_QWORD *)(v3 + 16);
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        break;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_4:
      if (v4 == v24)
        return;
    }
    __break(1u);
  }
}

void *sub_100A4CF9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[10];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_1011D6BC0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(v6, *(_QWORD *)(v3 + 40));
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_100A4D4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  __int128 v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100007E8C(&qword_1011D6BB8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = *(unsigned __int8 *)(a1 + 32);
    Hasher.init(_seed:)(&v6, *(_QWORD *)(v3 + 40));
    __asm { BR              X8 }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100A4DC78()
{
  return sub_1001E806C((uint64_t *)&unk_1011D6C20);
}

uint64_t sub_100A4DC84(uint64_t a1, uint64_t a2)
{
  return sub_10046FB00(a1, a2, (uint64_t *)&unk_1011D6C20, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100A45038);
}

uint64_t sub_100A4DC98()
{
  return sub_1001E806C(&qword_1011D77A0);
}

uint64_t sub_100A4DCA4(uint64_t a1, uint64_t a2)
{
  return sub_10046FB00(a1, a2, &qword_1011D77A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100A44708);
}

uint64_t sub_100A4DCB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100A4DCC8(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_100A44898(a1, a2, a3, *(_BYTE **)(v3 + 16));
}

uint64_t sub_100A4DCD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100A4DCE0(void *a1, char a2)
{
  uint64_t v2;

  sub_100A4294C(a1, a2 & 1, *(void (**)(Class, _QWORD))(v2 + 16));
}

void sub_100A4DCEC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100A5E5FC(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_100A4DCF4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A4DD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100A4DDAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc(dword_1011D6C94);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10006AEE4;
  return sub_100A42C9C(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100A4DE58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A4DE7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011D6CBC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011D6CB8 + dword_1011D6CB8))(a1, v4);
}

double static Alert.enableCloudLibraryAlert(context:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_100A56630(a1, (uint64_t)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

double static Alert.explicitRestrictedAlert(forPlayback:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_100A56824(a1, (uint64_t)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

double static Alert.confirmDelete(for:library:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  double result;
  _OWORD v10[2];
  __int128 v11;
  uint64_t v12;

  v5 = a1[3];
  v6 = a1[4];
  v7 = sub_100007E68(a1, v5);
  sub_100A4FA28((uint64_t)v7, a2, v5, v6, (uint64_t)v10);
  v8 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v8;
  result = *(double *)&v11;
  *(_OWORD *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 48) = v12;
  return result;
}

double static Alert.cellularDataDisallowedAlert(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_100A5755C(a1, a2, (uint64_t *)v6);
  v4 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v4;
  result = *(double *)&v7;
  *(_OWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 48) = v8;
  return result;
}

double static Alert.dolbyAtmosDownloadsAlert(message:completion:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;
  uint64_t v10;

  sub_100A571B8(a1, a2, a3, a4, (uint64_t)v8);
  v6 = v8[1];
  *(_OWORD *)a5 = v8[0];
  *(_OWORD *)(a5 + 16) = v6;
  result = *(double *)&v9;
  *(_OWORD *)(a5 + 32) = v9;
  *(_QWORD *)(a5 + 48) = v10;
  return result;
}

uint64_t static Alert.Action.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  _BYTE v11[56];

  sub_100A57950(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v11);
  return sub_100A57CA4((uint64_t)v11, a9);
}

double static Alert.cellularRestrictedAlert(model:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_100A57CEC(a1, v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_100A4E144()
{
  return swift_task_switch(sub_100A4E158, 0, 0);
}

id sub_100A4E158()
{
  uint64_t v0;
  id result;
  void *v2;

  result = objc_msgSend((id)objc_opt_self(MPNetworkObserver), "sharedNetworkObserver");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "setVideoCellularStreamingAllowed:", 1);

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A4E1C0()
{
  return swift_task_switch(sub_100A4E1D4, 0, 0);
}

id sub_100A4E1D4()
{
  uint64_t v0;
  id result;
  void *v2;

  result = objc_msgSend((id)objc_opt_self(MPNetworkObserver), "sharedNetworkObserver");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "setMusicCellularStreamingAllowed:", 1);

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.networkUnavailableAlert(model:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  sub_100A588AC(a1, (uint64_t *)v5);
  v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_100A4E284()
{
  return swift_task_switch(sub_100A593B0, 0, 0);
}

double static Alert.accountRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = type metadata accessor for UUID(0);
  v52 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E4DA60);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v15 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v55 = v17;
  v56 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000004FLL, 0x8000000100E4DA80);
  v14(v10, v13, v7);
  v19 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
  v53 = v21;
  v54 = v20;
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v14(v10, v13, v7);
  v22 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v23 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v6, 0, 0, 256);
  v50 = v24;
  v51 = v23;
  v25 = ((uint64_t (*)(char *, uint64_t))v18)(v13, v7);
  v26 = UUID.init()(v25);
  v27 = UUID.uuidString.getter(v26);
  v48 = v28;
  v49 = v27;
  v29 = *(void (**)(char *, uint64_t))(v52 + 8);
  v30 = v57;
  v29(v3, v57);
  String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v14(v10, v13, v7);
  v31 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v32 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v31, v6, 0, 0, 256);
  v34 = v33;
  v35 = ((uint64_t (*)(char *, uint64_t))v18)(v13, v7);
  v36 = UUID.init()(v35);
  v37 = UUID.uuidString.getter(v36);
  v39 = v38;
  v29(v3, v30);
  v40 = sub_100007E8C(&qword_1011D8810);
  v41 = swift_allocObject(v40, 144, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v41 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v41 + 32) = v37;
  *(_QWORD *)(v41 + 40) = v39;
  *(_QWORD *)(v41 + 48) = v32;
  *(_QWORD *)(v41 + 56) = v34;
  *(_BYTE *)(v41 + 64) = 2;
  *(_QWORD *)(v41 + 72) = &unk_1011D6D40;
  *(_QWORD *)(v41 + 80) = 0;
  v43 = v48;
  *(_QWORD *)(v41 + 88) = v49;
  *(_QWORD *)(v41 + 96) = v43;
  v44 = v50;
  *(_QWORD *)(v41 + 104) = v51;
  *(_QWORD *)(v41 + 112) = v44;
  *(_BYTE *)(v41 + 120) = 2;
  *(_QWORD *)(v41 + 128) = 0;
  *(_QWORD *)(v41 + 136) = 0;
  v45 = v55;
  *(_QWORD *)a1 = v56;
  *(_QWORD *)(a1 + 8) = v45;
  v46 = v53;
  *(_QWORD *)(a1 + 16) = v54;
  *(_QWORD *)(a1 + 24) = v46;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v41;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_100A4E664()
{
  return swift_task_switch(sub_100A4E678, 0, 0);
}

id sub_100A4E678()
{
  uint64_t v0;
  id result;
  void *v2;

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v2 = result;
    LSApplicationWorkspace.openSettings()();

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.subscriptionRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = type metadata accessor for UUID(0);
  v52 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100E4DAD0);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v10, v13, v7);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v15 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v55 = v17;
  v56 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000059, 0x8000000100E4DAF0);
  v14(v10, v13, v7);
  v19 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
  v53 = v21;
  v54 = v20;
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v14(v10, v13, v7);
  v22 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v23 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v6, 0, 0, 256);
  v50 = v24;
  v51 = v23;
  v25 = ((uint64_t (*)(char *, uint64_t))v18)(v13, v7);
  v26 = UUID.init()(v25);
  v27 = UUID.uuidString.getter(v26);
  v48 = v28;
  v49 = v27;
  v29 = *(void (**)(char *, uint64_t))(v52 + 8);
  v30 = v57;
  v29(v3, v57);
  String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v14(v10, v13, v7);
  v31 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v32 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v31, v6, 0, 0, 256);
  v34 = v33;
  v35 = ((uint64_t (*)(char *, uint64_t))v18)(v13, v7);
  v36 = UUID.init()(v35);
  v37 = UUID.uuidString.getter(v36);
  v39 = v38;
  v29(v3, v30);
  v40 = sub_100007E8C(&qword_1011D8810);
  v41 = swift_allocObject(v40, 144, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v41 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v41 + 32) = v37;
  *(_QWORD *)(v41 + 40) = v39;
  *(_QWORD *)(v41 + 48) = v32;
  *(_QWORD *)(v41 + 56) = v34;
  *(_BYTE *)(v41 + 64) = 2;
  *(_QWORD *)(v41 + 72) = &unk_1011D6D48;
  *(_QWORD *)(v41 + 80) = 0;
  v43 = v48;
  *(_QWORD *)(v41 + 88) = v49;
  *(_QWORD *)(v41 + 96) = v43;
  v44 = v50;
  *(_QWORD *)(v41 + 104) = v51;
  *(_QWORD *)(v41 + 112) = v44;
  *(_BYTE *)(v41 + 120) = 2;
  *(_QWORD *)(v41 + 128) = 0;
  *(_QWORD *)(v41 + 136) = 0;
  v45 = v55;
  *(_QWORD *)a1 = v56;
  *(_QWORD *)(a1 + 8) = v45;
  v46 = v53;
  *(_QWORD *)(a1 + 16) = v54;
  *(_QWORD *)(a1 + 24) = v46;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v41;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_100A4EAA0()
{
  return swift_task_switch(sub_100A4EAB4, 0, 0);
}

uint64_t sub_100A4EAB4()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v1)
  {
    v2 = v1;
    LSApplicationWorkspace.openRestrictions()();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4EB0C()
{
  return swift_task_switch(sub_100A4EB20, 0, 0);
}

id sub_100A4EB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  id result;
  void *v5;
  NSString v6;
  void *v7;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDF110);
  v3 = swift_getKeyPath(&unk_100EDF138);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release();
  swift_release();
  v7 = *(void **)(v0 + 96);
  result = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (result)
  {
    v5 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MCFeatureExplicitContentAllowed);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setBoolValue:forSetting:", 1, v6, swift_bridgeObjectRelease().n128_f64[0]);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.contentUnavailableAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000100E4DB50);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v16 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v17 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v16, v7, 0, 0, 256);
  v34 = v18;
  v35 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v15(v11, v14, v8);
  v20 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v21 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v7, 0, 0, 256);
  v23 = v22;
  v24 = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
  v25 = UUID.init()(v24);
  v26 = UUID.uuidString.getter(v25);
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v37);
  v29 = sub_100007E8C(&qword_1011D8810);
  v30 = swift_allocObject(v29, 88, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v30 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v30 + 32) = v26;
  *(_QWORD *)(v30 + 40) = v28;
  *(_QWORD *)(v30 + 48) = v21;
  *(_QWORD *)(v30 + 56) = v23;
  *(_BYTE *)(v30 + 64) = 2;
  *(_QWORD *)(v30 + 72) = 0;
  *(_QWORD *)(v30 + 80) = 0;
  v32 = v34;
  *(_QWORD *)a1 = v35;
  *(_QWORD *)(a1 + 8) = v32;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v30;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

double static Alert.userUploadRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100E4DB90);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v16 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v17 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v16, v7, 0, 0, 256);
  v37 = v18;
  v38 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000060, 0x8000000100E4DBC0);
  v15(v11, v14, v8);
  v20 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v36 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v7, 0, 0, 256);
  v22 = v21;
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v15(v11, v14, v8);
  v23 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v24 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v23, v7, 0, 0, 256);
  v26 = v25;
  v27 = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
  v28 = UUID.init()(v27);
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v40);
  v32 = sub_100007E8C(&qword_1011D8810);
  v33 = swift_allocObject(v32, 88, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v33 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v33 + 32) = v29;
  *(_QWORD *)(v33 + 40) = v31;
  *(_QWORD *)(v33 + 48) = v24;
  *(_QWORD *)(v33 + 56) = v26;
  *(_BYTE *)(v33 + 64) = 2;
  *(_QWORD *)(v33 + 72) = 0;
  *(_QWORD *)(v33 + 80) = 0;
  v35 = v37;
  *(_QWORD *)a1 = v38;
  *(_QWORD *)(a1 + 8) = v35;
  *(_QWORD *)(a1 + 16) = v36;
  *(_QWORD *)(a1 + 24) = v22;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v33;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

double static Alert.ageVerificationFallbackAlert()@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;
  uint64_t v6;

  sub_100A58D70((uint64_t)v4);
  v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_100A4F27C()
{
  return swift_task_switch(sub_100A4F290, 0, 0);
}

uint64_t sub_100A4F290()
{
  uint64_t v0;

  if (qword_1011D1DB8 != -1)
    swift_once(&qword_1011D1DB8, sub_100A71730);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static Alert.Action.cancel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v7 = static String.cancelButtonTitle;
  v6 = qword_10124ED40;
  v8 = swift_bridgeObjectRetain();
  v9 = UUID.init()(v8);
  v10 = UUID.uuidString.getter(v9);
  v12 = v11;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_100A4F3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100A4F3F0, 0, 0);
}

uint64_t sub_100A4F3F0()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  if (v1)
    v1(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4F42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100A4F444, 0, 0);
}

id sub_100A4F444()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend((id)objc_opt_self(MPNetworkObserver), "sharedNetworkObserver");
  if (result)
  {
    v2 = result;
    v3 = *(_QWORD *)(v0 + 16);
    objc_msgSend(result, "setMusicCellularDownloadingAllowed:", 1);

    if (v3)
      (*(void (**)(uint64_t))(v0 + 16))(1);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A4F4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_100A4F4D8, 0, 0);
}

uint64_t sub_100A4F4D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *(_QWORD **)(v0 + 24);
  v3 = v1[3];
  v2 = v1[4];
  v4 = sub_100007E68(v1, v3);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  *(_QWORD *)(v0 + 40) = v5;
  *v5 = v0;
  v5[1] = sub_100A4F54C;
  return MusicLibrary.remove<A>(_:)(v4, v3, v2);
}

uint64_t sub_100A4F54C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100A4F5B8, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100A4F5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  if (qword_1011D1B60 != -1)
    swift_once(&qword_1011D1B60, sub_100A01630);
  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.actions);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 48);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v11 = (char *)String.init<A>(describing:)(v0 + 16, v10);
    *(_QWORD *)(v8 + 4) = sub_10099627C(v11, v12, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to delete item=%s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 48));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4F77C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100A4F794, 0, 0);
}

uint64_t sub_100A4F794()
{
  uint64_t v0;
  int *v1;
  id v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = *(int **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  objc_msgSend(v2, "setPrefersSpatialDownloads:", 1);

  v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  v3 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_100A4F82C;
  return v5(1);
}

uint64_t sub_100A4F82C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100A4F874(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v4 = (uint64_t (*)(_QWORD))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10006AEE4;
  return v4(0);
}

uint64_t sub_100A4F8D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100A4F93C, v4, v5);
}

uint64_t sub_100A4F93C()
{
  uint64_t v0;
  id v1;
  NSURL *v2;
  void *v3;
  void *v4;
  Class isa;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v2);
  v4 = v3;
  sub_100A13584((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_100048748((unint64_t *)&qword_1011D88B0, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100EDA9F8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "openURL:options:completionHandler:", v4, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A4FA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44[2];
  _QWORD v45[5];

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45[3] = a3;
  v45[4] = a4;
  v14 = (void (*)(char *, char *, uint64_t))sub_100049F68(v45);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v14, a1, a3);
  v15 = sub_100A55104(v14, a3, a4);
  v42 = v16;
  v43 = v15;
  v41 = v17;
  v19 = v18;
  sub_100064C78((uint64_t)v45, (uint64_t)v44);
  v20 = swift_allocObject(&unk_1010F2888, 64, 7);
  sub_100064C48(v44, v20 + 16);
  *(_QWORD *)(v20 + 56) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v22 = UUID.init()(v21);
  v23 = UUID.uuidString.getter(v22);
  v39 = v24;
  v40 = v23;
  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v13, v10);
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v27 = static String.cancelButtonTitle;
  v26 = qword_10124ED40;
  v28 = swift_bridgeObjectRetain();
  v29 = UUID.init()(v28);
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  v25(v13, v10);
  swift_bridgeObjectRelease();
  v33 = sub_100007E8C(&qword_1011D8810);
  v34 = swift_allocObject(v33, 144, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100EA7A80;
  v35 = v39;
  *(_QWORD *)(v34 + 32) = v40;
  *(_QWORD *)(v34 + 40) = v35;
  *(_QWORD *)(v34 + 48) = v41;
  *(_QWORD *)(v34 + 56) = v19;
  *(_BYTE *)(v34 + 64) = 2;
  *(_QWORD *)(v34 + 72) = &unk_1011D6DC8;
  *(_QWORD *)(v34 + 80) = v20;
  *(_QWORD *)(v34 + 88) = v30;
  *(_QWORD *)(v34 + 96) = v32;
  *(_QWORD *)(v34 + 104) = v27;
  *(_QWORD *)(v34 + 112) = v26;
  *(_BYTE *)(v34 + 120) = 0;
  *(_QWORD *)(v34 + 128) = 0;
  *(_QWORD *)(v34 + 136) = 0;
  result = _s5Music18DragDropToPlaylistV6OriginVwxx_0(v45);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  v37 = v42;
  *(_QWORD *)(a5 + 16) = v43;
  *(_QWORD *)(a5 + 24) = v37;
  *(_BYTE *)(a5 + 32) = 1;
  *(_QWORD *)(a5 + 40) = v34;
  *(_QWORD *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_100A4FC40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  void (*v41)(_QWORD *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  id v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  id v112;
  char *v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t result;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  void (*v147)(char *, char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  id v150;
  char *v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD v190[5];
  uint64_t v191;
  uint64_t v192;

  v188 = a1;
  v166 = type metadata accessor for Track(0);
  v161 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v159 = (char *)&v154 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v160 = (char *)&v154 - v3;
  __chkstk_darwin(v4);
  v162 = (char *)&v154 - v5;
  v164 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v165 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Playlist.Entry(0);
  v167 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v168 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v169 = (char *)&v154 - v9;
  v174 = type metadata accessor for TVEpisode(0);
  v171 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v155 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v173 = (char *)&v154 - v12;
  v177 = type metadata accessor for TVSeason(0);
  v172 = *(_QWORD *)(v177 - 8);
  __chkstk_darwin(v177);
  v176 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for MusicMovie(0);
  v175 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v158 = (char *)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v179 = (char *)&v154 - v16;
  v17 = type metadata accessor for Song(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v157 = (char *)&v154 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v182 = (char *)&v154 - v21;
  v183 = type metadata accessor for Playlist(0);
  v181 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v185 = (char *)&v154 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MusicVideo(0);
  v184 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v156 = (char *)&v154 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v154 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v187 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v154 - v35;
  v37 = type metadata accessor for Album(0);
  v186 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v154 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190[3] = v17;
  v190[4] = &protocol witness table for Song;
  v40 = sub_100049F68(v190);
  v178 = v18;
  v41 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 16);
  v42 = v188;
  v188 = v17;
  v41(v40, v42, v17);
  sub_100064C78((uint64_t)v190, (uint64_t)&v189);
  v43 = sub_100007E8C(&qword_1011D6DD0);
  if (swift_dynamicCast(v39, &v189, v43, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E550);
    v44 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v44(v33, v36, v30);
    v45 = v33;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v46 = qword_10124DE50;
    v47 = (id)qword_10124DE50;
    v48 = v187;
    static Locale.current.getter(v47);
    v188 = String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v46, v48, 0, 0, 256);
    v185 = v49;
    v50 = *(void (**)(char *, uint64_t))(v31 + 8);
    v50(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v44(v45, v36, v30);
    v51 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v51, v48, 0, 0, 256);
    v52 = v36;
    v53 = v188;
    v50(v52, v30);
    v54 = *(void (**)(char *, uint64_t))(v186 + 8);
    v55 = v39;
    goto LABEL_5;
  }
  v57 = v33;
  v186 = v30;
  v58 = v23;
  if ((swift_dynamicCast(v27, &v189, v43, v23, 0) & 1) != 0)
  {
    v188 = v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100E4E4E0);
    v59 = v31;
    v60 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v61 = v57;
    v62 = v186;
    v60(v57, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v63 = qword_10124DE50;
    v64 = (id)qword_10124DE50;
    v65 = v187;
    static Locale.current.getter(v64);
    v66 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v63, v65, 0, 0, 256);
    v67 = *(void (**)(char *, uint64_t))(v59 + 8);
    v67(v36, v62);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E4E530);
    v60(v61, v36, v62);
    v68 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v68, v65, 0, 0, 256);
    v69 = v36;
    v53 = v66;
    v67(v69, v62);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v27, v188);
    goto LABEL_32;
  }
  v70 = v183;
  if (swift_dynamicCast(v185, &v189, v43, v183, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x8000000100E4E490);
    v71 = v31;
    v72 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v73 = v186;
    v72(v33, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v74 = qword_10124DE50;
    v75 = (id)qword_10124DE50;
    v76 = v187;
    static Locale.current.getter(v75);
    v77 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v74, v76, 0, 0, 256);
    v78 = *(void (**)(char *, uint64_t))(v71 + 8);
    v78(v36, v73);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v72(v33, v36, v73);
    v79 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v79, v76, 0, 0, 256);
    v80 = v36;
    v53 = v77;
    v78(v80, v73);
    (*(void (**)(char *, uint64_t))(v181 + 8))(v185, v70);
    goto LABEL_32;
  }
  v81 = v33;
  if (swift_dynamicCast(v182, &v189, v43, v188, 0))
  {
    v82 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E37770);
    v83 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v84 = v186;
    v83(v57, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v85 = qword_10124DE50;
    v86 = (id)qword_10124DE50;
    v87 = v187;
    static Locale.current.getter(v86);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v85, v87, 0, 0, 256);
    v88 = *(void (**)(char *, uint64_t))(v31 + 8);
    v88(v82, v84);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v83(v81, v82, v84);
    v89 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v89, v87, 0, 0, 256);
    v88(v82, v84);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v182, v188);
    goto LABEL_32;
  }
  if (swift_dynamicCast(v179, &v189, v43, v180, 0))
  {
    v90 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E450);
    v91 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v92 = v186;
    v91(v57, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v93 = qword_10124DE50;
    v94 = (id)qword_10124DE50;
    v95 = v187;
    static Locale.current.getter(v94);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v93, v95, 0, 0, 256);
    v96 = *(void (**)(char *, uint64_t))(v31 + 8);
    v96(v90, v92);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v91(v81, v90, v92);
    v97 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v97, v95, 0, 0, 256);
    v96(v90, v92);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v179, v180);
    goto LABEL_32;
  }
  if (swift_dynamicCast(v176, &v189, v43, v177, 0))
  {
    v98 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000100E4E410);
    v99 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v100 = v186;
    v99(v57, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v101 = qword_10124DE50;
    v102 = (id)qword_10124DE50;
    v103 = v187;
    static Locale.current.getter(v102);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v101, v103, 0, 0, 256);
    v104 = *(void (**)(char *, uint64_t))(v31 + 8);
    v104(v98, v100);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v99(v81, v98, v100);
    v105 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v105, v103, 0, 0, 256);
    v104(v98, v100);
    v54 = *(void (**)(char *, uint64_t))(v172 + 8);
    v55 = v176;
    v106 = &v192;
LABEL_30:
    v56 = *(v106 - 32);
    goto LABEL_31;
  }
  if (swift_dynamicCast(v173, &v189, v43, v174, 0))
  {
    v107 = v33;
    v108 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4E3A0);
    v109 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v110 = v186;
    v109(v57, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v111 = qword_10124DE50;
    v112 = (id)qword_10124DE50;
    v113 = v187;
    static Locale.current.getter(v112);
    v53 = String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v111, v113, 0, 0, 256);
    v114 = *(void (**)(char *, uint64_t))(v31 + 8);
    v114(v108, v110);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E4E3F0);
    v109(v107, v108, v110);
    v115 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v115, v113, 0, 0, 256);
    v114(v108, v110);
    v54 = *(void (**)(char *, uint64_t))(v171 + 8);
    v55 = v173;
    v106 = &v191;
    goto LABEL_30;
  }
  v117 = v169;
  v37 = v170;
  if (!swift_dynamicCast(v169, &v189, v43, v170, 0))
  {
    v128 = v162;
    v129 = v166;
    if ((swift_dynamicCast(v162, &v189, v43, v166, 0) & 1) != 0)
    {
      v130 = v161;
      v131 = v160;
      (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v160, v128, v129);
      v132 = v159;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v159, v131, v129);
      v133 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v132, v129);
      if (v133 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v130 + 96))(v132, v129);
        v134 = v178;
        v135 = v157;
        v136 = v188;
        (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v157, v132, v188);
        v53 = sub_100A4FC40(v135);
        (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
LABEL_44:
        (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v129);
        goto LABEL_32;
      }
      if (v133 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v130 + 96))(v132, v129);
        v139 = v184;
        v140 = (uint64_t)v156;
        (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v156, v132, v58);
        v53 = sub_100A5115C(v140);
        (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v140, v58);
        goto LABEL_44;
      }
      v145 = *(void (**)(char *, uint64_t))(v130 + 8);
      v145(v131, v129);
      v145(v132, v129);
    }
LABEL_55:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v189);
    v146 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x8000000100E4E300);
    v147 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v148 = v186;
    v147(v81, v36, v186);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v149 = qword_10124DE50;
    v150 = (id)qword_10124DE50;
    v151 = v187;
    static Locale.current.getter(v150);
    v53 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v149, v151, 0, 0, 256);
    v152 = *(void (**)(char *, uint64_t))(v31 + 8);
    v152(v146, v148);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v147(v81, v146, v148);
    v153 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v153, v151, 0, 0, 256);
    v152(v146, v148);
    goto LABEL_33;
  }
  v118 = v167;
  v119 = v168;
  v120 = (*(uint64_t (**)(char *, char *, uint64_t))(v167 + 32))(v168, v117, v37);
  v121 = v165;
  Playlist.Entry.internalItem.getter(v120);
  v122 = v163;
  v123 = v164;
  v124 = (*(uint64_t (**)(char *, uint64_t))(v163 + 88))(v121, v164);
  if (v124 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v125 = v175;
    v126 = (uint64_t)v158;
    v127 = v180;
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v158, v121, v180);
    v53 = sub_100A526A4(v126);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v127);
    v54 = *(void (**)(char *, uint64_t))(v118 + 8);
    v55 = v119;
LABEL_5:
    v56 = v37;
LABEL_31:
    v54(v55, v56);
LABEL_32:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v189);
LABEL_33:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v190);
    return v53;
  }
  if (v124 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v137 = v184;
    v138 = (uint64_t)v156;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v156, v121, v58);
    v53 = sub_100A5115C(v138);
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v138, v58);
LABEL_51:
    v54 = *(void (**)(char *, uint64_t))(v118 + 8);
    v55 = v119;
    goto LABEL_5;
  }
  if (v124 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v141 = v178;
    v142 = (uint64_t)v157;
    v143 = v188;
    (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v157, v121, v188);
    v144 = sub_100A4FC40(v142);
LABEL_50:
    v53 = v144;
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v143);
    goto LABEL_51;
  }
  if (v124 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v122 + 96))(v121, v123);
    v141 = v171;
    v142 = (uint64_t)v155;
    v143 = v174;
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v155, v121, v174);
    v144 = sub_100A53BF4(v142);
    goto LABEL_50;
  }
  if (v124 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v124 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v37);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
    goto LABEL_55;
  }
  (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x8000000100E4E360, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_100A5115C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  id v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  id v90;
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  id v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t *v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  uint64_t v105;
  id v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t result;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  int v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t);
  void (*v146)(char *, char *, uint64_t);
  uint64_t v147;
  id v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD v188[5];
  uint64_t v189;
  uint64_t v190;

  v186 = a1;
  v162 = type metadata accessor for Track(0);
  v159 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v157 = (char *)&v152 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v158 = (char *)&v152 - v3;
  __chkstk_darwin(v4);
  v160 = (char *)&v152 - v5;
  v165 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v161 = (char *)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for Playlist.Entry(0);
  v167 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v163 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v166 = (char *)&v152 - v9;
  v171 = type metadata accessor for TVEpisode(0);
  v168 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v153 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v170 = (char *)&v152 - v12;
  v174 = type metadata accessor for TVSeason(0);
  v169 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v173 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for MusicMovie(0);
  v172 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v156 = (char *)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v177 = (char *)&v152 - v16;
  v181 = type metadata accessor for Song(0);
  v175 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v155 = (char *)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v180 = (char *)&v152 - v19;
  v183 = type metadata accessor for Playlist(0);
  v179 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v21 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MusicVideo(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v154 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v152 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v185 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v152 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v152 - v35;
  v37 = type metadata accessor for Album(0);
  v184 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v152 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188[3] = v22;
  v188[4] = &protocol witness table for MusicVideo;
  v40 = sub_100049F68(v188);
  v182 = v23;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v23 + 16))(v40, v186, v22);
  sub_100064C78((uint64_t)v188, (uint64_t)&v187);
  v41 = sub_100007E8C(&qword_1011D6DD0);
  if (swift_dynamicCast(v39, &v187, v41, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E550);
    v42 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v42(v33, v36, v30);
    v43 = v30;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v44 = qword_10124DE50;
    v45 = (id)qword_10124DE50;
    v46 = v185;
    static Locale.current.getter(v45);
    v47 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v44, v46, 0, 0, 256);
    v186 = v48;
    v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v36, v43);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v42(v33, v36, v43);
    v50 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v50, v46, 0, 0, 256);
    v51 = v36;
    v52 = v47;
    v49(v51, v43);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v39, v37);
    goto LABEL_31;
  }
  if ((swift_dynamicCast(v27, &v187, v41, v22, 0) & 1) != 0)
  {
    v186 = v22;
    v53 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100E4E4E0);
    v54 = v31;
    v55 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v56 = v30;
    v55(v33, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v57 = qword_10124DE50;
    v58 = (id)qword_10124DE50;
    v59 = v185;
    static Locale.current.getter(v58);
    v60 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v57, v59, 0, 0, 256);
    v61 = *(void (**)(char *, uint64_t))(v54 + 8);
    v61(v53, v56);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E4E530);
    v55(v33, v53, v56);
    v62 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v63 = v59;
    v52 = v60;
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v62, v63, 0, 0, 256);
    v61(v53, v56);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v27, v186);
    goto LABEL_31;
  }
  if (swift_dynamicCast(v21, &v187, v41, v183, 0))
  {
    v64 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x8000000100E4E490);
    v65 = v31;
    v66 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v67 = v33;
    v68 = v33;
    v69 = v30;
    v66(v68, v64, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v70 = qword_10124DE50;
    v71 = (id)qword_10124DE50;
    v72 = v185;
    static Locale.current.getter(v71);
    v73 = String.init(localized:table:bundle:locale:comment:)(v67, 0, 0, v70, v72, 0, 0, 256);
    v186 = v74;
    v75 = *(void (**)(char *, uint64_t))(v65 + 8);
    v75(v64, v69);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v66(v67, v64, v69);
    v76 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v77 = v67;
    v52 = v73;
    String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v76, v72, 0, 0, 256);
    v75(v64, v69);
    (*(void (**)(char *, uint64_t))(v179 + 8))(v21, v183);
    goto LABEL_31;
  }
  v78 = v36;
  if (swift_dynamicCast(v180, &v187, v41, v181, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E37770);
    v79 = v31;
    v80 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v80(v33, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v81 = qword_10124DE50;
    v82 = (id)qword_10124DE50;
    v83 = v185;
    static Locale.current.getter(v82);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v81, v83, 0, 0, 256);
    v84 = *(void (**)(char *, uint64_t))(v79 + 8);
    v84(v78, v30);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v80(v33, v78, v30);
    v85 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v85, v83, 0, 0, 256);
    v84(v78, v30);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v180, v181);
    goto LABEL_31;
  }
  v86 = v176;
  v87 = v30;
  if (swift_dynamicCast(v177, &v187, v41, v178, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E450);
    v88 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v88(v33, v36, v87);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v89 = qword_10124DE50;
    v90 = (id)qword_10124DE50;
    v91 = v185;
    static Locale.current.getter(v90);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v89, v91, 0, 0, 256);
    v92 = *(void (**)(char *, uint64_t))(v31 + 8);
    v92(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v88(v33, v78, v87);
    v93 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v93, v91, 0, 0, 256);
    v92(v78, v87);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v177, v178);
    goto LABEL_31;
  }
  if (swift_dynamicCast(v173, &v187, v41, v174, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000100E4E410);
    v94 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v94(v33, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v95 = qword_10124DE50;
    v96 = (id)qword_10124DE50;
    v97 = v185;
    static Locale.current.getter(v96);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v95, v97, 0, 0, 256);
    v98 = *(void (**)(char *, uint64_t))(v31 + 8);
    v98(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v94(v33, v78, v87);
    v99 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v99, v97, 0, 0, 256);
    v98(v78, v87);
    v100 = *(void (**)(char *, uint64_t))(v169 + 8);
    v101 = v173;
    v102 = &v190;
LABEL_29:
    v110 = *(v102 - 32);
LABEL_30:
    v100(v101, v110);
LABEL_31:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v187);
LABEL_32:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v188);
    return v52;
  }
  if (swift_dynamicCast(v170, &v187, v41, v171, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4E3A0);
    v103 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v104 = v33;
    v103(v33, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v105 = qword_10124DE50;
    v106 = (id)qword_10124DE50;
    v107 = v185;
    static Locale.current.getter(v106);
    v52 = String.init(localized:table:bundle:locale:comment:)(v104, 0, 0, v105, v107, 0, 0, 256);
    v108 = *(void (**)(char *, uint64_t))(v31 + 8);
    v108(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E4E3F0);
    v103(v104, v78, v87);
    v109 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v104, 0, 0, v109, v107, 0, 0, 256);
    v108(v78, v87);
    v100 = *(void (**)(char *, uint64_t))(v168 + 8);
    v101 = v170;
    v102 = &v189;
    goto LABEL_29;
  }
  v112 = v166;
  if (!swift_dynamicCast(v166, &v187, v41, v86, 0))
  {
    v122 = v160;
    v123 = v162;
    if ((swift_dynamicCast(v160, &v187, v41, v162, 0) & 1) != 0)
    {
      v124 = v159;
      v125 = v158;
      (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v158, v122, v123);
      v126 = v157;
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v157, v125, v123);
      v127 = (*(uint64_t (**)(char *, uint64_t))(v124 + 88))(v126, v123);
      if (v127 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v124 + 96))(v126, v123);
        v128 = v175;
        v129 = v155;
        v130 = v125;
        v131 = v181;
        (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v155, v126, v181);
        v52 = sub_100A4FC40(v129);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v131);
        v100 = *(void (**)(char *, uint64_t))(v124 + 8);
        v101 = v130;
LABEL_43:
        v110 = v123;
        goto LABEL_30;
      }
      if (v127 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v124 + 96))(v126, v123);
        v136 = v182;
        v137 = v154;
        (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v154, v126, v22);
        v52 = sub_100A5115C(v137);
        (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v22);
        v100 = *(void (**)(char *, uint64_t))(v124 + 8);
        v101 = v125;
        goto LABEL_43;
      }
      v144 = v125;
      v145 = *(void (**)(char *, uint64_t))(v124 + 8);
      v145(v144, v123);
      v145(v126, v123);
    }
LABEL_54:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v187);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x8000000100E4E300);
    v146 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v146(v33, v78, v87);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v147 = qword_10124DE50;
    v148 = (id)qword_10124DE50;
    v149 = v185;
    static Locale.current.getter(v148);
    v52 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v147, v149, 0, 0, 256);
    v150 = *(void (**)(char *, uint64_t))(v31 + 8);
    v150(v78, v87);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v146(v33, v78, v87);
    v151 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v151, v149, 0, 0, 256);
    v150(v78, v87);
    goto LABEL_32;
  }
  v113 = v163;
  v114 = (*(uint64_t (**)(char *, char *, uint64_t))(v167 + 32))(v163, v112, v86);
  v115 = v161;
  Playlist.Entry.internalItem.getter(v114);
  v116 = v164;
  v117 = v165;
  v118 = (*(uint64_t (**)(char *, uint64_t))(v164 + 88))(v115, v165);
  if (v118 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v116 + 96))(v115, v117);
    v119 = v172;
    v120 = (uint64_t)v156;
    v121 = v178;
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v156, v115, v178);
    v52 = sub_100A526A4(v120);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v120, v121);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v113, v176);
    goto LABEL_31;
  }
  v132 = v113;
  v133 = v167;
  if (v118 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v164 + 96))(v115, v165);
    v134 = v182;
    v135 = v154;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v154, v115, v22);
    v52 = sub_100A5115C(v135);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v22);
    v100 = *(void (**)(char *, uint64_t))(v133 + 8);
LABEL_50:
    v101 = v132;
    v110 = v86;
    goto LABEL_30;
  }
  v138 = v165;
  v139 = v164;
  if (v118 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v164 + 96))(v115, v165);
    v140 = v175;
    v141 = (uint64_t)v155;
    v142 = v181;
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v155, v115, v181);
    v143 = sub_100A4FC40(v141);
LABEL_49:
    v52 = v143;
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v141, v142);
    v100 = *(void (**)(char *, uint64_t))(v133 + 8);
    goto LABEL_50;
  }
  if (v118 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v164 + 96))(v115, v165);
    v140 = v168;
    v141 = (uint64_t)v153;
    v142 = v171;
    (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v153, v115, v171);
    v143 = sub_100A53BF4(v141);
    goto LABEL_49;
  }
  if (v118 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v118 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v132, v86);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v115, v138);
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v164 + 8))(v115, v165);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x8000000100E4E360, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_100A526A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  id v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  id v105;
  char *v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  id v115;
  char *v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  int v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  uint64_t result;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  id v157;
  char *v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD v197[5];
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;

  v195 = a1;
  v172 = type metadata accessor for Track(0);
  v168 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v166 = (char *)&v161 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v167 = (char *)&v161 - v3;
  __chkstk_darwin(v4);
  v169 = (char *)&v161 - v5;
  v170 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v174 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v171 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for Playlist.Entry(0);
  v175 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v173 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v176 = (char *)&v161 - v9;
  v181 = type metadata accessor for TVEpisode(0);
  v177 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v162 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v180 = (char *)&v161 - v12;
  v184 = type metadata accessor for TVSeason(0);
  v179 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v183 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicMovie(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v165 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v186 = (char *)&v161 - v18;
  v189 = type metadata accessor for Song(0);
  v185 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v164 = (char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v188 = (char *)&v161 - v21;
  v190 = type metadata accessor for Playlist(0);
  v187 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v192 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MusicVideo(0);
  v191 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v163 = (char *)&v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v161 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v194 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v161 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v161 - v35;
  v37 = type metadata accessor for Album(0);
  v193 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v161 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197[3] = v14;
  v197[4] = sub_100048748(&qword_1011D6DD8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v40 = sub_100049F68(v197);
  v182 = v15;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 16))(v40, v195, v14);
  sub_100064C78((uint64_t)v197, (uint64_t)&v196);
  v41 = sub_100007E8C(&qword_1011D6DD0);
  if (swift_dynamicCast(v39, &v196, v41, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E550);
    v42 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v42(v33, v36, v30);
    v43 = v30;
    v44 = v36;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v45 = qword_10124DE50;
    v46 = (id)qword_10124DE50;
    v47 = v194;
    static Locale.current.getter(v46);
    v192 = (char *)String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v45, v47, 0, 0, 256);
    v195 = v48;
    v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v44, v43);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v42(v33, v44, v43);
    v50 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v50, v47, 0, 0, 256);
    v51 = v44;
    v52 = (uint64_t)v192;
    v49(v51, v43);
    (*(void (**)(char *, uint64_t))(v193 + 8))(v39, v37);
    goto LABEL_49;
  }
  v193 = v31;
  v53 = v33;
  v54 = v23;
  if ((swift_dynamicCast(v27, &v196, v41, v23, 0) & 1) != 0)
  {
    v192 = (char *)v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100E4E4E0);
    v55 = v193;
    v56 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v57 = v33;
    v58 = v33;
    v59 = v30;
    v56(v58, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v60 = qword_10124DE50;
    v61 = (id)qword_10124DE50;
    v62 = v194;
    static Locale.current.getter(v61);
    v63 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v60, v62, 0, 0, 256);
    v195 = v64;
    v65 = *(void (**)(char *, uint64_t))(v55 + 8);
    v65(v36, v59);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E4E530);
    v56(v57, v36, v59);
    v66 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v67 = v57;
    v52 = v63;
    String.init(localized:table:bundle:locale:comment:)(v67, 0, 0, v66, v62, 0, 0, 256);
    v65(v36, v59);
    (*(void (**)(char *, char *))(v191 + 8))(v27, v192);
    goto LABEL_49;
  }
  v68 = v190;
  if (swift_dynamicCast(v192, &v196, v41, v190, 0))
  {
    v69 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x8000000100E4E490);
    v70 = v193;
    v71 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v72 = v33;
    v73 = v33;
    v74 = v30;
    v71(v73, v69, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v75 = qword_10124DE50;
    v76 = (id)qword_10124DE50;
    v77 = v194;
    static Locale.current.getter(v76);
    v78 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v75, v77, 0, 0, 256);
    v79 = *(void (**)(char *, uint64_t))(v70 + 8);
    v52 = v78;
    v79(v69, v74);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v71(v72, v69, v74);
    v80 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v72, 0, 0, v80, v77, 0, 0, 256);
    v79(v69, v74);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v192, v68);
    goto LABEL_49;
  }
  if (swift_dynamicCast(v188, &v196, v41, v189, 0))
  {
    v81 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E37770);
    v82 = v193;
    v83 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v84 = v53;
    v85 = v53;
    v86 = v30;
    v83(v85, v81, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v87 = qword_10124DE50;
    v88 = (id)qword_10124DE50;
    v89 = v194;
    static Locale.current.getter(v88);
    v52 = String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v87, v89, 0, 0, 256);
    v90 = *(void (**)(char *, uint64_t))(v82 + 8);
    v90(v81, v86);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v83(v84, v81, v86);
    v91 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v91, v89, 0, 0, 256);
    v90(v81, v86);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v188, v189);
    goto LABEL_49;
  }
  v92 = v30;
  v93 = v53;
  if (swift_dynamicCast(v186, &v196, v41, v14, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E450);
    v94 = v193;
    v95 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v95(v53, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v96 = qword_10124DE50;
    v97 = (id)qword_10124DE50;
    v98 = v194;
    static Locale.current.getter(v97);
    v192 = (char *)String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v96, v98, 0, 0, 256);
    v99 = *(void (**)(char *, uint64_t))(v94 + 8);
    v99(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v95(v93, v36, v30);
    v100 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v100, v98, 0, 0, 256);
    v99(v36, v30);
    v101 = v14;
    v52 = (uint64_t)v192;
    (*(void (**)(char *, uint64_t))(v182 + 8))(v186, v101);
    goto LABEL_49;
  }
  if (swift_dynamicCast(v183, &v196, v41, v184, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000100E4E410);
    v102 = v193;
    v103 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v103(v53, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v104 = qword_10124DE50;
    v105 = (id)qword_10124DE50;
    v106 = v194;
    static Locale.current.getter(v105);
    v52 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v104, v106, 0, 0, 256);
    v107 = *(void (**)(char *, uint64_t))(v102 + 8);
    v107(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v103(v93, v36, v30);
    v108 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v108, v106, 0, 0, 256);
    v107(v36, v30);
    v109 = *(void (**)(char *, uint64_t))(v179 + 8);
    v110 = v183;
    v111 = &v200;
    goto LABEL_47;
  }
  if (swift_dynamicCast(v180, &v196, v41, v181, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4E3A0);
    v112 = v193;
    v113 = *(void (**)(char *, char *, uint64_t))(v193 + 16);
    v113(v93, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v114 = qword_10124DE50;
    v115 = (id)qword_10124DE50;
    v116 = v194;
    static Locale.current.getter(v115);
    v52 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v114, v116, 0, 0, 256);
    v117 = *(void (**)(char *, uint64_t))(v112 + 8);
    v117(v36, v30);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E4E3F0);
    v113(v93, v36, v30);
    v118 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v118, v116, 0, 0, 256);
    v117(v36, v30);
    v109 = *(void (**)(char *, uint64_t))(v177 + 8);
    v110 = v180;
    v111 = &v199;
    goto LABEL_47;
  }
  v119 = v176;
  v120 = v178;
  if (!swift_dynamicCast(v176, &v196, v41, v178, 0))
  {
    v133 = v169;
    v134 = v41;
    v135 = v172;
    v136 = swift_dynamicCast(v169, &v196, v134, v172, 0);
    v137 = v193;
    if ((v136 & 1) != 0)
    {
      v138 = v168;
      v139 = v167;
      (*(void (**)(char *, char *, uint64_t))(v168 + 32))(v167, v133, v135);
      v140 = v166;
      (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v166, v139, v135);
      v141 = (*(uint64_t (**)(char *, uint64_t))(v138 + 88))(v140, v135);
      if (v141 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v138 + 96))(v140, v135);
        v142 = v139;
        v143 = v185;
        v144 = v164;
        v145 = v189;
        (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v164, v140, v189);
        v52 = sub_100A4FC40(v144);
        (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v145);
        v109 = *(void (**)(char *, uint64_t))(v138 + 8);
        v110 = v142;
LABEL_39:
        v151 = v135;
LABEL_48:
        v109(v110, v151);
LABEL_49:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v196);
LABEL_50:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v197);
        return v52;
      }
      if (v141 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v138 + 96))(v140, v135);
        v149 = v191;
        v150 = v163;
        (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v163, v140, v54);
        v52 = sub_100A5115C(v150);
        (*(void (**)(char *, uint64_t))(v149 + 8))(v150, v54);
        v109 = *(void (**)(char *, uint64_t))(v138 + 8);
        v110 = v139;
        goto LABEL_39;
      }
      v152 = *(void (**)(char *, uint64_t))(v138 + 8);
      v152(v139, v135);
      v152(v140, v135);
    }
LABEL_54:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v196);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x8000000100E4E300);
    v155 = *(void (**)(char *, char *, uint64_t))(v137 + 16);
    v155(v93, v36, v92);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v156 = qword_10124DE50;
    v157 = (id)qword_10124DE50;
    v158 = v194;
    static Locale.current.getter(v157);
    v52 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v156, v158, 0, 0, 256);
    v159 = *(void (**)(char *, uint64_t))(v137 + 8);
    v159(v36, v92);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v155(v93, v36, v92);
    v160 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v160, v158, 0, 0, 256);
    v159(v36, v92);
    goto LABEL_50;
  }
  v121 = v54;
  v122 = v175;
  v123 = v173;
  v124 = (*(uint64_t (**)(char *, char *, uint64_t))(v175 + 32))(v173, v119, v120);
  v125 = v171;
  Playlist.Entry.internalItem.getter(v124);
  v126 = v174;
  v127 = v170;
  v128 = (*(uint64_t (**)(char *, uint64_t))(v174 + 88))(v125, v170);
  if (v128 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v126 + 96))(v125, v127);
    v129 = v182;
    v130 = v165;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v165, v125, v14);
    v131 = sub_100A526A4(v130);
    v132 = v14;
    v52 = v131;
    (*(void (**)(char *, uint64_t))(v129 + 8))(v130, v132);
    v109 = *(void (**)(char *, uint64_t))(v122 + 8);
    v110 = v123;
LABEL_46:
    v111 = &v198;
LABEL_47:
    v151 = *(v111 - 32);
    goto LABEL_48;
  }
  if (v128 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v174 + 96))(v125, v127);
    v146 = v191;
    v147 = (uint64_t)v163;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v163, v125, v121);
    v148 = sub_100A5115C(v147);
LABEL_45:
    v52 = v148;
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v147, v121);
    v109 = *(void (**)(char *, uint64_t))(v175 + 8);
    v110 = v123;
    goto LABEL_46;
  }
  if (v128 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v174 + 96))(v125, v127);
    v146 = v185;
    v147 = (uint64_t)v164;
    v121 = v189;
    (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v164, v125, v189);
    v148 = sub_100A4FC40(v147);
    goto LABEL_45;
  }
  v153 = v174;
  if (v128 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v174 + 96))(v125, v127);
    v146 = v177;
    v147 = (uint64_t)v162;
    v121 = v181;
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v162, v125, v181);
    v148 = sub_100A53BF4(v147);
    goto LABEL_45;
  }
  if (v128 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v128 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v175 + 8))(v123, v178);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v125, v127);
    v137 = v193;
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v174 + 8))(v125, v127);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x8000000100E4E360, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_100A53BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  void (*v41)(_QWORD *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  id v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  id v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  id v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  id v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  void (*v96)(char *, _QWORD);
  char *v97;
  uint64_t *v98;
  uint64_t result;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  id v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  id v138;
  char *v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD v178[5];
  uint64_t v179;
  uint64_t v180;

  v176 = a1;
  v153 = type metadata accessor for Track(0);
  v149 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v147 = (char *)&v142 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v148 = (char *)&v142 - v3;
  __chkstk_darwin(v4);
  v150 = (char *)&v142 - v5;
  v151 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v155 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v152 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for Playlist.Entry(0);
  v156 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v154 = (char *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v157 = (char *)&v142 - v9;
  v10 = type metadata accessor for TVEpisode(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v143 = (char *)&v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v161 = (char *)&v142 - v14;
  v164 = type metadata accessor for TVSeason(0);
  v160 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v163 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for MusicMovie(0);
  v162 = *(_QWORD *)(v167 - 8);
  __chkstk_darwin(v167);
  v146 = (char *)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v166 = (char *)&v142 - v18;
  v170 = type metadata accessor for Song(0);
  v165 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v145 = (char *)&v142 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v169 = (char *)&v142 - v21;
  v171 = type metadata accessor for Playlist(0);
  v168 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v173 = (char *)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MusicVideo(0);
  v172 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v144 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v142 - v26;
  v28 = type metadata accessor for Locale(0);
  __chkstk_darwin(v28);
  v175 = (char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for String.LocalizationValue(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v142 - v35;
  v37 = type metadata accessor for Album(0);
  v174 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v39 = (char *)&v142 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178[3] = v10;
  v178[4] = sub_100048748(&qword_1011D6DE0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v40 = sub_100049F68(v178);
  v158 = v11;
  v41 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 16);
  v42 = v176;
  v176 = v10;
  v41(v40, v42, v10);
  sub_100064C78((uint64_t)v178, (uint64_t)&v177);
  v43 = sub_100007E8C(&qword_1011D6DD0);
  if (swift_dynamicCast(v39, &v177, v43, v37, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E550);
    v173 = *(char **)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v173)(v33, v36, v30);
    v44 = v36;
    v45 = v33;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v46 = qword_10124DE50;
    v47 = (id)qword_10124DE50;
    v48 = v175;
    static Locale.current.getter(v47);
    v176 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v46, v48, 0, 0, 256);
    v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v44, v30);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    ((void (*)(char *, char *, uint64_t))v173)(v45, v44, v30);
    v50 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v50, v48, 0, 0, 256);
    v51 = v44;
    v52 = v176;
    v49(v51, v30);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v39, v37);
    goto LABEL_26;
  }
  if ((swift_dynamicCast(v27, &v177, v43, v23, 0) & 1) != 0)
  {
    v174 = v23;
    v53 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100E4E4E0);
    v54 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v55 = v33;
    v54(v33, v53, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v56 = qword_10124DE50;
    v57 = (id)qword_10124DE50;
    v58 = v175;
    static Locale.current.getter(v57);
    v176 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v56, v58, 0, 0, 256);
    v59 = *(void (**)(char *, uint64_t))(v31 + 8);
    v59(v53, v30);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E4E530);
    v54(v55, v53, v30);
    v60 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v60, v58, 0, 0, 256);
    v59(v53, v30);
    v61 = v27;
    v52 = v176;
    (*(void (**)(char *, uint64_t))(v172 + 8))(v61, v174);
    goto LABEL_26;
  }
  v62 = v171;
  if (swift_dynamicCast(v173, &v177, v43, v171, 0))
  {
    v63 = v36;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x8000000100E4E490);
    v64 = v31;
    v65 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v66 = v33;
    v65(v33, v36, v30);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v67 = qword_10124DE50;
    v68 = (id)qword_10124DE50;
    v69 = v175;
    static Locale.current.getter(v68);
    v70 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v67, v69, 0, 0, 256);
    v71 = *(void (**)(char *, uint64_t))(v64 + 8);
    v71(v63, v30);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v65(v66, v63, v30);
    v72 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v66, 0, 0, v72, v69, 0, 0, 256);
    v73 = v63;
    v52 = v70;
    v71(v73, v30);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v173, v62);
    goto LABEL_26;
  }
  v74 = v30;
  v75 = v36;
  if (swift_dynamicCast(v169, &v177, v43, v170, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E37770);
    v76 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v77 = v33;
    v76(v33, v75, v74);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v78 = qword_10124DE50;
    v79 = (id)qword_10124DE50;
    v80 = v175;
    static Locale.current.getter(v79);
    v52 = String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v78, v80, 0, 0, 256);
    v81 = *(void (**)(char *, uint64_t))(v31 + 8);
    v81(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v76(v77, v75, v74);
    v82 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v77, 0, 0, v82, v80, 0, 0, 256);
    v81(v75, v74);
    (*(void (**)(char *, uint64_t))(v165 + 8))(v169, v170);
    goto LABEL_26;
  }
  v83 = v33;
  if (swift_dynamicCast(v166, &v177, v43, v167, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E450);
    v84 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v84(v33, v75, v74);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v85 = qword_10124DE50;
    v86 = (id)qword_10124DE50;
    v87 = v175;
    static Locale.current.getter(v86);
    v52 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v85, v87, 0, 0, 256);
    v88 = *(void (**)(char *, uint64_t))(v31 + 8);
    v88(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v84(v83, v75, v74);
    v89 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v89, v87, 0, 0, 256);
    v88(v75, v74);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v166, v167);
    goto LABEL_26;
  }
  if (swift_dynamicCast(v163, &v177, v43, v164, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000100E4E410);
    v90 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v90(v33, v75, v74);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v91 = qword_10124DE50;
    v92 = (id)qword_10124DE50;
    v93 = v175;
    static Locale.current.getter(v92);
    v52 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v91, v93, 0, 0, 256);
    v94 = *(void (**)(char *, uint64_t))(v31 + 8);
    v94(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v90(v83, v75, v74);
    v95 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v95, v93, 0, 0, 256);
    v94(v75, v74);
    v96 = *(void (**)(char *, _QWORD))(v160 + 8);
    v97 = v163;
    v98 = &v180;
    goto LABEL_25;
  }
  if (swift_dynamicCast(v161, &v177, v43, v176, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4E3A0);
    v100 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v100(v33, v75, v74);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v101 = qword_10124DE50;
    v102 = (id)qword_10124DE50;
    v103 = v175;
    static Locale.current.getter(v102);
    v104 = String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v101, v103, 0, 0, 256);
    v105 = *(void (**)(char *, uint64_t))(v31 + 8);
    v52 = v104;
    v105(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E4E3F0);
    v100(v33, v75, v74);
    v106 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v106, v103, 0, 0, 256);
    v105(v75, v74);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v161, v176);
    goto LABEL_26;
  }
  v107 = v23;
  v108 = v157;
  v109 = v159;
  if (!swift_dynamicCast(v157, &v177, v43, v159, 0))
  {
    v120 = v150;
    v121 = v153;
    if ((swift_dynamicCast(v150, &v177, v43, v153, 0) & 1) != 0)
    {
      v122 = v149;
      v123 = v148;
      (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v148, v120, v121);
      v124 = v147;
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v147, v123, v121);
      v125 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v124, v121);
      if (v125 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v122 + 96))(v124, v121);
        v126 = v165;
        v127 = v145;
        v128 = v170;
        (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v145, v124, v170);
        v129 = sub_100A4FC40(v127);
LABEL_42:
        v52 = v129;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v121);
        goto LABEL_26;
      }
      if (v125 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v122 + 96))(v124, v121);
        v126 = v172;
        v127 = v144;
        v128 = v107;
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v144, v124, v107);
        v129 = sub_100A5115C(v127);
        goto LABEL_42;
      }
      v134 = *(void (**)(char *, uint64_t))(v122 + 8);
      v134(v123, v121);
      v134(v124, v121);
    }
LABEL_53:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v177);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x8000000100E4E300);
    v136 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v136(v83, v75, v74);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v137 = qword_10124DE50;
    v138 = (id)qword_10124DE50;
    v139 = v175;
    static Locale.current.getter(v138);
    v52 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v137, v139, 0, 0, 256);
    v140 = *(void (**)(char *, uint64_t))(v31 + 8);
    v140(v75, v74);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v136(v83, v75, v74);
    v141 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v141, v139, 0, 0, 256);
    v140(v75, v74);
    goto LABEL_27;
  }
  v110 = v156;
  v111 = v154;
  v112 = (*(uint64_t (**)(char *, char *, uint64_t))(v156 + 32))(v154, v108, v109);
  v113 = v152;
  Playlist.Entry.internalItem.getter(v112);
  v114 = v155;
  v115 = v151;
  v116 = (*(uint64_t (**)(char *, uint64_t))(v155 + 88))(v113, v151);
  if (v116 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v114 + 96))(v113, v115);
    v117 = v162;
    v118 = v146;
    v119 = v167;
    (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v146, v113, v167);
    v52 = sub_100A526A4(v118);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v119);
    v96 = *(void (**)(char *, _QWORD))(v110 + 8);
    v97 = v111;
LABEL_49:
    v98 = &v179;
LABEL_25:
    v96(v97, *(v98 - 32));
LABEL_26:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v177);
LABEL_27:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v178);
    return v52;
  }
  if (v116 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v155 + 96))(v113, v115);
    v130 = v172;
    v131 = v144;
    v132 = v107;
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v144, v113, v107);
    v133 = sub_100A5115C(v131);
LABEL_48:
    v52 = v133;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v132);
    v96 = *(void (**)(char *, _QWORD))(v156 + 8);
    v97 = v111;
    goto LABEL_49;
  }
  if (v116 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v155 + 96))(v113, v115);
    v130 = v165;
    v131 = v145;
    v132 = v170;
    (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v145, v113, v170);
    v133 = sub_100A4FC40(v131);
    goto LABEL_48;
  }
  v135 = v155;
  if (v116 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v155 + 96))(v113, v115);
    v130 = v158;
    v131 = v143;
    v132 = v176;
    (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v143, v113, v176);
    v133 = sub_100A53BF4(v131);
    goto LABEL_48;
  }
  if (v116 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v116 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v156 + 8))(v111, v159);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v113, v115);
    goto LABEL_53;
  }
  (*(void (**)(char *, uint64_t))(v155 + 8))(v113, v115);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x8000000100E4E360, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

uint64_t sub_100A55104(void (*a1)(char *, char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  id v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  id v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  id v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  id v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  id v108;
  char *v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  uint64_t result;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  id v150;
  char *v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  _QWORD v190[5];
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v187 = a3;
  v188 = a1;
  v164 = type metadata accessor for Track(0);
  v160 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v158 = (char *)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v159 = (char *)&v154 - v6;
  __chkstk_darwin(v7);
  v161 = (char *)&v154 - v8;
  v162 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v166 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v163 = (char *)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Playlist.Entry(0);
  v167 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v165 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v168 = (char *)&v154 - v12;
  v173 = type metadata accessor for TVEpisode(0);
  v169 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v154 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v172 = (char *)&v154 - v15;
  v176 = type metadata accessor for TVSeason(0);
  v171 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v175 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for MusicMovie(0);
  v174 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v157 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v178 = (char *)&v154 - v19;
  v182 = type metadata accessor for Song(0);
  v177 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v156 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v181 = (char *)&v154 - v22;
  v184 = type metadata accessor for Playlist(0);
  v180 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v24 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MusicVideo(0);
  v183 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v155 = (char *)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v154 - v28;
  v30 = type metadata accessor for Locale(0);
  __chkstk_darwin(v30);
  v186 = (char *)&v154 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for String.LocalizationValue(0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v154 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v38 = (char *)&v154 - v37;
  v39 = type metadata accessor for Album(0);
  v185 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v41 = (char *)&v154 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190[3] = a2;
  v190[4] = v187;
  v42 = sub_100049F68(v190);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v42, v188, a2);
  sub_100064C78((uint64_t)v190, (uint64_t)&v189);
  v43 = sub_100007E8C(&qword_1011D6DD0);
  if (swift_dynamicCast(v41, &v189, v43, v39, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E550);
    v188 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v188(v35, v38, v32);
    v44 = v32;
    v45 = v35;
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v46 = qword_10124DE50;
    v47 = (id)qword_10124DE50;
    v48 = v186;
    static Locale.current.getter(v47);
    v49 = String.init(localized:table:bundle:locale:comment:)(v45, 0, 0, v46, v48, 0, 0, 256);
    v187 = v50;
    v51 = *(void (**)(char *, uint64_t))(v33 + 8);
    v51(v38, v44);
    String.LocalizationValue.init(stringLiteral:)(0x41206574656C6544, 0xEC0000006D75626CLL);
    v188(v45, v38, v44);
    v52 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v53 = v45;
    v54 = v49;
    String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v52, v48, 0, 0, 256);
    v51(v38, v44);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v41, v39);
    goto LABEL_49;
  }
  v55 = v35;
  v56 = v25;
  if ((swift_dynamicCast(v29, &v189, v43, v25, 0) & 1) != 0)
  {
    v188 = (void (*)(char *, char *, uint64_t))v25;
    v57 = v38;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000043, 0x8000000100E4E4E0);
    v58 = v33;
    v59 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v60 = v55;
    v61 = v55;
    v62 = v32;
    v59(v61, v57, v32);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v63 = qword_10124DE50;
    v64 = (id)qword_10124DE50;
    v65 = v186;
    static Locale.current.getter(v64);
    v66 = String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, v63, v65, 0, 0, 256);
    v67 = *(void (**)(char *, uint64_t))(v58 + 8);
    v67(v57, v62);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100E4E530);
    v59(v60, v57, v62);
    v68 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, v68, v65, 0, 0, 256);
    v69 = v57;
    v54 = v66;
    v67(v69, v62);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v183 + 8))(v29, v188);
    goto LABEL_49;
  }
  v70 = v32;
  if (swift_dynamicCast(v24, &v189, v43, v184, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x8000000100E4E490);
    v71 = v33;
    v72 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v73 = v55;
    v72(v55, v38, v70);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v74 = qword_10124DE50;
    v75 = (id)qword_10124DE50;
    v76 = v186;
    static Locale.current.getter(v75);
    v188 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v74, v76, 0, 0, 256);
    v77 = *(void (**)(char *, uint64_t))(v71 + 8);
    v77(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x50206574656C6544, 0xEF7473696C79616CLL);
    v72(v73, v38, v70);
    v78 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v73, 0, 0, v78, v76, 0, 0, 256);
    v77(v38, v70);
    v79 = v24;
    v54 = (uint64_t)v188;
    (*(void (**)(char *, uint64_t))(v180 + 8))(v79, v184);
    goto LABEL_49;
  }
  if (swift_dynamicCast(v181, &v189, v43, v182, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E37770);
    v80 = v33;
    v81 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v81(v55, v38, v32);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v82 = qword_10124DE50;
    v83 = (id)qword_10124DE50;
    v84 = v186;
    static Locale.current.getter(v83);
    v54 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v82, v84, 0, 0, 256);
    v85 = *(void (**)(char *, uint64_t))(v80 + 8);
    v85(v38, v32);
    String.LocalizationValue.init(stringLiteral:)(0x53206574656C6544, 0xEB00000000676E6FLL);
    v81(v55, v38, v32);
    v86 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v86, v84, 0, 0, 256);
    v85(v38, v32);
    (*(void (**)(char *, uint64_t))(v177 + 8))(v181, v182);
    goto LABEL_49;
  }
  v87 = v55;
  if (swift_dynamicCast(v178, &v189, v43, v179, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4E450);
    v88 = v33;
    v89 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v89(v55, v38, v70);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v90 = qword_10124DE50;
    v91 = (id)qword_10124DE50;
    v92 = v186;
    static Locale.current.getter(v91);
    v54 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v90, v92, 0, 0, 256);
    v93 = *(void (**)(char *, uint64_t))(v88 + 8);
    v93(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x4D206574656C6544, 0xEC0000006569766FLL);
    v89(v55, v38, v70);
    v94 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v94, v92, 0, 0, 256);
    v93(v38, v70);
    v95 = *(void (**)(char *, uint64_t))(v174 + 8);
    v96 = v178;
    v97 = &v194;
    goto LABEL_47;
  }
  if (swift_dynamicCast(v175, &v189, v43, v176, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x8000000100E4E410);
    v98 = v33;
    v99 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v99(v55, v38, v70);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v100 = qword_10124DE50;
    v101 = (id)qword_10124DE50;
    v102 = v186;
    static Locale.current.getter(v101);
    v54 = String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v100, v102, 0, 0, 256);
    v103 = *(void (**)(char *, uint64_t))(v98 + 8);
    v103(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x54206574656C6544, 0xEE00776F68532056);
    v99(v55, v38, v70);
    v104 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v55, 0, 0, v104, v102, 0, 0, 256);
    v103(v38, v70);
    v95 = *(void (**)(char *, uint64_t))(v171 + 8);
    v96 = v175;
    v97 = &v193;
    goto LABEL_47;
  }
  if (swift_dynamicCast(v172, &v189, v43, v173, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4E3A0);
    v105 = v33;
    v106 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v106(v55, v38, v70);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v107 = qword_10124DE50;
    v108 = (id)qword_10124DE50;
    v109 = v186;
    static Locale.current.getter(v108);
    v54 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v107, v109, 0, 0, 256);
    v110 = *(void (**)(char *, uint64_t))(v105 + 8);
    v110(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E4E3F0);
    v106(v87, v38, v70);
    v111 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v111, v109, 0, 0, 256);
    v110(v38, v70);
    v95 = *(void (**)(char *, uint64_t))(v169 + 8);
    v96 = v172;
    v97 = &v192;
    goto LABEL_47;
  }
  v112 = v168;
  v113 = v170;
  if (!swift_dynamicCast(v168, &v189, v43, v170, 0))
  {
    v125 = v161;
    v126 = v43;
    v127 = v164;
    v128 = v33;
    if ((swift_dynamicCast(v161, &v189, v126, v164, 0) & 1) != 0)
    {
      v129 = v160;
      v130 = v159;
      (*(void (**)(char *, char *, uint64_t))(v160 + 32))(v159, v125, v127);
      v131 = v158;
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v158, v130, v127);
      v132 = (*(uint64_t (**)(char *, uint64_t))(v129 + 88))(v131, v127);
      if (v132 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v129 + 96))(v131, v127);
        v133 = v177;
        v134 = (uint64_t)v156;
        v135 = v130;
        v136 = v182;
        (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v156, v131, v182);
        v54 = sub_100A4FC40(v134);
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v134, v136);
        v95 = *(void (**)(char *, uint64_t))(v129 + 8);
        v96 = v135;
LABEL_39:
        v143 = v127;
LABEL_48:
        v95(v96, v143);
LABEL_49:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v189);
LABEL_50:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(v190);
        return v54;
      }
      if (v132 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v129 + 96))(v131, v127);
        v141 = v183;
        v142 = (uint64_t)v155;
        (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v155, v131, v56);
        v54 = sub_100A5115C(v142);
        (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v56);
        v95 = *(void (**)(char *, uint64_t))(v129 + 8);
        v96 = v130;
        goto LABEL_39;
      }
      v144 = v130;
      v145 = *(void (**)(char *, uint64_t))(v129 + 8);
      v145(v144, v127);
      v145(v131, v127);
    }
LABEL_54:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v189);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x8000000100E4E300);
    v148 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
    v148(v87, v38, v70);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v149 = qword_10124DE50;
    v150 = (id)qword_10124DE50;
    v151 = v186;
    static Locale.current.getter(v150);
    v54 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v149, v151, 0, 0, 256);
    v152 = *(void (**)(char *, uint64_t))(v128 + 8);
    v152(v38, v70);
    String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    v148(v87, v38, v70);
    v153 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, v153, v151, 0, 0, 256);
    v152(v38, v70);
    goto LABEL_50;
  }
  v114 = v25;
  v115 = v167;
  v116 = v165;
  v117 = (*(uint64_t (**)(char *, char *, uint64_t))(v167 + 32))(v165, v112, v113);
  v118 = v163;
  Playlist.Entry.internalItem.getter(v117);
  v119 = v166;
  v120 = v162;
  v121 = (*(uint64_t (**)(char *, uint64_t))(v166 + 88))(v118, v162);
  if (v121 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v119 + 96))(v118, v120);
    v122 = v174;
    v123 = (uint64_t)v157;
    v124 = v179;
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v157, v118, v179);
    v54 = sub_100A526A4(v123);
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v123, v124);
    v95 = *(void (**)(char *, uint64_t))(v115 + 8);
LABEL_46:
    v96 = v116;
    v97 = &v191;
LABEL_47:
    v143 = *(v97 - 32);
    goto LABEL_48;
  }
  if (v121 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v166 + 96))(v118, v120);
    v137 = v183;
    v138 = (uint64_t)v155;
    v139 = v114;
    (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v155, v118, v114);
    v140 = sub_100A5115C(v138);
LABEL_45:
    v54 = v140;
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v138, v139);
    v95 = *(void (**)(char *, uint64_t))(v167 + 8);
    goto LABEL_46;
  }
  if (v121 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v166 + 96))(v118, v120);
    v137 = v177;
    v138 = (uint64_t)v156;
    v139 = v182;
    (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v156, v118, v182);
    v140 = sub_100A4FC40(v138);
    goto LABEL_45;
  }
  v146 = v166;
  if (v121 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v166 + 96))(v118, v120);
    v137 = v169;
    v138 = (uint64_t)v154;
    v139 = v173;
    (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v154, v118, v173);
    v140 = sub_100A53BF4(v138);
    goto LABEL_45;
  }
  if (v121 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v121 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v116, v170);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v118, v120);
    v128 = v33;
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v166 + 8))(v118, v120);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000036, 0x8000000100E4E360, "MusicCore/Alert+Music.swift", 27, 2, 304, 0);
  __break(1u);
  return result;
}

