void sub_100A56630(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1DB0 != -1)
    swift_once(&qword_1011D1DB0, sub_100A71564);
  v9 = static CloudLibrary.EnablementContext.action;
  v8 = unk_10124E1E0;
  v10 = swift_bridgeObjectRetain();
  v11 = UUID.init()(v10);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v7, v4);
  CloudLibrary.EnablementContext.title.getter(a1);
  v36 = v16;
  v37 = v15;
  CloudLibrary.EnablementContext.message.getter(a1);
  v34 = v18;
  v35 = v17;
  v19 = sub_100007E8C(&qword_1011D8810);
  v20 = swift_allocObject(v19, 144, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v20 + 32) = v12;
  *(_QWORD *)(v20 + 40) = v14;
  *(_QWORD *)(v20 + 48) = v9;
  *(_QWORD *)(v20 + 56) = v8;
  *(_BYTE *)(v20 + 64) = 2;
  *(_QWORD *)(v20 + 72) = &unk_1011D6DF8;
  *(_QWORD *)(v20 + 80) = 0;
  v21 = qword_1011D2420;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v4;
  if (v21 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v23 = static String.cancelButtonTitle;
  v24 = qword_10124ED40;
  v25 = swift_bridgeObjectRetain();
  v26 = UUID.init()(v25);
  v27 = UUID.uuidString.getter(v26);
  v29 = v28;
  v33(v7, v22);
  *(_QWORD *)(v20 + 88) = v27;
  *(_QWORD *)(v20 + 96) = v29;
  *(_QWORD *)(v20 + 104) = v23;
  *(_QWORD *)(v20 + 112) = v24;
  *(_BYTE *)(v20 + 120) = 0;
  *(_QWORD *)(v20 + 128) = 0;
  *(_QWORD *)(v20 + 136) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *(_QWORD *)a2 = v37;
  *(_QWORD *)(a2 + 8) = v30;
  v31 = v34;
  *(_QWORD *)(a2 + 16) = v35;
  *(_QWORD *)(a2 + 24) = v31;
  *(_BYTE *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = 0;
}

char *sub_100A56824@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  unsigned __int8 v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *result;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  const char *v49;
  uint64_t v50;
  id v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  unint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(char *, uint64_t);
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  _QWORD v119[12];

  v111 = a2;
  v117 = type metadata accessor for UUID(0);
  v112 = *(uint64_t (**)(char *, uint64_t))(v117 - 8);
  __chkstk_darwin(v117);
  v116 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v118 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v8 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v105 - v10;
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v12 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDF110);
  v14 = swift_getKeyPath(&unk_100EDF138);
  static Published.subscript.getter(v119, v12, KeyPath, v14);
  swift_release();
  swift_release();
  v15 = v119[4];
  v16 = (void *)v119[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v17 = sub_100A3FBA4(7u, v15);
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    v18 = 0x8000000100E4E790;
    v19 = 0xD000000000000012;
  }
  else
  {
    v18 = 0x8000000100E4E590;
    v19 = 0x100000000000002DLL;
  }
  String.LocalizationValue.init(stringLiteral:)(v19, v18);
  v20 = v115;
  v114 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v114(v8, v11, v115);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v21 = qword_10124DE50;
  v22 = (id)qword_10124DE50;
  v23 = v118;
  static Locale.current.getter(v22);
  v24 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v21, v23, 0, 0, 256);
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v11, v20);
  v28 = objc_msgSend((id)objc_opt_self(AMSRestrictions), "allowAccountModifications");
  v113 = v26;
  if ((v28 & 1) != 0)
  {
    v110 = v24;
    v109 = (uint64_t (*)(char *, uint64_t))v27;
    if ((v17 & 1) != 0)
    {
      if ((a1 & 1) != 0)
      {
        v29 = 0xD000000000000087;
        v30 = "This content is restricted from playing on this device. To change your Content Restrictions, go to Setting"
              "s and allow explicit content.";
      }
      else
      {
        v29 = 0xD000000000000061;
        v30 = "To add this to your library, change your Content Restrictions to allow a less restrictive rating.";
      }
      String.LocalizationValue.init(stringLiteral:)(v29, (unint64_t)(v30 - 32) | 0x8000000000000000);
      v114(v8, v11, v20);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v50 = qword_10124DE50;
      v51 = (id)qword_10124DE50;
      v52 = v118;
      static Locale.current.getter(v51);
      v108 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v50, v52, 0, 0, 256);
      v107 = v53;
      v27(v11, v20);
      String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
      v114(v8, v11, v20);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v54 = qword_10124DE50;
      v55 = (id)qword_10124DE50;
      v56 = v118;
      static Locale.current.getter(v55);
      v106 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v54, v56, 0, 0, 256);
      v105 = v57;
      v58 = ((uint64_t (*)(char *, uint64_t))v27)(v11, v20);
      v59 = v116;
      v60 = UUID.init()(v58);
      v61 = UUID.uuidString.getter(v60);
      v63 = v62;
      v64 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
      v64(v59, v117);
      v40 = sub_1009B95B8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v66 = *((_QWORD *)v40 + 2);
      v65 = *((_QWORD *)v40 + 3);
      v112 = (uint64_t (*)(char *, uint64_t))v64;
      if (v66 >= v65 >> 1)
        v40 = sub_1009B95B8((char *)(v65 > 1), v66 + 1, 1, v40);
      *((_QWORD *)v40 + 2) = v66 + 1;
      v67 = &v40[56 * v66];
      *((_QWORD *)v67 + 4) = v61;
      *((_QWORD *)v67 + 5) = v63;
      v68 = v105;
      *((_QWORD *)v67 + 6) = v106;
      *((_QWORD *)v67 + 7) = v68;
      v67[64] = 2;
      v69 = &unk_1011D6DF0;
    }
    else
    {
      if ((a1 & 1) != 0)
      {
        v48 = 0xD00000000000005BLL;
        v49 = "To play this item, change your Content Restrictions to allow a less restrictive rating now.";
      }
      else
      {
        v48 = 0xD000000000000065;
        v49 = "To add this to your library, change your Content Restrictions to allow a less restrictive rating now.";
      }
      String.LocalizationValue.init(stringLiteral:)(v48, (unint64_t)(v49 - 32) | 0x8000000000000000);
      v114(v8, v11, v20);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v70 = qword_10124DE50;
      v71 = (id)qword_10124DE50;
      v72 = v118;
      static Locale.current.getter(v71);
      v108 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v70, v72, 0, 0, 256);
      v107 = v73;
      v27(v11, v20);
      String.LocalizationValue.init(stringLiteral:)(0x776F6C6C41, 0xE500000000000000);
      v114(v8, v11, v20);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v74 = qword_10124DE50;
      v75 = (id)qword_10124DE50;
      v76 = v118;
      static Locale.current.getter(v75);
      v106 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v74, v76, 0, 0, 256);
      v105 = v77;
      v78 = ((uint64_t (*)(char *, uint64_t))v27)(v11, v20);
      v79 = v116;
      v80 = UUID.init()(v78);
      v81 = UUID.uuidString.getter(v80);
      v83 = v82;
      v84 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
      v84(v79, v117);
      v40 = sub_1009B95B8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v86 = *((_QWORD *)v40 + 2);
      v85 = *((_QWORD *)v40 + 3);
      v112 = (uint64_t (*)(char *, uint64_t))v84;
      if (v86 >= v85 >> 1)
        v40 = sub_1009B95B8((char *)(v85 > 1), v86 + 1, 1, v40);
      *((_QWORD *)v40 + 2) = v86 + 1;
      v67 = &v40[56 * v86];
      *((_QWORD *)v67 + 4) = v81;
      *((_QWORD *)v67 + 5) = v83;
      v87 = v105;
      *((_QWORD *)v67 + 6) = v106;
      *((_QWORD *)v67 + 7) = v87;
      v67[64] = 2;
      v69 = &unk_1011D6DE8;
    }
    *((_QWORD *)v67 + 9) = v69;
    *((_QWORD *)v67 + 10) = 0;
    String.LocalizationValue.init(stringLiteral:)(0x776F4E20746F4ELL, 0xE700000000000000);
    v88 = v115;
    v114(v8, v11, v115);
    v89 = qword_10124DE50;
    v90 = (id)qword_10124DE50;
    v91 = v118;
    static Locale.current.getter(v90);
    v92 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v89, v91, 0, 0, 256);
    v94 = v93;
    v95 = v109(v11, v88);
    v96 = v116;
    v97 = UUID.init()(v95);
    v98 = UUID.uuidString.getter(v97);
    v100 = v99;
    result = (char *)v112(v96, v117);
    v102 = *((_QWORD *)v40 + 2);
    v101 = *((_QWORD *)v40 + 3);
    if (v102 >= v101 >> 1)
    {
      result = sub_1009B95B8((char *)(v101 > 1), v102 + 1, 1, v40);
      v40 = result;
    }
    v43 = v111;
    v44 = v108;
    v47 = v107;
    *((_QWORD *)v40 + 2) = v102 + 1;
    v103 = &v40[56 * v102];
    *((_QWORD *)v103 + 4) = v98;
    *((_QWORD *)v103 + 5) = v100;
    *((_QWORD *)v103 + 6) = v92;
    *((_QWORD *)v103 + 7) = v94;
    v103[64] = 2;
    v46 = v103 + 72;
    v24 = v110;
  }
  else
  {
    if (qword_1011D2410 != -1)
      swift_once(&qword_1011D2410, sub_100B6231C);
    v31 = static String.okButtonTitle;
    v32 = qword_10124ED20;
    v33 = swift_bridgeObjectRetain();
    v34 = v116;
    v35 = UUID.init()(v33);
    v36 = UUID.uuidString.getter(v35);
    v38 = v37;
    (*((void (**)(char *, uint64_t))v112 + 1))(v34, v117);
    result = sub_1009B95B8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v40 = result;
    v42 = *((_QWORD *)result + 2);
    v41 = *((_QWORD *)result + 3);
    v43 = v111;
    if (v42 >= v41 >> 1)
    {
      result = sub_1009B95B8((char *)(v41 > 1), v42 + 1, 1, result);
      v40 = result;
    }
    v44 = 0;
    *((_QWORD *)v40 + 2) = v42 + 1;
    v45 = &v40[56 * v42];
    *((_QWORD *)v45 + 4) = v36;
    *((_QWORD *)v45 + 5) = v38;
    *((_QWORD *)v45 + 6) = v31;
    *((_QWORD *)v45 + 7) = v32;
    v45[64] = 2;
    v46 = v45 + 72;
    v47 = 0xE000000000000000;
  }
  *v46 = 0;
  v46[1] = 0;
  v104 = v113;
  *(_QWORD *)v43 = v24;
  *(_QWORD *)(v43 + 8) = v104;
  *(_QWORD *)(v43 + 16) = v44;
  *(_QWORD *)(v43 + 24) = v47;
  *(_BYTE *)(v43 + 32) = 0;
  *(_QWORD *)(v43 + 40) = v40;
  *(_QWORD *)(v43 + 48) = 0;
  return result;
}

uint64_t sub_100A571B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v56 = a2;
  v57 = a3;
  v55 = a1;
  v58 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - v18;
  String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
  v52 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v52(v16, v19, v13);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v20 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v21 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v20, v12, 0, 0, 256);
  v53 = v22;
  v54 = v21;
  v51 = *(void (**)(char *, uint64_t))(v14 + 8);
  v51(v19, v13);
  v23 = swift_allocObject(&unk_1010F27E8, 32, 7);
  *(_QWORD *)(v23 + 16) = v57;
  *(_QWORD *)(v23 + 24) = a4;
  v47 = v23;
  swift_retain();
  v25 = UUID.init()(v24);
  v26 = UUID.uuidString.getter(v25);
  v49 = v27;
  v50 = v26;
  v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v9, v58);
  if (qword_1011D2430 != -1)
    swift_once(&qword_1011D2430, sub_100B62450);
  v29 = qword_10124ED60;
  v48 = static String.notNowButtonTitle;
  v30 = swift_allocObject(&unk_1010F2810, 32, 7);
  *(_QWORD *)(v30 + 16) = v57;
  *(_QWORD *)(v30 + 24) = a4;
  swift_retain();
  v31 = swift_bridgeObjectRetain();
  v32 = UUID.init()(v31);
  v33 = UUID.uuidString.getter(v32);
  v57 = v34;
  v28(v9, v58);
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E4E190);
  v52(v16, v19, v13);
  v35 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v36 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v35, v12, 0, 0, 256);
  v38 = v37;
  v51(v19, v13);
  v39 = sub_100007E8C(&qword_1011D8810);
  v40 = swift_allocObject(v39, 144, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100EA7A80;
  v41 = v49;
  *(_QWORD *)(v40 + 32) = v50;
  *(_QWORD *)(v40 + 40) = v41;
  v42 = v53;
  *(_QWORD *)(v40 + 48) = v54;
  *(_QWORD *)(v40 + 56) = v42;
  *(_BYTE *)(v40 + 64) = 2;
  v43 = v47;
  *(_QWORD *)(v40 + 72) = &unk_1011D6D88;
  *(_QWORD *)(v40 + 80) = v43;
  v44 = v57;
  *(_QWORD *)(v40 + 88) = v33;
  *(_QWORD *)(v40 + 96) = v44;
  *(_QWORD *)(v40 + 104) = v48;
  *(_QWORD *)(v40 + 112) = v29;
  *(_BYTE *)(v40 + 120) = 0;
  *(_QWORD *)(v40 + 128) = &unk_1011D6D98;
  *(_QWORD *)(v40 + 136) = v30;
  result = swift_bridgeObjectRetain();
  *(_QWORD *)a5 = v36;
  *(_QWORD *)(a5 + 8) = v38;
  *(_QWORD *)(a5 + 16) = v55;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = v40;
  *(_QWORD *)(a5 + 48) = 0;
  return result;
}

id sub_100A5755C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id result;
  void *v22;
  int wapiCapability;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);

  v47 = a3;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100E4E1B0);
  v50 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v50(v11, v14, v8);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v15 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v48 = v17;
  v49 = v16;
  v18 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v19 = v18(v14, v8);
  result = (id)MobileGestalt_get_current_device(v19, v20);
  if (result)
  {
    v22 = result;
    wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability)
    {
      v24 = 0x8000000100E4E270;
      v25 = 0x100000000000008BLL;
    }
    else
    {
      v25 = 0x100000000000008CLL;
      v24 = 0x8000000100E4E1E0;
    }
    String.LocalizationValue.init(stringLiteral:)(v25, v24);
    v50(v11, v14, v8);
    v26 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v27 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v26, v7, 0, 0, 256);
    v45 = v28;
    v46 = v27;
    v29 = a1;
    v30 = a2;
    v18(v14, v8);
    v31 = sub_100007E8C(&qword_1011D8810);
    v32 = swift_allocObject(v31, 144, 7);
    *(_OWORD *)(v32 + 16) = xmmword_100EA7A80;
    if (qword_1011D2430 != -1)
      swift_once(&qword_1011D2430, sub_100B62450);
    v33 = static String.notNowButtonTitle;
    v34 = qword_10124ED60;
    v35 = swift_allocObject(&unk_1010F2838, 32, 7);
    *(_QWORD *)(v35 + 16) = v29;
    *(_QWORD *)(v35 + 24) = v30;
    *(_QWORD *)(v32 + 32) = 0x6C65636E6163;
    *(_QWORD *)(v32 + 40) = 0xE600000000000000;
    *(_QWORD *)(v32 + 48) = v33;
    *(_QWORD *)(v32 + 56) = v34;
    *(_BYTE *)(v32 + 64) = 0;
    *(_QWORD *)(v32 + 72) = &unk_1011D6DA8;
    *(_QWORD *)(v32 + 80) = v35;
    swift_bridgeObjectRetain();
    sub_100048AAC(v29, v30);
    String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
    v50(v11, v14, v8);
    v36 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v37 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v36, v7, 0, 0, 256);
    v39 = v38;
    v18(v14, v8);
    v40 = swift_allocObject(&unk_1010F2860, 32, 7);
    *(_QWORD *)(v40 + 16) = v29;
    *(_QWORD *)(v40 + 24) = v30;
    *(_QWORD *)(v32 + 88) = 0x6E4F6E727574;
    *(_QWORD *)(v32 + 96) = 0xE600000000000000;
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 112) = v39;
    *(_BYTE *)(v32 + 120) = 2;
    *(_QWORD *)(v32 + 128) = &unk_1011D6DB8;
    *(_QWORD *)(v32 + 136) = v40;
    result = (id)sub_100048AAC(v29, v30);
    v41 = v47;
    v42 = v48;
    *v47 = v49;
    v41[1] = v42;
    v43 = v45;
    v41[2] = v46;
    v41[3] = v43;
    *((_BYTE *)v41 + 32) = 0;
    v41[5] = v32;
    v41[6] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100A57950(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int64x2_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  void (*v33)(char *, char *, uint64_t);
  id v34;
  NSURL *v35;
  void *v36;
  void *v37;
  unsigned int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v52 = a8;
  v55 = a6;
  v56 = a7;
  v53 = a4;
  v54 = a5;
  v13 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  __chkstk_darwin(v13);
  v49 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v48 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - v19;
  v21 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v47 - v25;
  if (qword_1011D24D8 != -1)
    swift_once(&qword_1011D24D8, sub_100B63A4C);
  v27 = 0uLL;
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    sub_100A6F91C(a1, a2, a3, v53, v54, v55, v56, v52 & 1, (uint64_t)v26);
    sub_10098B074((uint64_t)v26, (uint64_t)v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15) == 1)
    {
      sub_10098B0BC((uint64_t)v26);
      v28 = (uint64_t)v23;
LABEL_10:
      sub_10098B0BC(v28);
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 0uLL;
      v27 = 0uLL;
      goto LABEL_11;
    }
    v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v33(v20, v23, v15);
    v34 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    URL._bridgeToObjectiveC()(v35);
    v37 = v36;
    v38 = objc_msgSend(v34, "canOpenURL:", v36);

    if (!v38)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
      v28 = (uint64_t)v26;
      goto LABEL_10;
    }
    v39 = v48;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v48, v20, v15);
    v40 = *(unsigned __int8 *)(v16 + 80);
    v41 = (v40 + 16) & ~v40;
    v31 = swift_allocObject(&unk_1010F27C0, v41 + v17, v40 | 7);
    v42 = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v31 + v41, v39, v15);
    v43 = v49;
    v44 = UUID.init()(v42);
    v29 = UUID.uuidString.getter(v44);
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v51);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    sub_10098B0BC((uint64_t)v26);
    v27 = vdupq_n_s64(0x52206120656C6946uLL);
    v27.i64[0] = v46;
    v32 = xmmword_100ED8650;
    v30 = &unk_1011D6D78;
  }
  else
  {
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0uLL;
  }
LABEL_11:
  *(_QWORD *)a9 = v29;
  *(int64x2_t *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v32;
  *(_QWORD *)(a9 + 40) = v30;
  *(_QWORD *)(a9 + 48) = v31;
}

uint64_t sub_100A57CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D67D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100A57CEC@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  void *v19;
  char wapiCapability;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  id v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  id v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  BOOL v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  void *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  char *v122;

  v4 = type metadata accessor for UUID(0);
  v121 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v122 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v111 - v14;
  result = (id)MobileGestalt_get_current_device(v16, v17);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v19 = result;
  wapiCapability = MobileGestalt_get_wapiCapability();

  v119 = v4;
  v120 = a2;
  if (!a1)
    goto LABEL_24;
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(a1) || (objc_opt_self(MPModelArtist), swift_dynamicCastObjCClass(a1)))
  {
    v21 = v6;
    if ((wapiCapability & 1) != 0)
    {
      String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E4DDB0);
      v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v22(v12, v15, v9);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v23 = qword_10124DE50;
      v24 = (id)qword_10124DE50;
      v25 = v122;
      static Locale.current.getter(v24);
      v26 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v23, v25, 0, 0, 256);
      v113 = v27;
      v114 = v26;
      v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v28(v15, v9);
      v29 = 0x8000000100E4E120;
      v30 = 0x100000000000006ALL;
      goto LABEL_48;
    }
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E4DD60);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v31 = qword_10124DE50;
    v32 = (id)qword_10124DE50;
    v25 = v122;
    static Locale.current.getter(v32);
    v33 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v31, v25, 0, 0, 256);
    v113 = v34;
    v114 = v33;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v30 = 0x100000000000006BLL;
    v35 = "To play Radio when you aren’t connected to Wi-Fi, turn on cellular playback in Music in the Settings app.";
LABEL_47:
    v29 = (unint64_t)(v35 - 32) | 0x8000000000000000;
LABEL_48:
    String.LocalizationValue.init(stringLiteral:)(v30, v29);
    v22(v12, v15, v9);
    v77 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v78 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v77, v25, 0, 0, 256);
    v111 = v79;
    v112 = v78;
    v28(v15, v9);
    String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
    v22(v12, v15, v9);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v80 = qword_10124DE50;
    v81 = (id)qword_10124DE50;
    v82 = v122;
    static Locale.current.getter(v81);
    v117 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v80, v82, 0, 0, 256);
    v115 = v83;
    v72 = &unk_1011D6D58;
    goto LABEL_51;
  }
  objc_opt_self(MPModelTVEpisode);
  if (swift_dynamicCastObjCClass(a1) || (objc_opt_self(MPModelMovie), swift_dynamicCastObjCClass(a1)))
  {
    if ((wapiCapability & 1) == 0)
      goto LABEL_37;
LABEL_15:
    v21 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E4E000);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v36 = qword_10124DE50;
    v37 = (id)qword_10124DE50;
    v38 = v122;
    static Locale.current.getter(v37);
    v39 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v36, v38, 0, 0, 256);
    v113 = v40;
    v114 = v39;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v41 = 0x1000000000000087;
    v42 = "To stream videos when you aren’t connected to WLAN, turn on Cellular Data for streaming. You can change this a"
          "nytime in Settings > TV";
    goto LABEL_40;
  }
  objc_opt_self(MPModelMediaClip);
  v43 = swift_dynamicCastObjCClass(a1);
  if (!v43)
  {
LABEL_24:
    if ((wapiCapability & 1) != 0)
      goto LABEL_25;
LABEL_44:
    v21 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100E4DE00);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v73 = qword_10124DE50;
    v74 = (id)qword_10124DE50;
    v25 = v122;
    static Locale.current.getter(v74);
    v75 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v73, v25, 0, 0, 256);
    v113 = v76;
    v114 = v75;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v30 = 0x100000000000008BLL;
    v35 = "To stream music when you aren’t connected to Wi-Fi, turn on Cellular Data for streaming. You can change this a"
          "nytime in Settings > Music.";
    goto LABEL_47;
  }
  v44 = (void *)v43;
  v45 = MPModelRelationshipMediaClipStaticAssets;
  v46 = a1;
  if (!objc_msgSend(v44, "hasLoadedValueForKey:", v45)
    || (v47 = objc_msgSend(v44, "staticAssets")) == 0)
  {

    if ((wapiCapability & 1) != 0)
      goto LABEL_25;
    goto LABEL_44;
  }
  v48 = v47;
  v49 = sub_100A5904C();
  v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

  v51 = v50;
  v118 = v50;
  v114 = v46;
  if (v50 >> 62)
  {
LABEL_55:
    if (v51 < 0)
      v109 = v118;
    else
      v109 = v51 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v110 = v109;
    v51 = v118;
    v52 = _CocoaArrayWrapper.endIndex.getter(v110);
    swift_bridgeObjectRelease();
    if (v52)
      goto LABEL_23;
LABEL_59:

    swift_bridgeObjectRelease();
    if ((wapiCapability & 1) == 0)
      goto LABEL_44;
LABEL_25:
    v21 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x8000000100E4DE00);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v22(v12, v15, v9);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v54 = qword_10124DE50;
    v55 = (id)qword_10124DE50;
    v25 = v122;
    static Locale.current.getter(v55);
    v56 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v54, v25, 0, 0, 256);
    v113 = v57;
    v114 = v56;
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v15, v9);
    v30 = 0x100000000000008ALL;
    v35 = "To stream music when you aren’t connected to WLAN, turn on Cellular Data for streaming. You can change this an"
          "ytime in Settings > Music.";
    goto LABEL_47;
  }
  v52 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v52)
    goto LABEL_59;
LABEL_23:
  v117 = v51 & 0xC000000000000001;
  v115 = v9;
  v116 = (void *)MPModelPropertyStaticAssetMediaType;
  v53 = 4;
  while (1)
  {
    if (v117)
      v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v53 - 4, v51);
    else
      v59 = *(id *)(v51 + 8 * v53);
    v51 = (uint64_t)v59;
    v9 = v53 - 3;
    if (__OFADD__(v53 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (objc_msgSend(v59, "hasLoadedValueForKey:", v116))
      break;

LABEL_29:
    ++v53;
    v58 = v9 == v52;
    v9 = v115;
    v51 = v118;
    if (v58)
      goto LABEL_59;
  }
  v60 = objc_msgSend((id)v51, "mediaType");

  if (v60 != (id)2)
    goto LABEL_29;

  swift_bridgeObjectRelease();
  v9 = v115;
  if ((wapiCapability & 1) != 0)
    goto LABEL_15;
LABEL_37:
  v21 = v6;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100E4DF50);
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v22(v12, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v61 = qword_10124DE50;
  v62 = (id)qword_10124DE50;
  v38 = v122;
  static Locale.current.getter(v62);
  v63 = (void *)String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v61, v38, 0, 0, 256);
  v113 = v64;
  v114 = v63;
  v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  v28(v15, v9);
  v41 = 0x1000000000000088;
  v42 = "To stream videos when you aren’t connected to Wi-Fi, turn on Cellular Data for streaming. You can change this an"
        "ytime in Settings > TV";
LABEL_40:
  String.LocalizationValue.init(stringLiteral:)(v41, (unint64_t)(v42 - 32) | 0x8000000000000000);
  v22(v12, v15, v9);
  v65 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v66 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v65, v38, 0, 0, 256);
  v111 = v67;
  v112 = v66;
  v28(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0x6E4F206E727554, 0xE700000000000000);
  v22(v12, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v68 = qword_10124DE50;
  v69 = (id)qword_10124DE50;
  v70 = v122;
  static Locale.current.getter(v69);
  v117 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v68, v70, 0, 0, 256);
  v115 = v71;
  v72 = &unk_1011D6D68;
LABEL_51:
  v116 = v72;
  v84 = ((uint64_t (*)(char *, uint64_t))v28)(v15, v9);
  v85 = UUID.init()(v84);
  v86 = v21;
  v87 = UUID.uuidString.getter(v85);
  v118 = v88;
  v89 = *(void (**)(char *, uint64_t))(v121 + 8);
  v90 = v21;
  v91 = v119;
  v89(v90, v119);
  String.LocalizationValue.init(stringLiteral:)(0x776F4E20746F4ELL, 0xE700000000000000);
  v22(v12, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v92 = qword_10124DE50;
  v93 = (id)qword_10124DE50;
  v94 = v122;
  static Locale.current.getter(v93);
  v95 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v92, v94, 0, 0, 256);
  v97 = v96;
  v98 = ((uint64_t (*)(char *, uint64_t))v28)(v15, v9);
  v99 = UUID.init()(v98);
  v100 = UUID.uuidString.getter(v99);
  v102 = v101;
  v89(v86, v91);
  v103 = sub_100007E8C(&qword_1011D8810);
  result = (id)swift_allocObject(v103, 144, 7);
  *((_OWORD *)result + 1) = xmmword_100EA7A80;
  v104 = v118;
  *((_QWORD *)result + 4) = v87;
  *((_QWORD *)result + 5) = v104;
  v105 = v115;
  *((_QWORD *)result + 6) = v117;
  *((_QWORD *)result + 7) = v105;
  *((_BYTE *)result + 64) = 2;
  *((_QWORD *)result + 9) = v116;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 11) = v100;
  *((_QWORD *)result + 12) = v102;
  *((_QWORD *)result + 13) = v95;
  *((_QWORD *)result + 14) = v97;
  *((_BYTE *)result + 120) = 0;
  *((_QWORD *)result + 16) = 0;
  *((_QWORD *)result + 17) = 0;
  v106 = v120;
  v107 = v113;
  *v120 = v114;
  v106[1] = v107;
  v108 = v111;
  v106[2] = v112;
  v106[3] = v108;
  *((_BYTE *)v106 + 32) = 0;
  v106[5] = result;
  v106[6] = 0;
  return result;
}

id sub_100A588AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  void *v19;
  int wapiCapability;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int cellularDataCapability;
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  const char *v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;

  v4 = type metadata accessor for UUID(0);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v73 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - v14;
  result = (id)MobileGestalt_get_current_device(v16, v17);
  if (!result)
  {
    __break(1u);
    goto LABEL_30;
  }
  v19 = result;
  wapiCapability = MobileGestalt_get_wapiCapability();

  result = (id)MobileGestalt_get_current_device(v21, v22);
  if (!result)
  {
LABEL_30:
    __break(1u);
    return result;
  }
  v23 = result;
  cellularDataCapability = MobileGestalt_get_cellularDataCapability();

  v70 = a2;
  if (!a1)
  {
    if (wapiCapability)
    {
      if ((cellularDataCapability & 1) != 0)
        goto LABEL_10;
LABEL_20:
      v28 = "Connect to WLAN to Play Music";
      goto LABEL_21;
    }
    if ((cellularDataCapability & 1) != 0)
    {
LABEL_15:
      v26 = 0xD00000000000002ALL;
      v27 = "Connect to Wi-Fi or Cellular to Play Music";
      goto LABEL_23;
    }
LABEL_22:
    v26 = 0xD00000000000001ELL;
    v27 = "Connect to Wi-Fi to Play Music";
    goto LABEL_23;
  }
  objc_opt_self(MPModelRadioStation);
  v25 = swift_dynamicCastObjCClass(a1);
  if (!wapiCapability)
  {
    if (cellularDataCapability)
    {
      if (v25)
      {
        v26 = 0xD00000000000002ALL;
        v27 = "Connect to Wi-Fi or Cellular to Play Radio";
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v25)
    {
      v26 = 0xD00000000000001ELL;
      v27 = "Connect to Wi-Fi to Play Radio";
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (cellularDataCapability)
  {
    if (v25)
    {
      v26 = 0xD000000000000029;
      v27 = "Connect to WLAN or Cellular to Play Radio";
LABEL_23:
      v29 = (unint64_t)(v27 - 32) | 0x8000000000000000;
      goto LABEL_24;
    }
LABEL_10:
    v26 = 0xD000000000000029;
    v27 = "Connect to WLAN or Cellular to Play Music";
    goto LABEL_23;
  }
  if (!v25)
    goto LABEL_20;
  v28 = "Connect to WLAN to Play Radio";
LABEL_21:
  v29 = (unint64_t)(v28 - 32) | 0x8000000000000000;
  v26 = 0xD00000000000001DLL;
LABEL_24:
  String.LocalizationValue.init(stringLiteral:)(v26, v29);
  v30 = v10;
  v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v32 = v12;
  v31(v12, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v33 = qword_10124DE50;
  v34 = (id)qword_10124DE50;
  v35 = v73;
  static Locale.current.getter(v34);
  v36 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v33, v35, 0, 0, 256);
  v64 = v37;
  v65 = v36;
  v38 = *(void (**)(char *, uint64_t))(v30 + 8);
  v38(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  v31(v12, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v39 = qword_10124DE50;
  v40 = (id)qword_10124DE50;
  v41 = v73;
  static Locale.current.getter(v40);
  v42 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, v39, v41, 0, 0, 256);
  v68 = v43;
  v69 = v42;
  v44 = ((uint64_t (*)(char *, uint64_t))v38)(v15, v9);
  v45 = UUID.init()(v44);
  v46 = UUID.uuidString.getter(v45);
  v66 = v47;
  v67 = v46;
  v48 = v72;
  v49 = *(void (**)(char *, uint64_t))(v71 + 8);
  v49(v6, v72);
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v31(v32, v15, v9);
  v50 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v51 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, v50, v41, 0, 0, 256);
  v53 = v52;
  v54 = ((uint64_t (*)(char *, uint64_t))v38)(v15, v9);
  v55 = UUID.init()(v54);
  v56 = UUID.uuidString.getter(v55);
  v58 = v57;
  v49(v6, v48);
  v59 = sub_100007E8C(&qword_1011D8810);
  result = (id)swift_allocObject(v59, 144, 7);
  *((_OWORD *)result + 1) = xmmword_100EA7A80;
  v60 = v66;
  *((_QWORD *)result + 4) = v67;
  *((_QWORD *)result + 5) = v60;
  v61 = v68;
  *((_QWORD *)result + 6) = v69;
  *((_QWORD *)result + 7) = v61;
  *((_BYTE *)result + 64) = 2;
  *((_QWORD *)result + 9) = &unk_1011D6D50;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 11) = v56;
  *((_QWORD *)result + 12) = v58;
  *((_QWORD *)result + 13) = v51;
  *((_QWORD *)result + 14) = v53;
  *((_BYTE *)result + 120) = 2;
  *((_QWORD *)result + 16) = 0;
  *((_QWORD *)result + 17) = 0;
  v62 = v70;
  v63 = v64;
  *v70 = v65;
  v62[1] = v63;
  v62[2] = 0;
  v62[3] = 0;
  *((_BYTE *)v62 + 32) = 0;
  v62[5] = (uint64_t)result;
  v62[6] = 0;
  return result;
}

uint64_t sub_100A58D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = type metadata accessor for UUID(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x8000000100E4DC30);
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v16 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v17 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v16, v7, 0, 0, 256);
  v36 = v18;
  v37 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000100E4DC60);
  v15(v11, v14, v8);
  v20 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v21 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v7, 0, 0, 256);
  v23 = v22;
  v19(v14, v8);
  v24 = sub_100007E8C(&qword_1011D8810);
  v25 = swift_allocObject(v24, 88, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100EA7AA0;
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v26 = static String.cancelButtonTitle;
  v27 = qword_10124ED40;
  v28 = swift_bridgeObjectRetain();
  v29 = UUID.init()(v28);
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v4, v39);
  *(_QWORD *)(v25 + 32) = v30;
  *(_QWORD *)(v25 + 40) = v32;
  *(_QWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 56) = v27;
  *(_BYTE *)(v25 + 64) = 2;
  *(_QWORD *)(v25 + 72) = 0;
  *(_QWORD *)(v25 + 80) = 0;
  v34 = v36;
  *(_QWORD *)a1 = v37;
  *(_QWORD *)(a1 + 8) = v34;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v23;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

unint64_t sub_100A5904C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6D60;
  if (!qword_1011D6D60)
  {
    v1 = objc_opt_self(MPModelStaticAsset);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D6D60);
  }
  return result;
}

uint64_t sub_100A59088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A590E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D6D74);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10006AEE4;
  return sub_100A4F8D0(v3);
}

uint64_t sub_100A5914C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A59170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1011D6D84);
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10006AEE4;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_100A4F794, 0, 0);
}

uint64_t sub_100A591D0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1011D6D94);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  v6 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc(v2[1]);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_10006AEE4;
  return v6(0);
}

uint64_t sub_100A59254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D6DA4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10006AEE4;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch(sub_100A4F3F0, 0, 0);
}

uint64_t sub_100A592B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D6DB4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10006AEE4;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch(sub_100A4F444, 0, 0);
}

uint64_t sub_100A59318()
{
  uint64_t v0;

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  swift_release();
  return swift_deallocObject(v0, 64);
}

uint64_t sub_100A59344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 56);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D6DC4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10006AEE4;
  v4[3] = v2;
  v4[4] = v3;
  return swift_task_switch(sub_100A4F4D8, 0, 0);
}

uint64_t UInt32.formatName.getter(int a1)
{
  OSStatus Property;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  UInt32 ioPropertyDataSize;
  uint64_t inSpecifier;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  id outPropertyData;

  inSpecifier = 0;
  v12 = 0;
  v14 = 0;
  v13 = 0;
  v15 = 0;
  v11 = a1;
  if (a1 == 1634492771)
    return 1128352833;
  outPropertyData = 0;
  ioPropertyDataSize = 8;
  Property = AudioFormatGetProperty(0x666E616Du, 0x28u, &inSpecifier, &ioPropertyDataSize, &outPropertyData);
  v3 = outPropertyData;
  if (Property != noErr.getter() && v3)
    return String.init(_:)(v3)._countAndFlagsBits;
  if (qword_1011D1D48 != -1)
    swift_once(&qword_1011D1D48, sub_100A68CE8);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048B14(v4, (uint64_t)static Logger.audioFormat);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    *(_DWORD *)(v8 + 4) = Property;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "AudioFormatGetProperty kAudioFormatProperty_FormatName error: %d", (uint8_t *)v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }

  return 0;
}

_QWORD *sub_100A59558()
{
  _QWORD *result;

  result = sub_100A59574();
  static Datavault.music = (uint64_t)result;
  return result;
}

_QWORD *sub_100A59574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSString v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  char *v33;
  _QWORD v34[3];

  v0 = sub_100007E8C(&qword_1011D6E18);
  __chkstk_darwin(v0);
  v33 = (char *)&v34[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34[-1] - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v34[-1] - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v34[-1] - v16;
  v18 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v18, "containerURLForSecurityApplicationGroupIdentifier:", v19);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v20);

  v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v21(v4, v14, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_10098B0BC((uint64_t)v4);
    return 0;
  }
  v22 = v6;
  v23 = v17;
  v21(v17, v4, v5);
  v24 = v11;
  URL.appendingPathComponent(_:isDirectory:)(0x6C75617661746164, 0xE900000000000074, 1);
  type metadata accessor for Datavault(0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v31 = Datavault.__allocating_init(url:storageClass:)((uint64_t)v8, 0x707041636973754DLL, 0xE800000000000000);
  if (qword_1011D1D20 != -1)
    swift_once(&qword_1011D1D20, sub_100A59DF0);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100048B14(v25, (uint64_t)qword_1011D6E00);
  v27 = *(_QWORD *)(v25 - 8);
  v28 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v33, v26, v25);
  v29 = *(void (**)(char *, uint64_t))(v22 + 8);
  v29(v24, v5);
  v29(v23, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v25);
  v30 = (uint64_t)v31 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess((char *)v31 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger, v34, 33, 0);
  sub_100A59E68(v28, v30);
  swift_endAccess(v34);
  return v31;
}

uint64_t *Datavault.music.unsafeMutableAddressor()
{
  if (qword_1011D1D18 != -1)
    swift_once(&qword_1011D1D18, sub_100A59558);
  return &static Datavault.music;
}

double static Datavault.music.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_1011D1D18 != -1)
    swift_once(&qword_1011D1D18, sub_100A59558);
  swift_beginAccess(&static Datavault.music, v1, 0, 0);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

double static Datavault.music.setter(uint64_t a1)
{
  double result;
  _BYTE v3[24];

  if (qword_1011D1D18 != -1)
    swift_once(&qword_1011D1D18, sub_100A59558);
  swift_beginAccess(&static Datavault.music, v3, 1, 0);
  static Datavault.music = a1;
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t (*static Datavault.music.modify(uint64_t a1))(_QWORD)
{
  if (qword_1011D1D18 != -1)
    swift_once(&qword_1011D1D18, sub_100A59558);
  swift_beginAccess(&static Datavault.music, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t sub_100A59DB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D71E0;
  if (!qword_1011D71E0)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D71E0);
  }
  return result;
}

uint64_t sub_100A59DF0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D6E00);
  sub_100048B14(v0, (uint64_t)qword_1011D6E00);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x6C75617661746144, 0xE900000000000074);
}

uint64_t sub_100A59E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D6E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NSDateComponents.lastUpdatedDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v1 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - v10;
  v12 = type metadata accessor for DateComponents(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v0, v14);
  v18 = static Date.now.getter(v17);
  DateComponents.date.getter(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100A5A1DC((uint64_t)v3);
    v19 = 0;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    Date.lastUpdatedDateString(relativeTo:)();
    v19 = v20;
    v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v7, v4);
    v21(v11, v4);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v19;
}

uint64_t DateComponents.lastUpdatedDateString(relativeTo:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DateComponents.date.getter(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100A5A1DC((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    Date.lastUpdatedDateString(relativeTo:)();
    v8 = v9;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v8;
}

uint64_t sub_100A5A1DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011D5D00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DateComponents.lastUpdatedDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v0 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - v8;
  v11 = static Date.now.getter(v10);
  DateComponents.date.getter(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100A5A1DC((uint64_t)v2);
    v12 = 0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    Date.lastUpdatedDateString(relativeTo:)();
    v12 = v13;
    v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v6, v3);
    v14(v9, v3);
  }
  return v12;
}

void Date.lastUpdatedDateString(relativeTo:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  Swift::String v22;
  unint64_t v23;
  double v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v31 - v12;
  v14 = Date.timeIntervalSince(_:)(v0);
  if (v14 <= 0.0)
    return;
  if (v14 < 3600.0)
  {
    v15 = v14 / 60.0;
    if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          v16 = (uint64_t)v15;
          if (!(uint64_t)v15)
          {
            String.LocalizationValue.init(stringLiteral:)(0x647055207473754ALL, 0xEC00000064657461);
            goto LABEL_21;
          }
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
          v17._countAndFlagsBits = 0x2064657461647055;
          v17._object = (void *)0xE800000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
          v32 = v16;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v18 = 9;
          goto LABEL_8;
        }
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v14 >= 86400.0)
  {
    if (v14 >= 604800.0)
    {
      if (v14 >= 2592000.0)
        return;
      v28 = v14 / 604800.0;
      if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) != 0)
      {
        if (v28 > -9.22337204e18)
        {
          if (v28 < 9.22337204e18)
          {
            v29 = (uint64_t)v28;
            String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
            v30._countAndFlagsBits = 0x2064657461647055;
            v30._object = (void *)0xE800000000000000;
            String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v30);
            v32 = v29;
            String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
            v18 = 19;
LABEL_8:
            v19 = v18 | 0x6F67612064;
LABEL_19:
            v23 = 0xE500000000000000;
            goto LABEL_20;
          }
LABEL_43:
          __break(1u);
          return;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v24 = v14 / 86400.0;
    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          v25 = (uint64_t)v24;
          String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1);
          v26._countAndFlagsBits = 0x2064657461647055;
          v26._object = (void *)0xE800000000000000;
          String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
          v32 = v25;
          String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
          v19 = 0x6F67612064;
          goto LABEL_19;
        }
        goto LABEL_40;
      }
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v20 = v14 / 3600.0;
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
    goto LABEL_35;
  if (v20 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v21 = (uint64_t)v20;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1);
  v22._countAndFlagsBits = 0x2064657461647055;
  v22._object = (void *)0xE800000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  v32 = v21;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v19 = 0x6F6761207268;
  v23 = 0xE600000000000000;
LABEL_20:
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v19);
  String.LocalizationValue.init(stringInterpolation:)(v3);
LABEL_21:
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v27 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v27, v6, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t Date.lastUpdatedDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter(v2);
  Date.lastUpdatedDateString(relativeTo:)();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v6;
}

uint64_t static String.stringForTrackCountAndDuration(trackCount:duration:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  double v29;
  void (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  __n128 v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  char *v64;
  uint64_t v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD v83[2];
  _QWORD v84[2];
  _QWORD v85[3];

  v81 = a1;
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v78 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  __chkstk_darwin(v9);
  v77 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v82 = (char *)&v74 - v12;
  v13 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Calendar.Component(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Calendar(0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = 0;
  v28 = 0;
  if ((a4 & 1) != 0)
  {
LABEL_32:
    if ((a2 & 1) != 0)
      goto LABEL_41;
    goto LABEL_33;
  }
  v29 = *(double *)&a3;
  if (*(double *)&a3 <= 0.0)
  {
    v27 = 0;
    v28 = 0;
    goto LABEL_32;
  }
  v75 = v23;
  v76 = v22;
  static Calendar.current.getter(v24);
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v18 + 104);
  v30(v20, enum case for Calendar.Component.second(_:), v17);
  Calendar.maximumRange(of:)(v20);
  v32 = v31;
  v34 = v33;
  v35 = *(void (**)(char *, uint64_t))(v18 + 8);
  v35(v20, v17);
  if ((v34 & 1) != 0)
    goto LABEL_28;
  v30(v20, enum case for Calendar.Component.minute(_:), v17);
  Calendar.maximumRange(of:)(v20);
  v37 = v36;
  v39 = v38;
  result = ((uint64_t (*)(char *, uint64_t))v35)(v20, v17);
  if ((v39 & 1) != 0)
    goto LABEL_28;
  v41 = v32 * v37;
  if ((unsigned __int128)(v32 * (__int128)v37) >> 64 != (v32 * v37) >> 63)
  {
    __break(1u);
    goto LABEL_45;
  }
  if ((~a3 & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (*(double *)&a3 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (*(double *)&a3 >= 9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (!v41)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v42 = (uint64_t)*(double *)&a3;
  if ((uint64_t)*(double *)&a3 == 0x8000000000000000 && v41 == -1)
    goto LABEL_55;
  v43 = v42 / v41 * v41;
  if ((unsigned __int128)(v42 / v41 * (__int128)v41) >> 64 != v43 >> 63)
    goto LABEL_49;
  v44 = v42 % v41;
  if (__OFSUB__(v42, v43))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (!v32)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v44 == 0x8000000000000000 && v32 == -1)
    goto LABEL_56;
  v46 = v44 / v32;
  v47 = v44 / v32 * v32;
  if ((unsigned __int128)(v46 * (__int128)v32) >> 64 != v47 >> 63)
    goto LABEL_52;
  v48 = __OFADD__(v43, v47);
  v49 = v43 + v47;
  if (v48)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v48 = __OFSUB__(v42, v49);
  v50 = v42 - v49;
  if (v48)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v32 >= 0)
    v51 = v32;
  else
    v51 = v32 + 1;
  if (v50 < v51 >> 1)
  {
LABEL_28:
    v53 = objc_msgSend((id)*NSDateFormatter.collectionsDurationFormatter.unsafeMutableAddressor(), "stringFromTimeInterval:", v29);
    v28 = v53;
    if (v53)
    {
      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v56 = v55;

      v85[0] = v54;
      v85[1] = v56;
      v84[0] = 44;
      v84[1] = 0xE100000000000000;
      v83[0] = 0;
      v83[1] = 0xE000000000000000;
      v57 = sub_10098A8C0();
      v27 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v84, v83, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v57, v57, v57);
      v28 = v58;
      v59 = swift_bridgeObjectRelease(v56);
      (*(void (**)(char *, uint64_t, __n128))(v75 + 8))(v26, v76, v59);
      if ((a2 & 1) != 0)
      {
LABEL_41:
        if (v28)
          return v27;
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v26, v76);
      v27 = 0;
      if ((a2 & 1) != 0)
        goto LABEL_41;
    }
LABEL_33:
    if (v28)
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 2);
      v60._countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v60);
      v85[0] = v81;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v85, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v61._countAndFlagsBits = 0x297328676E6F7320;
      v61._object = (void *)0xEA0000000000202CLL;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v61);
      v62._countAndFlagsBits = v27;
      v62._object = v28;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v62);
      swift_bridgeObjectRelease(v28);
      v63._countAndFlagsBits = 0;
      v63._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v63);
      v64 = v82;
    }
    else
    {
      v65 = v81;
      v64 = v82;
      if (v81 < 1)
        return 0;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1);
      v66._countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v66);
      v85[0] = v65;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v85, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v67._countAndFlagsBits = 0x297328676E6F7320;
      v67._object = (void *)0xE800000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v67);
    }
    String.LocalizationValue.init(stringInterpolation:)(v16);
    v69 = v79;
    v68 = v80;
    v70 = v77;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v77, v64, v80);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v71 = qword_10124DE50;
    v72 = (id)qword_10124DE50;
    v73 = v78;
    static Locale.current.getter(v72);
    v27 = String.init(localized:table:bundle:locale:comment:)(v70, 0, 0, v71, v73, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v68);
    return v27;
  }
  v48 = __OFSUB__(v32, v50);
  v52 = v32 - v50;
  if (!v48)
  {
    v29 = *(double *)&a3 + (double)v52;
    goto LABEL_28;
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t NSFileManager.musicAppGroupCachesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return NSFileManager.groupCacheURL(for:)(a1);
}

Swift::Void __swiftcall LSApplicationWorkspace.openSettings()()
{
  sub_100A5AF38(0x3A7366657270, 0xE600000000000000);
}

Swift::Void __swiftcall LSApplicationWorkspace.openRestrictions()()
{
  sub_100A5AF38(0xD00000000000002BLL, 0x8000000100E4E7D0);
}

uint64_t sub_100A5AF38(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSURL *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  Class isa;
  uint64_t v19;

  v5 = v2;
  v6 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_10004FF60((uint64_t)v8, &qword_1011D2AE0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  URL._bridgeToObjectiveC()(v14);
  v16 = v15;
  v17 = sub_100A13450((uint64_t)_swiftEmptyArrayStorage);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v5, "openSensitiveURL:withOptions:", v16, isa);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAudioQuality()()
{
  sub_100A5AF38(0xD000000000000032, 0x8000000100E4E800);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAtmos()()
{
  sub_100A5AF38(0xD00000000000002BLL, 0x8000000100E4E840);
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusicSettings()()
{
  sub_100A5AF38(0xD000000000000025, 0x8000000100E4E870);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAccountSettings()()
{
  sub_100A5AF38(0xD000000000000018, 0x8000000100E4E8A0);
}

Swift::Bool __swiftcall LSApplicationWorkspace.openNotificationSettings()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unsigned __int8 v9;
  NSURL *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  Class isa;
  uint64_t v16;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000030, 0x8000000100E4E8C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10004FF60((uint64_t)v4, &qword_1011D2AE0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    URL._bridgeToObjectiveC()(v10);
    v12 = v11;
    v13 = sub_100A13450((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v1, "openSensitiveURL:withOptions:", v12, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusicHapticsSettings()()
{
  sub_100A5AF38(0xD00000000000002ALL, 0x8000000100E4E900);
}

uint64_t LSApplicationWorkspace.openiTunesStore(with:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v25;
  id v26;
  void *v27;
  NSString v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  __n128 v34;
  _QWORD *v35;
  __n128 v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSURL *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  Class isa;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  __n128 v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  char *v60;
  id v61;
  char *v62;
  char *v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;

  v4 = type metadata accessor for URLComponents(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v7);
  v63 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v56 - v10;
  v12 = type metadata accessor for URL(0);
  v64 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v60 = (char *)&v56 - v16;
  v17 = sub_100007E8C(&qword_1011D6890);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v56 - v22;
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
  v25 = (id)v24((char *)&v56 - v22, 1, 1, v4, v21);
  if (a1)
  {
    v25 = objc_msgSend(a1, "universalStore");
    if (v25)
    {
      v26 = v25;
      v59 = a2;
      v57 = objc_msgSend(v25, "adamID");
      swift_unknownObjectRelease(v26);
      if (qword_1011D1CF0 != -1)
        swift_once(&qword_1011D1CF0, sub_100A3CB80);
      sub_100007E8C(&qword_1011D6170);
      UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
      v27 = v66;
      a2 = v59;
      if (v66)
      {
        v28 = String._bridgeToObjectiveC()();
        v58 = v27;
        v29 = objc_msgSend(v27, "urlForBagKey:", v28);

        if (v29)
        {
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

          v30 = v64;
          v31 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
          v31(v11, v14, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v12);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v11, 1, v12) != 1)
          {
            v32 = v60;
            v31(v60, v11, v12);
            URLComponents.init(url:resolvingAgainstBaseURL:)(v32, 0);
            sub_100A5B94C((uint64_t)v19, (uint64_t)v23);
            v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
            if (v33(v23, 1, v4) || (v35 = (_QWORD *)URLComponents.queryItems.getter(v34)) == 0)
            {
              swift_bridgeObjectRelease();
              v35 = _swiftEmptyArrayStorage;
            }
            v39 = v64;
            v66 = v35;
            v49 = sub_100007E8C(&qword_1011D3E00);
            v50 = type metadata accessor for URLQueryItem(0);
            v51 = swift_allocObject(v49, ((*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v50 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v50 - 8) + 80) | 7);
            *(_OWORD *)(v51 + 16) = xmmword_100EA7A80;
            v65 = v57;
            v52 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
            URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v52, v53);
            swift_bridgeObjectRelease();
            URLQueryItem.init(name:value:)(7368801, 0xE300000000000000, 0x73656E757469, 0xE600000000000000);
            sub_100A05650(v51);
            if (v33(v23, 1, v4))
            {

              v55 = swift_bridgeObjectRelease();
            }
            else
            {
              URLComponents.queryItems.setter(v66, v54);

            }
            a2 = v59;
            v38 = (uint64_t)v63;
            (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v60, v12, v55);
            goto LABEL_16;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v11, 1, 1, v12);
        }

        v25 = (id)sub_10004FF60((uint64_t)v11, &qword_1011D2AE0);
        a2 = v59;
      }
    }
  }
  URLComponents.init()(v25);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v19, 0, 1, v4);
  sub_100A5B94C((uint64_t)v19, (uint64_t)v23);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (!v33(v23, 1, v4))
    URLComponents.scheme.setter(0x73736D7469, 0xE500000000000000, v36);
  v37 = v33(v23, 1, v4);
  v38 = (uint64_t)v63;
  v39 = v64;
  if (!v37)
    URLComponents.host.setter(0, 0xE000000000000000);
LABEL_16:
  if (v33(v23, 1, v4))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v38, 1, 1, v12);
  }
  else
  {
    v40 = v62;
    v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 16))(v62, v23, v4);
    URLComponents.url.getter(v41);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v40, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v12) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(a2, v38, v12);
      URL._bridgeToObjectiveC()(v44);
      v46 = v45;
      sub_100A13450((uint64_t)_swiftEmptyArrayStorage);
      v47 = a2;
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v61, "openSensitiveURL:withOptions:", v46, isa, swift_bridgeObjectRelease().n128_f64[0]);

      a2 = v47;
      v42 = 0;
      goto LABEL_20;
    }
  }
  sub_10004FF60(v38, &qword_1011D2AE0);
  v42 = 1;
LABEL_20:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(a2, v42, 1, v12);
  return sub_10004FF60((uint64_t)v23, &qword_1011D6890);
}

uint64_t sub_100A5B94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D6890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t LSApplicationWorkspace.openiTunesStore(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSString v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  __n128 v33;
  _QWORD *v34;
  uint64_t v35;
  __n128 v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  NSURL *v50;
  void *v51;
  void *v52;
  Class isa;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v61 = a1;
  v1 = type metadata accessor for URLComponents(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v59 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v4);
  v60 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - v7;
  v9 = type metadata accessor for URL(0);
  v63 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v58 = (char *)&v54 - v13;
  v14 = sub_100007E8C(&qword_1011D6890);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v54 - v19;
  v62 = v2;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
  v22 = v21((char *)&v54 - v19, 1, 1, v1, v18);
  v23 = Album.catalogID.getter(v22);
  if (v24)
  {
    v25 = v24;
    v55 = v23;
    if (qword_1011D1CF0 != -1)
      swift_once(&qword_1011D1CF0, sub_100A3CB80);
    sub_100007E8C(&qword_1011D6170);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
    v26 = v64;
    if (v64)
    {
      v27 = String._bridgeToObjectiveC()();
      v56 = v26;
      v28 = objc_msgSend(v26, "urlForBagKey:", v27);

      if (v28)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

        v29 = v63;
        v30 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
        v30(v8, v11, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v9) != 1)
        {
          v31 = v58;
          v30(v58, v8, v9);
          URLComponents.init(url:resolvingAgainstBaseURL:)(v31, 0);
          sub_100A5B94C((uint64_t)v16, (uint64_t)v20);
          v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
          if (v32(v20, 1, v1) || (v34 = (_QWORD *)URLComponents.queryItems.getter(v33)) == 0)
          {
            swift_bridgeObjectRelease();
            v34 = _swiftEmptyArrayStorage;
          }
          v39 = (uint64_t)v60;
          v38 = v61;
          v64 = v34;
          v41 = sub_100007E8C(&qword_1011D3E00);
          v42 = type metadata accessor for URLQueryItem(0);
          v43 = swift_allocObject(v41, ((*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v42 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v42 - 8) + 80) | 7);
          *(_OWORD *)(v43 + 16) = xmmword_100EA7A80;
          URLQueryItem.init(name:value:)(25705, 0xE200000000000000, v55, v25);
          swift_bridgeObjectRelease();
          URLQueryItem.init(name:value:)(7368801, 0xE300000000000000, 0x73656E757469, 0xE600000000000000);
          sub_100A05650(v43);
          if (v32(v20, 1, v1))
          {

            v45 = swift_bridgeObjectRelease();
          }
          else
          {
            URLComponents.queryItems.setter(v64, v44);

          }
          v40 = v63;
          (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v58, v9, v45);
          v35 = v62;
          goto LABEL_21;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v8, 1, 1, v9);
      }

      swift_bridgeObjectRelease();
      v23 = sub_10004FF60((uint64_t)v8, &qword_1011D2AE0);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  URLComponents.init()(v23);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v16, 0, 1, v1);
  sub_100A5B94C((uint64_t)v16, (uint64_t)v20);
  v35 = v62;
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  if (!v32(v20, 1, v1))
    URLComponents.scheme.setter(0x73736D7469, 0xE500000000000000, v36);
  v37 = v32(v20, 1, v1);
  v39 = (uint64_t)v60;
  v38 = v61;
  v40 = v63;
  if (!v37)
    URLComponents.host.setter(0, 0xE000000000000000);
LABEL_21:
  if (v32(v20, 1, v1))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v39, 1, 1, v9);
  }
  else
  {
    v46 = v59;
    v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 16))(v59, v20, v1);
    URLComponents.url.getter(v47);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v1);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v9) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v39, v9);
      URL._bridgeToObjectiveC()(v50);
      v52 = v51;
      sub_100A13450((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v57, "openSensitiveURL:withOptions:", v52, isa, swift_bridgeObjectRelease().n128_f64[0]);

      v48 = 0;
      goto LABEL_25;
    }
  }
  sub_10004FF60(v39, &qword_1011D2AE0);
  v48 = 1;
LABEL_25:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v38, v48, 1, v9);
  return sub_10004FF60((uint64_t)v20, &qword_1011D6890);
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusic(tabIdentifier:)(MusicCore::TabIdentifier_optional tabIdentifier)
{
  void *v1;
  void *v2;
  int value;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  NSURL *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  Class isa;
  _QWORD v18[4];

  v2 = v1;
  value = tabIdentifier.value;
  v5 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[2] = 0x2F2F3A636973756DLL;
  v18[3] = 0xE800000000000000;
  if (value != 6)
  {
    v18[0] = 0x6261743F2F626174;
    v18[1] = 0xE90000000000003DLL;
    __asm { BR              X11 }
  }
  URL.init(string:)(0x2F2F3A636973756DLL, 0xE800000000000000);
  v12 = swift_bridgeObjectRelease(0xE800000000000000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v12) == 1)
  {
    sub_10004FF60((uint64_t)v7, &qword_1011D2AE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    URL._bridgeToObjectiveC()(v13);
    v15 = v14;
    v16 = sub_100A13450((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "openSensitiveURL:withOptions:", v15, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

id static MPModelPlaylistEntry.defaultMusicKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  Class isa;
  id v14;
  char v16[16];
  _QWORD v17[3];
  uint64_t v18;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7AD0;
  *(_QWORD *)(v1 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v16, "showAllTVShows");
  v16[15] = -18;
  v4 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v16, (uint64_t)&type metadata for String, v4, (uint64_t)v17);
  if (!v18)
  {
    sub_100A1324C((uint64_t)v17);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v16, v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v5 = v16[0];

  if ((v5 & 1) != 0)
  {
    v6 = 3;
    goto LABEL_8;
  }
LABEL_7:
  v6 = 2;
LABEL_8:
  *(_QWORD *)(v1 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v6);
  v7 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v16, "showAllTVShows");
  v16[15] = -18;
  NSUserDefaults.subscript.getter((uint64_t)v16, (uint64_t)&type metadata for String, v4, (uint64_t)v17);
  if (!v18)
  {
    sub_100A1324C((uint64_t)v17);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(v16, v17, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_13:

    goto LABEL_14;
  }
  v8 = v16[0];

  if ((v8 & 1) == 0)
  {
LABEL_14:
    v9 = 2;
    goto LABEL_15;
  }
  v9 = 3;
LABEL_15:
  v10 = (void *)objc_opt_self(MPModelPlaylistEntry);
  v11 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v9);
  *(_QWORD *)(v1 + 48) = v11;
  v17[0] = v1;
  specialized Array._endMutation()(v11);
  v12 = v17[0];
  sub_100007E8C((uint64_t *)&unk_1011D6860);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v14 = objc_msgSend(v10, "kindWithKinds:", isa);

  return v14;
}

void *MPModelObject.isCloudLibraryRequired.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *result;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_opt_self(MPModelSong);
  result = (void *)swift_dynamicCastObjCClass(v0, v1);
  if (result)
    return (void *)(objc_msgSend(result, "isLibraryAdded") ^ 1);
  v3 = objc_opt_self(MPModelAlbum);
  result = (void *)swift_dynamicCastObjCClass(v0, v3);
  if (result)
    return (void *)(objc_msgSend(result, "isLibraryAdded") ^ 1);
  v4 = objc_opt_self(MPModelPlaylist);
  result = (void *)swift_dynamicCastObjCClass(v0, v4);
  if (result)
    return (void *)(objc_msgSend(result, "isLibraryAdded") ^ 1);
  return result;
}

id static MPModelPlaylist.defaultMusicKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  Class isa;
  id v15;
  id v16;
  char v18[16];
  _QWORD v19[3];
  uint64_t v20;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7AD0;
  *(_QWORD *)(v1 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
  v2 = (void *)objc_opt_self(NSUserDefaults);
  v3 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v18, "showAllTVShows");
  v18[15] = -18;
  v4 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v18, (uint64_t)&type metadata for String, v4, (uint64_t)v19);
  if (!v20)
  {
    sub_100A1324C((uint64_t)v19);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v18, v19, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v5 = v18[0];

  if ((v5 & 1) != 0)
  {
    v6 = 3;
    goto LABEL_8;
  }
LABEL_7:
  v6 = 2;
LABEL_8:
  *(_QWORD *)(v1 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v6);
  v7 = objc_msgSend(v2, "standardUserDefaults");
  strcpy(v18, "showAllTVShows");
  v18[15] = -18;
  NSUserDefaults.subscript.getter((uint64_t)v18, (uint64_t)&type metadata for String, v4, (uint64_t)v19);
  if (!v20)
  {
    sub_100A1324C((uint64_t)v19);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(v18, v19, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_13:

    goto LABEL_14;
  }
  v8 = v18[0];

  if ((v8 & 1) == 0)
  {
LABEL_14:
    v9 = 2;
    goto LABEL_15;
  }
  v9 = 3;
LABEL_15:
  v10 = (void *)objc_opt_self(MPModelPlaylist);
  v11 = (void *)objc_opt_self(MPModelPlaylistEntry);
  v12 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v9);
  *(_QWORD *)(v1 + 48) = v12;
  v19[0] = v1;
  specialized Array._endMutation()(v12);
  v13 = v19[0];
  sub_100007E8C((uint64_t *)&unk_1011D6860);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v11, "kindWithKinds:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v16 = objc_msgSend(v10, "kindWithPlaylistEntryKind:options:", v15, 0);
  return v16;
}

id static MPModelTVEpisode.defaultMusicKind.getter()
{
  return sub_100A5C838(MPModelTVEpisode_ptr);
}

id static MPModelMovie.defaultMusicKind.getter()
{
  return sub_100A5C838(MPModelMovie_ptr);
}

id sub_100A5C838(_QWORD *a1)
{
  id v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  char v7[16];
  _BYTE v8[24];
  uint64_t v9;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  strcpy(v7, "showAllTVShows");
  v7[15] = -18;
  v3 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v7, (uint64_t)&type metadata for String, v3, (uint64_t)v8);
  if (!v9)
  {
    sub_100A1324C((uint64_t)v8);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v7, v8, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v4 = v7[0];

  if ((v4 & 1) == 0)
  {
LABEL_7:
    v5 = 2;
    return objc_msgSend((id)objc_opt_self(*a1), "kindWithVariants:", v5);
  }
  v5 = 3;
  return objc_msgSend((id)objc_opt_self(*a1), "kindWithVariants:", v5);
}

id static MPModelArtist.defaultMusicKind.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v0 = (void *)objc_opt_self(MPModelArtist);
  v1 = (void *)objc_opt_self(MPModelAlbum);
  v2 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 3);
  v3 = objc_msgSend(v1, "kindWithSongKind:", v2);

  v4 = objc_msgSend(v0, "kindWithAlbumKind:", v3);
  return v4;
}

id static MPModelAlbum.defaultMusicKind.getter()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self(MPModelAlbum);
  v1 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 3);
  v2 = objc_msgSend(v0, "kindWithSongKind:", v1);

  return v2;
}

id static MPModelTVShow.defaultMusicKind.getter()
{
  id v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v10[16];
  _BYTE v11[24];
  uint64_t v12;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  strcpy(v10, "showAllTVShows");
  v10[15] = -18;
  v1 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v10, (uint64_t)&type metadata for String, v1, (uint64_t)v11);
  if (!v12)
  {
    sub_100A1324C((uint64_t)v11);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v10, v11, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v2 = v10[0];

  if ((v2 & 1) == 0)
  {
LABEL_7:
    v3 = 2;
    goto LABEL_8;
  }
  v3 = 3;
LABEL_8:
  v4 = (void *)objc_opt_self(MPModelTVShow);
  v5 = (void *)objc_opt_self(MPModelTVSeason);
  v6 = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v3);
  v7 = objc_msgSend(v5, "kindWithEpisodeKind:", v6);

  v8 = objc_msgSend(v4, "kindWithSeasonKind:", v7);
  return v8;
}

id static MPModelTVSeason.defaultMusicKind.getter()
{
  id v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char v8[16];
  _BYTE v9[24];
  uint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  strcpy(v8, "showAllTVShows");
  v8[15] = -18;
  v1 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)v8, (uint64_t)&type metadata for String, v1, (uint64_t)v9);
  if (!v10)
  {
    sub_100A1324C((uint64_t)v9);
    goto LABEL_6;
  }
  if ((swift_dynamicCast(v8, v9, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  v2 = v8[0];

  if ((v2 & 1) == 0)
  {
LABEL_7:
    v3 = 2;
    goto LABEL_8;
  }
  v3 = 3;
LABEL_8:
  v4 = (void *)objc_opt_self(MPModelTVSeason);
  v5 = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v3);
  v6 = objc_msgSend(v4, "kindWithEpisodeKind:", v5);

  return v6;
}

id MPModelPlaylistEntry.innermostModelObject.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id result;
  id v5;

  v1 = objc_msgSend(v0, "type");
  if (v1 == (id)3)
  {
    v3 = objc_msgSend(v5, "movie");
    goto LABEL_7;
  }
  if (v1 == (id)2)
  {
    v3 = objc_msgSend(v5, "tvEpisode");
LABEL_7:
    result = v3;
    v2 = v5;
    if (result)
      return result;
    return v2;
  }
  v2 = v5;
  if (v1 == (id)1)
  {
    v3 = objc_msgSend(v5, "song");
    goto LABEL_7;
  }
  return v2;
}

id MPModelGenericObject.innermostModelObject.getter()
{
  void *v0;
  id result;
  id v2;
  void *v3;
  id v4;
  id v5;

  switch((unint64_t)objc_msgSend(v0, "type"))
  {
    case 1uLL:
      result = objc_msgSend(v5, "song");
      if (!result)
        goto LABEL_37;
      break;
    case 2uLL:
      result = objc_msgSend(v5, "album");
      if (!result)
        goto LABEL_37;
      break;
    case 3uLL:
      result = objc_msgSend(v5, "artist");
      if (!result)
        goto LABEL_37;
      break;
    case 4uLL:
      result = objc_msgSend(v5, "playlist");
      if (!result)
        goto LABEL_37;
      break;
    case 5uLL:
      v2 = objc_msgSend(v5, "playlistEntry");
      if (!v2)
        goto LABEL_37;
      v3 = v2;
      v4 = objc_msgSend(v2, "innermostModelObject");

      result = v4;
      break;
    case 6uLL:
      result = objc_msgSend(v5, "tvEpisode");
      if (!result)
        goto LABEL_37;
      break;
    case 7uLL:
      result = objc_msgSend(v5, "season");
      if (!result)
        goto LABEL_37;
      break;
    case 8uLL:
      result = objc_msgSend(v5, "show");
      if (!result)
        goto LABEL_37;
      break;
    case 9uLL:
      result = objc_msgSend(v5, "movie");
      if (!result)
        goto LABEL_37;
      break;
    case 0xAuLL:
      result = objc_msgSend(v5, "mediaClip");
      if (!result)
        goto LABEL_37;
      break;
    case 0xBuLL:
      result = objc_msgSend(v5, "podcast");
      if (!result)
        goto LABEL_37;
      break;
    case 0xCuLL:
      result = objc_msgSend(v5, "podcastEpisode");
      if (!result)
        goto LABEL_37;
      break;
    case 0xDuLL:
      result = objc_msgSend(v5, "radioStation");
      if (!result)
        goto LABEL_37;
      break;
    case 0xFuLL:
      result = objc_msgSend(v5, "genre");
      if (!result)
        goto LABEL_37;
      break;
    case 0x10uLL:
      result = objc_msgSend(v5, "curator");
      if (!result)
        goto LABEL_37;
      break;
    case 0x11uLL:
      result = objc_msgSend(v5, "socialPerson");
      if (!result)
        goto LABEL_37;
      break;
    case 0x13uLL:
      result = objc_msgSend(v5, "recordLabel");
      if (!result)
        goto LABEL_37;
      break;
    case 0x14uLL:
      result = objc_msgSend(v5, "creditsArtist");
      if (!result)
        goto LABEL_37;
      break;
    default:
LABEL_37:
      result = v5;
      break;
  }
  return result;
}

id MPModelStoreBrowseContentItem.innermostModelObject.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v5;

  v1 = objc_msgSend(v0, "innerObject");
  if (!v1)
    return v5;
  v2 = v1;
  v3 = objc_msgSend(v1, "innermostModelObject");

  return v3;
}

uint64_t MPModelSong.nowPlayingTitle(radioStation:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[16];

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = &v29[-v13];
  v15 = objc_msgSend(v2, "title", v12);
  if (v15)
  {
    v17 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v20 = v19;

    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = v18 & 0xFFFFFFFFFFFFLL;
    if (v21)
      return v18;
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  if (!a1)
    goto LABEL_12;
  v22 = objc_msgSend(a1, "name", v16);
  if (!v22)
    goto LABEL_12;
  v23 = v22;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v18 & 0xFFFFFFFFFFFFLL;
  if (!v26)
  {
    swift_bridgeObjectRelease(v25);
LABEL_12:
    String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v14, v7);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v27 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v27, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v14, v7);
  }
  return v18;
}

uint64_t MPModelSong.preferredBylineAttribution(with:radioStation:)(uint64_t a1, id a2)
{
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;

  if (a2 && (v4 = objc_msgSend(a2, "attributionLabel")) != 0)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  }
  else
  {
    v7 = v2;
    v8 = sub_100A5DB40(a1, v7);

    if (*((_QWORD *)v8 + 2))
    {
      v9 = sub_100007E8C(&qword_1011D3728);
      v10 = sub_100A5DC80();
      v6 = BidirectionalCollection<>.joined(separator:)(0x209480E220, 0xA500000000000000, v9, v10);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      swift_bridgeObjectRelease(v8);
      return 0;
    }
  }
  return v6;
}

void sub_100A5D530(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  id v17;
  unsigned int v18;
  id v19;
  uint64_t *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for String.LocalizationValue(0);
  v45 = *(_QWORD *)(v47 - 8);
  v8 = __chkstk_darwin(v47);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = sub_100A5D880(v16);
  v18 = objc_msgSend(a2, "hasLoadedValuesForPropertySet:", v17);

  if (!v18)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  if (v16 == 2)
  {
    v19 = objc_msgSend(a2, "artist");
    v20 = a3;
    if (!v19)
      goto LABEL_21;
    v21 = v19;
    v22 = objc_msgSend(v19, "name");

    if (!v22)
      goto LABEL_21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v26 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0)
      v26 = v23 & 0xFFFFFFFFFFFFLL;
    if (v26)
    {
      *a3 = v23;
      a3[1] = v25;
      return;
    }
LABEL_20:
    swift_bridgeObjectRelease(v25);
LABEL_21:
    *v20 = 0;
    v20[1] = 0;
    return;
  }
  v20 = a3;
  if ((v16 & 1) == 0 && !objc_msgSend(a2, "shouldShowComposer"))
    goto LABEL_21;
  v27 = objc_msgSend(a2, "composer");
  if (!v27)
    goto LABEL_21;
  v28 = v27;
  v29 = objc_msgSend(v27, "name");

  if (!v29)
    goto LABEL_21;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v25 = v31;

  v32 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v32 = v30 & 0xFFFFFFFFFFFFLL;
  if (!v32)
    goto LABEL_20;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(3, 1);
  v33._countAndFlagsBits = 2128194;
  v33._object = (void *)0xE300000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v33);
  v34._countAndFlagsBits = v30;
  v34._object = (void *)v25;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v34);
  swift_bridgeObjectRelease(v25);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
  String.LocalizationValue.init(stringInterpolation:)(v15);
  v36 = v45;
  v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v10, v12, v47);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v38 = qword_10124DE50;
  v39 = (id)qword_10124DE50;
  v40 = v46;
  static Locale.current.getter(v39);
  v41 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v38, v40, 0, 0, 256);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  *a3 = v41;
  a3[1] = v43;
}

id sub_100A5D880(char a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  id v8;
  unint64_t v9;
  id v10;
  NSArray v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  id v22;
  Class v23;
  id v24;
  _BYTE v26[56];
  _BYTE v27[56];

  if (a1 == 2)
  {
    v1 = sub_100007E8C((uint64_t *)&unk_1011D6870);
    inited = swift_initStackObject(v1, v26);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
    *(_QWORD *)(inited + 40) = v3;
    v4 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v5 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
    *(_QWORD *)(v5 + 40) = v6;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
    v8 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

    *(_QWORD *)(inited + 48) = v8;
    v9 = sub_100A135A0(inited);
    v10 = objc_allocWithZone((Class)MPPropertySet);
    v11.super.isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    if ((a1 & 1) != 0)
    {
      v13 = _swiftEmptyArrayStorage;
    }
    else
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
      v13 = (_QWORD *)swift_allocObject(v12, 48, 7);
      *((_OWORD *)v13 + 1) = xmmword_100EA7AA0;
      v13[4] = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongShouldShowComposer);
      v13[5] = v14;
    }
    v15 = sub_100007E8C((uint64_t *)&unk_1011D6870);
    v16 = swift_initStackObject(v15, v27);
    *(_OWORD *)(v16 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongComposer);
    *(_QWORD *)(v16 + 40) = v17;
    v18 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
    v19 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v19 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyComposerName);
    *(_QWORD *)(v19 + 40) = v20;
    v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    v22 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", v21);

    *(_QWORD *)(v16 + 48) = v22;
    v9 = sub_100A135A0(v16);
    v10 = objc_allocWithZone((Class)MPPropertySet);
    v11.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
  }
  sub_100A5DE88();
  v23 = Dictionary._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v10, "initWithProperties:relationships:", v11.super.isa, v23, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return v24;
}

char *sub_100A5DB40(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (char *)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v16 = *(_BYTE *)(a1 + v5 + 32);
    sub_100A5D530(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(a1);
      return v6;
    }
    v8 = v15;
    if (v15)
    {
      v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_1009B96FC(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v11 = *((_QWORD *)v6 + 2);
      v10 = *((_QWORD *)v6 + 3);
      if (v11 >= v10 >> 1)
        v6 = sub_1009B96FC((char *)(v10 > 1), v11 + 1, 1, v6);
      *((_QWORD *)v6 + 2) = v11 + 1;
      v7 = &v6[16 * v11];
      *((_QWORD *)v7 + 4) = v9;
      *((_QWORD *)v7 + 5) = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease(a1);
  return v6;
}

unint64_t sub_100A5DC80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6E40;
  if (!qword_1011D6E40)
  {
    v1 = sub_100044B54(&qword_1011D3728);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D6E40);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SongBylineAttributionComponent(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100A5DD1C + 4 * byte_100EDF170[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SongBylineAttributionComponent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100A5DDD4 + 4 * byte_100EDF17A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100A5DE08 + 4 * byte_100EDF175[v5]))();
}

uint64_t sub_100A5DE08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A5DE10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A5DE18);
  return result;
}

uint64_t sub_100A5DE24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A5DE2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100A5DE30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A5DE38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A5DE44(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_100A5DE60(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for SongBylineAttributionComponent()
{
  return &type metadata for SongBylineAttributionComponent;
}

unint64_t sub_100A5DE88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6EB0;
  if (!qword_1011D6EB0)
  {
    v1 = objc_opt_self(MPPropertySet);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D6EB0);
  }
  return result;
}

uint64_t sub_100A5DEC8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  double v29;

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v27 - v13;
  v15 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  if ((a2 & 0x8000000000000000) == 0 && a1 >= 1)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 3);
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    v29 = *(double *)&a1;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v29, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v20._countAndFlagsBits = 0x2F7469622DLL;
    v20._object = (void *)0xE500000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
    v29 = (double)a2 / 1000.0;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v29, 6712357, 0xE300000000000000, &type metadata for Double, &protocol witness table for Double);
    v21._countAndFlagsBits = 0x207A486B20;
    v21._object = (void *)0xE500000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
    v22._countAndFlagsBits = UInt32.formatName.getter(a3);
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
    String.LocalizationValue.init(stringInterpolation:)(v17);
    v24 = v28;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v28);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v25 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v18 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v8, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v24);
  }
  return v18;
}

uint64_t _sSo27MPNowPlayingInfoAudioFormatC9MusicCoreE12inputDetailsSSSgvg_0()
{
  void *v0;

  return sub_100A5DEC8((uint64_t)objc_msgSend(v0, "bitDepth"), (uint64_t)objc_msgSend(v0, "sampleRate"), (int)objc_msgSend(v0, "codec"));
}

void *MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.catalog;
}

uint64_t MPModelObject.bestIdentifier(for:)(uint64_t a1, unsigned __int8 a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t ObjectType;

  v3 = v2;
  objc_opt_self(MPModelGenericObject);
  v6 = (void *)swift_dynamicCastObjCClass(v3);
  if (v6)
  {
    v7 = objc_msgSend(v6, "anyObject");
    goto LABEL_5;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v8 = (void *)swift_dynamicCastObjCClass(v3);
  if (v8)
  {
    v7 = objc_msgSend(v8, "innerObject");
LABEL_5:
    v9 = v7;
    if (v9)
      goto LABEL_7;
  }
  v9 = v3;
LABEL_7:
  if (a2 == 1)
  {
    v10 = objc_msgSend(v9, "identifiers");
    if (a1 == 2)
    {
      ObjectType = swift_getObjectType();
      v12 = sub_100A15048(ObjectType, 2, 1u, v10);
    }
    else if (a1 == 1 || (v11 = swift_getObjectType(), v12 = sub_100A15048(v11, 2, 1u, v10), !v13))
    {
      sub_100A5F95C(v9);
    }
    v16 = v12;

  }
  else
  {
    v14 = swift_getObjectType();
    v15 = objc_msgSend(v9, "identifiers");
    v16 = sub_100A15048(v14, a1, a2, v15);

  }
  return v16;
}

void MPArtworkCatalog.requestImage(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v5 = swift_allocObject(&unk_1010F2948, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v8[4] = sub_100A4DCEC;
  v9 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10004E2F4;
  v8[3] = &unk_1010F2960;
  v6 = _Block_copy(v8);
  v7 = v9;
  swift_retain(a2);
  objc_msgSend(v2, "requestImageWithCompletion:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

uint64_t static MPModelPlaylistVariants.allPlaylists.getter()
{
  return 215;
}

uint64_t MPArtworkCatalog.getImage()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_100A5E430, 0, 0);
}

uint64_t sub_100A5E430()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v5;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100A5E4C4;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100A5E570;
  v4[3] = &unk_1010F2988;
  v4[4] = v3;
  objc_msgSend(v2, "requestImageWithCompletion:", v4);
  return swift_continuation_await(v1, v5);
}

uint64_t sub_100A5E4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_100A5E534;
  else
    v2 = sub_100A5E524;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A5E524()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_100A5E534()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100A5E570(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_100A5E5FC(void *a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;

  if (a1)
  {
    v9 = a1;
    a3(a1, 0);

  }
  else
  {
    v6 = sub_100A65954();
    v7 = swift_allocError(&_s12LoadingErrorON, v6, 0, 0);
    *v8 = a2;
    swift_errorRetain(a2);
    a3((void *)v7, 1);
    swift_errorRelease(v7);
  }
}

void *MPArtworkCatalog.image(from:size:)(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  dispatch_semaphore_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  __n128 v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v6 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1010F29B0, 24, 7);
  *(_QWORD *)(v10 + 16) = 0;
  objc_msgSend(a1, "setDestinationScale:", 0.0);
  objc_msgSend(a1, "setFittingSize:", a2, a3);
  v11 = dispatch_semaphore_create(0);
  v12 = swift_allocObject(&unk_1010F29D8, 32, 7);
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = swift_allocObject(&unk_1010F2A00, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_100A64340;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_100A65B10;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004E2F4;
  aBlock[3] = &unk_1010F2A18;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = v11;
  swift_retain();
  objc_msgSend(a1, "requestImageWithCompletion:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  v16 = swift_release();
  static DispatchTime.distantFuture.getter(v16);
  OS_dispatch_semaphore.wait(timeout:)(v9);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess(v10 + 16, aBlock, 0, 0);
  v17 = *(void **)(v10 + 16);
  v18 = v17;
  swift_release();
  return v17;
}

Swift::Int sub_100A5E89C(void *a1, char a2, uint64_t a3)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[3];

  v4 = a1;
  if ((a2 & 1) != 0)
  {
    v9[0] = a1;
    v6 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    swift_willThrowTypedImpl(v9, v6, &protocol self-conformance witness table for Error);
    v4 = 0;
  }
  else
  {
    v5 = a1;
  }
  swift_beginAccess(a3 + 16, v9, 1, 0);
  v7 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = v4;

  return OS_dispatch_semaphore.signal()();
}

double MPArtworkCatalog.setDestination<A>(_:for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  double result;
  _QWORD v15[5];
  _QWORD *v16;

  v10 = _bridgeAnythingToObjectiveC<A>(_:)(a1, a5);
  v11 = (_QWORD *)swift_allocObject(&unk_1010F2A50, 40, 7);
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v15[4] = sub_100A64370;
  v16 = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100A5EAC4;
  v15[3] = &unk_1010F2A68;
  v12 = _Block_copy(v15);
  v13 = v16;
  swift_retain(a4);
  objc_msgSend(v5, "setDestination:forRepresentationKinds:configurationBlock:", v10, a2, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_100A5EA14(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE v13[32];

  v8 = *(_QWORD *)(a5 - 8);
  v9 = __chkstk_darwin(a1);
  v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10004FA40(v9, (uint64_t)v13);
  swift_dynamicCast(v11, v13, (char *)&type metadata for Any + 8, a5, 7);
  a3(v11, a2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, a5);
}

uint64_t sub_100A5EAC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(_QWORD *, id);
  uint64_t v7;
  id v8;
  _QWORD v10[4];

  v6 = *(void (**)(_QWORD *, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v10[3] = swift_getObjectType();
  v10[0] = a2;
  swift_retain(v5);
  swift_unknownObjectRetain(a2, v7);
  v8 = a3;
  v6(v10, v8);
  swift_release(v5);

  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);
}

uint64_t MPArtworkCatalog.originalSize.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[4];

  v1 = objc_msgSend(v0, "token");
  _bridgeAnyObjectToAny(_:)(v10, v1);
  swift_unknownObjectRelease(v1);
  v2 = sub_10004A07C(0, &qword_1011D6E28, MPStoreArtworkRequestToken_ptr);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
  {
    v3 = v9;
    v4 = objc_msgSend(v9, "imageArtworkInfo");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "originalSize");
      v7 = v6;

      return v7;
    }

  }
  return 0;
}

uint64_t MPArtworkCatalog.expectedRatio.getter()
{
  double v0;
  double v1;
  char v2;
  uint64_t result;

  v0 = COERCE_DOUBLE(MPArtworkCatalog.originalSize.getter());
  if ((v2 & 1) != 0 || v1 <= 0.0)
    *(double *)&result = 0.0;
  else
    *(double *)&result = v0 / v1;
  return result;
}

id static MPArtworkCatalog.monogram(for:layoutDirection:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_100A64654(a1, a2, a3, a4 & 1);
}

id static MPMediaLibrary.device.getter()
{
  uint64_t v0;
  id result;

  result = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

id MPMediaLibrary.canCreatePlaylists.getter()
{
  uint64_t v0;
  id result;
  void *v2;
  char v3;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    v2 = result;
    sub_10004A07C(0, (unint64_t *)&unk_1011D6E30, MPMediaLibrary_ptr);
    v3 = static NSObject.== infix(_:_:)(v0, v2);

    return (id)(v3 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *MPMediaPickerConfiguration.musicTypeIdentifiers.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = NSBundle.exportedTypeDeclarations.getter();

  if (!v3)
    return (char *)_swiftEmptyArrayStorage;
  v4 = objc_msgSend(v1, "typeIdentifiers");
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)&v7 = swift_bridgeObjectRelease().n128_u64[0];
  if (v6)
  {
    v8 = objc_msgSend(v1, "typeIdentifiers", v7);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

    swift_bridgeObjectRetain();
    v10 = sub_100A64504(v9, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v3, 2);
    sub_100A640A0((uint64_t)v10);
    v12 = v11;
    swift_bridgeObjectRelease();
    return (char *)v12;
  }
  if (objc_msgSend(v1, "mediaTypes", swift_bridgeObjectRelease().n128_f64[0]))
    return sub_100A5F06C((__int16)objc_msgSend(v1, "mediaTypes"));
  else
    return (char *)_swiftEmptyArrayStorage;
}

void sub_100A5EE9C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[32];
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v3 = a3;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v20 = *(_QWORD *)(a1 + 8);
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = (char *)_swiftEmptyArrayStorage;
    v25 = (char *)&type metadata for Any + 8;
    do
    {
      v10 = *(_QWORD *)(a2 + 8 * v7 + 32);
      v11 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRetain();
      if (!v11
        || (v12 = sub_10079C2C4(0xD000000000000010, 0x8000000100E4EB20), (v13 & 1) == 0)
        || (sub_10004FA40(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)v22),
            (swift_dynamicCast(&v23, v22, v25, &type metadata for String, 6) & 1) == 0))
      {
        v23 = 0;
        v24 = 0;
      }
      swift_bridgeObjectRelease(v10);
      v14 = v24;
      if (v24)
      {
        v15 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_1009B96FC(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v17 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        if (v17 >= v16 >> 1)
          v8 = sub_1009B96FC((char *)(v16 > 1), v17 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v17 + 1;
        v9 = &v8[16 * v17];
        *((_QWORD *)v9 + 4) = v15;
        *((_QWORD *)v9 + 5) = v14;
      }
      ++v7;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease(a2);
    v4 = v20;
    v3 = a3;
  }
  else
  {
    v8 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  sub_100A6437C((uint64_t)v8);
  v19 = v18;
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v4);
  *v3 = v19;
}

char *sub_100A5F06C(__int16 a1)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;

  if ((a1 & 1) == 0)
  {
    v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 0x800) == 0)
      return v2;
    goto LABEL_7;
  }
  v2 = sub_1009B96FC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_1009B96FC((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v5 = &v2[16 * v4];
  *((_QWORD *)v5 + 4) = 0xD000000000000014;
  *((_QWORD *)v5 + 5) = 0x8000000100E4EB60;
  if ((a1 & 0x800) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_1009B96FC(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v7 = *((_QWORD *)v2 + 2);
    v6 = *((_QWORD *)v2 + 3);
    if (v7 >= v6 >> 1)
      v2 = sub_1009B96FC((char *)(v6 > 1), v7 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v7 + 1;
    v8 = &v2[16 * v7];
    *((_QWORD *)v8 + 4) = 0xD00000000000001BLL;
    *((_QWORD *)v8 + 5) = 0x8000000100E4EB40;
  }
  return v2;
}

id MPMediaPickerConfiguration.supportsCatalogContent.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDF200);
  v3 = swift_getKeyPath(&unk_100EDF228);
  static Published.subscript.getter(&v7, v1, KeyPath, v3);
  swift_release();
  swift_release();
  v4 = v8;
  v5 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v4 & 1) != 0)
    return objc_msgSend(v0, "showsCatalogContent");
  else
    return 0;
}

id MPMediaPickerConfiguration.supportsCloudLibrary.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  __int16 v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EDF200);
  v3 = swift_getKeyPath(&unk_100EDF228);
  static Published.subscript.getter(&v7, v1, KeyPath, v3);
  swift_release();
  swift_release();
  v4 = v8;
  v5 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v4 & 0x100) != 0)
    return objc_msgSend(v0, "showsCloudItems");
  else
    return 0;
}

void *MPIdentifierSet.Purpose.Options.local.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.local;
}

void *MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.all;
}

unint64_t MPIdentifierSet.publicLoggingDescription.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;

  v1 = MPIdentifierSet.bestLibraryIdentifier.getter();
  if (v2)
  {
    String.append(_:)(*(Swift::String *)&v1);
    swift_bridgeObjectRelease();
    v3._countAndFlagsBits = 59;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    v4 = sub_1009B96FC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v6 = *((_QWORD *)v4 + 2);
    v5 = *((_QWORD *)v4 + 3);
    if (v6 >= v5 >> 1)
      v4 = sub_1009B96FC((char *)(v5 > 1), v6 + 1, 1, v4);
    *((_QWORD *)v4 + 2) = v6 + 1;
    v7 = &v4[16 * v6];
    *((_QWORD *)v7 + 4) = 0x507972617262696CLL;
    *((_QWORD *)v7 + 5) = 0xEB000000003D4449;
  }
  else
  {
    v4 = (char *)_swiftEmptyArrayStorage;
  }
  v8 = objc_msgSend(v0, "universalStore");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "globalPlaylistID");
    swift_unknownObjectRelease(v9);
    if (v10)
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      v14._countAndFlagsBits = v11;
      v14._object = v13;
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      v15._countAndFlagsBits = 59;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_1009B96FC(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
      v17 = *((_QWORD *)v4 + 2);
      v16 = *((_QWORD *)v4 + 3);
      if (v17 >= v16 >> 1)
        v4 = sub_1009B96FC((char *)(v16 > 1), v17 + 1, 1, v4);
      *((_QWORD *)v4 + 2) = v17 + 1;
      v18 = &v4[16 * v17];
      *((_QWORD *)v18 + 4) = 0xD000000000000011;
      *((_QWORD *)v18 + 5) = 0x8000000100E4E9D0;
    }
  }
  v19 = MPIdentifierSet.bestStoreIdentifier.getter();
  if (v20)
  {
    String.append(_:)(*(Swift::String *)&v19);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 59;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
      v4 = sub_1009B96FC(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
    v23 = *((_QWORD *)v4 + 2);
    v22 = *((_QWORD *)v4 + 3);
    if (v23 >= v22 >> 1)
      v4 = sub_1009B96FC((char *)(v22 > 1), v23 + 1, 1, v4);
    *((_QWORD *)v4 + 2) = v23 + 1;
    v24 = &v4[16 * v23];
    *((_QWORD *)v24 + 4) = 0x3D65726F7473;
    *((_QWORD *)v24 + 5) = 0xE600000000000000;
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v25 = sub_100007E8C(&qword_1011D3728);
  v26 = sub_100A5DC80();
  v27 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v25, v26);
  v29 = v28;
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 62;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  return 0xD000000000000010;
}

uint64_t MPIdentifierSet.bestLibraryIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  Class isa;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, "library");
  if (!v1)
    return 0;
  v2 = v1;
  if (!objc_msgSend(v1, "persistentID")
    || (objc_msgSend(v2, "persistentID"),
        isa = Int64._bridgeToObjectiveC()().super.super.isa,
        v4 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
        isa,
        !v4))
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  swift_unknownObjectRelease(v2);
  return v5;
}

uint64_t MPIdentifierSet.bestStoreIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  Class isa;
  id v8;

  v1 = objc_msgSend(v0, "universalStore");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend(v1, "subscriptionAdamID");
  v4 = objc_msgSend(v2, "purchasedAdamID");
  v5 = objc_msgSend(v2, "adamID");
  if (!v3 && !v4)
  {
    v6 = (uint64_t)v5;
    if (!v5)
    {
      swift_unknownObjectRelease(v2);
      return v6;
    }
  }
  isa = Int64._bridgeToObjectiveC()().super.super.isa;
  v8 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();

  if (!v8)
  {
    swift_unknownObjectRelease(v2);
    return 0;
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);

  swift_unknownObjectRelease(v2);
  return v6;
}

void static MPIdentifierSet.bestPlayabilityIdentifier<A>(for:options:identifiers:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 == 2)
  {
    sub_100A5FCE4((uint64_t)a1, a3);
  }
  else if (a2 == 1 || (sub_100A5FCE4((uint64_t)a1, a3), !v7))
  {
    sub_100A5FAE4(a1, (uint64_t)a3, a4);
  }
}

void sub_100A5F95C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD aBlock[5];
  uint64_t v9;
  char v10;

  v10 = 2;
  v2 = objc_opt_self(MPModelObject);
  v3 = swift_allocObject(&unk_1010F32F8, 32, 7);
  *(_QWORD *)(v3 + 16) = &v10;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = swift_allocObject(&unk_1010F3320, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_100A659BC;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_10013C910;
  v9 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F3338;
  v5 = _Block_copy(aBlock);
  v6 = v9;
  v7 = a1;
  swift_retain(v4);
  objc_msgSend((id)v2, "performWithoutEnforcement:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 129, 235, 53, 1);
  swift_release(v4);
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else if (v10 != 2 && (v10 & 1) != 0)
  {
    MPIdentifierSet.bestLibraryIdentifier.getter();
    swift_release(v3);
  }
  else
  {
    swift_release(v3);
  }
}

void sub_100A5FAE4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD aBlock[6];
  char v11;

  v11 = 2;
  v5 = objc_opt_self(MPModelObject);
  v6 = (_QWORD *)swift_allocObject(&unk_1010F3280, 40, 7);
  v6[2] = a3;
  v6[3] = &v11;
  v6[4] = a1;
  v7 = swift_allocObject(&unk_1010F32A8, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100A65938;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_10013C910;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F32C0;
  v8 = _Block_copy(aBlock);
  v9 = a1;
  swift_retain();
  objc_msgSend((id)v5, "performWithoutEnforcement:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 129, 235, 53, 1);
  swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else if (v11 != 2 && (v11 & 1) != 0)
  {
    MPIdentifierSet.bestLibraryIdentifier.getter();
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_100A5FC74(char *a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;

  ObjectType = swift_getObjectType();
  result = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
  if (result)
    v6 = result;
  else
    v6 = 0;
  if (!result)
    a2 = 0;
  if (a2)
  {
    v7 = swift_getObjectType();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    v8 = result & 1;
  }
  else
  {
    v8 = 2;
  }
  *a1 = v8;
  return result;
}

uint64_t sub_100A5FCE4(uint64_t a1, void *a2)
{
  uint64_t ObjectType;

  sub_10004A07C(0, &qword_1011D6148, MPIdentifierSet_ptr);
  ObjectType = swift_getObjectType();
  return static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(ObjectType, 2, 1u, a2);
}

uint64_t static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, void *a4)
{
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  double v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Class isa;
  id v32;

  v5 = a2;
  if (a3 > 1u)
    __asm { BR              X9 }
  v7 = sub_10004A07C(0, &qword_1011D59F8, MPModelPlaylist_ptr);
  if (!swift_dynamicCastMetatype(a1, v7))
  {
    v10 = sub_10004A07C(0, &qword_1011D5A00, MPModelSocialPerson_ptr);
    if (swift_dynamicCastMetatype(a1, v10))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v11)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      v17 = objc_msgSend(a4, "universalStore");
      if (!v17)
        return MPIdentifierSet.bestStoreIdentifier.getter();
      v14 = v17;
      v15 = objc_msgSend(v17, "socialProfileID");
      goto LABEL_24;
    }
    v12 = sub_10004A07C(0, qword_1011D5A08, MPModelRadioStation_ptr);
    if (!swift_dynamicCastMetatype(a1, v12))
    {
      if ((v5 & 1) != 0)
      {
        v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v16)
          return v8;
      }
      if ((v5 & 2) == 0)
        return 0;
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0)
      return 0;
    v23 = objc_msgSend(a4, "radio");
    if (!v23)
      return 0;
    v24 = v23;
    v25 = objc_msgSend(v23, "stationStringID");
    if (v25)
    {
      v27 = v25;
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v29 = v28;

      v30 = HIBYTE(v29) & 0xF;
      if ((v29 & 0x2000000000000000) == 0)
        v30 = v19 & 0xFFFFFFFFFFFFLL;
      if (v30)
      {
LABEL_40:
        swift_unknownObjectRelease(v24);
        return v19;
      }
      *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
    }
    if (!objc_msgSend(v24, "stationID", v26)
      || (objc_msgSend(v24, "stationID"),
          isa = Int64._bridgeToObjectiveC()().super.super.isa,
          v32 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
          isa,
          !v32))
    {
      swift_unknownObjectRelease(v24);
      return 0;
    }
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);

    goto LABEL_40;
  }
  if ((v5 & 1) != 0)
  {
    v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v9)
      return v8;
  }
  if ((v5 & 2) == 0)
    return 0;
  v13 = objc_msgSend(a4, "universalStore");
  if (!v13)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v14 = v13;
  v15 = objc_msgSend(v13, "globalPlaylistID");
LABEL_24:
  v18 = v15;
  swift_unknownObjectRelease(v14);
  if (!v18)
    return MPIdentifierSet.bestStoreIdentifier.getter();
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v19;
}

void MPIdentifierSet.init(kind:deviceLibraryPID:)(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = swift_allocObject(&unk_1010F2AA0, 24, 7);
  *(_QWORD *)(v5 + 16) = a2;
  v6 = swift_allocObject(&unk_1010F2AC8, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_100A647D4;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_10004D5F4;
  v10 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004BF88;
  v9[3] = &unk_1010F2AE0;
  v7 = _Block_copy(v9);
  v8 = v10;
  swift_retain(v6);
  objc_msgSend(v4, "initWithModelKind:block:", a1, v7, swift_release(v8).n128_f64[0]);

  _Block_release(v7);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v6, "", 129, 335, 36, 1);
  swift_release(v5);
  swift_release(v6);
  if ((a1 & 1) != 0)
    __break(1u);
}

void sub_100A602F4(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char isEscapingClosureAtFileLocation;
  _QWORD v12[5];
  uint64_t v13;

  v4 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = objc_msgSend(v4, "uniqueIdentifier");

  if (v6)
  {
    v7 = swift_allocObject(&unk_1010F3208, 24, 7);
    *(_QWORD *)(v7 + 16) = a2;
    v8 = swift_allocObject(&unk_1010F3230, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_10027EAF8;
    *(_QWORD *)(v8 + 24) = v7;
    v12[4] = sub_10013C910;
    v13 = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100273E14;
    v12[3] = &unk_1010F3248;
    v9 = _Block_copy(v12);
    v10 = v13;
    swift_retain(v8);
    objc_msgSend(a1, "setLibraryIdentifiersWithDatabaseID:block:", v6, v9, swift_release(v10).n128_f64[0]);

    _Block_release(v9);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 129, 338, 78, 1);
    swift_release(v7);
    swift_release(v8);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_6:
      __break(1u);
    }
  }
}

uint64_t LibraryAddable.hasLoadedLibraryAddedProperty.getter()
{
  void *v0;

  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyAlbumLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyMovieLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertySongLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVEpisodeLibraryAdded) & 1) != 0
    || (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVSeasonLibraryAdded) & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (uint64_t)objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyArtistLibraryAdded);
  }
}

BOOL LibraryAddable.isUserLibraryAddable.getter()
{
  uint64_t v0;
  id v1;
  char *v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)MPLibraryAddStatusObserver), "init");
  objc_msgSend(v1, "configureWithModelObject:", v0);
  v2 = (char *)objc_msgSend(v1, "currentStatus");

  return (unint64_t)(v2 - 1) < 3;
}

id sub_100A605C0()
{
  void *v0;

  return objc_msgSend(v0, "isLibraryAdded");
}

BOOL PlaylistAddable.isPlaylistAddEligible.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;

  v5 = objc_opt_self(MPModelSong);
  v6 = (void *)swift_dynamicCastObjCClass(v2, v5);
  return (!v6 || (objc_msgSend(v6, "isArtistUploadedContent") & 1) == 0)
      && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 16))(a1) & 1) != 0;
}

Swift::String_optional __swiftcall MPModelObject.genericModelRelationshipKey()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v0))
  {
    v1 = &MPModelRelationshipGenericAlbum;
  }
  else
  {
    objc_opt_self(MPModelArtist);
    if (swift_dynamicCastObjCClass(v0))
    {
      v1 = &MPModelRelationshipGenericArtist;
    }
    else
    {
      objc_opt_self(MPModelComposer);
      if (swift_dynamicCastObjCClass(v0))
      {
        v1 = &MPModelRelationshipGenericComposer;
      }
      else
      {
        objc_opt_self(MPModelCurator);
        if (swift_dynamicCastObjCClass(v0))
        {
          v1 = &MPModelRelationshipGenericCurator;
        }
        else
        {
          objc_opt_self(MPModelGenre);
          if (swift_dynamicCastObjCClass(v0))
          {
            v1 = &MPModelRelationshipGenericGenre;
          }
          else
          {
            objc_opt_self(MPModelMovie);
            if (swift_dynamicCastObjCClass(v0))
            {
              v1 = &MPModelRelationshipGenericMovie;
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              if (swift_dynamicCastObjCClass(v0))
              {
                v1 = &MPModelRelationshipGenericPlaylist;
              }
              else
              {
                objc_opt_self(MPModelRadioStation);
                if (swift_dynamicCastObjCClass(v0))
                {
                  v1 = &MPModelRelationshipGenericRadioStation;
                }
                else
                {
                  objc_opt_self(MPModelSong);
                  if (swift_dynamicCastObjCClass(v0))
                  {
                    v1 = &MPModelRelationshipGenericSong;
                  }
                  else
                  {
                    objc_opt_self(MPModelTVEpisode);
                    if (swift_dynamicCastObjCClass(v0))
                    {
                      v1 = &MPModelRelationshipGenericTVEpisode;
                    }
                    else
                    {
                      objc_opt_self(MPModelTVSeason);
                      if (swift_dynamicCastObjCClass(v0))
                      {
                        v1 = &MPModelRelationshipGenericTVSeason;
                      }
                      else
                      {
                        objc_opt_self(MPModelTVShow);
                        v2 = swift_dynamicCastObjCClass(v0);
                        if (!v2)
                        {
                          v3 = 0;
                          goto LABEL_27;
                        }
                        v1 = &MPModelRelationshipGenericTVShow;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
LABEL_27:
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

uint64_t MPModelObject.MediaKitPlayableKind.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A6088C
                                                            + 4 * asc_100EDF1B0[a1]))(0x73676E6F73, 0xE500000000000000);
}

uint64_t sub_100A6088C()
{
  return 0x6F736970652D7674;
}

uint64_t sub_100A608AC()
{
  return 0x73776F68732D7674;
}

uint64_t sub_100A608C4()
{
  return 0x646564616F6C7075;
}

uint64_t sub_100A608F8()
{
  return 0x736E6F6974617473;
}

uint64_t sub_100A60910()
{
  return 0x69762D636973756DLL;
}

uint64_t sub_100A60930()
{
  return 0x6F6D2D636973756DLL;
}

uint64_t sub_100A60950()
{
  return 0x7473696C79616C70;
}

uint64_t sub_100A6096C()
{
  return 0x736D75626C61;
}

uint64_t sub_100A60980(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = MPModelObject.MediaKitPlayableKind.rawValue.getter(*a1);
  v5 = v4;
  v6 = MPModelObject.MediaKitPlayableKind.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_100A60A08()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = MPModelObject.MediaKitPlayableKind.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100A60A68(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = MPModelObject.MediaKitPlayableKind.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100A60AA8(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = MPModelObject.MediaKitPlayableKind.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100A60B04@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _sSo13MPModelObjectC9MusicCoreE20MediaKitPlayableKindO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A60B30@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = MPModelObject.MediaKitPlayableKind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MPModelObject.mediaKitPlayableKind.getter()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  unsigned int v4;
  unsigned int v5;

  objc_opt_self(MPModelSong);
  v1 = swift_dynamicCastObjCClass(v0);
  if (v1)
  {
    v2 = (void *)v1;
    v3 = v0;
    v4 = objc_msgSend(v2, "isArtistUploadedContent");
    v5 = objc_msgSend(v2, "hasVideo");

    if (v4)
    {
      if (v5)
        return 4;
      else
        return 3;
    }
    else if (v5)
    {
      return 6;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(v0))
    {
      return 1;
    }
    else
    {
      objc_opt_self(MPModelTVShow);
      if (swift_dynamicCastObjCClass(v0))
      {
        return 2;
      }
      else
      {
        objc_opt_self(MPModelRadioStation);
        if (swift_dynamicCastObjCClass(v0))
        {
          return 5;
        }
        else
        {
          objc_opt_self(MPModelMovie);
          if (swift_dynamicCastObjCClass(v0))
          {
            return 7;
          }
          else
          {
            objc_opt_self(MPModelPlaylist);
            if (swift_dynamicCastObjCClass(v0))
            {
              return 8;
            }
            else
            {
              objc_opt_self(MPModelAlbum);
              if (swift_dynamicCastObjCClass(v0))
                return 9;
              else
                return 10;
            }
          }
        }
      }
    }
  }
}

uint64_t MPModelObject.FavoriteStatus.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100A60D00 + 4 * byte_100EDF1BA[a1]))(0x657469726F766166, 0xE900000000000064);
}

uint64_t sub_100A60D00()
{
  return 0x6C61727475656ELL;
}

uint64_t sub_100A60D18()
{
  return 0x64656B696C736964;
}

uint64_t sub_100A60D30()
{
  return 0x726F707075736E75;
}

void sub_100A60D50(char *a1)
{
  sub_1009A4374(*a1);
}

void sub_100A60D5C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_100A60DAC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C61727475656ELL, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

void sub_100A60E24()
{
  __asm { BR              X10 }
}

uint64_t sub_100A60E64(uint64_t a1)
{
  String.hash(into:)(a1, 0x6C61727475656ELL, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_100A60EC8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100A60F14()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6C61727475656ELL, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_100A60F8C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _sSo13MPModelObjectC9MusicCoreE14FavoriteStatusO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A60FB8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100A60FEC + 4 * byte_100EDF1CA[*v0]))();
}

void sub_100A60FEC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61727475656ELL;
  a1[1] = 0xE700000000000000;
}

void sub_100A61008(_QWORD *a1@<X8>)
{
  *a1 = 0x64656B696C736964;
  a1[1] = 0xE800000000000000;
}

void sub_100A61024(_QWORD *a1@<X8>)
{
  *a1 = 0x726F707075736E75;
  a1[1] = 0xEB00000000646574;
}

uint64_t MPModelObject.favoriteStatus.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t result;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  unsigned __int8 v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  objc_opt_self(MPModelSong);
  v2 = swift_dynamicCastObjCClass(v0);
  if (v2
    || (objc_opt_self(MPModelAlbum), (v2 = swift_dynamicCastObjCClass(v0)) != 0)
    || (objc_opt_self(MPModelPlaylist), (v2 = swift_dynamicCastObjCClass(v0)) != 0))
  {
    v3 = (void *)v2;
    v4 = v1;
LABEL_5:
    v5 = objc_msgSend(v3, "isFavorite");
    v6 = objc_msgSend(v3, "isDisliked");
    v7 = v6;
    if (v5)
    {
      if ((v6 & 1) == 0)
      {

        return 0;
      }
LABEL_28:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000004DLL, 0x8000000100E4EA20, "MusicCore/MediaPlayer+Music.swift", 33, 2, 513, 0);
      __break(1u);
      return result;
    }

    v9 = v7 == 0;
    goto LABEL_9;
  }
  objc_opt_self(MPModelArtist);
  v10 = swift_dynamicCastObjCClass(v0);
  if (v10)
  {
    v3 = (void *)v10;
    v11 = qword_1011D1C28;
    v4 = v1;
    if (v11 != -1)
      swift_once(&qword_1011D1C28, sub_100A2D554);
    v12 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_100EDF200);
    v14 = swift_getKeyPath(&unk_100EDF228);
    static Published.subscript.getter(&v40, v12, KeyPath, v14);
    swift_release();
    swift_release();
    v15 = v41;
    v16 = v42;
    v17 = v43;
    v18 = v44;
    v19 = v45;
    v20 = v46;
    v21 = v47;
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);

    if ((v15 & 1) != 0)
      goto LABEL_5;
    goto LABEL_25;
  }
  objc_opt_self(MPModelCreditsArtist);
  v22 = swift_dynamicCastObjCClass(v0);
  if (!v22)
    return 3;
  v23 = (void *)v22;
  v24 = qword_1011D1C28;
  v4 = v1;
  if (v24 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v25 = static ApplicationCapabilities.Controller.shared;
  v26 = swift_getKeyPath(&unk_100EDF200);
  v27 = swift_getKeyPath(&unk_100EDF228);
  static Published.subscript.getter(&v40, v25, v26, v27);
  swift_release();
  swift_release();
  v28 = v41;
  v29 = v42;
  v30 = v43;
  v31 = v44;
  v32 = v45;
  v33 = v46;
  v34 = v47;
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v32);

  if ((v28 & 1) == 0 || (v35 = objc_msgSend(v23, "artist")) == 0)
  {
LABEL_25:

    return 3;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "isFavorite");
  v38 = objc_msgSend(v36, "isDisliked");
  v39 = v38;
  if ((v37 & 1) != 0)
  {
    if ((v38 & 1) == 0)
    {

      return 0;
    }
    goto LABEL_28;
  }

  v9 = v39 == 0;
LABEL_9:
  if (v9)
    return 1;
  else
    return 2;
}

void *MPModelAlbum.orphanMusicVideo.getter()
{
  void *v0;
  id v1;
  void *v2;

  if ((uint64_t)objc_msgSend(v0, "trackCount") > 1)
    return 0;
  v1 = objc_msgSend(v0, "representativeSong");
  v2 = v1;
  if (v1 && (objc_msgSend(v1, "hasVideo") & 1) == 0)
  {

    return 0;
  }
  return v2;
}

uint64_t static MPModelPlaylistVariants.playlistsAndFolders.getter()
{
  return 223;
}

id Array<A>.union()(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  _QWORD v7[5];
  id v8[3];

  v8[1] = a1;
  v8[0] = objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
  v7[2] = a2;
  v3 = type metadata accessor for Array(0);
  v4 = sub_10004A07C(0, (unint64_t *)&qword_1011D6EB0, MPPropertySet_ptr);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  Sequence.reduce<A>(_:_:)(v8, sub_100A6487C, v7, v3, v4, WitnessTable);

  return v8[2];
}

id SnapshotIdentifier.Lazy.identifiers.getter(uint64_t a1)
{
  return sub_100A61544(a1, (SEL *)&selRef_identifiersForSectionAtIndex_, (SEL *)&selRef_identifiersForItemAtIndexPath_);
}

id SnapshotIdentifier.Lazy.object.getter(uint64_t a1)
{
  return sub_100A61544(a1, (SEL *)&selRef_sectionAtIndex_, (SEL *)&selRef_itemAtIndexPath_);
}

id sub_100A61544(uint64_t a1, SEL *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  Class isa;
  id v19;
  void *v21;
  id v22;
  uint64_t v23;

  v6 = v3;
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v16 + 16))(v15, v6, a1, v13);
  if (swift_getEnumCaseMultiPayload(v15, a1) == 1)
  {
    v17 = *(void **)((char *)v15 + *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48));
    (*(void (**)(char *, _QWORD *, uint64_t))(v9 + 32))(v11, v15, v8);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(v17, *a3, isa);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v19;
  }
  else
  {
    v21 = (void *)v15[1];
    v22 = objc_msgSend(v21, *a2, *v15);

    return v22;
  }
}

id SnapshotIdentifier.identifiers.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v19;
  uint64_t v20;

  v5 = v4;
  v7 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a1 + 16), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (id *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, v5, a1, v12);
  if (swift_getEnumCaseMultiPayload(v14, a1) == 1)
  {
    v16 = *v14;
    v17 = objc_msgSend(*v14, "identifiers");

    return v17;
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v10, v14, v7);
    v19 = SnapshotIdentifier.Lazy.identifiers.getter(v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v19;
  }
}

id SnapshotIdentifier.object.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v5 = v4;
  v7 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a1 + 16), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v14, v5, a1, v12);
  if (swift_getEnumCaseMultiPayload(v14, a1) == 1)
    return *(id *)v14;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
  v16 = SnapshotIdentifier.Lazy.object.getter(v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16;
}

unint64_t SnapshotIdentifier.debugDescription.getter(uint64_t a1)
{
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t WitnessTable;
  id v11;
  Swift::String v12;
  unint64_t v13;
  uint64_t v14;

  v13 = SnapshotIdentifier.description.getter(a1);
  v14 = v2;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0x7463656A626F202CLL;
  v3._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v3);
  v7 = SnapshotIdentifier.object.getter(a1, v4, v5, v6);
  v11 = v7;
  v8 = *(_QWORD *)(a1 + 16);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v8);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v11, v8, WitnessTable);

  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t SnapshotIdentifier.description.getter(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;

  v2._countAndFlagsBits = _typeName(_:qualified:)(*(_QWORD *)(a1 + 16), 0);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 2112062;
  v3._object = (void *)0xE300000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 60;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v8 = SnapshotIdentifier.identifiers.getter(a1, v5, v6, v7);
  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);

  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x696669746E656469;
  v14._object = (void *)0xEB000000003D7265;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void SnapshotIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = SnapshotIdentifier.identifiers.getter(a2, a2, a3, a4);
  NSObject.hash(into:)(a1);

}

uint64_t static SnapshotIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;

  sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
  v6 = type metadata accessor for SnapshotIdentifier(0, a3, v4, v5);
  v10 = SnapshotIdentifier.identifiers.getter(v6, v7, v8, v9);
  v14 = SnapshotIdentifier.identifiers.getter(v6, v11, v12, v13);
  v15 = static NSObject.== infix(_:_:)(v10, v14);

  return v15 & 1;
}

Swift::Int SnapshotIdentifier.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  v5 = SnapshotIdentifier.identifiers.getter(a1, v2, v3, v4);
  NSObject.hash(into:)(v7);

  return Hasher._finalize()();
}

Swift::Int sub_100A61BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  SnapshotIdentifier.hash(into:)((uint64_t)v6, a2, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_100A61C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static SnapshotIdentifier.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

void static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];
  char v17;

  v17 = 0;
  v12 = (_QWORD *)swift_allocObject(&unk_1010F2B18, 72, 7);
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  v12[8] = &v17;
  v13 = swift_allocObject(&unk_1010F2B40, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_100A648FC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_10004D5F4;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100A61EB4;
  aBlock[3] = &unk_1010F2B58;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_retain();
  objc_msgSend(v15, "enumerateItemIdentifiersUsingBlock:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v13, "", 129, 656, 45, 1);
  swift_release();
  swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
}

uint64_t sub_100A61D90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, char *, _BYTE *), uint64_t a6, _BYTE *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  _BYTE *v25;

  v25 = (_BYTE *)a3;
  v13 = type metadata accessor for SnapshotIdentifier(0, a9, a3, (uint64_t)a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v24 - v15;
  v17 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
  v18 = type metadata accessor for IndexPath(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, a1, v18);
  *(_QWORD *)&v16[v17] = a4;
  v21 = type metadata accessor for SnapshotIdentifier.Lazy(0, a9, v19, v20);
  swift_storeEnumTagMultiPayload(v16, v21, 1);
  swift_storeEnumTagMultiPayload(v16, v13, 0);
  v22 = a4;
  a5(a1, v16, a7);
  *v25 = *a7;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100A61EB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, id, uint64_t);
  id v13;
  uint64_t v15;

  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, id, uint64_t))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v13 = a3;
  v12(v11, v13, a4);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:inSection:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];
  char v19;

  v19 = 0;
  v14 = (_QWORD *)swift_allocObject(&unk_1010F2B90, 80, 7);
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a7;
  v14[5] = a2;
  v14[6] = a1;
  v14[7] = a3;
  v14[8] = a4;
  v14[9] = &v19;
  v15 = swift_allocObject(&unk_1010F2BB8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100A64960;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_10004D5F4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002835CC;
  aBlock[3] = &unk_1010F2BD0;
  v16 = _Block_copy(aBlock);
  v17 = a1;
  swift_retain();
  objc_msgSend(v17, "enumerateItemIdentifiersInSectionAtIndex:usingBlock:", a2, v16, swift_release().n128_f64[0]);
  _Block_release(v16);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation(v15, "", 129, 668, 67, 1);
  swift_release();
  swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
}

uint64_t sub_100A620D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, char *, _BYTE *), uint64_t a7, _BYTE *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  _BYTE *v26;

  v25 = a7;
  v26 = (_BYTE *)a3;
  v15 = type metadata accessor for SnapshotIdentifier(0, a10, a3, a4);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v25 - v17;
  v19 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
  IndexPath.init(item:section:)(a1, a4);
  *(_QWORD *)&v18[v19] = a5;
  v22 = type metadata accessor for SnapshotIdentifier.Lazy(0, a10, v20, v21);
  swift_storeEnumTagMultiPayload(v18, v22, 1);
  swift_storeEnumTagMultiPayload(v18, v15, 0);
  v23 = a5;
  a6(a1, v18, a8);
  *v26 = *a8;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD v12[7];
  uint64_t v13;

  v10 = type metadata accessor for SnapshotIdentifier(0, a4, a3, a4);
  v13 = static Array._allocateUninitialized(_:)(0, v10);
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = &v13;
  static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:inSection:using:)(a1, a2, (uint64_t)sub_100A649A4, (uint64_t)v12, a3, a4, a5);
  return v13;
}

uint64_t sub_100A62284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = type metadata accessor for SnapshotIdentifier(0, a6, a3, a4);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v14 - v9, a2, v7, v8);
  v12 = type metadata accessor for Array(0);
  return Array.append(_:)(v10, v12);
}

void static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierSections(from:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];
  char v17;

  v17 = 0;
  v12 = (_QWORD *)swift_allocObject(&unk_1010F2C08, 72, 7);
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  v12[8] = &v17;
  v13 = swift_allocObject(&unk_1010F2C30, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_100A649B0;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_10013C910;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002835CC;
  aBlock[3] = &unk_1010F2C48;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_retain();
  objc_msgSend(v15, "enumerateSectionIdentifiersUsingBlock:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v13, "", 129, 691, 48, 1);
  swift_release();
  swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
}

uint64_t sub_100A62470(uint64_t a1, uint64_t a2, _BYTE *a3, void *a4, void (*a5)(uint64_t, _QWORD *, _BYTE *), uint64_t a6, _BYTE *a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  v14 = type metadata accessor for SnapshotIdentifier(0, a8, (uint64_t)a3, (uint64_t)a4);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v23 - v16);
  *v17 = a1;
  v17[1] = a4;
  v20 = type metadata accessor for SnapshotIdentifier.Lazy(0, a8, v18, v19);
  swift_storeEnumTagMultiPayload(v17, v20, 0);
  swift_storeEnumTagMultiPayload(v17, v14, 0);
  v21 = a4;
  a5(a1, v17, a7);
  *a3 = *a7;
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
}

void static NSDiffableDataSourceSnapshot<>.snapshot(from:)(void *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  __n128 v22;
  void **aBlock;
  uint64_t v24;
  double (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v26;
  uint64_t (*v27)();
  _QWORD *v28;

  v10 = type metadata accessor for SnapshotIdentifier(255, a3, a3, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v10);
  aBlock = a2;
  v24 = v10;
  v25 = (double (*)(uint64_t, uint64_t, uint64_t, uint64_t))a4;
  v26 = (void *)WitnessTable;
  v12 = type metadata accessor for NSDiffableDataSourceSnapshot(0, &aBlock);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&aBlock - v14;
  NSDiffableDataSourceSnapshot.init()(a2, v10, a4, WitnessTable);
  v16 = objc_opt_self(MPSectionedCollection);
  v17 = swift_dynamicCastObjCClassUnconditional(a1, v16, 0, 0, 0);
  v18 = (_QWORD *)swift_allocObject(&unk_1010F2C80, 56, 7);
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  v18[5] = v15;
  v18[6] = v17;
  v19 = (_QWORD *)swift_allocObject(&unk_1010F2CA8, 56, 7);
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = sub_100A64A14;
  v19[6] = v18;
  v27 = sub_1001DBC98;
  v28 = v19;
  aBlock = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_100A628A8;
  v26 = &unk_1010F2CC0;
  v20 = _Block_copy(&aBlock);
  v21 = a1;
  swift_retain();
  objc_msgSend(v21, "enumerateSectionsUsingBlock:", v20, swift_release().n128_f64[0]);
  _Block_release(v20);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation(v19, "", 129, 708, 38, 1);
  v22 = swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v13 + 32))(a5, v15, v12, v22);
    swift_release();
  }
}

double sub_100A62770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD v27[4];

  v14 = sub_100A9BBC8(a6, a6);
  v15 = swift_allocObject(v14, ((*(unsigned int *)(v14 + 48) + 7) & 0x1FFFFFFF8) + 8, *(unsigned __int16 *)(v14 + 52) | 7);
  v16 = static Array._adoptStorage(_:count:)(v15, 1);
  *v17 = a1;
  v18 = sub_10014273C(v16);
  v21 = type metadata accessor for SnapshotIdentifier(255, a7, v19, v20);
  swift_unknownObjectRetain(a1, v22);
  v27[0] = a6;
  v27[1] = v21;
  v27[2] = a8;
  v27[3] = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v21);
  v23 = type metadata accessor for NSDiffableDataSourceSnapshot(0, v27);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v18);
  swift_bridgeObjectRelease();
  v24 = static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(a5, a2, a6, a7, a8);
  v27[0] = a1;
  swift_unknownObjectRetain(a1, v25);
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v24, v27, v23);
  swift_unknownObjectRelease(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100A628A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  double result;

  sub_10004A07C(0, &qword_1011D6150, MPModelObject_ptr);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v10 = swift_unknownObjectRetain(a2, v9);
  v8(v10, a3, a4);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

void static NSDiffableDataSourceSnapshot<>.snapshot(from:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  __n128 v20;
  void **aBlock;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  v8 = type metadata accessor for SnapshotIdentifier(255, a2, a3, a4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v8);
  aBlock = (void **)&type metadata for String;
  v22 = v8;
  v23 = (void (*)(uint64_t, void *))&protocol witness table for String;
  v24 = (void *)WitnessTable;
  v10 = type metadata accessor for NSDiffableDataSourceSnapshot(0, &aBlock);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock - v12;
  NSDiffableDataSourceSnapshot.init()(&type metadata for String, v8, &protocol witness table for String, WitnessTable);
  v14 = objc_opt_self(MPSectionedCollection);
  v15 = swift_dynamicCastObjCClassUnconditional(a1, v14, 0, 0, 0);
  v16 = (_QWORD *)swift_allocObject(&unk_1010F2CF8, 40, 7);
  v16[2] = a2;
  v16[3] = v13;
  v16[4] = v15;
  v17 = swift_allocObject(&unk_1010F2D20, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_100A64A34;
  *(_QWORD *)(v17 + 24) = v16;
  v25 = sub_10013C910;
  v26 = v17;
  aBlock = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_1005000C0;
  v24 = &unk_1010F2D38;
  v18 = _Block_copy(&aBlock);
  v19 = a1;
  swift_retain();
  objc_msgSend(v19, "enumerateSectionsUsingBlock:", v18, swift_release().n128_f64[0]);
  _Block_release(v18);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v17, "", 129, 725, 38, 1);
  v20 = swift_release();
  if ((v19 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v11 + 32))(a5, v13, v10, v20);
    swift_release();
  }
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v20[6];

  v9 = type metadata accessor for SnapshotIdentifier(0, a2, a3, a4);
  v12 = type metadata accessor for SnapshotIdentifier(0, a3, v10, v11);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v9);
  v14 = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v12);
  NSDiffableDataSourceSnapshot.init()(v9, v12, WitnessTable, v14);
  v15 = objc_opt_self(MPSectionedCollection);
  v16 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v15, 0, 0, 0);
  v17 = objc_opt_self(MPSectionedCollection);
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a5;
  v20[5] = swift_dynamicCastObjCClassUnconditional(a1, v17, 0, 0, 0);
  v18 = a1;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for NSObject, a3);
  static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierSections(from:using:)(v16, (uint64_t)sub_100A64A50, (uint64_t)v20, a2, a3, v19);

}

double sub_100A62B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  Swift::OpaquePointer v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t WitnessTable;

  v10 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v11._rawValue = (void *)swift_allocObject(v10, 48, 7);
  *((_OWORD *)v11._rawValue + 1) = xmmword_100EA7AA0;
  *((_QWORD *)v11._rawValue + 4) = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  *((_QWORD *)v11._rawValue + 5) = v12;
  v19 = &type metadata for String;
  v20 = type metadata accessor for SnapshotIdentifier(255, a6, v13, v14);
  v21 = &protocol witness table for String;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v20);
  v15 = type metadata accessor for NSDiffableDataSourceSnapshot(0, &v19);
  NSDiffableDataSourceSnapshot.appendSections(_:)(v11);
  swift_bridgeObjectRelease();
  v16 = static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(a5, a2, (uint64_t)&type metadata for String, a6, (uint64_t)&protocol witness table for String);
  v19 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v20 = v17;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v16, &v19, v15);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100A62D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t WitnessTable;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v31 = a2;
  v32 = a6;
  v33 = a1;
  v34 = a5;
  v9 = type metadata accessor for SnapshotIdentifier(255, a6, a3, a4);
  v10 = type metadata accessor for Optional(0, v9);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for _ContiguousArrayStorage(0, v9);
  v14 = *(_QWORD *)(v9 - 8);
  v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72), *(unsigned __int8 *)(v14 + 80) | 7);
  v16 = static Array._adoptStorage(_:count:)(v15, 1);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v17(v18, a2, v9);
  v19 = sub_10014273C(v16);
  v22 = type metadata accessor for SnapshotIdentifier(255, a7, v20, v21);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v9);
  v24 = swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, v22);
  v37[0] = v9;
  v37[1] = v22;
  v37[2] = WitnessTable;
  v37[3] = v24;
  v25 = type metadata accessor for NSDiffableDataSourceSnapshot(0, v37);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v19);
  swift_bridgeObjectRelease();
  v26 = v32;
  v27 = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v32);
  v28 = static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(v34, v33, v26, a7, v27);
  v17((uint64_t)v12, v31, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v9);
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v28, v12, v25);
  v29 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v35 + 8))(v12, v36, v29);
}

uint64_t MPModelPlaylist.supportsSing.getter()
{
  void *v0;

  if ((objc_msgSend(v0, "traits") & 0x100) != 0)
    return MSVDeviceSupportsVocalAttenuation();
  else
    return 0;
}

id MPModelPlaylist.coverArtworkCatalog.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v1 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v2 = swift_allocObject(v1, 80, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v2 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistCoverArtworkRecipe);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistUserEditableComponents);
  *(_QWORD *)(v2 + 72) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  v7 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  LODWORD(isa) = objc_msgSend(v0, "hasLoadedValuesForPropertySet:", v7);
  if (!(_DWORD)isa)
    return 0;
  v8 = objc_msgSend(v0, "name");
  if (!v8)
    return 0;
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;

  if ((objc_msgSend(v0, "userEditableComponents") & 2) == 0)
  {
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  v13 = objc_msgSend(v0, "coverArtworkRecipe");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = _s9MusicCore14PlaylistCoversO12ArtworkTokenC7rawJSON13playlistTitleAESgSS_SStcfC_0(v14, v16, v10, v12);
  if (!v17)
    return 0;
  v18 = v17;
  v19 = objc_msgSend(v0, "artworkCatalog");
  if (v19)
  {
    v20 = v19;

  }
  else
  {
    if (qword_1011D1EC0 != -1)
      swift_once(&qword_1011D1EC0, sub_100B12FB8);
    v22 = type metadata accessor for Logger(0);
    sub_100048B14(v22, (uint64_t)static Logger.playlistCovers);
    v23 = v0;
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v34 = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = objc_msgSend(v23, "coverArtworkRecipe");
      v29 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      *(_QWORD *)(v26 + 4) = sub_10099627C(v29, v31, &v34);
      swift_bridgeObjectRelease(v31);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "No server artwork catalog available for playlist with coverArtworkRecipe=%{public}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

    }
    v32 = qword_1011D1E70;
    v33 = v18;
    if (v32 != -1)
      swift_once(&qword_1011D1E70, sub_100B04E10);
    v20 = objc_msgSend(objc_allocWithZone((Class)MPArtworkCatalog), "initWithToken:dataSource:", v33, static PlaylistCovers.ArtworkDataSource.shared);

  }
  return v20;
}

void *static MPModelPlaylist.favoriteSongsRequest(labeled:)(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  NSString v6;

  sub_100007E8C((uint64_t *)&unk_1011D6ED0);
  static MPModelLibraryRequest<>.favoriteSongs.getter();
  v4 = v3;
  if (a2 && v3)
  {
    v5 = v3;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setLabel:", v6);

  }
  return v4;
}

void static MPModelLibraryRequest<>.favoriteSongs.getter()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  NSString v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  void *v33;
  uint64_t v34;
  _QWORD aBlock[3];
  void *v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];

  v0 = objc_msgSend((id)objc_opt_self(MPMediaQuery), "favoriteSongsPlaylist");
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "valueForProperty:", MPMediaItemPropertyPersistentID);
    if (v2)
    {
      v3 = v2;
      _bridgeAnyObjectToAny(_:)(v40, v2);
      swift_unknownObjectRelease(v3);
    }
    else
    {
      memset(v40, 0, sizeof(v40));
    }
    sub_100A286FC((uint64_t)v40, (uint64_t)aBlock);
    if (!v36)
    {

      sub_100A1324C((uint64_t)aBlock);
      return;
    }
    if ((swift_dynamicCast(&v39, aBlock, (char *)&type metadata for Any + 8, &type metadata for Int64, 6) & 1) == 0)
    {

      return;
    }
    v34 = v39;
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
    v5 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v6 = swift_allocObject(v5, 56, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EA7AD0;
    *(_QWORD *)(v6 + 32) = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 7);
    v7 = (void *)objc_opt_self(NSUserDefaults);
    v8 = objc_msgSend(v7, "standardUserDefaults");
    strcpy((char *)v40, "showAllTVShows");
    HIBYTE(v40[0]) = -18;
    v9 = sub_10098A8C0();
    NSUserDefaults.subscript.getter((uint64_t)v40, (uint64_t)&type metadata for String, v9, (uint64_t)aBlock);
    if (v36)
    {
      if ((swift_dynamicCast(v40, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v10 = v40[0];

        if ((v10 & 1) != 0)
        {
          v11 = 3;
          goto LABEL_17;
        }
LABEL_16:
        v11 = 2;
LABEL_17:
        *(_QWORD *)(v6 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), "kindWithVariants:", v11);
        v12 = objc_msgSend(v7, "standardUserDefaults");
        strcpy((char *)v40, "showAllTVShows");
        HIBYTE(v40[0]) = -18;
        NSUserDefaults.subscript.getter((uint64_t)v40, (uint64_t)&type metadata for String, v9, (uint64_t)aBlock);
        if (v36)
        {
          if ((swift_dynamicCast(v40, aBlock, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
          {
            v13 = v40[0];

            if ((v13 & 1) != 0)
            {
              v14 = 3;
              goto LABEL_24;
            }
LABEL_23:
            v14 = 2;
LABEL_24:
            v15 = (void *)objc_opt_self(MPModelPlaylistEntry);
            v16 = objc_msgSend((id)objc_opt_self(MPModelMovie), "kindWithVariants:", v14);
            *(_QWORD *)(v6 + 48) = v16;
            aBlock[0] = v6;
            specialized Array._endMutation()(v16);
            v17 = aBlock[0];
            sub_100007E8C((uint64_t *)&unk_1011D6860);
            isa = Array._bridgeToObjectiveC()().super.isa;
            v19 = objc_msgSend(v15, "kindWithKinds:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

            v20 = objc_msgSend((id)objc_opt_self(MPModelPlaylist), "kindWithVariants:playlistEntryKind:options:", 2, v19, 0);
            v21 = v4;
            v22 = String._bridgeToObjectiveC()();
            objc_msgSend(v21, "setLabel:", v22);

            objc_msgSend(v21, "setSectionKind:", v20);
            v33 = v19;
            objc_msgSend(v21, "setItemKind:", v19);
            v23 = swift_allocObject(v5, 40, 7);
            *(_OWORD *)(v23 + 16) = xmmword_100EA7A90;
            v24 = objc_allocWithZone((Class)MPIdentifierSet);
            v25 = swift_allocObject(&unk_1010F2D70, 24, 7);
            *(_QWORD *)(v25 + 16) = v34;
            v26 = swift_allocObject(&unk_1010F2D98, 32, 7);
            *(_QWORD *)(v26 + 16) = sub_100A65A94;
            *(_QWORD *)(v26 + 24) = v25;
            v37 = sub_10013C910;
            v38 = v26;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10004BF88;
            v36 = &unk_1010F2DB0;
            v27 = _Block_copy(aBlock);
            v28 = v20;
            swift_retain();
            v29 = objc_msgSend(v24, "initWithModelKind:block:", v28, v27, swift_release().n128_f64[0]);

            _Block_release(v27);
            LOBYTE(v19) = swift_isEscapingClosureAtFileLocation(v26, "", 129, 335, 36, 1);
            swift_release();
            swift_release();
            if ((v19 & 1) != 0)
            {
              __break(1u);
            }
            else
            {
              *(_QWORD *)(v23 + 32) = v29;
              aBlock[0] = v23;
              specialized Array._endMutation()(v30);
              v31 = aBlock[0];
              sub_10004A07C(0, &qword_1011D6148, MPIdentifierSet_ptr);
              v32 = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v21, "setAllowedSectionIdentifiers:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

            }
            return;
          }
        }
        else
        {
          sub_100A1324C((uint64_t)aBlock);
        }

        goto LABEL_23;
      }
    }
    else
    {
      sub_100A1324C((uint64_t)aBlock);
    }

    goto LABEL_16;
  }
}

unint64_t MPNowPlayingAudioFormatBadging.debugDescription.getter(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;

  switch(a1)
  {
    case 0:
      v1 = 0x6574537973736F6CLL;
      v2 = 0xEB000000006F6572;
      goto LABEL_9;
    case 1:
      v2 = 0xEA0000000000736FLL;
      v1 = 0x6D744179626C6F64;
      goto LABEL_9;
    case 2:
      v1 = 0x64754179626C6F64;
      v2 = 0xEA00000000006F69;
      goto LABEL_9;
    case 3:
      v1 = 0x7373656C73736F6CLL;
      v2 = 0xE800000000000000;
      goto LABEL_9;
    case 4:
      v2 = 0x8000000100E4EB00;
      v1 = 0xD000000000000016;
      goto LABEL_9;
    case 5:
      v1 = 0x416C616974617073;
      v2 = 0xEC0000006F696475;
LABEL_9:
      String.append(_:)(*(Swift::String *)&v1);
      break;
    default:
      v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v3._object;
      String.append(_:)(v3);
      swift_bridgeObjectRelease(object);
      v5._countAndFlagsBits = 62;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      v6._countAndFlagsBits = 0x3C6E776F6E6B6E75;
      v6._object = (void *)0xE800000000000000;
      String.append(_:)(v6);
      swift_bridgeObjectRelease(0xE800000000000000);
      break;
  }
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return 0xD00000000000001FLL;
}

unint64_t sub_100A63B2C()
{
  uint64_t *v0;

  return MPNowPlayingAudioFormatBadging.debugDescription.getter(*v0);
}

id MPModelPerson.monogramArtworkCatalog.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (!objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPersonName))
    return 0;
  v1 = objc_msgSend(v0, "name");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  v7 = sub_100A64654(v3, v5, 0, 1);
  swift_bridgeObjectRelease(v5);
  return v7;
}

id sub_100A63BE0()
{
  void *v0;
  id result;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  result = objc_msgSend(v0, "artworkCatalog");
  if (!result)
  {
    if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPersonName))
    {
      v2 = objc_msgSend(v0, "name");
      if (v2)
      {
        v3 = v2;
        v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
        v6 = v5;

      }
      else
      {
        v4 = 0;
        v6 = 0;
      }
      v7 = sub_100A64654(v4, v6, 0, 1);
      swift_bridgeObjectRelease();
      return v7;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void MPModelTVSeason.title.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;
  _QWORD v10[2];

  v10[0] = 0;
  v10[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F2DE8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v10;
  v3 = swift_allocObject(&unk_1010F2E10, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100A64AA0;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_10004D5F4;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10046D7B4;
  v8[3] = &unk_1010F2E28;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 129, 870, 49, 1);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100A63DEC(void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(a1, "number") < 1)
  {
    v25 = objc_msgSend(a1, "show");
    v26 = v25;
    if (v25)
    {
      v27 = objc_msgSend(v25, "title");

      if (v27)
      {
        v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v29 = v28;

LABEL_10:
        v30 = a2[1];
        *a2 = (uint64_t)v26;
        a2[1] = v29;
        return swift_bridgeObjectRelease(v30);
      }
      v26 = 0;
    }
    v29 = 0;
    goto LABEL_10;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
  v17._countAndFlagsBits = 0x206E6F73616553;
  v17._object = (void *)0xE700000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
  v32 = objc_msgSend(a1, "number");
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v32, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  String.LocalizationValue.init(stringInterpolation:)(v16);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v19 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v20 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v6, 0, 0, 256);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v23 = a2[1];
  *a2 = v20;
  a2[1] = v22;
  return swift_bridgeObjectRelease(v23);
}

void sub_100A640A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  v7 = (char *)&_swiftEmptyArrayStorage[4];
LABEL_3:
  v9 = *(_QWORD *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_34:
      __break(1u);
    }
    else
    {
      while (1)
      {
        v10 = v3;
        v3 = *(_QWORD *)(v2 + 8 * v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease(v10);
        if (v3)
        {
          v8 = *(_QWORD *)(v3 + 16);
          if (v8)
            break;
        }
        ++v5;
        v11 = *(_QWORD *)(a1 + 16);
        if (v5 == v11)
          goto LABEL_30;
        if (v5 >= v11)
          goto LABEL_34;
      }
      v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        v13 = v3 + 16 * v12;
        v14 = *(_QWORD *)(v13 + 40);
        v31 = *(_QWORD *)(v13 + 32);
        if (v4)
        {
          swift_bridgeObjectRetain();
          v15 = v6;
          v16 = __OFSUB__(v4--, 1);
          if (v16)
            goto LABEL_36;
        }
        else
        {
          v17 = *((_QWORD *)v6 + 3);
          if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_37;
          v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
          if (v18 <= 1)
            v19 = 1;
          else
            v19 = v18;
          v20 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
          v15 = (char *)swift_allocObject(v20, 16 * v19 + 32, 7);
          v21 = j__malloc_size_0(v15);
          v22 = v21 - 32;
          if (v21 < 32)
            v22 = v21 - 17;
          v23 = v22 >> 4;
          *((_QWORD *)v15 + 2) = v19;
          *((_QWORD *)v15 + 3) = 2 * (v22 >> 4);
          v24 = v15 + 32;
          v25 = *((_QWORD *)v6 + 3) >> 1;
          v7 = &v15[16 * v25 + 32];
          v26 = (v23 & 0x7FFFFFFFFFFFFFFFLL) - v25;
          if (*((_QWORD *)v6 + 2))
          {
            v27 = v6 + 32;
            if (v15 != v6 || v24 >= &v27[16 * v25])
              memmove(v24, v27, 16 * v25);
            swift_bridgeObjectRetain();
            *((_QWORD *)v6 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_release();
          v16 = __OFSUB__(v26, 1);
          v4 = v26 - 1;
          if (v16)
            goto LABEL_36;
        }
        ++v12;
        *(_QWORD *)v7 = v31;
        *((_QWORD *)v7 + 1) = v14;
        v7 += 16;
        v6 = v15;
        v8 = *(_QWORD *)(v3 + 16);
        if (v12 == v8)
          goto LABEL_3;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_30:
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v3);
  v28 = *((_QWORD *)v6 + 3);
  if (v28 >= 2)
  {
    v29 = v28 >> 1;
    v16 = __OFSUB__(v29, v4);
    v30 = v29 - v4;
    if (v16)
    {
LABEL_38:
      __break(1u);
      return;
    }
    *((_QWORD *)v6 + 2) = v30;
  }
}

uint64_t sub_100A642B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A642D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A642E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A642F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A64314()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_100A64340(void *a1, char a2)
{
  uint64_t v2;

  return sub_100A5E89C(a1, a2 & 1, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100A6434C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A64370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100A5EA14(a1, a2, *(void (**)(_BYTE *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
}

void sub_100A6437C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  __CFString *v11;
  __CFString *v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = a1 + 40;
    v4 = -(uint64_t)v1;
    v5 = _swiftEmptyArrayStorage;
    v17 = a1 + 40;
    v18 = *(_QWORD *)(a1 + 16);
    do
    {
      v19 = v5;
      if (v2 <= v1)
        v6 = v1;
      else
        v6 = v2;
      v7 = -(uint64_t)v6;
      for (i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
      {
        if (v7 + v2 == 1)
        {
          __break(1u);
          return;
        }
        v10 = *(i - 1);
        v9 = *i;
        swift_bridgeObjectRetain();
        v11 = (__CFString *)String._bridgeToObjectiveC()();
        v12 = (__CFString *)String._bridgeToObjectiveC()();
        v13 = UTTypeConformsTo(v11, v12);

        if (v13)
          break;
        swift_bridgeObjectRelease(v9);
        ++v2;
        if (v4 + v2 == 1)
          return;
      }
      v5 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_1009F24EC(0, v19[2] + 1, 1);
        v5 = v19;
      }
      v15 = v5[2];
      v14 = v5[3];
      if (v15 >= v14 >> 1)
      {
        sub_1009F24EC((char *)(v14 > 1), v15 + 1, 1);
        v5 = v19;
      }
      v5[2] = v15 + 1;
      v16 = &v5[2 * v15];
      v16[4] = v10;
      v16[5] = v9;
      v3 = v17;
      v1 = v18;
    }
    while (v4 + v2);
  }
}

_QWORD *sub_100A64504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[2];
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v7 = _swiftEmptyArrayStorage;
  do
  {
    v8 = *v6;
    v13[0] = *(v6 - 1);
    v13[1] = v8;
    swift_bridgeObjectRetain();
    sub_100A5EE9C((uint64_t)v13, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(v8);
      return v7;
    }
    swift_bridgeObjectRelease(v8);
    v9 = v14;
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        v7 = sub_1009B9BBC(0, v7[2] + 1, 1, v7);
      v11 = v7[2];
      v10 = v7[3];
      if (v11 >= v10 >> 1)
        v7 = sub_1009B9BBC((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
      v7[2] = v11 + 1;
      v7[v11 + 4] = v9;
    }
    v6 += 2;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease(a1);
  return v7;
}

id sub_100A64654(uint64_t a1, uint64_t a2, id a3, char a4)
{
  id v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  if ((a4 & 1) != 0)
  {
    if (!objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    {
      a3 = 0;
      if (a2)
        goto LABEL_5;
      goto LABEL_7;
    }
    v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    a3 = objc_msgSend(v6, "userInterfaceLayoutDirection");

  }
  if (a2)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    goto LABEL_8;
  }
LABEL_7:
  v7 = 0;
LABEL_8:
  v8 = objc_msgSend(objc_allocWithZone((Class)MusicMonogramArtworkToken), "initWithFullName:rightToLeft:", v7, a3 == (id)1);

  if (v8)
  {
    v9 = (void *)objc_opt_self(MusicMonogramArtworkDataSource);
    v10 = v8;
    v11 = objc_msgSend(v9, "sharedMonogramArtworkDataSource");
    v12 = objc_allocWithZone((Class)MPArtworkCatalog);
    v13 = v10;
    v8 = objc_msgSend(v12, "initWithToken:dataSource:", v13, v11);

  }
  return v8;
}

uint64_t sub_100A647C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100A647D4(void *a1)
{
  uint64_t v1;

  sub_100A602F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100A647DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t _sSo13MPModelObjectC9MusicCoreE20MediaKitPlayableKindO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E6FE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xA)
    return 10;
  else
    return v3;
}

unint64_t _sSo13MPModelObjectC9MusicCoreE14FavoriteStatusO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E70F0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

id sub_100A6487C@<X0>(id *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "propertySetByCombiningWithPropertySet:", *a2);
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for SnapshotIdentifier.Lazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotIdentifier.Lazy);
}

uint64_t type metadata accessor for SnapshotIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotIdentifier);
}

uint64_t sub_100A648D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100A648FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A61D90(a1, a2, a3, *(void **)(v3 + 40), *(void (**)(uint64_t, char *, _BYTE *))(v3 + 48), *(_QWORD *)(v3 + 56), *(_BYTE **)(v3 + 64), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_100A6492C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A6493C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100A64960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A620D8(a1, a2, a3, *(_QWORD *)(v3 + 40), *(void **)(v3 + 48), *(void (**)(uint64_t, char *, _BYTE *))(v3 + 56), *(_QWORD *)(v3 + 64), *(_BYTE **)(v3 + 72), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_100A64994()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A649A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_100A62284(a1, a2, a3, v3[5], v3[2], v3[3]);
}

uint64_t sub_100A649B0(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  return sub_100A62470(a1, a2, a3, *(void **)(v3 + 40), *(void (**)(uint64_t, _QWORD *, _BYTE *))(v3 + 48), *(_QWORD *)(v3 + 56), *(_BYTE **)(v3 + 64), *(_QWORD *)(v3 + 16));
}

uint64_t sub_100A649E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A649F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

double sub_100A64A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A62770(a1, a2, a3, *(_QWORD *)(v3 + 40), *(void **)(v3 + 48), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_100A64A24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

double sub_100A64A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A62B20(a1, a2, a3, *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(_QWORD *)(v3 + 16));
}

uint64_t sub_100A64A40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A64A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100A62D7C(a1, a2, a3, *(_QWORD *)(v3 + 32), *(void **)(v3 + 40), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_100A64A5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A64A6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A64A7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A64AA0()
{
  uint64_t v0;

  return sub_100A63DEC(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100A64AA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100A64ABC()
{
  unint64_t result;

  result = qword_1011D6EF0;
  if (!qword_1011D6EF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_1011D6EF0);
  }
  return result;
}

unint64_t sub_100A64B04()
{
  unint64_t result;

  result = qword_1011D6EF8;
  if (!qword_1011D6EF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_1011D6EF8);
  }
  return result;
}

unint64_t sub_100A64B4C()
{
  unint64_t result;

  result = qword_1011D6F00;
  if (!qword_1011D6F00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_1011D6F00);
  }
  return result;
}

unint64_t sub_100A64B94()
{
  unint64_t result;

  result = qword_1011D6F08;
  if (!qword_1011D6F08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPIdentifierSet.Purpose.Options, &type metadata for MPIdentifierSet.Purpose.Options);
    atomic_store(result, (unint64_t *)&qword_1011D6F08);
  }
  return result;
}

unint64_t sub_100A64BDC()
{
  unint64_t result;

  result = qword_1011D6F10;
  if (!qword_1011D6F10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPModelObject.MediaKitPlayableKind, &type metadata for MPModelObject.MediaKitPlayableKind);
    atomic_store(result, (unint64_t *)&qword_1011D6F10);
  }
  return result;
}

unint64_t sub_100A64C24()
{
  unint64_t result;

  result = qword_1011D6F18[0];
  if (!qword_1011D6F18[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPModelObject.FavoriteStatus, &type metadata for MPModelObject.FavoriteStatus);
    atomic_store(result, qword_1011D6F18);
  }
  return result;
}

uint64_t sub_100A64C68(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for SnapshotIdentifier<A>, a1);
}

ValueMetadata *type metadata accessor for MPIdentifierSet.Purpose()
{
  return &type metadata for MPIdentifierSet.Purpose;
}

ValueMetadata *type metadata accessor for MPIdentifierSet.Purpose.Options()
{
  return &type metadata for MPIdentifierSet.Purpose.Options;
}

uint64_t _s20MediaKitPlayableKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_100A64CE4 + 4 * byte_100EDF1D9[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_100A64D18 + 4 * byte_100EDF1D4[v4]))();
}

uint64_t sub_100A64D18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A64D20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A64D28);
  return result;
}

uint64_t sub_100A64D34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A64D3CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_100A64D40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A64D48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.MediaKitPlayableKind()
{
  return &type metadata for MPModelObject.MediaKitPlayableKind;
}

uint64_t _s14FavoriteStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100A64DB0 + 4 * byte_100EDF1E3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100A64DE4 + 4 * byte_100EDF1DE[v4]))();
}

uint64_t sub_100A64DE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A64DEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A64DF4);
  return result;
}

uint64_t sub_100A64E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A64E08);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100A64E0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A64E14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.FavoriteStatus()
{
  return &type metadata for MPModelObject.FavoriteStatus;
}

uint64_t sub_100A64E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for SnapshotIdentifier.Lazy(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v7);
    return 0;
  }
  return result;
}

char *sub_100A64EA0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v9 = *a2;
      *(_QWORD *)a1 = *a2;
      v10 = v9;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v7, v8);
      if (swift_getEnumCaseMultiPayload(a2, v15) == 1)
      {
        v16 = type metadata accessor for IndexPath(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
        v18 = *(char **)((char *)a2 + v17);
        *(_QWORD *)&a1[v17] = v18;
        v19 = v18;
        v20 = a1;
        v21 = v15;
        v22 = 1;
      }
      else
      {
        v23 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v23;
        v24 = v23;
        v20 = a1;
        v21 = v15;
        v22 = 0;
      }
      swift_storeEnumTagMultiPayload(v20, v21, v22);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void sub_100A64FC8(id *a1, uint64_t a2)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a1;
  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
  {
    v6 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a2 + 16), v4, v5);
    if (swift_getEnumCaseMultiPayload(v3, v6) == 1)
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
      v3 = (id *)((char *)v3 + *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48));
    }
    else
    {
      ++v3;
    }
  }

}

_QWORD *sub_100A65050(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = *(void **)a2;
    *a1 = *(_QWORD *)a2;
    v9 = v8;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v6, v7);
    if (swift_getEnumCaseMultiPayload(a2, v13) == 1)
    {
      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
      v16 = *(void **)(a2 + v15);
      *(_QWORD *)((char *)a1 + v15) = v16;
      v17 = v16;
      v18 = a1;
      v19 = v13;
      v20 = 1;
    }
    else
    {
      v21 = *(void **)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v21;
      v22 = v21;
      v18 = a1;
      v19 = v13;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **sub_100A6514C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  if (a1 != a2)
  {
    (*(void (**)(void **, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v8 = *a2;
      *a1 = *a2;
      v9 = v8;
      v10 = 1;
    }
    else
    {
      v11 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v6, v7);
      if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
      {
        v12 = type metadata accessor for IndexPath(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
        v14 = *(void **)((char *)a2 + v13);
        *(void **)((char *)a1 + v13) = v14;
        v15 = v14;
        v16 = a1;
        v17 = v11;
        v18 = 1;
      }
      else
      {
        *a1 = *a2;
        v19 = a2[1];
        a1[1] = v19;
        v20 = v19;
        v16 = a1;
        v17 = v11;
        v18 = 0;
      }
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v10);
  }
  return a1;
}

char *sub_100A65264(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v6, v7);
    if (swift_getEnumCaseMultiPayload(a2, v8) == 1)
    {
      v9 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = sub_100007E8C(&qword_1011D6EB8);
      *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload(a1, v8, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_100A65350(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
    else
    {
      v9 = type metadata accessor for SnapshotIdentifier.Lazy(0, *(_QWORD *)(a3 + 16), v7, v8);
      if (swift_getEnumCaseMultiPayload(a2, v9) == 1)
      {
        v10 = type metadata accessor for IndexPath(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = sub_100007E8C(&qword_1011D6EB8);
        *(_QWORD *)&a1[*(int *)(v11 + 48)] = *(_QWORD *)&a2[*(int *)(v11 + 48)];
        swift_storeEnumTagMultiPayload(a1, v9, 1);
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100A65454(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_100EDF7D8;
  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_100A654DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
      v9 = *(void **)((char *)a2 + v8);
      *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
      v10 = v9;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = (uint64_t)v15;
      v16 = v15;
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void sub_100A655B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id *v4;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (id *)(a1 + *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48));
  }
  else
  {
    v4 = (id *)(a1 + 8);
  }

}

_QWORD *sub_100A65618(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for IndexPath(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
    v8 = *(void **)((char *)a2 + v7);
    *(_QWORD *)((char *)a1 + v7) = v8;
    v9 = v8;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = v13;
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

_QWORD *sub_100A656C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (a1 != a2)
  {
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for IndexPath(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(sub_100007E8C(&qword_1011D6EB8) + 48);
      v8 = *(void **)((char *)a2 + v7);
      *(_QWORD *)((char *)a1 + v7) = v8;
      v9 = v8;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      *a1 = *a2;
      v13 = (void *)a2[1];
      a1[1] = v13;
      v14 = v13;
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

char *sub_100A65794(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_100007E8C(&qword_1011D6EB8);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100A65838(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = sub_100007E8C(&qword_1011D6EB8);
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100A658F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A65904()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A65914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A65938()
{
  uint64_t v0;

  return sub_100A5FC74(*(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100A65944()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100A65954()
{
  unint64_t result;

  result = qword_1011D7090;
  if (!qword_1011D7090)
  {
    result = swift_getWitnessTable(&unk_100EDF818, &_s12LoadingErrorON);
    atomic_store(result, (unint64_t *)&qword_1011D7090);
  }
  return result;
}

uint64_t sub_100A65998()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A659BC()
{
  uint64_t v0;

  return sub_100A5FC74(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100A659C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *_s12LoadingErrorOwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  swift_errorRetain(*a2);
  *a1 = v3;
  return a1;
}

uint64_t _s12LoadingErrorOwxx(_QWORD *a1)
{
  return swift_errorRelease(*a1);
}

uint64_t *_s12LoadingErrorOwca(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  swift_errorRetain(*a2);
  v4 = *a1;
  *a1 = v3;
  swift_errorRelease(v4);
  return a1;
}

_QWORD *_s13InsertCommandV8LocationOwtk(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t *_s12LoadingErrorOwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_errorRelease(v3);
  return a1;
}

ValueMetadata *_s12LoadingErrorOMa()
{
  return &_s12LoadingErrorON;
}

void *Playlist.maximumBatchLimit.unsafeMutableAddressor()
{
  return &static Playlist.maximumBatchLimit;
}

BOOL sub_100A65B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  if (v2)
    v3 = (_QWORD *)v2;
  else
    v3 = _swiftEmptyArrayStorage;
  v4 = sub_100A68874((uint64_t)v3);
  swift_bridgeObjectRelease();
  v5 = sub_100007E8C((uint64_t *)&unk_1011D7130);
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v5, v10 + 2 * v8, v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7A80;
  v12 = v11 + v10;
  v13 = *(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104);
  v13(v12, enum case for AudioVariant.dolbyAtmos(_:), v6);
  v13(v12 + v8, enum case for AudioVariant.dolbyAudio(_:), v6);
  v14 = sub_100A675A0(v11, v4);
  swift_setDeallocating(v11);
  swift_arrayDestroy(v12, *(_QWORD *)(v11 + 16), v6);
  swift_deallocClassInstance(v11, 32, 7);
  v15 = *(_QWORD *)(v14 + 16);
  swift_release();
  return v15 != 0;
}

uint64_t sub_100A65C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_100007E8C(&qword_1011D7120);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a2, v9);
  v11(v8, a1, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 1;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 0;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 1;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 1;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 1;
}

BOOL MusicLibrarySectionedResponse.isEmpty.getter()
{
  return MusicLibrarySectionedResponse.totalItemCount.getter() == 0;
}

uint64_t AudioVariant.supportsBadge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  BOOL v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  v9 = v6 == enum case for AudioVariant.dolbyAtmos(_:)
    || v6 == enum case for AudioVariant.dolbyAudio(_:)
    || v6 == enum case for AudioVariant.lossless(_:)
    || v6 == enum case for AudioVariant.highResolutionLossless(_:);
  v10 = v9;
  if (!v9)
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

unint64_t AudioVariant.symbolString.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v10;

  v1 = v0;
  v2 = 0xD000000000000018;
  v3 = type metadata accessor for AudioVariant(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 != enum case for AudioVariant.dolbyAtmos(_:) && v7 != enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v7 == enum case for AudioVariant.lossless(_:) || v7 == enum case for AudioVariant.highResolutionLossless(_:))
    {
      return 0xD000000000000015;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return 0;
    }
  }
  return v2;
}

uint64_t AudioVariant.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for AudioVariant.dolbyAtmos(_:))
  {
    if (qword_1011D2468 != -1)
      swift_once(&qword_1011D2468, sub_100B62D64);
    v8 = &static AccessibilityString.dolbyAtmosLabel;
  }
  else if (v7 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (qword_1011D2470 != -1)
      swift_once(&qword_1011D2470, sub_100B62DB0);
    v8 = &static AccessibilityString.dolbyAudioLabel;
  }
  else if (v7 == enum case for AudioVariant.lossless(_:))
  {
    if (qword_1011D2480 != -1)
      swift_once(&qword_1011D2480, sub_100B62E4C);
    v8 = &static AccessibilityString.losslessLabel;
  }
  else
  {
    if (v7 != enum case for AudioVariant.highResolutionLossless(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 0;
    }
    if (qword_1011D2478 != -1)
      swift_once(&qword_1011D2478, sub_100B62DFC);
    v8 = &static AccessibilityString.hiResLosslessLabel;
  }
  v9 = *v8;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t AudioVariant.badgeText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v23[-v10];
  v12 = type metadata accessor for AudioVariant(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, v1, v12, v14);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == enum case for AudioVariant.lossless(_:))
  {
    v18 = 0x7373656C73736F4CLL;
    v19 = 0xE800000000000000;
  }
  else
  {
    if (v17 != enum case for AudioVariant.highResolutionLossless(_:))
    {
      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v12);
      return 0;
    }
    v19 = 0x8000000100E2E710;
    v18 = 0x1000000000000012;
  }
  String.LocalizationValue.init(stringLiteral:)(v18, v19);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v20 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v21 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v20, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v21;
}

uint64_t sub_100A6642C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_100007E8C(&qword_1011D7120);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a1, v9);
  v11(v8, a2, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 1;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 0;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 1;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 1;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 1;
}

uint64_t sub_100A665D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_100007E8C(&qword_1011D7120);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a2, v9);
  v11(v8, a1, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 0;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 1;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 0;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 0;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 0;
}

uint64_t Array<A>.removingEquivalents()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(char *, _QWORD, uint64_t, __n128);
  char v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, __n128);
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_100007E8C(&qword_1011D7100);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AudioVariant(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_100A68874(v7);
  v9 = swift_bridgeObjectRelease();
  v19 = v8;
  v10 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104);
  v10(v6, enum case for AudioVariant.highResolutionLossless(_:), v3, v9);
  swift_bridgeObjectRetain();
  v11 = sub_100A3FF70((uint64_t)v6, v8);
  v12 = swift_bridgeObjectRelease();
  v13 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v13(v6, v3, v12);
  if ((v11 & 1) != 0)
  {
    ((void (*)(char *, _QWORD, uint64_t))v10)(v6, enum case for AudioVariant.lossless(_:), v3);
    sub_100A679E0((uint64_t)v6, (uint64_t)v2);
    ((void (*)(char *, uint64_t))v13)(v6, v3);
    sub_100A6899C((uint64_t)v2);
  }
  v14 = v19;
  ((void (*)(char *, _QWORD, uint64_t))v10)(v6, enum case for AudioVariant.dolbyAtmos(_:), v3);
  swift_bridgeObjectRetain();
  v15 = sub_100A3FF70((uint64_t)v6, v14);
  v16 = swift_bridgeObjectRelease();
  v13(v6, v3, v16);
  if ((v15 & 1) != 0)
  {
    ((void (*)(char *, _QWORD, uint64_t))v10)(v6, enum case for AudioVariant.dolbyAudio(_:), v3);
    sub_100A679E0((uint64_t)v6, (uint64_t)v2);
    ((void (*)(char *, uint64_t))v13)(v6, v3);
    sub_100A6899C((uint64_t)v2);
  }
  return v19;
}

uint64_t MusicLibrary.DownloadStatus.DownloadPauseReasons.init(mediaPlayerReason:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 4) != 0)
  {
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.cellularDataDisallowed.getter(v6);
  }
  else if ((a1 & 2) != 0)
  {
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.constrainedNetwork.getter(v6);
  }
  else
  {
    if ((a1 & 1) == 0)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.thermalPressure.getter(v6);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t MusicLibrary.DownloadStatus.DownloadPauseReasons.alert.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72[4];
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v70 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - v10;
  v12 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v68 - v18;
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v68 - v18, v2, v12, v17);
  static MusicLibrary.DownloadStatus.DownloadPauseReasons.cellularDataDisallowed.getter(v20);
  v21 = sub_100048748(&qword_1011D7108, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v12, v21);
  v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v24 = v23(v15, v12);
  if ((v22 & 1) != 0)
  {
    v23(v19, v12);
    result = (uint64_t)sub_100A5755C(0, 0, v72);
    v26 = v72[0];
    v27 = v72[1];
    v28 = v72[2];
    v29 = v72[3];
    v30 = v73;
    v32 = v74;
    v31 = v75;
  }
  else
  {
    static MusicLibrary.DownloadStatus.DownloadPauseReasons.constrainedNetwork.getter(v24);
    v33 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v12, v21);
    v34 = v23(v15, v12);
    if ((v33 & 1) != 0)
    {
      v23(v19, v12);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E4EC20);
      v35 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v36 = v71;
      v35(v8, v11, v71);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v37 = qword_10124DE50;
      v38 = (id)qword_10124DE50;
      v39 = v70;
      static Locale.current.getter(v38);
      v40 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v37, v39, 0, 0, 256);
      v68 = v41;
      v69 = v40;
      v42 = *(void (**)(char *, uint64_t))(v6 + 8);
      v42(v11, v36);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x8000000100E4EC40);
      v35(v8, v11, v36);
      v43 = qword_10124DE50;
      static Locale.current.getter((id)qword_10124DE50);
      v28 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v43, v39, 0, 0, 256);
      v29 = v44;
      v42(v11, v36);
      v45 = sub_100007E8C(&qword_1011D8810);
      v46 = v35;
      v32 = swift_allocObject(v45, 144, 7);
      *(_OWORD *)(v32 + 16) = xmmword_100EA7A80;
      if (qword_1011D2410 != -1)
        swift_once(&qword_1011D2410, sub_100B6231C);
      v48 = static String.okButtonTitle;
      v47 = qword_10124ED20;
      *(_QWORD *)(v32 + 32) = 0x6C65636E6163;
      *(_QWORD *)(v32 + 40) = 0xE600000000000000;
      *(_QWORD *)(v32 + 48) = v48;
      *(_QWORD *)(v32 + 56) = v47;
      *(_BYTE *)(v32 + 64) = 0;
      *(_QWORD *)(v32 + 72) = 0;
      *(_QWORD *)(v32 + 80) = 0;
      swift_bridgeObjectRetain();
      String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
      v46(v8, v11, v36);
      v49 = qword_10124DE50;
      static Locale.current.getter((id)qword_10124DE50);
      v50 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v49, v39, 0, 0, 256);
      v51 = v36;
      v53 = v52;
      result = ((uint64_t (*)(char *, uint64_t))v42)(v11, v51);
      v30 = 0;
      v31 = 0;
      *(_QWORD *)(v32 + 88) = 0x73676E6974746573;
      *(_QWORD *)(v32 + 96) = 0xE800000000000000;
      *(_QWORD *)(v32 + 104) = v50;
      *(_QWORD *)(v32 + 112) = v53;
      *(_BYTE *)(v32 + 120) = 2;
      *(_QWORD *)(v32 + 128) = &unk_1011D7110;
      *(_QWORD *)(v32 + 136) = 0;
    }
    else
    {
      static MusicLibrary.DownloadStatus.DownloadPauseReasons.thermalPressure.getter(v34);
      v54 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v12, v21);
      v23(v15, v12);
      result = v23(v19, v12);
      if ((v54 & 1) == 0)
      {
        v26 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v30 = 0;
        v32 = 0;
        v31 = 0;
        goto LABEL_17;
      }
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x8000000100E4EB80);
      v55 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v56 = v71;
      v55(v8, v11, v71);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v57 = qword_10124DE50;
      v58 = (id)qword_10124DE50;
      v59 = v70;
      static Locale.current.getter(v58);
      v60 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v57, v59, 0, 0, 256);
      v68 = v61;
      v69 = v60;
      v62 = *(void (**)(char *, uint64_t))(v6 + 8);
      v62(v11, v56);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x8000000100E4EBC0);
      v55(v8, v11, v56);
      v63 = qword_10124DE50;
      static Locale.current.getter((id)qword_10124DE50);
      v28 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v63, v59, 0, 0, 256);
      v29 = v64;
      v62(v11, v56);
      v65 = sub_100007E8C(&qword_1011D8810);
      v32 = swift_allocObject(v65, 88, 7);
      *(_OWORD *)(v32 + 16) = xmmword_100EA7AA0;
      if (qword_1011D2410 != -1)
        swift_once(&qword_1011D2410, sub_100B6231C);
      v67 = static String.okButtonTitle;
      v66 = qword_10124ED20;
      *(_QWORD *)(v32 + 32) = 0x6C65636E6163;
      *(_QWORD *)(v32 + 40) = 0xE600000000000000;
      *(_QWORD *)(v32 + 48) = v67;
      *(_QWORD *)(v32 + 56) = v66;
      *(_BYTE *)(v32 + 64) = 0;
      *(_QWORD *)(v32 + 72) = 0;
      *(_QWORD *)(v32 + 80) = 0;
      result = swift_bridgeObjectRetain();
      v30 = 0;
      v31 = 0;
    }
    v27 = v68;
    v26 = v69;
  }
LABEL_17:
  *a1 = v26;
  a1[1] = v27;
  a1[2] = v28;
  a1[3] = v29;
  a1[4] = v30;
  a1[5] = v32;
  a1[6] = v31;
  return result;
}

uint64_t Track.musicItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  __n128 v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  uint64_t v30;
  uint64_t v31;

  v3 = type metadata accessor for Track(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v30 - v8, v1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v12 = type metadata accessor for Song(0);
    v13 = v12;
    v14 = &protocol witness table for Song;
LABEL_5:
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v14;
    v15 = sub_100049F68((_QWORD *)a1);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v15, v9, v13);
  }
  if (v11 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v12 = type metadata accessor for MusicVideo(0);
    v13 = v12;
    v14 = &protocol witness table for MusicVideo;
    goto LABEL_5;
  }
  if (qword_1011D1D30 != -1)
    swift_once(&qword_1011D1D30, sub_100A674BC);
  v17 = type metadata accessor for Logger(0);
  sub_100048B14(v17, (uint64_t)static Logger.musicKit);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v7, v1, v3);
  v19 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.fault.getter(v20);
  if (os_log_type_enabled(v19, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v31 = v23;
    *(_DWORD *)v22 = 136315138;
    v24 = sub_100048748(&qword_1011D7118, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v3, v24);
    v27 = v26;
    *(_QWORD *)(v22 + 4) = sub_10099627C(v25, v26, &v31);
    v28 = swift_bridgeObjectRelease(v27);
    v29 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    v29(v7, v3, v28);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "Unsupported Track type=%s", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
    ((void (*)(char *, uint64_t))v29)(v7, v3);
  }

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v29)(v9, v3);
}

uint64_t Logger.musicKit.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1D30 != -1)
    swift_once(&qword_1011D1D30, sub_100A674BC);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.musicKit);
}

NSString sub_100A67400()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static MusicLibrary.downloadingStateDidChange = (uint64_t)result;
  return result;
}

uint64_t *MusicLibrary.downloadingStateDidChange.unsafeMutableAddressor()
{
  if (qword_1011D1D28 != -1)
    swift_once(&qword_1011D1D28, sub_100A67400);
  return &static MusicLibrary.downloadingStateDidChange;
}

id static MusicLibrary.downloadingStateDidChange.getter()
{
  if (qword_1011D1D28 != -1)
    swift_once(&qword_1011D1D28, sub_100A67400);
  return (id)static MusicLibrary.downloadingStateDidChange;
}

uint64_t static Playlist.maximumBatchLimit.getter()
{
  return 10000;
}

uint64_t sub_100A674BC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.musicKit);
  sub_100048B14(v0, (uint64_t)static Logger.musicKit);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x74694B636973754DLL, 0xE800000000000000);
}

uint64_t static Logger.musicKit.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1D30 != -1)
    swift_once(&qword_1011D1D30, sub_100A674BC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.musicKit);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100A675A0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_100A67720((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v3, a2);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v9 = sub_100A67720((unint64_t *)v10, v7, v3, a2);
    swift_release();
    swift_slowDealloc(v10, -1, -1);
  }
  return v9;
}

uint64_t sub_100A67720(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a1;
  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - v13;
  v37 = *(_QWORD *)(a3 + 16);
  if (v37)
  {
    v32 = a2;
    v33 = v4;
    v39 = v12;
    v40 = a4 + 56;
    v36 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v41 = *(_QWORD *)(v12 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v31 = a3;
    swift_bridgeObjectRetain();
    v34 = 0;
    v16 = 0;
    while (1)
    {
      v38 = v16;
      v15(v14, v36 + v41 * v16, v8);
      v18 = a4;
      v19 = *(_QWORD *)(a4 + 40);
      v20 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v21 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v8, v20);
      a4 = v18;
      v22 = -1 << *(_BYTE *)(v18 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v40 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = ~v22;
        while (1)
        {
          v15(v10, *(_QWORD *)(a4 + 48) + v23 * v41, v8);
          v25 = sub_100048748(&qword_1011D6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
          v26 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v14, v8, v25);
          v17 = *(void (**)(char *, uint64_t))(v39 + 8);
          v17(v10, v8);
          if ((v26 & 1) != 0)
            break;
          v23 = (v23 + 1) & v24;
          a4 = v18;
          if (((*(_QWORD *)(v40 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            goto LABEL_4;
        }
        result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
        v28 = (v23 >> 3) & 0x1FFFFFFFFFFFFFF8;
        v29 = *(unint64_t *)((char *)v35 + v28);
        *(unint64_t *)((char *)v35 + v28) = v29 | (1 << v23);
        if ((v29 & (1 << v23)) != 0)
        {
          a4 = v18;
        }
        else
        {
          if (__OFADD__(v34, 1))
          {
            __break(1u);
            return result;
          }
          a4 = v18;
          ++v34;
        }
      }
      else
      {
        v17 = *(void (**)(char *, uint64_t))(v39 + 8);
LABEL_4:
        v17(v14, v8);
      }
      v16 = v38 + 1;
      if (v38 + 1 == v37)
      {
        swift_bridgeObjectRelease();
        a2 = v32;
        v30 = v34;
        goto LABEL_17;
      }
    }
  }
  v30 = 0;
LABEL_17:
  swift_retain();
  return sub_100AAD6C8(v35, a2, v30, a4);
}

uint64_t sub_100A679E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748(&qword_1011D6BE8, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_100048748(&qword_1011D6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33, v6, v21);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease();
        v24 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease();
    v25 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v27 = *v25;
    v35 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AAF138();
      v27 = v35;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v28, v6);
    sub_100A680F8(v16);
    *v25 = v35;
    v23 = swift_bridgeObjectRelease();
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease();
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

uint64_t sub_100A67C1C(unsigned __int8 a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[10];

  v3 = *v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(*v1 + 40));
  v4 = Library.Menu.Identifier.rawValue.getter(a1);
  v6 = v5;
  swift_bridgeObjectRetain();
  String.hash(into:)(v9, v4, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  return 13;
}

uint64_t sub_100A67FF0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v2 + 40), a1);
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AAF6B8();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1001A4C30(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

void sub_100A680F8(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v3 = type metadata accessor for AudioVariant(0);
  v31 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v28 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v30 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v29 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v29(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        v15 = *(_QWORD *)(v6 + 40);
        v16 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
        v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
        v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v18 < v12 || a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v13 * a1;
        v23 = v21 + v13 * a1;
        if (v13 * a1 < v14 || v23 >= v21 + v14 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23);
        }
        else
        {
          a1 = v9;
          if (v22 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v23);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v30 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v30 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v28;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v24 = *v1;
  v25 = *(_QWORD *)(*v1 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v24 + 16) = v27;
    ++*(_DWORD *)(v24 + 36);
  }
}

unint64_t sub_100A68374(unint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v12[10];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
      Hasher.init(_seed:)(v12, *(_QWORD *)(v3 + 40));
      __asm { BR              X8 }
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x100A6869CLL);
  }
  *(_QWORD *)(v3 + 16) = v11;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t _s8MusicKit12AudioVariantO0A4CoreE1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  int v14;
  int v15;
  int v16;
  int v19;
  void (*v22)(char *, uint64_t);
  uint64_t v23;

  v4 = sub_100007E8C(&qword_1011D7120);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v6[*(int *)(v7 + 48)];
  v9 = type metadata accessor for AudioVariant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v6, a1, v9);
  v11(v8, a2, v9);
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  v13 = v12(v6, v9);
  v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:))
    goto LABEL_20;
  v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14)
      return 0;
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 1;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:))
      return 0;
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15)
      return 0;
    goto LABEL_20;
  }
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v6, v9);
  return 0;
}

uint64_t sub_100A68874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  v11 = sub_100048748(&qword_1011D6BE8, v10, (uint64_t)&protocol conformance descriptor for AudioVariant);
  result = Set.init(minimumCapacity:)(v9, v2, v11);
  v17 = result;
  if (v9)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v5, v13, v2);
      sub_100AAAA80((uint64_t)v8, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v14;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_100A6899C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011D7100);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A689DC()
{
  return sub_100048748(&qword_1011D6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
}

uint64_t sub_100A68A08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_100A68A78();
  result = Set.init(minimumCapacity:)(v2, &type metadata for Library.Menu.Identifier, v3);
  v8 = result;
  if (v2)
  {
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_100AAB1CC(&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_100A68A78()
{
  unint64_t result;

  result = qword_1011D7128;
  if (!qword_1011D7128)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011D7128);
  }
  return result;
}

uint64_t static Logger.music(_:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, a1, a2);
}

uint64_t Logger.motion.unsafeMutableAddressor()
{
  return sub_100A68E10(&qword_1011D1D58, (uint64_t)static Logger.motion, (uint64_t)sub_100A68E6C);
}

uint64_t *OS_os_log.musicBag.unsafeMutableAddressor()
{
  if (qword_1011D1D40 != -1)
    swift_once(&qword_1011D1D40, sub_100A68C6C);
  return &static OS_os_log.musicBag;
}

uint64_t OS_os_log.init(musicCategory:)(uint64_t a1, uint64_t a2)
{
  return OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, a1, a2);
}

uint64_t Logger.audioFormat.unsafeMutableAddressor()
{
  return sub_100A68E10(&qword_1011D1D48, (uint64_t)static Logger.audioFormat, (uint64_t)sub_100A68CE8);
}

uint64_t sub_100A68BB0()
{
  uint64_t result;

  sub_100A691EC();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x74736F706E676953, 0xE900000000000073);
  static OS_os_log.musicSignposts = result;
  return result;
}

uint64_t *OS_os_log.musicSignposts.unsafeMutableAddressor()
{
  if (qword_1011D1D38 != -1)
    swift_once(&qword_1011D1D38, sub_100A68BB0);
  return &static OS_os_log.musicSignposts;
}

id static OS_os_log.musicSignposts.getter()
{
  return sub_100A32784(&qword_1011D1D38, (id *)&static OS_os_log.musicSignposts, (uint64_t)sub_100A68BB0);
}

uint64_t sub_100A68C6C()
{
  uint64_t result;

  sub_100A691EC();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 6775106, 0xE300000000000000);
  static OS_os_log.musicBag = result;
  return result;
}

id static OS_os_log.musicBag.getter()
{
  return sub_100A32784(&qword_1011D1D40, (id *)&static OS_os_log.musicBag, (uint64_t)sub_100A68C6C);
}

void *String.musicSubsystem.unsafeMutableAddressor()
{
  return &static String.musicSubsystem;
}

uint64_t sub_100A68CE8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.audioFormat);
  sub_100048B14(v0, (uint64_t)static Logger.audioFormat);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x726F466F69647541, 0xEB0000000074616DLL);
}

uint64_t static Logger.audioFormat.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A68F04(&qword_1011D1D48, (uint64_t)static Logger.audioFormat, (uint64_t)sub_100A68CE8, a1);
}

uint64_t sub_100A68D80()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.badging);
  sub_100048B14(v0, (uint64_t)static Logger.badging);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x676E6967646142, 0xE700000000000000);
}

uint64_t Logger.badging.unsafeMutableAddressor()
{
  return sub_100A68E10(&qword_1011D1D50, (uint64_t)static Logger.badging, (uint64_t)sub_100A68D80);
}

uint64_t sub_100A68E10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = type metadata accessor for Logger(0);
  return sub_100048B14(v4, a2);
}

uint64_t static Logger.badging.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A68F04(&qword_1011D1D50, (uint64_t)static Logger.badging, (uint64_t)sub_100A68D80, a1);
}

uint64_t sub_100A68E6C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.motion);
  sub_100048B14(v0, (uint64_t)static Logger.motion);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x7472416F65646956, 0xEC0000006B726F77);
}

uint64_t static Logger.motion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100A68F04(&qword_1011D1D58, (uint64_t)static Logger.motion, (uint64_t)sub_100A68E6C, a1);
}

uint64_t sub_100A68F04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100048B14(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

unint64_t static String.musicSubsystem.getter()
{
  return 0xD000000000000013;
}

uint64_t Optional.expectNotNil(logger:file:line:function:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X4>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v8 = v7;
  v37 = a3;
  v38 = a4;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(*(_QWORD *)(a6 + 16) - 8) + 48))(v7, 1, v16);
  if ((_DWORD)v19 == 1)
  {
    v36 = a7;
    v21 = static os_log_type_t.info.getter(v19, v20);
    swift_bridgeObjectRetain_n(a2, 2);
    v22 = swift_bridgeObjectRetain_n(a5, 2);
    v23 = Logger.logObject.getter(v22);
    if (os_log_type_enabled(v23, v21))
    {
      v24 = swift_slowAlloc(32, -1);
      v35 = v21;
      v25 = v24;
      v34 = swift_slowAlloc(64, -1);
      v39 = v34;
      *(_DWORD *)v25 = 136315650;
      v26 = URL.init(fileURLWithPath:)(a1, a2);
      v33 = v23;
      v27 = (char *)URL.lastPathComponent.getter(v26);
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      *(_QWORD *)(v25 + 4) = sub_10099627C(v27, v29, &v39);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2048;
      *(_QWORD *)(v25 + 14) = v37;
      *(_WORD *)(v25 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v25 + 24) = sub_10099627C(v38, a5, &v39);
      swift_bridgeObjectRelease_n(a5, 3);
      v23 = v33;
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v35, "Unexpectedly found nil: %s:%ld %s", (uint8_t *)v25, 0x20u);
      v30 = v34;
      swift_arrayDestroy(v34, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a5, 2);
      swift_bridgeObjectRelease_n(a2, 2);
    }

    a7 = v36;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(a7, v8, a6);
}

unint64_t sub_100A691EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D5A90;
  if (!qword_1011D5A90)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D5A90);
  }
  return result;
}

id sub_100A69254()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s27WeakViewControllerReferenceCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A69298()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011D7140 = result;
  return result;
}

uint64_t sub_100A692BC()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011D7148 = result;
  return result;
}

uint64_t sub_100A692E0()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011D7150 = result;
  return result;
}

uint64_t sub_100A69304()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1011D7158 = result;
  return result;
}

id UIViewController.playActivityFeatureNameSourceViewController.getter()
{
  return sub_100A69414(&qword_1011D1D68, (const void **)&qword_1011D7148, (uint64_t)sub_100A692BC);
}

uint64_t _s27WeakViewControllerReferenceCMa()
{
  return objc_opt_self(_TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference);
}

void UIViewController.playActivityFeatureNameSourceViewController.setter(void *a1)
{
  sub_100A69538(a1, &qword_1011D1D68, (const void **)&qword_1011D7148, (uint64_t)sub_100A692BC);
}

id UIViewController.playActivityRecommendationDataSourceViewController.getter()
{
  return sub_100A69414(&qword_1011D1D70, (const void **)&qword_1011D7150, (uint64_t)sub_100A692E0);
}

id sub_100A69414(_QWORD *a1, const void **a2, uint64_t a3)
{
  void *v3;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t Strong;
  char *v11;
  _OWORD v12[2];
  _BYTE v13[24];
  uint64_t v14;

  if (*a1 != -1)
    swift_once(a1, a3);
  v5 = objc_getAssociatedObject(v3, *a2);
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v12, v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_100A286FC((uint64_t)v12, (uint64_t)v13);
  if (!v14)
  {
    sub_100A1324C((uint64_t)v13);
    return objc_msgSend(v3, "parentViewController");
  }
  v7 = _s27WeakViewControllerReferenceCMa();
  if ((swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    return objc_msgSend(v3, "parentViewController");
  v8 = v11;
  Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);

  if (!Strong)
    return objc_msgSend(v3, "parentViewController");
  return (id)Strong;
}

void UIViewController.playActivityRecommendationDataSourceViewController.setter(void *a1)
{
  sub_100A69538(a1, &qword_1011D1D70, (const void **)&qword_1011D7150, (uint64_t)sub_100A692E0);
}

void sub_100A69538(void *a1, _QWORD *a2, const void **a3, uint64_t a4)
{
  void *v4;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  id v13;
  const void *v14;
  id v15;
  objc_super v16;

  if (a1)
  {
    v9 = (objc_class *)_s27WeakViewControllerReferenceCMa();
    v10 = (char *)objc_allocWithZone(v9);
    v11 = swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);
    *(_QWORD *)&v12 = swift_unknownObjectWeakAssign(v11, a1).n128_u64[0];
    v16.receiver = v10;
    v16.super_class = v9;
    v13 = objc_msgSendSuper2(&v16, "init", v12);
  }
  else
  {
    v13 = 0;
  }
  if (*a2 != -1)
    swift_once(a2, a4);
  v14 = *a3;
  v15 = v13;
  objc_setAssociatedObject(v4, v14, v15, (void *)1);

}

void (*UIViewController.playActivityRecommendationDataSourceViewController.modify(_QWORD *a1))(objc_super **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v3[4] = UIViewController.playActivityRecommendationDataSourceViewController.getter();
  return sub_100A69668;
}

void sub_100A69668(objc_super **a1, char a2)
{
  objc_super *v2;
  id receiver;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super *v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  id v13;
  Class super_class;
  const void *v15;
  objc_super *v16;
  Class v17;
  const void *v18;
  id v19;

  v2 = *a1;
  receiver = (*a1)[2].receiver;
  if ((a2 & 1) != 0)
  {
    if (receiver)
    {
      v4 = (objc_class *)_s27WeakViewControllerReferenceCMa();
      v5 = (char *)objc_allocWithZone(v4);
      v6 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);
      swift_unknownObjectWeakAssign(v6, receiver);
      v2->receiver = v5;
      v2->super_class = v4;
      v7 = receiver;
      v8 = -[objc_super init](v2, "init");
    }
    else
    {
      v8 = 0;
    }
    if (qword_1011D1D70 != -1)
      swift_once(&qword_1011D1D70, sub_100A692E0);
    super_class = v2[2].super_class;
    v15 = (const void *)qword_1011D7150;
    v16 = v8;
    objc_setAssociatedObject(super_class, v15, v16, (void *)1);

    receiver = v2[2].receiver;
  }
  else
  {
    if (receiver)
    {
      v9 = (objc_class *)_s27WeakViewControllerReferenceCMa();
      v10 = (char *)objc_allocWithZone(v9);
      v11 = swift_unknownObjectWeakInit(&v10[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController]);
      *(_QWORD *)&v12 = swift_unknownObjectWeakAssign(v11, receiver).n128_u64[0];
      v2[1].receiver = v10;
      v2[1].super_class = v9;
      v13 = objc_msgSendSuper2(v2 + 1, "init", v12);
    }
    else
    {
      v13 = 0;
    }
    if (qword_1011D1D70 != -1)
      swift_once(&qword_1011D1D70, sub_100A692E0);
    v17 = v2[2].super_class;
    v18 = (const void *)qword_1011D7150;
    v19 = v13;
    objc_setAssociatedObject(v17, v18, v19, (void *)1);

  }
  free(v2);
}

uint64_t UIViewController.playActivityForwardedRecommendationData.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_1011D1D78 != -1)
    swift_once(&qword_1011D1D78, sub_100A69304);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011D7158);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100A286FC((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Data, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_100A1324C((uint64_t)v6);
    return 0;
  }
}

void UIViewController.playActivityForwardedRecommendationData.setter(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  const void *v6;
  Class value;

  v3 = v2;
  if (qword_1011D1D78 != -1)
    swift_once(&qword_1011D1D78, sub_100A69304);
  v6 = (const void *)qword_1011D7158;
  if (a2 >> 60 == 15)
  {
    value = 0;
    objc_setAssociatedObject(v3, (const void *)qword_1011D7158, 0, (void *)3);
  }
  else
  {
    sub_100079DE4(a1, a2);
    value = Data._bridgeToObjectiveC()().super.isa;
    sub_1000822B4(a1, a2);
    objc_setAssociatedObject(v3, v6, value, (void *)3);
  }
  sub_1000822B4(a1, a2);

}

void (*UIViewController.playActivityForwardedRecommendationData.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = UIViewController.playActivityForwardedRecommendationData.getter();
  a1[1] = v3;
  return sub_100A699FC;
}

void sub_100A699FC(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  const void *v5;
  Class isa;
  const void *v7;
  Class value;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    sub_1000A0168(*(_QWORD *)a1, v4);
    if (qword_1011D1D78 != -1)
      swift_once(&qword_1011D1D78, sub_100A69304);
    v5 = (const void *)qword_1011D7158;
    if (v4 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      sub_100079DE4(v3, v4);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000822B4(v3, v4);
    }
    objc_setAssociatedObject(*(id *)(a1 + 16), v5, isa, (void *)3);
    sub_1000822B4(v3, v4);

    sub_1000822B4(v3, v4);
  }
  else
  {
    if (qword_1011D1D78 != -1)
      swift_once(&qword_1011D1D78, sub_100A69304);
    v7 = (const void *)qword_1011D7158;
    if (v4 >> 60 == 15)
    {
      value = 0;
      objc_setAssociatedObject(*(id *)(a1 + 16), (const void *)qword_1011D7158, 0, (void *)3);
    }
    else
    {
      sub_100079DE4(v3, v4);
      value = Data._bridgeToObjectiveC()().super.isa;
      sub_1000822B4(v3, v4);
      objc_setAssociatedObject(*(id *)(a1 + 16), v7, value, (void *)3);
    }
    sub_1000822B4(v3, v4);

  }
}

uint64_t UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(char a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id Strong;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;
  _BYTE v29[24];
  uint64_t v30;

  v3 = objc_msgSend(v1, "playActivityRecommendationData");
  if (v3)
  {
    v4 = v3;
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    if ((a1 & 1) == 0)
    {
      Strong = UIViewController.playActivityRecommendationDataSourceViewController.getter();
      v5 = 0;
LABEL_8:
      if (!Strong)
        return v5;
      while (1)
      {
        v10 = objc_msgSend(Strong, "playActivityRecommendationData");
        if (v10)
        {
          v11 = v10;
          v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v13 = v12;

          goto LABEL_27;
        }
        if ((a1 & 1) == 0)
          goto LABEL_26;
        v14 = qword_1011D1D78;
        v15 = Strong;
        if (v14 != -1)
          swift_once(&qword_1011D1D78, sub_100A69304);
        v16 = objc_getAssociatedObject(v15, (const void *)qword_1011D7158);
        if (v16)
        {
          v17 = v16;
          _bridgeAnyObjectToAny(_:)(&v27, v16);
          swift_unknownObjectRelease(v17);
        }
        else
        {
          v27 = 0u;
          v28 = 0u;
        }
        sub_100A286FC((uint64_t)&v27, (uint64_t)v29);
        if (!v30)
          break;
        v18 = swift_dynamicCast(v26, v29, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
        if (v18)
          v5 = v26[0];
        else
          v5 = 0;
        if (v18)
          v13 = v26[1];
        else
          v13 = 0xF000000000000000;

LABEL_27:
        v19 = qword_1011D1D70;
        v20 = Strong;
        if (v19 != -1)
          swift_once(&qword_1011D1D70, sub_100A692E0);
        v21 = objc_getAssociatedObject(v20, (const void *)qword_1011D7150);
        if (v21)
        {
          v22 = v21;
          _bridgeAnyObjectToAny(_:)(&v27, v21);
          swift_unknownObjectRelease(v22);
        }
        else
        {
          v27 = 0u;
          v28 = 0u;
        }
        sub_100A286FC((uint64_t)&v27, (uint64_t)v29);
        if (v30)
        {
          v23 = _s27WeakViewControllerReferenceCMa();
          if ((swift_dynamicCast(v26, v29, (char *)&type metadata for Any + 8, v23, 6) & 1) != 0)
          {
            v24 = (void *)v26[0];
            Strong = (id)swift_unknownObjectWeakLoadStrong(v26[0]+ OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController);

            if (Strong)
              goto LABEL_38;
          }
        }
        else
        {
          sub_100A1324C((uint64_t)v29);
        }
        Strong = objc_msgSend(v20, "parentViewController");
LABEL_38:

        if (v13 >> 60 != 15)
          goto LABEL_6;
        if (!Strong)
          return v5;
      }
      sub_100A1324C((uint64_t)v29);

LABEL_26:
      v5 = 0;
      v13 = 0xF000000000000000;
      goto LABEL_27;
    }
    v5 = UIViewController.playActivityForwardedRecommendationData.getter();
    v7 = v8;
  }
  Strong = UIViewController.playActivityRecommendationDataSourceViewController.getter();
  if (v7 >> 60 == 15)
    goto LABEL_8;
LABEL_6:

  return v5;
}

uint64_t UIViewController.playActivityFeatureName.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  if (qword_1011D1D60 != -1)
    swift_once(&qword_1011D1D60, sub_100A69298);
  v1 = objc_getAssociatedObject(v0, (const void *)qword_1011D7140);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v5, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100A286FC((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
  }
  else
  {
    sub_100A1324C((uint64_t)v6);
  }
  return 0;
}

void UIViewController.playActivityFeatureName.setter()
{
  void *v0;
  const void *v1;
  id value;

  if (qword_1011D1D60 != -1)
    swift_once(&qword_1011D1D60, sub_100A69298);
  v1 = (const void *)qword_1011D7140;
  value = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v0, v1, value, (void *)3);

}

uint64_t UIViewController.playActivityFeatureIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, "playActivityFeatureName");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  return _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0(v2, v4);
}

void UIViewController.playActivityFeatureIdentifier.setter(unsigned __int8 a1)
{
  void *v1;
  unint64_t v2;
  unint64_t v3;
  id v4;

  if (a1 == 18)
  {
    v2 = 0xE000000000000000;
  }
  else
  {
    PlayActivityFeatureIdentifier.rawValue.getter(a1);
    v2 = v3;
  }
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setPlayActivityFeatureName:", v4, swift_bridgeObjectRelease(v2).n128_f64[0]);

}

void (*UIViewController.playActivityFeatureIdentifier.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = v1;
  v3 = objc_msgSend(v1, "playActivityFeatureName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *(_BYTE *)(a1 + 8) = _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0(v4, v6);
  return sub_100A6A1F8;
}

void sub_100A6A1F8(uint64_t a1)
{
  int v2;
  void *v3;
  id v4;

  v2 = *(unsigned __int8 *)(a1 + 8);
  if (v2 != 18)
    PlayActivityFeatureIdentifier.rawValue.getter(v2);
  v3 = *(void **)a1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setPlayActivityFeatureName:", v4, swift_bridgeObjectRelease().n128_f64[0]);

}

uint64_t UIViewController.playActivityFeatureNames(sourceChildViewController:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100EA7AA0;
  v3 = objc_msgSend(v0, "playActivityFeatureName");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  return v2;
}

uint64_t UIViewController.completePlayActivityFeatureNames.getter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = 0;
  do
  {
    v3 = v1;
    v4 = objc_msgSend(v1, "playActivityFeatureNamesWithSourceChildViewController:", v2);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

    sub_100A05750(v5);
    v1 = objc_msgSend(v3, "playActivityFeatureNameSourceViewController");
    v2 = v3;
  }
  while (v1);
  v6 = _swiftEmptyArrayStorage[2];
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = &_swiftEmptyArrayStorage[5];
    do
    {
      v12 = *(v7 - 1);
      v11 = *v7;
      v13 = HIBYTE(*v7) & 0xF;
      if ((*v7 & 0x2000000000000000) == 0)
        v13 = v12 & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_1009F24EC(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v9 = _swiftEmptyArrayStorage[2];
        v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1)
          sub_1009F24EC((char *)(v8 > 1), v9 + 1, 1);
        _swiftEmptyArrayStorage[2] = v9 + 1;
        v10 = &_swiftEmptyArrayStorage[2 * v9];
        v10[4] = v12;
        v10[5] = v11;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_100A6A59C((uint64_t)_swiftEmptyArrayStorage);
  v15 = v14;

  return v15;
}

void sub_100A6A59C(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;

  v1 = (char *)a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 < 2)
    return;
  v3 = 0;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 16 * v2 + 16;
  v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v8 = *((_QWORD *)v1 + 2);
    if (v4 >= v8)
      break;
    if (v6 >= v8)
      goto LABEL_13;
    v10 = *(_QWORD *)&v1[v3 + 32];
    v9 = *(_QWORD *)&v1[v3 + 40];
    v12 = *(_QWORD *)&v1[v7];
    v11 = *(_QWORD *)&v1[v7 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
      v1 = sub_100B2D640((uint64_t)v1);
    v13 = &v1[v3];
    swift_bridgeObjectRelease();
    *((_QWORD *)v13 + 4) = v12;
    *((_QWORD *)v13 + 5) = v11;
    if (v6 >= *((_QWORD *)v1 + 2))
      goto LABEL_14;
    v14 = &v1[v7];
    swift_bridgeObjectRelease();
    *(_QWORD *)v14 = v10;
    *((_QWORD *)v14 + 1) = v9;
    v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 16;
    if (v5 == v4)
      return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t UIViewController.combinedPlayActivityFeatureName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(v0, "completePlayActivityFeatureNames");
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  v2 = sub_100007E8C(&qword_1011D3728);
  v3 = sub_100049F28((unint64_t *)&qword_1011D6E40, &qword_1011D3728, (uint64_t)&protocol conformance descriptor for [A]);
  v4 = BidirectionalCollection<>.joined(separator:)(2109216, 0xE300000000000000, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t UIViewController.playActivityInformation.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "combinedPlayActivityFeatureName");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(1);
  return v2;
}

void UINavigationController.playActivityFeatureNames(sourceChildViewController:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = objc_msgSend((id)v1, "viewControllers");
  v6 = sub_10004A07C(0, &qword_1011D7178, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!a1)
    goto LABEL_25;
  v8 = a1;
  sub_100A6ACF4((uint64_t)v8, v7);
  if ((v10 & 1) == 0)
  {
    v11 = v9;
    if (v9 < 0)
      goto LABEL_56;
    v3 = (unint64_t)v7 >> 62;
    if ((unint64_t)v7 >> 62)
    {
LABEL_57:
      if (v7 < 0)
        v37 = v7;
      else
        v37 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (v2 < 0)
      {
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain();
      v12 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (v12 >= (uint64_t)v11)
      {
LABEL_6:
        if ((v7 & 0xC000000000000001) != 0 && v11)
        {
          v13 = 0;
          do
          {
            v14 = v13 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v13);
            v13 = v14;
          }
          while (v11 != v14);
        }
        if (v3)
        {
          if (v7 < 0)
            v15 = v7;
          else
            v15 = v7 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v6 = _CocoaArrayWrapper.subscript.getter(0, v11, v15);
          v2 = v16;
          v12 = v17;
          v11 = v18;
          swift_bridgeObjectRelease_n(v7, 2);
          if ((v11 & 1) == 0)
            goto LABEL_18;
        }
        else
        {
          v12 = 0;
          v6 = v7 & 0xFFFFFFFFFFFFFF8;
          v2 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
          v11 = (2 * v11) | 1;
          if ((v11 & 1) == 0)
          {
LABEL_18:
            sub_100A6B1F0(v6, v2, v12, v11);
            v7 = v19;

            swift_unknownObjectRelease(v6);
            goto LABEL_25;
          }
        }
        v20 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v21 = swift_unknownObjectRetain_n(v6, 2);
        v22 = (_QWORD *)swift_dynamicCastClass(v21, v20);
        if (!v22)
        {
          swift_unknownObjectRelease(v6);
          v22 = _swiftEmptyArrayStorage;
        }
        v3 = v22[2];
        swift_release();
        if (!__OFSUB__(v11 >> 1, v12))
        {
          v9 = v6;
          if (v3 == (v11 >> 1) - v12)
          {
            v7 = swift_dynamicCastClass(v6, v20);

            swift_unknownObjectRelease(v6);
            if (!v7)
            {
              swift_unknownObjectRelease(v6);
              v7 = (uint64_t)_swiftEmptyArrayStorage;
            }
            goto LABEL_25;
          }
          goto LABEL_64;
        }
LABEL_63:
        __break(1u);
LABEL_64:
        swift_unknownObjectRelease(v9);
        goto LABEL_18;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12 >= v9)
        goto LABEL_6;
    }
    __break(1u);
    goto LABEL_63;
  }

LABEL_25:
  v23 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v8 = (char *)swift_allocObject(v23, 48, 7);
  *((_OWORD *)v8 + 1) = xmmword_100EA7AA0;
  v24 = objc_msgSend((id)v1, "playActivityFeatureName");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v11 = v25;

  *((_QWORD *)v8 + 4) = v6;
  *((_QWORD *)v8 + 5) = v11;
  if ((unint64_t)v7 >> 62)
    goto LABEL_50;
  v1 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v1)
  {
    if (v1 < 1)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v6 = 0;
    v11 = (unint64_t)&type metadata for String;
    while (1)
    {
      v26 = (v7 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v7)
          : *(id *)(v7 + 8 * v6 + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, "playActivityFeatureNamesWithSourceChildViewController:", 0);
      v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, &type metadata for String);

      v3 = *(_QWORD *)(v29 + 16);
      v30 = *((_QWORD *)v8 + 2);
      v31 = v30 + v3;
      if (__OFADD__(v30, v3))
        break;
      if (v31 > *((_QWORD *)v8 + 3) >> 1)
      {
        if (v30 <= v31)
          v35 = v30 + v3;
        else
          v35 = *((_QWORD *)v8 + 2);
        v8 = sub_1009B96FC((char *)1, v35, 1, v8);
        v30 = *((_QWORD *)v8 + 2);
        if (*(_QWORD *)(v29 + 16))
        {
LABEL_37:
          if ((*((_QWORD *)v8 + 3) >> 1) - v30 < v3)
            goto LABEL_48;
          swift_arrayInitWithCopy(&v8[16 * v30 + 32]);
          if (v3)
          {
            v32 = *((_QWORD *)v8 + 2);
            v33 = __OFADD__(v32, v3);
            v34 = v32 + v3;
            if (v33)
              goto LABEL_49;
            *((_QWORD *)v8 + 2) = v34;
          }
          goto LABEL_30;
        }
      }
      else if (v3)
      {
        goto LABEL_37;
      }
      if (v3)
        goto LABEL_47;
LABEL_30:
      ++v6;
      swift_bridgeObjectRelease();

      if (v1 == v6)
        goto LABEL_54;
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    if (v7 < 0)
      v36 = v7;
    else
      v36 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v1 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease();
  }
LABEL_54:
  swift_bridgeObjectRelease();
}

void sub_100A6ACF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      sub_10004A07C(0, &qword_1011D7178, UIViewController_ptr);
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_100A6AE8C(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    __asm { BR              X9 }
  return 0;
}

void sub_100A6B1F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        sub_10004A07C(0, &qword_1011D7178, UIViewController_ptr);
        swift_arrayInitWithCopy(v8 + 4);
        return;
      }
    }
    else
    {
      v7 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
      v8 = (_QWORD *)swift_allocObject(v7, 8 * v5 + 32, 7);
      v9 = j__malloc_size_0(v8);
      v10 = v9 - 32;
      if (v9 < 32)
        v10 = v9 - 25;
      v8[2] = v5;
      v8[3] = (2 * (v10 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_11;
  }
}

_QWORD *sub_100A6B2DC(const void *a1, uint64_t a2)
{
  uint64_t v4;
  size_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;

  if (!a2)
    return _swiftEmptyArrayStorage;
  if (a2 <= 0)
  {
    v5 = 8 * a2;
    v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    v4 = sub_100007E8C(&qword_1011D71D8);
    v5 = 8 * a2;
    v6 = (_QWORD *)swift_allocObject(v4, 8 * a2 + 32, 7);
    v7 = j__malloc_size_0(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = a2;
    v6[3] = 2 * (v8 >> 3);
  }
  memcpy(v6 + 4, a1, v5);
  return v6;
}

_QWORD *sub_100A6B37C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100007E8C(&qword_1011D71C8);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size_0(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_100A6B768((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain();
  sub_10004FA7C(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_100A6B460(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size_0(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_100A6BF20((uint64_t)(v4 + 4), v2, v1);
    v1 = v7;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v8 = v1;
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease();
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_100A6B554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100007E8C(&qword_1011D71D0);
  v4 = (_QWORD *)swift_allocObject(v3, 40 * v1 + 32, 7);
  v5 = j__malloc_size_0(v4);
  v4[2] = v1;
  v4[3] = 2 * ((uint64_t)(v5 - 32) / 40);
  v6 = sub_100A6B964((uint64_t)&v9, (uint64_t)(v4 + 4), v1, a1);
  v7 = v9;
  swift_bridgeObjectRetain();
  sub_10004FA7C(v7);
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_100A6B644(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (!v6)
      {
LABEL_20:
        v8 = 0;
        goto LABEL_17;
      }
      v8 = v6 - 1;
      v9 = a4 + 16 * (v6 - 1);
      v10 = *(_QWORD *)(v9 + 40);
      *a2 = *(_QWORD *)(v9 + 32);
      a2[1] = v10;
      if (a3 == 1)
      {
LABEL_15:
        v6 = a3;
      }
      else if (v6 != 1)
      {
        v11 = 0;
        v12 = a3 - 2;
        v13 = (uint64_t *)(a4 + 16 * v6 + 8);
        v14 = a2 + 3;
        while (v6 + v11 - 1 <= *(_QWORD *)(a4 + 16))
        {
          v15 = *v13;
          *(v14 - 1) = *(v13 - 1);
          *v14 = v15;
          if (!(v12 + v11))
          {
            swift_bridgeObjectRetain();
            v8 = v6 + v11 - 2;
            goto LABEL_15;
          }
          swift_bridgeObjectRetain();
          --v11;
          v13 -= 2;
          v14 += 2;
          if (v6 + v11 == 1)
          {
            v8 = 0;
            goto LABEL_16;
          }
        }
        __break(1u);
        goto LABEL_19;
      }
LABEL_16:
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *(_QWORD *)(a4 + 16);
      v6 = 0;
    }
  }
  else
  {
    v8 = *(_QWORD *)(a4 + 16);
    v6 = 0;
  }
LABEL_17:
  *a1 = a4;
  a1[1] = v8;
  return v6;
}

uint64_t sub_100A6B768(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100A6B964(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    result = sub_100051FEC(*(_QWORD *)(a4 + 48) + 40 * v16, (uint64_t)v23);
    v17 = v24;
    v18 = v23[1];
    *(_OWORD *)v11 = v23[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(_QWORD *)(v11 + 32) = v17;
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v22;
      goto LABEL_36;
    }
  }
  v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v19);
  if (v20)
    goto LABEL_23;
  v21 = v12 + 2;
  ++v12;
  if (v19 + 1 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
    goto LABEL_16;
  v12 = v19 + 1;
  if (v19 + 2 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_23;
  }
  v12 = v19 + 2;
  if (v19 + 3 >= v14)
    goto LABEL_34;
  v20 = *(_QWORD *)(v6 + 8 * (v19 + 3));
  if (v20)
  {
    v19 += 3;
    goto LABEL_23;
  }
  v21 = v19 + 4;
  v12 = v19 + 3;
  if (v19 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
LABEL_16:
    v19 = v21;
LABEL_23:
    v9 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v19 << 6);
    v12 = v19;
    goto LABEL_9;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

void (*sub_100A6BB6C(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100A03F04(v6, a2, a3);
  return sub_100812ADC;
}

uint64_t sub_100A6BBC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  void (*v11)(_QWORD *);
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16[4];

  v5 = result;
  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    result = swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      if (a3 < 0)
        v8 = a3;
      else
        v8 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      result = swift_bridgeObjectRelease(a3);
      if (v9 <= a2)
      {
        if (v7 >= 1)
        {
          sub_100049F28((unint64_t *)&unk_1011D7200, &qword_1011D71F8, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            sub_100007E8C(&qword_1011D71F8);
            v11 = sub_100812B34(v16, i, a3);
            v13 = *v12;
            v14 = swift_retain(*v12);
            ((void (*)(uint64_t **, _QWORD, __n128))v11)(v16, 0, v14);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease(a3);
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for BagProvider.Observer();
        swift_arrayInitWithCopy(v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100A6BD68(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  void (*v11)(_QWORD *);
  id *v12;
  id v13;
  uint64_t v14;
  void (*v15[4])(id *);

  v5 = result;
  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    result = swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (v5)
  {
    if (v6)
    {
      if (a3 < 0)
        v8 = a3;
      else
        v8 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter(v8);
      result = swift_bridgeObjectRelease(a3);
      if (v9 <= a2)
      {
        if (v7 >= 1)
        {
          sub_100049F28(&qword_1011D71F0, &qword_1011D71E8, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v7; ++i)
          {
            sub_100007E8C(&qword_1011D71E8);
            v11 = sub_100812AE0(v15, i, a3);
            v13 = *v12;
            ((void (*)(void (**)(id *), _QWORD))v11)(v15, 0);
            *(_QWORD *)(v5 + 8 * i) = v13;
          }
          swift_bridgeObjectRelease(a3);
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_10004A07C(0, (unint64_t *)&qword_1011D71E0, NSError_ptr);
        swift_arrayInitWithCopy(v5);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100A6BF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  void (*v11)(_QWORD *);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease();
    if (!v7)
      return;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v6)
  {
    if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
    {
      sub_100007E8C(&qword_1011D71B0);
      swift_arrayInitWithCopy(a1);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v8 = a3;
  else
    v8 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease();
  if (v9 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100049F28(&qword_1011D71C0, &qword_1011D71B8, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain();
  for (i = 0; i != v7; ++i)
  {
    sub_100007E8C(&qword_1011D71B8);
    v11 = sub_100A6BB6C(v15, i, a3);
    v13 = *v12;
    swift_unknownObjectRetain(*v12, v12);
    ((void (*)(uint64_t **, _QWORD))v11)(v15, 0);
    *(_QWORD *)(a1 + 8 * i) = v13;
  }
  swift_bridgeObjectRelease();
}

uint64_t *NSUserDefaults.mobileiPod.unsafeMutableAddressor()
{
  if (qword_1011D1D80 != -1)
    swift_once(&qword_1011D1D80, sub_100A6C1F4);
  return &static NSUserDefaults.mobileiPod;
}

uint64_t NSUserDefaults.hasUserRequestedSubscriptionHidden.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t result;
  unsigned __int8 v3;
  _BYTE v4[24];
  uint64_t v5;

  v0 = sub_100A358C4();
  v1 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v0, v1, (uint64_t)v4);
  if (v5)
  {
    result = swift_dynamicCast(&v3, v4, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return v3;
  }
  else
  {
    sub_100A1324C((uint64_t)v4);
    return 0;
  }
  return result;
}

uint64_t NSUserDefaults.hasUserRequestedSubscriptionHidden.setter(char a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[24];
  void *v6;

  v6 = &type metadata for Bool;
  v5[0] = a1;
  v1 = sub_100A358C4();
  v2 = sub_10098A8C0();
  return NSUserDefaults.subscript.setter((uint64_t)v5, v3, (uint64_t)&type metadata for NSUserDefaults.MobileiPod, v1, v2);
}

void *NSUserDefaults.MobileiPod.suiteName.unsafeMutableAddressor()
{
  return &static NSUserDefaults.MobileiPod.suiteName;
}

void sub_100A6C1F4()
{
  id v0;
  NSString v1;
  id v2;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  static NSUserDefaults.mobileiPod = (uint64_t)v2;
}

uint64_t static NSUserDefaults.mobileiPod.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1011D1D80 != -1)
    swift_once(&qword_1011D1D80, sub_100A6C1F4);
  v0 = static NSUserDefaults.mobileiPod;
  v1 = (id)static NSUserDefaults.mobileiPod;
  return v0;
}

unint64_t static NSUserDefaults.MobileiPod.suiteName.getter()
{
  return 0xD000000000000014;
}

BOOL NSUserDefaults.MobileiPod.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E7340, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

unint64_t NSUserDefaults.MobileiPod.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

Swift::Int sub_100A6C32C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0xD00000000000001FLL, 0x8000000100E4A2B0);
  return Hasher._finalize()();
}

uint64_t sub_100A6C380(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD00000000000001FLL, 0x8000000100E4A2B0);
}

Swift::Int sub_100A6C39C(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0xD00000000000001FLL, 0x8000000100E4A2B0);
  return Hasher._finalize()();
}

uint64_t sub_100A6C3EC@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E7378, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100A6C43C(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x8000000100E4A2B0;
}

void (*NSUserDefaults.hasUserRequestedSubscriptionHidden.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  char v6;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = sub_100A358C4();
  v3[5] = v4;
  v5 = sub_10098A8C0();
  v3[6] = v5;
  NSUserDefaults.subscript.getter((uint64_t)&type metadata for NSUserDefaults.MobileiPod, v4, v5, (uint64_t)v3);
  if (!v3[3])
  {
    sub_100A1324C((uint64_t)v3);
    goto LABEL_5;
  }
  if ((swift_dynamicCast((char *)v3 + 57, v3, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v6 = *((_BYTE *)v3 + 57);
LABEL_6:
  *((_BYTE *)v3 + 56) = v6;
  return sub_100A6C51C;
}

void sub_100A6C51C(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  void *v7;

  v2 = *(void **)a1;
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v7 = &type metadata for Bool;
  v6[0] = v3;
  NSUserDefaults.subscript.setter((uint64_t)v6, a2, (uint64_t)&type metadata for NSUserDefaults.MobileiPod, v4, v5);
  free(v2);
}

unint64_t sub_100A6C574()
{
  unint64_t result;

  result = qword_1011D7210;
  if (!qword_1011D7210)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NSUserDefaults.MobileiPod, &type metadata for NSUserDefaults.MobileiPod);
    atomic_store(result, (unint64_t *)&qword_1011D7210);
  }
  return result;
}

uint64_t _s10MobileiPodOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100A6C5F8 + 4 * byte_100EDF988[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100A6C618 + 4 * byte_100EDF98D[v4]))();
}

_BYTE *sub_100A6C5F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100A6C618(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A6C620(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A6C628(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A6C630(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A6C638(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NSUserDefaults.MobileiPod()
{
  return &type metadata for NSUserDefaults.MobileiPod;
}

id static ICUserIdentity.active.getter()
{
  uint64_t v0;

  return objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "activeAccount");
}

id static ICUserIdentityStore.activeAccountDSID.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v8;

  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "defaultIdentityStore");
  v2 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v8 = 0;
  v3 = objc_msgSend(v1, "DSIDForUserIdentity:outError:", v2, &v8);

  v4 = v8;
  if (!v3)
  {
    v5 = v4;
    v6 = _convertNSErrorToError(_:)(v4);

    swift_willThrow();
    swift_errorRelease(v6);
    return 0;
  }
  return v3;
}

uint64_t static ICMusicKitRequestContext.music.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[6];

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4[4] = sub_100A6D964;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10004BF88;
  v4[3] = &unk_1010F36D8;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  swift_release();
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

id static ICURLSessionManager.musicSession.getter()
{
  return objc_msgSend((id)objc_opt_self(ICURLSessionManager), "highPrioritySession");
}

double ICURLBag.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  double result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend(v2, "valueForBagKey:", v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)((_QWORD *)a2, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t *ICClientInfo.music.unsafeMutableAddressor()
{
  if (qword_1011D1D88 != -1)
    swift_once(&qword_1011D1D88, sub_100A6D2D0);
  return &static ICClientInfo.music;
}

void sub_100A6C938(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;

  objc_opt_self(ICMusicKitRequestContext);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = a1;
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend((id)objc_opt_self(ICClientInfo), "clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:", v5, v6);

    objc_msgSend(v3, "setClientInfo:", v7);
    v8 = (void *)objc_opt_self(ICUserIdentityStore);
    v9 = v4;
    v10 = objc_msgSend(v8, "defaultIdentityStore");
    objc_msgSend(v3, "setIdentityStore:", v10);

    v11 = (void *)objc_opt_self(ICUserIdentity);
    v12 = v9;
    v13 = objc_msgSend(v11, "activeAccount");
    objc_msgSend(v3, "setIdentity:", v13);

  }
}

void ICMusicSubscriptionStatusController.performDefaultActiveSubscriptionStatusRequest(completionHandler:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v5 = objc_allocWithZone((Class)ICStoreRequestContext);
  v15 = sub_100A6D968;
  v16 = 0;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_10004BF88;
  v14 = &unk_1010F3700;
  v6 = _Block_copy(&v11);
  v7 = objc_msgSend(v5, "initWithBlock:", v6);
  _Block_release(v6);
  swift_release();
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)ICMusicSubscriptionStatusRequest), "initWithStoreRequestContext:", v7);
    objc_msgSend(v8, "setShouldReturnLastKnownStatusOnly:", 1);
    v9 = swift_allocObject(&unk_1010F3738, 32, 7);
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    v15 = sub_10004D5F4;
    v16 = v9;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_10004E2F4;
    v14 = &unk_1010F3750;
    v10 = _Block_copy(&v11);
    swift_retain();
    objc_msgSend(v2, "performSubscriptionStatusRequest:withCompletionHandler:", v8, v10, swift_release().n128_f64[0]);
    _Block_release(v10);

  }
}

void sub_100A6CC78(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  objc_opt_self(ICStoreRequestContext);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)objc_opt_self(ICUserIdentityStore);
    v5 = a1;
    v6 = objc_msgSend(v4, "defaultIdentityStore");
    objc_msgSend(v3, "setIdentityStore:", v6);

    v7 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    objc_msgSend(v3, "setIdentity:", v7);

    objc_msgSend(v3, "setAllowsExpiredBags:", 1);
    v8 = objc_allocWithZone((Class)ICURLResponseAuthenticationProvider);
    v9 = v5;
    v10 = objc_msgSend(v8, "initWithUserInteractionLevel:", 1);
    objc_msgSend(v3, "setAuthenticationProvider:", v10);

  }
}

BOOL ICMusicSubscriptionStatusCapabilities.hasVoiceActivatedCatalogPlaybackOnly.getter(char a1)
{
  return (a1 & 3) == 2;
}

void static ICStoreRequestContext.default(withConfigurationBlock:)(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[4];
  _QWORD aBlock[6];

  v5[2] = a1;
  v5[3] = a2;
  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = swift_allocObject(&unk_1010F3788, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100A6D9A8;
  *(_QWORD *)(v3 + 24) = v5;
  aBlock[4] = sub_10004D5F4;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004BF88;
  aBlock[3] = &unk_1010F37A0;
  v4 = _Block_copy(aBlock);
  objc_msgSend(v2, "initWithBlock:", v4, swift_retain().n128_f64[0]);
  _Block_release(v4);
  swift_release();
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v3, "", 0, 0, 0, 1);
  swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
}

void sub_100A6CEE4(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  objc_opt_self(ICStoreRequestContext);
  v2 = swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)objc_opt_self(ICUserIdentityStore);
    v8 = a1;
    v5 = objc_msgSend(v4, "defaultIdentityStore");
    objc_msgSend(v3, "setIdentityStore:", v5);

    v6 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    objc_msgSend(v3, "setIdentity:", v6);

    objc_msgSend(v3, "setAllowsExpiredBags:", 1);
    v7 = objc_msgSend(objc_allocWithZone((Class)ICURLResponseAuthenticationProvider), "initWithUserInteractionLevel:", 1);
    objc_msgSend(v3, "setAuthenticationProvider:", v7);

    if (qword_1011D1D90 != -1)
      swift_once(&qword_1011D1D90, sub_100A6D320);
    objc_msgSend(v3, "setClientInfo:", static ICClientInfo.storeFlow);

  }
}

void sub_100A6D05C(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  objc_opt_self(ICStoreRequestContext);
  v4 = swift_dynamicCastObjCClass(a1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void *)objc_opt_self(ICUserIdentityStore);
    v9 = a1;
    v7 = objc_msgSend(v6, "defaultIdentityStore");
    objc_msgSend(v5, "setIdentityStore:", v7);

    v8 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
    objc_msgSend(v5, "setIdentity:", v8);

    a2(v5);
  }
}

id static ICStoreRequestContext.current.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v1 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:", v0);

  return v1;
}

uint64_t static ICStoreRequestContext.storeFlow.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[5];
  uint64_t v5;

  v0 = objc_allocWithZone((Class)ICStoreRequestContext);
  v4[4] = sub_100A6D960;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10004BF88;
  v4[3] = &unk_1010F37C8;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  swift_release(v5);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

uint64_t *ICClientInfo.storeFlow.unsafeMutableAddressor()
{
  if (qword_1011D1D90 != -1)
    swift_once(&qword_1011D1D90, sub_100A6D320);
  return &static ICClientInfo.storeFlow;
}

id sub_100A6D2D0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)ICClientInfo), "initWithSystemApplicationType:", 0);
  static ICClientInfo.music = (uint64_t)result;
  return result;
}

id static ICClientInfo.music.getter()
{
  return sub_100A32784(&qword_1011D1D88, (id *)&static ICClientInfo.music, (uint64_t)sub_100A6D2D0);
}

void *sub_100A6D320()
{
  void *result;

  result = sub_100A6D33C();
  static ICClientInfo.storeFlow = (uint64_t)result;
  return result;
}

void *sub_100A6D33C()
{
  id v0;
  id v1;
  unint64_t v2;
  void *v3;
  NSString v4;
  void *v6;
  _QWORD v7[4];

  v0 = objc_msgSend(objc_allocWithZone((Class)ICClientInfo), "initWithSystemApplicationType:", 0);
  v1 = objc_msgSend(v0, "mutableCopy");

  _bridgeAnyObjectToAny(_:)(v7, v1);
  swift_unknownObjectRelease(v1);
  v2 = sub_100A6DE28();
  swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v2, 7);
  v3 = v6;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setBagProfileVersion:", v4);

  return v3;
}

id static ICClientInfo.storeFlow.getter()
{
  return sub_100A32784(&qword_1011D1D90, (id *)&static ICClientInfo.storeFlow, (uint64_t)sub_100A6D320);
}

double ICURLBag.subscript.getter@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  NSString v3;
  id v4;
  double result;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "valueForBagKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)((_QWORD *)a1, v4);
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t ICURLBag.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  __n128 v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[2];
  _OWORD v66[2];
  uint64_t v67;

  v5 = v4;
  v6 = v3;
  v10 = type metadata accessor for Optional(0, a2);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - v12;
  if (!*(_QWORD *)(a1 + 16))
  {
    v31 = sub_100A6D9C0();
    swift_allocError(&type metadata for ICURLBag.Error, v31, 0, 0);
    v32 = 0uLL;
    *(_OWORD *)v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    *(_QWORD *)(v33 + 32) = 0;
    *(_BYTE *)(v33 + 40) = 2;
    return swift_willThrow(v32);
  }
  v61 = v11;
  v67 = a1;
  v14 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v15 = v14;
  sub_1009BB9A0(0, 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v6, "valueForBagKey:", v16, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v17)
  {
    swift_bridgeObjectRelease();
    v34 = sub_100A6D9C0();
    swift_allocError(&type metadata for ICURLBag.Error, v34, 0, 0);
    *(_QWORD *)v35 = v15;
    *(_BYTE *)(v35 + 40) = 0;
    return swift_willThrow(v32);
  }
  v55 = v10;
  v56 = a3;
  v58 = v13;
  v59 = a2;
  v57 = v5;
  _bridgeAnyObjectToAny(_:)(v65, v17);
  swift_unknownObjectRelease(v17);
  sub_100048ABC(v65, v66);
  sub_10004FA40((uint64_t)v66, (uint64_t)v65);
  v18 = v67;
  v19 = *(_QWORD *)(v67 + 16);
  v60 = v15;
  if (v19)
  {
    v20 = v15;
    v21 = 0;
    v54 = v20;
    v22 = v20;
    while (1)
    {
      v23 = *(void **)(v18 + 8 * v21 + 32);
      sub_10004FA40((uint64_t)v65, (uint64_t)&v63);
      v24 = v23;
      v25 = sub_100007E8C((uint64_t *)&unk_1011D8950);
      if (!swift_dynamicCast(&v62, &v63, (char *)&type metadata for Any + 8, v25, 6))
      {
        swift_bridgeObjectRelease();
        v46 = sub_100A6D9C0();
        swift_allocError(&type metadata for ICURLBag.Error, v46, 0, 0);
        v48 = v47;
        *v47 = v24;
        sub_10004FA40((uint64_t)v65, (uint64_t)(v47 + 1));
        *((_BYTE *)v48 + 40) = 1;
        goto LABEL_22;
      }
      v26 = v62;
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      if (*(_QWORD *)(v26 + 16) && (v29 = sub_10079C2C4(v27, v28), (v30 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v64 + 1))
        break;
      ++v21;
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v65);

      sub_100048ABC(&v63, v65);
      v22 = v24;
      if (v19 == v21)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    sub_100A1324C((uint64_t)&v63);
    v49 = sub_100A6D9C0();
    swift_allocError(&type metadata for ICURLBag.Error, v49, 0, 0);
    *(_QWORD *)v50 = v24;
    *(_BYTE *)(v50 + 40) = 0;
LABEL_22:
    v51 = v24;
    swift_willThrow(v52);

  }
  else
  {
    v24 = v15;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_10004FA40((uint64_t)v65, (uint64_t)&v63);
    v38 = v58;
    v37 = v59;
    v39 = swift_dynamicCast(v58, &v63, (char *)&type metadata for Any + 8, v59, 6);
    v40 = *(_QWORD *)(v37 - 8);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    if ((v39 & 1) != 0)
    {
      v41(v38, 0, 1, v37);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v65);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v66);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v56, v38, v37);
    }
    v41(v38, 1, 1, v37);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v55);
    v42 = sub_100A6D9C0();
    swift_allocError(&type metadata for ICURLBag.Error, v42, 0, 0);
    v44 = v43;
    *v43 = v24;
    sub_10004FA40((uint64_t)v65, (uint64_t)(v43 + 1));
    *((_BYTE *)v44 + 40) = 1;
    swift_willThrow(v45);

  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v65);
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v66);
}

BOOL static ICEnvironmentMonitorThermalPressureLevel.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_100A6D910(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_100A6D924(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100A6D938(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100A6D94C(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_100A6D96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A6D97C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A6D984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100A6D9A8(void *a1)
{
  uint64_t v1;

  sub_100A6D05C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_100A6D9B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100A6D9C0()
{
  unint64_t result;

  result = qword_1011D7218;
  if (!qword_1011D7218)
  {
    result = swift_getWitnessTable("1>!", &type metadata for ICURLBag.Error);
    atomic_store(result, (unint64_t *)&qword_1011D7218);
  }
  return result;
}

unint64_t sub_100A6DA08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7220;
  if (!qword_1011D7220)
  {
    type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(255);
    result = swift_getWitnessTable(&unk_100ED98CC, v1);
    atomic_store(result, (unint64_t *)&qword_1011D7220);
  }
  return result;
}

void _s5ErrorOwxx(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  if (v2 == 1)
  {

    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 8));
  }
  else if (!v2)
  {

  }
}

uint64_t _s5ErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  __int128 v11;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v6 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = a2 + 8;
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v8;
    v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    v10 = v6;
    v9(a1 + 8, v7, v8);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 0;
    v5 = v4;
  }
  return a1;
}

uint64_t _s5ErrorOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  __int128 v13;
  __int128 v14;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 8));
    }
    else if (!v4)
    {

    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v8 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = (uint64_t)a2 + 8;
      v10 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 32) = v10;
      v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
      v12 = v8;
      v11(a1 + 8, v9, v10);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v13 = *a2;
      v14 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v14;
    }
    else
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      v7 = v6;
    }
  }
  return a1;
}

__n128 initializeWithTake for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5ErrorOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(a1 + 8));
    }
    else if (!v4)
    {

    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_100A6DDD4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_100A6DDF0(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICURLBag.Error()
{
  return &type metadata for ICURLBag.Error;
}

unint64_t sub_100A6DE28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7228;
  if (!qword_1011D7228)
  {
    v1 = objc_opt_self(ICMutableClientInfo);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D7228);
  }
  return result;
}

unint64_t EnvironmentVariable.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t EnvironmentVariable.isEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = _s9MusicCore19EnvironmentVariableO5valueSSSgvg_0();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    if (v0 == 49 && v1 == 0xE100000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v0, v1, 49, 0xE100000000000000, 0) & 1) != 0
      || v2 == 1702195828 && v3 == 0xE400000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 1702195828, 0xE400000000000000, 0) & 1) != 0
      || v2 == 5457241 && v3 == 0xE300000000000000)
    {
      v4 = 1;
    }
    else
    {
      v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 5457241, 0xE300000000000000, 0);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

BOOL EnvironmentVariable.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E73B0, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

Swift::Int sub_100A6DFD4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  String.hash(into:)(v1, 0xD000000000000013, 0x8000000100E4A5A0);
  return Hasher._finalize()();
}

uint64_t sub_100A6E028(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD000000000000013, 0x8000000100E4A5A0);
}

Swift::Int sub_100A6E044(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  String.hash(into:)(v2, 0xD000000000000013, 0x8000000100E4A5A0);
  return Hasher._finalize()();
}

uint64_t sub_100A6E094@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E73E8, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100A6E0E4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x8000000100E4A5A0;
}

uint64_t _s9MusicCore19EnvironmentVariableO5valueSSSgvg_0()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v1 = objc_msgSend(v0, "environment");

  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_10079C2C4(0xD000000000000013, 0x8000000100E4A5A0), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
  }
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_100A6E1E4()
{
  unint64_t result;

  result = qword_1011D7230;
  if (!qword_1011D7230)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EnvironmentVariable, &type metadata for EnvironmentVariable);
    atomic_store(result, (unint64_t *)&qword_1011D7230);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EnvironmentVariable(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100A6E268 + 4 * asc_100EDFB00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100A6E288 + 4 * byte_100EDFB05[v4]))();
}

_BYTE *sub_100A6E268(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100A6E288(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A6E290(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A6E298(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A6E2A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A6E2A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentVariable()
{
  return &type metadata for EnvironmentVariable;
}

uint64_t StagedInstall.isInstalled.getter(char a1)
{
  return a1 & 1;
}

uint64_t sub_100A6E2CC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D7238);
  sub_100048B14(v0, (uint64_t)qword_1011D7238);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x6E49646567617453, 0xED00006C6C617473);
}

uint64_t static StagedInstall.current()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - v5;
  if (qword_1011D24D8 != -1)
    swift_once(&qword_1011D24D8, sub_100B63A4C);
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    if (qword_1011D1D98 != -1)
      swift_once(&qword_1011D1D98, sub_100A6E2CC);
    v27 = v1;
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048B14(v7, (uint64_t)qword_1011D7238);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Checking for a staged install of Music", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    URL.init(fileURLWithPath:)(0xD00000000000002FLL, 0x8000000100E4EE60);
    v12 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL.path.getter(v12);
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v12, "fileExistsAtPath:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

    v18 = Logger.logObject.getter(v17);
    v19 = v18;
    if (v16)
    {
      v20 = static os_log_type_t.error.getter(v18);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Found Music.app in staged_system_apps", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      Data.init(contentsOf:options:)(v6, 0);
      __asm { BR              X10 }
    }
    v22 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v19, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v22, "✅ No staged copy found", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v27);
  }
  return 2;
}

void sub_100A6EA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_100A6EAFC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x100A6ECE0);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_100A6ED04(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100A6ED60()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_100A6EA9C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1000652DC(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_100A6EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_100A6EA9C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_100A6EFDC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100A6F020()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_100A6F054 + dword_100A6F114[v0 >> 62]))();
}

uint64_t sub_100A6F064@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_100079DE4(v2, v1);
      sub_100A6ED04(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t storeEnumTagSinglePayload for StagedInstall(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A6F170 + 4 * byte_100EDFBC9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A6F1A4 + 4 * asc_100EDFBC4[v4]))();
}

uint64_t sub_100A6F1A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A6F1AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A6F1B4);
  return result;
}

uint64_t sub_100A6F1C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A6F1C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A6F1CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A6F1D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StagedInstall()
{
  return &type metadata for StagedInstall;
}

char *sub_100A6F1F0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  UIImage *v6;
  UIImage *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v3 = (char *)_swiftEmptyArrayStorage;
    v4 = 4;
    v16 = v2;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (UIImage *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : (UIImage *)*(id *)(a1 + 8 * v4);
      v7 = v6;
      v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v9 = sub_100A700B8(v4 - 4, v6);
      v11 = v10;

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = sub_1009B96FC(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
        v13 = *((_QWORD *)v3 + 2);
        v12 = *((_QWORD *)v3 + 3);
        if (v13 >= v12 >> 1)
          v3 = sub_1009B96FC((char *)(v12 > 1), v13 + 1, 1, v3);
        *((_QWORD *)v3 + 2) = v13 + 1;
        v5 = &v3[16 * v13];
        *((_QWORD *)v5 + 4) = v9;
        *((_QWORD *)v5 + 5) = v11;
        v2 = v16;
      }
      ++v4;
      if (v8 == v2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v3 = (char *)_swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return v3;
}

uint64_t sub_100A6F364(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  __int128 v14;
  unint64_t v15;
  BOOL v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  Swift::String v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v2 = v1;
  v4 = type metadata accessor for URL.DirectoryHint(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v59 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v67 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 64);
  v55 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v56 = (unint64_t)(v9 + 63) >> 6;
  v58 = enum case for URL.DirectoryHint.inferFromPath(_:);
  v63 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v52 = (char *)_swiftEmptyArrayStorage;
  *(_QWORD *)&v14 = 136446210;
  v54 = v14;
  v53 = (char *)&type metadata for Any + 8;
  v57 = v6;
  while (1)
  {
    if (v11)
    {
      v64 = (v11 - 1) & v11;
      v65 = v13;
      v15 = __clz(__rbit64(v11)) | (v13 << 6);
      goto LABEL_22;
    }
    v16 = __OFADD__(v13, 1);
    v17 = v13 + 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v56)
      goto LABEL_38;
    v18 = *(_QWORD *)(v55 + 8 * v17);
    if (!v18)
      break;
LABEL_21:
    v64 = (v18 - 1) & v18;
    v65 = v17;
    v15 = __clz(__rbit64(v18)) + (v17 << 6);
LABEL_22:
    v20 = 16 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v63 + 48) + v20);
    v22 = *v21;
    v23 = (void *)v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(v63 + 56) + v20);
    v26 = *v24;
    v25 = v24[1];
    swift_bridgeObjectRetain();
    sub_100079DE4(v26, v25);
    if (qword_1011D1DA0 != -1)
      swift_once(&qword_1011D1DA0, sub_100A6FF14);
    sub_100048B14(v6, (uint64_t)qword_1011D7250);
    v68 = 47;
    v69 = 0xE100000000000000;
    v27._countAndFlagsBits = v22;
    v66 = v23;
    v27._object = v23;
    String.append(_:)(v27);
    v28 = v60;
    v29 = v61;
    v30 = v62;
    (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, v58, v62);
    v31 = sub_10098A8C0();
    v32 = v67;
    URL.appending<A>(path:directoryHint:)(&v68, v28, &type metadata for String, v31);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
    swift_bridgeObjectRelease(v69);
    v33 = Data.write(to:options:)(v32, 0, v26, v25);
    if (v2)
    {
      if (qword_1011D1DA8 != -1)
        swift_once(&qword_1011D1DA8, sub_100A7003C);
      v34 = type metadata accessor for Logger(0);
      sub_100048B14(v34, (uint64_t)qword_1011D7268);
      swift_errorRetain(v2);
      v35 = swift_errorRetain(v2);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v68 = v39;
        *(_DWORD *)v38 = v54;
        v70 = v2;
        swift_errorRetain(v2);
        v40 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
        v41 = (char *)String.init<A>(describing:)(&v70, v40);
        v43 = v42;
        *(_QWORD *)(v38 + 4) = sub_10099627C(v41, v42, &v68);
        swift_bridgeObjectRelease(v43);
        swift_errorRelease(v2);
        swift_errorRelease(v2);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Tap-to-Radar Attachment file write failed with error: %{public}s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, v53);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);

      }
      else
      {

        swift_errorRelease(v2);
        swift_errorRelease(v2);
      }
      swift_errorRelease(v2);
      v6 = v57;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v67, v57);
      swift_bridgeObjectRelease(v66);
      result = sub_1000652DC(v26, v25);
      v2 = 0;
    }
    else
    {
      v44 = v67;
      v45 = URL.path.getter(v33);
      v47 = v46;
      v6 = v57;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v57);
      swift_bridgeObjectRelease(v66);
      sub_1000652DC(v26, v25);
      result = swift_isUniquelyReferenced_nonNull_native(v52);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1009B96FC(0, *((_QWORD *)v52 + 2) + 1, 1, v52);
        v52 = (char *)result;
      }
      v49 = *((_QWORD *)v52 + 2);
      v48 = *((_QWORD *)v52 + 3);
      if (v49 >= v48 >> 1)
      {
        result = (uint64_t)sub_1009B96FC((char *)(v48 > 1), v49 + 1, 1, v52);
        v52 = (char *)result;
      }
      v50 = v52;
      *((_QWORD *)v52 + 2) = v49 + 1;
      v51 = &v50[16 * v49];
      *((_QWORD *)v51 + 4) = v45;
      *((_QWORD *)v51 + 5) = v47;
    }
    v11 = v64;
    v13 = v65;
  }
  v19 = v17 + 1;
  if (v17 + 1 >= v56)
    goto LABEL_38;
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v17 + 2;
  if (v17 + 2 >= v56)
    goto LABEL_38;
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v17 + 3;
  if (v17 + 3 >= v56)
    goto LABEL_38;
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
    goto LABEL_20;
  v19 = v17 + 4;
  if (v17 + 4 >= v56)
  {
LABEL_38:
    swift_release(v63);
    return (uint64_t)v52;
  }
  v18 = *(_QWORD *)(v55 + 8 * v19);
  if (v18)
  {
LABEL_20:
    v17 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v56)
      goto LABEL_38;
    v18 = *(_QWORD *)(v55 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100A6F91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v70 = a3;
  v71 = a4;
  v16 = sub_100007E8C(&qword_1011D6890);
  __chkstk_darwin(v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URLComponents(0);
  __chkstk_darwin(v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D24D8 != -1)
  {
    v69 = a7;
    v59 = v20;
    swift_once(&qword_1011D24D8, sub_100B63A4C);
    v20 = v59;
    a7 = v69;
  }
  if (static DeviceCapabilities.isInternalInstall != 1)
  {
    v29 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a9, 1, 1, v29);
  }
  v69 = a7;
  v23 = v20;
  URLComponents.init(string:)(0xD000000000000012, 0x8000000100E4EE90);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v19);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v66 = v23;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v18, v19);
  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v60 = a5;
    else
      v60 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v61 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(a5);
    v67 = a8;
    if (v61)
      goto LABEL_8;
  }
  else
  {
    v25 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = a8;
    if (v25)
    {
LABEL_8:
      v26 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      if (qword_1011D1DA0 != -1)
        swift_once(&qword_1011D1DA0, sub_100A6FF14);
      v27 = type metadata accessor for URL(0);
      sub_100048B14(v27, (uint64_t)qword_1011D7250);
      NSFileManager.createDirectoryIfNeeded(at:)();
      v28 = a2;

      goto LABEL_13;
    }
  }
  if (*(_QWORD *)(a6 + 16))
    goto LABEL_8;
  v28 = a2;
LABEL_13:
  v30 = swift_bridgeObjectRetain();
  v31 = sub_100A6F1F0(v30);
  swift_bridgeObjectRelease(a5);
  v64 = sub_100A6F364(a6);
  v32 = sub_100007E8C(&qword_1011D3E00);
  v33 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v34 = swift_allocObject(v32, ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ 8 * *(_QWORD *)(v33 + 72), *(unsigned __int8 *)(v33 + 80) | 7);
  *(_OWORD *)(v34 + 16) = xmmword_100EAFD20;
  URLQueryItem.init(name:value:)(0x656C746954, 0xE500000000000000, a1, v28);
  URLQueryItem.init(name:value:)(0x7470697263736544, 0xEB000000006E6F69, v70, v71);
  v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v36 = objc_msgSend(v35, "bundleIdentifier");

  v68 = a9;
  v65 = v19;
  v63 = v34;
  if (v36)
  {
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  URLQueryItem.init(name:value:)(0x4449656C646E7542, 0xE800000000000000, v37, v39);
  swift_bridgeObjectRelease(v39);
  v72 = (uint64_t)v31;
  v40 = sub_100007E8C(&qword_1011D3728);
  v41 = sub_100A5DC80();
  v42 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v40, v41);
  v44 = v43;
  URLQueryItem.init(name:value:)(0x68736E6565726353, 0xEA0000000000746FLL, v42, v43);
  swift_bridgeObjectRelease(v44);
  v45 = v64;
  v72 = v64;
  v46 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v40, v41);
  v48 = v47;
  URLQueryItem.init(name:value:)(0x656D686361747441, 0xEB0000000073746ELL, v46, v47);
  swift_bridgeObjectRelease(v48);
  v72 = v69;
  v49 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v40, v41);
  v51 = v50;
  URLQueryItem.init(name:value:)(0x7364726F7779654BLL, 0xE800000000000000, v49, v50);
  swift_bridgeObjectRelease(v51);
  v72 = (uint64_t)v31;
  sub_100A05464(v45);
  v52 = *(_QWORD *)(v72 + 16);
  swift_bridgeObjectRelease(v72);
  if (v52)
    v53 = 49;
  else
    v53 = 0;
  if (v52)
    v54 = 0xE100000000000000;
  else
    v54 = 0;
  URLQueryItem.init(name:value:)(0x6E4F6574656C6544, 0xEE00686361747441, v53, v54);
  swift_bridgeObjectRelease(v54);
  if ((v67 & 1) != 0)
    v55 = 49;
  else
    v55 = 0;
  if ((v67 & 1) != 0)
    v56 = 0xE100000000000000;
  else
    v56 = 0;
  URLQueryItem.init(name:value:)(0xD00000000000001ALL, 0x8000000100E4EEB0, v55, v56);
  v57 = swift_bridgeObjectRelease(v56);
  v58 = URLComponents.queryItems.setter(v63, v57);
  URLComponents.url.getter(v58);
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v22, v65);
}

uint64_t sub_100A6FF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for URL.DirectoryHint(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  sub_10004FACC(v7, qword_1011D7250);
  sub_100048B14(v7, (uint64_t)qword_1011D7250);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v0);
  return URL.init(filePath:directoryHint:relativeTo:)(0xD000000000000015, 0x8000000100E4EEF0, v3, v6);
}

uint64_t sub_100A7003C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D7268);
  sub_100048B14(v0, (uint64_t)qword_1011D7268);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x522D6F742D706154, 0xEC00000072616461);
}

uint64_t sub_100A700B8(uint64_t a1, UIImage *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  unint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, __n128);
  NSData *v22;
  NSData *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  unint64_t v30;
  unint64_t v31;

  v4 = type metadata accessor for URL.DirectoryHint(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v29 - v13;
  if (qword_1011D1DA0 != -1)
    swift_once(&qword_1011D1DA0, sub_100A6FF14);
  v15 = sub_100048B14(v8, (uint64_t)qword_1011D7250);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v15, v8);
  v30 = 0;
  v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v31);
  v30 = 0xD000000000000012;
  v31 = 0x8000000100E4EED0;
  v29[1] = a1;
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18._countAndFlagsBits = 1735420462;
  v18._object = (void *)0xE400000000000000;
  String.append(_:)(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  v19 = sub_10098A8C0();
  URL.appending<A>(path:directoryHint:)(&v30, v7, &type metadata for String, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = swift_bridgeObjectRelease(v31);
  v21 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v21(v12, v8, v20);
  v22 = UIImageJPEGRepresentation(a2, 85.0);
  if (v22)
  {
    v23 = v22;
    v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

    Data.write(to:options:)(v14, 0, v24, v26);
    v22 = (NSData *)sub_1000652DC(v24, v26);
  }
  v27 = URL.path.getter(v22);
  ((void (*)(char *, uint64_t))v21)(v14, v8);
  return v27;
}

uint64_t static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  *(_BYTE *)(v3 + 89) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  return swift_task_switch(sub_100A70538, v6, v7);
}

uint64_t sub_100A70538(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 89);
  v5 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 64) = v5;
  v6 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 72) = v6;
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v2;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 80) = v7;
  *v7 = v1;
  v7[1] = sub_100A70604;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 88, v5, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100E4AA20, sub_100A74C58, v6, &type metadata for Bool);
}

uint64_t sub_100A70604()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100A78B58, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_100A7066C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C((uint64_t *)&unk_1011D77C0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v41);
    *(_QWORD *)&v40 = v19;
    *((_QWORD *)&v40 + 1) = v18;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v19;
    *((_QWORD *)&v38[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_100048ABC(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_100048ABC(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_100048ABC(v37, v38);
    sub_100048ABC(v38, &v34);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v30;
    *(_OWORD *)(v10 + 16) = v31;
    *(_QWORD *)(v10 + 32) = v32;
    sub_100048ABC(&v34, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10004FA7C(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_100A70A30(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C((uint64_t *)&unk_1011D77C0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v12);
    *(_QWORD *)&v39[0] = *v17;
    *((_QWORD *)&v39[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    v30 = v19;
    swift_dynamicCast(v34, &v30, &type metadata for Bool, (char *)&type metadata for Any + 8, 7);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_100048ABC(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_100048ABC(v38, v39);
    sub_100048ABC(v39, &v35);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v31;
    *(_OWORD *)(v10 + 16) = v32;
    *(_QWORD *)(v10 + 32) = v33;
    sub_100048ABC(&v35, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_10004FA7C(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t *CloudLibrary.EnablementContext.action.unsafeMutableAddressor()
{
  if (qword_1011D1DB0 != -1)
    swift_once(&qword_1011D1DB0, sub_100A71564);
  return &static CloudLibrary.EnablementContext.action;
}

uint64_t *CloudLibrary.StatusObserver.shared.unsafeMutableAddressor()
{
  if (qword_1011D1DB8 != -1)
    swift_once(&qword_1011D1DB8, sub_100A71730);
  return &static CloudLibrary.StatusObserver.shared;
}

void CloudLibrary.EnablementContext.title.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_100A70F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x8000000100E4EFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v5 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

void CloudLibrary.EnablementContext.message.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_100A7111C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0xD000000000000079, 0x8000000100E4F340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v5 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

void UIView.CompressionResistancePriority.vertical.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

double (*UIView.CompressionResistancePriority.vertical.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t static CloudLibrary.UpdateContext.__derived_struct_equals(_:_:)(int a1, unsigned int a2, float a3, float a4)
{
  return (a3 == a4) & ~(a1 ^ a2);
}

BOOL sub_100A712A4(float *a1, float *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

unint64_t CloudLibrary.FailureType.rawValue.getter(int a1)
{
  return ~a1 | 0xFFFFFFFFFFFFFF00;
}

Swift::Int sub_100A712E0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(~v1);
  return Hasher._finalize()();
}

void sub_100A71324()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(~(unint64_t)*v0);
}

Swift::Int sub_100A71350(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(~v2);
  return Hasher._finalize()();
}

uint64_t sub_100A71390@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore12CloudLibraryO11FailureTypeO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100A713B8(unint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = ~(unint64_t)*v1;
}

BOOL CloudLibrary.Status.shouldDisplayBanner.getter(uint64_t a1)
{
  if (a1 >> 30 == 1)
    return a1 & 1;
  return a1 >> 30 != 2 || (unint64_t)(a1 - 0x80000000) >= 3;
}

BOOL CloudLibrary.Status.shouldShowDismissButton.getter(uint64_t a1)
{
  return a1 >> 30 != 1 && (a1 >> 30 != 2 || a1 != 2147483652);
}

BOOL CloudLibrary.Status.shouldShowActionButton.getter(uint64_t a1)
{
  return !(a1 >> 30) || a1 >> 30 == 2 && a1 == 2147483651;
}

void (*CloudLibrary.Status.action.getter(uint64_t a1))()
{
  if (!(a1 >> 30) || a1 >> 30 == 2 && a1 == 2147483651)
    return sub_100A7149C;
  else
    return 0;
}

void sub_100A7149C()
{
  if (qword_1011D1DB8 != -1)
    swift_once(&qword_1011D1DB8, sub_100A71730);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
}

BOOL CloudLibrary.Status.shouldShowLoadingView.getter(uint64_t a1)
{
  return a1 >> 30 == 1 || a1 >> 30 == 2 && a1 == 2147483652;
}

unint64_t CloudLibrary.Status.progress.getter(unint64_t a1)
{
  unint64_t v1;

  v1 = HIDWORD(a1);
  if ((a1 & 0xC0000000) != 0x40000000)
    v1 = 0;
  return v1 | ((unint64_t)((a1 & 0xC0000000) != 0x40000000) << 32);
}

uint64_t sub_100A71558(uint64_t *a1, uint64_t *a2)
{
  return _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_100A71564()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v15[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E4F6E0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  v13 = v12;
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  static CloudLibrary.EnablementContext.action = v11;
  unk_10124E1E0 = v13;
  return result;
}

uint64_t static CloudLibrary.EnablementContext.action.getter()
{
  uint64_t v0;

  if (qword_1011D1DB0 != -1)
    swift_once(&qword_1011D1DB0, sub_100A71564);
  v0 = static CloudLibrary.EnablementContext.action;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100A71730()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for CloudLibrary.StatusObserver(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_100A717AC();
  static CloudLibrary.StatusObserver.shared = result;
  return result;
}

double static CloudLibrary.StatusObserver.shared.getter()
{
  double result;

  if (qword_1011D1DB8 != -1)
    swift_once(&qword_1011D1DB8, sub_100A71730);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_100A717AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v45[152];
  _QWORD v46[2];
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D72B8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v47 = 2;
  v46[0] = 0xD000000000000014;
  v46[1] = 0x8000000100E4A7C0;
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v7 = sub_10098A8C0();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v47, (uint64_t)v6, (uint64_t)v46, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Bool, v7, (char *)&v48);
  v8 = v49;
  v9 = v50;
  *(_OWORD *)(v1 + 16) = v48;
  *(_QWORD *)(v1 + 32) = v8;
  *(_BYTE *)(v1 + 40) = v9;
  *(_QWORD *)(v1 + 48) = _swiftEmptyArrayStorage;
  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v10 = static ApplicationCapabilities.Controller.shared;
  *(_QWORD *)(v1 + 56) = static ApplicationCapabilities.Controller.shared;
  *(_QWORD *)(v1 + 64) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  v11 = v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status;
  *(_QWORD *)&v48 = 0x80000000;
  swift_retain(v10);
  Published.init(initialValue:)(&v48, &type metadata for CloudLibrary.Status);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 32))(v11, v5, v2);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 2;
  v12 = sub_100007E8C(&qword_1011D61C0);
  inited = swift_initStackObject(v12, v45);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AC0;
  if (qword_1011D1C88 != -1)
    swift_once(&qword_1011D1C88, sub_100A325A4);
  v14 = (void *)static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
  v15 = *(_QWORD *)(v1 + 56);
  UIScreen.Dimensions.size.getter(static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(inited + 40) = v17;
  v18 = qword_1011D1CA8;
  v19 = v14;
  swift_retain(v15);
  if (v18 != -1)
    swift_once(&qword_1011D1CA8, sub_100A326E4);
  v20 = (void *)static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
  v21 = *(_QWORD *)(v1 + 56);
  UIScreen.Dimensions.size.getter(static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = v23;
  v24 = (void *)MPCloudControllerCloudLibraryFailureDidChangeNotification;
  UIScreen.Dimensions.size.getter(MPCloudControllerCloudLibraryFailureDidChangeNotification);
  *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 112) = v25;
  *(_QWORD *)(inited + 120) = v26;
  v27 = swift_allocObject(&unk_1010F3A50, 24, 7);
  swift_weakInit(v27 + 16, v1);
  v28 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v28, 48, 7);
  v29 = v20;
  swift_retain(v21);
  v30 = v24;
  v31 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_100A7898C, v27);
  swift_beginAccess(v1 + 72, &v48, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  v34 = *(_QWORD *)((*(_QWORD *)(v1 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v33 = *(_QWORD *)((*(_QWORD *)(v1 + 72) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v34 >= v33 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v31);
  specialized Array._endMutation()(v35);
  swift_endAccess(&v48);
  v36 = (void *)MPCloudControllerIsUpdateInProgressDidChangeNotification;
  v37 = (void *)objc_opt_self(MPCloudController);
  v38 = v36;
  v39 = objc_msgSend(v37, "sharedCloudController");
  v40 = swift_allocObject(&unk_1010F3A50, 24, 7);
  swift_weakInit(v40 + 16, v1);
  v41 = type metadata accessor for NotificationObserver();
  swift_allocObject(v41, 64, 7);
  v42 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v38, (uint64_t)v39, 1, 1, (uint64_t)sub_100A78994, v40);
  v43 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 80) = v42;
  swift_release(v43);
  return v1;
}

uint64_t property wrapper backing initializer of CloudLibrary.StatusObserver.status(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for CloudLibrary.Status);
}

uint64_t sub_100A71C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 aBlock;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = *(_QWORD *)(result + 56);
    KeyPath = swift_getKeyPath(&unk_100EE0108);
    v5 = swift_getKeyPath(&unk_100EE0130);
    static Published.subscript.getter(&aBlock, v3, KeyPath, v5);
    swift_release(KeyPath);
    swift_release(v5);
    v6 = v14;
    v7 = v15;
    v8 = v16;
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v9);

    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_100A7206C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
  v21 = (_QWORD *)swift_allocObject(&unk_1010F4148, 40, 7);
  v21[2] = a2;
  v21[3] = a1;
  v21[4] = a3;
  aBlock[4] = sub_100A789D8;
  v33 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F4160;
  v22 = _Block_copy(aBlock);
  v23 = v33;
  swift_errorRetain(a2);
  v24 = a1;
  swift_retain(a3);
  v25 = swift_release(v23);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100007E8C(&qword_1011D5E08);
  v28 = sub_100049F28((unint64_t *)&qword_1011D7790, &qword_1011D5E08, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v6, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v30);
}

double sub_100A72298(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (!a1 && a2)
  {
    v4 = a2;
    v5 = (unint64_t)objc_msgSend(v4, "integerValue");
    if (v5 > 0xFFFFFFFFFFFFFFF9)
    {
      v6 = ~v5;
      KeyPath = swift_getKeyPath(&unk_100EDFC18);
      v8 = swift_getKeyPath(&unk_100EDFC40);
      static Published.subscript.getter(&v18, a3, KeyPath, v8);
      swift_release(KeyPath);
      swift_release(v8);
      v9 = v18;
      v10 = swift_getKeyPath(&unk_100EDFC18);
      v11 = swift_getKeyPath(&unk_100EDFC40);
      v18 = v6;
      swift_retain(a3);
      static Published.subscript.setter(&v18, a3, v10, v11);
      sub_100A73510(v9);

      return result;
    }

  }
  v13 = swift_getKeyPath(&unk_100EDFC18);
  v14 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(&v18, a3, v13, v14);
  swift_release(v13);
  swift_release(v14);
  v15 = v18;
  v16 = swift_getKeyPath(&unk_100EDFC18);
  v17 = swift_getKeyPath(&unk_100EDFC40);
  v18 = 2147483651;
  swift_retain(a3);
  static Published.subscript.setter(&v18, a3, v16, v17);
  return sub_100A73510(v15);
}

double sub_100A7242C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_100A73B74();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

BOOL CloudLibrary.StatusObserver.shouldDisplayStatusBanner.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _BOOL4 v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v2 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(&v5, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = (unint64_t)(v5 - 2147483651) < 0xFFFFFFFFFFFFFFFDLL;
  if (v5 >> 30 != 2)
    v3 = 1;
  if (v5 >> 30 == 1)
    return v5 & 1;
  else
    return v3;
}

double sub_100A72520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  double result;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  char v14;
  _BYTE v15[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v15, 0, 0);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v11 = *(_OWORD *)(v0 + 16);
  v12 = v2;
  v13 = v3;
  v4 = sub_100007E8C(&qword_1011D72A8);
  UserDefault.wrappedValue.getter(v4, (uint64_t)&v14);
  if ((v14 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100EDFC18);
    v7 = swift_getKeyPath(&unk_100EDFC40);
    static Published.subscript.getter(&v11, v0, KeyPath, v7);
    swift_release();
    swift_release();
    v8 = v11;
    v9 = swift_getKeyPath(&unk_100EDFC18);
    v10 = swift_getKeyPath(&unk_100EDFC40);
    *(_QWORD *)&v11 = 2147483650;
    swift_retain();
    static Published.subscript.setter(&v11, v1, v9, v10);
    return sub_100A73510(v8);
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.hasDisregardedBanner.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  v1 = sub_100007E8C(&qword_1011D72A8);
  UserDefault.wrappedValue.getter(v1, (uint64_t)&v3);
  return v3;
}

double CloudLibrary.StatusObserver.hasDisregardedBanner.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[31];
  char v5;

  v5 = a1;
  swift_beginAccess(v1 + 16, v4, 33, 0);
  v2 = sub_100007E8C(&qword_1011D72A8);
  UserDefault.wrappedValue.setter((uint64_t)&v5, v2);
  swift_endAccess(v4);
  return sub_100A72520();
}

void (*CloudLibrary.StatusObserver.hasDisregardedBanner.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess(v1 + 16, v3 + 4, 0, 0);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  *(_OWORD *)v3 = *(_OWORD *)(v1 + 16);
  v3[2] = v4;
  *((_BYTE *)v3 + 24) = v5;
  v6 = sub_100007E8C(&qword_1011D72A8);
  v3[8] = v6;
  UserDefault.wrappedValue.getter(v6, (uint64_t)v3 + 25);
  return sub_100A7279C;
}

void sub_100A7279C(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v3 = *(_QWORD *)(*a1 + 56);
  v2 = *(_QWORD *)(*a1 + 64);
  v4 = *a1;
  *(_BYTE *)(*a1 + 26) = *(_BYTE *)(*a1 + 25);
  swift_beginAccess(v3 + 16, v1, 33, 0);
  UserDefault.wrappedValue.setter(v4 + 26, v2);
  swift_endAccess(v1);
  sub_100A72520();
  free(v1);
}

void CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  void *v27;
  _QWORD v28[5];
  uint64_t v29;
  _BYTE v30[80];

  if (a1)
  {
    v5 = swift_allocObject(&unk_1010F3AA0, 32, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v6 = *(_QWORD **)(v2 + 48);
    swift_retain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    *(_QWORD *)(v2 + 48) = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1009B9F1C(0, v6[2] + 1, 1, v6);
      *(_QWORD *)(v2 + 48) = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1009B9F1C((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *(_QWORD *)(v2 + 48) = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = sub_100265C5C;
    v10[5] = v5;
  }
  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v12 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(v28, v2, KeyPath, v12);
  swift_release(v12);
  swift_release(KeyPath);
  v13 = v28[0];
  v14 = swift_getKeyPath(&unk_100EDFC18);
  v15 = swift_getKeyPath(&unk_100EDFC40);
  v28[0] = 2147483652;
  swift_retain(v2);
  static Published.subscript.setter(v28, v2, v14, v15);
  sub_100A73510(v13);
  v16 = sub_100007E8C(&qword_1011D72B0);
  inited = swift_initStackObject(v16, v30);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCloudControllerEnableCloudLibraryOptionStartInitialImport);
  *(_QWORD *)(inited + 40) = v18;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary);
  *(_QWORD *)(inited + 64) = v19;
  *(_BYTE *)(inited + 72) = 1;
  v20 = sub_100A13A54(inited);
  v21 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v21)
  {
    v22 = v21;
    sub_100A70A30(v20);
    v24 = v23;
    swift_bridgeObjectRelease(v20);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    v26 = swift_allocObject(&unk_1010F3A50, 24, 7);
    swift_weakInit(v26 + 16, v2);
    v28[4] = sub_100A77644;
    v29 = v26;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 1107296256;
    v28[2] = sub_1001E5304;
    v28[3] = &unk_1010F3A68;
    v27 = _Block_copy(v28);
    objc_msgSend(v22, "enableCloudLibraryWithOptions:completionHandler:", isa, v27, swift_release(v29).n128_f64[0]);
    _Block_release(v27);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A72AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock[5];
  uint64_t v51;
  _QWORD v52[3];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1011D1DC0 != -1)
      swift_once(&qword_1011D1DC0, sub_100A773A4);
    v12 = type metadata accessor for Logger(0);
    sub_100048B14(v12, (uint64_t)qword_1011D7280);
    swift_errorRetain(a1);
    v13 = swift_errorRetain(a1);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v47 = v5;
      v18 = v17;
      aBlock[0] = v17;
      *(_DWORD *)v16 = 136315138;
      v52[0] = a1;
      swift_errorRetain(a1);
      v19 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
      v20 = (char *)String.init<A>(describing:)(v52, v19);
      v22 = v21;
      *(_QWORD *)(v16 + 4) = sub_10099627C(v20, v21, aBlock);
      swift_bridgeObjectRelease(v22);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to enable Cloud Library with error=%s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      v23 = v18;
      v5 = v47;
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v16, -1, -1);

      swift_errorRelease(a1);
      goto LABEL_12;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_1011D1DC0 != -1)
      swift_once(&qword_1011D1DC0, sub_100A773A4);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100048B14(v24, (uint64_t)qword_1011D7280);
    v14 = Logger.logObject.getter(v25);
    v26 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v26, "Successfully enabled Cloud Library", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }
  }

LABEL_12:
  swift_beginAccess(v11, v52, 0, 0);
  result = swift_weakLoadStrong(v11);
  if (result)
  {
    v29 = result;
    v30 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
    v38 = (void *)static OS_dispatch_queue.main.getter(v30, v31, v32, v33, v34, v35, v36, v37);
    v39 = swift_allocObject(&unk_1010F40D0, 32, 7);
    *(_QWORD *)(v39 + 16) = v29;
    *(_QWORD *)(v39 + 24) = a1;
    aBlock[4] = (uint64_t)sub_100A78984;
    v51 = v39;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001DBD98;
    aBlock[3] = (uint64_t)&unk_1010F40E8;
    v40 = _Block_copy(aBlock);
    v41 = v51;
    swift_errorRetain(a1);
    swift_retain(v29);
    v42 = swift_release(v41);
    static DispatchQoS.unspecified.getter(v42);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v43 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v44 = sub_100007E8C(&qword_1011D5E08);
    v45 = sub_100049F28((unint64_t *)&qword_1011D7790, &qword_1011D5E08, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v44, v45, v4, v43);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v40);
    _Block_release(v40);

    v46 = swift_release(v29);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v46);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v10, v49);
  }
  return result;
}

uint64_t sub_100A72F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(BOOL *);
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = a2 == 0;
    swift_bridgeObjectRetain();
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v7 = (void (*)(BOOL *))*(v5 - 1);
      v6 = *v5;
      v9 = v4;
      swift_retain(v6);
      v7(&v9);
      swift_release(v6);
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
  }
  return swift_bridgeObjectRelease(v2);
}

void CloudLibrary.StatusObserver.add(updateObserver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  _BYTE v22[8];
  uint64_t v23;
  _BYTE v24[24];

  v3 = v2;
  v6 = (_QWORD *)(v3 + 64);
  swift_beginAccess(v3 + 64, v24, 1, 0);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v7 + 32;
    swift_bridgeObjectRetain();
    do
    {
      Strong = swift_unknownObjectWeakLoadStrong(v9);
      if (Strong)
      {
        v11 = Strong;
        swift_unknownObjectRelease(Strong);
        if (v11 == a1)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  v23 = a2;
  swift_unknownObjectWeakInit(v22);
  ObjectType = swift_getObjectType();
  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v14 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(v21, v3, KeyPath, v14);
  swift_release();
  v15 = swift_release();
  (*(void (**)(_QWORD, uint64_t, uint64_t, __n128))(a2 + 8))(v21[0], ObjectType, a2, v15);
  sub_100A77664((uint64_t)v22, (uint64_t)v21);
  v16 = *(_QWORD **)(v3 + 64);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
  *(_QWORD *)(v3 + 64) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_1009BA044(0, v16[2] + 1, 1, v16);
    *v6 = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_1009BA044((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *v6 = v16;
  }
  v16[2] = v19 + 1;
  sub_100A7769C((uint64_t)v21, (uint64_t)&v16[2 * v19 + 4]);
  sub_10013C71C((uint64_t)v22, v20);
}

double CloudLibrary.StatusObserver.remove(updateObserver:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t i;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[16];
  _BYTE v14[24];

  v3 = v1 + 64;
  *(_QWORD *)&result = swift_beginAccess(v1 + 64, v14, 0, 0).n128_u64[0];
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v7);
      if (Strong)
      {
        v10 = Strong;
        swift_unknownObjectRelease(Strong);
        if (v10 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess(v3, v12, 33, 0);
          sub_100A732AC(i, (uint64_t)v13);
          sub_10013C71C((uint64_t)v13, v11);
          swift_endAccess(v12);
          return result;
        }
      }
      v7 += 16;
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_100A732AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v5 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_100B2D654(v5);
    v5 = (_QWORD *)result;
  }
  v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    v8 = v7 - 1;
    v9 = &v5[2 * a1];
    sub_100A7769C((uint64_t)(v9 + 4), a2);
    result = swift_arrayInitWithTakeFrontToBack(v9 + 4);
    v5[2] = v8;
    *v2 = v5;
  }
  return result;
}

char *sub_100A7334C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *v1;
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((result & 1) == 0)
  {
    result = sub_100B2D668(v3);
    v3 = (uint64_t)result;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    v7 = *(unsigned __int8 *)(v3 + a1 + 32);
    memmove((void *)(v3 + a1 + 32), (const void *)(v3 + a1 + 33), v5 - 1 - a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
    return (char *)v7;
  }
  return result;
}

uint64_t sub_100A733CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v5 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

double sub_100A73448(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v5 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = v10;
  v7 = swift_getKeyPath(&unk_100EDFC18);
  v8 = swift_getKeyPath(&unk_100EDFC40);
  v10 = v2;
  swift_retain();
  static Published.subscript.setter(&v10, v3, v7, v8);
  return sub_100A73510(v6);
}

double sub_100A73510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v5 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(&v21, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if ((_s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(v21, a1) & 1) == 0)
  {
    if (qword_1011D1DC0 != -1)
      swift_once(&qword_1011D1DC0, sub_100A773A4);
    v7 = type metadata accessor for Logger(0);
    sub_100048B14(v7, (uint64_t)qword_1011D7280);
    v8 = swift_retain_n(v2, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v12 = swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v21 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = swift_getKeyPath(&unk_100EDFC18);
      v15 = swift_getKeyPath(&unk_100EDFC40);
      static Published.subscript.getter(&v20, v2, v14, v15);
      swift_release(v15);
      swift_release(v14);
      v16 = (char *)String.init<A>(describing:)(&v20, &type metadata for CloudLibrary.Status);
      v18 = v17;
      *(_QWORD *)(v12 + 4) = sub_10099627C(v16, v17, &v21);
      v19 = swift_bridgeObjectRelease(v18);
      swift_release_n(v2, 2, v19);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Status did change: %s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2, v11);
    }

    return sub_100A744E4();
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.status.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v2 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_100A737A8(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status, v3, 33, 0);
  v1 = sub_100007E8C((uint64_t *)&unk_1011D72B8);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100A7380C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = sub_100007E8C(&qword_1011D7798);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status, v17, 33, 0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011D72B8);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t CloudLibrary.StatusObserver.$status.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status, v3, 33, 0);
  v1 = sub_100007E8C((uint64_t *)&unk_1011D72B8);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

double sub_100A7397C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
  if (a1 == 2)
  {
    if (v2 != 2 && (v2 & 1) != 0)
    {
      v3 = HIDWORD(v2);
      goto LABEL_9;
    }
  }
  else
  {
    if (v2 == 2)
    {
      KeyPath = swift_getKeyPath(&unk_100EDFC18);
      v5 = swift_getKeyPath(&unk_100EDFC40);
      static Published.subscript.getter(&v13, v1, KeyPath, v5);
      swift_release(v5);
      swift_release(KeyPath);
      v6 = v13;
      v7 = swift_getKeyPath(&unk_100EDFC18);
      v8 = swift_getKeyPath(&unk_100EDFC40);
      v13 = 0x80000000;
LABEL_10:
      swift_retain(v1);
      static Published.subscript.setter(&v13, v1, v7, v8);
      return sub_100A73510(v6);
    }
    v3 = HIDWORD(v2);
    LODWORD(result) = HIDWORD(*(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext));
    if (((((a1 & 1) == 0) ^ v2) & (*((float *)&a1 + 1) == *((float *)&v2 + 1))) == 0 && (v2 & 1) != 0)
    {
LABEL_9:
      v10 = (v3 << 32) | 0x40000001;
      v11 = swift_getKeyPath(&unk_100EDFC18);
      v12 = swift_getKeyPath(&unk_100EDFC40);
      static Published.subscript.getter(&v13, v1, v11, v12);
      swift_release(v12);
      swift_release(v11);
      v6 = v13;
      v7 = swift_getKeyPath(&unk_100EDFC18);
      v8 = swift_getKeyPath(&unk_100EDFC40);
      v13 = v10;
      goto LABEL_10;
    }
  }
  return result;
}

double (*sub_100A73B24(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2);
  return sub_100A73B48;
}

double sub_100A73B48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v1 = a1[2];
  v3 = *a1;
  v4 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = v3;
  return sub_100A7397C(v4);
}

void sub_100A73B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v39;
  void (*v40)(_QWORD *, uint64_t);
  void *v41;
  __n128 v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD aBlock[5];
  uint64_t v65;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  __chkstk_darwin(v2);
  v61 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  __chkstk_darwin(v4);
  v58 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTimeInterval(0);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  __chkstk_darwin(v6);
  v55 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v54 = (uint64_t *)((char *)&v49 - v9);
  v10 = type metadata accessor for DispatchTime(0);
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v50 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS.QoSClass(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void *)objc_opt_self(MPCloudController);
  v20 = objc_msgSend(v19, "sharedCloudController");
  if (!v20)
  {
    __break(1u);
    goto LABEL_13;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "isUpdateInProgress");

  v23 = objc_msgSend(v19, "sharedCloudController");
  if (!v23)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "isInitialImport");

  v26 = *(_QWORD *)(v1 + 88);
  if ((v22 & v25) == 1)
  {
    if (!v26)
    {
      v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
      *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 1;
      sub_100A7397C(v27);
      sub_10004A07C(0, &qword_1011D96B0, OS_dispatch_source_ptr);
      sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchQoS.QoSClass.userInteractive(_:), v15);
      v28 = (void *)static OS_dispatch_queue.global(qos:)(v18);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      aBlock[0] = _swiftEmptyArrayStorage;
      v29 = sub_100048748(&qword_1011D7768, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
      v30 = sub_100007E8C(&qword_1011D7770);
      v31 = sub_100049F28(&qword_1011D7778, &qword_1011D7770, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v12, v29);
      v32 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v14, v28);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v12);
      ObjectType = swift_getObjectType();
      v34 = v51;
      static DispatchTime.now()(ObjectType);
      v35 = v54;
      *v54 = 1;
      v37 = v56;
      v36 = v57;
      v38 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v56 + 104);
      v38(v35, enum case for DispatchTimeInterval.seconds(_:), v57);
      v39 = v55;
      *v55 = 1;
      v38(v39, enum case for DispatchTimeInterval.nanoseconds(_:), v36);
      OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v34, v35, v39, ObjectType);
      v40 = *(void (**)(_QWORD *, uint64_t))(v37 + 8);
      v40(v39, v36);
      v40(v35, v36);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
      aBlock[4] = sub_100A788C4;
      v65 = v1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      aBlock[3] = &unk_1010F3F58;
      v41 = _Block_copy(aBlock);
      v42 = swift_retain(v1);
      v43 = v58;
      j___s8Dispatch0A3QoSV11unspecifiedACvgZ(v42);
      v44 = v61;
      sub_100AE7844();
      OS_dispatch_source.setEventHandler(qos:flags:handler:)(v43, v44, v41, ObjectType);
      _Block_release(v41);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v63);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v60);
      swift_release(v65);
      v45 = *(_QWORD *)(v1 + 88);
      *(_QWORD *)(v1 + 88) = v32;
      swift_unknownObjectRetain_n(v32, 2);
      if (v45)
      {
        swift_getObjectType();
        swift_unknownObjectRetain(v45, v46);
        OS_dispatch_source.cancel()();
        swift_unknownObjectRelease_n(v45, 2);
      }
      swift_unknownObjectRelease(v32);
      OS_dispatch_source.resume()();
      swift_unknownObjectRelease(v32);
    }
  }
  else
  {
    *(_QWORD *)(v1 + 88) = 0;
    if (v26)
    {
      swift_getObjectType();
      swift_unknownObjectRetain(v26, v47);
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease_n(v26, 2);
    }
    v48 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
    *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 2;
    sub_100A7397C(v48);
  }
}

void sub_100A74114(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (v2)
  {
    v3 = v2;
    v6[4] = sub_100A788CC;
    v7 = a1;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_100A744A8;
    v6[3] = &unk_1010F3F80;
    v4 = _Block_copy(v6);
    v5 = v7;
    swift_retain(a1);
    objc_msgSend(v3, "loadCloudMusicLibraryUpdateProgressWithCompletionHandler:", v4, swift_release(v5).n128_f64[0]);
    _Block_release(v4);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A741E4(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  v20 = swift_allocObject(&unk_1010F3A50, 24, 7);
  swift_weakInit(v20 + 16, a1);
  v21 = swift_allocObject(&unk_1010F3FB8, 28, 7);
  *(_QWORD *)(v21 + 16) = v20;
  *(float *)(v21 + 24) = a2;
  aBlock[4] = sub_100A788F8;
  v31 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F3FD0;
  v22 = _Block_copy(aBlock);
  v23 = swift_release(v31);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_100007E8C(&qword_1011D5E08);
  v26 = sub_100049F28((unint64_t *)&qword_1011D7790, &qword_1011D5E08, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v4, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100A74424(uint64_t a1, float a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  double (*v7)(uint64_t *);
  _QWORD v8[4];
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v7 = sub_100A73B24(v8);
    if (*(_BYTE *)v6 != 2)
      *(float *)(v6 + 4) = a2;
    ((void (*)(_QWORD *, _QWORD))v7)(v8, 0);
    swift_release(v5);
  }
}

uint64_t sub_100A744A8(uint64_t a1, float a2)
{
  void (*v3)(uint64_t, float);
  uint64_t v4;
  uint64_t v5;

  v3 = *(void (**)(uint64_t, float))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = swift_retain(v4);
  v3(v5, a2);
  return swift_release(v4);
}

double sub_100A744E4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BYTE v13[8];
  uint64_t v14;
  _QWORD v15[3];

  KeyPath = swift_getKeyPath(&unk_100EDFC18);
  v2 = swift_getKeyPath(&unk_100EDFC40);
  static Published.subscript.getter(v15, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = v15[0];
  *(_QWORD *)&result = swift_beginAccess(v0 + 64, v15, 0, 0).n128_u64[0];
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = v5 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_100A77664(v7, (uint64_t)v13);
      Strong = swift_unknownObjectWeakLoadStrong(v13);
      if (Strong)
      {
        v10 = Strong;
        v11 = v14;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v3, ObjectType, v11);
        swift_unknownObjectRelease(v10);
      }
      sub_10013C71C((uint64_t)v13, v9);
      v7 += 16;
      --v6;
    }
    while (v6);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.deinit()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  v2 = v0 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status;
  v3 = sub_100007E8C((uint64_t *)&unk_1011D72B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t CloudLibrary.StatusObserver.__deallocating_deinit()
{
  uint64_t v0;

  CloudLibrary.StatusObserver.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A74698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for CloudLibrary.StatusObserver(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t CloudLibrary.Status.message.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1 >> 30)
  {
    if (a1 >> 30 == 1)
      goto LABEL_3;
    if ((unint64_t)(a1 - 0x80000000) < 3)
      return 0;
    if (a1 != 2147483651)
    {
LABEL_3:
      v12 = 0x8000000100E4F3E0;
      v13 = 0x1000000000000017;
    }
    else
    {
      v13 = 0xD00000000000002ALL;
      v12 = 0x8000000100E4F400;
    }
  }
  else
  {
    v12 = 0x8000000100E4F3C0;
    v13 = 0xD00000000000001CLL;
  }
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v14 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t CloudLibrary.Status.actionTitle.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1 >> 30)
  {
    v12 = 0;
    if (a1 >> 30 == 1)
      return v12;
    if (a1 != 2147483651)
      return 0;
    v13 = 0x6E4F206E727554;
    v14 = 0xE700000000000000;
  }
  else
  {
    v13 = 0x7972746552;
    v14 = 0xE500000000000000;
  }
  String.LocalizationValue.init(stringLiteral:)(v13, v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v15 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v12 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v12;
}

BOOL static CloudLibrary.PresentationStyle.__derived_enum_equals(_:_:)(void *a1, void *a2)
{
  char v5;

  if (!a1)
    return !a2;
  if (a1 == (void *)1)
    return a2 == (void *)1;
  if ((unint64_t)a2 < 2)
    return 0;
  sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
  sub_100A776D4(a1);
  sub_100A776D4(a2);
  v5 = static NSObject.== infix(_:_:)(a1, a2);
  sub_1008D3F40(a2);
  sub_1008D3F40(a1);
  return v5 & 1;
}

BOOL sub_100A74B28(void **a1, void **a2)
{
  void *v2;
  void *v3;
  char v5;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
    return !v3;
  if (v2 == (void *)1)
    return v3 == (void *)1;
  if ((unint64_t)v3 < 2)
    return 0;
  sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
  sub_100A776D4(v2);
  sub_100A776D4(v3);
  v5 = static NSObject.== infix(_:_:)(v2, v3);
  sub_1008D3F40(v3);
  sub_1008D3F40(v2);
  return v5 & 1;
}

void sub_100A74BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1011D1DB8 != -1)
    swift_once(&qword_1011D1DB8, sub_100A71730);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(a2, a3);
}

double sub_100A74C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A74E6C(a1, a2, a3, a4, (uint64_t)&unk_1010F4198, (uint64_t)sub_100A78908, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0);
}

double sub_100A74C58(uint64_t a1)
{
  uint64_t v1;

  return sub_100A74E6C(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1010F4198, (uint64_t)sub_100A78908, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0);
}

uint64_t static CloudLibrary.presentCloudLibraryEnablerIfNeeded(context:presentationSource:style:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  *(_BYTE *)(v3 + 89) = a1;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  return swift_task_switch(sub_100A74D04, v6, v7);
}

uint64_t sub_100A74D04(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 89);
  v5 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 64) = v5;
  v6 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 72) = v6;
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v2;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 80) = v7;
  *v7 = v1;
  v7[1] = sub_100A74DD0;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 88, v5, &protocol witness table for MainActor, 0xD000000000000045, 0x8000000100E4F430, sub_100A77D98, v6, &type metadata for Bool);
}

uint64_t sub_100A74DD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100A74E38, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_100A74E38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 88));
}

double sub_100A74E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v22 = a7;
  v13 = sub_100007E8C(&qword_1011D77A0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v16);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(a5, v18 + v15, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v22(a2, a3, a4, a6, v19);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

char *sub_100A74F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)();
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  double v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];

  *(_QWORD *)&v6[qword_1011D74E8] = 0;
  v13 = type metadata accessor for EnableCloudLibraryView.Model(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v15 = v6;
  sub_100048AAC(a5, a6);
  sub_100A75750(a1, a2, a3, a4, a5, a6, 1, 0, 0);
  *(_QWORD *)&v15[qword_1011D74E0] = v14;
  swift_retain_n(v14, 2);

  v16 = sub_100048748(&qword_1011D77A8, type metadata accessor for EnableCloudLibraryView.Model, (uint64_t)&unk_100EE0054);
  v37[0] = ObservedObject.init(wrappedValue:)(v14, v13, v16);
  v37[1] = v17;
  v18 = (char *)UIHostingController.init(rootView:)(v37);
  v19 = *(_QWORD *)&v18[qword_1011D74E0];
  v20 = swift_allocObject(&unk_1010F3F40, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v18);
  v21 = (void (**)())(v19 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v23 = (uint64_t)v21[1];
  *v21 = sub_100A78950;
  v21[1] = (void (*)())v20;
  v24 = v18;
  sub_10004BA30(v22, v23);
  sub_100A754B8();
  v25 = objc_msgSend(v24, "presentingViewController");
  if (v25)
  {
    v27 = v25;
    v28 = sub_100007E8C((uint64_t *)&unk_1011D77B0);
    v29 = swift_allocObject(v28, 48, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v29 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v29 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v30 = UIViewController.registerForTraitChanges(_:action:)(v29, "determineHorizontalSizeClass");
    swift_unknownObjectRelease(v30);

    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  v31 = objc_msgSend(v24, "presentationController", v26);
  if (v31)
  {
    v32 = v31;
    v33 = sub_100007E8C((uint64_t *)&unk_1011D77B0);
    v34 = swift_allocObject(v33, 48, 7);
    *(_OWORD *)(v34 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v34 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
    *(_QWORD *)(v34 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    v35 = UIPresentationController.registerForTraitChanges(_:action:)(v34, "determineHorizontalSizeClass");
    sub_10004BA30(a5, a6);
    swift_unknownObjectRelease(v35);

    swift_bridgeObjectRelease(v34);
  }
  else
  {
    sub_10004BA30(a5, a6);
  }
  swift_release(v14);

  return v24;
}

void sub_100A7520C(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_100A7526C(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1011D74E8] = 0;
  v4 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCore/CloudLibrary.swift", 28, 2, 499, 0);
  __break(1u);
}

void sub_100A752E0(void *a1)
{
  id v1;
  id v2;
  objc_class *v3;
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CloudLibraryViewController(0);
  v1 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewDidLoad");
  v2 = objc_msgSend(v1, "navigationItem", v5.receiver, v5.super_class);
  v3 = sub_100A753A4();
  objc_msgSend(v2, "setRightBarButtonItem:", v3);

  v4 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v4, "setLargeTitleDisplayMode:", 2);

}

objc_class *sub_100A753A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  UIBarButtonItem v6;
  void *v7;
  id v8;
  UIAction_optional v10;
  UIMenu_optional v11;

  v1 = qword_1011D74E8;
  v2 = *(void **)(v0 + qword_1011D74E8);
  if (v2)
  {
    v3 = *(objc_class **)(v0 + qword_1011D74E8);
  }
  else
  {
    v4 = v0;
    sub_10004A07C(0, &qword_1011D7758, UIBarButtonItem_ptr);
    sub_10004A07C(0, &qword_1011D7760, UIAction_ptr);
    v5 = swift_allocObject(&unk_1010F3F40, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v10.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10013C2D0, v5);
    v10.is_nil = 0;
    v6.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemClose, v10, v11).super.super.isa;
    v7 = *(void **)(v0 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v6;
    v3 = v6.super.super.isa;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_100A754B8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t KeyPath;
  uint64_t v9;
  id v10;

  v1 = objc_msgSend(v0, "presentingViewController");
  if (v1
    && (v2 = v1, v3 = objc_msgSend(v1, "traitCollection"), v2, v3)
    || (v4 = objc_msgSend(v0, "presentationController")) != 0
    && (v5 = v4, v3 = objc_msgSend(v4, "traitCollection"), v5, v3))
  {
    v6 = *(_QWORD *)&v0[qword_1011D74E0];
    swift_retain(v6);
    v7 = objc_msgSend(v3, "horizontalSizeClass");
    KeyPath = swift_getKeyPath(&unk_100EE0090);
    v9 = swift_getKeyPath(&unk_100EE00B8);
    v10 = v7;
    static Published.subscript.setter(&v10, v6, KeyPath, v9);

  }
}

void sub_100A755BC(void *a1)
{
  id v1;

  v1 = a1;
  sub_100A754B8();

}

void sub_100A755F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_1011D74E0));

}

id sub_100A7561C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudLibraryViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100A75650(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_1011D74E0));

}

uint64_t sub_100A75688()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EE0090);
  v2 = swift_getKeyPath(&unk_100EE00B8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100A756F8()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.CloudLibraryViewController", 36, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_100A75724()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.CloudLibraryViewController", 36, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

_QWORD *sub_100A75750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[24];

  v14 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  *v14 = 0;
  v14[1] = 0;
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v9[6] = a5;
  v9[7] = a6;
  swift_beginAccess((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model__horizontalSizeClass, v21, 33, 0);
  v20 = a7;
  sub_100048AAC(a5, a6);
  _s3__C24UIUserInterfaceSizeClassOMa_0(0);
  Published.init(initialValue:)(&v20, v15);
  swift_endAccess(v21);
  sub_10004BA30(a5, a6);
  v16 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v17 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  v18 = *(_QWORD *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss + 8);
  *v16 = a8;
  v16[1] = a9;
  sub_10004BA30(v17, v18);
  return v9;
}

uint64_t sub_100A7582C()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004BA30(v0[6], v0[7]);
  v1 = (char *)v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model__horizontalSizeClass;
  v2 = sub_100007E8C(&qword_1011D7750);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10004BA30(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100A758AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for EnableCloudLibraryView.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100A758E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  uint64_t v46;

  v45 = a3;
  v5 = sub_100007E8C(&qword_1011D7678);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D7680);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D7688);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = static Axis.Set.vertical.getter(v14);
  v15 = sub_100007E8C(&qword_1011D7690);
  v16 = sub_100A75BB0(a1, a2, (uint64_t)&v7[*(int *)(v15 + 44)]);
  v17 = static Edge.Set.horizontal.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100EE0090);
  v19 = swift_getKeyPath(&unk_100EE00B8);
  swift_retain();
  static Published.subscript.getter(&v46, v20, KeyPath, v19);
  swift_release();
  swift_release();
  swift_release();
  v21 = 32.0;
  if (v46 != 2)
    v21 = 24.0;
  v22 = EdgeInsets.init(_all:)(v21);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011D7678);
  v29 = &v10[*(int *)(v8 + 36)];
  *v29 = v17;
  *((double *)v29 + 1) = v22;
  *((_QWORD *)v29 + 2) = v24;
  *((_QWORD *)v29 + 3) = v26;
  *((_QWORD *)v29 + 4) = v28;
  v29[40] = 0;
  v30 = sub_10004FF60((uint64_t)v7, &qword_1011D7678);
  v31 = static Edge.Set.bottom.getter(v30);
  v32 = swift_getKeyPath(&unk_100EE0090);
  v33 = swift_getKeyPath(&unk_100EE00B8);
  swift_retain();
  static Published.subscript.getter(&v46, v34, v32, v33);
  swift_release();
  swift_release();
  swift_release();
  v35 = 36.0;
  if (v46 != 2)
    v35 = 8.0;
  v36 = EdgeInsets.init(_all:)(v35);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011D7680);
  v43 = &v13[*(int *)(v11 + 36)];
  *v43 = v31;
  *((double *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  sub_10004FF60((uint64_t)v10, &qword_1011D7680);
  return sub_100065228((uint64_t)v13, v45, &qword_1011D7688);
}

uint64_t sub_100A75BB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v6 = sub_100007E8C(&qword_1011D7698);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  v12 = sub_100007E8C(&qword_1011D76A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - v16;
  v18 = sub_100007E8C(&qword_1011D76A8);
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v32 - v22;
  *(_QWORD *)v23 = static HorizontalAlignment.center.getter(v24);
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 1;
  v25 = sub_100007E8C(&qword_1011D76B0);
  sub_100A75E5C(a1, a2, (uint64_t)&v23[*(int *)(v25 + 44)]);
  *(_QWORD *)v17 = static HorizontalAlignment.center.getter(v26);
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v27 = sub_100007E8C(&qword_1011D76B8);
  sub_100A76314(a1, a2, (uint64_t)&v17[*(int *)(v27 + 44)]);
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v28);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v29 = sub_100007E8C(&qword_1011D76C0);
  sub_100A768DC(a1, (uint64_t)a2, &v11[*(int *)(v29 + 44)]);
  sub_10004A160((uint64_t)v23, (uint64_t)v20, &qword_1011D76A8);
  sub_10004A160((uint64_t)v17, (uint64_t)v14, &qword_1011D76A0);
  sub_10004A160((uint64_t)v11, (uint64_t)v8, &qword_1011D7698);
  sub_10004A160((uint64_t)v20, a3, &qword_1011D76A8);
  v30 = sub_100007E8C(&qword_1011D76C8);
  sub_10004A160((uint64_t)v14, a3 + *(int *)(v30 + 48), &qword_1011D76A0);
  sub_10004A160((uint64_t)v8, a3 + *(int *)(v30 + 64), &qword_1011D7698);
  sub_10004FF60((uint64_t)v11, &qword_1011D7698);
  sub_10004FF60((uint64_t)v17, &qword_1011D76A0);
  sub_10004FF60((uint64_t)v23, &qword_1011D76A8);
  sub_10004FF60((uint64_t)v8, &qword_1011D7698);
  sub_10004FF60((uint64_t)v14, &qword_1011D76A0);
  return sub_10004FF60((uint64_t)v20, &qword_1011D76A8);
}

double sub_100A75E5C@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, __n128);
  __n128 v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;

  v52 = type metadata accessor for BorderedProminentButtonStyle(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D76D0);
  v51 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011D76D8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v55 = (char *)&v40 - v16;
  v50 = static HorizontalAlignment.center.getter(v17);
  sub_100A76E64(a2, (uint64_t)v62);
  v57 = v62[0];
  v43 = v62[1];
  v56 = v63;
  v58 = v64;
  v60 = v65;
  v49 = v66;
  v46 = v67;
  v45 = v68;
  v44 = v69;
  v59 = v70;
  v47 = v71;
  v48 = v72;
  v61 = Image.init(_:bundle:)(0xD000000000000011, 0x8000000100E4F660, 0);
  v18 = swift_allocObject(&unk_1010F3F18, 32, 7);
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  swift_retain();
  v19 = sub_100007E8C(&qword_1011D7700);
  v20 = sub_10005610C(&qword_1011D7708, &qword_1011D7700, (void (*)(void))sub_100A787F0);
  v21 = Button.init(action:label:)(sub_100A78B04, v18, sub_100A771EC, 0, v19, v20);
  BorderedProminentButtonStyle.init()(v21);
  v22 = sub_100049F28(&qword_1011D7720, &qword_1011D76D0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v23 = sub_100048748(&qword_1011D7728, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v54 = v14;
  v24 = v52;
  View.buttonStyle<A>(_:)(v7, v8, v52, v22, v23);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v24);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
  v42 = v12;
  v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v26 = v55;
  v41 = v11;
  v25(v55, v14, v11);
  v53 = *(_QWORD *)(v12 + 16);
  ((void (*)(char *, char *, uint64_t))v53)(v14, v26, v11);
  *(_QWORD *)a3 = v50;
  *(_QWORD *)(a3 + 8) = 0x4020000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  v27 = v57;
  v28 = v58;
  v29 = v43;
  *(_QWORD *)(a3 + 24) = v57;
  *(_QWORD *)(a3 + 32) = v29;
  LOBYTE(v26) = v56;
  *(_BYTE *)(a3 + 40) = v56;
  v31 = v59;
  v30 = v60;
  *(_QWORD *)(a3 + 48) = v28;
  *(_QWORD *)(a3 + 56) = v30;
  *(_BYTE *)(a3 + 64) = v49;
  v32 = v46;
  v33 = v45;
  *(_QWORD *)(a3 + 72) = v46;
  *(_QWORD *)(a3 + 80) = v33;
  LOBYTE(v19) = v44;
  *(_BYTE *)(a3 + 88) = v44;
  v34 = v47;
  *(_QWORD *)(a3 + 96) = v31;
  *(_QWORD *)(a3 + 104) = v34;
  *(_BYTE *)(a3 + 112) = v48;
  *(_QWORD *)(a3 + 120) = 0;
  *(_BYTE *)(a3 + 128) = 1;
  *(_QWORD *)(a3 + 136) = v61;
  *(_QWORD *)(a3 + 144) = 0;
  *(_BYTE *)(a3 + 152) = 1;
  v35 = a3 + *(int *)(sub_100007E8C(&qword_1011D7748) + 96);
  v36 = v41;
  ((void (*)(uint64_t, char *, uint64_t))v53)(v35, v54, v41);
  sub_100055BBC(v27, v29, (char)v26);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v32, v33, v19);
  v37 = *(void (**)(char *, uint64_t, __n128))(v42 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v38 = swift_retain();
  v37(v55, v36, v38);
  ((void (*)(char *, uint64_t))v37)(v54, v36);
  swift_release();
  sub_100055BAC(v57, v29, v56);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v32, v33, v19);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_100A76314(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  _QWORD v76[2];
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;

  v56 = type metadata accessor for BorderedProminentButtonStyle(0);
  v57 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D76D0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100007E8C(&qword_1011D76D8);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100007E8C(&qword_1011D76E0);
  __chkstk_darwin(v68);
  v73 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - v15;
  __chkstk_darwin(v17);
  v71 = (uint64_t)&v54 - v18;
  v67 = static HorizontalAlignment.center.getter(v19);
  sub_100A76E64(a2, (uint64_t)v76);
  v59 = v76[0];
  v58 = v76[1];
  v74 = v77;
  v60 = v78;
  v75 = v79;
  v66 = v80;
  v63 = v81;
  v62 = v82;
  v61 = v83;
  v72 = v84;
  v64 = v85;
  v65 = v86;
  v20 = swift_allocObject(&unk_1010F3EF0, 32, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  swift_retain();
  v21 = sub_100007E8C(&qword_1011D7700);
  v22 = sub_10005610C(&qword_1011D7708, &qword_1011D7700, (void (*)(void))sub_100A787F0);
  v23 = Button.init(action:label:)(sub_100A78B04, v20, sub_100A771EC, 0, v21, v22);
  BorderedProminentButtonStyle.init()(v23);
  v24 = sub_100049F28(&qword_1011D7720, &qword_1011D76D0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v25 = sub_100048748(&qword_1011D7728, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v26 = v56;
  View.buttonStyle<A>(_:)(v7, v8, v56, v24, v25);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v7, v26);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v10, v8);
  v28 = static Edge.Set.top.getter(v27);
  KeyPath = swift_getKeyPath(&unk_100EE0090);
  v30 = swift_getKeyPath(&unk_100EE00B8);
  swift_retain();
  static Published.subscript.getter(v76, v31, KeyPath, v30);
  swift_release();
  swift_release();
  swift_release();
  v32 = 16.0;
  if (v76[0] == 2)
    v32 = 24.0;
  v33 = EdgeInsets.init(_all:)(v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v69;
  v41 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v16, v12, v70);
  v42 = &v16[*(int *)(v68 + 36)];
  *v42 = v28;
  *((double *)v42 + 1) = v33;
  *((_QWORD *)v42 + 2) = v35;
  *((_QWORD *)v42 + 3) = v37;
  *((_QWORD *)v42 + 4) = v39;
  v42[40] = 0;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
  v43 = v71;
  sub_100065228((uint64_t)v16, v71, &qword_1011D76E0);
  v44 = v43;
  v45 = v73;
  sub_10004A160(v44, v73, &qword_1011D76E0);
  *(_QWORD *)a3 = v67;
  *(_QWORD *)(a3 + 8) = 0x4020000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  v46 = v59;
  v47 = v58;
  *(_QWORD *)(a3 + 24) = v59;
  *(_QWORD *)(a3 + 32) = v47;
  *(_BYTE *)(a3 + 40) = v74;
  v48 = v75;
  *(_QWORD *)(a3 + 48) = v60;
  *(_QWORD *)(a3 + 56) = v48;
  *(_BYTE *)(a3 + 64) = v66;
  v49 = v63;
  v50 = v62;
  *(_QWORD *)(a3 + 72) = v63;
  *(_QWORD *)(a3 + 80) = v50;
  v51 = v61;
  *(_BYTE *)(a3 + 88) = v61;
  v52 = v64;
  *(_QWORD *)(a3 + 96) = v72;
  *(_QWORD *)(a3 + 104) = v52;
  *(_BYTE *)(a3 + 112) = v65;
  *(_QWORD *)(a3 + 120) = 0;
  *(_BYTE *)(a3 + 128) = 1;
  v53 = sub_100007E8C(&qword_1011D7740);
  sub_10004A160(v45, a3 + *(int *)(v53 + 64), &qword_1011D76E0);
  LOBYTE(v45) = v74;
  sub_100055BBC(v46, v47, v74);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v49, v50, v51);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004FF60(v71, &qword_1011D76E0);
  sub_10004FF60(v73, &qword_1011D76E0);
  sub_100055BAC(v46, v47, v45);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v49, v50, v51);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_100A768DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79[16];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v78 = a3;
  v5 = type metadata accessor for BorderedProminentButtonStyle(0);
  v6 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  v70 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D76D0);
  v10 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  v68 = v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D76D8);
  v75 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  __chkstk_darwin(v13);
  v66 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100007E8C(&qword_1011D76E0);
  __chkstk_darwin(v74);
  v77 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v65 - v17;
  __chkstk_darwin(v19);
  v73 = (uint64_t)&v65 - v20;
  v21 = sub_100007E8C(&qword_1011D76E8);
  v72 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v71 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v65 - v24;
  v27 = static Axis.Set.vertical.getter(v26);
  v80 = a1;
  v81 = a2;
  v28 = sub_100007E8C(&qword_1011D76F0);
  v29 = sub_100049F28(&qword_1011D76F8, &qword_1011D76F0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  ScrollView.init(_:showsIndicators:content:)(v27, 1, sub_100A787BC, v79, v28, v29);
  v30 = swift_allocObject(&unk_1010F3EC8, 32, 7);
  *(_QWORD *)(v30 + 16) = a1;
  *(_QWORD *)(v30 + 24) = a2;
  swift_retain();
  v31 = sub_100007E8C(&qword_1011D7700);
  v32 = sub_10005610C(&qword_1011D7708, &qword_1011D7700, (void (*)(void))sub_100A787F0);
  v33 = Button.init(action:label:)(sub_100A787E8, v30, sub_100A771EC, 0, v31, v32);
  BorderedProminentButtonStyle.init()(v33);
  v34 = sub_100049F28(&qword_1011D7720, &qword_1011D76D0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v35 = sub_100048748(&qword_1011D7728, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v36 = v66;
  v37 = v67;
  v38 = v69;
  View.buttonStyle<A>(_:)(v8, v67, v69, v34, v35);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v8, v38);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v12, v37);
  v40 = static Edge.Set.top.getter(v39);
  KeyPath = swift_getKeyPath(&unk_100EE0090);
  v42 = swift_getKeyPath(&unk_100EE00B8);
  swift_retain();
  static Published.subscript.getter(&v82, v43, KeyPath, v42);
  swift_release();
  swift_release();
  swift_release();
  v44 = 16.0;
  if (v82 == 2)
    v44 = 24.0;
  v45 = EdgeInsets.init(_all:)(v44);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v75;
  v52 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v18, v36, v76);
  v54 = &v18[*(int *)(v74 + 36)];
  *v54 = v40;
  *((double *)v54 + 1) = v45;
  *((_QWORD *)v54 + 2) = v47;
  *((_QWORD *)v54 + 3) = v49;
  *((_QWORD *)v54 + 4) = v51;
  v54[40] = 0;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v52);
  v55 = v73;
  sub_100065228((uint64_t)v18, v73, &qword_1011D76E0);
  v56 = v71;
  v57 = v72;
  v58 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  v58(v71, v25, v21);
  v59 = v77;
  sub_10004A160(v55, v77, &qword_1011D76E0);
  v60 = v78;
  v58(v78, v56, v21);
  v61 = sub_100007E8C((uint64_t *)&unk_1011D7730);
  v62 = &v60[*(int *)(v61 + 48)];
  *(_QWORD *)v62 = 0;
  v62[8] = 1;
  sub_10004A160(v59, (uint64_t)&v60[*(int *)(v61 + 64)], &qword_1011D76E0);
  sub_10004FF60(v55, &qword_1011D76E0);
  v63 = *(void (**)(char *, uint64_t))(v57 + 8);
  v63(v25, v21);
  sub_10004FF60(v59, &qword_1011D76E0);
  return ((uint64_t (*)(char *, uint64_t))v63)(v56, v21);
}

__n128 sub_100A76DCC@<Q0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __n128 result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  __n128 v16;
  char v17;
  __int128 v18;
  char v19;
  __int128 v20;
  char v21;

  v5 = static HorizontalAlignment.center.getter(a1);
  sub_100A76E64(a2, (uint64_t)&v14);
  v6 = v15;
  v7 = v17;
  v8 = v19;
  v9 = v21;
  result = v16;
  v11 = v20;
  v12 = v14;
  v13 = v18;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = 0x4020000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  *(_OWORD *)(a3 + 24) = v12;
  *(_BYTE *)(a3 + 40) = v6;
  *(__n128 *)(a3 + 48) = result;
  *(_BYTE *)(a3 + 64) = v7;
  *(_OWORD *)(a3 + 72) = v13;
  *(_BYTE *)(a3 + 88) = v8;
  *(_OWORD *)(a3 + 96) = v11;
  *(_BYTE *)(a3 + 112) = v9;
  return result;
}

double sub_100A76E64@<D0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  double result;
  unint64_t v51;
  uint64_t KeyPath;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = a1[3];
  v58 = a1[2];
  v59 = v3;
  v51 = sub_10098A8C0();
  swift_bridgeObjectRetain();
  v4 = Text.init<A>(_:)(&v58, &type metadata for String, v51);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v12 = static Font.largeTitle.getter(v11);
  v13 = Text.font(_:)(v12, v4, v6, v10, v8);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  v20 = v17 & 1;
  sub_100055BAC(v4, v6, v10);
  swift_bridgeObjectRelease();
  v22 = static Font.Weight.bold.getter(v21);
  v23 = Text.fontWeight(_:)(*(_QWORD *)&v22, 0, v13, v15, v20, v19);
  v55 = v24;
  v56 = v23;
  v57 = v25;
  v54 = v26 & 1;
  sub_100055BAC(v13, v15, v20);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100EE00D8);
  v27 = a1[5];
  v58 = a1[4];
  v59 = v27;
  swift_bridgeObjectRetain();
  v28 = Text.init<A>(_:)(&v58, &type metadata for String, v51);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  v35 = static Font.title3.getter(v28);
  v36 = Text.font(_:)(v35, v28, v30, v34, v32);
  v38 = v37;
  LOBYTE(v10) = v39;
  v41 = v40;
  swift_release();
  sub_100055BAC(v28, v30, v34);
  v42 = swift_bridgeObjectRelease();
  LODWORD(v58) = static HierarchicalShapeStyle.primary.getter(v42);
  v43 = Text.foregroundStyle<A>(_:)(&v58, v36, v38, v10 & 1, v41, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v45 = v44;
  v47 = v46;
  LOBYTE(v34) = v48 & 1;
  sub_100055BAC(v36, v38, v10 & 1);
  swift_bridgeObjectRelease();
  v49 = swift_getKeyPath(&unk_100EE00D8);
  LOBYTE(v58) = v54;
  *(_QWORD *)a2 = v56;
  *(_QWORD *)(a2 + 8) = v55;
  *(_BYTE *)(a2 + 16) = v54;
  *(_QWORD *)(a2 + 24) = v57;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = v43;
  *(_QWORD *)(a2 + 56) = v45;
  *(_BYTE *)(a2 + 64) = v34;
  *(_QWORD *)(a2 + 72) = v47;
  *(_QWORD *)(a2 + 80) = v49;
  *(_BYTE *)(a2 + 88) = 1;
  sub_100055BBC(v56, v55, v54);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v43, v45, v34);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BAC(v43, v45, v34);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100055BAC(v56, v55, v58);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100A77134(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void (*v7)(__n128);
  uint64_t v8;
  __n128 v9;

  if (qword_1011D1DB8 != -1)
    swift_once(&qword_1011D1DB8, sub_100A71730);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  sub_100048AAC(v3, v4);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(v3, v4);
  result = sub_10004BA30(v3, v4);
  v6 = a2 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss;
  v7 = *(void (**)(__n128))(a2 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 8);
    v9 = swift_retain();
    v7(v9);
    return sub_10004BA30((uint64_t)v7, v8);
  }
  return result;
}

double sub_100A771EC@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  double result;
  __int128 v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  if (qword_1011D1DB0 != -1)
    swift_once(&qword_1011D1DB0, sub_100A71564);
  v33[0] = static CloudLibrary.EnablementContext.action;
  v2 = sub_10098A8C0();
  swift_bridgeObjectRetain();
  v3 = Text.init<A>(_:)(v33, &type metadata for String, v2);
  v5 = v4;
  v7 = v6 & 1;
  v10 = Text.bold()(v3, v4, v6 & 1, v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  sub_100055BAC(v3, v5, v7);
  swift_bridgeObjectRelease();
  LOBYTE(v3) = static Edge.Set.vertical.getter(v17);
  v18 = EdgeInsets.init(_all:)(8.0);
  v44 = v10;
  v45 = v12;
  v46 = v16;
  v47 = v14;
  v48 = v3;
  v49 = v18;
  v50 = v19;
  v51 = v20;
  v52 = v21;
  v53 = 0;
  v23 = static Alignment.center.getter(v22);
  sub_10014B040(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v33, v25, 0.0, 1, 0.0, 1, v23, v24);
  sub_100055BAC(v10, v12, v16);
  swift_bridgeObjectRelease();
  v26 = v41;
  a1[8] = v40;
  a1[9] = v26;
  v27 = v43;
  a1[10] = v42;
  a1[11] = v27;
  v28 = v37;
  a1[4] = v36;
  a1[5] = v28;
  v29 = v39;
  a1[6] = v38;
  a1[7] = v29;
  v30 = v33[1];
  *a1 = v33[0];
  a1[1] = v30;
  result = *(double *)&v34;
  v32 = v35;
  a1[2] = v34;
  a1[3] = v32;
  return result;
}

uint64_t sub_100A7739C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100A758E8(*(_QWORD *)v1, *(_QWORD **)(v1 + 8), a1);
}

uint64_t sub_100A773A4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011D7280);
  sub_100048B14(v0, (uint64_t)qword_1011D7280);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x62694C64756F6C43, 0xEC00000079726172);
}

uint64_t sub_100A77420@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EE0090);
  v5 = swift_getKeyPath(&unk_100EE00B8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100A7749C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EE0090);
  v5 = swift_getKeyPath(&unk_100EE00B8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (a1 >> 30)
  {
    if (a1 >> 30 == 1)
    {
      if ((a2 & 0xC0000000) == 0x40000000)
        return (((a1 & 1) == 0) ^ a2) & (*((float *)&a1 + 1) == *((float *)&a2 + 1));
      return 0;
    }
    return ((uint64_t (*)(void))((char *)&loc_100A77588 + 4 * byte_100EDFBFE[a1 - 0x80000000]))();
  }
  else
  {
    if ((a2 & 0xC0000000) != 0)
      return 0;
    return a1 == a2;
  }
}

uint64_t sub_100A775C0(uint64_t a1, uint64_t a2)
{
  if (a2 != 2147483650)
    JUMPOUT(0x100A77560);
  return 1;
}

uint64_t sub_100A775D8(uint64_t a1, uint64_t a2)
{
  if (a2 != 2147483651)
    JUMPOUT(0x100A77560);
  return 1;
}

uint64_t sub_100A775F0(uint64_t a1, uint64_t a2)
{
  if (a2 != 2147483652)
    JUMPOUT(0x100A77560);
  return 1;
}

uint64_t _s9MusicCore12CloudLibraryO11FailureTypeO8rawValueAESgSi_tcfC_0(unint64_t a1)
{
  if (a1 > 0xFFFFFFFFFFFFFFF9)
    return ~(_DWORD)a1;
  else
    return 6;
}

uint64_t sub_100A77620()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A77644(uint64_t a1)
{
  uint64_t v1;

  return sub_100A72AF8(a1, v1);
}

uint64_t sub_100A7764C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100A7765C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100A77664(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_100A7769C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

id sub_100A776D4(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void _s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  void **aBlock;
  uint64_t v48;
  void (*v49)(uint64_t, void *);
  void *v50;
  void *v51;
  uint64_t v52;

  CloudLibrary.EnablementContext.title.getter(a1);
  v10 = v9;
  v12 = v11;
  CloudLibrary.EnablementContext.message.getter(a1);
  v14 = v13;
  v16 = v15;
  if (a3)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    v19 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v17, v18, 1);

    if (qword_1011D2420 != -1)
      swift_once(&qword_1011D2420, sub_100B62390);
    v20 = qword_10124ED40;
    v21 = swift_allocObject(&unk_1010F4030, 32, 7);
    *(_QWORD *)(v21 + 16) = a4;
    *(_QWORD *)(v21 + 24) = a5;
    sub_100048AAC(a4, a5);
    swift_bridgeObjectRetain();
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v51 = sub_100A78918;
    v52 = v21;
    aBlock = _NSConcreteStackBlock;
    v48 = 1107296256;
    v49 = sub_100223938;
    v50 = &unk_1010F4048;
    v23 = _Block_copy(&aBlock);
    swift_release(v52);
    v24 = (void *)objc_opt_self(UIAlertAction);
    v25 = objc_msgSend(v24, "actionWithTitle:style:handler:", v22, 1, v23);
    _Block_release(v23);

    objc_msgSend(v19, "addAction:", v25);
    if (qword_1011D1DB0 != -1)
      swift_once(&qword_1011D1DB0, sub_100A71564);
    v26 = unk_10124E1E0;
    v27 = swift_allocObject(&unk_1010F4080, 32, 7);
    *(_QWORD *)(v27 + 16) = a4;
    *(_QWORD *)(v27 + 24) = a5;
    sub_100048AAC(a4, a5);
    swift_bridgeObjectRetain();
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v51 = sub_100A78948;
    v52 = v27;
    aBlock = _NSConcreteStackBlock;
    v48 = 1107296256;
    v49 = sub_100223938;
    v50 = &unk_1010F4098;
    v29 = _Block_copy(&aBlock);
    v30 = objc_msgSend(v24, "actionWithTitle:style:handler:", v28, 0, v29, swift_release(v52).n128_f64[0]);
    _Block_release(v29);

    objc_msgSend(v19, "addAction:", v30);
    if ((unint64_t)a3 >= 2)
    {
      v31 = a3;
      objc_msgSend(v19, "setPreferredStyle:", 0);
      v32 = v31;
      objc_msgSend(v32, "bounds");
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v41 = objc_msgSend(v19, "popoverPresentationController");
      if (v41)
      {
        v42 = v41;
        v43 = v32;
        objc_msgSend(v42, "setSourceView:", v43);
        objc_msgSend(v42, "setSourceRect:", v34, v36, v38, v40);

        sub_1008D3F40(a3);
        sub_1008D3F40(a3);

      }
      else
      {
        sub_1008D3F40(a3);
        sub_1008D3F40(a3);
      }
    }
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v19, 1, (id)0xF, (void **)((unint64_t)a3 > 1), 0, 0);

  }
  else
  {
    v44 = objc_allocWithZone((Class)type metadata accessor for CloudLibraryViewController(0));
    sub_100048AAC(a4, a5);
    v45 = sub_100A74F70(v10, v12, v14, v16, a4, a5);
    v46 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v45);
    objc_msgSend(v46, "setModalPresentationStyle:", 2);
    objc_msgSend(v46, "setModalPresentationCapturesStatusBarAppearance:", 1);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v46, 1, (id)0xF, (void **)1, 0, 0);

  }
}

void _s9MusicCore12CloudLibraryO07presentcD15EnablerIfNeeded7context18presentationSource5style05cloudD17EnabledCompletionyAC17EnablementContextO_AA012PresentationK0VAC0R5StyleOySbcSgtFZ_0(char a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_1011D1C28 != -1)
    swift_once(&qword_1011D1C28, sub_100A2D554);
  v7 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100EE0108);
  v9 = swift_getKeyPath(&unk_100EE0130);
  static Published.subscript.getter(&v31, v7, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = BYTE2(v31);
  v11 = v33;
  v12 = v34;
  v13 = v35;
  v15 = v36;
  v14 = v37;
  v16 = v38;
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v15);

  if ((v10 & 1) != 0)
  {
    if (!a4)
      return;
    v17 = 1;
LABEL_9:
    a4(v17);
    return;
  }
  v18 = static ApplicationCapabilities.Controller.shared;
  v19 = swift_getKeyPath(&unk_100EE0108);
  v20 = swift_getKeyPath(&unk_100EE0130);
  static Published.subscript.getter(&v31, v18, v19, v20);
  swift_release(v19);
  swift_release(v20);
  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  v26 = v36;
  v25 = v37;
  v27 = v38;
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v26);

  if ((v21 & 0x100) == 0)
  {
    if (!a4)
      return;
    v17 = 0;
    goto LABEL_9;
  }
  _s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0(a1, a2, a3, (uint64_t)a4, a5);
}

double sub_100A77D98(uint64_t a1)
{
  uint64_t v1;

  return sub_100A74E6C(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1010F4008, (uint64_t)sub_100A78908, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD15EnablerIfNeeded7context18presentationSource5style05cloudD17EnabledCompletionyAC17EnablementContextO_AA012PresentationK0VAC0R5StyleOySbcSgtFZ_0);
}

unint64_t sub_100A77DD0()
{
  unint64_t result;

  result = qword_1011D72D0;
  if (!qword_1011D72D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CloudLibrary.FailureType, &type metadata for CloudLibrary.FailureType);
    atomic_store(result, (unint64_t *)&qword_1011D72D0);
  }
  return result;
}

unint64_t sub_100A77E18()
{
  unint64_t result;

  result = qword_1011D72D8;
  if (!qword_1011D72D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CloudLibrary.EnablementContext, &type metadata for CloudLibrary.EnablementContext);
    atomic_store(result, (unint64_t *)&qword_1011D72D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary()
{
  return &type metadata for CloudLibrary;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.UpdateContext(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[8])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.UpdateContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.UpdateContext()
{
  return &type metadata for CloudLibrary.UpdateContext;
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.FailureType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100A77F64 + 4 * byte_100EDFC08[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100A77F98 + 4 * byte_100EDFC03[v4]))();
}

uint64_t sub_100A77F98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A77FA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A77FA8);
  return result;
}

uint64_t sub_100A77FB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A77FBCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100A77FC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A77FC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.FailureType()
{
  return &type metadata for CloudLibrary.FailureType;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.Status(uint64_t a1, unsigned int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 > 0x1FFFFFFD && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 536870910);
  if ((((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFFu) >= 0x1FFFFFFD)
    v3 = -1;
  else
    v3 = ((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FFFFFFD)
  {
    *(_QWORD *)result = a2 - 536870910;
    if (a3 >= 0x1FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x1FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 8 * ((-a2 >> 2) & 0x7FFFFFF) - (a2 << 30);
  }
  return result;
}

uint64_t sub_100A780A4(_QWORD *a1)
{
  if ((int)*a1 >= 0)
    return *a1 >> 30;
  else
    return ((*a1 >> 29) & 0xFFFFFFF8 | *a1 & 7) + 2;
}

_QWORD *sub_100A780C4(_QWORD *result)
{
  *result &= 0xFFFFFFFF3FFFFFFFLL;
  return result;
}

unint64_t *sub_100A780D4(unint64_t *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0xFFFFFFFF00000007 | (a2 << 30);
  else
    *result = ((a2 - 2) | ((unint64_t)(a2 - 2) << 29)) & 0xFFFFFFFF00000007 | 0x80000000;
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.Status()
{
  return &type metadata for CloudLibrary.Status;
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.EnablementContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100A78164 + 4 * byte_100EDFC12[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100A78198 + 4 * byte_100EDFC0D[v4]))();
}

uint64_t sub_100A78198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A781A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A781A8);
  return result;
}

uint64_t sub_100A781B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A781BCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100A781C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A781C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.EnablementContext()
{
  return &type metadata for CloudLibrary.EnablementContext;
}

uint64_t sub_100A781E4()
{
  return type metadata accessor for CloudLibrary.StatusObserver(0);
}

uint64_t type metadata accessor for CloudLibrary.StatusObserver(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011D7308, (uint64_t)&nominal type descriptor for CloudLibrary.StatusObserver);
}

void sub_100A78200(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100EDFED0;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[5] = &unk_100EDFEE8;
  v4[6] = &unk_100EDFEE8;
  sub_100A782AC();
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100EDFF00;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_100A782AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011D7318)
  {
    v0 = type metadata accessor for Published(0, &type metadata for CloudLibrary.Status);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011D7318);
  }
}

_QWORD *_s13InsertCommandV8LocationOwCP(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void _s13InsertCommandV8LocationOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **_s13InsertCommandV8LocationOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **_s13InsertCommandV8LocationOwta(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.PresentationStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.PresentationStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.PresentationStyle()
{
  return &type metadata for CloudLibrary.PresentationStyle;
}

uint64_t type metadata accessor for CloudLibraryViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011D7500, (uint64_t)&nominal type descriptor for CloudLibraryViewController);
}

uint64_t sub_100A78504(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_100EDFEE8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_1011D74F0);
}

uint64_t sub_100A78558()
{
  return type metadata accessor for CloudLibraryViewController(0);
}

uint64_t sub_100A78560()
{
  return type metadata accessor for EnableCloudLibraryView.Model(0);
}

uint64_t type metadata accessor for EnableCloudLibraryView.Model(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011D7580, (uint64_t)&nominal type descriptor for EnableCloudLibraryView.Model);
}

void sub_100A7857C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EDFF98;
  v4[1] = &unk_100EDFF98;
  v4[2] = &unk_100EDFFB0;
  sub_100A78600(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100EDFFB0;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_100A78600(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011D7590)
  {
    _s3__C24UIUserInterfaceSizeClassOMa_0(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011D7590);
  }
}

ValueMetadata *type metadata accessor for EnableCloudLibraryView()
{
  return &type metadata for EnableCloudLibraryView;
}

uint64_t initializeWithCopy for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyInit(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t result;

  result = swift_unknownObjectWeakCopyAssign(a1, a2, a3);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t result;

  result = swift_unknownObjectWeakTakeAssign(a1, a2, a3);
  *(_QWORD *)(result + 8) = *(_QWORD *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.StatusObserver.InternalObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.StatusObserver.InternalObserver()
{
  return &type metadata for CloudLibrary.StatusObserver.InternalObserver;
}

uint64_t sub_100A787A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FB5670, 1);
}

double sub_100A787BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_100A76DCC(*(_QWORD *)(v1 + 16), (_QWORD *)*(_QWORD *)(v1 + 24), a1).n128_u64[0];
  return result;
}

uint64_t sub_100A787C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A787E8()
{
  uint64_t v0;

  return sub_100A77134(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100A787F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7710;
  if (!qword_1011D7710)
  {
    v1 = sub_100044B54(&qword_1011D7718);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D7710);
  }
  return result;
}

uint64_t sub_100A78854@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100A7887C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100A788A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100A788C4()
{
  uint64_t v0;

  sub_100A74114(v0);
}

uint64_t sub_100A788CC(float a1)
{
  uint64_t v1;

  return sub_100A741E4(v1, a1);
}

uint64_t sub_100A788D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 28, 7);
}

void sub_100A788F8()
{
  uint64_t v0;

  sub_100A74424(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_100A78918()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

void sub_100A78948(uint64_t a1)
{
  uint64_t v1;

  sub_100A74BD8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_100A78950()
{
  uint64_t v0;

  sub_100A7520C(v0);
}

uint64_t sub_100A78958()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_errorRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A78984()
{
  uint64_t v0;

  return sub_100A72F74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100A7898C()
{
  uint64_t v0;

  return sub_100A71C04(v0);
}

double sub_100A78994(uint64_t a1)
{
  uint64_t v1;

  return sub_100A7242C(a1, v1);
}

uint64_t sub_100A7899C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100A7206C(a1, a2, v2);
}

uint64_t sub_100A789A4()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100A789D8()
{
  uint64_t v0;

  return sub_100A72298(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100A789E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011D77A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100A78A4C()
{
  return sub_10005610C(&qword_1011D77D0, &qword_1011D7688, (void (*)(void))sub_100A78A80);
}

unint64_t sub_100A78A80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D77D8;
  if (!qword_1011D77D8)
  {
    v1 = sub_100044B54(&qword_1011D7680);
    sub_100049F28((unint64_t *)&unk_1011D77E0, &qword_1011D7678, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D77D8);
  }
  return result;
}

uint64_t sub_100A78B5C(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A78C4C, 0, 0);
}

uint64_t sub_100A78C4C()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4B20, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A794EC;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A794EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A79550;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A79550()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4B48, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7A88, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A79900(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A799F0, 0, 0);
}

uint64_t sub_100A799F0()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4B98, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A7A290;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7A290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A7A2F4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7A2F4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4BC0, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7AA8, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7A6A4(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A7A794, 0, 0);
}

uint64_t sub_100A7A794()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4D78, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A7B034;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7B034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A7B098;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7B098()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4DA0, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7B28, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7B448(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_100A7B53C, 0, 0);
}

uint64_t sub_100A7B53C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  uint64_t v89;
  _OWORD v90[4];
  uint64_t v91;
  uint64_t (*v92)(_QWORD);
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v90[2] = *(_OWORD *)(v2 + 32);
  v90[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v90[0] = *(_OWORD *)v2;
  v90[1] = v5;
  v96 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v94 = *(_OWORD *)(v0 + 104);
  v95 = *(_OWORD *)(v0 + 120);
  v91 = v4;
  v92 = v6;
  v93 = v7;
  v8 = v6(v90);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = sub_100048B14(v12, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_1009D0214((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v87 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_10099627C(v28, v29, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1001C748C((_QWORD *)(v0 + 144));
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v87, v25);
    }
    else
    {
      sub_1001C748C((_QWORD *)(v0 + 144));

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_10004FF60(v31, &qword_1011D3658);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_1010F4D00, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_1009D0214((_QWORD *)(v0 + 272));
    v48 = sub_100007E8C(&qword_1011D3670);
    v49 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_100A9DE58, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v88 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_100A7BC5C;
    return v88();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = sub_100048B14(v57, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_1009D0214((_QWORD *)(v0 + 400));
    sub_1003351D4(v53, v54);
    sub_1009D0214((_QWORD *)(v0 + 400));
    v63 = sub_1003351D4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v89 = *(_QWORD *)(v0 + 960);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v71;
      *(_DWORD *)v70 = 136446466;
      sub_1001C748C((_QWORD *)(v0 + 400));
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v67;
      *(_QWORD *)(v70 + 4) = sub_10099627C(v72, v73, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1001C748C((_QWORD *)(v0 + 400));
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10013B670(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_10099627C(v74, v76, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v86, v89);
    }
    else
    {
      sub_1001C748C((_QWORD *)(v0 + 400));
      sub_1001C748C((_QWORD *)(v0 + 400));
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1000);
    v80 = *(_QWORD *)(v0 + 992);
    v81 = *(_QWORD *)(v0 + 984);
    v82 = *(_QWORD *)(v0 + 976);
    v83 = *(_QWORD *)(v0 + 952);
    v84 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7BC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A7BFA4;
  else
    v3 = sub_100A7BCC0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7BCC0()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_1009D0214((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_10099627C(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_1001C748C((_QWORD *)(v0 + 784));
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v39);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_1001C748C((_QWORD *)(v0 + 784));

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_1010F4D28, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_1009D0214((_QWORD *)(v0 + 528));
  sub_1009AA68C(v25, (uint64_t)&unk_1011D7B08, v31);
  swift_release();
  swift_release();
  sub_10004FF60(v25, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7BFA4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  double (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_1009D0214((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_1009D0214((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v15 = *(_QWORD *)(v0 + 960);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v37[0] = v17;
    *(_DWORD *)v16 = 136446466;
    sub_1001C748C((_QWORD *)(v0 + 656));
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, v37);
    swift_bridgeObjectRelease();
    sub_1001C748C((_QWORD *)(v0 + 656));
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 912, v20);
    *(_QWORD *)(v16 + 14) = sub_10099627C(v21, v22, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v36(v35, v15);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 1048);
    v25 = *(double (**)(uint64_t, uint64_t))(v0 + 1024);
    v26 = *(_QWORD *)(v0 + 984);
    v27 = *(_QWORD *)(v0 + 960);
    sub_1001C748C((_QWORD *)(v0 + 656));
    sub_1001C748C((_QWORD *)(v0 + 656));
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    v23.n128_f64[0] = v25(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 1000);
  v29 = *(_QWORD *)(v0 + 992);
  v30 = *(_QWORD *)(v0 + 984);
  v31 = *(_QWORD *)(v0 + 976);
  v32 = *(_QWORD *)(v0 + 952);
  v33 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v23);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7C250(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_100A7C344, 0, 0);
}

uint64_t sub_100A7C344()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = sub_100048B14(v12, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_100376DA4((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_10099627C(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1009CFF44((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_1009CFF44((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_10004FF60(v31, &qword_1011D3658);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_1010F4C88, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_100376DA4((_QWORD *)(v0 + 272));
    v48 = sub_100007E8C(&qword_1011D3670);
    v49 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_100A9DD0C, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_100A7CA9C;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = sub_100048B14(v57, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_100376DA4((_QWORD *)(v0 + 400));
    sub_1003351D4(v53, v54);
    sub_100376DA4((_QWORD *)(v0 + 400));
    v63 = sub_1003351D4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_10099627C(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10013B670(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_10099627C(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1000);
    v80 = *(_QWORD *)(v0 + 992);
    v81 = *(_QWORD *)(v0 + 984);
    v82 = *(_QWORD *)(v0 + 976);
    v83 = *(_QWORD *)(v0 + 952);
    v84 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7CA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A7CDF4;
  else
    v3 = sub_100A7CB00;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7CB00()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_100376DA4((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_10099627C(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v39);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_1010F4CB0, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_100376DA4((_QWORD *)(v0 + 528));
  sub_1009AA68C(v25, (uint64_t)&unk_1011D7AE8, v31);
  swift_release();
  swift_release();
  sub_10004FF60(v25, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7CDF4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  double (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_100376DA4((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_100376DA4((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v34 = *(_QWORD *)(v0 + 960);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37[0] = v16;
    *(_DWORD *)v15 = 136446466;
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    v17 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v15 + 4) = sub_10099627C(v17, v18, v37);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v19 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v20 = (char *)String.init<A>(describing:)(v0 + 912, v19);
    *(_QWORD *)(v15 + 14) = sub_10099627C(v20, v21, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v36(v35, v34);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 1048);
    v24 = *(double (**)(uint64_t, uint64_t))(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 984);
    v26 = *(_QWORD *)(v0 + 960);
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v22.n128_f64[0] = v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 1000);
  v28 = *(_QWORD *)(v0 + 992);
  v29 = *(_QWORD *)(v0 + 984);
  v30 = *(_QWORD *)(v0 + 976);
  v31 = *(_QWORD *)(v0 + 952);
  v32 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7D0C4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 992) = v2;
  *(_BYTE *)(v3 + 1112) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 1008) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 1016) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 1024) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 1032) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1040) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1048) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1056) = swift_task_alloc(v8);
  v9 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 128) = v9;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(v2 + 128);
  v10 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v10;
  v11 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v11;
  v12 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v12;
  return swift_task_switch(sub_100A7D1C0, 0, 0);
}

uint64_t sub_100A7D1C0()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  uint64_t v89;
  _OWORD v90[5];
  uint64_t (*v91)(_QWORD);
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1112) & 1) != 0)
    goto LABEL_3;
  v2 = *(_OWORD **)(v0 + 992);
  v3 = v2[3];
  v90[2] = v2[2];
  v90[3] = v3;
  v90[4] = v2[4];
  v4 = v2[1];
  v90[0] = *v2;
  v90[1] = v4;
  v5 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_OWORD *)(v0 + 128);
  v93 = *(_OWORD *)(v0 + 112);
  v94 = v7;
  v95 = *(_QWORD *)(v0 + 144);
  v91 = v5;
  v92 = v6;
  v8 = v5(v90);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v10 = *(_QWORD *)(v0 + 1056);
    v11 = *(_QWORD *)(v0 + 1024);
    v12 = *(_QWORD *)(v0 + 1016);
    v13 = sub_100048B14(v12, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 1064) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1072) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 264) = v15;
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 144);
    v16 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 200) = v16;
    v17 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 232) = v17;
    v18 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 152) = *v1;
    *(_OWORD *)(v0 + 168) = v18;
    v19 = sub_1009CDF2C(v0 + 152);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1056);
    v24 = *(_QWORD *)(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 1016);
    if (v22)
    {
      v87 = *(_QWORD *)(v0 + 1056);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v90[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 224));
      *(_QWORD *)(v26 + 4) = sub_10099627C(v28, v29, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1009CDD6C(v0 + 152);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v87, v25);
    }
    else
    {
      sub_1009CDD6C(v0 + 152);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1080) = v30;
    v31 = *(_QWORD *)(v0 + 1008);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v32 = *(double *)(v0 + 112);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_10004FF60(v31, &qword_1011D3658);
    *(_QWORD *)(v0 + 984) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 976) = v38;
    v39 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 400) = v39;
    *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 144);
    v40 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 336) = v40;
    v41 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 368) = v41;
    v42 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 288) = *v1;
    *(_OWORD *)(v0 + 304) = v42;
    v43 = swift_allocObject(&unk_1010F48C8, 152, 7);
    v44 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v43 + 112) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v43 + 128) = v44;
    *(_QWORD *)(v43 + 144) = *(_QWORD *)(v0 + 144);
    v45 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v43 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v43 + 64) = v45;
    v46 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v43 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v43 + 96) = v46;
    v47 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v43 + 16) = *v1;
    *(_OWORD *)(v43 + 32) = v47;
    sub_1009CDF2C(v0 + 288);
    v48 = sub_100007E8C(&qword_1011D3670);
    v49 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1088) = Publisher<>.sink(receiveValue:)(sub_100A9D6BC, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 120);
    v88 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1096) = v51;
    *v51 = v0;
    v51[1] = sub_100A7D8F8;
    return v88();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v55 = *(_QWORD *)(v0 + 1032);
    v56 = *(_QWORD *)(v0 + 1024);
    v57 = *(_QWORD *)(v0 + 1016);
    v58 = sub_100048B14(v57, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 536) = v59;
    *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 144);
    v60 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 472) = v60;
    v61 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 504) = v61;
    v62 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 424) = *v1;
    *(_OWORD *)(v0 + 440) = v62;
    sub_1009CDF2C(v0 + 424);
    sub_1003351D4(v53, v54);
    sub_1009CDF2C(v0 + 424);
    v63 = sub_1003351D4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 1032);
    v68 = *(_QWORD *)(v0 + 1024);
    v69 = *(_QWORD *)(v0 + 1016);
    if (v66)
    {
      v89 = *(_QWORD *)(v0 + 1016);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v90[0] = v71;
      *(_DWORD *)v70 = 136446466;
      sub_1009CDD6C(v0 + 424);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 496));
      v86 = v67;
      *(_QWORD *)(v70 + 4) = sub_10099627C(v72, v73, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_1009CDD6C(v0 + 424);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10013B670(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_10099627C(v74, v76, (uint64_t *)v90);
      swift_bridgeObjectRelease();
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v86, v89);
    }
    else
    {
      sub_1009CDD6C(v0 + 424);
      sub_1009CDD6C(v0 + 424);
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1056);
    v80 = *(_QWORD *)(v0 + 1048);
    v81 = *(_QWORD *)(v0 + 1040);
    v82 = *(_QWORD *)(v0 + 1032);
    v83 = *(_QWORD *)(v0 + 1008);
    v84 = *(_QWORD *)(v0 + 1000);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7D8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1096);
  *(_QWORD *)(*(_QWORD *)v1 + 1104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A7DC58;
  else
    v3 = sub_100A7D95C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7D95C()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1048);
  v5 = *(_QWORD *)(v0 + 1016);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 944) = v6;
  *(_QWORD *)(v0 + 960) = *(_QWORD *)(v0 + 144);
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 864) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 880) = v7;
  v8 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 896) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 912) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 832) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 848) = v9;
  v10 = sub_1009CDF2C(v0 + 832);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
  v15 = *(_QWORD *)(v0 + 1048);
  v16 = *(_QWORD *)(v0 + 1016);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 904));
    *(_QWORD *)(v17 + 4) = sub_10099627C(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_1009CDD6C(v0 + 832);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v39);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_1009CDD6C(v0 + 832);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1056);
  v22 = *(_QWORD *)(v0 + 1048);
  v23 = *(_QWORD *)(v0 + 1040);
  v24 = *(_QWORD *)(v0 + 1032);
  v38 = *(_QWORD *)(v0 + 1008);
  v25 = *(_QWORD *)(v0 + 1000);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 672) = v27;
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 144);
  v28 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 608) = v28;
  v29 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 640) = v29;
  v30 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 560) = *v1;
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_1010F48F0, 168, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v32;
  *(_QWORD *)(v31 + 160) = *(_QWORD *)(v0 + 144);
  v33 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v33;
  v34 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v34;
  v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v35;
  sub_1009CDF2C(v0 + 560);
  sub_1009AA68C(v25, (uint64_t)&unk_1011D79E8, v31);
  swift_release();
  swift_release();
  sub_10004FF60(v25, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7DC58()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  double (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1104);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1072);
  v3 = *(_QWORD *)(v0 + 1064);
  v4 = *(_QWORD *)(v0 + 1040);
  v5 = *(_QWORD *)(v0 + 1016);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 808) = v7;
  *(_QWORD *)(v0 + 824) = *(_QWORD *)(v0 + 144);
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 744) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 776) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 712) = v10;
  sub_1009CDF2C(v0 + 696);
  swift_errorRetain(v1);
  sub_1009CDF2C(v0 + 696);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1104);
    v35 = *(_QWORD *)(v0 + 1040);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    v15 = *(_QWORD *)(v0 + 1016);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v37[0] = v17;
    *(_DWORD *)v16 = 136446466;
    sub_1009CDD6C(v0 + 696);
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 768));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, v37);
    swift_bridgeObjectRelease();
    sub_1009CDD6C(v0 + 696);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 968) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 968, v20);
    *(_QWORD *)(v16 + 14) = sub_10099627C(v21, v22, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    v36(v35, v15);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 1104);
    v25 = *(double (**)(uint64_t, uint64_t))(v0 + 1080);
    v26 = *(_QWORD *)(v0 + 1040);
    v27 = *(_QWORD *)(v0 + 1016);
    sub_1009CDD6C(v0 + 696);
    sub_1009CDD6C(v0 + 696);
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    v23.n128_f64[0] = v25(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 1056);
  v29 = *(_QWORD *)(v0 + 1048);
  v30 = *(_QWORD *)(v0 + 1040);
  v31 = *(_QWORD *)(v0 + 1032);
  v32 = *(_QWORD *)(v0 + 1008);
  v33 = *(_QWORD *)(v0 + 1000);
  swift_willThrow(v23);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7DF0C(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A7DFFC, 0, 0);
}

uint64_t sub_100A7DFFC()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4C10, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A7E89C;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7E89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A7E900;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7E900()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4C38, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7AC8, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7ECB0(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A7EDA0, 0, 0);
}

uint64_t sub_100A7EDA0()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4A30, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A7F640;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A7F640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A7F6A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A7F6A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4A58, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7A48, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A7FA54(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A7FB44, 0, 0);
}

uint64_t sub_100A7FB44()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4580, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A803E4;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A803E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A80448;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A80448()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F45A8, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7910, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A807F8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(v2 + 1240) = v1;
  *(_BYTE *)(v2 + 1362) = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v2 + 1248) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v2 + 1256) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  *(_QWORD *)(v2 + 1264) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 1272) = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 1280) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 1288) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 1296) = swift_task_alloc(v7);
  *(_QWORD *)(v2 + 1304) = swift_task_alloc(v7);
  return swift_task_switch(sub_100A808CC, 0, 0);
}

uint64_t sub_100A808CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  char *v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77[2];

  if ((*(_BYTE *)(v0 + 1362) & 1) != 0 || (v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 1240) + 144))(), v2 == 1))
  {
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v3 = *(_QWORD *)(v0 + 1304);
    v4 = *(_QWORD *)(v0 + 1272);
    v5 = *(_QWORD *)(v0 + 1264);
    v6 = *(_QWORD *)(v0 + 1240);
    v7 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 1312) = v7;
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(_QWORD *)(v0 + 1320) = v8;
    v8(v3, v7, v5);
    v9 = sub_10004A160(v6, v0 + 16, &qword_1011D32C0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 1304);
    v14 = *(_QWORD *)(v0 + 1272);
    v15 = *(_QWORD *)(v0 + 1264);
    if (v12)
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v77[0] = v17;
      *(_DWORD *)v16 = 136446210;
      v18 = *(_BYTE *)(v0 + 153);
      sub_10004FF60(v0 + 16, &qword_1011D32C0);
      v19 = (char *)ActionType.rawValue.getter(v18);
      *(_QWORD *)(v16 + 4) = sub_10099627C(v19, v20, v77);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: performing…", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      sub_10004FF60(v0 + 16, &qword_1011D32C0);
    }

    v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v21(v13, v15);
    *(_QWORD *)(v0 + 1328) = v21;
    v22 = *(_QWORD *)(v0 + 1256);
    v23 = *(_QWORD *)(v0 + 1240);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v24 = *(double *)(v23 + 160);
    v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v22, 1, 1, v26);
    v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v22, v24);

    sub_10004FF60(v22, &qword_1011D3658);
    *(_QWORD *)(v0 + 1232) = v27;
    v28 = type metadata accessor for NSTimer.TimerPublisher(0);
    v29 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v30 = ConnectablePublisher.autoconnect()(v28, v29);
    swift_release();
    *(_QWORD *)(v0 + 1224) = v30;
    sub_10004A160(v23, v0 + 616, &qword_1011D32C0);
    v31 = swift_allocObject(&unk_1010F45F8, 216, 7);
    v32 = *(_OWORD *)(v0 + 792);
    *(_OWORD *)(v31 + 176) = *(_OWORD *)(v0 + 776);
    *(_OWORD *)(v31 + 192) = v32;
    *(_QWORD *)(v31 + 208) = *(_QWORD *)(v0 + 808);
    v33 = *(_OWORD *)(v0 + 728);
    *(_OWORD *)(v31 + 112) = *(_OWORD *)(v0 + 712);
    *(_OWORD *)(v31 + 128) = v33;
    v34 = *(_OWORD *)(v0 + 760);
    *(_OWORD *)(v31 + 144) = *(_OWORD *)(v0 + 744);
    *(_OWORD *)(v31 + 160) = v34;
    v35 = *(_OWORD *)(v0 + 664);
    *(_OWORD *)(v31 + 48) = *(_OWORD *)(v0 + 648);
    *(_OWORD *)(v31 + 64) = v35;
    v36 = *(_OWORD *)(v0 + 696);
    *(_OWORD *)(v31 + 80) = *(_OWORD *)(v0 + 680);
    *(_OWORD *)(v31 + 96) = v36;
    v37 = *(_OWORD *)(v0 + 632);
    *(_OWORD *)(v31 + 16) = *(_OWORD *)(v0 + 616);
    *(_OWORD *)(v31 + 32) = v37;
    v38 = sub_100007E8C(&qword_1011D3670);
    v39 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1336) = Publisher<>.sink(receiveValue:)(sub_100A9D164, v31, v38, v39);
    swift_release();
    swift_release();
    v40 = *(int **)(v23 + 168);
    v75 = (int *)((char *)v40 + *v40);
    v41 = (_QWORD *)swift_task_alloc(v40[1]);
    *(_QWORD *)(v0 + 1344) = v41;
    *v41 = v0;
    v41[1] = sub_100A80FA0;
    return ((uint64_t (*)(uint64_t, _QWORD))v75)(v0 + 1360, *(_QWORD *)(v0 + 1240));
  }
  else
  {
    v43 = v1;
    v44 = v2;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v45 = *(_QWORD *)(v0 + 1280);
    v46 = *(_QWORD *)(v0 + 1272);
    v47 = *(_QWORD *)(v0 + 1264);
    v48 = *(_QWORD *)(v0 + 1240);
    v49 = sub_100048B14(v47, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v45, v49, v47);
    sub_10004A160(v48, v0 + 216, &qword_1011D32C0);
    sub_1003351D4(v43, v44);
    v50 = swift_bridgeObjectRetain();
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.error.getter(v51);
    v53 = os_log_type_enabled(v51, v52);
    v54 = *(_QWORD *)(v0 + 1280);
    v55 = *(_QWORD *)(v0 + 1272);
    v56 = *(_QWORD *)(v0 + 1264);
    if (v53)
    {
      v76 = *(_QWORD *)(v0 + 1264);
      v57 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      v77[0] = v58;
      *(_DWORD *)v57 = 136446466;
      v74 = v54;
      v59 = *(_BYTE *)(v0 + 353);
      sub_10004FF60(v0 + 216, &qword_1011D32C0);
      v60 = (char *)ActionType.rawValue.getter(v59);
      *(_QWORD *)(v57 + 4) = sub_10099627C(v60, v61, v77);
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2082;
      swift_bridgeObjectRetain();
      v62 = (char *)Optional<A>.description.getter(v43, v44);
      v64 = v63;
      sub_10013B670(v43, v44);
      *(_QWORD *)(v57 + 14) = sub_10099627C(v62, v64, v77);
      swift_bridgeObjectRelease();
      sub_10013B670(v43, v44);
      sub_10013B670(v43, v44);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v74, v76);
    }
    else
    {
      sub_10004FF60(v0 + 216, &qword_1011D32C0);
      sub_10013B670(v43, v44);
      sub_10013B670(v43, v44);

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
    v65 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v65, 0, 0);
    *v66 = v43;
    v66[1] = v44;
    v67 = *(_QWORD *)(v0 + 1304);
    v68 = *(_QWORD *)(v0 + 1296);
    v69 = *(_QWORD *)(v0 + 1288);
    v70 = *(_QWORD *)(v0 + 1280);
    v71 = *(_QWORD *)(v0 + 1256);
    v72 = *(_QWORD *)(v0 + 1248);
    swift_willThrow(v73);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A80FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1344);
  *(_QWORD *)(*(_QWORD *)v1 + 1352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A81378;
  else
    v3 = sub_100A81004;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A81004()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  char *v14;
  char *v15;
  Swift::String v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  char *v41[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1320);
  v2 = *(_QWORD *)(v0 + 1312);
  v3 = *(_QWORD *)(v0 + 1296);
  v4 = *(_QWORD *)(v0 + 1264);
  v5 = *(_QWORD *)(v0 + 1240);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v6 = sub_10004A160(v5, v0 + 816, &qword_1011D32C0);
  v7 = *(_BYTE *)(v0 + 1360);
  v8 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(_QWORD *)(v0 + 1296);
    v38 = *(_QWORD *)(v0 + 1264);
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1328);
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(64, -1);
    v40 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = *(_BYTE *)(v0 + 953);
    sub_10004FF60(v0 + 816, &qword_1011D32C0);
    v14 = (char *)ActionType.rawValue.getter(v13);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v14, v15, &v40);
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    v41[0] = 0;
    v41[1] = (char *)0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v41, " with result: ");
    HIBYTE(v41[1]) = -18;
    *(_BYTE *)(v0 + 1361) = v7;
    v16._countAndFlagsBits = String.init<A>(describing:)(v0 + 1361, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 14) = sub_10099627C(v41[0], v41[1], &v40);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    v39(v10, v38);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 1328);
    v18 = *(_QWORD *)(v0 + 1296);
    v19 = *(_QWORD *)(v0 + 1264);
    sub_10004FF60(v0 + 816, &qword_1011D32C0);

    v17(v18, v19);
  }
  v20 = *(_QWORD *)(v0 + 1304);
  v21 = *(_QWORD *)(v0 + 1296);
  v22 = *(_QWORD *)(v0 + 1288);
  v23 = *(_QWORD *)(v0 + 1280);
  v24 = *(_QWORD *)(v0 + 1256);
  v25 = *(_QWORD *)(v0 + 1248);
  v26 = *(_QWORD *)(v0 + 1240);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v25, 1, 1, v27);
  sub_10004A160(v26, v0 + 416, &qword_1011D32C0);
  v28 = *(_BYTE *)(v0 + 1360);
  v29 = swift_allocObject(&unk_1010F4620, 233, 7);
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  v30 = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v29 + 192) = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v29 + 208) = v30;
  *(_QWORD *)(v29 + 224) = *(_QWORD *)(v0 + 608);
  v31 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v29 + 128) = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v29 + 144) = v31;
  v32 = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v29 + 160) = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v29 + 176) = v32;
  v33 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v29 + 64) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v29 + 80) = v33;
  v34 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v29 + 96) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v29 + 112) = v34;
  v35 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v29 + 48) = v35;
  *(_BYTE *)(v29 + 232) = v28;
  sub_1009AA68C(v25, (uint64_t)&unk_1011D7928, v29);
  swift_release();
  swift_release();
  sub_10004FF60(v25, (uint64_t *)&unk_1011D8CF0);
  v36 = *(unsigned __int8 *)(v0 + 1360);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
}

uint64_t sub_100A81378()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __n128 v21;
  uint64_t v22;
  double (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35[2];

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1320);
  v3 = *(_QWORD *)(v0 + 1312);
  v4 = *(_QWORD *)(v0 + 1288);
  v5 = *(_QWORD *)(v0 + 1264);
  v6 = *(_QWORD *)(v0 + 1240);
  v7 = swift_release();
  v2(v4, v3, v5, v7);
  sub_10004A160(v6, v0 + 1016, &qword_1011D32C0);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 1352);
    v33 = *(_QWORD *)(v0 + 1288);
    v34 = *(void (**)(uint64_t, uint64_t))(v0 + 1328);
    v12 = *(_QWORD *)(v0 + 1264);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v35[0] = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = *(_BYTE *)(v0 + 1153);
    sub_10004FF60(v0 + 1016, &qword_1011D32C0);
    v16 = (char *)ActionType.rawValue.getter(v15);
    *(_QWORD *)(v13 + 4) = sub_10099627C(v16, v17, v35);
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v0 + 1216) = v11;
    swift_errorRetain(v11);
    v18 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v19 = (char *)String.init<A>(describing:)(v0 + 1216, v18);
    *(_QWORD *)(v13 + 14) = sub_10099627C(v19, v20, v35);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: perform failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    v34(v33, v12);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 1352);
    v23 = *(double (**)(uint64_t, uint64_t))(v0 + 1328);
    v24 = *(_QWORD *)(v0 + 1288);
    v25 = *(_QWORD *)(v0 + 1264);
    sub_10004FF60(v0 + 1016, &qword_1011D32C0);
    swift_errorRelease(v22);
    swift_errorRelease(v22);

    v21.n128_f64[0] = v23(v24, v25);
  }
  v26 = *(_QWORD *)(v0 + 1304);
  v27 = *(_QWORD *)(v0 + 1296);
  v28 = *(_QWORD *)(v0 + 1288);
  v29 = *(_QWORD *)(v0 + 1280);
  v30 = *(_QWORD *)(v0 + 1256);
  v31 = *(_QWORD *)(v0 + 1248);
  swift_willThrow(v21);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A81610(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_100A81704, 0, 0);
}

uint64_t sub_100A81704()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = sub_100048B14(v12, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_1009CEC2C((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_10099627C(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1009CFF44((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_1009CFF44((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_10004FF60(v31, &qword_1011D3658);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_1010F4940, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_1009CEC2C((_QWORD *)(v0 + 272));
    v48 = sub_100007E8C(&qword_1011D3670);
    v49 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_100A9D85C, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_100A81E5C;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = sub_100048B14(v57, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_1009CEC2C((_QWORD *)(v0 + 400));
    sub_1003351D4(v53, v54);
    sub_1009CEC2C((_QWORD *)(v0 + 400));
    v63 = sub_1003351D4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_10099627C(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10013B670(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_10099627C(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1000);
    v80 = *(_QWORD *)(v0 + 992);
    v81 = *(_QWORD *)(v0 + 984);
    v82 = *(_QWORD *)(v0 + 976);
    v83 = *(_QWORD *)(v0 + 952);
    v84 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A81E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A821B4;
  else
    v3 = sub_100A81EC0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A81EC0()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_1009CEC2C((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_10099627C(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v39);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_1010F4968, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_1009CEC2C((_QWORD *)(v0 + 528));
  sub_1009AA68C(v25, (uint64_t)&unk_1011D7A08, v31);
  swift_release();
  swift_release();
  sub_10004FF60(v25, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A821B4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  double (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_1009CEC2C((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_1009CEC2C((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v34 = *(_QWORD *)(v0 + 960);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37[0] = v16;
    *(_DWORD *)v15 = 136446466;
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    v17 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v15 + 4) = sub_10099627C(v17, v18, v37);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v19 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v20 = (char *)String.init<A>(describing:)(v0 + 912, v19);
    *(_QWORD *)(v15 + 14) = sub_10099627C(v20, v21, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v36(v35, v34);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 1048);
    v24 = *(double (**)(uint64_t, uint64_t))(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 984);
    v26 = *(_QWORD *)(v0 + 960);
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v22.n128_f64[0] = v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 1000);
  v28 = *(_QWORD *)(v0 + 992);
  v29 = *(_QWORD *)(v0 + 984);
  v30 = *(_QWORD *)(v0 + 976);
  v31 = *(_QWORD *)(v0 + 952);
  v32 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A82484(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 960) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 968) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  v10 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_100A82578, 0, 0);
}

uint64_t sub_100A82578()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = sub_100048B14(v12, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_1009CEC2C((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_10099627C(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1009CFF44((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_1009CFF44((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_10004FF60(v31, &qword_1011D3658);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release();
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_1010F49B8, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_1009CEC2C((_QWORD *)(v0 + 272));
    v48 = sub_100007E8C(&qword_1011D3670);
    v49 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_100A9E034, v43, v48, v49);
    swift_release();
    swift_release();
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_100A82CD0;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = sub_100048B14(v57, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_1009CEC2C((_QWORD *)(v0 + 400));
    sub_1003351D4(v53, v54);
    sub_1009CEC2C((_QWORD *)(v0 + 400));
    v63 = sub_1003351D4(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_10099627C(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10013B670(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_10099627C(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_10013B670(v53, v54);
      sub_10013B670(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1000);
    v80 = *(_QWORD *)(v0 + 992);
    v81 = *(_QWORD *)(v0 + 984);
    v82 = *(_QWORD *)(v0 + 976);
    v83 = *(_QWORD *)(v0 + 952);
    v84 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A82CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E028;
  else
    v3 = sub_100A82D34;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A82D34()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_1009CEC2C((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v39 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_10099627C(v19, v20, &v39);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v39);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v37(v15, v16);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1000);
  v22 = *(_QWORD *)(v0 + 992);
  v23 = *(_QWORD *)(v0 + 984);
  v24 = *(_QWORD *)(v0 + 976);
  v38 = *(_QWORD *)(v0 + 952);
  v25 = *(_QWORD *)(v0 + 944);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v27;
  v28 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v28;
  v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v29;
  v30 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v30;
  v31 = swift_allocObject(&unk_1010F49E0, 160, 7);
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v32 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v31 + 112) = v32;
  v33 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v31 + 144) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v31 + 32) = *v1;
  *(_OWORD *)(v31 + 48) = v34;
  v35 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v31 + 80) = v35;
  sub_1009CEC2C((_QWORD *)(v0 + 528));
  sub_1009AA68C(v25, (uint64_t)&unk_1011D7A28, v31);
  swift_release();
  swift_release();
  sub_10004FF60(v25, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v38);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A83028(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A83118, 0, 0);
}

uint64_t sub_100A83118()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4AA8, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A839B8;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A839B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A83A1C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A83A1C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4AD0, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7A68, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A83DCC(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A83EBC, 0, 0);
}

uint64_t sub_100A83EBC()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F46E8, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A8475C;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A8475C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A847C0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A847C0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4710, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7968, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A84B70(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A84C60, 0, 0);
}

uint64_t sub_100A84C60()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4760, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9D488, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A85500;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A85500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A85914;
  else
    v3 = sub_100A85564;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A85564()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4788, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7988, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A85914()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t type;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *log;
  uint64_t v48[2];

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 224);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = *(_QWORD *)(v0 + 248);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 192);
    type = v16;
    v19 = swift_slowAlloc(22, -1);
    v42 = swift_slowAlloc(64, -1);
    v48[0] = v42;
    *(_DWORD *)v19 = 136446466;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v20 = (char *)ActionType.rawValue.getter(v10);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v20, v21, v48);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v18;
    swift_errorRetain(v18);
    v22 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v23 = (char *)String.init<A>(describing:)(v0 + 144, v22);
    *(_QWORD *)(v19 + 14) = sub_10099627C(v23, v24, v48);
    swift_bridgeObjectRelease();
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    v25.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 248);
    v46 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 176);
    swift_release_n(v7, 2, v17);
    swift_release_n(v8, 2, v29);
    swift_release_n(v9, 2, v30);
    swift_release_n(v11, 2, v31);
    swift_release_n(v12, 2, v32);
    swift_release_n(v13, 2, v33);
    swift_errorRelease(v26);
    swift_errorRelease(v26);

    v25.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v27 + 8))(v46, v28);
  }
  v35 = *(_QWORD *)(v0 + 200);
  v34 = *(_QWORD *)(v0 + 208);
  v37 = *(_QWORD *)(v0 + 184);
  v36 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 160);
  swift_willThrow(v25);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A85C9C(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A85D8C, 0, 0);
}

uint64_t sub_100A85D8C()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F47D8, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A8662C;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A8662C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A86690;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A86690()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4800, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D79A8, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A86A40(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 168) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 176) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v8);
  v9 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v9;
  *(_OWORD *)(v3 + 112) = v2[6];
  v10 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v10;
  v11 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v11;
  return swift_task_switch(sub_100A86B30, 0, 0);
}

uint64_t sub_100A86B30()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  BOOL v61;
  __n128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  NSObject *log;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[3];
  char v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v96[0] = *(_OWORD *)(v0 + 16);
  v96[1] = v5;
  v96[2] = *(_OWORD *)(v0 + 48);
  v97 = v1;
  v98 = v2;
  v99 = v3;
  v100 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v101 = *(_OWORD *)(v0 + 96);
  v102 = v6;
  v7 = v2(v96);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_100048B14(v10, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v90 = *(_BYTE *)(v0 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    if (v17)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v21 = swift_slowAlloc(12, -1);
      v86 = v19;
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = (char *)ActionType.rawValue.getter(v90);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v23, v24, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s: performing…", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v20 + 8))(*(os_log_type_t **)typea, v86);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    v25 = *(_QWORD *)(v0 + 160);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v26 = *(double *)(v0 + 88);
    v27 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
    v29 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v27, NSRunLoopCommonModes, v25, v26);

    sub_10004FF60(v25, &qword_1011D3658);
    *(_QWORD *)(v0 + 128) = v29;
    v30 = type metadata accessor for NSTimer.TimerPublisher(0);
    v31 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v32 = ConnectablePublisher.autoconnect()(v30, v31);
    swift_release();
    *(_QWORD *)(v0 + 136) = v32;
    v33 = *(_QWORD *)(v0 + 16);
    v34 = *(_QWORD *)(v0 + 56);
    v35 = *(_BYTE *)(v0 + 64);
    v37 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 88);
    v39 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 120);
    v41 = swift_allocObject(&unk_1010F4850, 128, 7);
    *(_QWORD *)(v41 + 16) = v33;
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v41 + 40) = *(_OWORD *)(v0 + 40);
    *(_QWORD *)(v41 + 56) = v34;
    *(_BYTE *)(v41 + 64) = v35;
    *(_QWORD *)(v41 + 72) = v37;
    *(_QWORD *)(v41 + 80) = v36;
    *(_QWORD *)(v41 + 88) = v38;
    *(_QWORD *)(v41 + 96) = v39;
    *(_OWORD *)(v41 + 104) = *(_OWORD *)(v0 + 104);
    *(_QWORD *)(v41 + 120) = v40;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v42 = sub_100007E8C(&qword_1011D3670);
    v43 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100A9E02C, v41, v42, v43);
    swift_release();
    swift_release();
    v44 = *(int **)(v0 + 96);
    v93 = (uint64_t (*)(void))((char *)v44 + *v44);
    v45 = (_QWORD *)swift_task_alloc(v44[1]);
    *(_QWORD *)(v0 + 240) = v45;
    *v45 = v0;
    v45[1] = sub_100A873D0;
    return v93();
  }
  else
  {
    v47 = v8;
    v95 = v7;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v48 = *(_QWORD *)(v0 + 176);
    v49 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 168);
    v51 = sub_100048B14(v50, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v51, v50);
    v52 = *(_QWORD *)(v0 + 24);
    v53 = *(_QWORD *)(v0 + 40);
    v54 = *(_QWORD *)(v0 + 56);
    v87 = *(_BYTE *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 80);
    v56 = *(_QWORD *)(v0 + 104);
    v57 = *(_QWORD *)(v0 + 120);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v58 = v95;
    sub_1003351D4(v95, v47);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59 = sub_1003351D4(v95, v47);
    v60 = Logger.logObject.getter(v59);
    type = static os_log_type_t.error.getter(v60);
    v61 = os_log_type_enabled(v60, type);
    v94 = *(_QWORD *)(v0 + 184);
    v91 = *(_QWORD *)(v0 + 176);
    v92 = *(_QWORD *)(v0 + 168);
    if (v61)
    {
      log = v60;
      v63 = swift_slowAlloc(22, -1);
      v85 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v96[0] = v85;
      *(_DWORD *)v63 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = (char *)ActionType.rawValue.getter(v87);
      *(_QWORD *)(v63 + 4) = sub_10099627C(v64, v65, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v63 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = Optional<A>.description.getter(v95, v47);
      v68 = v67;
      sub_10013B670(v95, v47);
      v69 = (char *)v66;
      v58 = v95;
      *(_QWORD *)(v63 + 14) = sub_10099627C(v69, v68, (uint64_t *)v96);
      swift_bridgeObjectRelease();
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {
      swift_release_n(v52, 2, v62);
      swift_release_n(v53, 2, v70);
      swift_release_n(v54, 2, v71);
      swift_release_n(v55, 2, v72);
      swift_release_n(v56, 2, v73);
      swift_release_n(v57, 2, v74);
      sub_10013B670(v95, v47);
      sub_10013B670(v95, v47);

    }
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v92);
    v75 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v75, 0, 0);
    *v76 = v58;
    v76[1] = v47;
    v78 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 208);
    v80 = *(_QWORD *)(v0 + 184);
    v79 = *(_QWORD *)(v0 + 192);
    v82 = *(_QWORD *)(v0 + 152);
    v81 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v83);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A873D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E04C;
  else
    v3 = sub_100A87434;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A87434()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v30 = *(_BYTE *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 176);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 200);
    v11 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v35 = v26;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v30);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 200);
  v31 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_BYTE *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = swift_allocObject(&unk_1010F4878, 144, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v24 + 72) = v17;
  *(_BYTE *)(v24 + 80) = v18;
  *(_QWORD *)(v24 + 88) = v19;
  *(_QWORD *)(v24 + 96) = v20;
  *(_QWORD *)(v24 + 104) = v21;
  *(_QWORD *)(v24 + 112) = v22;
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v24 + 136) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D79C8, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A877E4(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_BYTE *)(v3 + 240) = a2;
  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  *(_QWORD *)(v3 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 152) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 160) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 168) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 176) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v8);
  v9 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v9;
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  return swift_task_switch(sub_100A878CC, 0, 0);
}

uint64_t sub_100A878CC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  BOOL v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  NSObject *log;
  uint64_t v79;
  uint64_t v80;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(void);
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t (*v94)(_QWORD);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;

  if ((*(_BYTE *)(v0 + 240) & 1) != 0)
    goto LABEL_3;
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(uint64_t (**)(_QWORD))(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 104);
  v90 = *(_QWORD *)(v0 + 16);
  v91 = *(_OWORD *)(v0 + 24);
  v92 = v1;
  v93 = v2;
  v94 = v3;
  v95 = v4;
  v96 = v5;
  v97 = v6;
  v85 = v91;
  v88 = *(_OWORD *)(v0 + 88);
  v98 = v88;
  v99 = v7;
  v8 = v3(&v90);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v10 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v13 = sub_100048B14(v11, (uint64_t)qword_1011D3628);
    *(_QWORD *)(v0 + 200) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    *(_QWORD *)(v0 + 208) = v14;
    v14(v10, v13, v11);
    v83 = *(_BYTE *)(v0 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 160);
    if (v18)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 192);
      v22 = swift_slowAlloc(12, -1);
      v79 = v20;
      v23 = swift_slowAlloc(32, -1);
      v90 = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = (char *)ActionType.rawValue.getter(v83);
      *(_QWORD *)(v22 + 4) = sub_10099627C(v24, v25, &v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s: performing…", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v21 + 8))(*(os_log_type_t **)typea, v79);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
    v26 = *(_QWORD *)(v0 + 144);
    sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
    v27 = *(double *)(v0 + 72);
    v28 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v29 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v26, 1, 1, v29);
    v30 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v28, NSRunLoopCommonModes, v26, v27);

    sub_10004FF60(v26, &qword_1011D3658);
    *(_QWORD *)(v0 + 112) = v30;
    v31 = type metadata accessor for NSTimer.TimerPublisher(0);
    v32 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v33 = ConnectablePublisher.autoconnect()(v31, v32);
    swift_release();
    *(_QWORD *)(v0 + 120) = v33;
    v34 = *(_QWORD *)(v0 + 16);
    v35 = *(_QWORD *)(v0 + 40);
    v36 = *(_BYTE *)(v0 + 48);
    v38 = *(_QWORD *)(v0 + 56);
    v37 = *(_QWORD *)(v0 + 64);
    v39 = *(_QWORD *)(v0 + 72);
    v40 = *(int **)(v0 + 80);
    v41 = *(_QWORD *)(v0 + 104);
    v42 = swift_allocObject(&unk_1010F4670, 112, 7);
    *(_QWORD *)(v42 + 16) = v34;
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v42 + 40) = v35;
    *(_BYTE *)(v42 + 48) = v36;
    *(_QWORD *)(v42 + 56) = v38;
    *(_QWORD *)(v42 + 64) = v37;
    *(_QWORD *)(v42 + 72) = v39;
    *(_QWORD *)(v42 + 80) = v40;
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v0 + 88);
    *(_QWORD *)(v42 + 104) = v41;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v43 = sub_100007E8C(&qword_1011D3670);
    v44 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9D2A8, v42, v43, v44);
    swift_release();
    swift_release();
    v86 = (uint64_t (*)(void))((char *)v40 + *v40);
    v45 = (_QWORD *)swift_task_alloc(v40[1]);
    *(_QWORD *)(v0 + 224) = v45;
    *v45 = v0;
    v45[1] = sub_100A88114;
    return v86();
  }
  else
  {
    v47 = v8;
    v48 = v9;
    if (qword_1011D1B48 != -1)
      swift_once(&qword_1011D1B48, sub_1009AAD98);
    v50 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 168);
    v51 = *(_QWORD *)(v0 + 152);
    v52 = sub_100048B14(v51, (uint64_t)qword_1011D3628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v52, v51);
    v53 = v85;
    swift_retain();
    swift_retain();
    swift_retain();
    v54 = v88;
    swift_retain();
    swift_retain();
    sub_1003351D4(v47, v48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v55 = sub_1003351D4(v47, v48);
    v56 = Logger.logObject.getter(v55);
    type = static os_log_type_t.error.getter(v56);
    v57 = os_log_type_enabled(v56, type);
    v89 = *(_QWORD *)(v0 + 168);
    v84 = *(_QWORD *)(v0 + 160);
    v87 = *(_QWORD *)(v0 + 152);
    if (v57)
    {
      log = v56;
      v59 = swift_slowAlloc(22, -1);
      v80 = swift_slowAlloc(64, -1);
      v90 = v80;
      *(_DWORD *)v59 = 136446466;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v60 = (char *)ActionType.rawValue.getter(v2);
      *(_QWORD *)(v59 + 4) = sub_10099627C(v60, v61, &v90);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *(_WORD *)(v59 + 12) = 2082;
      swift_bridgeObjectRetain();
      v62 = (char *)Optional<A>.description.getter(v47, v48);
      v64 = v63;
      sub_10013B670(v47, v48);
      *(_QWORD *)(v59 + 14) = sub_10099627C(v62, v64, &v90);
      swift_bridgeObjectRelease();
      sub_10013B670(v47, v48);
      sub_10013B670(v47, v48);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy(v80, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v80, -1, -1);
      swift_slowDealloc(v59, -1, -1);

    }
    else
    {
      swift_release_n(v53, 2, v58);
      swift_release_n(v1, 2, v65);
      swift_release_n(v4, 2, v66);
      swift_release_n(v54, 2, v67);
      swift_release_n(v7, 2, v68);
      sub_10013B670(v47, v48);
      sub_10013B670(v47, v48);

    }
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v89, v87);
    v69 = sub_1009AB410();
    swift_allocError(&type metadata for ActionError, v69, 0, 0);
    *v70 = v47;
    v70[1] = v48;
    v72 = *(_QWORD *)(v0 + 184);
    v71 = *(_QWORD *)(v0 + 192);
    v74 = *(_QWORD *)(v0 + 168);
    v73 = *(_QWORD *)(v0 + 176);
    v76 = *(_QWORD *)(v0 + 136);
    v75 = *(_QWORD *)(v0 + 144);
    swift_willThrow(v77);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A88114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A884F0;
  else
    v3 = sub_100A88178;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A88178()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 152);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v31 = *(_BYTE *)(v0 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 152);
  v33 = *(_QWORD *)(v0 + 160);
  if (v8)
  {
    v29 = *(_QWORD *)(v0 + 184);
    v11 = swift_slowAlloc(22, -1);
    v27 = swift_slowAlloc(64, -1);
    v35 = v27;
    *(_DWORD *)v11 = 136446466;
    v12 = (char *)ActionType.rawValue.getter(v31);
    *(_QWORD *)(v11 + 4) = sub_10099627C(v12, v13, &v35);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)(v11 + 14) = sub_10099627C(0, (char *)0xE000000000000000, &v35);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform success%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v29, v10);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v10);
  }
  v26 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 136);
  v32 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 144);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_BYTE *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 64);
  v21 = *(_QWORD *)(v0 + 72);
  v22 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = swift_allocObject(&unk_1010F4698, 128, 7);
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = v16;
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v24 + 56) = v17;
  *(_BYTE *)(v24 + 64) = v18;
  *(_QWORD *)(v24 + 72) = v19;
  *(_QWORD *)(v24 + 80) = v20;
  *(_QWORD *)(v24 + 88) = v21;
  *(_QWORD *)(v24 + 96) = v22;
  *(_OWORD *)(v24 + 104) = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v24 + 120) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1009AA68C(v14, (uint64_t)&unk_1011D7948, v24);
  swift_release();
  swift_release();
  sub_10004FF60(v14, (uint64_t *)&unk_1011D8CF0);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A884F0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  __n128 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *log;
  uint64_t v46[2];

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = swift_errorRetain(v1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  log = v14;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = v9;
    v18 = *(_QWORD *)(v0 + 232);
    v42 = *(_QWORD *)(v0 + 160);
    v43 = *(_QWORD *)(v0 + 152);
    v44 = *(_QWORD *)(v0 + 176);
    v19 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v46[0] = v41;
    *(_DWORD *)v19 = 136446466;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v20 = (char *)ActionType.rawValue.getter(v17);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v20, v21, v46);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v18;
    swift_errorRetain(v18);
    v22 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v23 = (char *)String.init<A>(describing:)(v0 + 128, v22);
    *(_QWORD *)(v19 + 14) = sub_10099627C(v23, v24, v46);
    swift_bridgeObjectRelease();
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, log, v15, "%{public}s: perform failed: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    v25.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 232);
    v27 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 152);
    v28 = *(_QWORD *)(v0 + 160);
    swift_release_n(v7, 2, v16);
    swift_release_n(v8, 2, v30);
    swift_release_n(v10, 2, v31);
    swift_release_n(v11, 2, v32);
    swift_release_n(v12, 2, v33);
    swift_errorRelease(v26);
    swift_errorRelease(v26);

    v25.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }
  v35 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 192);
  v37 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 176);
  v39 = *(_QWORD *)(v0 + 136);
  v38 = *(_QWORD *)(v0 + 144);
  swift_willThrow(v25);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A88844(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1009D04E4((_QWORD *)a2);
  v10 = sub_1009D04E4((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 48));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_100148840((_QWORD *)a2);
    sub_100148840((_QWORD *)a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100148840((_QWORD *)a2);
    sub_100148840((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100A88A20(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_100376DA4((_QWORD *)a2);
  v10 = sub_100376DA4((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100A88C1C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1009CEC2C((_QWORD *)a2);
  v10 = sub_1009CEC2C((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100A88E18(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A88ED8, 0, 0);
}

uint64_t sub_100A88ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4B70, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A893C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E050;
  else
    v3 = sub_100A9E044;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A89424(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A894E4, 0, 0);
}

uint64_t sub_100A894E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4BE8, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A899CC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A89A8C, 0, 0);
}

uint64_t sub_100A89A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4DC8, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A89F74(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_100A8A034, 0, 0);
}

uint64_t sub_100A8A034()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_1009D0214((_QWORD *)(v0 + 16));
  v11 = sub_1009D0214((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_1001C748C((_QWORD *)(v0 + 16));
    sub_1001C748C((_QWORD *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_1001C748C((_QWORD *)(v0 + 16));
    sub_1001C748C((_QWORD *)(v0 + 16));

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_10004FF60(v23, &qword_1011D3658);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_1010F4D50, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_1009D0214((_QWORD *)(v0 + 272));
  v40 = sub_100007E8C(&qword_1011D3670);
  v41 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100A9DF48, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_100A8A430;
  return v46(v1);
}

uint64_t sub_100A8A430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A8A6A0;
  else
    v3 = sub_100A8A494;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8A494()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_1009D0214((_QWORD *)(v0 + 528));
  v9 = sub_1009D0214((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_1001C748C((_QWORD *)(v0 + 528));
    sub_1001C748C((_QWORD *)(v0 + 528));
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_1001C748C((_QWORD *)(v0 + 528));
    sub_1001C748C((_QWORD *)(v0 + 528));
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 712);
  v21 = *(_QWORD *)(v0 + 704);
  v22 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8A6A0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_1009D0214((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_1009D0214((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_1001C748C((_QWORD *)(v0 + 400));
    sub_1001C748C((_QWORD *)(v0 + 400));
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_10099627C(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_1001C748C((_QWORD *)(v0 + 400));
    sub_1001C748C((_QWORD *)(v0 + 400));
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8A934(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_100A8A9F4, 0, 0);
}

uint64_t sub_100A8A9F4()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_100376DA4((_QWORD *)(v0 + 16));
  v11 = sub_100376DA4((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_10004FF60(v23, &qword_1011D3658);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_1010F4CD8, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_100376DA4((_QWORD *)(v0 + 272));
  v40 = sub_100007E8C(&qword_1011D3670);
  v41 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100A9DDFC, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_100A8AE10;
  return v46(v1);
}

uint64_t sub_100A8AE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A8B0A0;
  else
    v3 = sub_100A8AE74;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8AE74()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_100376DA4((_QWORD *)(v0 + 528));
  v9 = sub_100376DA4((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 712);
  v21 = *(_QWORD *)(v0 + 704);
  v22 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8B0A0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_100376DA4((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_100376DA4((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_10099627C(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8B354(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 720) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 728) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 736) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 744) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 752) = swift_task_alloc(v9);
  v10 = swift_task_alloc(v9);
  v11 = a4[4];
  *(_OWORD *)(v4 + 232) = a4[5];
  v12 = a4[7];
  *(_OWORD *)(v4 + 248) = a4[6];
  *(_OWORD *)(v4 + 264) = v12;
  v13 = *a4;
  *(_OWORD *)(v4 + 168) = a4[1];
  v14 = a4[3];
  *(_OWORD *)(v4 + 184) = a4[2];
  *(_OWORD *)(v4 + 200) = v14;
  *(_OWORD *)(v4 + 216) = v11;
  *(_QWORD *)(v4 + 760) = v10;
  *(_QWORD *)(v4 + 280) = *((_QWORD *)a4 + 16);
  *(_OWORD *)(v4 + 152) = v13;
  return swift_task_switch(sub_100A8B438, 0, 0);
}

uint64_t sub_100A8B438()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 152);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v2 = *(_QWORD *)(v0 + 760);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 768) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 776) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 128) = v7;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v8 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v8;
  v9 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v9;
  v10 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v10;
  sub_1009CDF2C(v0 + 16);
  v11 = sub_1009CDF2C(v0 + 16);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 760);
  v16 = *(_QWORD *)(v0 + 736);
  v17 = *(_QWORD *)(v0 + 728);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 760);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 88));
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_1009CDD6C(v0 + 16);
    sub_1009CDD6C(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_1009CDD6C(v0 + 16);
    sub_1009CDD6C(v0 + 16);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 784) = v22;
  v23 = *(_QWORD *)(v0 + 720);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v24 = *(double *)(v0 + 248);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_10004FF60(v23, &qword_1011D3658);
  *(_QWORD *)(v0 + 696) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 712) = v30;
  v31 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 400) = v31;
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 280);
  v32 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 336) = v32;
  v33 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 368) = v33;
  v34 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 288) = *v1;
  *(_OWORD *)(v0 + 304) = v34;
  v35 = swift_allocObject(&unk_1010F4918, 152, 7);
  v36 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v35 + 112) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v35 + 128) = v36;
  *(_QWORD *)(v35 + 144) = *(_QWORD *)(v0 + 280);
  v37 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v35 + 64) = v37;
  v38 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v35 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v35 + 96) = v38;
  v39 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v35 + 16) = *v1;
  *(_OWORD *)(v35 + 32) = v39;
  sub_1009CDF2C(v0 + 288);
  v40 = sub_100007E8C(&qword_1011D3670);
  v41 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 792) = Publisher<>.sink(receiveValue:)(sub_100A9D7FC, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 272);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 800) = v43;
  *v43 = v0;
  v43[1] = sub_100A8B84C;
  return v46(v1);
}

uint64_t sub_100A8B84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  *(_QWORD *)(*(_QWORD *)v1 + 808) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A8BAD8;
  else
    v3 = sub_100A8B8B0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8B8B0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  v2 = *(_QWORD *)(v0 + 768);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = *(_QWORD *)(v0 + 728);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 232);
  v6 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 672) = v6;
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 280);
  v7 = *(_OWORD *)(v0 + 168);
  v8 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 608) = v8;
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 640) = v5;
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 576) = v7;
  sub_1009CDF2C(v0 + 560);
  v9 = sub_1009CDF2C(v0 + 560);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
  v14 = *(_QWORD *)(v0 + 752);
  v15 = *(_QWORD *)(v0 + 728);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 632));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_1009CDD6C(v0 + 560);
    sub_1009CDD6C(v0 + 560);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_1009CDD6C(v0 + 560);
    sub_1009CDD6C(v0 + 560);
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 752);
  v21 = *(_QWORD *)(v0 + 744);
  v22 = *(_QWORD *)(v0 + 720);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8BAD8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 808);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 776);
  v3 = *(_QWORD *)(v0 + 768);
  v4 = *(_QWORD *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 728);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 232);
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 536) = v8;
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 280);
  v9 = *(_OWORD *)(v0 + 168);
  v10 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 472) = v10;
  *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 504) = v7;
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 440) = v9;
  sub_1009CDF2C(v0 + 424);
  swift_errorRetain(v1);
  sub_1009CDF2C(v0 + 424);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 808);
    v31 = *(_QWORD *)(v0 + 744);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v15 = *(_QWORD *)(v0 + 728);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 496));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_1009CDD6C(v0 + 424);
    sub_1009CDD6C(v0 + 424);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 704) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 704, v20);
    *(_QWORD *)(v16 + 14) = sub_10099627C(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 808);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v25 = *(_QWORD *)(v0 + 744);
    v26 = *(_QWORD *)(v0 + 728);
    swift_errorRelease(v23);
    sub_1009CDD6C(v0 + 424);
    sub_1009CDD6C(v0 + 424);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 752);
  v28 = *(_QWORD *)(v0 + 744);
  v29 = *(_QWORD *)(v0 + 720);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8BD88(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8BE48, 0, 0);
}

uint64_t sub_100A8BE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4C60, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A8C330(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8C3F0, 0, 0);
}

uint64_t sub_100A8C3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4A80, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A8C8D8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8C998, 0, 0);
}

uint64_t sub_100A8C998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F45D0, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A8CE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_QWORD *)(v5 + 840) = a4;
  v7 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v5 + 848) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  *(_QWORD *)(v5 + 856) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 864) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 872) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 880) = swift_task_alloc(v10);
  *(_QWORD *)(v5 + 888) = swift_task_alloc(v10);
  *(_BYTE *)(v5 + 944) = a5;
  return swift_task_switch(sub_100A8CF28, 0, 0);
}

uint64_t sub_100A8CF28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  _QWORD *v38;
  int *v40;
  uint64_t v41;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 888);
  v2 = *(_QWORD *)(v0 + 864);
  v3 = *(_QWORD *)(v0 + 856);
  v4 = *(_QWORD *)(v0 + 840);
  v5 = sub_100048B14(v3, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 896) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 904) = v6;
  v6(v1, v5, v3);
  v7 = sub_10004A160(v4, v0 + 216, &qword_1011D32C0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 888);
  v12 = *(_QWORD *)(v0 + 864);
  v13 = *(_QWORD *)(v0 + 856);
  if (v10)
  {
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v41 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 353));
    *(_QWORD *)(v14 + 4) = sub_10099627C(v16, v17, &v41);
    swift_bridgeObjectRelease();
    sub_10004FF60(v0 + 216, &qword_1011D32C0);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s: finishing…", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_10004FF60(v0 + 216, &qword_1011D32C0);
  }

  v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v18(v11, v13);
  *(_QWORD *)(v0 + 912) = v18;
  v19 = *(_QWORD *)(v0 + 848);
  v20 = *(_QWORD *)(v0 + 840);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v21 = *(double *)(v20 + 160);
  v22 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v23 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  v24 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v22, NSRunLoopCommonModes, v19, v21);

  sub_10004FF60(v19, &qword_1011D3658);
  *(_QWORD *)(v0 + 824) = v24;
  v25 = type metadata accessor for NSTimer.TimerPublisher(0);
  v26 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v27 = ConnectablePublisher.autoconnect()(v25, v26);
  swift_release();
  *(_QWORD *)(v0 + 816) = v27;
  sub_10004A160(v20, v0 + 16, &qword_1011D32C0);
  v28 = swift_allocObject(&unk_1010F4648, 216, 7);
  v29 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v28 + 176) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v28 + 192) = v29;
  *(_QWORD *)(v28 + 208) = *(_QWORD *)(v0 + 208);
  v30 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v28 + 112) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v28 + 128) = v30;
  v31 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v28 + 144) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v28 + 160) = v31;
  v32 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v28 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v28 + 64) = v32;
  v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v28 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v28 + 96) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v28 + 32) = v34;
  v35 = sub_100007E8C(&qword_1011D3670);
  v36 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 920) = Publisher<>.sink(receiveValue:)(sub_100A9D284, v28, v35, v36);
  swift_release();
  swift_release();
  v37 = *(int **)(v20 + 184);
  v40 = (int *)((char *)v37 + *v37);
  v38 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 928) = v38;
  *v38 = v0;
  v38[1] = sub_100A8D30C;
  return ((uint64_t (*)(_QWORD, uint64_t))v40)(*(_QWORD *)(v0 + 840), v0 + 944);
}

uint64_t sub_100A8D30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 928);
  *(_QWORD *)(*(_QWORD *)v1 + 936) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A8D564;
  else
    v3 = sub_100A8D370;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8D370()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(_QWORD *)(v0 + 880);
  v4 = *(_QWORD *)(v0 + 856);
  v5 = *(_QWORD *)(v0 + 840);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v6 = sub_10004A160(v5, v0 + 616, &qword_1011D32C0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
  v11 = *(_QWORD *)(v0 + 880);
  v12 = *(_QWORD *)(v0 + 856);
  if (v9)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v22 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 753));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v22);
    swift_bridgeObjectRelease();
    sub_10004FF60(v0 + 616, &qword_1011D32C0);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s: finish success", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
    swift_release();

    v21(v11, v12);
  }
  else
  {
    sub_10004FF60(v0 + 616, &qword_1011D32C0);
    swift_release();

    v10(v11, v12);
  }
  v17 = *(_QWORD *)(v0 + 880);
  v18 = *(_QWORD *)(v0 + 872);
  v19 = *(_QWORD *)(v0 + 848);
  swift_task_dealloc(*(_QWORD *)(v0 + 888));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8D564()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 904);
  v3 = *(_QWORD *)(v0 + 896);
  v4 = *(_QWORD *)(v0 + 872);
  v5 = *(_QWORD *)(v0 + 856);
  v6 = *(_QWORD *)(v0 + 840);
  v7 = swift_release();
  v2(v4, v3, v5, v7);
  sub_10004A160(v6, v0 + 416, &qword_1011D32C0);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 936);
    v28 = *(_QWORD *)(v0 + 872);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v12 = *(_QWORD *)(v0 + 856);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v30 = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 553));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v30);
    swift_bridgeObjectRelease();
    sub_10004FF60(v0 + 416, &qword_1011D32C0);
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v0 + 832) = v11;
    swift_errorRetain(v11);
    v17 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v18 = (char *)String.init<A>(describing:)(v0 + 832, v17);
    *(_QWORD *)(v13 + 14) = sub_10099627C(v18, v19, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: finish failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v11);
    v29(v28, v12);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 936);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v22 = *(_QWORD *)(v0 + 872);
    v23 = *(_QWORD *)(v0 + 856);
    swift_errorRelease(v20);
    sub_10004FF60(v0 + 416, &qword_1011D32C0);
    swift_errorRelease(v20);
    swift_errorRelease(v20);

    v21(v22, v23);
  }
  v24 = *(_QWORD *)(v0 + 880);
  v25 = *(_QWORD *)(v0 + 872);
  v26 = *(_QWORD *)(v0 + 848);
  swift_task_dealloc(*(_QWORD *)(v0 + 888));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8D7E0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_100A8D8A0, 0, 0);
}

uint64_t sub_100A8D8A0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_1009CEC2C((_QWORD *)(v0 + 16));
  v11 = sub_1009CEC2C((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_10004FF60(v23, &qword_1011D3658);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_1010F4990, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_1009CEC2C((_QWORD *)(v0 + 272));
  v40 = sub_100007E8C(&qword_1011D3670);
  v41 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100A9D944, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_100A8DCBC;
  return v46(v1);
}

uint64_t sub_100A8DCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A8DF4C;
  else
    v3 = sub_100A8DD20;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8DD20()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_1009CEC2C((_QWORD *)(v0 + 528));
  v9 = sub_1009CEC2C((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v14 = *(_QWORD *)(v0 + 712);
  v15 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v25);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release();

    v24(v14, v15);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    swift_release();

    v13(v14, v15);
  }
  v20 = *(_QWORD *)(v0 + 712);
  v21 = *(_QWORD *)(v0 + 704);
  v22 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8DF4C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_1009CEC2C((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_1009CEC2C((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_10099627C(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8E200(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 688) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 696) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v10;
  v11 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v13;
  return swift_task_switch(sub_100A8E2C0, 0, 0);
}

uint64_t sub_100A8E2C0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_1009CEC2C((_QWORD *)(v0 + 16));
  v11 = sub_1009CEC2C((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_1009CFF44((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_10004FF60(v23, &qword_1011D3658);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release();
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_1010F4A08, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_1009CEC2C((_QWORD *)(v0 + 272));
  v40 = sub_100007E8C(&qword_1011D3670);
  v41 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100A9E038, v35, v40, v41);
  swift_release();
  swift_release();
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_100A8E6DC;
  return v46(v1);
}

uint64_t sub_100A8E6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A9E020;
  else
    v3 = sub_100A9E024;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8E740(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8E800, 0, 0);
}

uint64_t sub_100A8E800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4AF8, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A8ECE8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8EDA8, 0, 0);
}

uint64_t sub_100A8EDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4738, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A8F290(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8F350, 0, 0);
}

uint64_t sub_100A8F350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F47B0, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9D558, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A8F838;
  return v61(v0 + 16);
}

uint64_t sub_100A8F838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A8FB54;
  else
    v3 = sub_100A8F89C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A8F89C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v40 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v5, 2);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v41 = v9;
  swift_retain_n(v9, 2);
  v42 = v10;
  v11 = swift_retain_n(v10, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 168);
  if (v14)
  {
    v39 = *(_QWORD *)(v0 + 160);
    v19 = swift_slowAlloc(12, -1);
    v38 = v16;
    v20 = swift_slowAlloc(32, -1);
    v43 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v40);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v43);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v5, 2, v23);
    swift_release_n(v6, 2, v24);
    swift_release_n(v7, 2, v25);
    swift_release_n(v8, 2, v26);
    swift_release_n(v41, 2, v27);
    swift_release_n(v42, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish success", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v38, v39);
  }
  else
  {
    swift_release_n(v5, 2, v15);
    swift_release_n(v6, 2, v29);
    swift_release_n(v7, 2, v30);
    swift_release_n(v8, 2, v31);
    swift_release_n(v41, 2, v32);
    swift_release_n(v42, 2, v33);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  v34 = *(_QWORD *)(v0 + 184);
  v35 = *(_QWORD *)(v0 + 176);
  v36 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8FB54()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *log;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v42 = *(_QWORD *)(v0 + 232);
    v44 = *(_QWORD *)(v0 + 168);
    v45 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 176);
    v17 = swift_slowAlloc(22, -1);
    v43 = swift_slowAlloc(64, -1);
    v49 = v43;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v10);
    *(_QWORD *)(v17 + 4) = sub_10099627C(v18, v19, &v49);
    v20 = swift_bridgeObjectRelease();
    swift_release_n(v7, 2, v20);
    swift_release_n(v8, 2, v21);
    swift_release_n(v9, 2, v22);
    swift_release_n(v11, 2, v23);
    swift_release_n(v12, 2, v24);
    swift_release_n(v13, 2, v25);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v42;
    swift_errorRetain(v42);
    v26 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v27 = (char *)String.init<A>(describing:)(v0 + 144, v26);
    *(_QWORD *)(v17 + 14) = sub_10099627C(v27, v28, &v49);
    swift_bridgeObjectRelease();
    swift_errorRelease(v42);
    swift_errorRelease(v42);
    _os_log_impl((void *)&_mh_execute_header, log, v16, "%{public}s: finish failed: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v42);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v45);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 232);
    v30 = *(_QWORD *)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 176);
    v31 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v29);
    swift_release_n(v7, 2, v32);
    swift_release_n(v8, 2, v33);
    swift_release_n(v9, 2, v34);
    swift_release_n(v11, 2, v35);
    swift_release_n(v12, 2, v36);
    swift_release_n(v13, 2, v37);
    swift_errorRelease(v29);
    swift_errorRelease(v29);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v47, v31);
  }
  v38 = *(_QWORD *)(v0 + 184);
  v39 = *(_QWORD *)(v0 + 176);
  v40 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A8FEBC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A8FF7C, 0, 0);
}

uint64_t sub_100A8FF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F4828, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A90464(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 160) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 168) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v9);
  v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  *(_OWORD *)(v4 + 112) = a4[6];
  v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v12;
  return swift_task_switch(sub_100A90524, 0, 0);
}

uint64_t sub_100A90524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v57 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v59 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v56 = *(_QWORD *)(v0 + 192);
    v19 = swift_slowAlloc(12, -1);
    v55 = v18;
    v20 = swift_slowAlloc(32, -1);
    v63 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v57);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v63);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v59, 2, v27);
    swift_release_n(v11, 2, v28);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v56, v55);
  }
  else
  {
    swift_release_n(v6, 2, v16);
    swift_release_n(v7, 2, v29);
    swift_release_n(v8, 2, v30);
    swift_release_n(v9, 2, v31);
    swift_release_n(v59, 2, v32);
    swift_release_n(v11, 2, v33);

    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v18);
  }
  v34 = *(_QWORD *)(v0 + 152);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v35 = *(double *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v34, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v34, v35);

  sub_10004FF60(v34, &qword_1011D3658);
  *(_QWORD *)(v0 + 128) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  swift_release();
  *(_QWORD *)(v0 + 136) = v41;
  v42 = *(_QWORD *)(v0 + 16);
  v43 = *(_QWORD *)(v0 + 56);
  v60 = *(_BYTE *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 80);
  v46 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 104);
  v58 = *(_QWORD *)(v0 + 96);
  v49 = *(int **)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 120);
  v50 = swift_allocObject(&unk_1010F48A0, 128, 7);
  *(_QWORD *)(v50 + 16) = v42;
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v50 + 40) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v50 + 56) = v43;
  *(_BYTE *)(v50 + 64) = v60;
  *(_QWORD *)(v50 + 72) = v44;
  *(_QWORD *)(v50 + 80) = v45;
  *(_QWORD *)(v50 + 88) = v46;
  *(_QWORD *)(v50 + 96) = v58;
  *(_QWORD *)(v50 + 104) = v47;
  *(_QWORD *)(v50 + 112) = v49;
  *(_QWORD *)(v50 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v51 = sub_100007E8C(&qword_1011D3670);
  v52 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100A9E030, v50, v51, v52);
  swift_release();
  swift_release();
  v61 = (uint64_t (*)(uint64_t))((char *)v49 + *v49);
  v53 = (_QWORD *)swift_task_alloc(v49[1]);
  *(_QWORD *)(v0 + 224) = v53;
  *v53 = v0;
  v53[1] = sub_100A893C0;
  return v61(v0 + 16);
}

uint64_t sub_100A90A0C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_100007E8C(&qword_1011D3658);
  *(_QWORD *)(v4 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v4 + 144) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 152) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 160) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v9);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v9);
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  return swift_task_switch(sub_100A90AC4, 0, 0);
}

uint64_t sub_100A90AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  double v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = sub_100048B14(v2, (uint64_t)qword_1011D3628);
  *(_QWORD *)(v0 + 184) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 192) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v56 = *(_BYTE *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 104);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v58 = v10;
  v11 = swift_retain_n(v10, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v16 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 152);
  if (v14)
  {
    v53 = *(_QWORD *)(v0 + 176);
    v19 = swift_slowAlloc(12, -1);
    v52 = v17;
    v20 = swift_slowAlloc(32, -1);
    v59 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = (char *)ActionType.rawValue.getter(v56);
    *(_QWORD *)(v19 + 4) = sub_10099627C(v21, v22, &v59);
    v23 = swift_bridgeObjectRelease();
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v9, 2, v26);
    swift_release_n(v58, 2, v27);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v53, v52);
  }
  else
  {
    swift_release_n(v6, 2, v15);
    swift_release_n(v7, 2, v28);
    swift_release_n(v8, 2, v29);
    swift_release_n(v9, 2, v30);
    swift_release_n(v58, 2, v31);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  v32 = *(_QWORD *)(v0 + 136);
  sub_10004A07C(0, (unint64_t *)&qword_1011D3660, NSTimer_ptr);
  v33 = *(double *)(v0 + 72);
  v34 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v35 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v32, 1, 1, v35);
  v36 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v34, NSRunLoopCommonModes, v32, v33);

  sub_10004FF60(v32, &qword_1011D3658);
  *(_QWORD *)(v0 + 112) = v36;
  v37 = type metadata accessor for NSTimer.TimerPublisher(0);
  v38 = sub_100048748((unint64_t *)&qword_1011D3668, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v39 = ConnectablePublisher.autoconnect()(v37, v38);
  swift_release();
  *(_QWORD *)(v0 + 120) = v39;
  v40 = *(_QWORD *)(v0 + 16);
  v41 = *(_QWORD *)(v0 + 40);
  LOBYTE(v39) = *(_BYTE *)(v0 + 48);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v45 = *(_QWORD *)(v0 + 88);
  v46 = *(int **)(v0 + 96);
  v54 = *(_QWORD *)(v0 + 80);
  v57 = *(_QWORD *)(v0 + 104);
  v47 = swift_allocObject(&unk_1010F46C0, 112, 7);
  *(_QWORD *)(v47 + 16) = v40;
  *(_OWORD *)(v47 + 24) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v47 + 40) = v41;
  *(_BYTE *)(v47 + 48) = v39;
  *(_QWORD *)(v47 + 56) = v42;
  *(_QWORD *)(v47 + 64) = v43;
  *(_QWORD *)(v47 + 72) = v44;
  *(_QWORD *)(v47 + 80) = v54;
  *(_QWORD *)(v47 + 88) = v45;
  *(_QWORD *)(v47 + 96) = v46;
  *(_QWORD *)(v47 + 104) = v57;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v48 = sub_100007E8C(&qword_1011D3670);
  v49 = sub_100049F28(&qword_1011D3678, &qword_1011D3670, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 200) = Publisher<>.sink(receiveValue:)(sub_100A9D3B8, v47, v48, v49);
  swift_release();
  swift_release();
  v55 = (uint64_t (*)(uint64_t))((char *)v46 + *v46);
  v50 = (_QWORD *)swift_task_alloc(v46[1]);
  *(_QWORD *)(v0 + 208) = v50;
  *v50 = v0;
  v50[1] = sub_100A90F60;
  return v55(v0 + 16);
}

uint64_t sub_100A90F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A91250;
  else
    v3 = sub_100A90FC4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A90FC4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v37 = *(_BYTE *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 104);
  swift_retain_n(v5, 2);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v38 = v9;
  v10 = swift_retain_n(v9, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v15 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 152);
  if (v13)
  {
    v36 = *(_QWORD *)(v0 + 168);
    v18 = swift_slowAlloc(12, -1);
    v35 = v17;
    v19 = swift_slowAlloc(32, -1);
    v39 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v37);
    *(_QWORD *)(v18 + 4) = sub_10099627C(v20, v21, &v39);
    v22 = swift_bridgeObjectRelease();
    swift_release_n(v5, 2, v22);
    swift_release_n(v6, 2, v23);
    swift_release_n(v7, 2, v24);
    swift_release_n(v8, 2, v25);
    swift_release_n(v38, 2, v26);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: finish success", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v16);
  }
  else
  {
    swift_release_n(v5, 2, v14);
    swift_release_n(v6, 2, v27);
    swift_release_n(v7, 2, v28);
    swift_release_n(v8, 2, v29);
    swift_release_n(v38, 2, v30);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v31 = *(_QWORD *)(v0 + 168);
  v32 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A91250()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *log;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 192);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = swift_release();
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain(v1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = swift_errorRetain(v1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  log = v14;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 152);
    v44 = *(_QWORD *)(v0 + 144);
    v45 = *(_QWORD *)(v0 + 160);
    v17 = v9;
    v18 = swift_slowAlloc(22, -1);
    v42 = swift_slowAlloc(64, -1);
    v47 = v42;
    *(_DWORD *)v18 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(v17);
    *(_QWORD *)(v18 + 4) = sub_10099627C(v19, v20, &v47);
    v21 = swift_bridgeObjectRelease();
    swift_release_n(v7, 2, v21);
    swift_release_n(v8, 2, v22);
    swift_release_n(v10, 2, v23);
    swift_release_n(v11, 2, v24);
    swift_release_n(v12, 2, v25);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v16;
    swift_errorRetain(v16);
    v26 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v27 = (char *)String.init<A>(describing:)(v0 + 128, v26);
    *(_QWORD *)(v18 + 14) = sub_10099627C(v27, v28, &v47);
    swift_bridgeObjectRelease();
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, log, v15, "%{public}s: finish failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v16);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 216);
    v30 = *(_QWORD *)(v0 + 152);
    v31 = *(_QWORD *)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 144);
    swift_errorRelease(v29);
    swift_release_n(v7, 2, v33);
    swift_release_n(v8, 2, v34);
    swift_release_n(v10, 2, v35);
    swift_release_n(v11, 2, v36);
    swift_release_n(v12, 2, v37);
    swift_errorRelease(v29);
    swift_errorRelease(v29);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
  }
  v38 = *(_QWORD *)(v0 + 168);
  v39 = *(_QWORD *)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A91580(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1009D0214((_QWORD *)a2);
  v10 = sub_1009D0214((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_1001C748C((_QWORD *)a2);
    sub_1001C748C((_QWORD *)a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_1001C748C((_QWORD *)a2);
    sub_1001C748C((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100A9175C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1009CDF2C(a2);
  v10 = sub_1009CDF2C(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 72));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_1009CDD6C(a2);
    sub_1009CDD6C(a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_1009CDD6C(a2);
    sub_1009CDD6C(a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100A91938(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  _BYTE v19[200];

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_10004A160(a2, (uint64_t)v19, &qword_1011D32C0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(v19[137]);
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v18);
    swift_bridgeObjectRelease();
    sub_10004FF60((uint64_t)v19, &qword_1011D32C0);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_10004FF60((uint64_t)v19, &qword_1011D32C0);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100A91B1C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011D1B48 != -1)
    swift_once(&qword_1011D1B48, sub_1009AAD98);
  v9 = sub_100048B14(v5, (uint64_t)qword_1011D3628);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_100974678((_QWORD *)a2);
  v10 = sub_100974678((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 32));
    *(_QWORD *)(v13 + 4) = sub_10099627C(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_100496C9C((_QWORD *)a2);
    sub_100496C9C((_QWORD *)a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100496C9C((_QWORD *)a2);
    sub_100496C9C((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MusicLibrary.ActionableState.description.getter(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  void *object;
  Swift::String v16;
  _QWORD v17[2];
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D77F0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = 1701736270;
  switch(HIBYTE(a2))
  {
    case 2:
      return result;
    case 3:
      result = 0x6164644120959EE2;
      break;
    case 4:
      result = 0x1000000000000013;
      break;
    case 5:
      result = 0x1000000000000014;
      break;
    default:
      if ((a2 & 0x100) != 0)
      {
        result = 0x100000000000001DLL;
      }
      else if ((a2 & 1) != 0)
      {
        result = 0x100000000000001ELL;
      }
      else
      {
        v19 = 0;
        v20 = 0xE000000000000000;
        _StringGuts.grow(_:)(24);
        v12 = swift_bridgeObjectRelease(v20);
        v19 = 0x1000000000000014;
        v20 = 0x8000000100E4F720;
        v17[1] = a1;
        static Locale.autoupdatingCurrent.getter(v12);
        v13 = sub_100A91F44();
        FloatingPointFormatStyle.Percent.init(locale:)(v6, &type metadata for Double, v13);
        v14 = sub_100049F28(&qword_1011D7800, &qword_1011D77F0, (uint64_t)&protocol conformance descriptor for FloatingPointFormatStyle<A>.Percent);
        BinaryFloatingPoint.formatted<A>(_:)(&v18, v10, &type metadata for Double, v7, v13, v14);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        object = v18._object;
        String.append(_:)(v18);
        swift_bridgeObjectRelease(object);
        v16._countAndFlagsBits = 8233;
        v16._object = (void *)0xE200000000000000;
        String.append(_:)(v16);
        result = v19;
      }
      break;
  }
  return result;
}

unint64_t sub_100A91F44()
{
  unint64_t result;

  result = qword_1011D77F8;
  if (!qword_1011D77F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1011D77F8);
  }
  return result;
}

uint64_t sub_100A91F8C(uint64_t a1, uint64_t a2)
{
  return _s8MusicKit0A7LibraryC0A4CoreE15ActionableStateO21__derived_enum_equalsySbAF_AFtFZ_0(*(_QWORD *)a1, *(_WORD *)(a1 + 8), *(_QWORD *)a2, *(_WORD *)(a2 + 8));
}

uint64_t sub_100A91FA4()
{
  uint64_t v0;

  return MusicLibrary.ActionableState.description.getter(*(_QWORD *)v0, *(_WORD *)(v0 + 8));
}

uint64_t MusicLibrary.performAction<A>(for:on:itemState:alertPresenter:noticePresenter:presentationSource:actionsObserver:metricsReportingContext:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  uint64_t v37;

  *(_QWORD *)(v9 + 1176) = v8;
  *(_QWORD *)(v9 + 1168) = v37;
  *(_OWORD *)(v9 + 1152) = v36;
  *(_QWORD *)(v9 + 1144) = a8;
  *(_QWORD *)(v9 + 1136) = a7;
  *(_QWORD *)(v9 + 1128) = a6;
  *(_QWORD *)(v9 + 1120) = a5;
  *(_QWORD *)(v9 + 1112) = a4;
  *(_QWORD *)(v9 + 1104) = a3;
  *(_WORD *)(v9 + 354) = a2;
  *(_QWORD *)(v9 + 1096) = a1;
  v10 = *a4;
  *(_QWORD *)(v9 + 1184) = *a4;
  v11 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  *(_QWORD *)(v9 + 1192) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 1200) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1208) = swift_task_alloc(v13);
  *(_QWORD *)(v9 + 1216) = swift_task_alloc(v13);
  *(_QWORD *)(v9 + 1224) = swift_task_alloc(v13);
  v14 = sub_100007E8C(&qword_1011D2AE0);
  *(_QWORD *)(v9 + 1232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011D2EB8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1240) = swift_task_alloc(v15);
  *(_QWORD *)(v9 + 1248) = swift_task_alloc(v15);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  *(_QWORD *)(v9 + 1256) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v9 + 1264) = v17;
  *(_QWORD *)(v9 + 1272) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Notice.Variant(0);
  *(_QWORD *)(v9 + 1280) = v18;
  *(_QWORD *)(v9 + 1288) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  *(_QWORD *)(v9 + 1296) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v9 + 1304) = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1312) = swift_task_alloc(v21);
  *(_QWORD *)(v9 + 1320) = swift_task_alloc(v21);
  *(_QWORD *)(v9 + 1328) = swift_task_alloc(v21);
  v22 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  *(_QWORD *)(v9 + 1336) = v22;
  v23 = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v9 + 1344) = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1352) = swift_task_alloc(v24);
  *(_QWORD *)(v9 + 1360) = swift_task_alloc(v24);
  v25 = type metadata accessor for MusicLibrary.AddStatus(0);
  *(_QWORD *)(v9 + 1368) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v9 + 1376) = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1384) = swift_task_alloc(v27);
  *(_QWORD *)(v9 + 1392) = swift_task_alloc(v27);
  v28 = *(_QWORD *)(v10 + class metadata base offset for MusicLibrary.ItemState);
  *(_QWORD *)(v9 + 1400) = v28;
  v29 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v9 + 1408) = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1416) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 1424) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 1432) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 1440) = swift_task_alloc(v30);
  v31 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 1448) = v31;
  *(_QWORD *)(v9 + 1456) = static MainActor.shared.getter(v32);
  v33 = dispatch thunk of Actor.unownedExecutor.getter(v31, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 1464) = v33;
  *(_QWORD *)(v9 + 1472) = v34;
  return swift_task_switch(sub_100A92254, v33, v34);
}

uint64_t sub_100A92254()
{
  NSObject *v0;
  os_log_t v1;
  Class isa;
  Class v3;
  Class v4;
  Class v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  Class v12;
  Class v13;
  Class v14;
  Class v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __n128 v20;
  void (*v21)(Class, Class, __n128);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  __n128 v34;
  Class v35;
  Class v36;
  Class v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  __n128 v49;
  Class v50;
  Class v51;
  Class v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  NSObject *v58;
  char *v59;
  char *v60;
  __n128 v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  __n128 v66;
  Class v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  char *v72;
  __n128 v73;
  __n128 v74;
  char *v75;
  char *v76;
  __n128 v77;
  uint64_t v78;
  __n128 v79;
  unsigned int v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  unint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  int v88;
  void (*v89)(Class, Class, Class);
  Class v90;
  Class v91;
  Class v92;
  Class v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  _BOOL4 v97;
  __n128 v98;
  void (*v99)(Class, Class);
  Class v100;
  Class v101;
  Class v102;
  os_log_t v103;
  Class v104;
  uint64_t v105;
  __int16 v106;
  uint64_t v107;
  char *v108;
  char *v109;
  __n128 v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  __n128 v115;
  __n128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  __n128 v121;
  Class v122;
  char *v123;
  char *v124;
  __n128 v125;
  uint64_t v126;
  char *v127;
  char *v128;
  NSObject *v129;
  os_log_type_t v130;
  _BOOL4 v131;
  uint8_t *v132;
  objc_class *v133;
  Class v135;
  Class v136;
  Class v137;
  uint64_t v138;
  Class v139;
  Class v140;
  Class v141;
  Class v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  Class v147;
  Class v148;
  Class v149;
  Class v150;
  NSObject *v151;
  uint64_t (*v152)(Class, Class, Class);
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  _BOOL4 v156;
  Class v157;
  Class v158;
  Class v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  __n128 v165;
  void (*v166)(Class, Class, __n128);
  NSObject *v167;
  os_log_type_t v168;
  uint8_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  Class v176;
  uint64_t v177;
  objc_class *v178;
  objc_class *v179;
  int64x2_t v180;
  int64x2_t v181;
  uint64_t v182;
  objc_class *v183;
  NSObject *v184;
  os_log_type_t v185;
  uint8_t *v186;
  uint64_t v187;
  uint64_t v188;
  Class v189;
  Class v190;
  uint64_t v191;
  _QWORD *v192;
  Class v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t (*v199)();
  uint64_t v200;
  objc_class *v201;
  Class v202;
  uint64_t v203;
  NSObject *v204;
  os_log_type_t v205;
  _BOOL4 v206;
  __n128 v207;
  void (*v208)(Class, Class);
  Class v209;
  Class v210;
  Class v211;
  os_log_t v212;
  Class v213;
  uint64_t v214;
  __int16 v215;
  uint64_t v216;
  char *v217;
  char *v218;
  __n128 v219;
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  __n128 v224;
  __n128 v225;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  __n128 v230;
  Class v231;
  char *v232;
  char *v233;
  __n128 v234;
  char *v235;
  char *v236;
  uint8_t *v237;
  Class v238;
  Class v239;
  Class v240;
  __n128 v241;
  Class v242;
  Class v243;
  Class v244;
  Class v245;
  NSObject *v246;
  Class v247;
  Class v248;
  Class v249;
  __int128 v250;
  uint64_t v251;
  NSObject *v252;
  os_log_type_t v253;
  _BOOL4 v254;
  Class v255;
  _QWORD *p_isa;
  Class v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  __n128 v265;
  void (*v266)(Class, uint64_t, __n128);
  NSObject *v267;
  os_log_type_t v268;
  uint8_t *v269;
  Class v270;
  Class v271;
  uint64_t ObjectType;
  void (*v273)(char *, ValueMetadata *, unint64_t, uint64_t, Class);
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  Class v277;
  uint64_t v278;
  Class v279;
  Class v280;
  unint64_t v281;
  uint64_t v282;
  objc_class *v283;
  Class v284;
  Class v285;
  objc_class *v286;
  Class v287;
  Class v288;
  Class v289;
  uint64_t v290;
  uint64_t v291;
  NSObject *v292;
  os_log_type_t v293;
  uint8_t *v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  int *v298;
  objc_class *v299;
  Class v300;
  Class v301;
  Class v302;
  Class v303;
  __n128 v304;
  void (*v305)(Class, Class, __n128);
  uint64_t v306;
  NSObject *v307;
  os_log_type_t v308;
  __n128 v309;
  Class v310;
  Class v311;
  uint64_t v312;
  uint64_t v313;
  __n128 v314;
  uint64_t v315;
  char *v316;
  NSObject *v317;
  char *v318;
  char *v319;
  __n128 v320;
  uint64_t v321;
  NSObject *v322;
  os_log_type_t v323;
  uint8_t *v324;
  uint64_t v325;
  _QWORD *v326;
  uint64_t v327;
  uint64_t v328;
  int *v329;
  objc_class *v330;
  os_log_t v331;
  uint64_t v332;
  Class v333;
  Class v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void *v344;
  uint64_t v345;
  uint64_t v346;
  NSObject *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  char v352;
  uint64_t v353;
  Class v354;
  uint64_t v355;
  Class v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  objc_class *v362;
  uint64_t v363;
  uint64_t WitnessTable;
  uint64_t v365;
  uint64_t v366;
  NSObject *v367;
  os_log_type_t v368;
  uint8_t *v369;
  Class v370;
  Class v371;
  Class v372;
  Class v373;
  Class v374;
  __n128 v375;
  uint64_t v376;
  NSObject *v377;
  os_log_type_t v378;
  _BOOL4 v379;
  Class v380;
  Class v381;
  NSObject *v382;
  Class v383;
  Class v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  char *v389;
  __n128 v390;
  void (*v391)(Class, Class, __n128);
  _QWORD *v392;
  uint64_t v393;
  int *v394;
  _QWORD *v395;
  Class v396;
  __n128 v397;
  uint64_t v398;
  objc_class *v399;
  NSObject *v400;
  uint64_t v401;
  os_log_type_t v402;
  uint8_t *v403;
  Class v404;
  Class v405;
  Class v406;
  unint64_t v407;
  __n128 v408;
  NSObject *v409;
  os_log_type_t v410;
  uint8_t *v411;
  os_log_t v412;
  Class v413;
  Class v414;
  Class v415;
  Class v416;
  Class v417;
  Class v418;
  Class v419;
  Class v420;
  Class v421;
  Class v422;
  Class v423;
  Class v424;
  Class v425;
  Class v426;
  Class v427;
  Class v428;
  Class v429;
  Class v430;
  Class v431;
  Class v432;
  Class v433;
  Class v434;
  Class v435;
  Class v436;
  uint64_t v437;
  void (*v438)(Class, Class, Class);
  Class v439;
  Class v440;
  uint64_t v441;
  Class v442;
  void (*v443)(Class, Class, __n128);
  Class v444;
  Class v445;
  os_log_t v446;
  Class v447;
  Class v448;
  Class v449;
  void (*v450)(Class, Class, Class);
  int64x2_t *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  Class v455;
  os_log_t log;
  os_log_t logc;
  os_log_t loga;
  uint64_t (*logd)(uint64_t, char);
  uint64_t (*loge)(char);
  NSObject *logf;
  os_log_t logb;
  os_log_t logg;
  uint64_t v464;
  os_log_type_t v465;
  uint64_t (*v466)(uint64_t, uint64_t, uint64_t);
  Class v467;
  uint64_t (*v468)(os_log_t, uint64_t, uint64_t);
  uint64_t v469;
  Class v470;
  uint64_t v471[2];

  v1 = v0;
  if (qword_1011D1DC8 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  isa = v0[180].isa;
  v3 = v0[176].isa;
  v4 = v0[175].isa;
  v5 = v0[138].isa;
  v6 = type metadata accessor for Logger(0);
  v0[185].isa = (Class)sub_100048B14(v6, (uint64_t)static Logger.libraryActionableState);
  v7 = *((_QWORD *)v3 + 2);
  v1[186].isa = (Class)v7;
  v8 = ((uint64_t (*)(Class, Class, Class))v7)(isa, v5, v4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  v11 = os_log_type_enabled(v9, v10);
  v12 = v1[180].isa;
  if (v11)
  {
    v13 = v1[179].isa;
    v14 = v1[176].isa;
    v15 = v1[175].isa;
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v471[0] = v17;
    *(_DWORD *)v16 = 136446210;
    ((void (*)(Class, Class, Class))v7)(v13, v12, v15);
    v18 = (char *)String.init<A>(describing:)(v13, v15);
    *(_QWORD *)(v16 + 4) = sub_10099627C(v18, v19, v471);
    v20 = swift_bridgeObjectRelease();
    v21 = (void (*)(Class, Class, __n128))*((_QWORD *)v14 + 1);
    v21(v12, v15, v20);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "╭ Performing action for item: %{public}s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    v21 = (void (*)(Class, Class, __n128))*((_QWORD *)v1[176].isa + 1);
    ((void (*)(Class, Class))v21)(v12, v1[175].isa);
  }

  v1[187].isa = (Class)v21;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint64_t)v1[137].isa;
    v26 = WORD1(v1[44].isa);
    v27 = swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    v471[0] = v28;
    *(_DWORD *)v27 = 136446210;
    v29 = (char *)MusicLibrary.ActionableState.description.getter(v25, v26);
    *(_QWORD *)(v27 + 4) = sub_10099627C(v29, v30, v471);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "| Actionable state: %{public}s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }

  v31 = swift_retain_n(v1[139].isa, 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter();
  log = v7;
  if (os_log_type_enabled(v32, v33))
  {
    v35 = v1[174].isa;
    v448 = v1[172].isa;
    v36 = v1[171].isa;
    v37 = v1[139].isa;
    v38 = swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v471[0] = v39;
    v40.n128_u64[0] = 136446210;
    *(_DWORD *)v38 = 136446210;
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v40);
    v41 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v42 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v36, v41);
    v44 = v43;
    (*((void (**)(Class, Class))v448 + 1))(v35, v36);
    *(_QWORD *)(v38 + 4) = sub_10099627C(v42, v44, v471);
    v45 = swift_bridgeObjectRelease();
    swift_release_n(v37, 2, v45);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "| Add status: %{public}s", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {
    swift_release_n(v1[139].isa, 2, v34);
  }

  v46 = swift_retain_n(v1[139].isa, 2);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v50 = v1[170].isa;
    v449 = v1[168].isa;
    v51 = v1[167].isa;
    v52 = v1[139].isa;
    v53 = swift_slowAlloc(12, -1);
    v54 = swift_slowAlloc(32, -1);
    v471[0] = v54;
    v55.n128_u64[0] = 136446210;
    *(_DWORD *)v53 = 136446210;
    dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v55);
    v56 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v57 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, v56);
    v58 = v1;
    v60 = v59;
    (*((void (**)(Class, Class))v449 + 1))(v50, v51);
    *(_QWORD *)(v53 + 4) = sub_10099627C(v57, v60, v471);
    v1 = v58;
    v61 = swift_bridgeObjectRelease();
    swift_release_n(v52, 2, v61);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "| Download status: %{public}s", (uint8_t *)v53, 0xCu);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v53, -1, -1);
  }
  else
  {
    swift_release_n(v1[139].isa, 2, v49);
  }

  v62 = swift_retain_n(v1[147].isa, 4);
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.default.getter();
  v65 = os_log_type_enabled(v63, v64);
  v67 = v1[147].isa;
  if (v65)
  {
    v68 = swift_slowAlloc(22, -1);
    v69 = swift_slowAlloc(64, -1);
    v471[0] = v69;
    v70.n128_u64[0] = 136446466;
    *(_DWORD *)v68 = 136446466;
    v71 = (char *)MusicLibrary.name.getter(v70);
    *(_QWORD *)(v68 + 4) = sub_10099627C(v71, v72, v471);
    v73 = swift_bridgeObjectRelease();
    swift_release_n(v67, 2, v73);
    *(_WORD *)(v68 + 12) = 2082;
    v75 = (char *)MusicLibrary.id.getter(v74);
    *(_QWORD *)(v68 + 14) = sub_10099627C(v75, v76, v471);
    v77 = swift_bridgeObjectRelease();
    swift_release_n(v67, 2, v77);
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "| Library: %{public}s (%{public}s)", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy(v69, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v69, -1, -1);
    swift_slowDealloc(v68, -1, -1);
  }
  else
  {
    swift_release_n(v1[147].isa, 4, v66);
  }

  v80 = WORD1(v1[44].isa);
  switch(v80 >> 8)
  {
    case 2u:
      v81 = Logger.logObject.getter(v78);
      v82 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v83 = 0;
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "|—● Nothing to Perform: Actionable State is unknown", v83, 2u);
        swift_slowDealloc(v83, -1, -1);
      }

      v84 = sub_100A9C6EC();
      v85 = swift_allocError(&_s15ActionableStateO5ErrorON, v84, 0, 0);
      swift_willThrow(v86);
      goto LABEL_21;
    case 3u:
      v135 = v1[173].isa;
      v136 = v1[172].isa;
      v137 = v1[171].isa;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v79);
      v138 = (*((uint64_t (**)(Class, Class))v136 + 11))(v135, v137);
      if ((_DWORD)v138 == enum case for MusicLibrary.AddStatus.unaddable(_:))
      {
        v139 = v1[173].isa;
        v140 = v1[166].isa;
        v141 = v1[163].isa;
        v142 = v1[162].isa;
        (*((void (**)(Class, Class))v1[172].isa + 12))(v139, v1[171].isa);
        v143 = (*((uint64_t (**)(Class, Class, Class))v141 + 4))(v140, v139, v142);
        v144 = Logger.logObject.getter(v143);
        v145 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v144, v145))
        {
          v146 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v146 = 0;
          _os_log_impl((void *)&_mh_execute_header, v144, v145, "|—● Unaddable", v146, 2u);
          swift_slowDealloc(v146, -1, -1);
        }
        v147 = v1[166].isa;
        v148 = v1[165].isa;
        v149 = v1[163].isa;
        v150 = v1[162].isa;

        v151 = v1;
        v152 = (uint64_t (*)(Class, Class, Class))*((_QWORD *)v149 + 2);
        v153 = v152(v148, v147, v150);
        v154 = Logger.logObject.getter(v153);
        v155 = static os_log_type_t.default.getter();
        v156 = os_log_type_enabled(v154, v155);
        v157 = v151[165].isa;
        v158 = v151[163].isa;
        loga = v151;
        v159 = v151[162].isa;
        if (v156)
        {
          v160 = swift_slowAlloc(12, -1);
          v161 = swift_slowAlloc(32, -1);
          v471[0] = v161;
          *(_DWORD *)v160 = 136446210;
          v162 = sub_100048748(&qword_1011D2FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
          v163 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v159, v162);
          *(_QWORD *)(v160 + 4) = sub_10099627C(v163, v164, v471);
          v165 = swift_bridgeObjectRelease();
          v166 = (void (*)(Class, Class, __n128))*((_QWORD *)v158 + 1);
          v166(v157, v159, v165);
          _os_log_impl((void *)&_mh_execute_header, v154, v155, "|—| Reason: %{public}s", (uint8_t *)v160, 0xCu);
          swift_arrayDestroy(v161, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v161, -1, -1);
          swift_slowDealloc(v160, -1, -1);
        }
        else
        {
          v166 = (void (*)(Class, Class, __n128))*((_QWORD *)v158 + 1);
          ((void (*)(Class, Class))v166)(v157, v151[162].isa);
        }

        loga[188].isa = (Class)v166;
        v287 = loga[164].isa;
        v288 = loga[163].isa;
        v289 = loga[162].isa;
        v152(v287, loga[166].isa, v289);
        v290 = (*((uint64_t (**)(Class, Class))v288 + 11))(v287, v289);
        if ((_DWORD)v290 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
        {
          v291 = (uint64_t)&loga[84];
          v292 = Logger.logObject.getter(v290);
          v293 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v292, v293))
          {
            v294 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v294 = 0;
            _os_log_impl((void *)&_mh_execute_header, v292, v293, "|—| Presenting Explicit Restriction alert", v294, 2u);
            swift_slowDealloc(v294, -1, -1);
          }
          v295 = loga[140].isa;

          v296 = v295[3];
          v297 = v295[4];
          sub_100007E68(v295, v296);
          sub_100A56824(0, v291);
          v298 = *(int **)(v297 + 8);
          v466 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v298 + *v298);
          v299 = (objc_class *)swift_task_alloc(v298[1]);
          loga[189].isa = v299;
          *(_QWORD *)v299 = loga;
          *((_QWORD *)v299 + 1) = sub_100A947D8;
          return v466(v291, v296, v297);
        }
        if ((_DWORD)v290 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
        {
          v321 = (uint64_t)&loga[59];
          v322 = Logger.logObject.getter(v290);
          v323 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v322, v323))
          {
            v324 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v324 = 0;
            _os_log_impl((void *)&_mh_execute_header, v322, v323, "|—| Presenting Cloud Library Requirement alert", v324, 2u);
            swift_slowDealloc(v324, -1, -1);
          }
          v325 = (uint64_t)loga[142].isa;

          sub_10004A160(v325, v321, &qword_1011D2F20);
          if (loga[66].isa == (Class)1)
          {
            v326 = loga[140].isa;
            sub_10004FF60(v321, &qword_1011D2F20);
            v327 = v326[3];
            v328 = v326[4];
            sub_100007E68(v326, v327);
            sub_100A56630(1, (uint64_t)&loga[77]);
            v329 = *(int **)(v328 + 8);
            v468 = (uint64_t (*)(os_log_t, uint64_t, uint64_t))((char *)v329 + *v329);
            v330 = (objc_class *)swift_task_alloc(v329[1]);
            loga[196].isa = v330;
            *(_QWORD *)v330 = loga;
            *((_QWORD *)v330 + 1) = sub_100A94D60;
            v331 = loga + 77;
            v332 = v327;
            return v468(v331, v332, v328);
          }
          v396 = loga[181].isa;
          sub_100064EF0(v321, (uint64_t)&loga[68]);
          loga[190].isa = (Class)static MainActor.shared.getter(v397);
          v398 = dispatch thunk of Actor.unownedExecutor.getter(v396, &protocol witness table for MainActor);
          loga[191].isa = (Class)v398;
          loga[192].isa = v399;
          return swift_task_switch(sub_100A94A0C, v398, v399);
        }
        else
        {
          v1 = loga;
          if ((_DWORD)v290 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
          {
            swift_release();
            v367 = Logger.logObject.getter(v366);
            v368 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v367, v368))
            {
              v369 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v369 = 0;
              _os_log_impl((void *)&_mh_execute_header, v367, v368, "|—| Presenting upsell", v369, 2u);
              swift_slowDealloc(v369, -1, -1);
            }
            v370 = loga[166].isa;
            v371 = loga[162].isa;

            loga[122].isa = 0;
            *(_OWORD *)&loga[118].isa = 0u;
            *(_OWORD *)&loga[120].isa = 0u;
            LOBYTE(loga[123].isa) = -1;
            _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0((uint64_t)&loga[118]);
            sub_1002A4CE4((uint64_t)&loga[118]);
            v365 = ((uint64_t (*)(Class, Class))v166)(v370, v371);
            goto LABEL_91;
          }
          v400 = Logger.logObject.getter(v290);
          v402 = static os_log_type_t.info.getter(v400, v401);
          if (os_log_type_enabled(v400, v402))
          {
            v403 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v403 = 0;
            _os_log_impl((void *)&_mh_execute_header, v400, v402, "|—| Unaddable reason is not supported by the UI", v403, 2u);
            swift_slowDealloc(v403, -1, -1);
          }
          v404 = loga[166].isa;
          v405 = loga[164].isa;
          v406 = loga[162].isa;

          v407 = sub_100A9C6EC();
          v85 = swift_allocError(&_s15ActionableStateO5ErrorON, v407, 0, 0);
          swift_willThrow(v408);
          ((void (*)(Class, Class))v166)(v404, v406);
          ((void (*)(Class, Class))v166)(v405, v406);
LABEL_21:
          v1[211].isa = (Class)v85;
          v1[136].isa = (Class)v85;
          swift_errorRetain(v85);
          v87 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
          v88 = swift_dynamicCast(v87, &v1[136], v87, &_s15ActionableStateO5ErrorON, 0);
          v89 = (void (*)(Class, Class, Class))v1[186].isa;
          v90 = v1[175].isa;
          v91 = v1[139].isa;
          v92 = v1[138].isa;
          if (v88)
          {
            v93 = v1[178].isa;
            swift_errorRelease(v85);
            v89(v93, v92, v90);
            v94 = swift_retain_n(v91, 4);
            v95 = Logger.logObject.getter(v94);
            v96 = static os_log_type_t.error.getter(v95);
            v97 = os_log_type_enabled(v95, v96);
            v99 = (void (*)(Class, Class))v1[187].isa;
            if (v97)
            {
              v445 = v1[178].isa;
              v450 = (void (*)(Class, Class, Class))v1[186].isa;
              v435 = v1[179].isa;
              v440 = v1[175].isa;
              v100 = v1[174].isa;
              v101 = v1[171].isa;
              v102 = v1[170].isa;
              v432 = v1[168].isa;
              v426 = v1[172].isa;
              v429 = v1[167].isa;
              logc = (os_log_t)v1[187].isa;
              v103 = v1;
              v104 = v1[139].isa;
              v105 = (uint64_t)v103[137].isa;
              v106 = WORD1(v103[44].isa);
              v107 = swift_slowAlloc(52, -1);
              v464 = swift_slowAlloc(160, -1);
              v471[0] = v464;
              *(_DWORD *)v107 = 136447234;
              v108 = (char *)MusicLibrary.ActionableState.description.getter(v105, v106);
              *(_QWORD *)(v107 + 4) = sub_10099627C(v108, v109, v471);
              v110 = swift_bridgeObjectRelease();
              *(_WORD *)(v107 + 12) = 2082;
              dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v110);
              v111 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
              v112 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v101, v111);
              v114 = v113;
              (*((void (**)(Class, Class))v426 + 1))(v100, v101);
              *(_QWORD *)(v107 + 14) = sub_10099627C(v112, v114, v471);
              v115 = swift_bridgeObjectRelease();
              swift_release_n(v104, 2, v115);
              *(_WORD *)(v107 + 22) = 2082;
              dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v116);
              v117 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
              v118 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v429, v117);
              v120 = v119;
              (*((void (**)(Class, Class))v432 + 1))(v102, v429);
              *(_QWORD *)(v107 + 24) = sub_10099627C(v118, v120, v471);
              v121 = swift_bridgeObjectRelease();
              v122 = v104;
              v1 = v103;
              swift_release_n(v122, 2, v121);
              *(_WORD *)(v107 + 32) = 2082;
              v450(v435, v445, v440);
              v123 = (char *)String.init<A>(describing:)(v435, v440);
              *(_QWORD *)(v107 + 34) = sub_10099627C(v123, v124, v471);
              v125 = swift_bridgeObjectRelease();
              v126 = ((uint64_t (*)(Class, Class, __n128))logc)(v445, v440, v125);
              *(_WORD *)(v107 + 42) = 2082;
              v127 = (char *)String.init<A>(describing:)(v126, &_s15ActionableStateO5ErrorON);
              *(_QWORD *)(v107 + 44) = sub_10099627C(v127, v128, v471);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v95, v96, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
                "\n"
                "Error: %{public}s",
                (uint8_t *)v107,
                0x34u);
              swift_arrayDestroy(v464, 5, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v464, -1, -1);
              swift_slowDealloc(v107, -1, -1);
            }
            else
            {
              v279 = v1[178].isa;
              v280 = v1[175].isa;
              swift_release_n(v1[139].isa, 4, v98);
              v99(v279, v280);
            }

            v281 = sub_100A9C6EC();
            v1[212].isa = (Class)v281;
            v282 = swift_allocError(&_s15ActionableStateO5ErrorON, v281, 0, 0);
            v1[213].isa = (Class)v282;
            v283 = (objc_class *)swift_task_alloc(dword_1011D781C);
            v1[214].isa = v283;
            *(_QWORD *)v283 = v1;
            *((_QWORD *)v283 + 1) = sub_100A957C0;
            return sub_100A97AB8(v282, (uint64_t)v1[137].isa, WORD1(v1[44].isa), (_QWORD *)v1[139].isa, (uint64_t)v1[140].isa);
          }
          else
          {
            v202 = v1[177].isa;
            swift_errorRelease(v1[136].isa);
            v89(v202, v92, v90);
            swift_retain_n(v91, 3);
            swift_errorRetain(v85);
            swift_retain();
            v203 = swift_errorRetain(v85);
            v204 = Logger.logObject.getter(v203);
            v205 = static os_log_type_t.error.getter(v204);
            v206 = os_log_type_enabled(v204, v205);
            v208 = (void (*)(Class, Class))v1[187].isa;
            if (v206)
            {
              v443 = (void (*)(Class, Class, __n128))v1[187].isa;
              v446 = v1 + 135;
              v433 = v1[177].isa;
              v438 = (void (*)(Class, Class, Class))v1[186].isa;
              v427 = v1[179].isa;
              v430 = v1[175].isa;
              v209 = v1[174].isa;
              v210 = v1[171].isa;
              v211 = v1[170].isa;
              v424 = v1[168].isa;
              v421 = v1[172].isa;
              v422 = v1[167].isa;
              logf = v204;
              v212 = v1;
              v213 = v1[139].isa;
              v465 = v205;
              v214 = (uint64_t)v212[137].isa;
              v215 = WORD1(v212[44].isa);
              v216 = swift_slowAlloc(52, -1);
              v453 = swift_slowAlloc(160, -1);
              v471[0] = v453;
              *(_DWORD *)v216 = 136447234;
              v217 = (char *)MusicLibrary.ActionableState.description.getter(v214, v215);
              *(_QWORD *)(v216 + 4) = sub_10099627C(v217, v218, v471);
              v219 = swift_bridgeObjectRelease();
              *(_WORD *)(v216 + 12) = 2082;
              dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v219);
              v220 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
              v221 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v210, v220);
              v223 = v222;
              (*((void (**)(Class, Class))v421 + 1))(v209, v210);
              *(_QWORD *)(v216 + 14) = sub_10099627C(v221, v223, v471);
              v224 = swift_bridgeObjectRelease();
              swift_release_n(v213, 2, v224);
              *(_WORD *)(v216 + 22) = 2082;
              dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v225);
              v226 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
              v227 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v422, v226);
              v229 = v228;
              (*((void (**)(Class, Class))v424 + 1))(v211, v422);
              *(_QWORD *)(v216 + 24) = sub_10099627C(v227, v229, v471);
              v230 = swift_bridgeObjectRelease();
              v231 = v213;
              v1 = v212;
              swift_release_n(v231, 2, v230);
              *(_WORD *)(v216 + 32) = 2082;
              v438(v427, v433, v430);
              v232 = (char *)String.init<A>(describing:)(v427, v430);
              *(_QWORD *)(v216 + 34) = sub_10099627C(v232, v233, v471);
              v234 = swift_bridgeObjectRelease();
              v443(v433, v430, v234);
              *(_WORD *)(v216 + 42) = 2082;
              v212[135].isa = (Class)v85;
              swift_errorRetain(v85);
              v235 = (char *)String.init<A>(describing:)(v446, v87);
              *(_QWORD *)(v216 + 44) = sub_10099627C(v235, v236, v471);
              swift_bridgeObjectRelease();
              swift_errorRelease(v85);
              swift_errorRelease(v85);
              _os_log_impl((void *)&_mh_execute_header, logf, v465, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
                "\n"
                "Error: %{public}s",
                (uint8_t *)v216,
                0x34u);
              swift_arrayDestroy(v453, 5, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v453, -1, -1);
              swift_slowDealloc(v216, -1, -1);

            }
            else
            {
              v284 = v1[177].isa;
              v285 = v1[175].isa;
              swift_release_n(v1[139].isa, 4, v207);
              v208(v284, v285);
              swift_errorRelease(v85);
              swift_errorRelease(v85);

            }
            v286 = (objc_class *)swift_task_alloc(dword_1011D781C);
            v1[215].isa = v286;
            *(_QWORD *)v286 = v1;
            *((_QWORD *)v286 + 1) = sub_100A95A04;
            return sub_100A97AB8(v85, (uint64_t)v1[137].isa, WORD1(v1[44].isa), (_QWORD *)v1[139].isa, (uint64_t)v1[140].isa);
          }
        }
      }
      else
      {
        v267 = Logger.logObject.getter(v138);
        v268 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v267, v268))
        {
          v269 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v269 = 0;
          _os_log_impl((void *)&_mh_execute_header, v267, v268, "|—● Adding to library", v269, 2u);
          swift_slowDealloc(v269, -1, -1);
        }
        v270 = v1[143].isa;

        if (v270)
        {
          v271 = v1[144].isa;
          ObjectType = swift_getObjectType();
          BYTE1(v1[44].isa) = 0;
          v273 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, Class))*((_QWORD *)v271 + 1);
          v274 = sub_10098C6E4();
          v273((char *)&v1[44].isa + 1, &type metadata for ActionType, v274, ObjectType, v271);
        }
        sub_10004A160((uint64_t)v1[141].isa, (uint64_t)&v1[124], &qword_1011D2F28);
        v275 = (uint64_t)v1[127].isa;
        if (v275)
        {
          v276 = (uint64_t)v1[161].isa;
          v277 = v1[160].isa;
          v278 = (uint64_t)v1[128].isa;
          sub_100007E68(&v1[124].isa, (uint64_t)v1[127].isa);
          swift_storeEnumTagMultiPayload(v276, v277, 7);
          sub_1009FF5F0(v276, 0, v275, v278);
          sub_10005B748(v276, type metadata accessor for Notice.Variant);
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v1[124].isa);
        }
        else
        {
          sub_10004FF60((uint64_t)&v1[124], &qword_1011D2F28);
        }
        v333 = v1[158].isa;
        v334 = v1[157].isa;
        v335 = (uint64_t)v1[156].isa;
        sub_10004A160((uint64_t)v1[145].isa, v335, &qword_1011D2EB8);
        if ((*((unsigned int (**)(uint64_t, uint64_t, Class))v333 + 6))(v335, 1, v334) == 1)
        {
          sub_10004FF60((uint64_t)v1[156].isa, &qword_1011D2EB8);
        }
        else
        {
          v336 = (uint64_t)v1[175].isa;
          v337 = (uint64_t *)v1[159].isa;
          v338 = (uint64_t)v1[154].isa;
          sub_1002ED50C((uint64_t)v1[156].isa, (uint64_t)v337);
          v469 = MusicItem.metricsTargetIdentifier.getter(v336);
          v454 = v339;
          v340 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v340 - 8) + 56))(v338, 1, 1, v340);
          v341 = sub_100007E8C(&qword_1011D2F00);
          v342 = swift_allocObject(v341, 80, 7);
          *(_OWORD *)(v342 + 16) = xmmword_100EA7A80;
          *(_QWORD *)(v342 + 32) = MusicItem.metricsContentType.getter(v336);
          *(_QWORD *)(v342 + 40) = v343;
          *(_BYTE *)(v342 + 48) = 0;
          *(_QWORD *)(v342 + 56) = 0;
          *(_QWORD *)(v342 + 64) = 0;
          *(_BYTE *)(v342 + 72) = 1;
          v344 = sub_1009AF7AC(v342);
          v346 = v345;
          v347 = v1;
          v349 = v348;
          v351 = v350;
          v352 = BYTE1(v350);
          swift_setDeallocating(v342);
          swift_arrayDestroy(v342 + 32, *(_QWORD *)(v342 + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
          swift_deallocClassInstance(v342, 32, 7);
          sub_1009AFBBC(v469, v454, 5, 2, v338, v344, v346, v349, v351, v337);
          v353 = v349;
          v1 = v347;
          sub_10056C15C(v344, v346, v353, v351, v352);
          swift_bridgeObjectRelease();
          sub_10004FF60(v338, &qword_1011D2AE0);
          sub_10005B748((uint64_t)v337, type metadata accessor for Actions.MetricsReportingContext);
        }
        v354 = v1[176].isa;
        v355 = (uint64_t)v1[175].isa;
        v356 = v1[138].isa;
        v357 = sub_100A9BBC8(v355, v355);
        v358 = swift_allocObject(v357, ((*((unsigned __int8 *)v354 + 80) + (unint64_t)*(unsigned int *)(v357 + 48)) & ~(unint64_t)*((unsigned __int8 *)v354 + 80))+ *((_QWORD *)v354 + 9), *((unsigned __int8 *)v354 + 80) | (unint64_t)*(unsigned __int16 *)(v357 + 52));
        v359 = static Array._adoptStorage(_:count:)(v358, 1);
        ((void (*)(uint64_t, Class, uint64_t))log)(v360, v356, v355);
        v361 = sub_10014273C(v359);
        v1[197].isa = (Class)v361;
        v1[134].isa = (Class)v361;
        v362 = (objc_class *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
        v1[198].isa = v362;
        v363 = type metadata accessor for Array(0);
        WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v363);
        *(_QWORD *)v362 = v1;
        *((_QWORD *)v362 + 1) = sub_100A94DBC;
        return MusicLibrary.add<A, B>(_:)(&v1[134], v363, v1[175].isa, WitnessTable, v1[146].isa);
      }
    case 4u:
      v451 = (int64x2_t *)&v1[113];
      v167 = Logger.logObject.getter(v78);
      v168 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v167, v168))
      {
        v169 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v169 = 0;
        _os_log_impl((void *)&_mh_execute_header, v167, v168, "|—● Triggering download", v169, 2u);
        swift_slowDealloc(v169, -1, -1);
      }
      v170 = (uint64_t)v1[179].isa;
      v171 = (uint64_t)v1[175].isa;
      v172 = (uint64_t)v1[155].isa;
      v173 = (uint64_t)v1[147].isa;
      v436 = v1[148].isa;
      v441 = (uint64_t)v1[146].isa;
      v174 = (uint64_t)v1[145].isa;
      v175 = (uint64_t)v1[140].isa;
      v176 = v1[138].isa;

      ((void (*)(uint64_t, Class, uint64_t))log)(v170, v176, v171);
      sub_100064C78(v175, (uint64_t)&v1[129]);
      sub_10004A160(v174, v172, &qword_1011D2EB8);
      v177 = *(_QWORD *)((char *)v436 + class metadata base offset for MusicLibrary.ItemState + 8);
      swift_retain();
      Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v170, v173, (__int128 *)&v1[129], v172, v171, v441, v177, (unint64_t (**)())&v1[112]);
      v178 = v1[112].isa;
      v179 = v1[117].isa;
      v1[202].isa = v179;
      v1[45].isa = v178;
      v180 = *v451;
      v181 = *(int64x2_t *)&v1[115].isa;
      *(int64x2_t *)&v1[200].isa = vzip1q_s64(*v451, v181);
      *(int64x2_t *)&v1[46].isa = v180;
      *(int64x2_t *)&v1[48].isa = v181;
      v1[50].isa = v179;
      LOBYTE(v1[51].isa) = 9;
      v1[54].isa = (Class)0x4014000000000000;
      v1[55].isa = (Class)&unk_1011D3300;
      v1[56].isa = 0;
      v1[57].isa = (Class)&unk_1011D3308;
      v182 = unk_1011D7844;
      logd = (uint64_t (*)(uint64_t, char))((char *)&dword_1011D7840 + dword_1011D7840);
      v1[52].isa = (Class)sub_10098CA8C;
      v1[53].isa = 0;
      v1[58].isa = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      v183 = (objc_class *)swift_task_alloc(v182);
      v1[203].isa = v183;
      *(_QWORD *)v183 = v1;
      *((_QWORD *)v183 + 1) = sub_100A95070;
      return logd((uint64_t)logd, 1);
    case 5u:
      v184 = Logger.logObject.getter(v78);
      v185 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v184, v185))
      {
        v186 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v186 = 0;
        _os_log_impl((void *)&_mh_execute_header, v184, v185, "|—● Is Downloaded: Prompting for delete/remove alert", v186, 2u);
        swift_slowDealloc(v186, -1, -1);
      }
      v187 = (uint64_t)v1[179].isa;
      v188 = (uint64_t)v1[175].isa;
      v189 = v1[158].isa;
      v190 = v1[157].isa;
      v191 = (uint64_t)v1[155].isa;
      v442 = v1[148].isa;
      v452 = (uint64_t)v1[146].isa;
      v192 = v1[140].isa;
      v193 = v1[138].isa;

      v194 = v192[3];
      v437 = v192[4];
      v195 = sub_100007E68(v192, v194);
      ((void (*)(uint64_t, Class, uint64_t))log)(v187, v193, v188);
      v196 = *(_QWORD *)(v194 - 8);
      v197 = swift_task_alloc((*(_QWORD *)(v196 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v196 + 16))(v197, v195, v194);
      (*((void (**)(uint64_t, uint64_t, uint64_t, Class))v189 + 7))(v191, 1, 1, v190);
      v198 = type metadata accessor for MusicLibrary(0);
      v199 = (uint64_t (*)())static MusicLibrary.shared.getter(v198);
      Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(v187, v197, v199, v191, v188, v194, v452, *(_QWORD *)((char *)v442 + class metadata base offset for MusicLibrary.ItemState + 8), (uint64_t (**)())&v1[27], v437);
      swift_task_dealloc(v197);
      sub_10099D048((uint64_t)&v1[27], (uint64_t)&v1[2]);
      v200 = swift_allocObject(&unk_1010F4298, 32, 7);
      *(_QWORD *)(v200 + 16) = &unk_1011D3210;
      *(_QWORD *)(v200 + 24) = 0;
      BYTE1(v1[19].isa) = 39;
      v1[20].isa = (Class)sub_10099A080;
      v1[21].isa = 0;
      v1[22].isa = (Class)0x403E000000000000;
      v1[23].isa = (Class)&unk_1011D3228;
      v1[24].isa = (Class)v200;
      v1[25].isa = (Class)&unk_1011D3218;
      v1[26].isa = 0;
      sub_10099DD20(&v1[27].isa);
      loge = (uint64_t (*)(char))((char *)&dword_1011D7830 + dword_1011D7830);
      v201 = (objc_class *)swift_task_alloc(unk_1011D7834);
      v1[209].isa = v201;
      *(_QWORD *)v201 = v1;
      *((_QWORD *)v201 + 1) = sub_100A95738;
      return loge(1);
    default:
      v129 = Logger.logObject.getter(v78);
      v130 = static os_log_type_t.default.getter();
      v131 = os_log_type_enabled(v129, v130);
      if ((v80 & 0x100) == 0)
      {
        if (v131)
        {
          v132 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v132 = 0;
          _os_log_impl((void *)&_mh_execute_header, v129, v130, "|—● Cancelling download", v132, 2u);
          swift_slowDealloc(v132, -1, -1);
        }

        v133 = (objc_class *)swift_task_alloc(async function pointer to MusicLibrary.cancelDownload<A>(_:)[1]);
        v1[205].isa = v133;
        *(_QWORD *)v133 = v1;
        *((_QWORD *)v133 + 1) = sub_100A952E0;
        return MusicLibrary.cancelDownload<A>(_:)(v1[138].isa, v1[175].isa, v1[146].isa);
      }
      if (v131)
      {
        v237 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v237 = 0;
        _os_log_impl((void *)&_mh_execute_header, v129, v130, "|—● Download is paused: Checking for reasons…", v237, 2u);
        swift_slowDealloc(v237, -1, -1);
      }
      v238 = v1[169].isa;
      v239 = v1[168].isa;
      v240 = v1[167].isa;

      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v241);
      if ((*((unsigned int (**)(Class, Class))v239 + 11))(v238, v240) != enum case for MusicLibrary.DownloadStatus.paused(_:))
      {
        v300 = v1[169].isa;
        v301 = v1[168].isa;
        v302 = v1[167].isa;
        v303 = v1[139].isa;
        v304 = swift_release();
        v305 = (void (*)(Class, Class, __n128))*((_QWORD *)v301 + 1);
        v305(v300, v302, v304);
        v306 = swift_retain_n(v303, 2);
        v307 = Logger.logObject.getter(v306);
        v308 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v307, v308))
        {
          v310 = v1[170].isa;
          v311 = v1[167].isa;
          v467 = v1[139].isa;
          v312 = swift_slowAlloc(12, -1);
          v313 = swift_slowAlloc(32, -1);
          v471[0] = v313;
          v314.n128_u64[0] = 136446210;
          *(_DWORD *)v312 = 136446210;
          dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v314);
          v315 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
          v316 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v311, v315);
          v317 = v1;
          v319 = v318;
          ((void (*)(Class, Class))v305)(v310, v311);
          *(_QWORD *)(v312 + 4) = sub_10099627C(v316, v319, v471);
          v1 = v317;
          v320 = swift_bridgeObjectRelease();
          swift_release_n(v467, 2, v320);
          _os_log_impl((void *)&_mh_execute_header, v307, v308, "|—| No reasons found, download status does not match UI state %{public}s", (uint8_t *)v312, 0xCu);
          swift_arrayDestroy(v313, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v313, -1, -1);
          swift_slowDealloc(v312, -1, -1);
        }
        else
        {
          swift_release_n(v1[139].isa, 2, v309);
        }

        goto LABEL_91;
      }
      v242 = v1[169].isa;
      v243 = v1[153].isa;
      v244 = v1[150].isa;
      v245 = v1[149].isa;
      (*((void (**)(Class, Class))v1[168].isa + 12))(v242, v1[167].isa);
      (*((void (**)(Class, Class, Class))v244 + 4))(v243, v242, v245);
      MusicLibrary.DownloadStatus.DownloadPauseReasons.alert.getter((uint64_t *)&v1[91]);
      sub_100065228((uint64_t)&v1[91], (uint64_t)&v1[105], &qword_1011DB830);
      if (!v1[110].isa)
      {
        v372 = v1[153].isa;
        v373 = v1[151].isa;
        v374 = v1[149].isa;
        v375 = swift_release();
        v376 = (*((uint64_t (**)(Class, Class, Class, __n128))v244 + 2))(v373, v372, v374, v375);
        v377 = Logger.logObject.getter(v376);
        v378 = static os_log_type_t.error.getter(v377);
        v379 = os_log_type_enabled(v377, v378);
        v380 = v1[153].isa;
        v381 = v1[151].isa;
        v382 = v1;
        v383 = v1[150].isa;
        logb = v382;
        v384 = v382[149].isa;
        if (v379)
        {
          v385 = swift_slowAlloc(12, -1);
          v386 = swift_slowAlloc(32, -1);
          v471[0] = v386;
          *(_DWORD *)v385 = 136446210;
          v387 = sub_100048748(&qword_1011D7838, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
          v388 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v384, v387);
          *(_QWORD *)(v385 + 4) = sub_10099627C(v388, v389, v471);
          v390 = swift_bridgeObjectRelease();
          v391 = (void (*)(Class, Class, __n128))*((_QWORD *)v383 + 1);
          v391(v381, v384, v390);
          _os_log_impl((void *)&_mh_execute_header, v377, v378, "|—| Unhandled alert for reason: %{public}s", (uint8_t *)v385, 0xCu);
          swift_arrayDestroy(v386, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v386, -1, -1);
          swift_slowDealloc(v385, -1, -1);

        }
        else
        {

          v391 = (void (*)(Class, Class, __n128))*((_QWORD *)v383 + 1);
          ((void (*)(Class, Class))v391)(v381, v384);
        }
        v365 = ((uint64_t (*)(Class, Class))v391)(v380, v384);
        v1 = logb;
LABEL_91:
        v409 = Logger.logObject.getter(v365);
        v410 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v409, v410))
        {
          v411 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v411 = 0;
          _os_log_impl((void *)&_mh_execute_header, v409, v410, "╰ ✅ Succeeded", v411, 2u);
          swift_slowDealloc(v411, -1, -1);
        }
        v412 = v1;
        v413 = v1[180].isa;
        v414 = v412[179].isa;
        v415 = v412[178].isa;
        v416 = v412[177].isa;
        v417 = v412[174].isa;
        v418 = v412[173].isa;
        v419 = v412[170].isa;
        v420 = v412[169].isa;
        v423 = v412[166].isa;
        v425 = v412[165].isa;
        v428 = v412[164].isa;
        v431 = v412[161].isa;
        v434 = v412[159].isa;
        v439 = v412[156].isa;
        v444 = v412[155].isa;
        v447 = v412[154].isa;
        v455 = v412[153].isa;
        logg = (os_log_t)v412[152].isa;
        v470 = v412[151].isa;

        swift_task_dealloc(v413);
        swift_task_dealloc(v414);
        swift_task_dealloc(v415);
        swift_task_dealloc(v416);
        swift_task_dealloc(v417);
        swift_task_dealloc(v418);
        swift_task_dealloc(v419);
        swift_task_dealloc(v420);
        swift_task_dealloc(v423);
        swift_task_dealloc(v425);
        swift_task_dealloc(v428);
        swift_task_dealloc(v431);
        swift_task_dealloc(v434);
        swift_task_dealloc(v439);
        swift_task_dealloc(v444);
        swift_task_dealloc(v447);
        swift_task_dealloc(v455);
        swift_task_dealloc(logg);
        swift_task_dealloc(v470);
        return ((uint64_t (*)(void))v412[1].isa)();
      }
      v246 = v1 + 98;
      v247 = v1[153].isa;
      v248 = v1[152].isa;
      v249 = v1[149].isa;
      v250 = *(_OWORD *)&v1[107].isa;
      *(_OWORD *)&v1[98].isa = *(_OWORD *)&v1[105].isa;
      *(_OWORD *)&v1[100].isa = v250;
      *(_OWORD *)&v1[102].isa = *(_OWORD *)&v1[109].isa;
      v1[104].isa = v1[111].isa;
      v251 = (*((uint64_t (**)(Class, Class, Class))v244 + 2))(v248, v247, v249);
      v252 = Logger.logObject.getter(v251);
      v253 = static os_log_type_t.default.getter();
      v254 = os_log_type_enabled(v252, v253);
      v255 = v1[152].isa;
      p_isa = &v1->isa;
      v257 = v1[150].isa;
      v258 = p_isa;
      v259 = p_isa[149];
      if (v254)
      {
        v260 = swift_slowAlloc(12, -1);
        v261 = swift_slowAlloc(32, -1);
        v471[0] = v261;
        *(_DWORD *)v260 = 136446210;
        v262 = sub_100048748(&qword_1011D7838, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
        v263 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v259, v262);
        *(_QWORD *)(v260 + 4) = sub_10099627C(v263, v264, v471);
        v265 = swift_bridgeObjectRelease();
        v266 = (void (*)(Class, uint64_t, __n128))*((_QWORD *)v257 + 1);
        v266(v255, v259, v265);
        _os_log_impl((void *)&_mh_execute_header, v252, v253, "|—| Showing alert for reason: %{public}s", (uint8_t *)v260, 0xCu);
        swift_arrayDestroy(v261, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v261, -1, -1);
        swift_slowDealloc(v260, -1, -1);
      }
      else
      {
        v266 = (void (*)(Class, uint64_t, __n128))*((_QWORD *)v257 + 1);
        ((void (*)(Class, _QWORD))v266)(v255, p_isa[149]);
      }

      v258[207] = v266;
      v392 = (_QWORD *)v258[140];
      v393 = v392[3];
      v328 = v392[4];
      sub_100007E68(v392, v393);
      v394 = *(int **)(v328 + 8);
      v468 = (uint64_t (*)(os_log_t, uint64_t, uint64_t))((char *)v394 + *v394);
      v395 = (_QWORD *)swift_task_alloc(v394[1]);
      v258[208] = v395;
      *v395 = v258;
      v395[1] = sub_100A95504;
      v331 = v246;
      v332 = v393;
      return v468(v331, v332, v328);
  }
}

uint64_t sub_100A947D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1512));
  sub_100365848(v1 + 84);
  return swift_task_switch(sub_100A94834, v1[183], v1[184]);
}

uint64_t sub_100A94834()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1296);
  swift_release(*(_QWORD *)(v0 + 1456));
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A94A0C(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[193] = v2;
  v3 = swift_task_alloc(48);
  v1[194] = v3;
  *(_BYTE *)(v3 + 16) = 1;
  *(_QWORD *)(v3 + 24) = v1 + 68;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[195] = v4;
  *v4 = v1;
  v4[1] = sub_100A94AD0;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 357, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100E4AA20, sub_1009919FC, v3, &type metadata for Bool);
}

uint64_t sub_100A94AD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1552);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1560));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100A94B40, *(_QWORD *)(v1 + 1528), *(_QWORD *)(v1 + 1536));
}

uint64_t sub_100A94B40()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_100A94B7C, *(_QWORD *)(v0 + 1464), *(_QWORD *)(v0 + 1472));
}

uint64_t sub_100A94B7C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1296);
  swift_release();
  sub_100064B4C(v0 + 544);
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A94D60()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1568));
  sub_100365848(v1 + 77);
  return swift_task_switch(sub_100A9E01C, v1[183], v1[184]);
}

uint64_t sub_100A94DBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1584);
  *(_QWORD *)(*v1 + 1592) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1472);
    v5 = *(_QWORD *)(v2 + 1464);
    v6 = sub_100A95C1C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 1472);
    v5 = *(_QWORD *)(v2 + 1464);
    v6 = sub_100A94E50;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A94E50()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 1144);
  v2 = swift_release();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 1152);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 356) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_10098C6E4();
    v5(v0 + 356, &type metadata for ActionType, v6, ObjectType, v3);
  }
  v7 = (*(uint64_t (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1376) + 8))(*(_QWORD *)(v0 + 1384), *(_QWORD *)(v0 + 1368), v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "╰ ✅ Succeeded", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  v11 = *(_QWORD *)(v0 + 1440);
  v12 = *(_QWORD *)(v0 + 1432);
  v13 = *(_QWORD *)(v0 + 1424);
  v14 = *(_QWORD *)(v0 + 1416);
  v15 = *(_QWORD *)(v0 + 1392);
  v16 = *(_QWORD *)(v0 + 1384);
  v17 = *(_QWORD *)(v0 + 1360);
  v18 = *(_QWORD *)(v0 + 1352);
  v20 = *(_QWORD *)(v0 + 1328);
  v21 = *(_QWORD *)(v0 + 1320);
  v22 = *(_QWORD *)(v0 + 1312);
  v23 = *(_QWORD *)(v0 + 1288);
  v24 = *(_QWORD *)(v0 + 1272);
  v25 = *(_QWORD *)(v0 + 1248);
  v26 = *(_QWORD *)(v0 + 1240);
  v27 = *(_QWORD *)(v0 + 1232);
  v28 = *(_QWORD *)(v0 + 1224);
  v29 = *(_QWORD *)(v0 + 1216);
  v30 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A95070()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1624);
  *(_QWORD *)(*v1 + 1632) = v0;
  swift_task_dealloc(v3);
  swift_release();
  swift_release();
  swift_release();
  if (v0)
    v4 = sub_100A963B8;
  else
    v4 = sub_100A950FC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_100A950FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 1616);
  v2 = *(_QWORD *)(v0 + 1608);
  v3 = *(_QWORD *)(v0 + 1456);
  swift_release(*(_QWORD *)(v0 + 1600));
  swift_release(v2);
  swift_release(v1);
  v4 = swift_release(v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A952E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1640);
  *(_QWORD *)(*v1 + 1648) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100A96B60;
  else
    v4 = sub_100A95344;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_100A95344()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "╰ ✅ Succeeded", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1440);
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v14 = *(_QWORD *)(v0 + 1328);
  v15 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A95504()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1664));
  return swift_task_switch(sub_100A95554, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_100A95554()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1656);
  v2 = *(_QWORD *)(v0 + 1224);
  v3 = *(_QWORD *)(v0 + 1192);
  swift_release();
  sub_1005488CC(v0 + 728);
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A95738()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1672);
  *(_QWORD *)(*v1 + 1680) = v0;
  swift_task_dealloc(v3);
  sub_10004FF60(v2 + 16, &qword_1011D32C0);
  if (v0)
    v4 = sub_100A972E8;
  else
    v4 = sub_100A9E048;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_100A957C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1704);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1712));
  swift_errorRelease(v2);
  return swift_task_switch(sub_100A9581C, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_100A9581C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "╰ ❌ Failed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1696);

  swift_allocError(&_s15ActionableStateO5ErrorON, v5, 0, 0);
  swift_willThrow();
  swift_errorRelease(*(_QWORD *)(v0 + 1088));
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v13 = *(_QWORD *)(v0 + 1328);
  v14 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);
  swift_task_dealloc(*(_QWORD *)(v0 + 1440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A95A04()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1720));
  return swift_task_switch(sub_100A95A54, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_100A95A54()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "╰ ❌ Failed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  swift_willThrow();
  v5 = *(_QWORD *)(v0 + 1432);
  v6 = *(_QWORD *)(v0 + 1424);
  v7 = *(_QWORD *)(v0 + 1416);
  v8 = *(_QWORD *)(v0 + 1392);
  v9 = *(_QWORD *)(v0 + 1384);
  v10 = *(_QWORD *)(v0 + 1360);
  v11 = *(_QWORD *)(v0 + 1352);
  v12 = *(_QWORD *)(v0 + 1328);
  v13 = *(_QWORD *)(v0 + 1320);
  v15 = *(_QWORD *)(v0 + 1312);
  v16 = *(_QWORD *)(v0 + 1288);
  v17 = *(_QWORD *)(v0 + 1272);
  v18 = *(_QWORD *)(v0 + 1248);
  v19 = *(_QWORD *)(v0 + 1240);
  v20 = *(_QWORD *)(v0 + 1232);
  v21 = *(_QWORD *)(v0 + 1224);
  v22 = *(_QWORD *)(v0 + 1216);
  v23 = *(_QWORD *)(v0 + 1208);
  swift_task_dealloc(*(_QWORD *)(v0 + 1440));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A95C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  __n128 v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  __n128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  __n128 v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  char *v72;
  char *v73;
  __n128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, __n128);
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v101;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v106;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1376) + 8))(*(_QWORD *)(v0 + 1384), *(_QWORD *)(v0 + 1368));
  v1 = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v99 = *(_QWORD *)(v0 + 1424);
      v100 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v95 = *(_QWORD *)(v0 + 1432);
      v97 = *(_QWORD *)(v0 + 1400);
      v15 = *(_QWORD *)(v0 + 1392);
      v16 = *(_QWORD *)(v0 + 1368);
      v17 = *(_QWORD *)(v0 + 1360);
      v93 = *(_QWORD *)(v0 + 1344);
      v89 = *(_QWORD *)(v0 + 1376);
      v91 = *(_QWORD *)(v0 + 1336);
      v18 = *(_QWORD *)(v0 + 1112);
      v19 = *(_QWORD *)(v0 + 1096);
      v20 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v21 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v106 = (uint64_t)log;
      *(_DWORD *)v21 = 136447234;
      v22 = (char *)MusicLibrary.ActionableState.description.getter(v19, v20);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v23, &v106);
      v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v24);
      v25 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v16, v25);
      v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v15, v16);
      *(_QWORD *)(v21 + 14) = sub_10099627C(v26, v28, &v106);
      swift_release_n(v18, 2, v29);
      v30 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v30);
      v31 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v91, v31);
      v34 = v33;
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v17, v91);
      *(_QWORD *)(v21 + 24) = sub_10099627C(v32, v34, &v106);
      swift_release_n(v18, 2, v35);
      v36 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 32) = 2082;
      v100(v95, v99, v97, v36);
      v37 = (char *)String.init<A>(describing:)(v95, v97);
      *(_QWORD *)(v21 + 34) = sub_10099627C(v37, v38, &v106);
      v39 = swift_bridgeObjectRelease();
      v40 = type(v99, v97, v39);
      *(_WORD *)(v21 + 42) = 2082;
      v41 = (char *)String.init<A>(describing:)(v40, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v21 + 44) = sub_10099627C(v41, v42, &v106);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v21,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      v77 = *(_QWORD *)(v0 + 1424);
      v78 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v13);
      v14(v77, v78);
    }

    v79 = sub_100A9C6EC();
    *(_QWORD *)(v0 + 1696) = v79;
    v80 = swift_allocError(&_s15ActionableStateO5ErrorON, v79, 0, 0);
    *(_QWORD *)(v0 + 1704) = v80;
    v81 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1712) = v81;
    *v81 = v0;
    v81[1] = sub_100A957C0;
    return sub_100A97AB8(v80, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v43 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v43, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v44 = swift_errorRetain(v1);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    v47 = os_log_type_enabled(v45, v46);
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v47)
    {
      v94 = *(_QWORD *)(v0 + 1416);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v90 = *(_QWORD *)(v0 + 1432);
      v92 = *(_QWORD *)(v0 + 1400);
      v50 = *(_QWORD *)(v0 + 1392);
      loga = v45;
      v51 = *(_QWORD *)(v0 + 1368);
      v52 = *(_QWORD *)(v0 + 1360);
      v88 = *(_QWORD *)(v0 + 1344);
      v86 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v53 = *(_QWORD *)(v0 + 1112);
      typea = v46;
      v54 = *(_QWORD *)(v0 + 1096);
      v55 = *(_WORD *)(v0 + 354);
      v98 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v56 = swift_slowAlloc(52, -1);
      v101 = swift_slowAlloc(160, -1);
      v106 = v101;
      *(_DWORD *)v56 = 136447234;
      v57 = (char *)MusicLibrary.ActionableState.description.getter(v54, v55);
      *(_QWORD *)(v56 + 4) = sub_10099627C(v57, v58, &v106);
      v59 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v59);
      v60 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v61 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, v60);
      v63 = v62;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v50, v51);
      *(_QWORD *)(v56 + 14) = sub_10099627C(v61, v63, &v106);
      swift_release_n(v53, 2, v64);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v65);
      v66 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v67 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v66);
      v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v52, v87);
      *(_QWORD *)(v56 + 24) = sub_10099627C(v67, v69, &v106);
      swift_release_n(v53, 2, v70);
      v71 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 32) = 2082;
      v96(v90, v94, v92, v71);
      v72 = (char *)String.init<A>(describing:)(v90, v92);
      *(_QWORD *)(v56 + 34) = sub_10099627C(v72, v73, &v106);
      v74 = swift_bridgeObjectRelease();
      v98(v94, v92, v74);
      *(_WORD *)(v56 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v75 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v56 + 44) = sub_10099627C(v75, v76, &v106);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v56,
        0x34u);
      swift_arrayDestroy(v101, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v101, -1, -1);
      swift_slowDealloc(v56, -1, -1);

    }
    else
    {
      v83 = *(_QWORD *)(v0 + 1416);
      v84 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v48);
      v49(v83, v84);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v85 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1720) = v85;
    *v85 = v0;
    v85[1] = sub_100A95A04;
    return sub_100A97AB8(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_100A963B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  __n128 v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  __n128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  __n128 v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  char *v72;
  char *v73;
  __n128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, __n128);
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v101;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v106;

  swift_release();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 1632);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v99 = *(_QWORD *)(v0 + 1424);
      v100 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v95 = *(_QWORD *)(v0 + 1432);
      v97 = *(_QWORD *)(v0 + 1400);
      v15 = *(_QWORD *)(v0 + 1392);
      v16 = *(_QWORD *)(v0 + 1368);
      v17 = *(_QWORD *)(v0 + 1360);
      v93 = *(_QWORD *)(v0 + 1344);
      v89 = *(_QWORD *)(v0 + 1376);
      v91 = *(_QWORD *)(v0 + 1336);
      v18 = *(_QWORD *)(v0 + 1112);
      v19 = *(_QWORD *)(v0 + 1096);
      v20 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v21 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v106 = (uint64_t)log;
      *(_DWORD *)v21 = 136447234;
      v22 = (char *)MusicLibrary.ActionableState.description.getter(v19, v20);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v23, &v106);
      v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v24);
      v25 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v16, v25);
      v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v15, v16);
      *(_QWORD *)(v21 + 14) = sub_10099627C(v26, v28, &v106);
      swift_release_n(v18, 2, v29);
      v30 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v30);
      v31 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v91, v31);
      v34 = v33;
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v17, v91);
      *(_QWORD *)(v21 + 24) = sub_10099627C(v32, v34, &v106);
      swift_release_n(v18, 2, v35);
      v36 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 32) = 2082;
      v100(v95, v99, v97, v36);
      v37 = (char *)String.init<A>(describing:)(v95, v97);
      *(_QWORD *)(v21 + 34) = sub_10099627C(v37, v38, &v106);
      v39 = swift_bridgeObjectRelease();
      v40 = type(v99, v97, v39);
      *(_WORD *)(v21 + 42) = 2082;
      v41 = (char *)String.init<A>(describing:)(v40, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v21 + 44) = sub_10099627C(v41, v42, &v106);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v21,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      v77 = *(_QWORD *)(v0 + 1424);
      v78 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v13);
      v14(v77, v78);
    }

    v79 = sub_100A9C6EC();
    *(_QWORD *)(v0 + 1696) = v79;
    v80 = swift_allocError(&_s15ActionableStateO5ErrorON, v79, 0, 0);
    *(_QWORD *)(v0 + 1704) = v80;
    v81 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1712) = v81;
    *v81 = v0;
    v81[1] = sub_100A957C0;
    return sub_100A97AB8(v80, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v43 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v43, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v44 = swift_errorRetain(v1);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    v47 = os_log_type_enabled(v45, v46);
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v47)
    {
      v94 = *(_QWORD *)(v0 + 1416);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v90 = *(_QWORD *)(v0 + 1432);
      v92 = *(_QWORD *)(v0 + 1400);
      v50 = *(_QWORD *)(v0 + 1392);
      loga = v45;
      v51 = *(_QWORD *)(v0 + 1368);
      v52 = *(_QWORD *)(v0 + 1360);
      v88 = *(_QWORD *)(v0 + 1344);
      v86 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v53 = *(_QWORD *)(v0 + 1112);
      typea = v46;
      v54 = *(_QWORD *)(v0 + 1096);
      v55 = *(_WORD *)(v0 + 354);
      v98 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v56 = swift_slowAlloc(52, -1);
      v101 = swift_slowAlloc(160, -1);
      v106 = v101;
      *(_DWORD *)v56 = 136447234;
      v57 = (char *)MusicLibrary.ActionableState.description.getter(v54, v55);
      *(_QWORD *)(v56 + 4) = sub_10099627C(v57, v58, &v106);
      v59 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v59);
      v60 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v61 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, v60);
      v63 = v62;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v50, v51);
      *(_QWORD *)(v56 + 14) = sub_10099627C(v61, v63, &v106);
      swift_release_n(v53, 2, v64);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v65);
      v66 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v67 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v66);
      v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v52, v87);
      *(_QWORD *)(v56 + 24) = sub_10099627C(v67, v69, &v106);
      swift_release_n(v53, 2, v70);
      v71 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 32) = 2082;
      v96(v90, v94, v92, v71);
      v72 = (char *)String.init<A>(describing:)(v90, v92);
      *(_QWORD *)(v56 + 34) = sub_10099627C(v72, v73, &v106);
      v74 = swift_bridgeObjectRelease();
      v98(v94, v92, v74);
      *(_WORD *)(v56 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v75 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v56 + 44) = sub_10099627C(v75, v76, &v106);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v56,
        0x34u);
      swift_arrayDestroy(v101, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v101, -1, -1);
      swift_slowDealloc(v56, -1, -1);

    }
    else
    {
      v83 = *(_QWORD *)(v0 + 1416);
      v84 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v48);
      v49(v83, v84);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v85 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1720) = v85;
    *v85 = v0;
    v85[1] = sub_100A95A04;
    return sub_100A97AB8(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_100A96B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  __n128 v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  __n128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  __n128 v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  char *v72;
  char *v73;
  __n128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, __n128);
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v101;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v106;

  v1 = *(_QWORD *)(v0 + 1648);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v99 = *(_QWORD *)(v0 + 1424);
      v100 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v95 = *(_QWORD *)(v0 + 1432);
      v97 = *(_QWORD *)(v0 + 1400);
      v15 = *(_QWORD *)(v0 + 1392);
      v16 = *(_QWORD *)(v0 + 1368);
      v17 = *(_QWORD *)(v0 + 1360);
      v93 = *(_QWORD *)(v0 + 1344);
      v89 = *(_QWORD *)(v0 + 1376);
      v91 = *(_QWORD *)(v0 + 1336);
      v18 = *(_QWORD *)(v0 + 1112);
      v19 = *(_QWORD *)(v0 + 1096);
      v20 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v21 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v106 = (uint64_t)log;
      *(_DWORD *)v21 = 136447234;
      v22 = (char *)MusicLibrary.ActionableState.description.getter(v19, v20);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v23, &v106);
      v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v24);
      v25 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v16, v25);
      v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v15, v16);
      *(_QWORD *)(v21 + 14) = sub_10099627C(v26, v28, &v106);
      swift_release_n(v18, 2, v29);
      v30 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v30);
      v31 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v91, v31);
      v34 = v33;
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v17, v91);
      *(_QWORD *)(v21 + 24) = sub_10099627C(v32, v34, &v106);
      swift_release_n(v18, 2, v35);
      v36 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 32) = 2082;
      v100(v95, v99, v97, v36);
      v37 = (char *)String.init<A>(describing:)(v95, v97);
      *(_QWORD *)(v21 + 34) = sub_10099627C(v37, v38, &v106);
      v39 = swift_bridgeObjectRelease();
      v40 = type(v99, v97, v39);
      *(_WORD *)(v21 + 42) = 2082;
      v41 = (char *)String.init<A>(describing:)(v40, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v21 + 44) = sub_10099627C(v41, v42, &v106);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v21,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      v77 = *(_QWORD *)(v0 + 1424);
      v78 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v13);
      v14(v77, v78);
    }

    v79 = sub_100A9C6EC();
    *(_QWORD *)(v0 + 1696) = v79;
    v80 = swift_allocError(&_s15ActionableStateO5ErrorON, v79, 0, 0);
    *(_QWORD *)(v0 + 1704) = v80;
    v81 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1712) = v81;
    *v81 = v0;
    v81[1] = sub_100A957C0;
    return sub_100A97AB8(v80, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v43 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v43, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v44 = swift_errorRetain(v1);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    v47 = os_log_type_enabled(v45, v46);
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v47)
    {
      v94 = *(_QWORD *)(v0 + 1416);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v90 = *(_QWORD *)(v0 + 1432);
      v92 = *(_QWORD *)(v0 + 1400);
      v50 = *(_QWORD *)(v0 + 1392);
      loga = v45;
      v51 = *(_QWORD *)(v0 + 1368);
      v52 = *(_QWORD *)(v0 + 1360);
      v88 = *(_QWORD *)(v0 + 1344);
      v86 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v53 = *(_QWORD *)(v0 + 1112);
      typea = v46;
      v54 = *(_QWORD *)(v0 + 1096);
      v55 = *(_WORD *)(v0 + 354);
      v98 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v56 = swift_slowAlloc(52, -1);
      v101 = swift_slowAlloc(160, -1);
      v106 = v101;
      *(_DWORD *)v56 = 136447234;
      v57 = (char *)MusicLibrary.ActionableState.description.getter(v54, v55);
      *(_QWORD *)(v56 + 4) = sub_10099627C(v57, v58, &v106);
      v59 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v59);
      v60 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v61 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, v60);
      v63 = v62;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v50, v51);
      *(_QWORD *)(v56 + 14) = sub_10099627C(v61, v63, &v106);
      swift_release_n(v53, 2, v64);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v65);
      v66 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v67 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v66);
      v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v52, v87);
      *(_QWORD *)(v56 + 24) = sub_10099627C(v67, v69, &v106);
      swift_release_n(v53, 2, v70);
      v71 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 32) = 2082;
      v96(v90, v94, v92, v71);
      v72 = (char *)String.init<A>(describing:)(v90, v92);
      *(_QWORD *)(v56 + 34) = sub_10099627C(v72, v73, &v106);
      v74 = swift_bridgeObjectRelease();
      v98(v94, v92, v74);
      *(_WORD *)(v56 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v75 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v56 + 44) = sub_10099627C(v75, v76, &v106);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v56,
        0x34u);
      swift_arrayDestroy(v101, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v101, -1, -1);
      swift_slowDealloc(v56, -1, -1);

    }
    else
    {
      v83 = *(_QWORD *)(v0 + 1416);
      v84 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v48);
      v49(v83, v84);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v85 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1720) = v85;
    *v85 = v0;
    v85[1] = sub_100A95A04;
    return sub_100A97AB8(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_100A972E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  __n128 v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  __n128 v35;
  __n128 v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  __n128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  __n128 v64;
  __n128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  __n128 v70;
  __n128 v71;
  char *v72;
  char *v73;
  __n128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, __n128);
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v101;
  uint64_t (*type)(uint64_t, uint64_t, __n128);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v106;

  v1 = *(_QWORD *)(v0 + 1680);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v99 = *(_QWORD *)(v0 + 1424);
      v100 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v95 = *(_QWORD *)(v0 + 1432);
      v97 = *(_QWORD *)(v0 + 1400);
      v15 = *(_QWORD *)(v0 + 1392);
      v16 = *(_QWORD *)(v0 + 1368);
      v17 = *(_QWORD *)(v0 + 1360);
      v93 = *(_QWORD *)(v0 + 1344);
      v89 = *(_QWORD *)(v0 + 1376);
      v91 = *(_QWORD *)(v0 + 1336);
      v18 = *(_QWORD *)(v0 + 1112);
      v19 = *(_QWORD *)(v0 + 1096);
      v20 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v21 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v106 = (uint64_t)log;
      *(_DWORD *)v21 = 136447234;
      v22 = (char *)MusicLibrary.ActionableState.description.getter(v19, v20);
      *(_QWORD *)(v21 + 4) = sub_10099627C(v22, v23, &v106);
      v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v24);
      v25 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v16, v25);
      v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v15, v16);
      *(_QWORD *)(v21 + 14) = sub_10099627C(v26, v28, &v106);
      swift_release_n(v18, 2, v29);
      v30 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v30);
      v31 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v91, v31);
      v34 = v33;
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v17, v91);
      *(_QWORD *)(v21 + 24) = sub_10099627C(v32, v34, &v106);
      swift_release_n(v18, 2, v35);
      v36 = swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 32) = 2082;
      v100(v95, v99, v97, v36);
      v37 = (char *)String.init<A>(describing:)(v95, v97);
      *(_QWORD *)(v21 + 34) = sub_10099627C(v37, v38, &v106);
      v39 = swift_bridgeObjectRelease();
      v40 = type(v99, v97, v39);
      *(_WORD *)(v21 + 42) = 2082;
      v41 = (char *)String.init<A>(describing:)(v40, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v21 + 44) = sub_10099627C(v41, v42, &v106);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v21,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      v77 = *(_QWORD *)(v0 + 1424);
      v78 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v13);
      v14(v77, v78);
    }

    v79 = sub_100A9C6EC();
    *(_QWORD *)(v0 + 1696) = v79;
    v80 = swift_allocError(&_s15ActionableStateO5ErrorON, v79, 0, 0);
    *(_QWORD *)(v0 + 1704) = v80;
    v81 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1712) = v81;
    *v81 = v0;
    v81[1] = sub_100A957C0;
    return sub_100A97AB8(v80, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v43 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v43, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain();
    v44 = swift_errorRetain(v1);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.error.getter(v45);
    v47 = os_log_type_enabled(v45, v46);
    v49 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v47)
    {
      v94 = *(_QWORD *)(v0 + 1416);
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1488);
      v90 = *(_QWORD *)(v0 + 1432);
      v92 = *(_QWORD *)(v0 + 1400);
      v50 = *(_QWORD *)(v0 + 1392);
      loga = v45;
      v51 = *(_QWORD *)(v0 + 1368);
      v52 = *(_QWORD *)(v0 + 1360);
      v88 = *(_QWORD *)(v0 + 1344);
      v86 = *(_QWORD *)(v0 + 1376);
      v87 = *(_QWORD *)(v0 + 1336);
      v53 = *(_QWORD *)(v0 + 1112);
      typea = v46;
      v54 = *(_QWORD *)(v0 + 1096);
      v55 = *(_WORD *)(v0 + 354);
      v98 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1496);
      v56 = swift_slowAlloc(52, -1);
      v101 = swift_slowAlloc(160, -1);
      v106 = v101;
      *(_DWORD *)v56 = 136447234;
      v57 = (char *)MusicLibrary.ActionableState.description.getter(v54, v55);
      *(_QWORD *)(v56 + 4) = sub_10099627C(v57, v58, &v106);
      v59 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v59);
      v60 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v61 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, v60);
      v63 = v62;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v50, v51);
      *(_QWORD *)(v56 + 14) = sub_10099627C(v61, v63, &v106);
      swift_release_n(v53, 2, v64);
      v65 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v65);
      v66 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v67 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v87, v66);
      v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v52, v87);
      *(_QWORD *)(v56 + 24) = sub_10099627C(v67, v69, &v106);
      swift_release_n(v53, 2, v70);
      v71 = swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 32) = 2082;
      v96(v90, v94, v92, v71);
      v72 = (char *)String.init<A>(describing:)(v90, v92);
      *(_QWORD *)(v56 + 34) = sub_10099627C(v72, v73, &v106);
      v74 = swift_bridgeObjectRelease();
      v98(v94, v92, v74);
      *(_WORD *)(v56 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v75 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v56 + 44) = sub_10099627C(v75, v76, &v106);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v56,
        0x34u);
      swift_arrayDestroy(v101, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v101, -1, -1);
      swift_slowDealloc(v56, -1, -1);

    }
    else
    {
      v83 = *(_QWORD *)(v0 + 1416);
      v84 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4, v48);
      v49(v83, v84);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v85 = (_QWORD *)swift_task_alloc(dword_1011D781C);
    *(_QWORD *)(v0 + 1720) = v85;
    *v85 = v0;
    v85[1] = sub_100A95A04;
    return sub_100A97AB8(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t Logger.libraryActionableState.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1DC8 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.libraryActionableState);
}

uint64_t sub_100A97AB8(uint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v5 + 296) = a4;
  *(_QWORD *)(v5 + 304) = a5;
  *(_WORD *)(v5 + 408) = a3;
  *(_QWORD *)(v5 + 280) = a1;
  *(_QWORD *)(v5 + 288) = a2;
  *(_QWORD *)(v5 + 312) = *a4;
  v6 = type metadata accessor for UUID(0);
  *(_QWORD *)(v5 + 320) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 328) = v7;
  *(_QWORD *)(v5 + 336) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 344) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 352) = v10;
  *(_QWORD *)(v5 + 360) = v11;
  return swift_task_switch(sub_100A97B5C, v10, v11);
}

uint64_t sub_100A97B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_WORD *)(v0 + 408);
  _StringGuts.grow(_:)(91);
  v6._countAndFlagsBits = 0xD000000000000032;
  v6._object = (void *)0x8000000100E4F850;
  String.append(_:)(v6);
  *(_QWORD *)(v0 + 256) = v4;
  swift_errorRetain(v4);
  v7 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  v8._countAndFlagsBits = String.init<A>(describing:)(v0 + 256, v7);
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x8000000100E4F890;
  v9._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v9);
  v10._countAndFlagsBits = MusicLibrary.ActionableState.description.getter(v3, v5);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x53206D6574490A0ALL;
  v11._object = (void *)0xEE00203A65746174;
  String.append(_:)(v11);
  *(_QWORD *)(v0 + 264) = v2;
  v12 = type metadata accessor for MusicLibrary.ItemState(0, *(_QWORD *)(v1 + class metadata base offset for MusicLibrary.ItemState), *(_QWORD *)(v1 + class metadata base offset for MusicLibrary.ItemState + 8));
  swift_retain();
  v13._countAndFlagsBits = String.init<A>(describing:)(v0 + 264, v12);
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 10;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15 = sub_100A136B8((uint64_t)_swiftEmptyArrayStorage);
  sub_100A57950(0xD00000000000001DLL, 0x8000000100E4F830, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, v15, (uint64_t)_swiftEmptyArrayStorage, 1, v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100065228(v0 + 72, v0 + 128, &qword_1011D67D8);
  if (*(_QWORD *)(v0 + 136))
  {
    v16 = (__int128 *)(v0 + 184);
    v17 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 200) = v17;
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 368) = v18;
    *(_QWORD *)(v0 + 376) = v19;
    if (qword_1011D1DC8 != -1)
      swift_once(&qword_1011D1DC8, sub_100A9BAB8);
    v49 = v7;
    v47 = (__int128 *)(v0 + 224);
    v48 = (_OWORD *)(v0 + 240);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100048B14(v20, (uint64_t)static Logger.libraryActionableState);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "|—● Presenting Tap-To-Radar alert", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }
    v25 = *(_QWORD *)(v0 + 336);
    v44 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 320);
    v26 = *(_QWORD **)(v0 + 304);
    v27 = *(_QWORD *)(v0 + 280);

    v28 = v26[4];
    v46 = v26[3];
    sub_100007E68(v26, v46);
    *(_QWORD *)(v0 + 272) = v27;
    swift_errorRetain(v27);
    v29 = String.init<A>(describing:)(v0 + 272, v49);
    v31 = v30;
    *(_QWORD *)(v0 + 384) = v30;
    v32 = sub_100007E8C(&qword_1011D8810);
    v33 = swift_allocObject(v32, 144, 7);
    *(_QWORD *)(v0 + 392) = v33;
    *v48 = *(_OWORD *)(v0 + 200);
    v34 = *v16;
    v35 = *(_OWORD *)(v0 + 200);
    *v47 = *v16;
    *(_OWORD *)(v33 + 16) = xmmword_100EA7A80;
    *(_OWORD *)(v33 + 32) = v34;
    *(_OWORD *)(v33 + 48) = v35;
    *(_QWORD *)(v33 + 64) = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v33 + 72) = v18;
    *(_QWORD *)(v33 + 80) = v19;
    sub_100055CE4((uint64_t)v47);
    sub_100055CE4((uint64_t)v48);
    v36 = sub_100048AAC(v18, v19);
    v37 = UUID.init()(v36);
    v38 = UUID.uuidString.getter(v37);
    v40 = v39;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v25, v45);
    *(_QWORD *)(v33 + 88) = v38;
    *(_QWORD *)(v33 + 96) = v40;
    *(_QWORD *)(v33 + 104) = 19279;
    *(_QWORD *)(v33 + 112) = 0xE200000000000000;
    *(_BYTE *)(v33 + 120) = 2;
    *(_QWORD *)(v33 + 128) = 0;
    *(_QWORD *)(v33 + 136) = 0;
    *(_OWORD *)(v0 + 16) = xmmword_100ED8660;
    *(_QWORD *)(v0 + 32) = v29;
    *(_QWORD *)(v0 + 40) = v31;
    *(_BYTE *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = v33;
    *(_QWORD *)(v0 + 64) = 0;
    v41 = *(int **)(v28 + 8);
    v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v41 + *v41);
    v42 = (_QWORD *)swift_task_alloc(v41[1]);
    *(_QWORD *)(v0 + 400) = v42;
    *v42 = v0;
    v42[1] = sub_100A97FE4;
    return v50(v0 + 16, v46, v28);
  }
  else
  {
    swift_release();
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A97FE4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100A98060, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_100A98060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 368);
  v1 = *(_QWORD *)(v0 + 376);
  swift_release();
  sub_1001C7464(v0 + 224);
  sub_1001C7464(v0 + 240);
  sub_10004BA30(v2, v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *MusicLibrary.ActionableStateController.__allocating_init(item:library:actionsObserver:onStateUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v14;

  v7 = v6;
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v14 = sub_100A9C754(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 8))(a1);
  return v14;
}

char *MusicLibrary.ActionableStateController.init(item:library:actionsObserver:onStateUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  char *v9;

  v8 = *v6;
  v9 = sub_100A9C754(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 80) - 8) + 8))(a1);
  return v9;
}

uint64_t sub_100A981AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = sub_100007E8C(&qword_1011D78F8);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007E8C(&qword_1011D7900);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v10 = result;
    v11 = type metadata accessor for MusicLibrary.AddStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    sub_100A997C4((uint64_t)v8, (uint64_t)v5);
    swift_release(v10);
    sub_10004FF60((uint64_t)v5, &qword_1011D78F8);
    return sub_10004FF60((uint64_t)v8, &qword_1011D7900);
  }
  return result;
}

uint64_t MusicLibrary.ActionableStateController.library.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100A982F4(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, char *, uint64_t, __n128);
  char *v50;
  uint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t, __n128);
  char *v84;
  _BOOL4 v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t result;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136[8];
  char v137[32];

  v123 = a1;
  v2 = *v1;
  v133 = type metadata accessor for Album(0);
  v125 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v132 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D78F8);
  __chkstk_darwin(v4);
  v128 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D7900);
  __chkstk_darwin(v6);
  v127 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D3398);
  __chkstk_darwin(v8);
  v117 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v134 = (uint64_t)&v109 - v11;
  v130 = sub_100007E8C(&qword_1011D6820);
  v126 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v113 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v116 = (char *)&v109 - v14;
  __chkstk_darwin(v15);
  v114 = (char *)&v109 - v16;
  __chkstk_darwin(v17);
  v115 = (char *)&v109 - v18;
  __chkstk_darwin(v19);
  v119 = (char *)&v109 - v20;
  __chkstk_darwin(v21);
  v124 = (char *)&v109 - v22;
  v23 = sub_100007E8C(&qword_1011D6830);
  __chkstk_darwin(v23);
  v122 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v109 - v26;
  v28 = type metadata accessor for Playlist(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v118 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v109 - v32;
  v34 = *(_QWORD *)(v2 + 80);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v36);
  v131 = (char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v121 = (char *)&v109 - v39;
  __chkstk_darwin(v40);
  v42 = (char *)&v109 - v41;
  __chkstk_darwin(v43);
  v45 = (char *)&v109 - v44;
  v46 = *(_QWORD *)(v2 + 128);
  v129 = v1;
  v47 = (char *)v1 + v46;
  v48 = swift_beginAccess(v47, v137, 0, 0);
  v49 = *(void (**)(char *, char *, uint64_t, __n128))(v35 + 16);
  v49(v45, v47, v34, v48);
  v50 = v45;
  v51 = v28;
  v52 = v47;
  dispatch thunk of MusicLibrary.ItemState.item.setter(v50);
  ((void (*)(char *, char *, uint64_t))v49)(v42, v47, v34);
  v53 = swift_dynamicCast(v27, v42, v34, v51, 6);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  if ((v53 & 1) == 0)
  {
    v54(v27, 1, 1, v51);
    sub_10004FF60((uint64_t)v27, &qword_1011D6830);
    v63 = v132;
    v62 = v133;
    v64 = v131;
    goto LABEL_22;
  }
  v120 = (void (*)(char *, char *, uint64_t))v49;
  v54(v27, 0, 1, v51);
  v55 = *(uint64_t (**)(char *, char *, uint64_t))(v29 + 32);
  v56 = v55(v33, v27, v51);
  v57 = v134;
  Playlist.entries.getter(v56);
  v58 = v126;
  v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  v60 = v57;
  v61 = v130;
  if (v59(v60, 1, v130) != 1)
  {
    v111 = v29;
    v112 = v33;
    v65 = v34;
    v66 = v61;
    v67 = v124;
    v110 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
    v110(v124, v134, v66);
    v68 = v121;
    v120(v121, v123, v65);
    v69 = (uint64_t)v122;
    v134 = v65;
    if ((swift_dynamicCast(v122, v68, v65, v51, 6) & 1) == 0)
    {
      v54((char *)v69, 1, 1, v51);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v130);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v51);
      sub_10004FF60(v69, &qword_1011D6830);
      v63 = v132;
      v62 = v133;
      v64 = v131;
      v34 = v134;
      goto LABEL_21;
    }
    v70 = v67;
    v71 = v69;
    v72 = v58;
    v123 = v52;
    v54((char *)v71, 0, 1, v51);
    v73 = v118;
    v74 = v55(v118, (char *)v71, v51);
    v75 = (uint64_t)v117;
    Playlist.entries.getter(v74);
    v76 = v130;
    if (v59(v75, 1, v130) == 1)
    {
      v77 = *(void (**)(char *, uint64_t))(v111 + 8);
      v77(v73, v51);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v76);
      v77(v112, v51);
      sub_10004FF60(v75, &qword_1011D3398);
LABEL_20:
      v63 = v132;
      v62 = v133;
      v64 = v131;
      v34 = v134;
      v52 = v123;
      goto LABEL_21;
    }
    v110(v119, v75, v76);
    v78 = sub_100049F28((unint64_t *)&qword_1011D6850, &qword_1011D6820, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v76);
    dispatch thunk of Collection.endIndex.getter(&v135, v76, v78);
    v79 = dispatch thunk of Collection.distance(from:to:)(v136, &v135, v76, v78);
    v81 = v80;
    v82 = v70;
    v83 = *(void (**)(char *, char *, uint64_t, __n128))(v72 + 16);
    v84 = v115;
    v83(v115, v82, v76, v79);
    if (v81)
    {
      v85 = 0;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v76);
      dispatch thunk of Collection.endIndex.getter(&v135, v76, v78);
      dispatch thunk of Collection.distance(from:to:)(v136, &v135, v76, v78);
      v85 = v86 > 0;
    }
    v87 = v114;
    v88 = *(void (**)(char *, uint64_t))(v72 + 8);
    v88(v84, v76);
    ((void (*)(char *, char *, uint64_t))v83)(v87, v119, v76);
    v89 = v116;
    ((void (*)(char *, char *, uint64_t))v83)(v116, v124, v76);
    if (v85)
    {
      v88(v89, v76);
      v88(v87, v76);
      v90 = v124;
LABEL_14:
      v91 = type metadata accessor for MusicLibrary.AddStatus(0);
      v92 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v127, 1, 1, v91);
      v93 = type metadata accessor for MusicLibrary.DownloadStatus(0);
      v94 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v128, 1, 1, v93);
      sub_100A997C4(v92, v94);
      sub_10004FF60(v94, &qword_1011D78F8);
      sub_10004FF60(v92, &qword_1011D7900);
      v88(v119, v76);
      v95 = *(void (**)(char *, uint64_t))(v111 + 8);
      v95(v73, v51);
      v88(v90, v76);
      return ((uint64_t (*)(char *, uint64_t))v95)(v112, v51);
    }
    dispatch thunk of Collection.startIndex.getter(v76);
    dispatch thunk of Collection.endIndex.getter(&v135, v76, v78);
    v97 = dispatch thunk of Collection.distance(from:to:)(v136, &v135, v76, v78);
    v99 = v98;
    v100 = v113;
    v83(v113, v89, v76, v97);
    if (v99 < 1)
    {
      v88(v100, v76);
      v88(v89, v76);
      v88(v87, v76);
      v90 = v124;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v76);
      dispatch thunk of Collection.endIndex.getter(&v135, v76, v78);
      v101 = dispatch thunk of Collection.distance(from:to:)(v136, &v135, v76, v78);
      v103 = v102;
      ((void (*)(char *, uint64_t, __n128))v88)(v100, v76, v101);
      v88(v89, v76);
      v88(v87, v76);
      v90 = v124;
      if (!v103)
        goto LABEL_14;
    }
    v88(v119, v76);
    v104 = *(void (**)(char *, uint64_t))(v111 + 8);
    v104(v73, v51);
    v88(v90, v76);
    v104(v112, v51);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v51);
  sub_10004FF60(v134, &qword_1011D3398);
  v63 = v132;
  v62 = v133;
  v64 = v131;
LABEL_21:
  v49 = (void (*)(char *, char *, uint64_t, __n128))v120;
LABEL_22:
  ((void (*)(char *, char *, uint64_t))v49)(v64, v52, v34);
  result = swift_dynamicCast(v63, v64, v34, v62, 6);
  if ((_DWORD)result)
  {
    (*(void (**)(char *, uint64_t))(v125 + 8))(v63, v62);
    v105 = type metadata accessor for MusicLibrary.AddStatus(0);
    v106 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v127, 1, 1, v105);
    v107 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    v108 = (uint64_t)v128;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v128, 1, 1, v107);
    sub_100A997C4(v106, v108);
    sub_10004FF60(v108, &qword_1011D78F8);
    return sub_10004FF60(v106, &qword_1011D7900);
  }
  return result;
}

uint64_t MusicLibrary.ActionableStateController.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t MusicLibrary.ActionableStateController.item.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_100A9CC38(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*MusicLibrary.ActionableStateController.item.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 128);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  v11 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16);
  v3[8] = v11;
  v11(v8, v9, v5, v10);
  return sub_100A98E98;
}

void sub_100A98E98(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_100A9CC38((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_100A9CC38((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t MusicLibrary.ActionableStateController.onStateUpdate.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t MusicLibrary.ActionableStateController.onStateUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*MusicLibrary.ActionableStateController.onStateUpdate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144), a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100A99038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  char *v28;
  char *v29;
  __n128 v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[24];
  uint64_t v48[3];
  _BYTE v49[24];

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + *(_QWORD *)(v10 + 152);
  swift_beginAccess(v11, v49, 0, 0);
  v12 = *(unsigned __int16 *)(v11 + 8);
  switch(v12 >> 8)
  {
    case 2u:
      if ((a2 & 0xFF00) != 0x200)
        goto LABEL_15;
      break;
    case 3u:
      if ((a2 & 0xFF00) != 0x300)
        goto LABEL_15;
      break;
    case 4u:
      if ((a2 & 0xFF00) != 0x400)
        goto LABEL_15;
      break;
    case 5u:
      if ((a2 & 0xFF00) != 0x500)
        goto LABEL_15;
      break;
    default:
      if (BYTE1(a2) - 2 >= 4)
      {
        if ((v12 & 1) != 0)
        {
          if ((a2 & 1) != 0 && (((a2 ^ v12) >> 8) & 1) == 0)
            return;
        }
        else if ((a2 & 1) == 0 && *(double *)v11 == *(double *)&a1 && (((a2 ^ v12) >> 8) & 1) == 0)
        {
          return;
        }
      }
LABEL_15:
      if (qword_1011D1DC8 != -1)
        swift_once(&qword_1011D1DC8, sub_100A9BAB8);
      v13 = type metadata accessor for Logger(0);
      sub_100048B14(v13, (uint64_t)static Logger.libraryActionableState);
      v14 = swift_retain_n(v2, 4);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc(32, -1);
        v45 = swift_slowAlloc(96, -1);
        v48[0] = v45;
        *(_DWORD *)v17 = 136446722;
        v18 = (char *)MusicLibrary.ActionableState.description.getter(a1, a2);
        v44 = a1;
        v20 = v19;
        *(_QWORD *)(v17 + 4) = sub_10099627C(v18, v19, v48);
        swift_bridgeObjectRelease(v20);
        *(_WORD *)(v17 + 12) = 2082;
        v21 = (char *)MusicLibrary.ActionableState.description.getter(*(_QWORD *)v11, *(_WORD *)(v11 + 8));
        v23 = v22;
        *(_QWORD *)(v17 + 14) = sub_10099627C(v21, v22, v48);
        swift_release_n(v3, 2, v24);
        swift_bridgeObjectRelease(v23);
        *(_WORD *)(v17 + 22) = 2082;
        v25 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 128);
        v26 = swift_beginAccess(v25, v46, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v25, v6, v26);
        v27 = (char *)String.init<A>(describing:)(v9, v6);
        v29 = v28;
        *(_QWORD *)(v17 + 24) = sub_10099627C(v27, v28, v48);
        swift_release_n(v3, 2, v30);
        swift_bridgeObjectRelease(v29);
        v31 = v16;
        v32 = v44;
        _os_log_impl((void *)&_mh_execute_header, v15, v31, "State updated from: %{public}s to: %{public}s for item: %{public}s)", (uint8_t *)v17, 0x20u);
        v33 = v45;
        swift_arrayDestroy(v45, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v17, -1, -1);

      }
      else
      {

        swift_release_n(v3, 4, v34);
        v32 = a1;
      }
      v35 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
      swift_beginAccess(v35, v48, 0, 0);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))v35;
      v36 = *(_QWORD *)(v35 + 8);
      v38 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 128);
      v39 = swift_beginAccess(v38, v47, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v38, v6, v39);
      v40 = *(_QWORD *)v11;
      v41 = *(unsigned __int16 *)(v11 + 8);
      v42 = swift_retain(v36);
      v37(v9, v32, a2, v40, v41, v42);
      v43 = swift_release(v36);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v43);
      break;
  }
}

uint64_t MusicLibrary.ActionableStateController.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_beginAccess(v1, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_100A99450(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *(_QWORD *)v5;
  *(_QWORD *)v5 = a1;
  v7 = *(unsigned __int16 *)(v5 + 8);
  *(_WORD *)(v5 + 8) = a2;
  sub_100A99038(v6, v7);
}

uint64_t MusicLibrary.ActionableStateController.performAction(alertPresenter:noticePresenter:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  v6 = *v4;
  v5[22] = *v4;
  v7 = *(_QWORD *)(v6 + 80);
  v5[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[24] = v8;
  v5[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[26] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[27] = v11;
  v5[28] = v12;
  return swift_task_switch(sub_100A99554, v11, v12);
}

uint64_t sub_100A99554()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t *v9;
  uint64_t Strong;
  uint64_t **v11;
  uint64_t v13;

  v1 = v0[24];
  v2 = v0[25];
  v3 = v0[23];
  v4 = v0[21];
  v5 = v0[19];
  v6 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 152);
  swift_beginAccess(v6, v0 + 11, 0, 0);
  v13 = *(_QWORD *)v6;
  v7 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 128);
  LOWORD(v6) = *(_WORD *)(v6 + 8);
  v8 = swift_beginAccess(v7, v0 + 14, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 16))(v2, v7, v3, v8);
  v9 = *(uint64_t **)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 136));
  sub_100064AC8(v5, (uint64_t)(v0 + 2));
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 24);
  v0[29] = Strong;
  v11 = (uint64_t **)swift_task_alloc(dword_1011D780C);
  v0[30] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_100A9969C;
  return MusicLibrary.performAction<A>(for:on:itemState:alertPresenter:noticePresenter:presentationSource:actionsObserver:metricsReportingContext:)(v13, v6, v0[25], v9, v0[17], v0[18], (uint64_t)(v0 + 2), Strong);
}

uint64_t sub_100A9969C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 232);
  v3 = *(_QWORD *)(*v1 + 240);
  v6 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 200);
  v7 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  sub_10004FF60(v2 + 16, &qword_1011D2F20);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v0)
    v8 = sub_100A99788;
  else
    v8 = sub_100A9974C;
  return swift_task_switch(v8, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

uint64_t sub_100A9974C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A99788()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100A997C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  char *v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t (*v71)(_QWORD, _QWORD, _QWORD);
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  __n128 v97;
  char *v98;
  char *v99;
  char *v100;
  __n128 v101;
  char *v102;
  void (*v103)(char *, char *, uint64_t, __n128);
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t (*v107)(char *, uint64_t);
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  __n128 v121;
  char *v122;
  void (*v123)(char *, uint64_t, __n128);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint8_t *v136;
  __int16 v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  _BOOL4 v144;
  uint8_t *v145;
  uint64_t *v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  __n128 v158;
  __n128 v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  __n128 v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  char *v169;
  os_log_type_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  __n128 v178;
  char *v179;
  uint64_t v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  __int16 v184;
  NSObject *v185;
  os_log_type_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  id result;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  NSObject *v204;
  os_log_type_t v205;
  uint8_t *v206;
  NSObject *v207;
  os_log_type_t v208;
  uint8_t *v209;
  void *v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  NSObject *v216;
  os_log_type_t v217;
  uint8_t *v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  NSObject *v223;
  os_log_type_t v224;
  _BOOL4 v225;
  uint8_t *v226;
  uint64_t v227;
  NSObject *v228;
  os_log_type_t v229;
  _BOOL4 v230;
  uint8_t *v231;
  uint8_t *v232;
  uint8_t *v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int v236;
  uint64_t v237;
  uint64_t *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  _QWORD *v256;
  char *v257;
  char *v258;
  uint64_t TupleTypeMetadata2;
  char *v260;
  _QWORD *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  char *v268;
  uint64_t *v269;
  char v270[8];
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  __int16 v275;
  char v276[8];

  v3 = v2;
  v6 = *v2;
  v255 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v250 = *(_QWORD *)(v255 - 8);
  v7 = __chkstk_darwin(v255);
  v251 = (char *)&v234 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v252 = (char *)&v234 - v10;
  v11 = __chkstk_darwin(v9);
  v257 = (char *)&v234 - v12;
  __chkstk_darwin(v11);
  v253 = (char *)&v234 - v13;
  v14 = sub_100007E8C(&qword_1011D3398);
  __chkstk_darwin(v14);
  v239 = (char *)&v234 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = type metadata accessor for Playlist(0);
  v245 = *(_QWORD *)(v249 - 8);
  v16 = __chkstk_darwin(v249);
  v244 = (char *)&v234 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v243 = (char *)&v234 - v18;
  v247 = type metadata accessor for Album(0);
  v241 = *(_QWORD *)(v247 - 8);
  v19 = __chkstk_darwin(v247);
  v242 = (char *)&v234 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v246 = (char *)&v234 - v21;
  v22 = *(_QWORD *)(v6 + 80);
  v23 = type metadata accessor for MusicLibrary.AddStatus(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v22, v23, 0, 0);
  v248 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v260 = (char *)&v234 - v24;
  v25 = sub_100007E8C(&qword_1011D78F8);
  __chkstk_darwin(v25);
  v27 = (char *)&v234 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = (_QWORD *)type metadata accessor for MusicLibrary.DownloadStatus(0);
  v263 = *(v261 - 1);
  v28 = __chkstk_darwin(v261);
  v238 = (uint64_t *)((char *)&v234 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v234 - v31;
  __chkstk_darwin(v30);
  v266 = (char *)&v234 - v33;
  v34 = sub_100007E8C(&qword_1011D7900);
  v35 = __chkstk_darwin(v34);
  v256 = (uint64_t *)((char *)&v234 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = *(_QWORD *)(v23 - 8);
  v38 = __chkstk_darwin(v35);
  v240 = (char *)&v234 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v38);
  v258 = (char *)&v234 - v41;
  v42 = __chkstk_darwin(v40);
  v268 = (char *)&v234 - v43;
  v262 = v22;
  v264 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v42);
  v254 = (char *)&v234 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (char *)v3 + *(_QWORD *)(v6 + 152);
  swift_beginAccess(v45, v276, 0, 0);
  v237 = *(_QWORD *)v45;
  v236 = *((unsigned __int16 *)v45 + 4);
  v274 = 0;
  v275 = 512;
  if (qword_1011D1DC8 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  v46 = type metadata accessor for Logger(0);
  v47 = sub_100048B14(v46, (uint64_t)static Logger.libraryActionableState);
  v48 = swift_retain_n(v3, 2);
  v267 = v47;
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.default.getter();
  v51 = os_log_type_enabled(v49, v50);
  v269 = v3;
  v265 = v23;
  if (v51)
  {
    v52 = swift_slowAlloc(12, -1);
    v235 = swift_slowAlloc(32, -1);
    v273 = v235;
    *(_DWORD *)v52 = 136446210;
    v53 = (char *)v269 + *(_QWORD *)(*v269 + 128);
    v54 = swift_beginAccess(v53, v270, 0, 0);
    v55 = v27;
    v56 = a1;
    v57 = a2;
    v58 = v37;
    v59 = v32;
    v60 = v254;
    v61 = v53;
    v62 = v262;
    (*(void (**)(char *, char *, uint64_t, __n128))(v264 + 16))(v254, v61, v262, v54);
    v63 = v60;
    v32 = v59;
    v37 = v58;
    a2 = v57;
    a1 = v56;
    v27 = v55;
    v64 = (char *)String.init<A>(describing:)(v63, v62);
    v66 = v65;
    *(_QWORD *)(v52 + 4) = sub_10099627C(v64, v65, &v273);
    swift_release_n(v269, 2, v67);
    swift_bridgeObjectRelease(v66);
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "╭ Updating state for item: %{public}s", (uint8_t *)v52, 0xCu);
    v68 = v235;
    swift_arrayDestroy(v235, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    v69 = v52;
    v23 = v265;
    swift_slowDealloc(v69, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2, v70);
  }
  v71 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v256;
  sub_10004A160(a1, (uint64_t)v256, &qword_1011D7900);
  if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v37 + 48))(v71, 1, v23) == 1)
  {
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
    sub_10004FF60((uint64_t)v71, &qword_1011D7900);
  }
  else
  {
    (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v37 + 32))(v268, v71, v23);
  }
  sub_10004A160(a2, (uint64_t)v27, &qword_1011D78F8);
  v72 = v263;
  v73 = v261;
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v263 + 48))(v27, 1, v261) == 1)
  {
    dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter();
    sub_10004FF60((uint64_t)v27, &qword_1011D78F8);
  }
  else
  {
    (*(void (**)(char *, char *, _QWORD *))(v72 + 32))(v266, v27, v73);
  }
  v74 = v258;
  v75 = *(uint64_t (**)(char *, char *, uint64_t))(v37 + 16);
  v76 = v75(v258, v268, v23);
  v77 = Logger.logObject.getter(v76);
  v78 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v77, v78))
  {
    v79 = swift_slowAlloc(12, -1);
    v80 = swift_slowAlloc(32, -1);
    v273 = v80;
    *(_DWORD *)v79 = 136446210;
    v81 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v82 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, v81);
    v84 = v83;
    *(_QWORD *)(v79 + 4) = sub_10099627C(v82, v83, &v273);
    v85 = swift_bridgeObjectRelease(v84);
    v258 = *(char **)(v37 + 8);
    ((void (*)(char *, uint64_t, __n128))v258)(v74, v23, v85);
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "| Add Status: %{public}s", (uint8_t *)v79, 0xCu);
    swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
    v86 = v80;
    v73 = v261;
    swift_slowDealloc(v86, -1, -1);
    swift_slowDealloc(v79, -1, -1);
  }
  else
  {
    v258 = *(char **)(v37 + 8);
    ((void (*)(char *, uint64_t))v258)(v74, v23);
  }

  v87 = v263;
  v256 = *(_QWORD **)(v263 + 16);
  v88 = ((uint64_t (*)(char *, char *, _QWORD *))v256)(v32, v266, v73);
  v89 = Logger.logObject.getter(v88);
  v90 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v89, v90))
  {
    v91 = swift_slowAlloc(12, -1);
    v92 = swift_slowAlloc(32, -1);
    v273 = v92;
    *(_DWORD *)v91 = 136446210;
    v93 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v94 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v73, v93);
    v96 = v95;
    *(_QWORD *)(v91 + 4) = sub_10099627C(v94, v95, &v273);
    v97 = swift_bridgeObjectRelease(v96);
    v261 = *(_QWORD **)(v87 + 8);
    ((void (*)(char *, _QWORD *, __n128))v261)(v32, v73, v97);
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "| Download Status: %{public}s", (uint8_t *)v91, 0xCu);
    swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1, -1);
    swift_slowDealloc(v91, -1, -1);
  }
  else
  {
    v261 = *(_QWORD **)(v87 + 8);
    ((void (*)(char *, _QWORD *))v261)(v32, v73);
  }

  v98 = v260;
  v99 = v257;
  v100 = (char *)v269 + *(_QWORD *)(*v269 + 128);
  v101 = swift_beginAccess(v100, &v273, 0, 0);
  v102 = &v98[*(int *)(TupleTypeMetadata2 + 48)];
  v103 = *(void (**)(char *, char *, uint64_t, __n128))(v264 + 16);
  v104 = v262;
  v103(v98, v100, v262, v101);
  v105 = v265;
  v75(v102, v268, v265);
  v106 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v102, v105);
  if (v106 == enum case for MusicLibrary.AddStatus.addable(_:))
  {
    v274 = 0;
    v275 = 768;
    v107 = (uint64_t (*)(char *, uint64_t))v258;
    ((void (*)(char *, uint64_t))v258)(v102, v105);
    goto LABEL_45;
  }
  if (v106 == enum case for MusicLibrary.AddStatus.unaddable(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v102, v265);
    v108 = v250;
    v109 = v253;
    v110 = v255;
    (*(void (**)(char *, char *, uint64_t))(v250 + 32))(v253, v102, v255);
    v111 = *(uint64_t (**)(char *, char *, uint64_t))(v108 + 16);
    v112 = v111(v99, v109, v110);
    v113 = Logger.logObject.getter(v112);
    v114 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = swift_slowAlloc(12, -1);
      v116 = swift_slowAlloc(32, -1);
      v272 = v116;
      *(_DWORD *)v115 = 136446210;
      v117 = sub_100048748(&qword_1011D2FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v118 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v255, v117);
      v120 = v119;
      *(_QWORD *)(v115 + 4) = sub_10099627C(v118, v119, &v272);
      v121 = swift_bridgeObjectRelease(v120);
      v122 = v99;
      v123 = *(void (**)(char *, uint64_t, __n128))(v108 + 8);
      v123(v122, v255, v121);
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "|—● Item is unaddable: %{public}s", (uint8_t *)v115, 0xCu);
      swift_arrayDestroy(v116, 1, (char *)&type metadata for Any + 8);
      v124 = v116;
      v109 = v253;
      swift_slowDealloc(v124, -1, -1);
      v125 = v115;
      v110 = v255;
      swift_slowDealloc(v125, -1, -1);
    }
    else
    {
      v138 = v99;
      v123 = *(void (**)(char *, uint64_t, __n128))(v108 + 8);
      ((void (*)(char *, uint64_t))v123)(v138, v110);
    }

    v139 = v251;
    v140 = v252;
    v111(v252, v109, v110);
    v141 = (*(uint64_t (**)(char *, uint64_t))(v108 + 88))(v140, v110);
    if ((_DWORD)v141 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      || (_DWORD)v141 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      || (_DWORD)v141 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v167 = v111(v139, v109, v110);
      v168 = Logger.logObject.getter(v167);
      v169 = v139;
      v170 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v168, v170))
      {
        v171 = v110;
        v172 = swift_slowAlloc(12, -1);
        v173 = swift_slowAlloc(32, -1);
        v272 = v173;
        *(_DWORD *)v172 = 136315138;
        v174 = sub_100048748(&qword_1011D2FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v175 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v171, v174);
        v177 = v176;
        *(_QWORD *)(v172 + 4) = sub_10099627C(v175, v176, &v272);
        v178 = swift_bridgeObjectRelease(v177);
        v123(v169, v171, v178);
        swift_arrayDestroy(v173, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v173, -1, -1);
        swift_slowDealloc(v172, -1, -1);

        v179 = v253;
        v180 = v171;
      }
      else
      {

        ((void (*)(char *, uint64_t))v123)(v169, v110);
        v179 = v109;
        v180 = v110;
      }
      ((void (*)(char *, uint64_t))v123)(v179, v180);
      v104 = v262;
      v274 = 0;
      v275 = 768;
    }
    else
    {
      v142 = Logger.logObject.getter(v141);
      v143 = static os_log_type_t.default.getter();
      v144 = os_log_type_enabled(v142, v143);
      v104 = v262;
      if (v144)
      {
        v145 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v145 = 0;
        _os_log_impl((void *)&_mh_execute_header, v142, v143, "|—| Reason is not actionable by the user", v145, 2u);
        swift_slowDealloc(v145, -1, -1);
      }

      ((void (*)(char *, uint64_t))v123)(v109, v110);
      v274 = 0;
      v275 = 512;
      ((void (*)(char *, uint64_t))v123)(v252, v110);
    }
    v107 = (uint64_t (*)(char *, uint64_t))v258;
    goto LABEL_45;
  }
  if (v106 != enum case for MusicLibrary.AddStatus.added(_:))
  {
    v146 = v269;
    v147 = swift_retain_n(v269, 4);
    v148 = Logger.logObject.getter(v147);
    v149 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v148, v149))
    {
      v150 = swift_slowAlloc(22, -1);
      v264 = swift_slowAlloc(64, -1);
      v272 = v264;
      *(_DWORD *)v150 = 136446466;
      v151 = v240;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
      v152 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v153 = v265;
      v154 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v265, v152);
      v156 = v155;
      v157 = v153;
      v107 = (uint64_t (*)(char *, uint64_t))v258;
      ((void (*)(char *, uint64_t))v258)(v151, v157);
      *(_QWORD *)(v150 + 4) = sub_10099627C(v154, v156, &v272);
      swift_release_n(v269, 2, v158);
      v159 = swift_bridgeObjectRelease(v156);
      *(_WORD *)(v150 + 12) = 2082;
      v160 = v254;
      v161 = v262;
      v103(v254, v100, v262, v159);
      v162 = (char *)String.init<A>(describing:)(v160, v161);
      v164 = v163;
      *(_QWORD *)(v150 + 14) = sub_10099627C(v162, v163, &v272);
      swift_release_n(v269, 2, v165);
      swift_bridgeObjectRelease(v164);
      _os_log_impl((void *)&_mh_execute_header, v148, v149, "| Unhandled add status (%{public}s) for item: %{public}s", (uint8_t *)v150, 0x16u);
      v166 = v264;
      swift_arrayDestroy(v264, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v166, -1, -1);
      swift_slowDealloc(v150, -1, -1);

    }
    else
    {

      swift_release_n(v146, 4, v181);
      v107 = (uint64_t (*)(char *, uint64_t))v258;
    }
    v274 = 0;
    v275 = 512;
    v264 = v248;
    v104 = TupleTypeMetadata2;
    v98 = v260;
    goto LABEL_45;
  }
  v126 = v246;
  v127 = v247;
  v128 = swift_dynamicCast(v246, v98, v104, v247, 0);
  v107 = (uint64_t (*)(char *, uint64_t))v258;
  v129 = v249;
  if (v128)
  {
    v130 = v241;
    v131 = v242;
    (*(void (**)(char *, char *, uint64_t))(v241 + 32))(v242, v126, v127);
    v132 = Album.childrenAddStatus(_:)(v269[2]);
    if (v132 == 1)
    {
      v133 = Logger.logObject.getter(v132);
      v134 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v133, v134))
      {
        v135 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v135 = 0;
        _os_log_impl((void *)&_mh_execute_header, v133, v134, "| Album is already added but has at least 1 addable track", v135, 2u);
        v136 = v135;
        v131 = v242;
        swift_slowDealloc(v136, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v127);
      v274 = 0;
      v137 = 768;
LABEL_56:
      v275 = v137;
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v127);
  }
  v193 = v243;
  v194 = swift_dynamicCast(v243, v98, v104, v129, 0);
  if ((_DWORD)v194)
  {
    v195 = (*(uint64_t (**)(char *, char *, uint64_t))(v245 + 32))(v244, v193, v129);
    v196 = v239;
    Playlist.entries.getter(v195);
    v197 = (uint64_t)v196;
    v198 = sub_100007E8C(&qword_1011D6820);
    v199 = *(_QWORD *)(v198 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v197, 1, v198) == 1)
    {
      sub_10004FF60(v197, &qword_1011D3398);
      v107 = (uint64_t (*)(char *, uint64_t))v258;
    }
    else
    {
      v200 = sub_100049F28((unint64_t *)&qword_1011D6850, &qword_1011D6820, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Collection.startIndex.getter(v198);
      dispatch thunk of Collection.endIndex.getter(&v271, v198, v200);
      v201 = v271;
      v202 = v272;
      v203 = (*(uint64_t (**)(uint64_t, uint64_t))(v199 + 8))(v197, v198);
      v107 = (uint64_t (*)(char *, uint64_t))v258;
      if (v202 == v201)
      {
        v204 = Logger.logObject.getter(v203);
        v205 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v204, v205))
        {
          v206 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v206 = 0;
          _os_log_impl((void *)&_mh_execute_header, v204, v205, "| Playlist is already added but does not have any tracks", v206, 2u);
          swift_slowDealloc(v206, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v245 + 8))(v244, v129);
        v274 = 0;
        v137 = 512;
        goto LABEL_56;
      }
    }
    v194 = (*(uint64_t (**)(char *, uint64_t))(v245 + 8))(v244, v129);
  }
  v207 = Logger.logObject.getter(v194);
  v208 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v207, v208))
  {
    v209 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v209 = 0;
    _os_log_impl((void *)&_mh_execute_header, v207, v208, "|—● Item is added", v209, 2u);
    swift_slowDealloc(v209, -1, -1);
  }

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v210 = result;
  v211 = objc_msgSend(result, "canShowCloudDownloadButtons");

  if (!v211)
  {
    v216 = Logger.logObject.getter(v212);
    v217 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v216, v217))
    {
      v218 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v218 = 0;
      _os_log_impl((void *)&_mh_execute_header, v216, v217, "|—| MPCloudController -canShowCloudDownloadButton: NO", v218, 2u);
      swift_slowDealloc(v218, -1, -1);
    }

    goto LABEL_67;
  }
  v213 = v238;
  ((void (*)(uint64_t *, char *, _QWORD *))v256)(v238, v266, v73);
  v214 = v263;
  v215 = (*(uint64_t (**)(uint64_t *, _QWORD *))(v263 + 88))(v213, v73);
  if ((_DWORD)v215 == enum case for MusicLibrary.DownloadStatus.downloading(_:))
  {
    (*(void (**)(uint64_t *, _QWORD *))(v214 + 96))(v213, v73);
    v274 = *v213;
    v275 = 0;
    goto LABEL_45;
  }
  v219 = v215;
  if ((_DWORD)v215 == enum case for MusicLibrary.DownloadStatus.paused(_:))
  {
    (*(void (**)(uint64_t *, _QWORD *))(v263 + 96))(v213, v73);
    v220 = v237;
    if (((v236 >> 8) - 2 < 4) | v236 & 1)
      v220 = 0;
    v274 = v220;
    v275 = ((v236 >> 8) - 2 < 4) | v236 & 1 | 0x100;
    v221 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v221 - 8) + 8))(v213, v221);
    goto LABEL_45;
  }
  if ((_DWORD)v215 == enum case for MusicLibrary.DownloadStatus.notDownloadable(_:))
  {
LABEL_67:
    v274 = 0;
    v275 = 512;
    goto LABEL_45;
  }
  if ((_DWORD)v215 != enum case for MusicLibrary.DownloadStatus.downloadable(_:))
  {
    if ((_DWORD)v215 == enum case for MusicLibrary.DownloadStatus.downloadWaiting(_:))
    {
      v274 = 0;
      v275 = 1;
      goto LABEL_45;
    }
    if ((_DWORD)v215 == enum case for MusicLibrary.DownloadStatus.downloaded(_:))
    {
      v274 = 0;
      v275 = 1280;
      goto LABEL_45;
    }
    v222 = enum case for MusicLibrary.DownloadStatus.cancelled(_:);
    v223 = Logger.logObject.getter(v215);
    v224 = static os_log_type_t.default.getter();
    v225 = os_log_type_enabled(v223, v224);
    if (v219 != v222)
    {
      v107 = (uint64_t (*)(char *, uint64_t))v258;
      if (v225)
      {
        v232 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v232 = 0;
        _os_log_impl((void *)&_mh_execute_header, v223, v224, "|—| Unhandled case", v232, 2u);
        v233 = v232;
        v213 = v238;
        swift_slowDealloc(v233, -1, -1);
      }

      v274 = 0;
      v275 = 512;
      ((void (*)(uint64_t *, _QWORD *))v261)(v213, v73);
      goto LABEL_45;
    }
    if (v225)
    {
      v226 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v226 = 0;
      swift_slowDealloc(v226, -1, -1);
    }

    v228 = Logger.logObject.getter(v227);
    v229 = static os_log_type_t.default.getter();
    v230 = os_log_type_enabled(v228, v229);
    v107 = (uint64_t (*)(char *, uint64_t))v258;
    if (v230)
    {
      v231 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v231 = 0;
      _os_log_impl((void *)&_mh_execute_header, v228, v229, "|—| 🌚 though we're not sure this is the right thing to do", v231, 2u);
      swift_slowDealloc(v231, -1, -1);
    }

  }
  v274 = 0;
  v275 = 1024;
LABEL_45:
  v182 = (*(uint64_t (**)(char *, uint64_t))(v264 + 8))(v98, v104);
  v183 = v274;
  v184 = v275;
  v185 = Logger.logObject.getter(v182);
  v186 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v185, v186))
  {
    v187 = swift_slowAlloc(12, -1);
    v188 = swift_slowAlloc(32, -1);
    v272 = v188;
    *(_DWORD *)v187 = 136446210;
    v189 = (char *)MusicLibrary.ActionableState.description.getter(v183, v184);
    v191 = v190;
    *(_QWORD *)(v187 + 4) = sub_10099627C(v189, v190, &v272);
    swift_bridgeObjectRelease(v191);
    _os_log_impl((void *)&_mh_execute_header, v185, v186, "╰ Item state resolved to %{public}s", (uint8_t *)v187, 0xCu);
    swift_arrayDestroy(v188, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v188, -1, -1);
    swift_slowDealloc(v187, -1, -1);
  }

  swift_beginAccess(&v274, &v272, 0, 0);
  sub_100A99450(v274, v275);
  ((void (*)(char *, _QWORD *))v261)(v266, v73);
  return (id)v107(v268, v265);
}

double sub_100A9B0EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  uint64_t v36;
  char v37[24];

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = sub_100007E8C(&qword_1011D78D8);
  v4 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v34 = v4;
  __chkstk_darwin(v3);
  v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D78E0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v0 + v2[21]);
  swift_beginAccess(v9, v37, 1, 0);
  v10 = *v9;
  *v9 = (uint64_t)&_swiftEmptySetSingleton;
  v11 = swift_bridgeObjectRelease(v10);
  v30 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  dispatch thunk of MusicLibrary.ItemState.$addStatus.getter(v11);
  v12 = swift_allocObject(&unk_1010F44E0, 24, 7);
  swift_weakInit(v12 + 16, v1);
  v13 = (_QWORD *)swift_allocObject(&unk_1010F4508, 56, 7);
  v14 = v2[10];
  v13[2] = v14;
  v15 = v2[11];
  v13[3] = v15;
  v16 = v2[12];
  v13[4] = v16;
  v17 = v2[13];
  v13[5] = v17;
  v13[6] = v12;
  v18 = sub_100049F28(&qword_1011D78E8, &qword_1011D78E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v19 = Publisher<>.sink(receiveValue:)(sub_100A9D09C, v13, v6, v18);
  v20 = swift_release(v13);
  (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v8, v6, v20);
  swift_beginAccess(v9, v35, 33, 0);
  sub_100AAAF04(&v36, v19);
  swift_endAccess(v35);
  v21 = swift_release(v36);
  v22 = v32;
  dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v21);
  v23 = swift_allocObject(&unk_1010F44E0, 24, 7);
  swift_weakInit(v23 + 16, v1);
  v24 = (_QWORD *)swift_allocObject(&unk_1010F4530, 56, 7);
  v24[2] = v14;
  v24[3] = v15;
  v24[4] = v16;
  v24[5] = v17;
  v24[6] = v23;
  v25 = sub_100049F28(&qword_1011D78F0, &qword_1011D78D8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v26 = v33;
  v27 = Publisher<>.sink(receiveValue:)(sub_100A9D0A8, v24, v33, v25);
  v28 = swift_release(v24);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v22, v26, v28);
  swift_beginAccess(v9, v35, 33, 0);
  sub_100AAAF04(&v36, v27);
  swift_endAccess(v35);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

uint64_t sub_100A9B3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36[3];

  v4 = sub_100007E8C(&qword_1011D78F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D7900);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.AddStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2 + 16;
  if (qword_1011D1DC8 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  v15 = type metadata accessor for Logger(0);
  sub_100048B14(v15, (uint64_t)static Logger.libraryActionableState);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16 = v35(v13, a1, v10);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v33 = a1;
    v20 = v19;
    v21 = swift_slowAlloc(32, -1);
    v34 = v6;
    v22 = v21;
    v36[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v23 = sub_100048748(&qword_1011D7820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v23);
    v26 = v25;
    *(_QWORD *)(v20 + 4) = sub_10099627C(v24, v25, v36);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v27);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Add status has updated to %{public}s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v28 = v22;
    v6 = v34;
    swift_slowDealloc(v28, -1, -1);
    v29 = v20;
    a1 = v33;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  swift_beginAccess(v14, v36, 0, 0);
  result = swift_weakLoadStrong(v14);
  if (result)
  {
    v31 = result;
    v35(v9, a1, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    v32 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
    sub_100A997C4((uint64_t)v9, (uint64_t)v6);
    swift_release(v31);
    sub_10004FF60((uint64_t)v6, &qword_1011D78F8);
    return sub_10004FF60((uint64_t)v9, &qword_1011D7900);
  }
  return result;
}

uint64_t sub_100A9B6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36[3];

  v4 = sub_100007E8C(&qword_1011D78F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D7900);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2 + 16;
  if (qword_1011D1DC8 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  v15 = type metadata accessor for Logger(0);
  sub_100048B14(v15, (uint64_t)static Logger.libraryActionableState);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16 = v35(v13, a1, v10);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v33 = v9;
    v20 = v19;
    v21 = swift_slowAlloc(32, -1);
    v34 = a1;
    v22 = v21;
    v36[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v23 = sub_100048748(&qword_1011D7828, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v23);
    v26 = v25;
    *(_QWORD *)(v20 + 4) = sub_10099627C(v24, v25, v36);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v27);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Download status has updated to %{public}s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v28 = v22;
    a1 = v34;
    swift_slowDealloc(v28, -1, -1);
    v29 = v20;
    v9 = v33;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  swift_beginAccess(v14, v36, 0, 0);
  result = swift_weakLoadStrong(v14);
  if (result)
  {
    v31 = result;
    v32 = type metadata accessor for MusicLibrary.AddStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
    v35(v6, a1, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    sub_100A997C4((uint64_t)v9, (uint64_t)v6);
    swift_release(v31);
    sub_10004FF60((uint64_t)v6, &qword_1011D78F8);
    return sub_10004FF60((uint64_t)v9, &qword_1011D7900);
  }
  return result;
}

uint64_t *MusicLibrary.ActionableStateController.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_release();
  sub_10013C71C((uint64_t)(v0 + 3), v2);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MusicLibrary.ActionableStateController.__deallocating_deinit()
{
  uint64_t v0;

  MusicLibrary.ActionableStateController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A9BAB8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.libraryActionableState);
  sub_100048B14(v0, (uint64_t)static Logger.libraryActionableState);
  sub_10004A07C(0, (unint64_t *)&qword_1011D5A90, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0xD000000000000018, 0x8000000100E4F8B0);
  return Logger.init(_:)(v1);
}

uint64_t static Logger.libraryActionableState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1DC8 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.libraryActionableState);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100A9BBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType(a2))
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  else
    return type metadata accessor for _ContiguousArrayStorage(0, a2);
}

uint64_t sub_100A9BC14(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7A94);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A88E18(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9BCA4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7AB4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A89424(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9BD34(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7B34);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A899CC(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9BDC4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D7B14);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1009D0B20;
  return sub_100A89F74(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9BE54(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D7AF4);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1009D0B20;
  return sub_100A8A934(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9BEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v8;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v9;
  v10 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v10;
  v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D79F4);
  *(_QWORD *)(v4 + 152) = v12;
  *v12 = v4;
  v12[1] = sub_1009CA594;
  return sub_100A8B354(a1, a2, a3, (__int128 *)(v4 + 16));
}

uint64_t sub_100A9BF7C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7AD4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A8BD88(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C00C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7A54);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A8C330(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C09C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D791C);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A8C8D8(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v5;
  char v10;
  _QWORD *v11;

  v10 = *a5;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7934);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_10006AEE4;
  return sub_100A8CE80(a1, a2, a3, a4, v10);
}

uint64_t sub_100A9C1AC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D7A14);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1009CAFB0;
  return sub_100A8D7E0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C23C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D7A34);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1009D0B20;
  return sub_100A8E200(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C2CC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7A74);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A8E740(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C35C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7974);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A8ECE8(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C3EC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7994);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009CB9A8;
  return sub_100A8F290(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C47C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D79B4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A8FEBC(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C50C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D79D4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1009D0B1C;
  return sub_100A90464(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100A9C59C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v9 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1011D7954);
  *(_QWORD *)(v4 + 112) = v11;
  *v11 = v4;
  v11[1] = sub_1009CC2AC;
  return sub_100A90A0C(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t _s8MusicKit0A7LibraryC0A4CoreE15ActionableStateO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  switch(HIBYTE(a2))
  {
    case 2:
      return (a4 & 0xFF00) == 0x200;
    case 3:
      return (a4 & 0xFF00) == 0x300;
    case 4:
      return (a4 & 0xFF00) == 0x400;
    case 5:
      return (a4 & 0xFF00) == 0x500;
    default:
      if (HIBYTE(a4) - 2 < 4)
        return 0;
      if ((a2 & 1) != 0)
      {
        if ((a4 & 1) == 0)
          return 0;
      }
      else if ((a4 & 1) != 0 || *(double *)&a1 != *(double *)&a3)
      {
        return 0;
      }
      return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
  }
}

unint64_t sub_100A9C6EC()
{
  unint64_t result;

  result = qword_1011D7810;
  if (!qword_1011D7810)
  {
    result = swift_getWitnessTable(&unk_100EE02C8, &_s15ActionableStateO5ErrorON);
    atomic_store(result, &qword_1011D7810);
  }
  return result;
}

uint64_t sub_100A9C730()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

char *sub_100A9C754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v7 = v6;
  v70 = a1;
  v13 = *(_QWORD *)v7;
  v14 = sub_100007E8C(&qword_1011D78F8);
  __chkstk_darwin(v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D7900);
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v7 + 4) = 0;
  swift_unknownObjectWeakInit(v7 + 24, 0);
  v20 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 152)];
  *(_QWORD *)v20 = 0;
  *((_WORD *)v20 + 4) = 512;
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 160)] = 0;
  v69 = a3;
  v67 = v16;
  v65 = v7 + 24;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_100A4CAA8((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v21 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 168)] = v21;
  v22 = *(_QWORD *)(v13 + 80);
  v68 = v13;
  v66 = *(_QWORD *)(v13 + 96);
  v23 = MusicLibrary.state<A>(for:)(v70, v22, v66);
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 136)] = v23;
  v24 = qword_1011D1DC8;
  swift_retain(v23);
  if (v24 != -1)
    swift_once(&qword_1011D1DC8, sub_100A9BAB8);
  v25 = type metadata accessor for Logger(0);
  sub_100048B14(v25, (uint64_t)static Logger.libraryActionableState);
  v26 = swift_retain_n(v23, 2);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(12, -1);
    v64 = a6;
    v62 = a4;
    v30 = v29;
    v31 = swift_slowAlloc(32, -1);
    v63 = a5;
    v32 = a2;
    v33 = v31;
    v71 = v23;
    v72 = v31;
    *(_DWORD *)v30 = 136446210;
    v34 = (char *)String.init<A>(describing:)(&v71, &type metadata for UnsafeRawPointer);
    v36 = v35;
    *(_QWORD *)(v30 + 4) = sub_10099627C(v34, v35, &v72);
    swift_release_n(v23, 2, v37);
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Initializing item state: %{public}s", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    v38 = v33;
    a2 = v32;
    a5 = v63;
    swift_slowDealloc(v38, -1, -1);
    v39 = v30;
    a4 = v62;
    a6 = v64;
    swift_slowDealloc(v39, -1, -1);

  }
  else
  {

    swift_release_n(v23, 2, v40);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(&v7[*(_QWORD *)(*(_QWORD *)v7 + 128)], v70, v22);
  *((_QWORD *)v7 + 2) = a2;
  *((_QWORD *)v7 + 4) = a4;
  v41 = v69;
  swift_unknownObjectWeakAssign(v65, v69);
  v42 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 144)];
  *(_QWORD *)v42 = a5;
  *((_QWORD *)v42 + 1) = a6;
  v43 = a6;
  v44 = type metadata accessor for MusicLibrary.AddStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v19, 1, 1, v44);
  v45 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v46 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v67, 1, 1, v45);
  swift_retain(a2);
  swift_retain(v43);
  sub_100A997C4((uint64_t)v19, v46);
  sub_10004FF60(v46, &qword_1011D78F8);
  sub_10004FF60((uint64_t)v19, &qword_1011D7900);
  v47 = (void *)MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification;
  v48 = (void *)objc_opt_self(MPCloudController);
  v49 = v47;
  v50 = objc_msgSend(v48, "sharedCloudController");
  v51 = swift_allocObject(&unk_1010F44E0, 24, 7);
  swift_weakInit(v51 + 16, v7);
  v52 = a2;
  v53 = (_QWORD *)swift_allocObject(&unk_1010F4558, 56, 7);
  v53[2] = v22;
  v54 = v68;
  v55 = v66;
  v53[3] = *(_QWORD *)(v68 + 88);
  v53[4] = v55;
  v53[5] = *(_QWORD *)(v54 + 104);
  v53[6] = v51;
  v56 = type metadata accessor for NotificationObserver();
  swift_allocObject(v56, 64, 7);
  v57 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v49, (uint64_t)v50, 1, 1, (uint64_t)sub_100A9D0B4, (uint64_t)v53);
  v58 = *(_QWORD *)(*(_QWORD *)v7 + 160);
  v59 = *(_QWORD *)&v7[v58];
  *(_QWORD *)&v7[v58] = v57;
  swift_release(v59);
  sub_100A9B0EC();
  swift_release(v23);
  swift_release(v52);
  swift_unknownObjectRelease(v41);
  swift_release(v43);
  return v7;
}

uint64_t sub_100A9CC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + *(_QWORD *)(v7 + 128);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  v10 = swift_beginAccess(v8, v12, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v8, a1, v3, v10);
  swift_endAccess(v12);
  sub_100A982F4(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100A9CD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  __int16 v5;
  _BYTE v6[24];

  v3 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 152);
  result = swift_beginAccess(v3, v6, 0, 0);
  v5 = *(_WORD *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_WORD *)(a2 + 8) = v5;
  return result;
}

void sub_100A9CD70(uint64_t a1)
{
  sub_100A99450(*(_QWORD *)a1, *(_WORD *)(a1 + 8));
}

uint64_t sub_100A9CD9C()
{
  return 32;
}

__n128 sub_100A9CDA8(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t _s15ActionableStateOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s15ActionableStateOwet(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 < 2)
    return 0;
  v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  result = v4 - 3;
  if (v4 <= 3)
    return 0;
  return result;
}

uint64_t _s15ActionableStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 5;
  }
  return result;
}

uint64_t sub_100A9CE58(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 9);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_100A9CE74(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicLibrary.ActionableState()
{
  return &type metadata for MusicLibrary.ActionableState;
}

uint64_t sub_100A9CEAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100EE0210;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for () + 64;
    v4[5] = &unk_100EE0228;
    v4[6] = &unk_100EE0240;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_initClassMetadata2(a1, 0, 8, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MusicLibrary.ActionableStateController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for MusicLibrary.ActionableStateController);
}

uint64_t _s15ActionableStateO5ErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100A9CFB0 + 4 * byte_100EE0164[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100A9CFD0 + 4 * byte_100EE0169[v4]))();
}

_BYTE *sub_100A9CFB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100A9CFD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A9CFD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A9CFE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A9CFE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A9CFF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15ActionableStateO5ErrorOMa()
{
  return &_s15ActionableStateO5ErrorON;
}

unint64_t sub_100A9D010()
{
  unint64_t result;

  result = qword_1011D78D0;
  if (!qword_1011D78D0)
  {
    result = swift_getWitnessTable(&unk_100EE02A0, &_s15ActionableStateO5ErrorON);
    atomic_store(result, (unint64_t *)&qword_1011D78D0);
  }
  return result;
}

uint64_t sub_100A9D054()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A9D078()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100A9D09C(uint64_t a1)
{
  return sub_100A9D0C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100A9B3CC);
}

uint64_t sub_100A9D0A8(uint64_t a1)
{
  return sub_100A9D0C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100A9B6E8);
}

uint64_t sub_100A9D0B4(uint64_t a1)
{
  return sub_100A9D0C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100A981AC);
}

uint64_t sub_100A9D0C0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100A9D0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D790C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7908 + dword_1011D7908))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D164(uint64_t a1)
{
  uint64_t v1;

  return sub_100A91938(a1, v1 + 16, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9D184()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 233);
}

uint64_t sub_100A9D1F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7924);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))((char *)&dword_1011D7920 + dword_1011D7920))(a1, v4, v5, v1 + 32, (char *)(v1 + 232));
}

uint64_t sub_100A9D284(uint64_t a1)
{
  uint64_t v1;

  return sub_100A91938(a1, v1 + 16, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9D2A8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[6];

  v2 = v1[4];
  v6[2] = v1[3];
  v6[3] = v2;
  v3 = v1[6];
  v6[4] = v1[5];
  v6[5] = v3;
  v4 = v1[2];
  v6[0] = v1[1];
  v6[1] = v4;
  return sub_100A91B1C(a1, (uint64_t)v6, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9D2E8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100A9D334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7944);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7940 + dword_1011D7940))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D3B8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[6];

  v2 = v1[4];
  v6[2] = v1[3];
  v6[3] = v2;
  v3 = v1[6];
  v6[4] = v1[5];
  v6[5] = v3;
  v4 = v1[2];
  v6[0] = v1[1];
  v6[1] = v4;
  return sub_100A91B1C(a1, (uint64_t)v6, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9D400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7964);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7960 + dword_1011D7960))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D488(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[7];

  v2 = v1[6];
  v6[4] = v1[5];
  v6[5] = v2;
  v6[6] = v1[7];
  v3 = v1[2];
  v6[0] = v1[1];
  v6[1] = v3;
  v4 = v1[4];
  v6[2] = v1[3];
  v6[3] = v4;
  return sub_100A88844(a1, (uint64_t)v6, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9D4D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7984);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7980 + dword_1011D7980))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D558(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[7];

  v2 = v1[6];
  v6[4] = v1[5];
  v6[5] = v2;
  v6[6] = v1[7];
  v3 = v1[2];
  v6[0] = v1[1];
  v6[1] = v3;
  v4 = v1[4];
  v6[2] = v1[3];
  v6[3] = v4;
  return sub_100A88844(a1, (uint64_t)v6, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9D5A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D79A4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D79A0 + dword_1011D79A0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D79C4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D79C0 + dword_1011D79C0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D6BC(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];
  uint64_t v8;

  v2 = *(_OWORD *)(v1 + 128);
  v7[6] = *(_OWORD *)(v1 + 112);
  v7[7] = v2;
  v8 = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  v7[2] = *(_OWORD *)(v1 + 48);
  v7[3] = v3;
  v4 = *(_OWORD *)(v1 + 96);
  v7[4] = *(_OWORD *)(v1 + 80);
  v7[5] = v4;
  v5 = *(_OWORD *)(v1 + 32);
  v7[0] = *(_OWORD *)(v1 + 16);
  v7[1] = v5;
  return sub_100A9175C(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9D70C()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_100A9D778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D79E4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011D79E0 + dword_1011D79E0))(a1, v4, v5, v1 + 32);
}

uint64_t sub_100A9D7FC(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];
  uint64_t v8;

  v2 = *(_OWORD *)(v1 + 128);
  v7[6] = *(_OWORD *)(v1 + 112);
  v7[7] = v2;
  v8 = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  v7[2] = *(_OWORD *)(v1 + 48);
  v7[3] = v3;
  v4 = *(_OWORD *)(v1 + 96);
  v7[4] = *(_OWORD *)(v1 + 80);
  v7[5] = v4;
  v5 = *(_OWORD *)(v1 + 32);
  v7[0] = *(_OWORD *)(v1 + 16);
  v7[1] = v5;
  return sub_100A9175C(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9D84C()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9D85C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100A88C1C(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9D8A4()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9D8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7A04);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7A00 + dword_1011D7A00))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9D934()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9D944(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100A88C1C(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9D98C()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9D99C()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9D9AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7A24);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7A20 + dword_1011D7A20))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DA2C()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9DA44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7A44);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7A40 + dword_1011D7A40))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7A64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7A60 + dword_1011D7A60))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DB5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7A84);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7A80 + dword_1011D7A80))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DBE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7AA4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7AA0 + dword_1011D7AA0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DC74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7AC4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7AC0 + dword_1011D7AC0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DCF8()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100A9DD0C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100A88A20(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9DD54()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100A9DD68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7AE4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7AE0 + dword_1011D7AE0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DDE8()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100A9DDFC(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100A88A20(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9DE44()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9DE58(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100A91580(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100A9DEA0()
{
  return sub_1009D02B0((void (*)(_QWORD, __n128))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9DEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7B04);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7B00 + dword_1011D7B00))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100A9DF34()
{
  return sub_1009D0158((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100A9DF48(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100A91580(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100A9DF98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1011D7B24);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1011D7B20 + dword_1011D7B20))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t Library.ContentFilterOption.id.getter(char a1)
{
  if (!a1)
    return 7105633;
  if (a1 == 1)
    return 0x657469726F766166;
  return 0x64616F6C6E776F64;
}

uint64_t sub_100A9E0B0(char *a1, unsigned __int8 *a2)
{
  return sub_1009A44E8(*a1, *a2);
}

unint64_t sub_100A9E0BC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO19ContentFilterOptionO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100A9E0E8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0x657469726F766166;
  if (v2 != 1)
    v4 = 0x64616F6C6E776F64;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 7105633;
  if (!v5)
    v3 = 0xE900000000000073;
  *a1 = v6;
  a1[1] = v3;
}

Swift::Int sub_100A9E148()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = 0x657469726F766166;
  if (v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100A9E1E8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = 0x657469726F766166;
  if (*v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (*v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (*v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_100A9E264(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = 0x657469726F766166;
  if (v2 != 1)
    v3 = 0x64616F6C6E776F64;
  if (v2)
    v4 = v3;
  else
    v4 = 7105633;
  if (v2)
    v5 = 0xE900000000000073;
  else
    v5 = 0xE300000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100A9E300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100AA44B0();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100A9E35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100AA44B0();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void Optional<A>.convertToSet.getter(char a1)
{
  __asm { BR              X10 }
}

void *sub_100A9E3F0()
{
  swift_bridgeObjectRelease(0xE300000000000000);
  return &_swiftEmptySetSingleton;
}

uint64_t Library.Context.musicLibrary.getter()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t Library.Context.musicLibrary.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release(*v1);
  *v1 = a1;
  return result;
}

uint64_t Library.Context.album.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 20), a1, &qword_1011D2FC8);
}

uint64_t Library.Context.album.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 20), &qword_1011D2FC8);
}

double (*Library.Context.album.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.artist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 24), a1, &qword_1011D47E0);
}

uint64_t Library.Context.artist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 24), &qword_1011D47E0);
}

double (*Library.Context.artist.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.composer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 28), a1, &qword_1011D7B58);
}

uint64_t Library.Context.composer.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 28), &qword_1011D7B58);
}

double (*Library.Context.composer.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.genre.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 32), a1, &qword_1011D7B60);
}

uint64_t Library.Context.genre.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 32), &qword_1011D7B60);
}

double (*Library.Context.genre.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 36), a1, &qword_1011D6830);
}

uint64_t Library.Context.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 36), &qword_1011D6830);
}

double (*Library.Context.playlist.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.tvShow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 40), a1, &qword_1011D4958);
}

uint64_t Library.Context.tvShow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 40), &qword_1011D4958);
}

double (*Library.Context.tvShow.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.tvSeason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_10004A160(v1 + *(int *)(v3 + 44), a1, &qword_1011D4928);
}

uint64_t Library.Context.tvSeason.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 44), &qword_1011D4928);
}

double (*Library.Context.tvSeason.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.useDownloadedContentOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 48));
}

uint64_t Library.Context.useDownloadedContentOnly.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

double (*Library.Context.useDownloadedContentOnly.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.sortOption.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 52));
}

uint64_t Library.Context.sortOption.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

double (*Library.Context.sortOption.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.filterOption.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 56));
}

uint64_t Library.Context.filterOption.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

double (*Library.Context.filterOption.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

void Library.Context.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Library.Context.text.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.playlistVariants.getter()
{
  type metadata accessor for Library.Context(0);
  return swift_bridgeObjectRetain();
}

void Library.Context.playlistVariants.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Library.Context(0) + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*Library.Context.playlistVariants.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.isCompilation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 68));
}

uint64_t Library.Context.isCompilation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

double (*Library.Context.isCompilation.modify())(_QWORD)
{
  type metadata accessor for Library.Context(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Context.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  type metadata accessor for MusicLibrary(0);
  *a1 = static MusicLibrary.shared.getter();
  v2 = (int *)type metadata accessor for Library.Context(0);
  v3 = (char *)a1 + v2[5];
  v4 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + v2[6];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)a1 + v2[7];
  v8 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (char *)a1 + v2[8];
  v10 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (char *)a1 + v2[9];
  v12 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (char *)a1 + v2[10];
  v14 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (char *)a1 + v2[11];
  v16 = type metadata accessor for TVSeason(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *((_BYTE *)a1 + v2[12]) = 0;
  *((_BYTE *)a1 + v2[13]) = 2;
  *((_BYTE *)a1 + v2[14]) = 3;
  v18 = (_QWORD *)((char *)a1 + v2[15]);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)((char *)a1 + v2[16]) = _swiftEmptyArrayStorage;
  *((_BYTE *)a1 + v2[17]) = 2;
  return result;
}

uint64_t Library.Context.with<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1;
  v41 = type metadata accessor for TVSeason(0);
  v38 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for TVShow(0);
  v39 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Playlist(0);
  v42 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for Genre(0);
  v45 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Composer(0);
  v48 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Artist(0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Album(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Optional(0, a2);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v35 - v21;
  v55 = a3;
  sub_10042BA78(v57, a3);
  v57 = v17;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v23(v22, v56, v16);
  v56 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v22, 1, a2) != 1)
  {
    v36 = v22;
    v37 = v16;
    v23(v20, (uint64_t)v22, v16);
    v24 = v20;
    if (swift_dynamicCast(v15, v20, a2, v12, 0))
    {
      v25 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 20);
      sub_10004FF60(v25, &qword_1011D2FC8);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v25, v15, v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
    }
    else
    {
      v26 = v20;
      v27 = v54;
      if (!swift_dynamicCast(v11, v26, a2, v54, 0))
      {
        v31 = v52;
        v30 = v53;
        if (swift_dynamicCast(v52, v24, a2, v53, 0))
        {
          v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 28);
          sub_10004FF60(v32, &qword_1011D7B58);
          v33 = v48;
        }
        else
        {
          v31 = v49;
          v30 = v50;
          if (swift_dynamicCast(v49, v24, a2, v50, 0))
          {
            v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 32);
            sub_10004FF60(v32, &qword_1011D7B60);
            v33 = v45;
          }
          else
          {
            v31 = v46;
            v30 = v47;
            if (swift_dynamicCast(v46, v24, a2, v47, 0))
            {
              v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 36);
              sub_10004FF60(v32, &qword_1011D6830);
              v33 = v42;
            }
            else
            {
              v31 = v43;
              v30 = v44;
              if (swift_dynamicCast(v43, v24, a2, v44, 0))
              {
                v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 40);
                sub_10004FF60(v32, &qword_1011D4958);
                v33 = v39;
              }
              else
              {
                v31 = v40;
                v30 = v41;
                if (!swift_dynamicCast(v40, v24, a2, v41, 0))
                  goto LABEL_17;
                v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 44);
                sub_10004FF60(v32, &qword_1011D4928);
                v33 = v38;
              }
            }
          }
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v32, v31, v30);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v32, 0, 1, v30);
        goto LABEL_17;
      }
      v28 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 24);
      sub_10004FF60(v28, &qword_1011D47E0);
      v29 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v28, v11, v27);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v27);
    }
LABEL_17:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, a2);
    v16 = v37;
    v22 = v36;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v22, v16);
}

uint64_t Library.Context.with(compilation:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_10042BA78(v1, a1);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a1 + *(int *)(result + 68)) = 1;
  return result;
}

uint64_t Library.Context.with(sortOption:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_10042BA78(v2, a2);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a2 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t Library.Context.with(filterOption:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_10042BA78(v2, a2);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a2 + *(int *)(result + 56)) = a1;
  return result;
}

void Library.Context.with(filterText:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;

  sub_10042BA78(v3, a3);
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v7 = a1;
  v7[1] = a2;
}

void Library.Context.SortOption.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a2 & 1);
}

BOOL static Library.Context.SortOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

Swift::Int Library.Context.SortOption.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

Swift::Int sub_100A9F510()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100A9F560()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;

  v1 = *v0;
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_100A9F59C(uint64_t a1)
{
  Swift::UInt8 *v1;
  Swift::UInt8 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void Library.Context.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  Swift::UInt8 v75;
  int v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::UInt v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  Swift::UInt8 v90;
  int *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v3 = type metadata accessor for TVSeason(0);
  v113 = *(_QWORD *)(v3 - 8);
  v114 = v3;
  __chkstk_darwin(v3);
  v97 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011D4928);
  __chkstk_darwin(v5);
  v112 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v110 = *(_QWORD *)(v7 - 8);
  v111 = v7;
  __chkstk_darwin(v7);
  v96 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D4958);
  __chkstk_darwin(v9);
  v109 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v107 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  __chkstk_darwin(v11);
  v95 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011D6830);
  __chkstk_darwin(v13);
  v106 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Genre(0);
  v104 = *(_QWORD *)(v15 - 8);
  v105 = v15;
  __chkstk_darwin(v15);
  v94 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011D7B60);
  __chkstk_darwin(v17);
  v103 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Composer(0);
  v101 = *(_QWORD *)(v19 - 8);
  v102 = v19;
  __chkstk_darwin(v19);
  v93 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011D7B58);
  __chkstk_darwin(v21);
  v100 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Artist(0);
  v98 = *(_QWORD *)(v23 - 8);
  v99 = v23;
  __chkstk_darwin(v23);
  v92 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011D47E0);
  __chkstk_darwin(v25);
  v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Album(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011D2FC8);
  __chkstk_darwin(v32);
  v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *v1;
  v35 = type metadata accessor for MusicLibrary(0);
  v36 = sub_100048748(&qword_1011D7B68, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v35, v36);
  v37 = (int *)type metadata accessor for Library.Context(0);
  sub_10004A160((uint64_t)v1 + v37[5], (uint64_t)v34, &qword_1011D2FC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v34, v28);
    Hasher._combine(_:)(1u);
    v38 = sub_100048748(&qword_1011D7B70, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    dispatch thunk of Hashable.hash(into:)(a1, v28, v38);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  v39 = v1;
  sub_10004A160((uint64_t)v1 + v37[6], (uint64_t)v27, &qword_1011D47E0);
  v40 = v98;
  v41 = v99;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48))(v27, 1, v99);
  v43 = v111;
  v45 = v102;
  v44 = (uint64_t)v103;
  v46 = (uint64_t)v100;
  if (v42 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v47 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v91 = v37;
    v48 = v92;
    v47(v92, v27, v41);
    Hasher._combine(_:)(1u);
    v49 = sub_100048748(&qword_1011D7B78, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(a1, v41, v49);
    v50 = v48;
    v37 = v91;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v50, v41);
  }
  v51 = v105;
  sub_10004A160((uint64_t)v39 + v37[7], v46, &qword_1011D7B58);
  v52 = v101;
  v53 = v43;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v46, 1, v45) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v54 = v46;
    v55 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v93, v54, v45);
    Hasher._combine(_:)(1u);
    v56 = sub_100048748(&qword_1011D7B80, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
    dispatch thunk of Hashable.hash(into:)(a1, v45, v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v45);
  }
  sub_10004A160((uint64_t)v39 + v37[8], v44, &qword_1011D7B60);
  v57 = v104;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v44, 1, v51) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v58 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v94, v44, v51);
    Hasher._combine(_:)(1u);
    v59 = sub_100048748(&qword_1011D7B88, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
    dispatch thunk of Hashable.hash(into:)(a1, v51, v59);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v51);
  }
  v60 = v106;
  v61 = v107;
  sub_10004A160((uint64_t)v39 + v37[9], v106, &qword_1011D6830);
  v62 = v108;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v60, 1, v108) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v63 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v95, v60, v62);
    Hasher._combine(_:)(1u);
    v64 = sub_100048748(&qword_1011D7B90, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    dispatch thunk of Hashable.hash(into:)(a1, v62, v64);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
  }
  v65 = v109;
  v66 = v110;
  sub_10004A160((uint64_t)v39 + v37[10], v109, &qword_1011D4958);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v65, 1, v53) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v67 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v96, v65, v53);
    Hasher._combine(_:)(1u);
    v68 = sub_100048748(&qword_1011D7B98, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    dispatch thunk of Hashable.hash(into:)(a1, v53, v68);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v53);
  }
  v69 = v112;
  sub_10004A160((uint64_t)v39 + v37[11], v112, &qword_1011D4928);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v69, 1, v114) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v71 = v113;
    v70 = v114;
    v72 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v97, v69, v114);
    Hasher._combine(_:)(1u);
    v73 = sub_100048748(&qword_1011D7BA0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    dispatch thunk of Hashable.hash(into:)(a1, v70, v73);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v70);
  }
  Hasher._combine(_:)(*((_BYTE *)v39 + v37[12]));
  v74 = *((unsigned __int8 *)v39 + v37[13]);
  if (v74 == 2)
  {
    v75 = 0;
  }
  else
  {
    v75 = v74 & 1;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v75);
  v76 = *((unsigned __int8 *)v39 + v37[14]);
  if (v76 == 3)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if (v76)
    {
      if (v76 == 1)
        v77 = 0x657469726F766166;
      else
        v77 = 0x64616F6C6E776F64;
      v78 = 0xE900000000000073;
    }
    else
    {
      v78 = 0xE300000000000000;
      v77 = 7105633;
    }
    String.hash(into:)(a1, v77, v78);
    swift_bridgeObjectRelease(v78);
  }
  v79 = (_QWORD *)((char *)v39 + v37[15]);
  v80 = v79[1];
  if (v80)
  {
    v81 = *v79;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v81, v80);
    swift_bridgeObjectRelease(v80);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v82 = *(_QWORD *)((char *)v39 + v37[16]);
  v83 = *(_QWORD *)(v82 + 16);
  Hasher._combine(_:)(v83);
  if (v83)
  {
    v84 = type metadata accessor for Playlist.Variant(0);
    v85 = *(_QWORD *)(v84 - 8);
    v86 = v82 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
    v87 = *(_QWORD *)(v85 + 72);
    v88 = sub_100048748(&qword_1011D7BA8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    swift_bridgeObjectRetain();
    do
    {
      dispatch thunk of Hashable.hash(into:)(a1, v84, v88);
      v86 += v87;
      --v83;
    }
    while (v83);
    swift_bridgeObjectRelease(v82);
  }
  v89 = *((unsigned __int8 *)v39 + v37[17]);
  if (v89 == 2)
  {
    v90 = 0;
  }
  else
  {
    v90 = v89 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v90);
}

Swift::Int Library.Context.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Library.Context.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100AA00E0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Library.Context.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100AA0118()
{
  int *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  v0 = (int *)type metadata accessor for Library.Context(0);
  sub_10004FACC((uint64_t)v0, qword_1011D7B38);
  v1 = (_QWORD *)sub_100048B14((uint64_t)v0, (uint64_t)qword_1011D7B38);
  v2 = type metadata accessor for MusicLibrary(0);
  *v1 = static MusicLibrary.shared.getter(v2);
  v3 = (char *)v1 + v0[5];
  v4 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)v1 + v0[6];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)v1 + v0[7];
  v8 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (char *)v1 + v0[8];
  v10 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (char *)v1 + v0[9];
  v12 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (char *)v1 + v0[10];
  v14 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (char *)v1 + v0[11];
  v16 = type metadata accessor for TVSeason(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *((_BYTE *)v1 + v0[12]) = 0;
  *((_BYTE *)v1 + v0[13]) = 2;
  *((_BYTE *)v1 + v0[14]) = 3;
  v18 = (_QWORD *)((char *)v1 + v0[15]);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)((char *)v1 + v0[16]) = _swiftEmptyArrayStorage;
  *((_BYTE *)v1 + v0[17]) = 2;
  return result;
}

uint64_t sub_100AA02F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1DD0 != -1)
    swift_once(&qword_1011D1DD0, sub_100AA0118);
  v2 = type metadata accessor for Library.Context(0);
  v3 = sub_100048B14(v2, (uint64_t)qword_1011D7B38);
  return sub_10042BA78(v3, a1);
}

uint64_t sub_100AA034C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_100048748(&qword_1011D7BC8, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

_QWORD *EnvironmentValues.libraryContext.getter@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100AA20F8();
  return EnvironmentValues.subscript.getter(a1, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v2);
}

uint64_t EnvironmentValues.libraryContext.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10042BA78(a1, (uint64_t)v4);
  v5 = sub_100AA20F8();
  EnvironmentValues.subscript.setter(v4, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
  return sub_10022D14C(a1);
}

void (*EnvironmentValues.libraryContext.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Library.Context(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = sub_100AA20F8();
  v3[4] = v6;
  EnvironmentValues.subscript.getter(v5, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v6);
  return sub_100AA0510;
}

void sub_100AA0510(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_10042BA78((*a1)[3], (*a1)[2]);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_10042BA78(v3[2], v3[1]);
    EnvironmentValues.subscript.setter(v6, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
    sub_10022D14C((uint64_t)v7);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v3[4]);
  }
  sub_10022D14C((uint64_t)v4);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t View.libraryContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_100EE0328);
  View.environment<A>(_:_:)(KeyPath, a1, a2, a3);
  return swift_release(KeyPath);
}

uint64_t sub_100AA062C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - v6;
  sub_10042BA78(a1, (uint64_t)&v10 - v6);
  sub_10042BA78((uint64_t)v7, (uint64_t)v4);
  v8 = sub_100AA20F8();
  EnvironmentValues.subscript.setter(v4, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v8);
  return sub_10022D14C((uint64_t)v7);
}

uint64_t MusicLibraryRequest.apply(_:)(_QWORD *a1, uint64_t a2)
{
  __n128 v4;
  uint64_t v5;

  v4 = swift_retain(*a1);
  MusicLibraryRequest.library.setter(v4);
  v5 = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for Library.Context(0) + 48));
  return MusicLibraryRequest.includeOnlyDownloadedContent.setter(v5, a2);
}

uint64_t _s9MusicCore7LibraryO7ContextV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(char *, uint64_t);
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t);
  int *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char v110;
  void (*v111)(char *, uint64_t);
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char v125;
  void (*v126)(char *, uint64_t);
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char v139;
  void (*v140)(char *, uint64_t);
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  void (*v156)(char *, uint64_t);
  int *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t result;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char v168;
  void (*v169)(char *, uint64_t);
  int *v170;
  uint64_t v171;
  int v172;
  int v173;
  _BOOL4 v174;
  uint64_t v175;
  int v176;
  int v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  int *v190;
  char v191;
  uint64_t v192;
  int v193;
  int v194;
  _BOOL4 v195;
  int *v196;
  _QWORD *v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;

  v204 = type metadata accessor for TVSeason(0);
  v207 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v199 = (char *)&v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100007E8C(&qword_1011D7CE0);
  __chkstk_darwin(v202);
  v217 = (char *)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D4928);
  __chkstk_darwin(v6);
  v200 = (uint64_t)&v196 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v203 = (uint64_t)&v196 - v9;
  __chkstk_darwin(v10);
  v206 = (uint64_t)&v196 - v11;
  v210 = type metadata accessor for TVShow(0);
  v215 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v201 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_100007E8C(&qword_1011D7CE8);
  __chkstk_darwin(v209);
  v212 = (uint64_t)&v196 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011D4958);
  __chkstk_darwin(v14);
  v205 = (uint64_t)&v196 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v213 = (uint64_t)&v196 - v17;
  __chkstk_darwin(v18);
  v214 = (uint64_t)&v196 - v19;
  v219 = type metadata accessor for Playlist(0);
  v223 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v208 = (char *)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100007E8C(&qword_1011D7CF0);
  __chkstk_darwin(v218);
  v227 = (char *)&v196 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011D6830);
  __chkstk_darwin(v22);
  v211 = (uint64_t)&v196 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v221 = (uint64_t)&v196 - v25;
  __chkstk_darwin(v26);
  v222 = (uint64_t)&v196 - v27;
  v226 = type metadata accessor for Genre(0);
  v230 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v216 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_100007E8C(&qword_1011D7CF8);
  __chkstk_darwin(v225);
  v238 = (char *)&v196 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100007E8C(&qword_1011D7B60);
  __chkstk_darwin(v30);
  v220 = (uint64_t)&v196 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v228 = (uint64_t)&v196 - v33;
  __chkstk_darwin(v34);
  v229 = (uint64_t)&v196 - v35;
  v233 = type metadata accessor for Composer(0);
  v235 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v224 = (char *)&v196 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_100007E8C(&qword_1011D7D00);
  __chkstk_darwin(v232);
  v244 = (char *)&v196 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011D7B58);
  __chkstk_darwin(v38);
  v237 = (char *)&v196 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v234 = (uint64_t)&v196 - v41;
  __chkstk_darwin(v42);
  v243 = (char *)&v196 - v43;
  v242 = type metadata accessor for Artist(0);
  v247 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v231 = (char *)&v196 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = sub_100007E8C(&qword_1011D7D08);
  __chkstk_darwin(v239);
  v241 = (uint64_t)&v196 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011D47E0);
  __chkstk_darwin(v46);
  v248 = (char *)&v196 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v246 = (uint64_t)&v196 - v49;
  __chkstk_darwin(v50);
  v240 = (uint64_t)&v196 - v51;
  v52 = type metadata accessor for Album(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v236 = (char *)&v196 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100007E8C(&qword_1011D7D10);
  __chkstk_darwin(v55);
  v57 = (char *)&v196 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011D2FC8);
  __chkstk_darwin(v58);
  v245 = (uint64_t)&v196 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v196 - v61;
  __chkstk_darwin(v63);
  v65 = (char *)&v196 - v64;
  type metadata accessor for MusicLibrary(0);
  v66 = a1;
  if ((static MusicLibrary.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v67 = type metadata accessor for Library.Context(0);
  v68 = *(int *)(v67 + 20);
  v197 = v66;
  sub_10004A160((uint64_t)v66 + v68, (uint64_t)v65, &qword_1011D2FC8);
  v196 = (int *)v67;
  v69 = *(int *)(v67 + 20);
  v198 = a2;
  sub_10004A160((uint64_t)a2 + v69, (uint64_t)v62, &qword_1011D2FC8);
  v70 = (uint64_t)&v57[*(int *)(v55 + 48)];
  sub_10004A160((uint64_t)v65, (uint64_t)v57, &qword_1011D2FC8);
  sub_10004A160((uint64_t)v62, v70, &qword_1011D2FC8);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v71((uint64_t)v57, 1, v52) == 1)
  {
    sub_10004FF60((uint64_t)v62, &qword_1011D2FC8);
    sub_10004FF60((uint64_t)v65, &qword_1011D2FC8);
    v72 = v71(v70, 1, v52);
    v73 = (uint64_t)v248;
    if (v72 == 1)
    {
      sub_10004FF60((uint64_t)v57, &qword_1011D2FC8);
      goto LABEL_9;
    }
LABEL_7:
    v76 = &qword_1011D7D10;
    v77 = (uint64_t)v57;
LABEL_50:
    sub_10004FF60(v77, v76);
    return 0;
  }
  v74 = v245;
  sub_10004A160((uint64_t)v57, v245, &qword_1011D2FC8);
  v75 = v71(v70, 1, v52);
  v73 = (uint64_t)v248;
  if (v75 == 1)
  {
    sub_10004FF60((uint64_t)v62, &qword_1011D2FC8);
    sub_10004FF60((uint64_t)v65, &qword_1011D2FC8);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v74, v52);
    goto LABEL_7;
  }
  v78 = v236;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v236, v70, v52);
  v79 = sub_100048748(&qword_1011D7D48, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  v80 = dispatch thunk of static Equatable.== infix(_:_:)(v74, v78, v52, v79);
  v81 = *(void (**)(char *, uint64_t))(v53 + 8);
  v81(v78, v52);
  sub_10004FF60((uint64_t)v62, &qword_1011D2FC8);
  sub_10004FF60((uint64_t)v65, &qword_1011D2FC8);
  v81((char *)v74, v52);
  sub_10004FF60((uint64_t)v57, &qword_1011D2FC8);
  if ((v80 & 1) == 0)
    return 0;
LABEL_9:
  v82 = v196;
  v83 = v240;
  sub_10004A160((uint64_t)v197 + v196[6], v240, &qword_1011D47E0);
  v84 = v246;
  sub_10004A160((uint64_t)v198 + v82[6], v246, &qword_1011D47E0);
  v85 = v241;
  v86 = v241 + *(int *)(v239 + 48);
  sub_10004A160(v83, v241, &qword_1011D47E0);
  sub_10004A160(v84, v86, &qword_1011D47E0);
  v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v247 + 48);
  v88 = v242;
  if (v87(v85, 1, v242) == 1)
  {
    sub_10004FF60(v84, &qword_1011D47E0);
    sub_10004FF60(v83, &qword_1011D47E0);
    v89 = v87(v86, 1, v88);
    v90 = (uint64_t)v237;
    v91 = (uint64_t)v238;
    v93 = (uint64_t)v243;
    v92 = (uint64_t)v244;
    if (v89 == 1)
    {
      sub_10004FF60(v85, &qword_1011D47E0);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  sub_10004A160(v85, v73, &qword_1011D47E0);
  v94 = v87(v86, 1, v88);
  v93 = (uint64_t)v243;
  v92 = (uint64_t)v244;
  if (v94 == 1)
  {
    sub_10004FF60(v246, &qword_1011D47E0);
    sub_10004FF60(v83, &qword_1011D47E0);
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v73, v88);
LABEL_14:
    v76 = &qword_1011D7D08;
    v77 = v85;
    goto LABEL_50;
  }
  v95 = v247;
  v96 = v83;
  v97 = v73;
  v98 = v231;
  (*(void (**)(char *, uint64_t, uint64_t))(v247 + 32))(v231, v86, v88);
  v99 = sub_100048748(&qword_1011D7D40, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  v100 = dispatch thunk of static Equatable.== infix(_:_:)(v97, v98, v88, v99);
  v101 = *(void (**)(char *, uint64_t))(v95 + 8);
  v101(v98, v88);
  sub_10004FF60(v246, &qword_1011D47E0);
  sub_10004FF60(v96, &qword_1011D47E0);
  v101((char *)v97, v88);
  v91 = (uint64_t)v238;
  sub_10004FF60(v85, &qword_1011D47E0);
  v90 = (uint64_t)v237;
  if ((v100 & 1) == 0)
    return 0;
LABEL_16:
  v102 = v196;
  sub_10004A160((uint64_t)v197 + v196[7], v93, &qword_1011D7B58);
  v103 = v234;
  sub_10004A160((uint64_t)v198 + v102[7], v234, &qword_1011D7B58);
  v104 = v92 + *(int *)(v232 + 48);
  sub_10004A160(v93, v92, &qword_1011D7B58);
  sub_10004A160(v103, v104, &qword_1011D7B58);
  v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48);
  v106 = v233;
  if (v105(v92, 1, v233) == 1)
  {
    sub_10004FF60(v103, &qword_1011D7B58);
    sub_10004FF60(v93, &qword_1011D7B58);
    v92 = (uint64_t)v244;
    if (v105(v104, 1, v106) == 1)
    {
      sub_10004FF60(v92, &qword_1011D7B58);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  sub_10004A160(v92, v90, &qword_1011D7B58);
  if (v105(v104, 1, v106) == 1)
  {
    sub_10004FF60(v234, &qword_1011D7B58);
    sub_10004FF60(v93, &qword_1011D7B58);
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v90, v106);
LABEL_21:
    v76 = &qword_1011D7D00;
    v77 = v92;
    goto LABEL_50;
  }
  v107 = v235;
  v108 = v224;
  (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v224, v104, v106);
  v109 = sub_100048748(&qword_1011D7D38, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  v110 = dispatch thunk of static Equatable.== infix(_:_:)(v90, v108, v106, v109);
  v111 = *(void (**)(char *, uint64_t))(v107 + 8);
  v111(v108, v106);
  sub_10004FF60(v234, &qword_1011D7B58);
  sub_10004FF60(v93, &qword_1011D7B58);
  v111((char *)v90, v106);
  sub_10004FF60(v92, &qword_1011D7B58);
  if ((v110 & 1) == 0)
    return 0;
LABEL_23:
  v112 = v196;
  v113 = v229;
  sub_10004A160((uint64_t)v197 + v196[8], v229, &qword_1011D7B60);
  v114 = v228;
  sub_10004A160((uint64_t)v198 + v112[8], v228, &qword_1011D7B60);
  v115 = v91 + *(int *)(v225 + 48);
  sub_10004A160(v113, v91, &qword_1011D7B60);
  sub_10004A160(v114, v115, &qword_1011D7B60);
  v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48);
  v117 = v226;
  if (v116(v91, 1, v226) == 1)
  {
    sub_10004FF60(v114, &qword_1011D7B60);
    sub_10004FF60(v113, &qword_1011D7B60);
    v118 = v116(v115, 1, v117);
    v119 = (uint64_t)v227;
    if (v118 == 1)
    {
      sub_10004FF60(v91, &qword_1011D7B60);
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  v120 = v220;
  sub_10004A160(v91, v220, &qword_1011D7B60);
  v121 = v116(v115, 1, v117);
  v119 = (uint64_t)v227;
  if (v121 == 1)
  {
    sub_10004FF60(v228, &qword_1011D7B60);
    sub_10004FF60(v229, &qword_1011D7B60);
    (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v120, v117);
LABEL_28:
    v76 = &qword_1011D7CF8;
    v77 = v91;
    goto LABEL_50;
  }
  v122 = v230;
  v123 = v216;
  (*(void (**)(char *, uint64_t, uint64_t))(v230 + 32))(v216, v115, v117);
  v124 = sub_100048748(&qword_1011D7D30, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
  v125 = dispatch thunk of static Equatable.== infix(_:_:)(v120, v123, v117, v124);
  v126 = *(void (**)(char *, uint64_t))(v122 + 8);
  v126(v123, v117);
  sub_10004FF60(v228, &qword_1011D7B60);
  sub_10004FF60(v229, &qword_1011D7B60);
  v126((char *)v120, v117);
  sub_10004FF60(v91, &qword_1011D7B60);
  if ((v125 & 1) == 0)
    return 0;
LABEL_30:
  v127 = v196;
  v128 = v222;
  sub_10004A160((uint64_t)v197 + v196[9], v222, &qword_1011D6830);
  v129 = v221;
  sub_10004A160((uint64_t)v198 + v127[9], v221, &qword_1011D6830);
  v130 = v119 + *(int *)(v218 + 48);
  sub_10004A160(v128, v119, &qword_1011D6830);
  sub_10004A160(v129, v130, &qword_1011D6830);
  v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v223 + 48);
  v132 = v219;
  if (v131(v119, 1, v219) == 1)
  {
    sub_10004FF60(v129, &qword_1011D6830);
    v119 = (uint64_t)v227;
    sub_10004FF60(v128, &qword_1011D6830);
    if (v131(v130, 1, v132) == 1)
    {
      sub_10004FF60(v119, &qword_1011D6830);
      v133 = (uint64_t)v217;
      goto LABEL_37;
    }
    goto LABEL_35;
  }
  v134 = v211;
  sub_10004A160(v119, v211, &qword_1011D6830);
  v135 = v131(v130, 1, v132);
  v133 = (uint64_t)v217;
  if (v135 == 1)
  {
    sub_10004FF60(v221, &qword_1011D6830);
    sub_10004FF60(v222, &qword_1011D6830);
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v134, v132);
LABEL_35:
    v76 = &qword_1011D7CF0;
    v77 = v119;
    goto LABEL_50;
  }
  v136 = v223;
  v137 = v208;
  (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v208, v130, v132);
  v138 = sub_100048748(&qword_1011D7D28, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  v139 = dispatch thunk of static Equatable.== infix(_:_:)(v134, v137, v132, v138);
  v140 = *(void (**)(char *, uint64_t))(v136 + 8);
  v140(v137, v132);
  sub_10004FF60(v221, &qword_1011D6830);
  sub_10004FF60(v222, &qword_1011D6830);
  v140((char *)v134, v132);
  sub_10004FF60(v119, &qword_1011D6830);
  if ((v139 & 1) == 0)
    return 0;
LABEL_37:
  v141 = v196;
  v142 = v214;
  sub_10004A160((uint64_t)v197 + v196[10], v214, &qword_1011D4958);
  v143 = (uint64_t)v198 + v141[10];
  v144 = v213;
  sub_10004A160(v143, v213, &qword_1011D4958);
  v145 = v212;
  v146 = v212 + *(int *)(v209 + 48);
  sub_10004A160(v142, v212, &qword_1011D4958);
  sub_10004A160(v144, v146, &qword_1011D4958);
  v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
  v148 = v210;
  if (v147(v145, 1, v210) == 1)
  {
    sub_10004FF60(v144, &qword_1011D4958);
    sub_10004FF60(v142, &qword_1011D4958);
    v145 = v212;
    if (v147(v146, 1, v148) == 1)
    {
      sub_10004FF60(v145, &qword_1011D4958);
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  v149 = v205;
  sub_10004A160(v145, v205, &qword_1011D4958);
  if (v147(v146, 1, v148) == 1)
  {
    sub_10004FF60(v213, &qword_1011D4958);
    sub_10004FF60(v214, &qword_1011D4958);
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v149, v148);
LABEL_42:
    v76 = &qword_1011D7CE8;
    v77 = v145;
    goto LABEL_50;
  }
  v150 = v215;
  v151 = v201;
  (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v201, v146, v148);
  v152 = sub_100048748(&qword_1011D7D20, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v153 = v145;
  v154 = v148;
  v155 = dispatch thunk of static Equatable.== infix(_:_:)(v149, v151, v148, v152);
  v156 = *(void (**)(char *, uint64_t))(v150 + 8);
  v156(v151, v154);
  sub_10004FF60(v213, &qword_1011D4958);
  sub_10004FF60(v214, &qword_1011D4958);
  v156((char *)v149, v154);
  sub_10004FF60(v153, &qword_1011D4958);
  if ((v155 & 1) == 0)
    return 0;
LABEL_44:
  v157 = v196;
  v158 = v206;
  sub_10004A160((uint64_t)v197 + v196[11], v206, &qword_1011D4928);
  v159 = v203;
  sub_10004A160((uint64_t)v198 + v157[11], v203, &qword_1011D4928);
  v160 = v133 + *(int *)(v202 + 48);
  sub_10004A160(v158, v133, &qword_1011D4928);
  sub_10004A160(v159, v160, &qword_1011D4928);
  v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
  v162 = v204;
  if (v161(v133, 1, v204) == 1)
  {
    sub_10004FF60(v159, &qword_1011D4928);
    sub_10004FF60(v158, &qword_1011D4928);
    if (v161(v160, 1, v162) == 1)
    {
      sub_10004FF60(v133, &qword_1011D4928);
      goto LABEL_54;
    }
    goto LABEL_49;
  }
  v163 = v200;
  sub_10004A160(v133, v200, &qword_1011D4928);
  if (v161(v160, 1, v162) == 1)
  {
    sub_10004FF60(v159, &qword_1011D4928);
    sub_10004FF60(v206, &qword_1011D4928);
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v163, v162);
LABEL_49:
    v76 = &qword_1011D7CE0;
    v77 = v133;
    goto LABEL_50;
  }
  v165 = v207;
  v166 = v199;
  (*(void (**)(char *, uint64_t, uint64_t))(v207 + 32))(v199, v160, v162);
  v167 = sub_100048748(&qword_1011D7D18, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v168 = dispatch thunk of static Equatable.== infix(_:_:)(v163, v166, v162, v167);
  v169 = *(void (**)(char *, uint64_t))(v165 + 8);
  v169(v166, v162);
  sub_10004FF60(v159, &qword_1011D4928);
  sub_10004FF60(v206, &qword_1011D4928);
  v169((char *)v163, v162);
  sub_10004FF60(v133, &qword_1011D4928);
  if ((v168 & 1) == 0)
    return 0;
LABEL_54:
  v170 = v196;
  if (*((unsigned __int8 *)v197 + v196[12]) != *((unsigned __int8 *)v198 + v196[12]))
    return 0;
  v171 = v196[13];
  v172 = *((unsigned __int8 *)v197 + v171);
  v173 = *((unsigned __int8 *)v198 + v171);
  if (v172 == 2)
  {
    if (v173 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v174 = (v172 & 1) == 0;
    if (v173 == 2 || ((v174 ^ v173) & 1) == 0)
      return result;
  }
  v175 = v196[14];
  v176 = *((unsigned __int8 *)v197 + v175);
  v177 = *((unsigned __int8 *)v198 + v175);
  if (v176 == 3)
  {
    if (v177 != 3)
      return 0;
  }
  else
  {
    if (v177 == 3)
      return 0;
    v178 = 0xE900000000000073;
    v179 = 7105633;
    if (v176)
    {
      if (v176 == 1)
        v180 = 0x657469726F766166;
      else
        v180 = 0x64616F6C6E776F64;
      v181 = 0xE900000000000073;
    }
    else
    {
      v181 = 0xE300000000000000;
      v180 = 7105633;
    }
    if (v177)
    {
      if (v177 == 1)
        v179 = 0x657469726F766166;
      else
        v179 = 0x64616F6C6E776F64;
    }
    else
    {
      v178 = 0xE300000000000000;
    }
    if (v180 == v179 && v181 == v178)
    {
      swift_bridgeObjectRelease_n(v181, 2);
      v170 = v196;
    }
    else
    {
      v182 = _stringCompareWithSmolCheck(_:_:expecting:)(v180, v181, v179, v178, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      v170 = v196;
      if ((v182 & 1) == 0)
        return result;
    }
  }
  v183 = v170[15];
  v184 = (_QWORD *)((char *)v197 + v183);
  v185 = *(_QWORD *)((char *)v197 + v183 + 8);
  v186 = (_QWORD *)((char *)v198 + v183);
  v187 = v186[1];
  if (!v185)
  {
    v188 = v198;
    v189 = v197;
    v190 = v196;
    if (!v187)
      goto LABEL_86;
    return 0;
  }
  if (!v187)
    return 0;
  v188 = v198;
  v189 = v197;
  v190 = v196;
  if (*v184 == *v186 && v185 == v187
    || (v191 = _stringCompareWithSmolCheck(_:_:expecting:)(*v184, v185, *v186, v187, 0), result = 0, (v191 & 1) != 0))
  {
LABEL_86:
    if ((sub_100A2C3BC(*(_QWORD *)((char *)v189 + v190[16]), *(_QWORD *)((char *)v188 + v190[16])) & 1) != 0)
    {
      v192 = v196[17];
      v193 = *((unsigned __int8 *)v197 + v192);
      v194 = *((unsigned __int8 *)v198 + v192);
      if (v193 == 2)
      {
        if (v194 == 2)
          return 1;
      }
      else
      {
        v195 = (v193 & 1) == 0;
        if (v194 != 2 && ((v195 ^ v194) & 1) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t _s9MusicCore7LibraryO19ContentFilterOptionO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E7420, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t type metadata accessor for Library.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D7C28;
  if (!qword_1011D7C28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Library.Context);
  return result;
}

unint64_t sub_100AA20F8()
{
  unint64_t result;

  result = qword_1011D7BB0;
  if (!qword_1011D7BB0)
  {
    result = swift_getWitnessTable("mJ!", &_s17LibraryContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011D7BB0);
  }
  return result;
}

_QWORD *sub_100AA213C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100AA20F8();
  return EnvironmentValues.subscript.getter(a1, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v2);
}

unint64_t sub_100AA2180()
{
  unint64_t result;

  result = qword_1011D7BB8;
  if (!qword_1011D7BB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_1011D7BB8);
  }
  return result;
}

unint64_t sub_100AA21C8()
{
  unint64_t result;

  result = qword_1011D7BC0;
  if (!qword_1011D7BC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Context.SortOption, &type metadata for Library.Context.SortOption);
    atomic_store(result, (unint64_t *)&qword_1011D7BC0);
  }
  return result;
}

uint64_t sub_100AA220C()
{
  return sub_100048748(&qword_1011D7BC8, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
}

ValueMetadata *type metadata accessor for Library()
{
  return &type metadata for Library;
}

uint64_t storeEnumTagSinglePayload for Library.ContentFilterOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100AA2294 + 4 * byte_100EE0319[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100AA22C8 + 4 * byte_100EE0314[v4]))();
}

uint64_t sub_100AA22C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AA22D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AA22D8);
  return result;
}

uint64_t sub_100AA22E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AA22ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100AA22F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AA22F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.ContentFilterOption()
{
  return &type metadata for Library.ContentFilterOption;
}

_QWORD *initializeBufferWithCopyOfBuffer for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Album(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_retain();
    if (v13(v10, 1, v11, v14))
    {
      v15 = sub_100007E8C(&qword_1011D2FC8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = (char *)v7 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for Artist(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100007E8C(&qword_1011D47E0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v22 = a3[7];
    v23 = (char *)v7 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for Composer(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_100007E8C(&qword_1011D7B58);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = a3[8];
    v29 = (char *)v7 + v28;
    v30 = (char *)a2 + v28;
    v31 = type metadata accessor for Genre(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_100007E8C(&qword_1011D7B60);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = a3[9];
    v35 = (char *)v7 + v34;
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for Playlist(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = sub_100007E8C(&qword_1011D6830);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = a3[10];
    v41 = (char *)v7 + v40;
    v42 = (char *)a2 + v40;
    v43 = type metadata accessor for TVShow(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_100007E8C(&qword_1011D4958);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = a3[11];
    v47 = (char *)v7 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for TVSeason(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_100007E8C(&qword_1011D4928);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = a3[13];
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v7 + v52) = *((_BYTE *)a2 + v52);
    v53 = a3[15];
    *((_BYTE *)v7 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    v54 = (_QWORD *)((char *)v7 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = a3[17];
    *(_QWORD *)((char *)v7 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
    *((_BYTE *)v7 + v57) = *((_BYTE *)a2 + v57);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for Library.Context(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (char *)a1 + a2[6];
  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  v10 = (char *)a1 + a2[7];
  v11 = type metadata accessor for Composer(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  v13 = (char *)a1 + a2[8];
  v14 = type metadata accessor for Genre(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v16 = (char *)a1 + a2[9];
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  v19 = (char *)a1 + a2[10];
  v20 = type metadata accessor for TVShow(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  v22 = (char *)a1 + a2[11];
  v23 = type metadata accessor for TVSeason(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[15] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[16]));
}

_QWORD *initializeWithCopy for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  v12 = swift_retain();
  if (v11(v8, 1, v9, v12))
  {
    v13 = sub_100007E8C(&qword_1011D2FC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for Artist(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100007E8C(&qword_1011D47E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for Composer(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100007E8C(&qword_1011D7B58);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Genre(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_100007E8C(&qword_1011D7B60);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for Playlist(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100007E8C(&qword_1011D6830);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = a3[10];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = type metadata accessor for TVShow(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100007E8C(&qword_1011D4958);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = a3[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for TVSeason(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100007E8C(&qword_1011D4928);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  v51 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D2FC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = sub_100007E8C(&qword_1011D47E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Composer(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    v32 = sub_100007E8C(&qword_1011D7B58);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_19:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_24:
    v41 = sub_100007E8C(&qword_1011D7B60);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_25:
  v42 = a3[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Playlist(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_30:
    v50 = sub_100007E8C(&qword_1011D6830);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
LABEL_31:
  v51 = a3[10];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for TVShow(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_36:
    v59 = sub_100007E8C(&qword_1011D4958);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_37:
  v60 = a3[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_42;
  }
  if (v67)
  {
LABEL_42:
    v68 = sub_100007E8C(&qword_1011D4928);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_43:
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v69 = a3[15];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  return a1;
}

_QWORD *initializeWithTake for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100007E8C(&qword_1011D2FC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100007E8C(&qword_1011D47E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for Composer(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100007E8C(&qword_1011D7B58);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Genre(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = sub_100007E8C(&qword_1011D7B60);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Playlist(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100007E8C(&qword_1011D6830);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = a3[10];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for TVShow(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100007E8C(&qword_1011D4958);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[11];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for TVSeason(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100007E8C(&qword_1011D4928);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v48 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  v49 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v49) = *(_OWORD *)((char *)a2 + v49);
  v50 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  return a1;
}

_QWORD *assignWithTake for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;

  *a1 = *a2;
  swift_release();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_100007E8C(&qword_1011D2FC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Artist(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = sub_100007E8C(&qword_1011D47E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_13:
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Composer(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_18:
    v32 = sub_100007E8C(&qword_1011D7B58);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_19:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for Genre(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
LABEL_24:
    v41 = sub_100007E8C(&qword_1011D7B60);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
LABEL_25:
  v42 = a3[9];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Playlist(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_30:
    v50 = sub_100007E8C(&qword_1011D6830);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v43, v44, v45);
LABEL_31:
  v51 = a3[10];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for TVShow(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
LABEL_36:
    v59 = sub_100007E8C(&qword_1011D4958);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
LABEL_37:
  v60 = a3[11];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for TVSeason(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v61, v62, v63);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_42;
  }
  if (v67)
  {
LABEL_42:
    v68 = sub_100007E8C(&qword_1011D4928);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_43:
  v69 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v69) = *((_BYTE *)a2 + v69);
  v70 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (_QWORD *)((char *)a2 + v70);
  v74 = *v72;
  v73 = v72[1];
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Library.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA3E78);
}

uint64_t sub_100AA3E78(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011D2FC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011D47E0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = sub_100007E8C(&qword_1011D7B58);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          v14 = sub_100007E8C(&qword_1011D7B60);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[8];
          }
          else
          {
            v15 = sub_100007E8C(&qword_1011D6830);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              v10 = v15;
              v11 = a3[9];
            }
            else
            {
              v16 = sub_100007E8C(&qword_1011D4958);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
              {
                v10 = v16;
                v11 = a3[10];
              }
              else
              {
                v10 = sub_100007E8C(&qword_1011D4928);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a3[11];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Library.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA3FF4);
}

char *sub_100AA3FF4(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011D2FC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011D47E0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_100007E8C(&qword_1011D7B58);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v14 = sub_100007E8C(&qword_1011D7B60);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[8];
          }
          else
          {
            v15 = sub_100007E8C(&qword_1011D6830);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v15;
              v11 = a4[9];
            }
            else
            {
              v16 = sub_100007E8C(&qword_1011D4958);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == a3)
              {
                v10 = v16;
                v11 = a4[10];
              }
              else
              {
                v10 = sub_100007E8C(&qword_1011D4928);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a4[11];
              }
            }
          }
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_100AA4160(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[14];

  v16[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10015C698(319, &qword_1011D7C38, (uint64_t (*)(uint64_t))&type metadata accessor for Album);
  if (v3 <= 0x3F)
  {
    v16[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10015C698(319, &qword_1011D7C40, (uint64_t (*)(uint64_t))&type metadata accessor for Artist);
    if (v5 <= 0x3F)
    {
      v16[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_10015C698(319, &qword_1011D7C48, (uint64_t (*)(uint64_t))&type metadata accessor for Composer);
      if (v7 <= 0x3F)
      {
        v16[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_10015C698(319, &qword_1011D7C50, (uint64_t (*)(uint64_t))&type metadata accessor for Genre);
        if (v9 <= 0x3F)
        {
          v16[4] = *(_QWORD *)(v8 - 8) + 64;
          sub_10015C698(319, &qword_1011D7C58, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist);
          if (v11 <= 0x3F)
          {
            v16[5] = *(_QWORD *)(v10 - 8) + 64;
            sub_10015C698(319, &qword_1011D7C60, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow);
            if (v13 <= 0x3F)
            {
              v16[6] = *(_QWORD *)(v12 - 8) + 64;
              sub_10015C698(319, (unint64_t *)&unk_1011D7C68, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason);
              if (v15 <= 0x3F)
              {
                v16[7] = *(_QWORD *)(v14 - 8) + 64;
                v16[8] = &unk_100EE0550;
                v16[9] = &unk_100EE0568;
                v16[10] = &unk_100EE0580;
                v16[11] = &unk_100EE0598;
                v16[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
                v16[13] = &unk_100EE0568;
                swift_initStructMetadata(a1, 256, 14, v16, a1 + 16);
              }
            }
          }
        }
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for Library.Context.SortOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100AA4374 + 4 * byte_100EE0323[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100AA43A8 + 4 * byte_100EE031E[v4]))();
}

uint64_t sub_100AA43A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AA43B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AA43B8);
  return result;
}

uint64_t sub_100AA43C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AA43CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100AA43D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AA43D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Context.SortOption()
{
  return &type metadata for Library.Context.SortOption;
}

uint64_t sub_100AA43F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = sub_100044B54(&qword_1011D7CC8);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100AA4454();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_100AA4454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7CD0;
  if (!qword_1011D7CD0)
  {
    v1 = sub_100044B54(&qword_1011D7CC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011D7CD0);
  }
  return result;
}

ValueMetadata *_s17LibraryContextKeyVMa()
{
  return &_s17LibraryContextKeyVN;
}

unint64_t sub_100AA44B0()
{
  unint64_t result;

  result = qword_1011D7CD8;
  if (!qword_1011D7CD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_1011D7CD8);
  }
  return result;
}

void sub_100AA44F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t i;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (char *)_swiftEmptyArrayStorage;
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v12 = *v11;
    v13 = (void *)v11[1];
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v12;
    v14._object = v13;
    v15 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E55E0, v14);
    swift_bridgeObjectRelease();
    if (v15 <= 0xC)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_1009BA168(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v19 = v8;
      v20 = *((_QWORD *)v8 + 2);
      v21 = v19;
      v22 = *((_QWORD *)v19 + 3);
      if (v20 >= v22 >> 1)
        v21 = sub_1009BA168((char *)(v22 > 1), v20 + 1, 1, v21);
      *((_QWORD *)v21 + 2) = v20 + 1;
      v23 = &v21[v20];
      v8 = v21;
      v23[32] = v15;
      if (v5)
        goto LABEL_4;
    }
    else if (v5)
    {
      goto LABEL_4;
    }
LABEL_7:
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v6)
      goto LABEL_29;
    v17 = *(_QWORD *)(v2 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v6)
        goto LABEL_29;
      v17 = *(_QWORD *)(v2 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v6)
          goto LABEL_29;
        v17 = *(_QWORD *)(v2 + 8 * v7);
        if (!v17)
        {
          v7 = v16 + 3;
          if (v16 + 3 >= v6)
            goto LABEL_29;
          v17 = *(_QWORD *)(v2 + 8 * v7);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v17 - 1) & v17;
  }
  v18 = v16 + 4;
  if (v18 >= v6)
  {
LABEL_29:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v2 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v6)
      goto LABEL_29;
    v17 = *(_QWORD *)(v2 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_100AA4710(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  char v17;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v17 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v12);
    sub_100AA9690((uint64_t)&v17, a2);
    if (v2)
      goto LABEL_24;
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_17:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_5;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v9)
  {
LABEL_24:
    swift_release();
    return;
  }
  v14 = *(_QWORD *)(v5 + 8 * v16);
  v10 += 4;
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v9)
      goto LABEL_24;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v14)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

Swift::Int sub_100AA4880(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    Hasher.init(_seed:)(v21, *(_QWORD *)(a2 + 40));
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == (_DWORD)v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == (_DWORD)v16)
      goto LABEL_7;
  }
}

uint64_t sub_100AA4A60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[10];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v16 = (unint64_t)(v3 + 63) >> 6;
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      goto LABEL_21;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_20;
      v8 = 2;
      if ((unint64_t)(v3 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_20;
      v8 = 3;
      if ((unint64_t)(v3 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
      {
LABEL_20:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_21:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17, *(_QWORD *)(a2 + 40));
        v11 = Library.Menu.Identifier.rawValue.getter(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 4;
      if (v16 > 4)
      {
        v7 = *(_QWORD *)(a1 + 88);
        if (v7)
        {
          v8 = 4;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x100AA4F08);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_20;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_100AA4F70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[9];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v16 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_23;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_22;
      v8 = 2;
      if (v16 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_22;
      v8 = 3;
      if (v16 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_22;
      v8 = 4;
      if (v16 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_22:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_23:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17, *(_QWORD *)(a2 + 40));
        v11 = ApplicationCapabilities.Service.rawValue.getter(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 5;
      if (v16 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x100AA5494);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_22;
        }
      }
    }
  }
  return 1;
}

uint64_t Library.Menu.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL Library.Menu.selectionState(for:)(unsigned __int8 a1)
{
  uint64_t v1;

  return (sub_100A400F4(a1, *(_QWORD *)(v1 + 40)) & 1) == 0;
}

uint64_t Library.Menu.setSelectionState(_:for:)(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unsigned __int8 v4;

  v2 = a1 & 1;
  if ((a1 & 1) != 0)
    sub_100A67C1C(a2);
  else
    sub_100AAB1CC(&v4, a2);
  return v2;
}

void Library.Menu.move(_:to:)(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  int64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  unint64_t v26;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_100A6AE8C(a1, v6);
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v18 = v3[2];
    v19 = v3[3];
    v10 = v3[4];
    v20 = v3[5];
    v21 = sub_100AB12CC();
    swift_allocError(&_s4MenuV9MoveErrorVN, v21, 0, 0);
    *(_QWORD *)v22 = v18;
LABEL_14:
    *(_QWORD *)(v22 + 8) = v19;
    *(_QWORD *)(v22 + 16) = v10;
    *(_QWORD *)(v22 + 24) = v20;
    *(_BYTE *)(v22 + 32) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow(v25);
    return;
  }
  v10 = v3[4];
  swift_bridgeObjectRetain();
  v26 = sub_100A6AE8C(a1, v10);
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v23 = v3[2];
    v19 = v3[3];
LABEL_13:
    v20 = v3[5];
    v24 = sub_100AB12CC();
    swift_allocError(&_s4MenuV9MoveErrorVN, v24, 0, 0);
    *(_QWORD *)v22 = v23;
    goto LABEL_14;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(v6 + 16) <= a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  a1 = *(unsigned __int8 *)(v6 + a2 + 32);
  swift_bridgeObjectRetain();
  v13 = sub_100A6AE8C(a1, v10);
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v23 = v3[2];
    v19 = v3[3];
    LOBYTE(a1) = a1 | 0x80;
    goto LABEL_13;
  }
  v16 = sub_100A7334C(v7);
  if (*(_QWORD *)(*v3 + 16) < a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1009BB788((char *)a2, a2, v16);
  v17 = sub_100A7334C(v26);
  if (*(_QWORD *)(v3[4] + 16) >= v13)
  {
    if ((v13 & 0x8000000000000000) == 0)
    {
      sub_1009BB788((char *)v13, v13, v17);
      return;
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
}

Swift::Void __swiftcall Library.Menu.persist()()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = (_QWORD *)v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSUserDefaults.libraryMenuRevision.setter(v1, v2, v3, v4);
}

uint64_t NSUserDefaults.libraryMenuRevision.setter(uint64_t a1, unint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v8 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  JSONEncoder.init()();
  v16 = a1;
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v9 = sub_100AB1310();
  v10 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v16, &type metadata for Library.Menu.Revision, v9);
  v12 = v11;
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  swift_release();
  v19 = &type metadata for Data;
  v16 = v10;
  v17 = v12;
  v15[0] = 0x4D7972617262694CLL;
  v15[1] = 0xEB00000000756E65;
  sub_100079DE4(v10, v12);
  v13 = sub_10098A8C0();
  NSUserDefaults.subscript.setter((uint64_t)&v16, (uint64_t)v15, (uint64_t)&type metadata for String, v13);
  return sub_1000652DC(v10, v12);
}

char *Library.Menu.Request.label.unsafeMutableAddressor()
{
  return static Library.Menu.Request.label;
}

uint64_t static Library.Menu.Request.label.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(static Library.Menu.Request.label, v2, 0, 0);
  v0 = *(_QWORD *)static Library.Menu.Request.label;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Library.Menu.Request.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(static Library.Menu.Request.label, v6, 1, 0);
  v4 = *(_QWORD *)&static Library.Menu.Request.label[8];
  *(_QWORD *)static Library.Menu.Request.label = a1;
  *(_QWORD *)&static Library.Menu.Request.label[8] = a2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*static Library.Menu.Request.label.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static Library.Menu.Request.label, a1, 33, 0);
  return j__swift_endAccess;
}

id Library.Menu.Request.init()@<X0>(uint64_t a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = &_swiftEmptySetSingleton;
    *(_WORD *)(a1 + 40) = 257;
    *(_BYTE *)(a1 + 42) = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static Library.Menu.Request.with(_:)@<X0>(uint64_t (*a1)(id *)@<X0>, uint64_t a2@<X8>)
{
  id result;
  char v5;
  void *v6;
  char v7;
  char v8;
  char v9;
  __int128 v10;
  id v11;
  char v12;
  __int128 v13;
  void *v14;
  __int16 v15;
  char v16;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    v11 = result;
    v12 = 0;
    v13 = 0uLL;
    v14 = &_swiftEmptySetSingleton;
    v15 = 257;
    v16 = 1;
    result = (id)a1(&v11);
    v5 = v12;
    v6 = v14;
    v7 = v15;
    v8 = HIBYTE(v15);
    v9 = v16;
    v10 = v13;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 32) = v6;
    *(_BYTE *)(a2 + 40) = v7;
    *(_BYTE *)(a2 + 41) = v8;
    *(_BYTE *)(a2 + 42) = v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Library.Menu.Request.MediaLibrarySource.__derived_enum_equals(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return sub_100AB2344(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_100AA5CEC(uint64_t a1, uint64_t a2)
{
  return sub_100AB2344(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

void *Library.Menu.Request.librarySource.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)v0;
  sub_1002F558C(*(void **)v0, *(_BYTE *)(v0 + 8));
  return v1;
}

void Library.Menu.Request.librarySource.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1002F5684(*(void **)v2, *(_BYTE *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = a2 & 1;
}

uint64_t Library.Menu.Request.filteringOptions.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t Library.Menu.Request.excludedIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t Library.Menu.Request.filtersToAvailableContentGroups.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Library.Menu.Request.filtersToAvailableContentGroups.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t Library.Menu.Request.filtersToSelectedIdentifiers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t Library.Menu.Request.filtersToSelectedIdentifiers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = result;
  return result;
}

double (*Library.Menu.Request.filtersToSelectedIdentifiers.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Library.Menu.Request.sortedByUserOrderedIdentifiers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t Library.Menu.Request.sortedByUserOrderedIdentifiers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 42) = result;
  return result;
}

double (*Library.Menu.Request.sortedByUserOrderedIdentifiers.modify())(_QWORD)
{
  return UIScreen.Dimensions.size.getter;
}

double Library.Menu.Request.perform(_:_:)@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  void **v3;
  void **v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  __n128 v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  char v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  double result;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  _QWORD *v59;
  _QWORD aBlock[7];

  v4 = v3;
  v51 = a1;
  v52 = a2;
  v6 = type metadata accessor for DispatchQoS.QoSClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  LOBYTE(v11) = *((_BYTE *)v4 + 8);
  v57 = v6;
  v58 = a3;
  v55 = v9;
  v56 = v7;
  v53 = v14;
  v54 = v12;
  if ((v11 & 1) != 0)
  {
    v15 = swift_retain();
    v16 = (id)MusicLibrary.mediaLibrary.getter(v15);
    sub_1002F5684(v13, 1);
  }
  else
  {
    v16 = v13;
  }
  v17 = v4[2];
  v18 = swift_allocObject(&unk_1010F5070, 17, 7);
  v20 = v4[3];
  v19 = v4[4];
  *(_BYTE *)(v18 + 16) = v20 != 0;
  v21 = *((_BYTE *)v4 + 40);
  v22 = *((_BYTE *)v4 + 41);
  v23 = (void *)objc_opt_self(NSUserDefaults);
  v50 = v20;
  swift_bridgeObjectRetain();
  v24 = objc_msgSend(v23, "standardUserDefaults");
  v25 = (_QWORD *)swift_allocObject(&unk_1010F5098, 48, 7);
  v26 = NSUserDefaults.libraryMenuRevision.getter();
  v25[2] = v26;
  v25[3] = v28;
  v25[4] = v27;
  v25[5] = v29;
  if ((*((_BYTE *)v4 + 42) & 1) != 0)
    v30 = v27;
  else
    v30 = v26;
  swift_bridgeObjectRetain();
  v31 = swift_allocObject(&unk_1010F50C0, 104, 7);
  *(_QWORD *)(v31 + 16) = v25;
  *(_QWORD *)(v31 + 24) = v24;
  *(_QWORD *)(v31 + 32) = v20;
  *(_QWORD *)(v31 + 40) = v30;
  *(_QWORD *)(v31 + 48) = v16;
  *(_QWORD *)(v31 + 56) = v17;
  *(_QWORD *)(v31 + 64) = v19;
  *(_BYTE *)(v31 + 72) = v22;
  *(_BYTE *)(v31 + 73) = v21;
  v32 = v51;
  v33 = v52;
  *(_QWORD *)(v31 + 80) = v18;
  *(_QWORD *)(v31 + 88) = v32;
  *(_QWORD *)(v31 + 96) = v33;
  aBlock[4] = sub_100AB24C4;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010F50D8;
  v34 = _Block_copy(aBlock);
  v59 = _swiftEmptyArrayStorage;
  v35 = sub_100048748((unint64_t *)&qword_1011D7780, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v51 = v50;
  swift_retain();
  v36 = v24;
  v37 = v16;
  swift_retain();
  swift_retain();
  v38 = sub_100007E8C(&qword_1011D5E08);
  v39 = sub_100049F28((unint64_t *)&qword_1011D7790, &qword_1011D5E08, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v38, v39, v53, v35);
  v41 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = DispatchWorkItem.init(flags:block:)(v40, v34);
  swift_release();
  sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
  v44 = v55;
  v43 = v56;
  v45 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for DispatchQoS.QoSClass.userInteractive(_:), v57);
  v46 = (void *)static OS_dispatch_queue.global(qos:)(v44);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  OS_dispatch_queue.async(execute:)(v42);

  v47 = v58;
  v58[3] = v41;
  v47[4] = (uint64_t)&protocol witness table for DispatchWorkItem;

  *v47 = v42;
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t NSUserDefaults.libraryMenuRevision.getter()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[5];

  sub_100AA9F54();
  v13 = 0x4D7972617262694CLL;
  v14 = 0xEB00000000756E65;
  v0 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&v13, (uint64_t)&type metadata for String, v0, (uint64_t)v15);
  if (v15[3])
  {
    if ((swift_dynamicCast(&v13, v15, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
    {
      v1 = v13;
      v2 = v14;
      v3 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
      JSONDecoder.init()();
      v4 = sub_100AB2524();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(v15, &type metadata for Library.Menu.Revision, v1, v2, &type metadata for Library.Menu.Revision, v4);
      sub_1000652DC(v1, v2);
      swift_release();
      return v15[0];
    }
  }
  else
  {
    sub_100A1324C((uint64_t)v15);
  }
  if (qword_1011D1DE0 != -1)
    swift_once(&qword_1011D1DE0, sub_100AAA54C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048B14(v5, (uint64_t)static Logger.libraryMenu);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "No edits found — Returning stock menu revision", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  if (qword_1011D1DD8 != -1)
    swift_once(&qword_1011D1DD8, sub_100AA9F24);
  v10 = qword_1011D7D60;
  v11 = *(_QWORD *)algn_1011D7D68;
  swift_bridgeObjectRetain_n(qword_1011D7D60, 2);
  swift_bridgeObjectRetain_n(v11, 2);
  return v10;
}

void sub_100AA65C4(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  id v41;
  _BYTE v45[24];
  uint64_t v46;

  v8 = (uint64_t)(a1 + 2);
  if (qword_1011D1DD8 != -1)
    goto LABEL_69;
  while (1)
  {
    v10 = qword_1011D7D60;
    v9 = *(_QWORD *)algn_1011D7D68;
    swift_beginAccess(v8, &v46, 33, 0);
    v11 = a1[3];
    if ((sub_100A2C3D8(a1[2], v10) & 1) != 0 && (sub_100AA4A60(v11, v9) & 1) != 0)
    {
      swift_endAccess(&v46);
    }
    else
    {
      sub_100AA86B4(v10, v9);
      swift_endAccess(&v46);
      swift_beginAccess(v8, v45, 0, 0);
      v12 = a1[2];
      v13 = a1[3];
      v8 = a1[4];
      v14 = (_QWORD *)a1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSUserDefaults.libraryMenuRevision.setter(v12, v13, v8, v14);
    }
    if (a3)
      break;
    v28 = *(_QWORD *)(a4 + 16);
    if (!v28)
    {
      v30 = 0;
      goto LABEL_65;
    }
    v29 = 0;
    v30 = 0;
    v31 = v28 - 1;
    while (2)
    {
      switch(*(_BYTE *)(a4 + 32 + v29))
      {
        case 0:
          v30 |= 0x41uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 1:
          v30 |= 0xC0uLL;
          goto LABEL_13;
        case 2:
          v30 |= 2uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 3:
          v30 |= 1uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 4:
          v30 |= 0x80uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 5:
          v30 |= 0x400uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 6:
          v30 |= 0x20uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 7:
          v30 |= 0x10uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 8:
          v30 |= 4uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 9:
          v30 |= 8uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        case 0xA:
          v30 |= 0x300uLL;
          if (v31 == v29)
            goto LABEL_65;
          goto LABEL_14;
        default:
LABEL_13:
          if (v31 == v29)
            goto LABEL_65;
LABEL_14:
          if (!__OFADD__(++v29, 1))
            continue;
          __break(1u);
          break;
      }
      break;
    }
LABEL_69:
    swift_once(&qword_1011D1DD8, sub_100AA9F24);
  }
  v15 = (void *)objc_opt_self(NSBundle);
  v16 = a3;
  v17 = objc_msgSend(v15, "mainBundle");
  v18 = NSBundle.exportedTypeDeclarations.getter();

  if (v18)
  {
    v19 = objc_msgSend(v16, "typeIdentifiers");
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String);

    v21 = *(_QWORD *)(v20 + 16);
    *(_QWORD *)&v22 = swift_bridgeObjectRelease(v20).n128_u64[0];
    if (v21)
    {
      v23 = objc_msgSend(v16, "typeIdentifiers", v22);
      v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String);

      swift_bridgeObjectRetain();
      v25 = sub_100A64504(v24, v18);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease_n(v18, 2);
      sub_100A640A0((uint64_t)v25);
      v27 = v26;
      swift_bridgeObjectRelease(v25);
LABEL_39:
      v41 = v16;
      v32 = *((_QWORD *)v27 + 2);
      v30 = 0;
      if (!v32)
      {
LABEL_60:
        if (objc_msgSend(v41, "selectionMode", swift_bridgeObjectRelease(v27).n128_f64[0]) == (id)2)
        {

        }
        else
        {
          v37 = objc_msgSend(v41, "selectionMode");

          if (v37 != (id)3)
            goto LABEL_65;
        }
        v30 &= 0xFFFFFFFFFFFFFC5FLL;
LABEL_65:
        objc_msgSend(a5, "filterAvailableContentGroups:withOptions:", v30, a6);
        if (qword_1011D1C28 != -1)
          swift_once(&qword_1011D1C28, sub_100A2D554);
        v38 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_100EE0B88);
        v40 = swift_getKeyPath(&unk_100EE0BB0);
        static Published.subscript.getter(&v46, v38, KeyPath, v40);
        swift_release();
        swift_release();
        __asm { BR              X10 }
      }
      v33 = v27 + 40;
      while (1)
      {
        v34 = *(v33 - 1);
        v35 = *v33;
        if (v34 == 0xD000000000000014 && v35 == 0x8000000100E4EB60
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x8000000100E4EB60, *(v33 - 1), *v33, 0) & 1) != 0)
        {
          v36 = 1247;
        }
        else if (v34 == 0xD00000000000001BLL && v35 == 0x8000000100E4EB40
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x8000000100E4EB40, v34, v35, 0) & 1) != 0)
        {
          v36 = 32;
        }
        else if (v34 == 0xD00000000000001ALL && v35 == 0x8000000100E4F8D0
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x8000000100E4F8D0, v34, v35, 0) & 1) != 0)
        {
          v36 = 256;
        }
        else
        {
          if ((v34 != 0xD000000000000015 || v35 != 0x8000000100E4F8F0)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100E4F8F0, v34, v35, 0) & 1) == 0)
          {
            goto LABEL_46;
          }
          v36 = 512;
        }
        v30 |= v36;
LABEL_46:
        v33 += 2;
        if (!--v32)
          goto LABEL_60;
      }
    }
    if (objc_msgSend(v16, "mediaTypes", swift_bridgeObjectRelease(v18).n128_f64[0]))
    {
      v27 = sub_100A5F06C((__int16)objc_msgSend(v16, "mediaTypes"));
      goto LABEL_39;
    }
  }
  v27 = (char *)_swiftEmptyArrayStorage;
  goto LABEL_39;
}

uint64_t Logger.libraryMenu.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1DE0 != -1)
    swift_once(&qword_1011D1DE0, sub_100AAA54C);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.libraryMenu);
}

uint64_t Library.Menu.Identifier.contentGroups.getter(unsigned __int8 a1)
{
  if (a1 > 0xAu)
    return 0;
  else
    return qword_100EE0DF0[(char)a1];
}

double sub_100AA7428@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double result;

  v6 = swift_allocObject(&unk_1010F5688, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  Library.Menu.Request.perform(_:_:)(sub_100AB550C, v6, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100AA7498(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 11) = *(__int128 *)((char *)a1 + 27);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 11) = *(__int128 *)((char *)a2 + 27);
  return _s9MusicCore7LibraryO4MenuV7RequestV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t Library.Menu.Identifier.symbolName(for:)(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100AA7520 + 4 * byte_100EE0610[a2]))(0x732E657261757173, 0xEC0000006B636174);
}

uint64_t sub_100AA7520()
{
  return 0x6B636F6C63;
}

uint64_t sub_100AA7534@<X0>(char a1@<W8>)
{
  if (a1 == 2)
    return 0x6F6E2E636973756DLL;
  else
    return 0x672E657261757173;
}

uint64_t sub_100AA7588()
{
  return 0x696D2E636973756DLL;
}

uint64_t sub_100AA75A4()
{
  return 0x6F6E2E636973756DLL;
}

uint64_t sub_100AA75EC()
{
  return 0x73726174697567;
}

unint64_t sub_100AA7604()
{
  return 0xD00000000000001ALL;
}

void sub_100AA761C()
{
  JUMPOUT(0x100AA7630);
}

uint64_t sub_100AA763C()
{
  return 30324;
}

unint64_t sub_100AA7648()
{
  return 0xD000000000000011;
}

unint64_t sub_100AA7664()
{
  unint64_t v0;

  v0 = sub_100A040A0();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v0) & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000016;
}

void Library.Menu.Identifier.name(for:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __asm { BR              X10 }
}

uint64_t sub_100AA77A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (v5 != 2 && (v5 & 1) != 0)
  {
    v7 = 0x8000000100E3FD60;
    v6 = 0xD000000000000013;
  }
  else
  {
    v6 = 0x796C746E65636552;
    v7 = 0xEE00646564644120;
  }
  String.LocalizationValue.init(stringLiteral:)(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v8 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v9 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v8, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v9;
}

uint64_t Library.Menu.Identifier.description.getter(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v1 = Library.Menu.Identifier.rawValue.getter(a1);
  v3 = v2;
  v8[2] = v1;
  v8[3] = v2;
  v8[0] = 46;
  v8[1] = 0xE100000000000000;
  v4 = sub_10098A8C0();
  v5 = StringProtocol.components<A>(separatedBy:)(v8, &type metadata for String, &type metadata for String, v4, v4);
  swift_bridgeObjectRelease(v3);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v1 = *(_QWORD *)(v5 + 16 * v6 + 16);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease(v5);
  return v1;
}

uint64_t Library.Menu.Identifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100AA7B1C + 4 * byte_100EE062A[a1]))(0xD000000000000029, 0x8000000100E2AED0);
}

uint64_t sub_100AA7B1C()
{
  uint64_t v0;

  return v0 + 4;
}

_UNKNOWN **static Library.Menu.Identifier.allCases.getter()
{
  return &off_1010E7488;
}

uint64_t sub_100AA7BFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = Library.Menu.Identifier.rawValue.getter(*a1);
  v5 = v4;
  v6 = Library.Menu.Identifier.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_100AA7C84()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = Library.Menu.Identifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100AA7CE4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = Library.Menu.Identifier.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100AA7D24(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = Library.Menu.Identifier.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100AA7D80@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO4MenuV10IdentifierO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100AA7DAC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = Library.Menu.Identifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100AA7DD4(_QWORD *a1@<X8>)
{
  *a1 = &off_1010E7488;
}

uint64_t sub_100AA7DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100AB54A4();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100AA7E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100AB54A4();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100AA7E8C()
{
  unsigned __int8 *v0;

  return Library.Menu.Identifier.description.getter(*v0);
}

char *Library.Menu.Revision.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  char *result;
  uint64_t v3;

  result = sub_100AB3B2C(a1);
  if (v1)
    return (char *)v3;
  return result;
}

uint64_t Library.Menu.Revision.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;

  v24 = a3;
  v25 = a5;
  v9 = sub_100007E8C(&qword_1011D7D88);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  sub_100007E68(a1, v14);
  v15 = sub_100AB4050();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV10CodingKeysON, &_s4MenuV8RevisionV10CodingKeysON, v15, v14, v13);
  v26[0] = a4;
  v27 = 1;
  v16 = sub_100007E8C(&qword_1011D7D98);
  v17 = sub_1000E4570(&qword_1011D7DA0, &qword_1011D7D98, (void (*)(void))sub_100AB4094, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, v16, v17);
  if (!v5)
  {
    v18 = a2;
    v19 = v24;
    v26[0] = v25;
    v27 = 0;
    v20 = sub_100007E8C(&qword_1011D7DB0);
    v21 = sub_1000E4570(&qword_1011D7DB8, &qword_1011D7DB0, (void (*)(void))sub_100AB4094, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, v20, v21);
    v26[0] = v18;
    v26[1] = v19;
    v27 = 2;
    v22 = sub_100AB40D8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, &_s4MenuV8RevisionV7VersionVN, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100AA80A4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v7 = sub_100007E8C(&qword_1011D7E30);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_100007E68(a1, v11);
  v13 = sub_100AB5100();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV7VersionV10CodingKeysON, &_s4MenuV8RevisionV7VersionV10CodingKeysON, v13, v11, v12);
  v21 = a2;
  v20 = 0;
  v14 = sub_100007E8C(&qword_1011D7D98);
  v15 = sub_1000E4570(&qword_1011D7DA0, &qword_1011D7D98, (void (*)(void))sub_100AB4094, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, v14, v15);
  if (!v3)
  {
    v21 = a3;
    v20 = 1;
    v16 = sub_100007E8C(&qword_1011D7DB0);
    v17 = sub_1000E4570(&qword_1011D7DB8, &qword_1011D7DB0, (void (*)(void))sub_100AB4094, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100AA8244(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1009A45E8(*a1, *a2);
}

Swift::Int sub_100AA8250()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100AA82E8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (*v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100AA835C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE300000000000000;
  v4 = 7105633;
  if (v2 != 1)
  {
    v4 = 0x6E6F6973726576;
    v3 = 0xE700000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x64657463656C6573;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100AA83F0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100AB50B8(*a1);
  *a2 = result;
  return result;
}

void sub_100AA841C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE300000000000000;
  v5 = 7105633;
  if (v2 != 1)
  {
    v5 = 0x6E6F6973726576;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64657463656C6573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100AA8474()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7105633;
  if (*v0 != 1)
    v1 = 0x6E6F6973726576;
  if (*v0)
    return v1;
  else
    return 0x64657463656C6573;
}

unint64_t sub_100AA84C8@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100AB50B8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100AA84EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100AB4050();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AA8514(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100AB4050();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AA853C()
{
  _BYTE *v0;

  if (*v0)
    return 0x64657463656C6573;
  else
    return 0x696669746E656469;
}

uint64_t sub_100AA8580@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100AB5144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AA85A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100AB5100();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AA85CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100AB5100();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AA85F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_100AB524C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100AA861C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_100AA80A4(a1, *v1, v1[1]);
}

uint64_t sub_100AA8634(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_100A2C3D8(*a1, *a2) & 1) != 0)
    return sub_100AA4A60(v2, v3);
  else
    return 0;
}

uint64_t MPCPlaybackEngine.Configuration.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MPCPlaybackEngine.Configuration.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t Library.Menu.Revision.selected.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_100AA86B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  __n128 v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;

  v3 = v2;
  v5 = (_QWORD *)*v2;
  v6 = v2[1];
  v7 = qword_1011D1DE0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once(&qword_1011D1DE0, sub_100AAA54C);
  v8 = type metadata accessor for Logger(0);
  v63 = sub_100048B14(v8, (uint64_t)static Logger.libraryMenu);
  v9 = Logger.logObject.getter(v63);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "╭ ⏩ Begin Migration", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v62 = v2;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v68 = v16;
    *(_DWORD *)v15 = 136315138;
    v66 = v5;
    v67 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = (char *)String.init<A>(describing:)(&v66, &_s4MenuV8RevisionV7VersionVN);
    v18 = a2;
    v20 = v19;
    *(_QWORD *)(v15 + 4) = sub_10099627C(v17, v19, &v68);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease_n(v5, 2);
    v21 = v20;
    a2 = v18;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "╞< %s", (uint8_t *)v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    v22 = v15;
    v3 = v62;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  swift_bridgeObjectRetain_n(a1, 2);
  v23 = swift_bridgeObjectRetain_n(a2, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v68 = v27;
    *(_DWORD *)v26 = 136315138;
    v66 = (_QWORD *)a1;
    v67 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = (char *)String.init<A>(describing:)(&v66, &_s4MenuV8RevisionV7VersionVN);
    v29 = a2;
    v31 = v30;
    *(_QWORD *)(v26 + 4) = sub_10099627C(v28, v30, &v68);
    swift_bridgeObjectRelease_n(v29, 2);
    swift_bridgeObjectRelease_n(a1, 2);
    v32 = v31;
    a2 = v29;
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "╞> %s", (uint8_t *)v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  v33 = v3[2];
  v34 = swift_bridgeObjectRetain();
  v35 = sub_100A68A08(v34);
  swift_bridgeObjectRelease(v33);
  v36 = swift_bridgeObjectRetain();
  v37 = sub_100A68A08(v36);
  swift_bridgeObjectRelease(a1);
  if (*(_QWORD *)(v37 + 16) <= *(_QWORD *)(v35 + 16) >> 3)
  {
    v66 = (_QWORD *)v35;
    swift_bridgeObjectRetain();
    sub_100AB1354(v37);
    v38 = v66;
  }
  else
  {
    swift_bridgeObjectRetain();
    v38 = sub_100AB14B4(v37, v35);
  }
  if (*(_QWORD *)(v35 + 16) <= *(_QWORD *)(v37 + 16) >> 3)
  {
    v66 = (_QWORD *)v37;
    sub_100AB1354(v35);
    v39 = v66;
  }
  else
  {
    v39 = sub_100AB14B4(v35, v37);
  }
  v68 = v33;
  v40 = *(_QWORD *)(v33 + 16);
  v41 = *(_QWORD *)(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v35);
  if (v40 != v41)
  {
    v42 = *(_QWORD *)(v33 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v42; ++i)
      {
        v44 = *(_BYTE *)(v33 + i + 32);
        LOBYTE(v66) = v44;
        sub_100AA90DC((unsigned __int8 *)&v66, &v68);
      }
      swift_bridgeObjectRelease(v33);
    }
  }
  sub_100AA4710((uint64_t)v38, &v68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100AB3114((uint64_t)v39, a1, &v68);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a1);
  v45 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(&v68, &v66, 0, 0);
  v46 = v68;
  if (v45 == *(_QWORD *)(v68 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v33);
    v62[2] = v46;
    v47 = v62[3];
    if (v38[2] <= *(_QWORD *)(v47 + 16) >> 3)
    {
      v65 = (void *)v62[3];
      swift_bridgeObjectRetain();
      sub_100AB1354((uint64_t)v38);
      swift_bridgeObjectRelease(v38);
      v48 = v65;
    }
    else
    {
      swift_bridgeObjectRetain();
      v48 = sub_100AB14B4((uint64_t)v38, v47);
      swift_bridgeObjectRelease(v38);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = a2;
    v60 = sub_100AB342C((uint64_t)v39, a1, a2);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(a1);
    v61 = sub_100AA9D84(v60, (uint64_t)v48);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v47);
    v62[3] = v61;
    v56 = v62;
    v57 = a1;
    v58 = v59;
  }
  else
  {
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v38);
    v49 = a2;
    v50 = *v62;
    v51 = v62[1];
    v52 = v62[3];
    v53 = sub_100AB56F0();
    swift_allocError(&_s4MenuV8RevisionV16MigrationFailureON, v53, 0, 0);
    *v54 = v50;
    v54[1] = v51;
    v54[2] = v33;
    v54[3] = v52;
    v54[4] = a1;
    v54[5] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow(v55);
    swift_bridgeObjectRelease(v68);
    v56 = v62;
    v57 = a1;
    v58 = v49;
  }
  sub_100AA8D78(v56, v57, v58);
}

double sub_100AA8D78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  double result;
  uint64_t v34;

  v4 = *a1;
  v5 = a1[1];
  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  v7 = a1[2];
  v6 = a1[3];
  v8 = qword_1011D1DE0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once(&qword_1011D1DE0, sub_100AAA54C);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100048B14(v9, (uint64_t)static Logger.libraryMenu);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "╞ ✅ Migration ended with", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = swift_bridgeObjectRetain();
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v34 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = swift_bridgeObjectRetain();
    v20 = (char *)Array.description.getter(v19, &type metadata for Library.Menu.Identifier);
    v22 = v21;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v17 + 4) = sub_10099627C(v20, v22, &v34);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "╞  - Ordered: %{public}s)", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v7, 2);
  }
  v23 = swift_bridgeObjectRetain();
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v34 = v27;
    *(_DWORD *)v26 = 136446210;
    v28 = sub_100A68A78();
    v29 = swift_bridgeObjectRetain();
    v30 = (char *)Set.description.getter(v29, &type metadata for Library.Menu.Identifier, v28);
    v32 = v31;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v26 + 4) = sub_10099627C(v30, v32, &v34);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "╞  - Selected: %{public}s)", (uint8_t *)v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v6, 2).n128_u64[0];
  }
  return result;
}

void sub_100AA90DC(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[32];

  v3 = *a1;
  swift_beginAccess(a2, v12, 0, 0);
  swift_beginAccess(a2, v11, 0, 0);
  swift_beginAccess(a2, v10, 0, 0);
  swift_beginAccess(a2, v9, 1, 0);
  v4 = *a2;
  swift_bridgeObjectRetain();
  sub_100A6AE8C(v3, v4);
  v6 = v5;
  swift_bridgeObjectRelease(v4);
  if ((v6 & 1) == 0)
  {
    v7 = *a2;
    v8 = *(_QWORD *)(*a2 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      if (v8 <= *(_QWORD *)(v7 + 16))
        __asm { BR              X9 }
      __break(1u);
      JUMPOUT(0x100AA9624);
    }
  }
}

uint64_t sub_100AA9690(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _BYTE v5[24];
  uint64_t *v6;

  swift_beginAccess(a2, v5, 33, 0);
  v6 = a2;
  v3 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  sub_1009BB898(0, 0);
  return swift_endAccess(v5);
}

uint64_t sub_100AA9D84(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unsigned __int8 v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_100AAB1CC(&v14, *(_BYTE *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_100AA9EDC@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;
  char *v5;
  char *v6;
  char *v7;

  result = sub_100AB3B2C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100AA9F08(_QWORD *a1)
{
  uint64_t *v1;

  return Library.Menu.Revision.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

void *sub_100AA9F24()
{
  void *result;

  result = sub_100A4CF9C((uint64_t)&off_1010E74B8);
  qword_1011D7D60 = (uint64_t)&off_1010E7488;
  *(_QWORD *)algn_1011D7D68 = result;
  return result;
}

void sub_100AA9F54()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;

  LOBYTE(v26[0]) = 0;
  v1 = sub_100AB56AC();
  v2 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&_s9LegacyKeyON, v1, v2, (uint64_t)&v27);
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_8;
  v3 = sub_100007E8C(&qword_1011D3728);
  if ((swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return;
  v4 = v26[0];
  LOBYTE(v26[0]) = 1;
  NSUserDefaults.subscript.getter((uint64_t)&_s9LegacyKeyON, v1, v2, (uint64_t)&v27);
  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_7:
    swift_bridgeObjectRelease(v4);
LABEL_8:
    sub_100A1324C((uint64_t)&v27);
    return;
  }
  if ((swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v4);
    return;
  }
  v5 = v26[0];
  v26[0] = 0x4D7972617262694CLL;
  v26[1] = 0xEB00000000756E65;
  NSUserDefaults.subscript.getter((uint64_t)v26, (uint64_t)&type metadata for String, v2, (uint64_t)&v27);
  if (*((_QWORD *)&v28 + 1))
  {
    swift_bridgeObjectRelease(v5);
    goto LABEL_7;
  }
  sub_100A1324C((uint64_t)&v27);
  if (qword_1011D1DD8 != -1)
    swift_once(&qword_1011D1DD8, sub_100AA9F24);
  sub_100AB3650(v4, v5, qword_1011D7D60, *(uint64_t *)algn_1011D7D68);
  if (v0)
  {
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v4);
    if (qword_1011D1DE0 != -1)
      swift_once(&qword_1011D1DE0, sub_100AAA54C);
    v10 = type metadata accessor for Logger(0);
    sub_100048B14(v10, (uint64_t)static Logger.libraryMenu);
    swift_errorRetain(v0);
    v11 = swift_errorRetain(v0);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v15 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v14 = 138412290;
      *(_QWORD *)&v27 = v0;
      swift_errorRetain(v0);
      v16 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
      String.init<A>(describing:)(&v27, v16);
      v18 = v17;
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
      *(_QWORD *)(v14 + 4) = v19;
      *v15 = v19;
      swift_errorRelease(v0);
      swift_errorRelease(v0);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to migrate legacy library menu: %@", (uint8_t *)v14, 0xCu);
      v20 = sub_100007E8C(&qword_1011D9EE0);
      swift_arrayDestroy(v15, 1, v20);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

      swift_errorRelease(v0);
    }
    else
    {
      swift_errorRelease(v0);
      swift_errorRelease(v0);
      swift_errorRelease(v0);

    }
  }
  else
  {
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v24 = v5;
    v25 = v9;
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v4);
    NSUserDefaults.libraryMenuRevision.setter(v21, v22, v23, v25);
    v27 = 0u;
    v28 = 0u;
    LOBYTE(v26[0]) = 0;
    NSUserDefaults.subscript.setter((uint64_t)&v27, (uint64_t)v26, (uint64_t)&_s9LegacyKeyON, v1, v2);
    v27 = 0u;
    v28 = 0u;
    LOBYTE(v26[0]) = 1;
    NSUserDefaults.subscript.setter((uint64_t)&v27, (uint64_t)v26, (uint64_t)&_s9LegacyKeyON, v1, v2);
  }
}

void (*NSUserDefaults.libraryMenuRevision.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  *v3 = NSUserDefaults.libraryMenuRevision.getter();
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v6;
  return sub_100AAA380;
}

void sub_100AAA380(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = (_QWORD *)(*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSUserDefaults.libraryMenuRevision.setter(v4, v3, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSUserDefaults.libraryMenuRevision.setter(**a1, v3, v5, v6);
  }
  free(v2);
}

uint64_t sub_100AAA430(char *a1, char *a2)
{
  return sub_1009A417C(*a1, *a2);
}

Swift::Int sub_100AAA43C()
{
  char *v0;

  return sub_100A37AE4(*v0);
}

uint64_t sub_100AAA444(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  if (*v1)
    v3 = 0x8000000100E4A5F0;
  else
    v3 = 0x8000000100E4A5D0;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100AAA4A4(uint64_t a1)
{
  char *v1;

  return sub_100A3832C(a1, *v1);
}

uint64_t sub_100AAA4AC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E7548, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100AAA508(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  v3 = 0x8000000100E4A5D0;
  if (*v1)
    v3 = 0x8000000100E4A5F0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100AAA54C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.libraryMenu);
  sub_100048B14(v0, (uint64_t)static Logger.libraryMenu);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x4D7972617262694CLL, 0xEB00000000756E65);
}

uint64_t static Logger.libraryMenu.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1DE0 != -1)
    swift_once(&qword_1011D1DE0, sub_100AAA54C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.libraryMenu);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100AAA638(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[9];

  v4 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  v5 = ApplicationCapabilities.Service.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_100AADE44(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_100AAAA80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  __n128 v29;
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748(&qword_1011D6BE8, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v36 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a1;
    v34 = ~v15;
    v35 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100048748(&qword_1011D6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v36, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v35 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v34;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v32;
        a1 = v33;
        v26 = v35;
        goto LABEL_7;
      }
    }
    v31 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v36, v6, v31);
    v22(v33, *(_QWORD *)(*v32 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v36;
    v20(v9, v36, v6);
    v37 = *v3;
    *v3 = 0x8000000000000000;
    sub_100AAE2EC((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v37;
    v29 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v29);
    return 1;
  }
}

uint64_t sub_100AAACDC(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  void *v34;
  id v35;
  _QWORD v36[9];

  v3 = v2;
  v6 = *v2;
  v7 = *(_QWORD *)(*v2 + 40);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = v9;
  Hasher.init(_seed:)(v36, v7);
  swift_bridgeObjectRetain();
  String.hash(into:)(v36, v8, v10);
  v11 = Hasher._finalize()();
  swift_bridgeObjectRelease(v10);
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v36[0] = *v3;
    *v3 = 0x8000000000000000;
    v31 = a2;
    sub_100AAE4F0((uint64_t)v31, v13, isUniquelyReferenced_nonNull_native);
    v32 = *v3;
    *v3 = v36[0];
    swift_bridgeObjectRelease(v32);
    *a1 = v31;
    return 1;
  }
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13));
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v14 == v17 && v16 == v18)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v16, 2);
  }
  else
  {
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) == 0)
    {
      v22 = ~v12;
      do
      {
        v13 = (v13 + 1) & v22;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          goto LABEL_15;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13));
        v16 = v24;
        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
        if (v23 == v25 && v16 == v26)
          goto LABEL_16;
        v28 = v26;
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v16, v25, v26, 0);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v28);
      }
      while ((v29 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease(v6);
  v34 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v13);
  *a1 = v34;
  v35 = v34;
  return 0;
}

uint64_t sub_100AAAF04(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v34 = a2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8);
    v10 = swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v32 = v9;
      v11 = type metadata accessor for AnyCancellable(0);
      swift_unknownObjectRetain(v9, v12);
      swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v33;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_100AAB978(v7, result + 1);
    v33 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v30 = v27 + 1;
      swift_retain(a2);
      sub_100AAC640(v30);
      v28 = v33;
    }
    else
    {
      v28 = v26;
      swift_retain(a2);
    }
    sub_100AAD5FC(a2, v28);
    v31 = *v3;
    *v3 = v28;
    swift_bridgeObjectRelease(v31);
    *a1 = a2;
    return 1;
  }
  v14 = *(_QWORD *)(v6 + 40);
  v15 = type metadata accessor for AnyCancellable(0);
  v16 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_bridgeObjectRetain();
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v15, v16);
  v18 = -1 << *(_BYTE *)(v6 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v6 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v23 = v34;
    v33 = *v2;
    *v2 = 0x8000000000000000;
    swift_retain(v23);
    sub_100AAE71C(v24, v19, isUniquelyReferenced_nonNull_native);
    v25 = *v2;
    *v2 = v33;
    swift_bridgeObjectRelease(v25);
    *a1 = v23;
    return 1;
  }
  v20 = ~v18;
  v21 = sub_100048748(&qword_1011D6BE0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  while (1)
  {
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v19);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v33, &v34, v15, v21) & 1) != 0)
      break;
    v19 = (v19 + 1) & v20;
    if (((*(_QWORD *)(v6 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_11;
  }
  swift_release(a2);
  swift_bridgeObjectRelease(v6);
  v29 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v19);
  *a1 = v29;
  swift_retain(v29);
  return 0;
}

uint64_t sub_100AAB1CC(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[10];

  v4 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  v5 = Library.Menu.Identifier.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_100AAE8C4(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_100AAB5A8(unsigned __int8 *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_100AAED14(a2, v8, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100AAB6C4(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_100AAEE70(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100AAB7BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v23[9];

  v7 = *v3;
  Hasher.init(_seed:)(v23, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v23, a2, a3);
  swift_bridgeObjectRelease();
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v23[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100AAEF90(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100AAB978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    sub_100007E8C(&qword_1011D6BD0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v25 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for AnyCancellable(0);
      do
      {
        v23 = v7;
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        if (*(_QWORD *)(v25 + 24) <= v18)
        {
          sub_100AAC640(v18 + 1);
          v4 = v25;
        }
        v9 = v24;
        v23 = v24;
        v10 = *(_QWORD *)(v4 + 40);
        v11 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
        result = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v8, v11);
        v13 = v4 + 56;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v16 == v20;
            if (v16 == v20)
              v16 = 0;
            v19 |= v21;
            v22 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v22 == -1);
          v17 = __clz(__rbit64(~v22)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_100AABB98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E70);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x100AABF98);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v17, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_100AABFC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for AudioVariant(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_1011D7EC8);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v40 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v38 = v2;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v20 >= v39)
      goto LABEL_35;
    v21 = v40[v20];
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v39)
        goto LABEL_35;
      v21 = v40[v16];
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(_QWORD *)(v7 + 48);
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v41 + 32);
    v26(v6, v24 + v25 * v19, v4, v15);
    v27 = *(_QWORD *)(v9 + 40);
    v28 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    ((void (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v23;
  }
  v22 = v20 + 3;
  if (v22 < v39)
  {
    v21 = v40[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v16 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        ++v22;
        if (v21)
          goto LABEL_25;
      }
    }
    v16 = v22;
    goto LABEL_25;
  }
LABEL_35:
  swift_release();
  v2 = v38;
  v37 = 1 << *(_BYTE *)(v7 + 32);
  if (v37 > 63)
    bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v40 = -1 << v37;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release();
  *v2 = v9;
}

void sub_100AAC330(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E68);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v32 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v34 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v33 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v33)
          goto LABEL_36;
        v16 = v34[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v33)
            goto LABEL_36;
          v16 = v34[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v33)
              goto LABEL_36;
            v16 = v34[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v33)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v34[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v33)
                    goto LABEL_36;
                  v16 = v34[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = *(_QWORD *)(v6 + 40);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v22 = v21;
      Hasher.init(_seed:)(v35, v19);
      String.hash(into:)(v35, v20, v22);
      v23 = Hasher._finalize()();
      swift_bridgeObjectRelease(v22);
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v10 + 8 * v26);
        }
        while (v30 == -1);
        v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100AAC640(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D6BD0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v31 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v31)
          goto LABEL_36;
        v16 = v32[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_36;
          v16 = v32[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_36;
            v16 = v32[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release(v3);
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v31)
                    goto LABEL_36;
                  v16 = v32[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = *(_QWORD *)(v6 + 40);
      v20 = type metadata accessor for AnyCancellable(0);
      v21 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100AAC950(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D6BC0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v16 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v15 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v15 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v15 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x100AACDB4);
              }
              if (v11 >= v15)
                break;
              v10 = v16[v11];
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v17, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release();
  v14 = 1 << *(_BYTE *)(v3 + 32);
  if (v14 > 63)
    bzero(v16, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v14;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release();
  *v2 = v5;
}

void sub_100AACDE8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D6BA8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100AAD090(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E88);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100AAD310(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E60);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release();
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v34, v21, v22);
      swift_bridgeObjectRelease();
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

unint64_t sub_100AAD5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = type metadata accessor for AnyCancellable(0);
  v6 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  result = _HashTable.nextHole(atOrAfter:)(v7 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_100AAD6C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v40 = v9;
  sub_100007E8C(&qword_1011D7EC8);
  result = static _SetStorage.allocate(capacity:)(a3);
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v40;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v39)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v38[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v39)
          goto LABEL_37;
        v21 = v38[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v39)
            goto LABEL_37;
          v21 = v38[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v39)
              goto LABEL_37;
            v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v39)
                  goto LABEL_37;
                v21 = v38[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    v26 = *(_QWORD *)(v12 + 40);
    v27 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v8, v27);
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      v17 = v40;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      v17 = v40;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v31 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_100AAD9C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v18[10];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
    goto LABEL_23;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    sub_100007E8C(&qword_1011D6BC0);
    v7 = static _SetStorage.allocate(capacity:)(a3);
    v8 = (void *)v7;
    v16 = a2;
    if (a2 < 1)
      v9 = 0;
    else
      v9 = *a1;
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      goto LABEL_22;
    }
    if (v16 > 1)
    {
      v11 = a1[1];
      v12 = 1;
      if (v11)
        goto LABEL_21;
      v12 = 2;
      if (v16 > 2)
      {
        v11 = a1[2];
        if (v11)
          goto LABEL_21;
        v12 = 3;
        if (v16 > 3)
        {
          v11 = a1[3];
          if (!v11)
          {
            v13 = 4;
            if (v16 > 4)
            {
              v11 = a1[4];
              if (v11)
              {
                v12 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v12 = v13 + 1;
                if (__OFADD__(v13, 1))
                {
                  __break(1u);
                  JUMPOUT(0x100AADE10);
                }
                if (v12 >= v16)
                  break;
                v11 = a1[v12];
                ++v13;
                if (v11)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_22:
          v14 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v10);
          Hasher.init(_seed:)(v18, *(_QWORD *)(v7 + 40));
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    swift_release();
    return v8;
  }
  return (void *)v4;
}

void sub_100AADE44(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100AABB98(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10019ECA8(&qword_1011D7E70);
        goto LABEL_10;
      }
      sub_100AAF9FC(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19, *(_QWORD *)(*v3 + 40));
    v10 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x100AAE278);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

uint64_t sub_100AAE2EC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100AABFC4(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_100AAF138();
      goto LABEL_12;
    }
    sub_100AAFDF4(v13);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100048748(&qword_1011D6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100AAE4F0(uint64_t a1, unint64_t a2, char a3)
{
  Swift::Int v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  _QWORD v35[9];

  v4 = (uint64_t *)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100AAC330(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100AAF35C();
LABEL_22:
      v31 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v31 + 48) + 8 * a2) = a1;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (!v33)
      {
        *(_QWORD *)(v31 + 16) = v34;
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100AB011C(v9);
  }
  v10 = *(_QWORD *)v3;
  v11 = *(_QWORD *)(*(_QWORD *)v3 + 40);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v14 = v13;
  Hasher.init(_seed:)(v35, v11);
  String.hash(into:)(v35, v12, v14);
  v3 = Hasher._finalize()();
  swift_bridgeObjectRelease(v14);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v3 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
  v3 = v17;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v16 == v18 && v3 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_26;
  }
  v21 = v19;
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v3, v18, v19, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
  {
    v23 = ~v15;
    do
    {
      a2 = (a2 + 1) & v23;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
      v3 = v25;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v24 == v26 && v3 == v27)
        goto LABEL_25;
      v29 = v27;
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v3, v26, v27, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v29);
    }
    while ((v30 & 1) == 0);
  }
LABEL_26:
  _s3__C4NameVMa_1(0);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_100AAE71C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100AAC640(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100AAF504();
      goto LABEL_12;
    }
    sub_100AB03F8(v9);
  }
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v4 = type metadata accessor for AnyCancellable(0);
  v12 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v4, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = sub_100048748(&qword_1011D6BE0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v22, v4, v16) & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_100AAE8C4(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[10];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100AAC950(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10019ECA8(&qword_1011D6BC0);
        goto LABEL_10;
      }
      sub_100AB06DC(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19, *(_QWORD *)(*v3 + 40));
    v10 = Library.Menu.Identifier.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x100AAEC90);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

void sub_100AAED14(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v5 = a1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100AACDE8(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_10019ECA8(&qword_1011D6BA8);
      goto LABEL_14;
    }
    sub_100AB0B3C(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v18, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(v5);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MPCPlaybackEngine.Option);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_100AAEE70(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100AAD090(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_100AAF6B8();
      goto LABEL_14;
    }
    sub_100AB0DB4(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_100AAEF90(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100AAD310(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100AAF84C();
      goto LABEL_22;
    }
    sub_100AB1014(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v29, a1, a2);
  swift_bridgeObjectRelease();
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_100AAF138()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011D7EC8);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_100AAF35C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_100007E8C(&qword_1011D7E68);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100AAF504()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100007E8C(&qword_1011D6BD0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    swift_retain(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100AAF6AC()
{
  sub_10019ECA8(&qword_1011D6BC0);
}

void sub_100AAF6B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_100007E8C(&qword_1011D7E88);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100AAF84C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100007E8C(&qword_1011D7E60);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100AAF9FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  __n128 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E70);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = swift_retain(v3);
  if (v8)
  {
    v11 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v9 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v9 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v9 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x100AAFDC8);
              }
              if (v13 >= v9)
                break;
              v12 = *(_QWORD *)(v3 + 56 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v16, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2, v10);
LABEL_26:
  *v2 = v5;
}

void sub_100AAFDF4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;

  v2 = v1;
  v4 = type metadata accessor for AudioVariant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_1011D7EC8);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release();
LABEL_37:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v36 = v2;
  v37 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  v16 = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_35;
      v22 = *(_QWORD *)(v37 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v38)
          goto LABEL_35;
        v22 = *(_QWORD *)(v37 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v24 * v20, v4, v16);
    v25 = *(_QWORD *)(v10 + 40);
    v26 = sub_100048748(&qword_1011D6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    v27 = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v18 * v24, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v38)
  {
LABEL_35:
    swift_release_n(v8, 2, v16);
    v2 = v36;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100AB011C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  _QWORD v36[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E68);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v33 = v2;
  v34 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v35 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v35)
      goto LABEL_36;
    v17 = *(_QWORD *)(v34 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_36;
      v17 = *(_QWORD *)(v34 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v35)
          goto LABEL_36;
        v17 = *(_QWORD *)(v34 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v15);
    v20 = *(_QWORD *)(v6 + 40);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;
    Hasher.init(_seed:)(v36, v20);
    v24 = v19;
    String.hash(into:)(v36, v21, v23);
    v25 = Hasher._finalize()();
    swift_bridgeObjectRelease(v23);
    v26 = -1 << *(_BYTE *)(v6 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v10 + 8 * v28);
      }
      while (v32 == -1);
      v13 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v24;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v35)
  {
LABEL_36:
    swift_release_n(v3, 2, v11);
    v2 = v33;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v34 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v35)
      goto LABEL_36;
    v17 = *(_QWORD *)(v34 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AB03F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D6BD0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = v2;
  v32 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v33 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v33)
      goto LABEL_36;
    v17 = *(_QWORD *)(v32 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v33)
        goto LABEL_36;
      v17 = *(_QWORD *)(v32 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v33)
          goto LABEL_36;
        v17 = *(_QWORD *)(v32 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    v20 = *(_QWORD *)(v6 + 40);
    v21 = type metadata accessor for AnyCancellable(0);
    v22 = sub_100048748(&qword_1011D6BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    swift_retain(v19);
    v23 = dispatch thunk of Hashable._rawHashValue(seed:)(v20, v21, v22);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v11);
    v2 = v31;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v32 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v33)
      goto LABEL_36;
    v17 = *(_QWORD *)(v32 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AB06DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D6BC0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  v9 = swift_retain();
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v15 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v15 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v15 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x100AB0B08);
              }
              if (v12 >= v15)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2, v9);
LABEL_26:
  *v2 = v5;
}

void sub_100AB0B3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D6BA8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AB0DB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E88);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release();
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100AB1014(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011D7E60);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v32 = v2;
  v33 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  v12 = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v33)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain_n(v23, 2);
    String.hash(into:)(v34, v22, v23);
    swift_bridgeObjectRelease();
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v12);
    v2 = v32;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

unint64_t sub_100AB12CC()
{
  unint64_t result;

  result = qword_1011D7D70;
  if (!qword_1011D7D70)
  {
    result = swift_getWitnessTable(&unk_100EE0B48, &_s4MenuV9MoveErrorVN);
    atomic_store(result, (unint64_t *)&qword_1011D7D70);
  }
  return result;
}

unint64_t sub_100AB1310()
{
  unint64_t result;

  result = qword_1011D7D78;
  if (!qword_1011D7D78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Revision, &type metadata for Library.Menu.Revision);
    atomic_store(result, (unint64_t *)&qword_1011D7D78);
  }
  return result;
}

void sub_100AB1354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_100A67C1C(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_100AB14B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v14;
  _QWORD v15[9];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = (_QWORD *)(a1 + 56);
    v5 = -1 << *(_BYTE *)(a1 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a1 + 56);
    v14 = (unint64_t)(63 - v5) >> 6;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      goto LABEL_22;
    }
    if (v14 > 1)
    {
      v9 = v4[1];
      v10 = 1;
      if (v9)
        goto LABEL_21;
      v10 = 2;
      if (v14 > 2)
      {
        v9 = v4[2];
        if (v9)
          goto LABEL_21;
        v10 = 3;
        if (v14 > 3)
        {
          v9 = v4[3];
          if (v9)
            goto LABEL_21;
          v10 = 4;
          if (v14 > 4)
          {
            v9 = v4[4];
            if (!v9)
            {
              v11 = 5;
              if (v14 > 5)
              {
                v9 = v4[5];
                if (v9)
                {
                  v10 = 5;
                  goto LABEL_21;
                }
                while (1)
                {
                  v10 = v11 + 1;
                  if (__OFADD__(v11, 1))
                    __break(1u);
                  if (v10 >= v14)
                    break;
                  v9 = v4[v10];
                  ++v11;
                  if (v9)
                    goto LABEL_21;
                }
              }
              goto LABEL_25;
            }
LABEL_21:
            v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_22:
            v12 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v8);
            Hasher.init(_seed:)(v15, *(_QWORD *)(v2 + 40));
            __asm { BR              X8 }
          }
        }
      }
    }
LABEL_25:
    sub_10004FA7C(a1);
    return (void *)v2;
  }
  swift_release();
  return &_swiftEmptySetSingleton;
}

void *sub_100AB1D08(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v20;
  _QWORD v22[12];

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v22[11] = a3 + 56;
  v20 = v6 - 1;
  v8 = a5[3];
  v7 = a5[4];
  if (v7)
  {
    v9 = (v7 - 1) & v7;
    v10 = __clz(__rbit64(v7)) | (v8 << 6);
    goto LABEL_13;
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x100AB22A4);
  }
  v12 = (unint64_t)(a5[2] + 64) >> 6;
  if (v11 >= v12)
  {
    v11 = a5[3];
  }
  else
  {
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
    {
LABEL_12:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v11 << 6);
      v8 = v11;
LABEL_13:
      v16 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v10);
      a5[3] = v8;
      a5[4] = v9;
      Hasher.init(_seed:)(v22, *(_QWORD *)(a3 + 40));
      __asm { BR              X8 }
    }
    v15 = v8 + 2;
    if (v8 + 2 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
      {
LABEL_8:
        v11 = v15;
        goto LABEL_12;
      }
      if (v8 + 3 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v11 = v8 + 3;
          goto LABEL_12;
        }
        v15 = v8 + 4;
        if (v8 + 4 >= v12)
        {
          v11 = v8 + 3;
          goto LABEL_23;
        }
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (v14)
          goto LABEL_8;
        v11 = v8 + 5;
        if (v8 + 5 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v11);
          if (!v14)
          {
            v11 = v12 - 1;
            v17 = v8 + 6;
            do
            {
              if (v12 == v17)
                goto LABEL_23;
              v14 = *(_QWORD *)(v13 + 8 * v17++);
            }
            while (!v14);
            v11 = v17 - 1;
          }
          goto LABEL_12;
        }
      }
      v11 = v15;
    }
  }
LABEL_23:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain();
  return sub_100AAD9C8(a1, a2, v20, a3);
}

uint64_t sub_100AB2344(void *a1, char a2, void *a3, char a4)
{
  char v7;
  char v8;
  char v9;

  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
    {
      sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
      sub_1002F558C(a1, 0);
      sub_1002F558C(a3, 0);
      v7 = static NSObject.== infix(_:_:)(a1, a3);
      goto LABEL_6;
    }
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_7;
  type metadata accessor for MusicLibrary(0);
  sub_1002F558C(a1, 1);
  sub_1002F558C(a3, 1);
  v7 = static MusicLibrary.== infix(_:_:)(a1, a3);
LABEL_6:
  v8 = v7;
  v9 = a2 & 1;
  sub_1002F5684(a3, v9);
  sub_1002F5684(a1, v9);
  return v8 & 1;
}

uint64_t sub_100AB241C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100AB242C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100AB2468()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100AB24C4()
{
  uint64_t v0;

  sub_100AA65C4(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100AB250C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100AB251C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100AB2524()
{
  unint64_t result;

  result = qword_1011D7D80;
  if (!qword_1011D7D80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Revision, &type metadata for Library.Menu.Revision);
    atomic_store(result, (unint64_t *)&qword_1011D7D80);
  }
  return result;
}

uint64_t _s9MusicCore7LibraryO4MenuV7RequestV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  char v14;
  uint64_t v16[2];
  uint64_t v17[2];
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  sub_100AB563C((uint64_t *)a1, (uint64_t)v17);
  sub_100AB563C((uint64_t *)a2, (uint64_t)v16);
  sub_100AB563C(v17, (uint64_t)&v18);
  v4 = v18;
  if ((v19 & 1) != 0)
  {
    sub_100AB563C(v16, (uint64_t)&v20);
    if ((v21 & 1) == 0)
      goto LABEL_16;
    v5 = v20;
    type metadata accessor for MusicLibrary(0);
    sub_100AB5654((uint64_t)v17);
    sub_100AB5654((uint64_t)v16);
    v6 = static MusicLibrary.== infix(_:_:)(v4, v5);
  }
  else
  {
    sub_100AB563C(v16, (uint64_t)&v20);
    if ((v21 & 1) != 0)
      goto LABEL_16;
    v7 = v20;
    sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
    sub_100AB5654((uint64_t)v17);
    sub_100AB5654((uint64_t)v16);
    v6 = static NSObject.== infix(_:_:)(v4, v7);
  }
  v8 = v6;
  sub_100AB5680((uint64_t)v16);
  sub_100AB5680((uint64_t)v17);
  if ((v8 & 1) == 0 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    goto LABEL_16;
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a2 + 24);
  if (v9)
  {
    if (!v10)
      goto LABEL_16;
    sub_10004A07C(0, &qword_1011D7EA8, MPMediaPickerConfiguration_ptr);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      goto LABEL_16;
  }
  else if (v10)
  {
    goto LABEL_16;
  }
  if ((sub_100AA4A60(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
    && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) == 0)
  {
    v14 = ((*(_BYTE *)(a1 + 42) & 1) == 0) ^ *(_BYTE *)(a2 + 42);
    return v14 & 1;
  }
LABEL_16:
  v14 = 0;
  return v14 & 1;
}

char *sub_100AB2734(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, unsigned __int8 a11)
{
  uint64_t v11;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v24[24];
  _BYTE v25[24];
  int v26;
  int v27;

  v26 = a3;
  v27 = a5;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess(a4, v25, 0, 0);
    swift_beginAccess(a6, v24, 0, 0);
    v16 = 0;
    v17 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      v18 = *(unsigned __int8 *)(a1 + v16 + 32);
      if ((sub_100A400F4(*(_BYTE *)(a1 + v16 + 32), a2) & 1) == 0)
      {
        if ((v26 & 1) != 0)
        {
          v19 = *(_QWORD *)(a4 + 24);
          swift_bridgeObjectRetain();
          v20 = sub_100A400F4(v18, v19);
          swift_bridgeObjectRelease(v19);
          if ((v27 & 1) != 0)
          {
            if ((v20 & 1) != 0)
              goto LABEL_11;
            goto LABEL_4;
          }
        }
        else if ((v27 & 1) != 0)
        {
LABEL_11:
          __asm { BR              X9 }
        }
        if (((_DWORD)v18 != 5) | a10 & a11 & 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = sub_1009BA168(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
          v22 = *((_QWORD *)v17 + 2);
          v21 = *((_QWORD *)v17 + 3);
          if (v22 >= v21 >> 1)
            v17 = sub_1009BA168((char *)(v21 > 1), v22 + 1, 1, v17);
          *((_QWORD *)v17 + 2) = v22 + 1;
          v17[v22 + 32] = v18;
        }
      }
LABEL_4:
      if (v11 == ++v16)
      {
        swift_bridgeObjectRelease(a1);
        return v17;
      }
    }
  }
  return (char *)_swiftEmptyArrayStorage;
}

unint64_t _s9MusicCore7LibraryO4MenuV10IdentifierO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E55E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

void sub_100AB2C34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  int64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[24];

  v4 = a3 >> 1;
  if (a3 >> 1 != a2)
  {
    swift_beginAccess(a4, v13, 0, 0);
    v8 = v4;
    while (!__OFSUB__(v8--, 1))
    {
      if (v8 < a2 || v8 >= v4)
        goto LABEL_10;
      v10 = *a4;
      v11 = *(unsigned __int8 *)(a1 + v8);
      swift_bridgeObjectRetain();
      v12 = sub_100A2406C(v11, v10);
      swift_bridgeObjectRelease(v10);
      if ((v12 & 1) != 0 || v8 == a2)
        return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_100AB2D14(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  _BYTE v10[24];

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 - 1 <= result)
    return 13;
  v4 = result;
  if ((result & 0x8000000000000000) == 0)
  {
    if (v3 != result)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess(a3, v10, 0, 0);
      while (1)
      {
        v5 = *(unsigned __int8 *)(a2 + v4 + 32);
        v8 = *a3;
        swift_bridgeObjectRetain();
        v9 = sub_100A2406C(v5, v8);
        swift_bridgeObjectRelease(v8);
        if ((v9 & 1) != 0)
          break;
        if (v3 == ++v4)
        {
          v5 = 13;
          break;
        }
      }
      swift_bridgeObjectRelease(a2);
      return v5;
    }
    return 13;
  }
  __break(1u);
  return result;
}

void sub_100AB2DE8(unsigned __int8 *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t *v17;
  char *v18;
  int64_t v19;
  int v20;
  _BYTE *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[24];
  _BYTE v42[24];
  _BYTE v43[24];

  v6 = *a1;
  swift_bridgeObjectRetain();
  v7 = sub_100A6AE8C(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0)
    goto LABEL_48;
  if (v7 < 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (*(_QWORD *)(a2 + 16) < (unint64_t)v7)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v10 = a2 + 32;
  swift_bridgeObjectRetain();
  sub_100AB2C34(a2 + 32, 0, (2 * v7) | 1, a3);
  if ((v12 & 1) != 0)
  {
    v10 = 13;
    goto LABEL_11;
  }
  if (v11 < 0 || v11 >= v7)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!v3)
    v10 = *(unsigned __int8 *)(v10 + v11);
LABEL_11:
  swift_bridgeObjectRelease(a2);
  v13 = sub_100AB2D14(v7, a2, a3);
  v14 = v13;
  if (v10 == 13)
  {
    v15 = v13;
    v16 = v43;
    v17 = a3;
    if (v15 == 13)
    {
      swift_beginAccess(a3, v43, 1, 0);
      v18 = 0;
      v19 = 0;
LABEL_37:
      sub_1009BB788(v18, v19, v6);
      return;
    }
    goto LABEL_20;
  }
  v20 = v13;
  v21 = v43;
  v22 = a3;
  if (v20 != 13)
    goto LABEL_24;
  swift_beginAccess(a3, v43, 0, 0);
  v23 = *a3;
  swift_bridgeObjectRetain();
  v24 = sub_100A6AE8C(v10, v23);
  v26 = v25;
  swift_bridgeObjectRelease(v23);
  if ((v26 & 1) != 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v27 = __OFADD__(v24, 1);
  v14 = v24 + 1;
  if (v27)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_beginAccess(a3, v42, 1, 0);
  if (*(_QWORD *)(*a3 + 16) < v14)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
LABEL_36:
    v18 = (char *)v14;
    v19 = v14;
    goto LABEL_37;
  }
  __break(1u);
LABEL_20:
  swift_beginAccess(v17, v16, 0, 0);
  v28 = *a3;
  swift_bridgeObjectRetain();
  v14 = sub_100A6AE8C(v14, v28);
  v10 = v29;
  swift_bridgeObjectRelease(v28);
  if ((v10 & 1) != 0)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  swift_beginAccess(a3, v42, 1, 0);
  if (*(_QWORD *)(*a3 + 16) < v14)
    goto LABEL_42;
  if ((v14 & 0x8000000000000000) == 0)
    goto LABEL_36;
  __break(1u);
LABEL_24:
  swift_beginAccess(v22, v21, 0, 0);
  v30 = *a3;
  swift_bridgeObjectRetain();
  v31 = sub_100A6AE8C(v10, v30);
  v33 = v32;
  swift_bridgeObjectRelease(v30);
  if ((v33 & 1) != 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  swift_beginAccess(a3, v42, 0, 0);
  v34 = *a3;
  swift_bridgeObjectRetain();
  v35 = sub_100A6AE8C(v14, v34);
  v37 = v36;
  swift_bridgeObjectRelease(v34);
  if ((v37 & 1) == 0)
  {
    if (v35 <= v31)
      v38 = v31;
    else
      v38 = v35;
    if (v35 >= v31)
      v39 = v31;
    else
      v39 = v35;
    v27 = __OFSUB__(v38, v39);
    v40 = v38 - v39;
    if (!v27)
    {
      v14 = v39 + v40 / 2;
      if (!__OFADD__(v39, v40 / 2))
      {
        swift_beginAccess(a3, v41, 1, 0);
        if (*(_QWORD *)(*a3 + 16) >= v14)
        {
          if ((v14 & 0x8000000000000000) == 0)
            goto LABEL_36;
          goto LABEL_47;
        }
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    goto LABEL_43;
  }
LABEL_52:
  __break(1u);
}

void sub_100AB3114(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unsigned __int8 v19;

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v14);
    sub_100AB2DE8(&v19, a2, a3);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_17:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  v18 = v12 + 4;
  if (v12 + 4 >= v11)
  {
LABEL_24:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v7 + 8 * v18);
  v12 += 4;
  if (v16)
    goto LABEL_17;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_24;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v16)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100AB3294(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v6 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_24;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_24;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    result = sub_100A400F4(*(_BYTE *)(*(_QWORD *)(a3 + 48) + v15), a4);
    if ((result & 1) != 0)
    {
      *(unint64_t *)((char *)v6 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (uint64_t)sub_100AAD9C8(v6, a2, v7, a3);
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_24;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100AB342C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  __n128 v13;
  void *v14;
  uint64_t v16;

  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  swift_bridgeObjectRetain_n(a2, 2);
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a3, 2);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v10, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_100AB3294((uint64_t)&v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a3);
    swift_release();
    swift_bridgeObjectRelease(a3);
    v13 = swift_bridgeObjectRelease(a2);
    if (v3)
      swift_willThrow(v13);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v14 = (void *)swift_slowAlloc(v10, -1);
    bzero(v14, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_100AB3294((uint64_t)v14, v9, a1, a3);
    swift_release();
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
    swift_slowDealloc(v14, -1, -1);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a2);
  }
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  return v12;
}

void sub_100AB3650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void **v7;
  char *v8;
  uint64_t v9;
  void *v10;
  Swift::String v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void **v16;
  char *v17;
  uint64_t v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v28;
  char v29[24];
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v7 = (void **)(swift_bridgeObjectRetain() + 40);
    v8 = (char *)_swiftEmptyArrayStorage;
    do
    {
      v9 = (uint64_t)*(v7 - 1);
      v10 = *v7;
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = v9;
      v11._object = v10;
      v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E55E0, v11);
      swift_bridgeObjectRelease(v10);
      if (v12 <= 0xC)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_1009BA168(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v14 = *((_QWORD *)v8 + 2);
        v13 = *((_QWORD *)v8 + 3);
        if (v14 >= v13 >> 1)
          v8 = sub_1009BA168((char *)(v13 > 1), v14 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v14 + 1;
        v8[v14 + 32] = v12;
      }
      v7 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(a1);
    v15 = *(_QWORD *)(a2 + 16);
    if (v15)
      goto LABEL_11;
LABEL_21:
    v17 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  v8 = (char *)_swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a2 + 16);
  if (!v15)
    goto LABEL_21;
LABEL_11:
  swift_bridgeObjectRetain();
  v16 = (void **)(a2 + 40);
  v17 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v18 = (uint64_t)*(v16 - 1);
    v19 = *v16;
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = v18;
    v20._object = v19;
    v21 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E55E0, v20);
    swift_bridgeObjectRelease(v19);
    if (v21 <= 0xC)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        v17 = sub_1009BA168(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v23 = *((_QWORD *)v17 + 2);
      v22 = *((_QWORD *)v17 + 3);
      if (v23 >= v22 >> 1)
        v17 = sub_1009BA168((char *)(v22 > 1), v23 + 1, 1, v17);
      *((_QWORD *)v17 + 2) = v23 + 1;
      v17[v23 + 32] = v21;
    }
    v16 += 2;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease(a2);
LABEL_22:
  v24 = sub_100A68A08((uint64_t)v17);
  swift_bridgeObjectRelease(v17);
  v30 = v8;
  v31 = v24;
  v32 = v8;
  v33 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100AA86B4(a3, a4);
  if (v28)
  {
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    swift_beginAccess(&v30, v29, 0, 0);
    v25 = v32;
    if (*((_QWORD *)v32 + 2))
    {
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
    }
  }
}

char *sub_100AB3B2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void **v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v3 = sub_100007E8C(&qword_1011D7E90);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100007E68(a1, v7);
  v9 = sub_100AB4050();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV10CodingKeysON, &_s4MenuV8RevisionV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011D3728);
    v47 = 1;
    v11 = sub_100AB55A0(&qword_1011D7E98, &qword_1011D3728, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v46, v10, &v47, v3, v10, v11);
    v40 = v11;
    v41 = v10;
    v42 = v4;
    v43 = a1;
    v44 = v6;
    v45 = v3;
    v13 = v46;
    v14 = *(_QWORD *)(v46 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (void **)(v13 + 40);
      v16 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v18 = (uint64_t)*(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        v19._countAndFlagsBits = v18;
        v19._object = v17;
        v20 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E55E0, v19);
        swift_bridgeObjectRelease();
        if (v20 <= 0xC)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = sub_1009BA168(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
          v22 = *((_QWORD *)v16 + 2);
          v21 = *((_QWORD *)v16 + 3);
          if (v22 >= v21 >> 1)
            v16 = sub_1009BA168((char *)(v21 > 1), v22 + 1, 1, v16);
          *((_QWORD *)v16 + 2) = v22 + 1;
          v16[v22 + 32] = v20;
        }
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v23 = sub_100007E8C(&qword_1011D5828);
    v47 = 0;
    v24 = sub_100AB55A0(&qword_1011D5928, &qword_1011D5828, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    swift_bridgeObjectRetain();
    v25 = v44;
    v26 = v45;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v46, v23, &v47, v45, v23, v24);
    sub_100AA44F8(v46);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = sub_100A68A08(v28);
    swift_bridgeObjectRelease();
    v47 = 2;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v46, v41, &v47, v26, v41, v40);
    v30 = v46;
    v31 = *(_QWORD *)(v46 + 16);
    if (v31)
    {
      v41 = v29;
      swift_bridgeObjectRetain();
      v40 = v30;
      v32 = (void **)(v30 + 40);
      v6 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v33 = (uint64_t)*(v32 - 1);
        v34 = *v32;
        swift_bridgeObjectRetain();
        v35._countAndFlagsBits = v33;
        v35._object = v34;
        v36 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E55E0, v35);
        swift_bridgeObjectRelease();
        if (v36 <= 0xC)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = sub_1009BA168(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
          v38 = *((_QWORD *)v6 + 2);
          v37 = *((_QWORD *)v6 + 3);
          if (v38 >= v37 >> 1)
            v6 = sub_1009BA168((char *)(v37 > 1), v38 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v38 + 1;
          v6[v38 + 32] = v36;
        }
        v32 += 2;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      v25 = v44;
      v26 = v45;
    }
    else
    {
      v6 = (char *)_swiftEmptyArrayStorage;
    }
    v39 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v25, v26, v39);
    swift_bridgeObjectRetain();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_100AB4050()
{
  unint64_t result;

  result = qword_1011D7D90;
  if (!qword_1011D7D90)
  {
    result = swift_getWitnessTable(&unk_100EE0AF8, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7D90);
  }
  return result;
}

unint64_t sub_100AB4094()
{
  unint64_t result;

  result = qword_1011D7DA8;
  if (!qword_1011D7DA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011D7DA8);
  }
  return result;
}

unint64_t sub_100AB40D8()
{
  unint64_t result;

  result = qword_1011D7DC0;
  if (!qword_1011D7DC0)
  {
    result = swift_getWitnessTable(&unk_100EE0AD0, &_s4MenuV8RevisionV7VersionVN);
    atomic_store(result, (unint64_t *)&qword_1011D7DC0);
  }
  return result;
}

unint64_t sub_100AB4120()
{
  unint64_t result;

  result = qword_1011D7DC8;
  if (!qword_1011D7DC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.SelectionState, &type metadata for Library.Menu.SelectionState);
    atomic_store(result, (unint64_t *)&qword_1011D7DC8);
  }
  return result;
}

unint64_t sub_100AB4164(uint64_t a1)
{
  unint64_t result;

  result = sub_100AB4188();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100AB4188()
{
  unint64_t result;

  result = qword_1011D7E00;
  if (!qword_1011D7E00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Request, &type metadata for Library.Menu.Request);
    atomic_store(result, (unint64_t *)&qword_1011D7E00);
  }
  return result;
}

unint64_t sub_100AB41D0()
{
  unint64_t result;

  result = qword_1011D7E08;
  if (!qword_1011D7E08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011D7E08);
  }
  return result;
}

uint64_t sub_100AB4214()
{
  return sub_100049F28(&qword_1011D7E10, &qword_1011D7D98, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t _s4MenuVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

_QWORD *_s4MenuVwcp(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a2[1];
  v6 = (void *)a1[1];
  a1[1] = (uint64_t)v5;
  v7 = v5;

  v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = a2[5];
  v12 = a1[5];
  a1[5] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v12);
  return a1;
}

_QWORD *_s4MenuVwta(_QWORD *a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu()
{
  return &type metadata for Library.Menu;
}

ValueMetadata *type metadata accessor for Library.Menu.SelectionState()
{
  return &type metadata for Library.Menu.SelectionState;
}

double _s4MenuV7RequestVwxx(uint64_t a1)
{
  double result;

  sub_1002F5684(*(void **)a1, *(_BYTE *)(a1 + 8));

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t _s4MenuV7RequestVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1002F558C(*(void **)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v7 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4MenuV7RequestVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1002F558C(*(void **)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1002F5684(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  return a1;
}

__n128 _s4MenuV7RequestVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s4MenuV7RequestVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1002F5684(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  return a1;
}

uint64_t _s4MenuV7RequestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 43))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4MenuV7RequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 43) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 43) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Request()
{
  return &type metadata for Library.Menu.Request;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1002F558C(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s4MenuV7RequestV18MediaLibrarySourceOwxx(uint64_t a1)
{
  sub_1002F5684(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1002F558C(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1002F5684(v5, v6);
  return a1;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1002F5684(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu.Request.MediaLibrarySource()
{
  return &type metadata for Library.Menu.Request.MediaLibrarySource;
}

uint64_t _s4MenuV10IdentifierOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s4MenuV10IdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100AB4888 + 4 * byte_100EE0679[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100AB48BC + 4 * byte_100EE0674[v4]))();
}

uint64_t sub_100AB48BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB48C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AB48CCLL);
  return result;
}

uint64_t sub_100AB48D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AB48E0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100AB48E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB48EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Identifier()
{
  return &type metadata for Library.Menu.Identifier;
}

uint64_t _s4MenuV10IdentifierO8LocationOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100AB4958 + 4 * byte_100EE067E[v4]))();
  }
}

uint64_t _s4MenuV10IdentifierO8LocationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100AB4A10 + 4 * byte_100EE0688[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100AB4A44 + 4 * byte_100EE0683[v5]))();
}

uint64_t sub_100AB4A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB4A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AB4A54);
  return result;
}

uint64_t sub_100AB4A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AB4A68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100AB4A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB4A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Identifier.Location()
{
  return &type metadata for Library.Menu.Identifier.Location;
}

_QWORD *_s4MenuV8RevisionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

_QWORD *_s4MenuV8RevisionVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu.Revision()
{
  return &type metadata for Library.Menu.Revision;
}

uint64_t _s4MenuV8RevisionV7VersionVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

_QWORD *_s4MenuV8RevisionV7VersionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionV7VersionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a2[1];
  v6 = a1[1];
  a1[1] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

_QWORD *_s4MenuV8RevisionV7VersionVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *_s4MenuV8RevisionV7VersionVMa()
{
  return &_s4MenuV8RevisionV7VersionVN;
}

uint64_t _s4MenuV8RevisionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100AB4D2C + 4 * byte_100EE0692[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100AB4D60 + 4 * byte_100EE068D[v4]))();
}

uint64_t sub_100AB4D60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB4D68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AB4D70);
  return result;
}

uint64_t sub_100AB4D7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AB4D84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100AB4D88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB4D90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4MenuV8RevisionV10CodingKeysOMa()
{
  return &_s4MenuV8RevisionV10CodingKeysON;
}

uint64_t _s4MenuV8RevisionVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t _s4MenuV9MoveErrorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV9MoveErrorVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

__n128 _s4MenuV9MoveErrorVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s4MenuV9MoveErrorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s4MenuV9MoveErrorVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4MenuV9MoveErrorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4MenuV9MoveErrorVMa()
{
  return &_s4MenuV9MoveErrorVN;
}

unint64_t sub_100AB4FE4()
{
  unint64_t result;

  result = qword_1011D7E18;
  if (!qword_1011D7E18)
  {
    result = swift_getWitnessTable(&unk_100EE0A58, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7E18);
  }
  return result;
}

unint64_t sub_100AB502C()
{
  unint64_t result;

  result = qword_1011D7E20;
  if (!qword_1011D7E20)
  {
    result = swift_getWitnessTable(&unk_100EE0990, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7E20);
  }
  return result;
}

unint64_t sub_100AB5074()
{
  unint64_t result;

  result = qword_1011D7E28;
  if (!qword_1011D7E28)
  {
    result = swift_getWitnessTable(&unk_100EE09B8, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7E28);
  }
  return result;
}

unint64_t sub_100AB50B8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E74E0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_100AB5100()
{
  unint64_t result;

  result = qword_1011D7E38;
  if (!qword_1011D7E38)
  {
    result = swift_getWitnessTable(&unk_100EE0D98, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7E38);
  }
  return result;
}

uint64_t sub_100AB5144(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    v5 = 0xEB00000000737265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEB00000000737265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x64657463656C6573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64657463656C6573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100AB524C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_100007E8C(&qword_1011D7E40);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100007E68(a1, v7);
  v9 = sub_100AB5100();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV7VersionV10CodingKeysON, &_s4MenuV8RevisionV7VersionV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  }
  else
  {
    v10 = sub_100007E8C(&qword_1011D7D98);
    HIBYTE(v15) = 0;
    v11 = sub_1000E4570(&qword_1011D7E48, &qword_1011D7D98, (void (*)(void))sub_100AB5460, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = sub_100007E8C(&qword_1011D7DB0);
    HIBYTE(v15) = 1;
    v14 = sub_1000E4570(&qword_1011D7E58, &qword_1011D7DB0, (void (*)(void))sub_100AB5460, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_100AB5460()
{
  unint64_t result;

  result = qword_1011D7E50;
  if (!qword_1011D7E50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011D7E50);
  }
  return result;
}

unint64_t sub_100AB54A4()
{
  unint64_t result;

  result = qword_1011D7E78;
  if (!qword_1011D7E78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1011D7E78);
  }
  return result;
}

uint64_t sub_100AB54E8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AB550C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_BYTE *, uint64_t, uint64_t);
  _BYTE v8[56];

  v6 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
  sub_100AB5558(a1, (uint64_t)v8);
  return v6(v8, a2, a3);
}

uint64_t sub_100AB5558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D7E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AB55A0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AB55F8()
{
  unint64_t result;

  result = qword_1011D7EA0;
  if (!qword_1011D7EA0)
  {
    result = swift_getWitnessTable(&unk_100EE0AA8, &_s4MenuV8RevisionV7VersionVN);
    atomic_store(result, (unint64_t *)&qword_1011D7EA0);
  }
  return result;
}

uint64_t sub_100AB563C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t sub_100AB5654(uint64_t a1)
{
  sub_1002F558C(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_100AB5680(uint64_t a1)
{
  sub_1002F5684(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

unint64_t sub_100AB56AC()
{
  unint64_t result;

  result = qword_1011D7EB0;
  if (!qword_1011D7EB0)
  {
    result = swift_getWitnessTable(&unk_100EE0D60, &_s9LegacyKeyON);
    atomic_store(result, (unint64_t *)&qword_1011D7EB0);
  }
  return result;
}

unint64_t sub_100AB56F0()
{
  unint64_t result;

  result = qword_1011D7EB8;
  if (!qword_1011D7EB8)
  {
    result = swift_getWitnessTable(&unk_100EE0D20, &_s4MenuV8RevisionV16MigrationFailureON);
    atomic_store(result, (unint64_t *)&qword_1011D7EB8);
  }
  return result;
}

uint64_t sub_100AB573C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100AB5768()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AB578C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100AB57B8()
{
  uint64_t v0;

  return sub_100B22DA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t _s4MenuV8RevisionV16MigrationFailureOwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *_s4MenuV8RevisionV16MigrationFailureOwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionV16MigrationFailureOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a2[5];
  v10 = a1[5];
  a1[5] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  return a1;
}

_QWORD *_s4MenuV8RevisionV16MigrationFailureOwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *_s4MenuV8RevisionV16MigrationFailureOMa()
{
  return &_s4MenuV8RevisionV16MigrationFailureON;
}

ValueMetadata *_s9LegacyKeyOMa()
{
  return &_s9LegacyKeyON;
}

uint64_t _s4MenuV14SelectionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100AB5A10 + 4 * byte_100EE069C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100AB5A44 + 4 * byte_100EE0697[v4]))();
}

uint64_t sub_100AB5A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB5A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AB5A54);
  return result;
}

uint64_t sub_100AB5A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AB5A68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100AB5A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB5A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4MenuV8RevisionV7VersionV10CodingKeysOMa()
{
  return &_s4MenuV8RevisionV7VersionV10CodingKeysON;
}

uint64_t _s4MenuV9MoveErrorV7FailureOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xF)
    goto LABEL_17;
  if (a2 + 241 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 241) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 241;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 241;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 241;
  }
LABEL_17:
  v6 = ((*a1 >> 3) & 0xE | (*a1 >> 7)) ^ 0xF;
  if (v6 >= 0xE)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s4MenuV9MoveErrorV7FailureOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 241 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 241) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE)
    return ((uint64_t (*)(void))((char *)&loc_100AB5B7C + 4 * byte_100EE06A6[v4]))();
  *a1 = a2 - 15;
  return ((uint64_t (*)(void))((char *)sub_100AB5BB0 + 4 * byte_100EE06A1[v4]))();
}

uint64_t sub_100AB5BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB5BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100AB5BC0);
  return result;
}

uint64_t sub_100AB5BD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100AB5BE0);
  *(_BYTE *)result = 16 * (((-a2 >> 1) & 7) - 8 * a2);
  return result;
}

uint64_t sub_100AB5BE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100AB5BEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100AB5BF8(_BYTE *result, char a2)
{
  *result = *result & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *_s4MenuV9MoveErrorV7FailureOMa()
{
  return &_s4MenuV9MoveErrorV7FailureON;
}

unint64_t sub_100AB5C20()
{
  unint64_t result;

  result = qword_1011D7ED0;
  if (!qword_1011D7ED0)
  {
    result = swift_getWitnessTable(&unk_100EE0C90, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7ED0);
  }
  return result;
}

unint64_t sub_100AB5C68()
{
  unint64_t result;

  result = qword_1011D7ED8;
  if (!qword_1011D7ED8)
  {
    result = swift_getWitnessTable(&unk_100EE0CF8, &_s9LegacyKeyON);
    atomic_store(result, (unint64_t *)&qword_1011D7ED8);
  }
  return result;
}

unint64_t sub_100AB5CB0()
{
  unint64_t result;

  result = qword_1011D7EE0;
  if (!qword_1011D7EE0)
  {
    result = swift_getWitnessTable(&unk_100EE0C00, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7EE0);
  }
  return result;
}

unint64_t sub_100AB5CF8()
{
  unint64_t result;

  result = qword_1011D7EE8;
  if (!qword_1011D7EE8)
  {
    result = swift_getWitnessTable(&unk_100EE0C28, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1011D7EE8);
  }
  return result;
}

void sub_100AB5D40()
{
  qword_10124E230 = (uint64_t)&off_1010E7598;
}

uint64_t SortOptions.SortType.localizedTitle.getter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_100AB5DC0(a1);
  v1 = v6;
  v2 = v7;
  sub_100007E68(v5, v6);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v5);
  return v3;
}

void sub_100AB5DC0(char a1)
{
  __asm { BR              X10 }
}

void sub_100AB5DEC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = &type metadata for PlaylistOrderSort;
  *(_QWORD *)(v0 + 32) = &off_1010F60E8;
  *(_BYTE *)v0 = 1;
}

id SortOptions.SortType.image.getter(char a1)
{
  id v1;
  id v2;
  NSString v3;
  id v4;
  NSString v5;

  v1 = 0;
  if (((1 << a1) & 0x1FC) == 0)
  {
    if (((1 << a1) & 0xC01) != 0)
    {
      v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v3 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

      if (v4)
        goto LABEL_6;
    }
    else
    {
      v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v5 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v4)
      {
LABEL_6:
        v1 = objc_msgSend(v4, "imageWithConfiguration:", v2);

        return v1;
      }
    }

    return 0;
  }
  return v1;
}

uint64_t SortOptions.SortType.sortDescriptors(for:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_100AB5DC0(a2);
  v3 = v8;
  v4 = v9;
  sub_100007E68(v7, v8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v7);
  return v5;
}

uint64_t SortOptions.SortType.reversed.getter(char a1)
{
  return byte_100EE1372[a1];
}

uint64_t SortOptions.SortType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100AB6190 + 4 * byte_100EE0E5D[a1]))(0xD000000000000018, 0x8000000100E4A610);
}

uint64_t sub_100AB6190()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_100AB62A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = SortOptions.SortType.rawValue.getter(*a1);
  v5 = v4;
  v6 = SortOptions.SortType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_100AB6328()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = SortOptions.SortType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100AB6388(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = SortOptions.SortType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100AB63C8(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = SortOptions.SortType.rawValue.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100AB6424@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100AB6450@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = SortOptions.SortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void SortOptions.ContentType.localizedTitle.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_100AB6538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0x695620636973754DLL, 0xEC000000736F6564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v5 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

_QWORD *SortOptions.ContentType.availableSortTypes(withSelectedType:)()
{
  uint64_t v0;

  if (qword_1011D1DE8 != -1)
    swift_once(&qword_1011D1DE8, sub_100AB5D40);
  v0 = qword_10124E230;
  if (*(_QWORD *)(qword_10124E230 + 16))
  {
    swift_bridgeObjectRetain_n(qword_10124E230, 2);
    __asm { BR              X8 }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t SortOptions.ContentType.defaultSortType.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100AB6C60 + 4 * byte_100EE0E95[a1 >> 6]))(8);
}

uint64_t sub_100AB6C60@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 6;
}

uint64_t sub_100AB6C7C@<X0>(char a1@<W8>)
{
  return 0x206u >> (8 * (a1 + 64));
}

uint64_t sub_100AB6C94(unsigned __int8 a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::String v8;
  Swift::Int v10;
  _QWORD v11[9];

  v2 = 0x676E6F5374726F73;
  v3 = a1 >> 6;
  if (a1 != 192 || v3 != 3)
  {
    Hasher.init(_seed:)(v11, 0);
    v4 = SortOptions.ContentType.identifier.getter(a1);
    v6 = v5;
    String.hash(into:)(v11, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()();
    Hasher.init(_seed:)(v11, 0);
    String.hash(into:)(v11, 0x73676E6F73, 0xE500000000000000);
    if (v7 != Hasher._finalize()())
    {
      v2 = 0x75626C4174726F53;
      if (v3 != 1)
      {
        Hasher.init(_seed:)(v11, 0);
        String.hash(into:)(v11, v4, v6);
        swift_bridgeObjectRelease(v6);
        v10 = Hasher._finalize()();
        Hasher.init(_seed:)(v11, 0);
        String.hash(into:)(v11, 0x736D75626C61, 0xE600000000000000);
        if (v10 == Hasher._finalize()())
          return v2;
        goto LABEL_6;
      }
      if ((a1 & 0x3F) != 0)
      {
LABEL_6:
        v11[0] = v4;
        v11[1] = v6;
        swift_bridgeObjectRetain();
        v8._countAndFlagsBits = 0x6570795474726F53;
        v8._object = (void *)0xE800000000000000;
        String.append(_:)(v8);
        swift_bridgeObjectRelease(v6);
        return v11[0];
      }
    }
  }
  return v2;
}

uint64_t SortOptions.ContentType.identifier.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_100AB6E60 + 4 * byte_100EE0E99[a1 >> 6]))();
}

uint64_t sub_100AB6E60@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0x646956636973756DLL;
}

uint64_t sub_100AB6EA8@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100AB6ED4 + 4 * byte_100EE0E9D[a1 & 0x3F]))(0x736D75626C61, 0xE600000000000000);
}

uint64_t sub_100AB6ED4()
{
  return 0x6C41747369747261;
}

uint64_t sub_100AB6EF4@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0x7473696C79616C70;
}

uint64_t sub_100AB6F38@<X0>(int a1@<W8>)
{
  uint64_t v1;

  v1 = 0x736569766F6DLL;
  if (a1 != 193)
    v1 = 0x7473696C79616C70;
  if (a1 == 192)
    return 0x73676E6F73;
  else
    return v1;
}

unint64_t sub_100AB6F94()
{
  return 0xD000000000000016;
}

uint64_t sub_100AB6FB4()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_100AB6FD8()
{
  return 0x626C4165726E6567;
}

Swift::String __swiftcall SortOptions.ContentType.storageKey(using:)(Swift::String_optional using)
{
  unsigned __int8 v1;
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String result;
  uint64_t v10;
  void *v11;

  if (using.value._object)
  {
    object = using.value._object;
    countAndFlagsBits = using.value._countAndFlagsBits;
    v10 = sub_100AB6C94(v1);
    v11 = v4;
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = 45;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = countAndFlagsBits;
    v6._object = object;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    v7 = v10;
    v8 = v11;
  }
  else
  {
    v7 = sub_100AB6C94(v1);
  }
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

void SortOptions.ContentType.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100AB70C0@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;

  if ((a2 & 1) != 0)
    v2 = 0xD000000000000011;
  else
    v2 = 0x646956636973756DLL;
  if ((a2 & 1) != 0)
    v3 = 0x8000000100E4D9A0;
  else
    v3 = 0xEB00000000736F65;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

void sub_100AB7208()
{
  JUMPOUT(0x100AB71F0);
}

void sub_100AB7228()
{
  JUMPOUT(0x100AB71F0);
}

void sub_100AB724C()
{
  JUMPOUT(0x100AB71F0);
}

Swift::Int SortOptions.ContentType.hashValue.getter(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v2 = SortOptions.ContentType.identifier.getter(a1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_100AB72D0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = SortOptions.ContentType.identifier.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100AB7330(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = SortOptions.ContentType.identifier.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_100AB7370(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = SortOptions.ContentType.identifier.getter(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100AB73CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s9MusicCore11SortOptionsV11ContentTypeO2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t static SortOptions.ViewType.Albums.preferredItemSortDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7AD0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 32) = v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v5 = objc_allocWithZone((Class)NSSortDescriptor);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithKey:ascending:", v6, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v8 = objc_allocWithZone((Class)NSSortDescriptor);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithKey:ascending:", v9, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v10;
  specialized Array._endMutation()(v11);
  return v1;
}

uint64_t sub_100AB755C(unsigned __int8 a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t result;

  if (a1 == 194)
  {
    v3 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EA7A90;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEntryPosition);
    v5 = objc_allocWithZone((Class)NSSortDescriptor);
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "initWithKey:ascending:", v6, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v4 + 32) = v7;
    specialized Array._endMutation()(v8);
    return v4;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, 336, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100AB7684(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x7473696C79616C50, 0xEE00726564724F20);
}

void *sub_100AB76A8()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7668);
}

uint64_t sub_100AB76B4(unsigned __int8 a1)
{
  char *v1;

  return sub_100AB755C(a1, *v1);
}

uint64_t sub_100AB76BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7DB0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A80;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v3 + 56) = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8 = (void *)objc_opt_self(MPModelSortDescriptor);
  v9 = objc_msgSend(v8, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v9;
  v10 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v10 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v10 + 40) = v11;
  *(_QWORD *)(v10 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(v10 + 56) = v12;
  *(_QWORD *)(v10 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v10 + 72) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v8, "sortDescriptorWithKeyPath:ascending:", v14, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  qword_10124E238 = v1;
  return result;
}

uint64_t sub_100AB7878(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x656C746954, 0xE500000000000000);
}

void *sub_100AB788C()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7760);
}

uint64_t sub_100AB789C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EAE9C0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AC0;
  v4 = MPModelRelationshipSongAlbum;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v11 + 56) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v14, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v15;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v16 = objc_allocWithZone((Class)NSSortDescriptor);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "initWithKey:ascending:", v17, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v18;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v19 = objc_allocWithZone((Class)NSSortDescriptor);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "initWithKey:ascending:", v20, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 56) = v21;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v22 = objc_allocWithZone((Class)NSSortDescriptor);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "initWithKey:ascending:", v23, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 64) = v24;
  result = specialized Array._endMutation()(v25);
  qword_10124E240 = v1;
  return result;
}

uint64_t sub_100AB7B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7DB0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 56) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(MPModelSortDescriptor), "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  v8 = objc_allocWithZone((Class)NSSortDescriptor);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "initWithKey:ascending:", v9, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v10;
  result = specialized Array._endMutation()(v11);
  qword_10124E248 = v1;
  return result;
}

uint64_t sub_100AB7CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7AD0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AC0;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7AC0;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v11 + 56) = v13;
  *(_QWORD *)(v11 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v11 + 72) = v14;
  v15 = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v15, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v16;
  v17 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  *(_QWORD *)(v17 + 56) = v19;
  v20 = Array._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v20, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v21;
  result = specialized Array._endMutation()(v22);
  qword_10124E250 = v1;
  return result;
}

uint64_t sub_100AB7F30(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x747369747241, 0xE600000000000000);
}

void *sub_100AB7F44()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7618);
}

uint64_t sub_100AB7F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7DB0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AC0;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  *(_QWORD *)(v11 + 56) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v14, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  qword_10124E258 = v1;
  return result;
}

uint64_t sub_100AB8110(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x6D75626C41, 0xE500000000000000);
}

void *sub_100AB8124()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7738);
}

uint64_t sub_100AB8134()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t result;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EAE9C0;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongLibraryAddedDate);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 0, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 32) = v4;
  v5 = MPModelPropertySongDiscNumber;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v6 = objc_allocWithZone((Class)NSSortDescriptor);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 40) = v8;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = objc_allocWithZone((Class)NSSortDescriptor);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithKey:ascending:", v10, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 48) = v11;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v12 = objc_allocWithZone((Class)NSSortDescriptor);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithKey:ascending:", v13, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 56) = v14;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v15 = objc_allocWithZone((Class)NSSortDescriptor);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, 1, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 64) = v17;
  result = specialized Array._endMutation()(v18);
  qword_10124E260 = v1;
  return result;
}

uint64_t sub_100AB837C(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x796C746E65636552, 0xEE00646564644120);
}

void *sub_100AB83A0()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7690);
}

uint64_t sub_100AB83B0(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x796C746E65636552, 0xEF646579616C5020);
}

void *sub_100AB83D4()
{
  return sub_100A4D4B0((uint64_t)&off_1010E76C0);
}

uint64_t sub_100AB83E0(char a1)
{
  return sub_100AB9A9C(a1, &MPModelPropertyPlaylistLastDevicePlaybackDate, 516);
}

uint64_t sub_100AB8400(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 0x7473696C79616C50, 0xED00006570795420);
}

void *sub_100AB8424()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7640);
}

_QWORD *sub_100AB8430(char a1)
{
  _QWORD *result;

  if ((a1 & 0xC0) == 0x80)
    return _swiftEmptyArrayStorage;
  result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, 538, 0);
  __break(1u);
  return result;
}

void *sub_100AB84A4()
{
  return sub_100A4D4B0((uint64_t)&off_1010E76E8);
}

uint64_t sub_100AB84B0(char a1)
{
  return sub_100AB9A9C(a1, &MPModelPropertyPlaylistLastModifiedDateComponents, 560);
}

uint64_t sub_100AB84D0(unsigned __int8 a1, char a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t result;

  v3 = a1 >> 6;
  if (!(a1 >> 6))
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v5 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EA7DB0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongYear);
    v11 = objc_allocWithZone((Class)NSSortDescriptor);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "initWithKey:ascending:", v12, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v13;
    v9 = &MPModelPropertySongTitle;
    goto LABEL_8;
  }
  if (v3 == 1)
  {
    v4 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EA7DB0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumYear);
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = &MPModelPropertyAlbumTitle;
LABEL_8:
    static String._unconditionallyBridgeFromObjectiveC(_:)(*v9);
    v18 = objc_allocWithZone((Class)NSSortDescriptor);
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v18, "initWithKey:ascending:", v19, 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 40) = v20;
    specialized Array._endMutation()(v21);
    return v5;
  }
  if (v3 == 3 && a1 == 193)
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v5 = swift_allocObject(v14, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EA7DB0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieReleaseDate);
    v15 = objc_allocWithZone((Class)NSSortDescriptor);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, a2 & 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v17;
    v9 = &MPModelPropertyMovieTitle;
    goto LABEL_8;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, 598, 0);
  __break(1u);
  return result;
}

uint64_t sub_100AB87A4(uint64_t a1, uint64_t a2)
{
  return sub_1009D5754(a1, a2, 1918985561, 0xE400000000000000);
}

void *sub_100AB87B4()
{
  return sub_100A4D4B0((uint64_t)&off_1010E7710);
}

uint64_t sub_100AB87C0(unsigned __int8 a1)
{
  char *v1;

  return sub_100AB84D0(a1, *v1);
}

uint64_t sub_100AB87C8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x20657361656C6552, 0xEC00000065746144);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t JSSegue.Context.snapshotImpressions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100AB8940(unsigned __int8 a1)
{
  char *v1;

  return sub_100AB96AC(a1, *v1);
}

unint64_t NSUserDefaults.sortType(for:keyDomain:)(unsigned __int8 a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t countAndFlagsBits;
  void *object;
  void *v13;
  unint64_t v14;
  unint64_t result;
  Swift::String v16;
  _BYTE v17[24];
  uint64_t v18;

  if (a3)
  {
    v6 = sub_100AB6C94(a1);
    v8 = v7;
    v16._countAndFlagsBits = v6;
    v16._object = v7;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = 45;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = a2;
    v10._object = a3;
    String.append(_:)(v10);
    swift_bridgeObjectRelease(v16._object);
    countAndFlagsBits = v16._countAndFlagsBits;
    object = v16._object;
  }
  else
  {
    countAndFlagsBits = sub_100AB6C94(a1);
    object = v13;
  }
  v16._countAndFlagsBits = countAndFlagsBits;
  v16._object = object;
  v14 = sub_10098A8C0();
  NSUserDefaults.subscript.getter((uint64_t)&v16, (uint64_t)&type metadata for String, v14, (uint64_t)v17);
  swift_bridgeObjectRelease(object);
  if (!v18)
  {
    sub_100A1324C((uint64_t)v17);
    goto LABEL_9;
  }
  if ((swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0
    || (result = _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(v16), result == 13))
  {
LABEL_9:
    __asm { BR              X10 }
  }
  return result;
}

void NSUserDefaults.setSortType(_:for:keyDomain:)(unsigned __int8 a1, unsigned __int8 a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  __CFNotificationCenter *v32;
  __CFString *v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  if (a4)
  {
    v8 = sub_100AB6C94(a2);
    v10 = v9;
    v35 = v8;
    v36 = v9;
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = 45;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = a3;
    v12._object = a4;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v36);
    v13 = v35;
    v14 = v36;
  }
  else
  {
    v13 = sub_100AB6C94(a2);
    v14 = v15;
  }
  if ((a2 & 0xC0) == 0x40)
  {
    v16 = (a2 & 0x3F) == 0;
    if (a4)
      goto LABEL_12;
  }
  else
  {
    Hasher.init(_seed:)(&v35, 0);
    v17 = SortOptions.ContentType.identifier.getter(a2);
    v19 = v18;
    String.hash(into:)(&v35, v17, v18);
    swift_bridgeObjectRelease(v19);
    v20 = Hasher._finalize()();
    Hasher.init(_seed:)(&v35, 0);
    String.hash(into:)(&v35, 0x736D75626C61, 0xE600000000000000);
    v16 = v20 == Hasher._finalize()();
    if (a4)
    {
LABEL_12:
      v26 = SortOptions.SortType.rawValue.getter(a1);
      v27 = v29;
      v28 = 0;
      goto LABEL_14;
    }
  }
  if (!v16)
    goto LABEL_12;
  v21 = NSUserDefaults.sortType(for:keyDomain:)(a2, a3, 0);
  v22 = SortOptions.SortType.rawValue.getter(v21);
  v24 = v23;
  v26 = SortOptions.SortType.rawValue.getter(a1);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
  {
    swift_bridgeObjectRelease_n(v24, 2);
    v28 = 0;
  }
  else
  {
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v27);
    v28 = v30 ^ 1;
  }
LABEL_14:
  v37 = &type metadata for String;
  v35 = v26;
  v36 = v27;
  v34[0] = v13;
  v34[1] = v14;
  v31 = sub_10098A8C0();
  NSUserDefaults.subscript.setter((uint64_t)&v35, (uint64_t)v34, (uint64_t)&type metadata for String, v31);
  if ((v28 & 1) != 0)
  {
    v32 = CFNotificationCenterGetDarwinNotifyCenter();
    v33 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterPostNotification(v32, v33, 0, 0, 1u);

  }
}

id MPModelPlaylist.canBeSorted.getter()
{
  void *v0;
  id result;

  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyAlbumLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyMovieLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertySongLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVEpisodeLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVSeasonLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  result = objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyArtistLibraryAdded);
  if ((_DWORD)result)
    return objc_msgSend(v0, "isLibraryAdded");
  return result;
}

uint64_t MPModelPlaylist.sortStorageKeyDomain.getter()
{
  void *v0;
  id v1;
  id v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[2];
  _QWORD v14[4];

  v1 = objc_msgSend(v0, "identifiers");
  v2 = objc_msgSend(v1, "universalStore");

  if (!v2)
    goto LABEL_8;
  v4 = objc_msgSend(v2, "globalPlaylistID");
  v3 = swift_unknownObjectRelease(v2).n128_u64[0];
  if (!v4)
    goto LABEL_8;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    v3 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_8:
    v11 = objc_msgSend(v0, "identifiers", *(double *)&v3);
    v10 = MPIdentifierSet.bestLibraryIdentifier.getter();

    return v10;
  }
  v14[2] = v5;
  v14[3] = v7;
  v14[0] = 46;
  v14[1] = 0xE100000000000000;
  v13[0] = 45;
  v13[1] = 0xE100000000000000;
  v9 = sub_10098A8C0();
  v10 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v14, v13, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v9, v9, v9);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t MPModelPlaylist.preferredTracklistSortDescriptors.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if ((MPModelPlaylist.canBeSorted.getter() & 1) == 0)
    return 0;
  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = objc_msgSend(v0, "sortStorageKeyDomain");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v8 = NSUserDefaults.sortType(for:keyDomain:)(0xC2u, v4, v6);

  swift_bridgeObjectRelease();
  sub_100AB5DC0(v8);
  v9 = v13;
  v10 = v14;
  sub_100007E68(v12, v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(194, v9, v10);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v12);
  return v7;
}

uint64_t sub_100AB914C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, static Logger.sortOptions);
  sub_100048B14(v0, (uint64_t)static Logger.sortOptions);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x8000000100E4A820, 0x6974704F74726F53, 0xEB00000000736E6FLL);
}

uint64_t Logger.sortOptions.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1011D1E20 != -1)
    swift_once(&qword_1011D1E20, sub_100AB914C);
  v0 = type metadata accessor for Logger(0);
  return sub_100048B14(v0, (uint64_t)static Logger.sortOptions);
}

uint64_t static Logger.sortOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1011D1E20 != -1)
    swift_once(&qword_1011D1E20, sub_100AB914C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048B14(v2, (uint64_t)static Logger.sortOptions);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t _s9MusicCore11SortOptionsV11ContentTypeO2eeoiySbAE_AEtFZ_0(int a1, int a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  int v4;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[9];

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 6;
  if (a1 >> 6)
  {
    if (v4 == 1)
    {
      if ((a2 & 0xC0) == 0x40)
        return ((a2 ^ a1) & 0x3F) == 0;
    }
    else if (v4 == 3 && a1 == 192 && a2 == 192)
    {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return ((a2 ^ a1) & 1) == 0;
  }
  Hasher.init(_seed:)(v12, 0);
  v7 = SortOptions.ContentType.identifier.getter(v3);
  String.hash(into:)(v12, v7, v8);
  swift_bridgeObjectRelease();
  v9 = Hasher._finalize()();
  Hasher.init(_seed:)(v12, 0);
  v10 = SortOptions.ContentType.identifier.getter(v2);
  String.hash(into:)(v12, v10, v11);
  swift_bridgeObjectRelease();
  return v9 == Hasher._finalize()();
}

uint64_t sub_100AB939C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E4F9D0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v10 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v11 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_100AB9508(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = a1 >> 6;
  if (!(a1 >> 6))
    goto LABEL_8;
  if (v1 == 1)
  {
    if (qword_1011D1E00 != -1)
      swift_once(&qword_1011D1E00, sub_100AB7B74);
    v2 = qword_10124E248;
LABEL_11:
    swift_bridgeObjectRetain();
    return v2;
  }
  if (v1 != 3)
    goto LABEL_22;
  if (a1 == 192)
  {
LABEL_8:
    if (qword_1011D1DF8 != -1)
      swift_once(&qword_1011D1DF8, sub_100AB789C);
    v2 = qword_10124E240;
    goto LABEL_11;
  }
  if (a1 == 194)
  {
    if (qword_1011D1E08 != -1)
      swift_once(&qword_1011D1E08, sub_100AB7CE0);
    v2 = qword_10124E250;
    if (!((unint64_t)qword_10124E250 >> 62))
    {
      v4 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      sub_100ABA74C();
      return v2;
    }
    if (qword_10124E250 < 0)
      v5 = qword_10124E250;
    else
      v5 = qword_10124E250 & 0xFFFFFFFFFFFFFF8;
    v6 = sub_100ABA74C();
    swift_bridgeObjectRetain();
    v7 = _bridgeCocoaArray<A>(_:)(v5, v6);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
LABEL_22:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, 423, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100AB96AC(unsigned __int8 a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  id v18;
  uint64_t v19;
  uint64_t result;

  if (a1 == 194)
  {
    v3 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v4 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100EA7DB0;
    v5 = sub_100007E8C((uint64_t *)&unk_1011D6CD0);
    v6 = swift_allocObject(v5, 80, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100EA7AC0;
    v7 = MPModelRelationshipPlaylistEntrySong;
    *(_QWORD *)(v6 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
    *(_QWORD *)(v6 + 40) = v8;
    *(_QWORD *)(v6 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
    *(_QWORD *)(v6 + 56) = v9;
    *(_QWORD *)(v6 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumReleaseDateComponents);
    *(_QWORD *)(v6 + 72) = v10;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v12 = (void *)objc_opt_self(MPModelSortDescriptor);
    v13 = objc_msgSend(v12, "sortDescriptorWithKeyPath:ascending:", isa, a2 & 1);

    *(_QWORD *)(v4 + 32) = v13;
    v14 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100EA7A80;
    *(_QWORD *)(v14 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    *(_QWORD *)(v14 + 40) = v15;
    *(_QWORD *)(v14 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
    *(_QWORD *)(v14 + 56) = v16;
    v17 = Array._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v12, "sortDescriptorWithKeyPath:ascending:", v17, 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v4 + 40) = v18;
    specialized Array._endMutation()(v19);
    return v4;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, 622, 0);
    __break(1u);
  }
  return result;
}

void sub_100AB98BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100AB98EC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EA7A90;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumLibraryAddedDate);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 0, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(v1 + 32) = v4;
  specialized Array._endMutation()(v5);
  return v1;
}

uint64_t sub_100AB9A9C(char a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t result;

  if ((a1 & 0xC0) == 0x80)
  {
    v4 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v5 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100EA7A90;
    static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 0, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v5 + 32) = v8;
    specialized Array._endMutation()(v9);
    return v5;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, a3, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100AB9BB0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (a1 == 194)
  {
    if (qword_1011D1E10 != -1)
      swift_once(&qword_1011D1E10, sub_100AB7F54);
    v1 = qword_10124E258;
    if ((unint64_t)qword_10124E258 >> 62)
    {
      if (qword_10124E258 < 0)
        v4 = qword_10124E258;
      else
        v4 = qword_10124E258 & 0xFFFFFFFFFFFFFF8;
      v5 = sub_100ABA74C();
      swift_bridgeObjectRetain();
      v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
      swift_bridgeObjectRelease();
      return v6;
    }
    else
    {
      v2 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
      sub_100ABA74C();
      return v1;
    }
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4F9A0, "MusicCore/SortOptions.swift", 27, 2, 449, 0);
    __break(1u);
  }
  return result;
}

_QWORD *sub_100AB9CC4(unsigned __int8 a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = a1 >> 6;
  if (v1 < 2)
    return _swiftEmptyArrayStorage;
  if (v1 == 2)
  {
    v2 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
    v3 = swift_allocObject(v2, 40, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100EA7A90;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
    v4 = objc_allocWithZone((Class)NSSortDescriptor);
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "initWithKey:ascending:", v5, 1, swift_bridgeObjectRelease().n128_f64[0]);

    *(_QWORD *)(v3 + 32) = v6;
    specialized Array._endMutation()(v7);
    return (_QWORD *)v3;
  }
  if ((a1 & 0xFE) == 0xC0)
    return _swiftEmptyArrayStorage;
  if (qword_1011D1DF0 != -1)
    swift_once(&qword_1011D1DF0, sub_100AB76BC);
  v3 = qword_10124E238;
  if (!((unint64_t)qword_10124E238 >> 62))
  {
    v9 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    sub_100ABA74C();
    return (_QWORD *)v3;
  }
  if (qword_10124E238 < 0)
    v10 = qword_10124E238;
  else
    v10 = qword_10124E238 & 0xFFFFFFFFFFFFFF8;
  v11 = sub_100ABA74C();
  swift_bridgeObjectRetain();
  v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
  swift_bridgeObjectRelease();
  return (_QWORD *)v12;
}

unint64_t _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010E7790, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

unint64_t sub_100AB9E98()
{
  unint64_t result;

  result = qword_1011D7EF0;
  if (!qword_1011D7EF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.SortType, &type metadata for SortOptions.SortType);
    atomic_store(result, (unint64_t *)&qword_1011D7EF0);
  }
  return result;
}

unint64_t sub_100AB9EE0()
{
  unint64_t result;

  result = qword_1011D7EF8;
  if (!qword_1011D7EF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ContentType, &type metadata for SortOptions.ContentType);
    atomic_store(result, (unint64_t *)&qword_1011D7EF8);
  }
  return result;
}

unint64_t sub_100AB9F28()
{
  unint64_t result;

  result = qword_1011D7F00;
  if (!qword_1011D7F00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Albums, &type metadata for SortOptions.ViewType.Albums);
    atomic_store(result, (unint64_t *)&qword_1011D7F00);
  }
  return result;
}

unint64_t sub_100AB9F70()
{
  unint64_t result;

  result = qword_1011D7F08;
  if (!qword_1011D7F08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.MusicVideos, &type metadata for SortOptions.ViewType.MusicVideos);
    atomic_store(result, (unint64_t *)&qword_1011D7F08);
  }
  return result;
}

unint64_t sub_100AB9FB8()
{
  unint64_t result;

  result = qword_1011D7F10;
  if (!qword_1011D7F10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Playlists, &type metadata for SortOptions.ViewType.Playlists);
    atomic_store(result, (unint64_t *)&qword_1011D7F10);
  }
  return result;
}

unint64_t sub_100ABA000()
{
  unint64_t result;

  result = qword_1011D7F18;
  if (!qword_1011D7F18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Detail, &type metadata for SortOptions.ViewType.Detail);
    atomic_store(result, (unint64_t *)&qword_1011D7F18);
  }
  return result;
}

ValueMetadata *type metadata accessor for SortOptions()
{
  return &type metadata for SortOptions;
}

uint64_t storeEnumTagSinglePayload for SortOptions.SortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100ABA0A0 + 4 * byte_100EE0EB8[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100ABA0D4 + 4 * byte_100EE0EB3[v4]))();
}

uint64_t sub_100ABA0D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA0DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ABA0E4);
  return result;
}

uint64_t sub_100ABA0F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ABA0F8);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100ABA0FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.SortType()
{
  return &type metadata for SortOptions.SortType;
}

uint64_t getEnumTagSinglePayload for SortOptions.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1D)
    goto LABEL_17;
  if (a2 + 227 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 227) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 227;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 227;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 227;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 227 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 227) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1C)
    return ((uint64_t (*)(void))((char *)&loc_100ABA20C + 4 * byte_100EE0EC2[v4]))();
  *a1 = a2 - 29;
  return ((uint64_t (*)(void))((char *)sub_100ABA240 + 4 * byte_100EE0EBD[v4]))();
}

uint64_t sub_100ABA240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ABA250);
  return result;
}

uint64_t sub_100ABA268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ABA270);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_100ABA274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA27C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA288(unsigned __int8 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 6;
  v3 = (v1 & 7) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_BYTE *sub_100ABA2A4(_BYTE *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 5) & 7 | 0xC0;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ContentType()
{
  return &type metadata for SortOptions.ContentType;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType()
{
  return &type metadata for SortOptions.ViewType;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ViewType.Albums(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100ABA340 + 4 * byte_100EE0ECC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100ABA374 + 4 * byte_100EE0EC7[v4]))();
}

uint64_t sub_100ABA374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA37C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ABA384);
  return result;
}

uint64_t sub_100ABA390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ABA398);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100ABA39C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA3A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Albums()
{
  return &type metadata for SortOptions.ViewType.Albums;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.MusicVideos()
{
  return &type metadata for SortOptions.ViewType.MusicVideos;
}

uint64_t _s9MusicCore11SortOptionsV8ViewTypeV11MusicVideosOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100ABA420 + 4 * byte_100EE0ED6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100ABA454 + 4 * byte_100EE0ED1[v4]))();
}

uint64_t sub_100ABA454(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA45C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ABA464);
  return result;
}

uint64_t sub_100ABA470(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ABA478);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100ABA47C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA484(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Playlists()
{
  return &type metadata for SortOptions.ViewType.Playlists;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ViewType.Detail(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100ABA4E0 + 4 * byte_100EE0EDB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100ABA500 + 4 * byte_100EE0EE0[v4]))();
}

_BYTE *sub_100ABA4E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100ABA500(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100ABA508(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100ABA510(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100ABA518(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100ABA520(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Detail()
{
  return &type metadata for SortOptions.ViewType.Detail;
}

ValueMetadata *type metadata accessor for TitleSort()
{
  return &type metadata for TitleSort;
}

ValueMetadata *type metadata accessor for ArtistSort()
{
  return &type metadata for ArtistSort;
}

ValueMetadata *type metadata accessor for AlbumSort()
{
  return &type metadata for AlbumSort;
}

ValueMetadata *type metadata accessor for PlaylistOrderSort()
{
  return &type metadata for PlaylistOrderSort;
}

ValueMetadata *type metadata accessor for PlaylistTypeSort()
{
  return &type metadata for PlaylistTypeSort;
}

ValueMetadata *type metadata accessor for RecentlyAddedSort()
{
  return &type metadata for RecentlyAddedSort;
}

ValueMetadata *type metadata accessor for RecentlyPlayedSort()
{
  return &type metadata for RecentlyPlayedSort;
}

ValueMetadata *type metadata accessor for RecentlyUpdatedSort()
{
  return &type metadata for RecentlyUpdatedSort;
}

uint64_t _s9MusicCore17PlaylistOrderSortVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100ABA610 + 4 * byte_100EE0EEA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100ABA644 + 4 * byte_100EE0EE5[v4]))();
}

uint64_t sub_100ABA644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA64C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ABA654);
  return result;
}

uint64_t sub_100ABA660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ABA668);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100ABA66C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ABA674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YearSort()
{
  return &type metadata for YearSort;
}

uint64_t initializeBufferWithCopyOfBuffer for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t assignWithTake for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for ReleaseDateSort()
{
  return &type metadata for ReleaseDateSort;
}

unint64_t sub_100ABA74C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D6140;
  if (!qword_1011D6140)
  {
    v1 = objc_opt_self(NSSortDescriptor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011D6140);
  }
  return result;
}

id MPModelPlaylist.preferredArtworkCatalog.getter()
{
  void *v0;
  unint64_t v1;
  id result;
  id v3;

  if (!objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistType))
    goto LABEL_8;
  v1 = (unint64_t)objc_msgSend(v0, "type");
  if (v1 > 8)
    goto LABEL_8;
  if (((1 << v1) & 0x173) != 0)
  {
    result = MPModelPlaylist.coverArtworkCatalog.getter();
    if (!result)
    {
      result = objc_msgSend(v0, "artworkCatalog");
      if (!result)
      {
        if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistTracksTiledArtwork))
        {
          v3 = objc_msgSend(v0, "tracksTiledArtworkCatalogWithRows:columns:", 2, 2);
          return v3;
        }
        return 0;
      }
    }
    return result;
  }
  if (v1 == 3)
    return 0;
  if (v1 != 7
    || !objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistEditorialArtwork)
    || (result = objc_msgSend(v0, "editorialArtworkCatalog")) == 0)
  {
LABEL_8:
    v3 = objc_msgSend(v0, "artworkCatalog");
    return v3;
  }
  return result;
}

uint64_t static MPModelPlaylist.artworkPlaceholderSystemImageName(for:)(uint64_t a1, char a2)
{
  uint64_t result;
  unint64_t v4;

  result = 0x6F6E2E636973756DLL;
  if ((a2 & 1) == 0)
  {
    v4 = a1 - 1;
    if (v4 <= 2)
      return *(_QWORD *)&aGearshapgenius[8 * v4];
  }
  return result;
}

uint64_t MPModelPlaylist.artworkPlaceholderImage.getter()
{
  void *v0;
  uint64_t v1;
  char *v2;

  v1 = 0x6F6E2E636973756DLL;
  if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistType))
  {
    v2 = (char *)objc_msgSend(v0, "type");
    if ((unint64_t)(v2 - 1) <= 2)
      return *(_QWORD *)&aGearshapgenius[8 * (_QWORD)(v2 - 1)];
  }
  return v1;
}

char *ModelObjectBackedStoreItemMetadata.__allocating_init(modelObject:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ModelObjectBackedStoreItemMetadata.init(modelObject:)(a1);
}

char *ModelObjectBackedStoreItemMetadata.init(modelObject:)(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t ObjectType;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26[24];
  objc_super v27;

  v3 = OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  objc_opt_self(MPModelGenericObject);
  v5 = swift_dynamicCastObjCClass(a1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v1;
    v8 = objc_msgSend(v6, "anyObject");
    goto LABEL_5;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v9 = (void *)swift_dynamicCastObjCClass(a1);
  v10 = v1;
  if (v9)
  {
    v8 = objc_msgSend(v9, "innerObject");
LABEL_5:
    v11 = v8;
    if (v11)
      goto LABEL_7;
  }
  v11 = a1;
LABEL_7:
  ObjectType = swift_getObjectType();
  v13 = objc_msgSend(v11, "identifiers");
  v14 = sub_100A15048(ObjectType, 2, 0, v13);
  v16 = v15;

  if (v16)
  {

    v27.receiver = v1;
    v27.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
    v17 = (char *)objc_msgSendSuper2(&v27, "init");
    v18 = (void **)&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v26, 1, 0);
    v19 = *v18;
    *v18 = a1;

    v20 = (uint64_t *)&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID], &v25, 1, 0);
    v21 = v20[1];
    *v20 = v14;
    v20[1] = v16;
    swift_bridgeObjectRelease(v21);
  }
  else
  {

    v22 = *((_QWORD *)v4 + 1);
    swift_bridgeObjectRelease(v22);
    v23 = type metadata accessor for ModelObjectBackedStoreItemMetadata();
    swift_deallocPartialClassInstance(v1, v23, 32, 7);
    return 0;
  }
  return v17;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(downloadAssetDictionary:)(uint64_t a1)
{
  return sub_100ABB3AC(a1, (SEL *)&selRef_initWithDownloadAssetDictionary_);
}

id ModelObjectBackedStoreItemMetadata.init(downloadAssetDictionary:)(uint64_t a1)
{
  return sub_100ABB438(a1, (SEL *)&selRef_initWithDownloadAssetDictionary_);
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:)(uint64_t a1)
{
  return sub_100ABB3AC(a1, (SEL *)&selRef_initWithStorePlatformDictionary_);
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:)(uint64_t a1)
{
  return sub_100ABB438(a1, (SEL *)&selRef_initWithStorePlatformDictionary_);
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:parentStoreItemMetadata:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, "initWithStorePlatformDictionary:parentStoreItemMetadata:", isa, a2);

  return v7;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:parentStoreItemMetadata:)(uint64_t a1, void *a2)
{
  char *v2;
  char *v4;
  Class isa;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v6 = objc_msgSendSuper2(&v8, "initWithStorePlatformDictionary:parentStoreItemMetadata:", isa, a2);

  return v6;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:expirationDate:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  NSDictionary v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;

  v3 = v2;
  v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  }
  v10 = objc_msgSend(objc_allocWithZone(v3), "initWithStorePlatformDictionary:expirationDate:", v6.super.isa, isa);

  return v10;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:expirationDate:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  NSDictionary v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  objc_class *v13;
  id v14;
  objc_super v16;

  v3 = v2;
  v5 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v8 = &v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_100A3B4BC(a2, (uint64_t)v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  v13 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v16.receiver = v3;
  v16.super_class = v13;
  v14 = objc_msgSendSuper2(&v16, "initWithStorePlatformDictionary:expirationDate:", v9.super.isa, isa);

  sub_10004FF60(a2, &qword_1011D5D00);
  return v14;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:parentStoreItemMetadata:expirationDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  NSDictionary v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v4 = v3;
  v8.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a3, 1, v9) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
  }
  v12 = objc_msgSend(objc_allocWithZone(v4), "initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:", v8.super.isa, a2, isa);

  return v12;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:parentStoreItemMetadata:expirationDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;

  v4 = sub_100AC32EC(a1, (uint64_t)a2, a3);

  return v4;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storeMusicAPIDictionary:)(uint64_t a1)
{
  return sub_100ABB3AC(a1, (SEL *)&selRef_initWithStoreMusicAPIDictionary_);
}

id sub_100ABB3AC(uint64_t a1, SEL *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, *a2, isa);

  return v7;
}

id ModelObjectBackedStoreItemMetadata.init(storeMusicAPIDictionary:)(uint64_t a1)
{
  return sub_100ABB438(a1, (SEL *)&selRef_initWithStoreMusicAPIDictionary_);
}

id sub_100ABB438(uint64_t a1, SEL *a2)
{
  char *v2;
  char *v4;
  Class isa;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v6 = objc_msgSendSuper2(&v8, *a2, isa);

  return v6;
}

id sub_100ABB4E0(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  char *v6;
  Class isa;
  id v8;
  objc_super v10;

  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  *(_QWORD *)&a1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v6 = &a1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v8 = objc_msgSendSuper2(&v10, *a4, isa);

  return v8;
}

void ModelObjectBackedStoreItemMetadata.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v1 = &v0[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCore/ModelObjectBackedStoreItemMetadata.swift", 50, 2, 49, 0);
  __break(1u);
}

void *ModelObjectBackedStoreItemMetadata.modelObject.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ModelObjectBackedStoreItemMetadata.modelObject.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*ModelObjectBackedStoreItemMetadata.modelObject.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ModelObjectBackedStoreItemMetadata.modelObjectStoreID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ModelObjectBackedStoreItemMetadata.modelObjectStoreID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*ModelObjectBackedStoreItemMetadata.modelObjectStoreID.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID, a1, 33, 0);
  return j_j__swift_endAccess;
}

char *ModelObjectBackedStoreItemMetadata.appending(_:)(uint64_t a1)
{
  char *v1;
  char *v3;
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  char v15[24];
  char v16[24];
  char v17[24];
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v3 = (char *)objc_msgSendSuper2(&v18, "metadataByAppendingMetadata:", a1);
  v4 = (void **)&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v17, 0, 0);
  v5 = *v4;
  v6 = (void **)&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v16, 1, 0);
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

  v9 = &v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  swift_beginAccess(v9, v15, 0, 0);
  v11 = *(_QWORD *)v9;
  v10 = *((_QWORD *)v9 + 1);
  v12 = &v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID], &v14, 1, 0);
  *(_QWORD *)v12 = v11;
  *((_QWORD *)v12 + 1) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

void ModelObjectBackedStoreItemMetadata.artistName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6230, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6258, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3474;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_10010942C;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6270;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 64, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100ABBB20(uint64_t a1, _QWORD *a2)
{
  void **v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _BYTE v26[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v26, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    v6 = swift_dynamicCastObjCClass(v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v5;
      v9 = objc_msgSend(v7, "artist");
      v10 = v9;
      if (v9)
        goto LABEL_7;
      goto LABEL_9;
    }
    objc_opt_self(MPModelSong);
    v11 = swift_dynamicCastObjCClass(v5);
    if (v11)
    {
      v12 = (void *)v11;
      v8 = v5;
      v9 = objc_msgSend(v12, "artist");
      v10 = v9;
      if (v9)
      {
LABEL_7:
        v13 = objc_msgSend(v9, "name");

        if (v13)
        {
          v10 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
          v15 = v14;

LABEL_12:
          v16 = a2[1];
          *a2 = v10;
          a2[1] = v15;
          return swift_bridgeObjectRelease(v16);
        }

        v10 = 0;
LABEL_11:
        v15 = 0;
        goto LABEL_12;
      }
LABEL_9:

      goto LABEL_11;
    }
    objc_opt_self(MPModelTVEpisode);
    result = swift_dynamicCastObjCClass(v5);
    if (result)
    {
      v17 = (void *)result;
      v18 = v5;
      v19 = objc_msgSend(v17, "show");
      if (v19)
        goto LABEL_17;
      v25 = objc_msgSend(v17, "season");
      v22 = v25;
      if (!v25)
      {

        goto LABEL_25;
      }
      v19 = objc_msgSend(v25, "show");

      if (v19)
      {
LABEL_17:
        v20 = objc_msgSend(v19, "title");
        if (v20)
        {
          v21 = v20;
          v22 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
          v24 = v23;

LABEL_26:
          v16 = a2[1];
          *a2 = v22;
          a2[1] = v24;
          return swift_bridgeObjectRelease(v16);
        }

      }
      v22 = 0;
LABEL_25:
      v24 = 0;
      goto LABEL_26;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.artistStoreID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t ObjectType;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[6];
  void *v24;

  v24 = 0;
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_1010F62A8, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v24;
  v5 = swift_allocObject(&unk_1010F62D0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_100AC34A4;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F62E8;
  v6 = _Block_copy(aBlock);
  v7 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 84, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v9 = v24;
    if (!v24)
      goto LABEL_11;
    objc_opt_self(MPModelGenericObject);
    v10 = swift_dynamicCastObjCClass(v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = v9;
      v13 = objc_msgSend(v11, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v14 = (void *)swift_dynamicCastObjCClass(v9);
      v15 = v9;
      if (!v14)
      {
LABEL_8:
        v16 = v9;
LABEL_9:
        ObjectType = swift_getObjectType();
        v18 = objc_msgSend(v16, "identifiers");
        v19 = sub_100A15048(ObjectType, 2, 0, v18);
        v21 = v20;

        if (v21)
        {
          *(_QWORD *)(a1 + 24) = &type metadata for String;
          *(_QWORD *)a1 = v19;
          *(_QWORD *)(a1 + 8) = v21;
LABEL_12:
          v22 = v24;
          swift_release();

          return;
        }
LABEL_11:
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        goto LABEL_12;
      }
      v13 = objc_msgSend(v14, "innerObject");
    }
    v16 = v13;
    if (v16)
      goto LABEL_9;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_100ABBFF0(uint64_t a1, void **a2)
{
  void **v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v14, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5 || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      v6 = objc_msgSend(v5, "artist");
LABEL_5:
      v7 = *a2;
      *a2 = v6;

      return;
    }
    objc_opt_self(MPModelTVEpisode);
    v8 = swift_dynamicCastObjCClass(v4);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v4;
      v11 = objc_msgSend(v9, "show");
      if (v11)
      {
        v6 = v11;

      }
      else
      {
        v12 = objc_msgSend(v9, "season");
        if (v12)
        {
          v13 = v12;
          v6 = objc_msgSend(v12, "show");

        }
        else
        {

          v6 = 0;
        }
      }
      goto LABEL_5;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.audioTraits.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  _QWORD *v8;

  v8 = _swiftEmptyArrayStorage;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6320, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6348, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC34BC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6360;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 104, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100ABC2F0(uint64_t a1, char **a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v65, 0, 0);
  v4 = *v3;
  if (!v4)
    return;
  objc_opt_self(MPModelAlbum);
  v5 = swift_dynamicCastObjCClass(v4);
  if (v5)
    goto LABEL_3;
  objc_opt_self(MPModelPlaylist);
  v28 = swift_dynamicCastObjCClass(v4);
  if (!v28)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (!v5)
      return;
LABEL_3:
    v6 = (void *)v5;
    v7 = v4;
    if ((objc_msgSend(v6, "traits") & 0x10) != 0)
    {
      v8 = *a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_1009B96FC(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        *a2 = v8;
      }
      v10 = *((_QWORD *)v8 + 2);
      v11 = *((_QWORD *)v8 + 3);
      v12 = v10 + 1;
      if (v10 >= v11 >> 1)
      {
        v62 = v10 + 1;
        v50 = v8;
        v51 = *((_QWORD *)v8 + 2);
        v52 = sub_1009B96FC((char *)(v11 > 1), v10 + 1, 1, v50);
        v10 = v51;
        v12 = v62;
        v8 = v52;
        *a2 = v52;
      }
      *((_QWORD *)v8 + 2) = v12;
      v13 = &v8[16 * v10];
      *((_QWORD *)v13 + 4) = 0x736F6D7461;
      *((_QWORD *)v13 + 5) = 0xE500000000000000;
    }
    if ((objc_msgSend(v6, "traits", v62) & 4) != 0)
    {
      v14 = *a2;
      v15 = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_1009B96FC(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
        *a2 = v14;
      }
      v16 = *((_QWORD *)v14 + 2);
      v17 = *((_QWORD *)v14 + 3);
      v18 = v16 + 1;
      if (v16 >= v17 >> 1)
      {
        v63 = v16 + 1;
        v53 = v14;
        v54 = *((_QWORD *)v14 + 2);
        v55 = sub_1009B96FC((char *)(v17 > 1), v16 + 1, 1, v53);
        v16 = v54;
        v18 = v63;
        v14 = v55;
        *a2 = v55;
      }
      *((_QWORD *)v14 + 2) = v18;
      v19 = &v14[16 * v16];
      *((_QWORD *)v19 + 4) = 0x6C2D7365722D6968;
      *((_QWORD *)v19 + 5) = 0xEF7373656C73736FLL;
    }
    if ((objc_msgSend(v6, "traits", v63) & 2) == 0)
      goto LABEL_29;
    v20 = *a2;
    v21 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v20;
    if ((v21 & 1) == 0)
    {
      v20 = sub_1009B96FC(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
      *a2 = v20;
    }
    v22 = *((_QWORD *)v20 + 2);
    v23 = *((_QWORD *)v20 + 3);
    v24 = v22 + 1;
    if (v22 >= v23 >> 1)
    {
      v62 = v22 + 1;
      v56 = v20;
      v57 = *((_QWORD *)v20 + 2);
      v58 = sub_1009B96FC((char *)(v23 > 1), v22 + 1, 1, v56);
      v22 = v57;
      v24 = v62;
      v20 = v58;
      *a2 = v58;
    }
    *((_QWORD *)v20 + 2) = v24;
    v25 = &v20[16 * v22];
    v26 = 0x7373656C73736F6CLL;
    v27 = 0xE800000000000000;
    goto LABEL_28;
  }
  v6 = (void *)v28;
  v29 = v4;
  if ((objc_msgSend(v6, "traits") & 0x10) != 0)
  {
    v30 = *a2;
    v31 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v30;
    if ((v31 & 1) == 0)
    {
      v30 = sub_1009B96FC(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
      *a2 = v30;
    }
    v32 = *((_QWORD *)v30 + 2);
    v33 = *((_QWORD *)v30 + 3);
    v34 = v32 + 1;
    if (v32 >= v33 >> 1)
    {
      v62 = v32 + 1;
      v59 = v30;
      v60 = *((_QWORD *)v30 + 2);
      v61 = sub_1009B96FC((char *)(v33 > 1), v32 + 1, 1, v59);
      v32 = v60;
      v34 = v62;
      v30 = v61;
      *a2 = v61;
    }
    *((_QWORD *)v30 + 2) = v34;
    v25 = &v30[16 * v32];
    v26 = 0x736F6D7461;
    v27 = 0xE500000000000000;
LABEL_28:
    *((_QWORD *)v25 + 4) = v26;
    *((_QWORD *)v25 + 5) = v27;
  }
LABEL_29:
  if ((objc_msgSend(v6, "traits", v62) & 8) != 0)
  {
    v35 = *a2;
    v36 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v35;
    if ((v36 & 1) == 0)
    {
      v35 = sub_1009B96FC(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
      *a2 = v35;
    }
    v37 = *((_QWORD *)v35 + 2);
    v38 = *((_QWORD *)v35 + 3);
    v39 = v37 + 1;
    if (v37 >= v38 >> 1)
    {
      v64 = v37 + 1;
      v47 = v35;
      v48 = *((_QWORD *)v35 + 2);
      v49 = sub_1009B96FC((char *)(v38 > 1), v37 + 1, 1, v47);
      v37 = v48;
      v39 = v64;
      v35 = v49;
      *a2 = v49;
    }
    *((_QWORD *)v35 + 2) = v39;
    v40 = &v35[16 * v37];
    *((_QWORD *)v40 + 4) = 0x6C616974617073;
    *((_QWORD *)v40 + 5) = 0xE700000000000000;
  }
  if ((objc_msgSend(v6, "traits", v64) & 0x20) != 0)
  {
    v41 = *a2;
    v42 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v41;
    if ((v42 & 1) == 0)
    {
      v41 = sub_1009B96FC(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      *a2 = v41;
    }
    v44 = *((_QWORD *)v41 + 2);
    v43 = *((_QWORD *)v41 + 3);
    v45 = v44 + 1;
    if (v44 >= v43 >> 1)
    {
      v41 = sub_1009B96FC((char *)(v43 > 1), v45, 1, v41);
      *a2 = v41;
      v45 = v44 + 1;
    }
    *((_QWORD *)v41 + 2) = v45;
    v46 = &v41[16 * v44];
    *((_QWORD *)v46 + 4) = 0x646E756F72727573;
    *((_QWORD *)v46 + 5) = 0xE800000000000000;
  }

}

void ModelObjectBackedStoreItemMetadata.isBeats1.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6398, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F63C0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC34D4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F63D8;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 166, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.collectionName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6410, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6438, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC350C;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6450;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 181, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.collectionStoreID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t ObjectType;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[6];
  void *v24;

  v24 = 0;
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_1010F6488, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v24;
  v5 = swift_allocObject(&unk_1010F64B0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_100AC3544;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F64C8;
  v6 = _Block_copy(aBlock);
  v7 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 196, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v9 = v24;
    if (!v24)
      goto LABEL_11;
    objc_opt_self(MPModelGenericObject);
    v10 = swift_dynamicCastObjCClass(v9);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = v9;
      v13 = objc_msgSend(v11, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v14 = (void *)swift_dynamicCastObjCClass(v9);
      v15 = v9;
      if (!v14)
      {
LABEL_8:
        v16 = v9;
LABEL_9:
        ObjectType = swift_getObjectType();
        v18 = objc_msgSend(v16, "identifiers");
        v19 = sub_100A15048(ObjectType, 2, 0, v18);
        v21 = v20;

        if (v21)
        {
          *(_QWORD *)(a1 + 24) = &type metadata for String;
          *(_QWORD *)a1 = v19;
          *(_QWORD *)(a1 + 8) = v21;
LABEL_12:
          v22 = v24;
          swift_release();

          return;
        }
LABEL_11:
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        goto LABEL_12;
      }
      v13 = objc_msgSend(v14, "innerObject");
    }
    v16 = v13;
    if (v16)
      goto LABEL_9;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_100ABCCE4(uint64_t a1, void **a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  char **v6;
  id v7;
  void *v8;
  _BYTE v9[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v9, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = &selRef_album;
    }
    else
    {
      objc_opt_self(MPModelTVEpisode);
      v5 = (void *)swift_dynamicCastObjCClass(v4);
      if (!v5)
        return;
      v6 = &selRef_season;
    }
    v7 = objc_msgSend(v5, *v6);
    v8 = *a2;
    *a2 = v7;

  }
}

void ModelObjectBackedStoreItemMetadata.isCompilation.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6500, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6528, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC355C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6540;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 214, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.composerName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6578, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F65A0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3594;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F65B8;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 229, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100ABD060(uint64_t a1, uint64_t *a2, SEL *a3, SEL *a4)
{
  void **v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18[24];

  v7 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v18, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(MPModelSong);
    result = swift_dynamicCastObjCClass(v9);
    if (result)
    {
      v10 = (void *)result;
      v11 = v9;
      v12 = objc_msgSend(v10, *a3);
      v13 = v12;
      if (v12)
      {
        v14 = objc_msgSend(v12, *a4);

        if (v14)
        {
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v13 = v16;

        }
        else
        {

          v15 = 0;
          v13 = 0;
        }
      }
      else
      {

        v15 = 0;
      }
      v17 = a2[1];
      *a2 = v15;
      a2[1] = (uint64_t)v13;
      return swift_bridgeObjectRelease(v17);
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.copyrightText.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F65F0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6618, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC35CC;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6630;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 244, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.curatorName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6668, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6690, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3610;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F66A8;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 261, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100ABD420(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v19, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelPlaylist);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "curator");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "name");
        if (v10)
        {
          v11 = v10;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

        }
        else
        {
          v15 = objc_msgSend(v9, "shortName");
          if (v15)
          {
            v16 = v15;
            v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
            v14 = v17;

          }
          else
          {

            v12 = 0;
            v14 = 0;
          }
        }
        v18 = a2[1];
        *a2 = v12;
        a2[1] = v14;
        swift_bridgeObjectRelease(v18);
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.descriptionText.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F66E0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6708, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3628;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6720;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 278, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100ABD6C4(uint64_t a1, uint64_t *a2)
{
  void **v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v20, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelMovie);
    v6 = swift_dynamicCastObjCClass(v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v5;
      v9 = objc_msgSend(v7, "descriptionText");
      if (!v9)
        goto LABEL_13;
    }
    else
    {
      objc_opt_self(MPModelPlaylist);
      v10 = swift_dynamicCastObjCClass(v5);
      if (v10)
      {
        v11 = (void *)v10;
        v8 = v5;
        v9 = objc_msgSend(v11, "descriptionText");
        if (!v9)
          goto LABEL_13;
      }
      else
      {
        objc_opt_self(MPModelTVEpisode);
        v12 = swift_dynamicCastObjCClass(v5);
        if (v12)
        {
          v13 = (void *)v12;
          v8 = v5;
          v9 = objc_msgSend(v13, "descriptionText");
          if (!v9)
          {
LABEL_13:

            v15 = 0;
            v17 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          objc_opt_self(MPModelTVSeason);
          result = swift_dynamicCastObjCClass(v5);
          if (!result)
            return result;
          v18 = (void *)result;
          v8 = v5;
          v9 = objc_msgSend(v18, "descriptionText");
          if (!v9)
            goto LABEL_13;
        }
      }
    }
    v14 = v9;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v17 = v16;

LABEL_14:
    v19 = a2[1];
    *a2 = v15;
    a2[1] = v17;
    return swift_bridgeObjectRelease(v19);
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.discCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6758, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6780, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3640;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6798;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 299, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.discNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F67D0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F67F8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3678;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6810;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 314, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.duration.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6848, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6870, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC36B0;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6888;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 329, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100ABDCD8(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelMovie);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result
      || (objc_opt_self(MPModelSong), (result = (id)swift_dynamicCastObjCClass(v5)) != 0)
      || (objc_opt_self(MPModelTVEpisode), (result = (id)swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = objc_msgSend(result, "duration");
      *a2 = v6;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.editorNotes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F68C0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F68E8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC36C8;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6900;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 348, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100ABDEDC(uint64_t a1, uint64_t *a2, SEL *a3)
{
  void **v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22[24];

  v5 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v22, 0, 0);
  v7 = *v5;
  if (v7)
  {
    objc_opt_self(MPModelAlbum);
    v8 = swift_dynamicCastObjCClass(v7);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v7;
      v11 = objc_msgSend(v9, *a3);
      if (!v11)
        goto LABEL_13;
    }
    else
    {
      objc_opt_self(MPModelCurator);
      v12 = swift_dynamicCastObjCClass(v7);
      if (v12)
      {
        v13 = (void *)v12;
        v10 = v7;
        v11 = objc_msgSend(v13, *a3);
        if (!v11)
          goto LABEL_13;
      }
      else
      {
        objc_opt_self(MPModelPlaylist);
        v14 = swift_dynamicCastObjCClass(v7);
        if (v14)
        {
          v15 = (void *)v14;
          v10 = v7;
          v11 = objc_msgSend(v15, *a3);
          if (!v11)
          {
LABEL_13:

            v17 = 0;
            v19 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          objc_opt_self(MPModelRadioStation);
          result = swift_dynamicCastObjCClass(v7);
          if (!result)
            return result;
          v20 = (void *)result;
          v10 = v7;
          v11 = objc_msgSend(v20, *a3);
          if (!v11)
            goto LABEL_13;
        }
      }
    }
    v16 = v11;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v19 = v18;

LABEL_14:
    v21 = a2[1];
    *a2 = v17;
    a2[1] = v19;
    return swift_bridgeObjectRelease(v21);
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.shortEditorNotes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6938, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6960, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC36F8;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6978;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 369, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.episodeCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F69B0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F69D8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3728;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F69F0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 392, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.explicitRating.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6A28, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6A50, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3760;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6A68;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 407, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100ABE4B4(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelMovie);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result || (objc_opt_self(MPModelTVEpisode), (result = (id)swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = objc_msgSend(result, "explicitRating");
      *a2 = result;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.genreNames.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  double v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD aBlock[6];
  id v17;

  v17 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6AA0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v17;
  v3 = swift_allocObject(&unk_1010F6AC8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3778;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6AE0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 424, 49, 1);
  *(_QWORD *)&v7 = swift_release().n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v17)
    {
      v8 = objc_msgSend(v17, "name", v7);
      v9 = v8;
      if (v8)
      {
        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v12 = v11;

        v13 = sub_100007E8C(&qword_1011D5AA8);
        v14 = swift_allocObject(v13, 64, 7);
        *(_OWORD *)(v14 + 16) = xmmword_100EA7AA0;
        *(_QWORD *)(v14 + 56) = &type metadata for String;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v12;
      }
    }
    v15 = v17;
    swift_release();

  }
}

void sub_100ABE764(uint64_t a1, void **a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  _BYTE v8[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v8, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5
      || (objc_opt_self(MPModelArtist), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0)
      || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      v6 = objc_msgSend(v5, "genre");
      v7 = *a2;
      *a2 = v6;

    }
  }
}

void ModelObjectBackedStoreItemMetadata.handle.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6B18, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F6B40, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3790;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F6B58;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 447, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.hasArtistBiography.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6B90, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6BB8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC37C8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6BD0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 462, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.hasLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6C08, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6C30, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3800;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6C48;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 477, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100ABEC60(uint64_t a1, unsigned __int8 *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "lyrics");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "hasStoreLyrics");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.hasTimeSyncedLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6C80, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6CA8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3818;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6CC0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 494, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100ABEEA0(uint64_t a1, unsigned __int8 *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "lyrics");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "hasTimeSyncedLyrics");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.hasSocialPosts.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6CF8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6D20, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3830;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6D38;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 508, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100ABF0D4(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelArtist);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result || (objc_opt_self(MPModelCurator), (result = (id)swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = objc_msgSend(result, "hasSocialPosts");
      *a2 = (_BYTE)result;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.isExplicitContent.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6D70, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6D98, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3848;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6DB0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 525, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100ABF2DC(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  char **v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (!result)
    {
      objc_opt_self(MPModelRadioStation);
      result = (id)swift_dynamicCastObjCClass(v5);
      if (!result)
      {
        objc_opt_self(MPModelSong);
        result = (id)swift_dynamicCastObjCClass(v5);
        if (result)
        {
          v6 = &selRef_isExplicitSong;
          goto LABEL_5;
        }
        objc_opt_self(MPModelTVSeason);
        result = (id)swift_dynamicCastObjCClass(v5);
        if (!result)
          return result;
      }
    }
    v6 = &selRef_hasExplicitContent;
LABEL_5:
    result = objc_msgSend(result, *v6);
    *a2 = (_BYTE)result;
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.isMasteredForiTunes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6DE8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6E10, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3860;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6E28;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 546, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100ABF530(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    result = swift_dynamicCastObjCClass(v5);
    if (result || (objc_opt_self(MPModelSong), (result = swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = (uint64_t)objc_msgSend((id)result, "traits");
      *a2 = result & 1;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.isPreorder.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6E60, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6E88, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3878;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6EA0;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 563, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.isPrivatePerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6ED8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6F00, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC38B0;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6F18;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 578, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.isVerifiedPerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6F50, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6F78, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC38E8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F6F90;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 593, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.isOnboardedPerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F6FC8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F6FF0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3920;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7008;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 608, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100ABFB98(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelSocialPerson);
    result = swift_dynamicCastObjCClass(v5);
    if (result)
    {
      result = (uint64_t)objc_msgSend((id)result, "hasLightweightProfile");
      *a2 = result ^ 1;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.itemKind.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7040, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F7068, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3938;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F7080;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 623, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100ABFD68(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  char v29[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v29, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindAlbum;
LABEL_6:
      *a2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v5);
      a2[1] = v6;
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    }
    objc_opt_self(MPModelArtist);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindArtist;
      goto LABEL_6;
    }
    objc_opt_self(MPModelCurator);
    v7 = swift_dynamicCastObjCClass(v4);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = v4;
      v10 = objc_msgSend(v8, "curatorKind");
      switch((unint64_t)v10)
      {
        case 0uLL:

          return;
        case 1uLL:
          v11 = &MPStoreItemMetadataItemKindiTunesBrand;
          goto LABEL_20;
        case 2uLL:
          v11 = &MPStoreItemMetadataItemKindBrand;
          goto LABEL_20;
        case 3uLL:
          v11 = &MPStoreItemMetadataItemKindActivity;
          goto LABEL_20;
        case 4uLL:
          v11 = &MPStoreItemMetadataItemKindEditorial;
LABEL_20:
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v11);
          v14 = v13;

          goto LABEL_21;
        default:
          v27 = 0;
          v28 = 0xE000000000000000;
          v21 = v10;
          _StringGuts.grow(_:)(24);
          v22._countAndFlagsBits = 0xD000000000000013;
          v22._object = (void *)0x8000000100E3CCE0;
          String.append(_:)(v22);
          v23._object = (void *)0x8000000100E4FD50;
          v23._countAndFlagsBits = 0xD000000000000012;
          String.append(_:)(v23);
          v24._countAndFlagsBits = 32;
          v24._object = (void *)0xE100000000000000;
          String.append(_:)(v24);
          v26 = v21;
          type metadata accessor for MPModelCuratorKind(0);
          _print_unlocked<A, B>(_:_:)(&v26, &v27, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v27, v28, "MusicCore/ModelObjectBackedStoreItemMetadata.swift", 50, 2, 644, 0);
          __break(1u);
          return;
      }
    }
    objc_opt_self(MPModelMovie);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindMovie;
      goto LABEL_6;
    }
    objc_opt_self(MPModelPlaylist);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindPlaylist;
      goto LABEL_6;
    }
    objc_opt_self(MPModelSocialPerson);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindSocialProfile;
      goto LABEL_6;
    }
    objc_opt_self(MPModelRadioStation);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindRadioStation;
      goto LABEL_6;
    }
    objc_opt_self(MPModelSong);
    v15 = swift_dynamicCastObjCClass(v4);
    if (v15)
    {
      v16 = (void *)v15;
      v9 = v4;
      v17 = objc_msgSend(v16, "isArtistUploadedContent");
      v18 = objc_msgSend(v16, "hasVideo");
      if (v17)
      {
        if (v18)
          v19 = &MPStoreItemMetadataItemKindUploadedVideo;
        else
          v19 = &MPStoreItemMetadataItemKindUploadedAudio;
      }
      else if (v18)
      {
        v19 = &MPStoreItemMetadataItemKindMusicVideo;
      }
      else
      {
        v19 = &MPStoreItemMetadataItemKindSong;
      }
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v19);
      v14 = v20;
LABEL_21:

      *a2 = v12;
      a2[1] = v14;
      goto LABEL_7;
    }
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVEpisode;
      goto LABEL_6;
    }
    objc_opt_self(MPModelTVSeason);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVSeason;
      goto LABEL_6;
    }
    objc_opt_self(MPModelTVShow);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVShow;
      goto LABEL_6;
    }
    objc_opt_self(MPModelRecordLabel);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindRecordLabel;
      goto LABEL_6;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.lastModifiedDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_1010F70B8, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_1010F70E0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100AC3950;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F70F8;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 688, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100065228((uint64_t)v5, a1, &qword_1011D5D00);
    swift_release();
  }
}

void sub_100AC035C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void **v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  __n128 v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];

  v32 = a2;
  v31 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D7F58);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DateComponents(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - v18;
  v20 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v20, v33, 0, 0);
  v21 = *v20;
  if (v21)
  {
    objc_opt_self(MPModelPlaylist);
    v22 = swift_dynamicCastObjCClass(v21);
    if (v22)
    {
      v23 = (void *)v22;
      v24 = v21;
      v25 = objc_msgSend(v23, "lastModifiedDateComponents");
      if (v25)
      {
        v27 = v25;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

        v28 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v28(v12, v16, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
        {
          v28(v19, v12, v13);
          v29 = objc_msgSend((id)objc_opt_self(MPStoreItemMetadata), "storeServerCalendar");
          static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

          Calendar.date(from:)(v19);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v31);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
          sub_1000A5508((uint64_t)v8, v32, &qword_1011D5D00);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
      }

      sub_10004FF60((uint64_t)v12, &qword_1011D7F58);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.movementCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7130, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F7158, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3968;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7170;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 699, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.movementName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F71A8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F71D0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC39A0;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F71E8;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 714, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.movementNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7220, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F7248, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC39D8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7260;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 729, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void ModelObjectBackedStoreItemMetadata.name.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7298, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F72C0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3A10;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F72D8;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 744, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100AC0BA8(uint64_t a1, _QWORD *a2)
{
  void **v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _BYTE v37[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v37, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    v6 = swift_dynamicCastObjCClass(v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v5;
      v9 = objc_msgSend(v7, "title");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelArtist);
    v10 = swift_dynamicCastObjCClass(v5);
    if (v10)
    {
      v11 = (void *)v10;
      v8 = v5;
      v9 = objc_msgSend(v11, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelCurator);
    v12 = swift_dynamicCastObjCClass(v5);
    if (v12)
    {
      v13 = (void *)v12;
      v8 = v5;
      v9 = objc_msgSend(v13, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelMovie);
    v14 = swift_dynamicCastObjCClass(v5);
    if (v14)
    {
      v15 = (void *)v14;
      v8 = v5;
      v9 = objc_msgSend(v15, "title");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelPlaylist);
    v16 = swift_dynamicCastObjCClass(v5);
    if (v16)
    {
      v17 = (void *)v16;
      v8 = v5;
      v9 = objc_msgSend(v17, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelSocialPerson);
    v18 = swift_dynamicCastObjCClass(v5);
    if (v18)
    {
      v19 = (void *)v18;
      v8 = v5;
      v9 = objc_msgSend(v19, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelRadioStation);
    v20 = swift_dynamicCastObjCClass(v5);
    if (v20)
    {
      v21 = (void *)v20;
      v8 = v5;
      v9 = objc_msgSend(v21, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelSong);
    v22 = swift_dynamicCastObjCClass(v5);
    if (v22)
    {
      v23 = (void *)v22;
      v8 = v5;
      v9 = objc_msgSend(v23, "title");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelTVEpisode);
    v24 = swift_dynamicCastObjCClass(v5);
    if (v24)
    {
      v25 = (void *)v24;
      v8 = v5;
      v9 = objc_msgSend(v25, "title");
      if (v9)
      {
LABEL_28:
        v26 = v9;
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v29 = v28;

LABEL_40:
        v36 = a2[1];
        *a2 = v27;
        a2[1] = v29;
        return swift_bridgeObjectRelease(v36);
      }
    }
    else
    {
      objc_opt_self(MPModelTVSeason);
      v30 = swift_dynamicCastObjCClass(v5);
      if (!v30)
      {
        objc_opt_self(MPModelTVShow);
        result = swift_dynamicCastObjCClass(v5);
        if (!result)
          return result;
        v35 = (void *)result;
        v8 = v5;
        v9 = objc_msgSend(v35, "title");
        if (!v9)
          goto LABEL_38;
        goto LABEL_28;
      }
      v31 = (void *)v30;
      v8 = v5;
      v32 = objc_msgSend(v31, "show");
      v27 = v32;
      if (!v32)
      {

LABEL_39:
        v29 = 0;
        goto LABEL_40;
      }
      v33 = objc_msgSend(v32, "title");

      if (v33)
      {
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v29 = v34;

        goto LABEL_40;
      }

    }
LABEL_38:

    v27 = 0;
    goto LABEL_39;
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.nameRaw.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7310, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F7338, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3A28;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F7350;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 779, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100AC111C(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(_QWORD), uint64_t (*a6)(void))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v10 = sub_100007E8C(a3);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  a4();

  v14 = a5(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
  {
    v16 = (void *)a6();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  return v16;
}

void ModelObjectBackedStoreItemMetadata.releaseDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_1010F7388, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_1010F73B0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100AC3A60;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F73C8;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 794, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100065228((uint64_t)v5, a1, &qword_1011D5D00);
    swift_release();
  }
}

void sub_100AC13A0(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void **v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  __n128 v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75[24];

  v74 = a2;
  v4 = type metadata accessor for DateComponents(0, a3);
  v73 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v72 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011D7F58);
  __chkstk_darwin(v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - v16;
  v18 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v18);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v70 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v70 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v70 - v28;
  v30 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v30, v75, 0, 0);
  v31 = *v30;
  if (v31)
  {
    v71 = v4;
    objc_opt_self(MPModelAlbum);
    v32 = swift_dynamicCastObjCClass(v31);
    if (v32)
    {
      v33 = (void *)v32;
      v34 = v31;
      v35 = objc_msgSend(v33, "releaseDateComponents");
      if (v35)
      {
        v37 = v35;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v35, v36);

        v38 = 0;
      }
      else
      {
        v38 = 1;
      }
      v46 = v71;
      v47 = v73;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v14, v38, 1, v71);
      sub_100065228((uint64_t)v14, (uint64_t)v17, &qword_1011D7F58);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v17, 1, v46))
      {

        sub_10004FF60((uint64_t)v17, &qword_1011D7F58);
        v48 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v29, 1, 1, v48);
      }
      else
      {
        v49 = v72;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v72, v17, v46);
        v50 = sub_10004FF60((uint64_t)v17, &qword_1011D7F58);
        DateComponents.date.getter(v50);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v46);
      }
    }
    else
    {
      objc_opt_self(MPModelPlaylist);
      v39 = swift_dynamicCastObjCClass(v31);
      if (v39)
      {
        v40 = (void *)v39;
        v41 = v31;
        v42 = objc_msgSend(v40, "releaseDateComponents");
        if (v42)
        {
          v44 = v42;
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v42, v43);

          v45 = 0;
        }
        else
        {
          v45 = 1;
        }
        v57 = v71;
        v58 = v73;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v8, v45, 1, v71);
        sub_100065228((uint64_t)v8, (uint64_t)v11, &qword_1011D7F58);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v11, 1, v57))
        {

          sub_10004FF60((uint64_t)v11, &qword_1011D7F58);
          v59 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v26, 1, 1, v59);
        }
        else
        {
          v60 = v72;
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v72, v11, v57);
          v61 = sub_10004FF60((uint64_t)v11, &qword_1011D7F58);
          DateComponents.date.getter(v61);

          (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
        }
        v29 = v26;
      }
      else
      {
        objc_opt_self(MPModelTVEpisode);
        v51 = swift_dynamicCastObjCClass(v31);
        if (v51)
        {
          v52 = (void *)v51;
          v53 = v31;
          v54 = objc_msgSend(v52, "releaseDate");
          if (v54)
          {
            v55 = v54;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v54);

            v56 = type metadata accessor for Date(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v23, 0, 1, v56);
          }
          else
          {

            v68 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v23, 1, 1, v68);
          }
          v29 = v23;
        }
        else
        {
          objc_opt_self(MPModelMovie);
          v62 = swift_dynamicCastObjCClass(v31);
          if (!v62)
            return;
          v63 = (void *)v62;
          v64 = v31;
          v65 = objc_msgSend(v63, "releaseDate");
          if (v65)
          {
            v66 = v65;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v65);

            v67 = type metadata accessor for Date(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v20, 0, 1, v67);
          }
          else
          {

            v69 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v20, 1, 1, v69);
          }
          v29 = v20;
        }
      }
    }
    sub_1000A5508((uint64_t)v29, v74, &qword_1011D5D00);
  }
}

id sub_100AC1968(void *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr))
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[3];
  uint64_t v14;

  v4 = a1;
  a3(v13);

  v5 = v14;
  if (!v14)
    return 0;
  v6 = sub_100007E68(v13, v14);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  v11 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v13);
  return v11;
}

void ModelObjectBackedStoreItemMetadata.socialProfileID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];
  _OWORD v10[2];

  memset(v10, 0, sizeof(v10));
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_1010F7400, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v10;
  v5 = swift_allocObject(&unk_1010F7428, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_100AC3A78;
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = sub_1001095DC;
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10046D7B4;
  v9[3] = &unk_1010F7440;
  v6 = _Block_copy(v9);
  v7 = v1;
  swift_retain();
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 814, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100065228((uint64_t)v10, a1, &qword_1011D7160);
    swift_release();
  }
}

void sub_100AC1BA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  __int128 v10;
  __int128 v11;
  _BYTE v12[24];

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v12, 0, 0);
  v5 = *v4;
  if (v5)
  {
    objc_opt_self(MPModelSocialPerson);
    if (swift_dynamicCastObjCClass(v5))
    {
      v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
      swift_beginAccess(v6, v9, 0, 0);
      v7 = v6[1];
      if (v7)
      {
        v8 = *v6;
        *((_QWORD *)&v11 + 1) = &type metadata for String;
        *(_QWORD *)&v10 = v8;
        *((_QWORD *)&v10 + 1) = v7;
      }
      else
      {
        v10 = 0u;
        v11 = 0u;
      }
      swift_bridgeObjectRetain();
      sub_1000A5508((uint64_t)&v10, a2, &qword_1011D7160);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.seasonNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7478, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F74A0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3A90;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F74B8;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 829, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100AC1DE8(uint64_t a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelTVEpisode);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "season");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "number");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.shortName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F74F0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F7518, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3AA8;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F7530;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 846, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100AC2008(uint64_t a1, uint64_t *a2, _QWORD *a3, SEL *a4, _QWORD *a5, SEL *a6)
{
  void **v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[24];

  v11 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v29, 0, 0);
  v13 = *v11;
  if (v13)
  {
    objc_opt_self(*a3);
    v14 = swift_dynamicCastObjCClass(v13);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = v13;
      v17 = objc_msgSend(v15, *a4);
      if (v17)
      {
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;

      }
      else
      {

        v19 = 0;
        v21 = 0;
      }
      v28 = a2[1];
      *a2 = v19;
    }
    else
    {
      objc_opt_self(*a5);
      result = swift_dynamicCastObjCClass(v13);
      if (!result)
        return result;
      v22 = (void *)result;
      v23 = v13;
      v24 = objc_msgSend(v22, *a6);
      if (v24)
      {
        v25 = v24;
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v21 = v27;

      }
      else
      {

        v26 = 0;
        v21 = 0;
      }
      v28 = a2[1];
      *a2 = v26;
    }
    a2[1] = v21;
    return swift_bridgeObjectRelease(v28);
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.shortURL.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_1010F7568, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_1010F7590, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100AC3AF0;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F75A8;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 863, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100065228((uint64_t)v5, a1, &qword_1011D2AE0);
    swift_release();
  }
}

void ModelObjectBackedStoreItemMetadata.showComposer.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F75E0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F7608, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3B20;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7620;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 878, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100AC24A0(uint64_t a1, _BYTE *a2, _QWORD *a3, SEL *a4)
{
  uint64_t *v7;
  id result;
  uint64_t v9;
  _BYTE v10[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v10, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(*a3);
    result = (id)swift_dynamicCastObjCClass(v9);
    if (result)
    {
      result = objc_msgSend(result, *a4);
      *a2 = (_BYTE)result;
    }
  }
  return result;
}

uint64_t ModelObjectBackedStoreItemMetadata.storeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v3, v7, 0, 0);
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    *(_QWORD *)(a1 + 24) = &type metadata for String;
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_bridgeObjectRetain();
}

void ModelObjectBackedStoreItemMetadata.isStoreRedownloadable.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  char v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7658, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F7680, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3B58;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7698;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 897, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

void sub_100AC2780(uint64_t a1, _BYTE *a2)
{
  void **v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  char v12;
  _BYTE v13[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v13, 0, 0);
  v4 = *v3;
  if (v4)
  {
    ObjectType = swift_getObjectType();
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
    if (v6)
      v7 = v6;
    else
      v7 = 0;
    if (v6)
      v8 = v4;
    else
      v8 = 0;
    if (v8)
    {
      v9 = swift_getObjectType();
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
      v11 = v4;
      v12 = v10(v9, v7);

      *a2 = v12 & 1;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.trackCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F76D0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F76F8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3B70;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7710;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 907, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100AC29B4(uint64_t a1, _QWORD *a2, _QWORD *a3, SEL *a4)
{
  uint64_t *v7;
  id result;
  uint64_t v9;
  _BYTE v10[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v10, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(*a3);
    result = (id)swift_dynamicCastObjCClass(v9);
    if (result)
    {
      result = objc_msgSend(result, *a4);
      *a2 = result;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.trackNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7748, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v8;
  v3 = swift_allocObject(&unk_1010F7770, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3BA8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7788;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 922, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

id sub_100AC2BA8(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  char **v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelSong);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result)
    {
      v6 = &selRef_trackNumber;
    }
    else
    {
      objc_opt_self(MPModelTVEpisode);
      result = (id)swift_dynamicCastObjCClass(v5);
      if (!result)
        return result;
      v6 = &selRef_episodeNumber;
    }
    result = objc_msgSend(result, *v6);
    *a2 = result;
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.url.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[6];

  v3 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_1010F77C0, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_1010F77E8, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100AC3BC0;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001095DC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10046D7B4;
  aBlock[3] = &unk_1010F7800;
  v10 = _Block_copy(aBlock);
  v11 = v1;
  swift_retain();
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 939, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_100065228((uint64_t)v5, a1, &qword_1011D2AE0);
    swift_release();
  }
}

void sub_100AC2E20(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v6 = sub_100007E8C(&qword_1011D2AE0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v9, v19, 0, 0);
  v10 = *v9;
  if (v10)
  {
    objc_opt_self(MPModelPlaylist);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v10;
      v14 = objc_msgSend(v12, *a3);
      if (v14)
      {
        v15 = v14;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

        v16 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
      }
      else
      {

        v17 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
      }
      sub_1000A5508((uint64_t)v8, a2, &qword_1011D2AE0);
    }
  }
}

id sub_100AC2F84(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void ModelObjectBackedStoreItemMetadata.workName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];
  _QWORD v8[2];

  v8[0] = 0;
  v8[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_1010F7838, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v8;
  v3 = swift_allocObject(&unk_1010F7860, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_100AC3BF0;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_1001095DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10046D7B4;
  v7[3] = &unk_1010F7878;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release().n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 954, 49, 1);
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release();
}

uint64_t sub_100AC3134(uint64_t a1, uint64_t *a2, _QWORD *a3, SEL *a4)
{
  void **v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v7 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v18, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(*a3);
    result = swift_dynamicCastObjCClass(v9);
    if (result)
    {
      v10 = (void *)result;
      v11 = v9;
      v12 = objc_msgSend(v10, *a4);
      if (v12)
      {
        v13 = v12;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

      }
      else
      {

        v14 = 0;
        v16 = 0;
      }
      v17 = a2[1];
      *a2 = v14;
      a2[1] = v16;
      return swift_bridgeObjectRelease(v17);
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.ModelObjectBackedStoreItemMetadata", 44, "init()", 6, 0);
  __break(1u);
}

id ModelObjectBackedStoreItemMetadata.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ModelObjectBackedStoreItemMetadata()
{
  return objc_opt_self(_TtC9MusicCore34ModelObjectBackedStoreItemMetadata);
}

id sub_100AC32EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSDictionary v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  objc_class *v15;
  id v16;
  objc_super v18;

  v4 = v3;
  v7 = sub_100007E8C(&qword_1011D5D00);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v10 = &v4[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_100A3B4BC(a3, (uint64_t)v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  v15 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v18.receiver = v4;
  v18.super_class = v15;
  v16 = objc_msgSendSuper2(&v18, "initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:", v11.super.isa, a2, isa);

  sub_10004FF60(a3, &qword_1011D5D00);
  return v16;
}

uint64_t sub_100AC3450()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3474()
{
  uint64_t v0;

  return sub_100ABBB20(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100AC347C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC348C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100AC349C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100AC34A4()
{
  uint64_t v0;

  sub_100ABBFF0(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_100AC34AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC34BC()
{
  uint64_t v0;

  sub_100ABC2F0(*(_QWORD *)(v0 + 16), *(char ***)(v0 + 24));
}

uint64_t sub_100AC34C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC34D4()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelRadioStation_ptr, (SEL *)&selRef_isBeats1);
}

uint64_t sub_100AC34FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC350C()
{
  uint64_t v0;

  return sub_100ABD060(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_album, (SEL *)&selRef_title);
}

uint64_t sub_100AC3534()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3544()
{
  uint64_t v0;

  sub_100ABCCE4(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_100AC354C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC355C()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_isCompilation);
}

uint64_t sub_100AC3584()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3594()
{
  uint64_t v0;

  return sub_100ABD060(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_composer, (SEL *)&selRef_name);
}

uint64_t sub_100AC35BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC35CC()
{
  uint64_t v0;

  return sub_100AC2008(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_copyrightText, MPModelSong_ptr, (SEL *)&selRef_copyrightText);
}

uint64_t sub_100AC3600()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3610()
{
  uint64_t v0;

  sub_100ABD420(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100AC3618()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3628()
{
  uint64_t v0;

  return sub_100ABD6C4(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100AC3630()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3640()
{
  uint64_t v0;

  return sub_100AC29B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_discCount);
}

uint64_t sub_100AC3668()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3678()
{
  uint64_t v0;

  return sub_100AC29B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_discNumber);
}

uint64_t sub_100AC36A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC36B0()
{
  uint64_t v0;

  return sub_100ABDCD8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100AC36B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC36C8()
{
  uint64_t v0;

  return sub_100ABDEDC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_editorNotes);
}

uint64_t sub_100AC36E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC36F8()
{
  uint64_t v0;

  return sub_100ABDEDC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_shortEditorNotes);
}

uint64_t sub_100AC3718()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3728()
{
  uint64_t v0;

  return sub_100AC29B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelTVShow_ptr, (SEL *)&selRef_episodesCount);
}

uint64_t sub_100AC3750()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3760()
{
  uint64_t v0;

  return sub_100ABE4B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100AC3768()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3778()
{
  uint64_t v0;

  sub_100ABE764(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_100AC3780()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3790()
{
  uint64_t v0;

  return sub_100AC3134(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_handle);
}

uint64_t sub_100AC37B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC37C8()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelArtist_ptr, (SEL *)&selRef_hasBiography);
}

uint64_t sub_100AC37F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3800()
{
  uint64_t v0;

  sub_100ABEC60(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_100AC3808()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3818()
{
  uint64_t v0;

  sub_100ABEEA0(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_100AC3820()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3830()
{
  uint64_t v0;

  return sub_100ABF0D4(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_100AC3838()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3848()
{
  uint64_t v0;

  return sub_100ABF2DC(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_100AC3850()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3860()
{
  uint64_t v0;

  return sub_100ABF530(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_100AC3868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3878()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_isPreorder);
}

uint64_t sub_100AC38A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC38B0()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_isPrivate);
}

uint64_t sub_100AC38D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC38E8()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_isVerified);
}

uint64_t sub_100AC3910()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3920()
{
  uint64_t v0;

  return sub_100ABFB98(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_100AC3928()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3938()
{
  uint64_t v0;

  sub_100ABFD68(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100AC3940()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3950()
{
  uint64_t v0;

  sub_100AC035C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100AC3958()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3968()
{
  uint64_t v0;

  return sub_100AC29B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovementCount);
}

uint64_t sub_100AC3990()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC39A0()
{
  uint64_t v0;

  return sub_100AC3134(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovement);
}

uint64_t sub_100AC39C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC39D8()
{
  uint64_t v0;

  return sub_100AC29B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovementNumber);
}

uint64_t sub_100AC3A00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3A10()
{
  uint64_t v0;

  return sub_100AC0BA8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100AC3A18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3A28()
{
  uint64_t v0;

  return sub_100AC3134(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_uncensoredName);
}

uint64_t sub_100AC3A50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3A60(__n128 a1)
{
  uint64_t v1;

  sub_100AC13A0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100AC3A68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3A78()
{
  uint64_t v0;

  sub_100AC1BA0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100AC3A80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3A90()
{
  uint64_t v0;

  sub_100AC1DE8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100AC3A98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3AA8()
{
  uint64_t v0;

  return sub_100AC2008(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelCurator_ptr, (SEL *)&selRef_shortName, MPModelTVShow_ptr, (SEL *)&selRef_shortTitle);
}

uint64_t sub_100AC3AE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3AF0()
{
  uint64_t v0;

  sub_100AC2E20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_shareShortURL);
}

uint64_t sub_100AC3B10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3B20()
{
  uint64_t v0;

  return sub_100AC24A0(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_shouldShowComposer);
}

uint64_t sub_100AC3B48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3B58()
{
  uint64_t v0;

  sub_100AC2780(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_100AC3B60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3B70()
{
  uint64_t v0;

  return sub_100AC29B4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_trackCount);
}

uint64_t sub_100AC3B98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100AC3BA8()
{
  uint64_t v0;

  return sub_100AC2BA8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100AC3BB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC3BC0()
{
  uint64_t v0;

  sub_100AC2E20(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_shareURL);
}

uint64_t sub_100AC3BE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC3BF0()
{
  uint64_t v0;

  return sub_100AC3134(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalWork);
}

uint64_t sub_100AC3C18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t MotionMode.allowsMotion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t, __n128);
  int v10;
  uint64_t result;
  id v12;
  id v13;
  unint64_t v14;
  Swift::String v15;
  unint64_t v16;
  unint64_t v17;

  v1 = type metadata accessor for MotionMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v16 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v9((char *)&v16 - v7, v0, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v8, v1);
  if (v10 == enum case for MotionMode.off(_:))
    return 0;
  if (v10 == enum case for MotionMode.wifiOnly(_:))
  {
    v12 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v13 = objc_msgSend(v12, "networkType");

    return ICEnvironmentNetworkTypeIsWiFi(v13);
  }
  else if (v10 == enum case for MotionMode.on(_:))
  {
    return 1;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v9)(v4, v0, v1);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v16 = 0xD00000000000001ELL;
    v17 = 0x8000000100E4FD90;
    v14 = sub_100AC4040();
    v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v14);
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "MusicCore/MotionMode.swift", 26, 2, 18, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_100AC4040()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7F60;
  if (!qword_1011D7F60)
  {
    v1 = type metadata accessor for MotionMode(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MotionMode, v1);
    atomic_store(result, (unint64_t *)&qword_1011D7F60);
  }
  return result;
}

uint64_t sub_100AC4088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(uint64_t *);
  _QWORD v28[3];
  double v29;

  v8 = sub_100007E8C(&qword_1011D7F70);
  __chkstk_darwin(v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Edge.Set.top.getter(v11);
  *(double *)&v28[1] = a4;
  v28[2] = a2;
  v13 = sub_100007E8C(&qword_1011D7F78);
  State.wrappedValue.getter(&v29, v13);
  v14 = EdgeInsets.init(_all:)(v29 * -0.5);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = sub_100007E8C(&qword_1011D7F80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v10, a1, v21);
  v22 = &v10[*(int *)(v8 + 36)];
  *v22 = v12;
  *((double *)v22 + 1) = v14;
  *((_QWORD *)v22 + 2) = v16;
  *((_QWORD *)v22 + 3) = v18;
  *((_QWORD *)v22 + 4) = v20;
  v22[40] = 0;
  v23 = sub_100AC45AC();
  v24 = swift_allocObject(&unk_1010F7930, 32, 7);
  *(double *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a2;
  sub_100AC48D8((uint64_t)v10, a3);
  v25 = sub_100007E8C(&qword_1011D7F88);
  *(_QWORD *)(a3 + *(int *)(v25 + 52)) = v23;
  v26 = (void (**)(uint64_t *))(a3 + *(int *)(v25 + 56));
  *v26 = sub_100AC48CC;
  v26[1] = (void (*)(uint64_t *))v24;
  swift_retain();
  return sub_10004FF60((uint64_t)v10, &qword_1011D7F70);
}

void sub_100AC421C(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  v5 = *a1;
  v6 = static Animation.easeInOut(duration:)(0.25);
  *(double *)&v7[2] = a3;
  v7[3] = a2;
  v7[4] = v5;
  withAnimation<A>(_:_:)(v6, sub_100AC4920, v7, (char *)&type metadata for () + 8);
  swift_release();
}

uint64_t sub_100AC4298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100AC4088(a1, *(_QWORD *)(v2 + 8), a2, *(double *)v2);
}

uint64_t View.keyboardReactive()(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __chkstk_darwin(a1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v7 = 0;
  State.init(wrappedValue:)(&v7, &type metadata for CGFloat);
  return ModifiedContent.init(content:modifier:)(v3, &v8, a1, &type metadata for KeyboardObserverModifier);
}

uint64_t sub_100AC4358(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for KeyboardObserverModifier);
  sub_100AC43AC();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_100AC43AC()
{
  unint64_t result;

  result = qword_1011D7F68;
  if (!qword_1011D7F68)
  {
    result = swift_getWitnessTable("5e!", &type metadata for KeyboardObserverModifier);
    atomic_store(result, (unint64_t *)&qword_1011D7F68);
  }
  return result;
}

_QWORD *assignWithCopy for KeyboardObserverModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a1[1];
  v4 = a2[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

_QWORD *assignWithTake for KeyboardObserverModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a1[1];
  a1[1] = a2[1];
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardObserverModifier()
{
  return &type metadata for KeyboardObserverModifier;
}

uint64_t sub_100AC4478(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FB5DA4, 1);
}

void sub_100AC4488(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  *a2 = sub_100AC44B0(a1);
}

CGFloat sub_100AC44B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD v8[2];
  CGRect v9;
  __int128 v10;
  __int128 v11;

  v1 = Notification.userInfo.getter(a1);
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_10:
    sub_10004FF60((uint64_t)&v10, &qword_1011D7160);
    return 0.0;
  }
  v2 = v1;
  v8[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v8[1] = v3;
  AnyHashable.init<A>(_:)(v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_10079C294((uint64_t)&v9), (v5 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10004FF2C((uint64_t)&v9);
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_10;
  _s3__C6CGRectVMa_0(0);
  if ((swift_dynamicCast(&v9, &v10, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    return CGRectGetHeight(v9);
  return 0.0;
}

uint64_t sub_100AC45AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_100007E8C(&qword_1011D7F90);
  v1 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  v36 = v1;
  __chkstk_darwin(v0);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011D7F98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - v12;
  v14 = (void *)objc_opt_self(NSNotificationCenter);
  v15 = objc_msgSend(v14, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillShowNotification, 0);

  v16 = sub_100AC4978();
  Publisher.map<A>(_:)(sub_100AC4488, 0, v3, &type metadata for CGFloat, v16);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  v18 = objc_msgSend(v14, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillHideNotification, 0);

  Publisher.map<A>(_:)(sub_100044FC4, 0, v3, &type metadata for CGFloat, v16);
  v17(v6, v3);
  v19 = sub_100007E8C(&qword_1011D7FA8);
  v20 = *(_QWORD *)(v8 + 72);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v19, v22 + 2 * v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_100EA7A80;
  v24 = v23 + v22;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 16);
  v25(v24, v13, v7);
  v25(v24 + v20, v10, v7);
  v26 = sub_100049F28(&qword_1011D7FB0, &qword_1011D7F98, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v27 = v34;
  Publishers.MergeMany.init(_:)(v23, v7, v26);
  v28 = sub_100049F28(&qword_1011D7FB8, &qword_1011D7F90, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
  v29 = v35;
  v30 = Publisher.eraseToAnyPublisher()(v35, v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v29);
  v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v10, v7);
  v31(v13, v7);
  return v30;
}

uint64_t sub_100AC48A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100AC48CC(uint64_t *a1)
{
  uint64_t v1;

  sub_100AC421C(a1, *(_QWORD *)(v1 + 24), *(double *)(v1 + 16));
}

uint64_t sub_100AC48D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011D7F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AC4920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];

  v1 = v0[2];
  v2 = v0[3];
  v5[0] = v0[4];
  v5[1] = v1;
  v5[2] = v2;
  v3 = sub_100007E8C(&qword_1011D7F78);
  return State.wrappedValue.setter(v5, v3);
}

unint64_t sub_100AC4978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D7FA0;
  if (!qword_1011D7FA0)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1011D7FA0);
  }
  return result;
}

uint64_t sub_100AC49C0()
{
  return sub_100049F28(qword_1011D7FC0, &qword_1011D7F88, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

uint64_t property wrapper backing initializer of OptionalObservableObject.output(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = type metadata accessor for Optional(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v9 - v6, a1, v3, v5);
  sub_100532B00((uint64_t)v7, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t OptionalObservableObject.output.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EE1470);
  v4 = swift_getKeyPath(&unk_100EE14A8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_100AC4B10@<X0>(_QWORD *a1@<X8>)
{
  return OptionalObservableObject.output.getter(a1);
}

uint64_t sub_100AC4B30(uint64_t a1)
{
  return sub_100AC522C(a1);
}

uint64_t sub_100AC4B50()
{
  return 8;
}

_QWORD *sub_100AC4B5C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t OptionalObservableObject.output.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  sub_100AC522C(a1);
  v4 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*OptionalObservableObject.output.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EE1470);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EE14A8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100067EF0;
}

uint64_t OptionalObservableObject.$output.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v1 = *v0;
  swift_beginAccess((char *)v0 + *(_QWORD *)(*v0 + 88), v5, 33, 0);
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(v1 + 80));
  v3 = type metadata accessor for Published(0, v2);
  Published.projectedValue.getter(v3);
  return swift_endAccess(v5);
}

uint64_t OptionalObservableObject.$output.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  sub_100AC5308(a1);
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(v3 + 80));
  v5 = type metadata accessor for Published.Publisher(0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

void (*OptionalObservableObject.$output.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v5 = type metadata accessor for Published.Publisher(0, v4);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  OptionalObservableObject.$output.getter();
  return sub_100AC4DA4;
}

void sub_100AC4DA4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_100AC5308((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_100AC5308(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OptionalObservableObject.__allocating_init(publisher:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  OptionalObservableObject.init(publisher:)(a1);
  return v3;
}

uint64_t *OptionalObservableObject.init(publisher:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __n128 v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = type metadata accessor for Optional(255, v5);
  v7 = type metadata accessor for Published(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  v15 = (uint64_t)v2 + *(_QWORD *)(v4 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 56))((char *)&v25 - v13, 1, 1, v5, v12);
  property wrapper backing initializer of OptionalObservableObject.output((uint64_t)v14, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15, v10, v7);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = 0;
  v16 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  if (!*(_QWORD *)(a1 + 24))
  {
    v20 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v16 = *(_OWORD *)a1;
    *(_OWORD *)(v16 + 16) = v20;
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(a1 + 32);
LABEL_8:
    v21 = *(_OWORD *)(a1 + 16);
    v25 = *(_OWORD *)a1;
    v26 = v21;
    v27 = *(_QWORD *)(a1 + 32);
    v17 = *((_QWORD *)&v21 + 1);
    if (!*((_QWORD *)&v21 + 1))
      goto LABEL_4;
LABEL_9:
    v22 = v27;
    sub_100007E68(&v25, v17);
    v23 = swift_retain();
    v19 = Publisher.sink(receiveCompletion:receiveValue:)(UIScreen.Dimensions.size.getter, 0, sub_100AC53D0, v2, v17, v22, v23);
    swift_release();
    if (*(_QWORD *)(a1 + 24))
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
    goto LABEL_11;
  }
  sub_100064C78(a1, v16);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_8;
  sub_100064C78(a1, (uint64_t)&v25);
  v17 = *((_QWORD *)&v26 + 1);
  if (*((_QWORD *)&v26 + 1))
    goto LABEL_9;
LABEL_4:
  v18 = *(_QWORD *)(a1 + 24);
  if (v18)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)a1);
    v19 = 0;
    v18 = 0;
    if (*((_QWORD *)&v26 + 1))
    {
LABEL_11:
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v25);
      v18 = v19;
    }
  }
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = v18;
  swift_release();
  return v2;
}

uint64_t sub_100AC508C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v11 - v7, a1, v3, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v3);
  sub_100AC522C((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t OptionalObservableObject.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v0 + 80));
  v3 = type metadata accessor for Published(0, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  if (v4[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4);
  swift_release();
  return v0;
}

uint64_t OptionalObservableObject.__deallocating_deinit()
{
  uint64_t v0;

  OptionalObservableObject.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100AC51EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for OptionalObservableObject(0, *(_QWORD *)(a1 + 80), a2, a3);
  result = ObservableObject<>.objectWillChange.getter(v5);
  *a4 = result;
  return result;
}

uint64_t sub_100AC522C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v11[4];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v11 - v6;
  v11[2] = v3;
  KeyPath = swift_getKeyPath(&unk_100EE1470);
  v11[0] = v3;
  v9 = swift_getKeyPath(&unk_100EE14A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain(v1);
  return static Published.subscript.setter(v7, v1, KeyPath, v9);
}

uint64_t sub_100AC5308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = type metadata accessor for Published.Publisher(0, v3);
  __chkstk_darwin(v4);
  v6 = &v11[-v5 - 8];
  (*(void (**)(_BYTE *, uint64_t))(v7 + 16))(&v11[-v5 - 8], a1);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), v11, 33, 0);
  v8 = type metadata accessor for Published(0, v3);
  Published.projectedValue.setter(v6, v8);
  return swift_endAccess(v11);
}

uint64_t sub_100AC53D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100AC508C(a1, v1);
}

uint64_t sub_100AC53D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v2 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 80));
  result = type metadata accessor for Published(319, v2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "(";
    v5[2] = &unk_100EE1548;
    result = swift_initClassMetadata2(a1, 0, 3, v5, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for OptionalObservableObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalObservableObject);
}

uint64_t PrivacyAcknowledgementObserver.__allocating_init(dispatchOnMainThread:handler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 56, 7);
  PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(a1, a2, a3);
  return v7;
}

uint64_t PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;

  v5 = (void *)ICPrivacyIdentifierMusic;
  *(_QWORD *)(v3 + 16) = ICPrivacyIdentifierMusic;
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  v6 = (void *)objc_opt_self(ICPrivacyInfo);
  v7 = v5;
  v8 = objc_msgSend(v6, "sharedPrivacyInfo", swift_retain(a3).n128_f64[0]);
  v9 = swift_allocObject(&unk_1010F7AA0, 24, 7);
  swift_weakInit(v9 + 16, v3);
  v16[4] = sub_100AC5740;
  v17 = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100AC5748;
  v16[3] = &unk_1010F7AB8;
  v10 = _Block_copy(v16);
  v11 = v17;
  v12 = v7;
  v13 = objc_msgSend(v8, "beginObservingPrivacyAcknowledgementForIdentifier:handler:", v12, v10, swift_release(v11).n128_f64[0]);
  swift_release(a3);
  _Block_release(v10);

  v14 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v13;
  swift_unknownObjectRelease(v14);
  return v3;
}

uint64_t sub_100AC5618()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100AC563C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    if (*(_BYTE *)(Strong + 32) == 1)
    {
      sub_1009E0478();
      v8 = swift_allocObject(&unk_1010F7AA0, 24, 7);
      swift_weakInit(v8 + 16, v7);
      v9 = swift_allocObject(&unk_1010F7AF0, 25, 7);
      *(_QWORD *)(v9 + 16) = v8;
      *(_BYTE *)(v9 + 24) = a2 & 1;
      swift_retain(v8);
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_100AC59B0, v9);
      swift_release(v7);
      swift_release(v8);
      v10 = v9;
    }
    else
    {
      (*(void (**)(_QWORD))(Strong + 40))(a2 & 1);
      v10 = v7;
    }
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

double sub_100AC5740(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_100AC563C(a1, a2, v2);
}

void sub_100AC5748(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_100AC57A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100AC57B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t PrivacyAcknowledgementObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self(ICPrivacyInfo);
    swift_unknownObjectRetain(v1, v3);
    v4 = objc_msgSend(v2, "sharedPrivacyInfo");
    objc_msgSend(v4, "endObservingPrivacyAcknowledgementForIdentifier:withToken:", *(_QWORD *)(v0 + 16), v1);
    swift_unknownObjectRelease(v1);

  }
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t PrivacyAcknowledgementObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self(ICPrivacyInfo);
    swift_unknownObjectRetain(v1, v3);
    v4 = objc_msgSend(v2, "sharedPrivacyInfo");
    objc_msgSend(v4, "endObservingPrivacyAcknowledgementForIdentifier:withToken:", *(_QWORD *)(v0 + 16), v1);
    swift_unknownObjectRelease(v1);

  }
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for PrivacyAcknowledgementObserver()
{
  return objc_opt_self(_TtC9MusicCore30PrivacyAcknowledgementObserver);
}

uint64_t sub_100AC5914(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v7 = *(void (**)(_QWORD))(result + 40);
    v6 = *(_QWORD *)(result + 48);
    swift_retain(v6);
    v7(a2 & 1);
    swift_release(v5);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_100AC598C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100AC59B0()
{
  uint64_t v0;

  return sub_100AC5914(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100AC59BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v61 = sub_100007E8C(&qword_1011D82F8);
  __chkstk_darwin(v61);
  v60 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v59 = (char *)v50 - v5;
  __chkstk_darwin(v6);
  v58 = (char *)v50 - v7;
  __chkstk_darwin(v8);
  v57 = (char *)v50 - v9;
  __chkstk_darwin(v10);
  v56 = (char *)v50 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
    return (uint64_t)v13;
  v50[1] = v1;
  v65 = _swiftEmptyArrayStorage;
  sub_1009F24EC(0, v12, 0);
  result = sub_1007186B4(a1);
  v16 = result;
  v17 = 0;
  v18 = a1 + 64;
  v19 = *(_BYTE *)(a1 + 32);
  v51 = a1 + 80;
  v52 = v12;
  v54 = a1 + 64;
  v55 = a1;
  v53 = v15;
  v20 = v61;
  v21 = (uint64_t)v58;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << v19)
  {
    v24 = (unint64_t)v16 >> 6;
    if ((*(_QWORD *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
      goto LABEL_26;
    v62 = v17;
    v63 = 1 << v16;
    v25 = (uint64_t)v56;
    v26 = (uint64_t)&v56[*(int *)(v20 + 48)];
    v27 = *(_QWORD *)(a1 + 48);
    v28 = type metadata accessor for UUID(0);
    v64 = *(_QWORD *)(v28 - 8);
    v29 = v27 + *(_QWORD *)(v64 + 72) * v16;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
    v30(v25, v29, v28);
    v31 = *(_QWORD *)(a1 + 56);
    v32 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    sub_100AC65FC(v31 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v16, v26);
    v33 = (uint64_t)v57;
    v30((uint64_t)v57, v25, v28);
    sub_100AC65FC(v26, v33 + *(int *)(v20 + 48));
    sub_100065228(v33, v21, &qword_1011D82F8);
    sub_10004FF60(v25, &qword_1011D82F8);
    v34 = *(int *)(v20 + 48);
    v35 = v59;
    v36 = (uint64_t)&v59[v34];
    v37 = v21 + v34;
    v30((uint64_t)v59, v21, v28);
    sub_100AC65FC(v37, v36);
    v38 = (uint64_t)v60;
    v39 = &v60[*(int *)(v20 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v35, v28);
    sub_100A156A0(v36, (uint64_t)v39);
    v41 = *(_QWORD *)v39;
    v40 = *((_QWORD *)v39 + 1);
    swift_bridgeObjectRetain();
    sub_10004FF60(v38, &qword_1011D82F8);
    sub_10004FF60(v21, &qword_1011D82F8);
    v13 = v65;
    result = swift_isUniquelyReferenced_nonNull_native(v65);
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1009F24EC(0, v13[2] + 1, 1);
      v13 = v65;
    }
    v43 = v13[2];
    v42 = v13[3];
    if (v43 >= v42 >> 1)
    {
      result = (uint64_t)sub_1009F24EC((char *)(v42 > 1), v43 + 1, 1);
      v13 = v65;
    }
    v13[2] = v43 + 1;
    v44 = &v13[2 * v43];
    v44[4] = v41;
    v44[5] = v40;
    a1 = v55;
    v19 = *(_BYTE *)(v55 + 32);
    v22 = 1 << v19;
    if (v16 >= 1 << v19)
      goto LABEL_27;
    v18 = v54;
    v45 = *(_QWORD *)(v54 + 8 * v24);
    if ((v45 & v63) == 0)
      goto LABEL_28;
    LODWORD(v15) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v46 = v45 & (-2 << (v16 & 0x3F));
    if (v46)
    {
      v22 = __clz(__rbit64(v46)) | v16 & 0xFFFFFFFFFFFFFFC0;
      v23 = v52;
    }
    else
    {
      v47 = v24 + 1;
      v48 = (v22 + 63) >> 6;
      v23 = v52;
      if (v24 + 1 < v48)
      {
        v49 = *(_QWORD *)(v54 + 8 * v47);
        if (v49)
        {
LABEL_22:
          v22 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v24)
          {
            v49 = *(_QWORD *)(v51 + 8 * v24++);
            if (v49)
            {
              v47 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v17 = v62 + 1;
    v16 = v22;
    if (v62 + 1 == v23)
      return (uint64_t)v13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100AC5DDC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011D8128);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_10004FF60(a1, &qword_1011D8128);
    sub_100AF857C(a2, (uint64_t)v8);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_10004FF60((uint64_t)v8, &qword_1011D8128);
  }
  else
  {
    sub_100A156A0(a1, (uint64_t)v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_100A14808((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_100AC5F54(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011D8308);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D8310);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_10004FF60(a1, &qword_1011D8308);
    sub_100AF8804(a2, (uint64_t)v8);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_10004FF60((uint64_t)v8, &qword_1011D8308);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_100A14D50((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t PushNotificationObserver.register(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = sub_100007E8C(&qword_1011D8128);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[14] = v9;
  v6[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100AC6170, v5, 0);
}

uint64_t sub_100AC6170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  Class isa;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 88);
  if (*(_QWORD *)(v1 + 120))
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_OWORD *)(v0 + 64);
    *(_QWORD *)v7 = *(_QWORD *)(v0 + 56);
    *(_OWORD *)(v7 + 8) = v8;
    *(_QWORD *)(v7 + 24) = v6;
    v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    v10 = v7 + *(int *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_retain();
    UUID.init()(v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v10, v5);
    sub_100AC65FC(v7, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    swift_beginAccess(v1 + 112, v0 + 16, 33, 0);
    sub_100AC5DDC(v4, v3);
    swift_endAccess(v0 + 16);
    v12 = *(void **)(v1 + 120);
    if (v12)
    {
      v13 = *(_QWORD **)(v0 + 88);
      v15 = v13[16];
      v14 = v13[17];
      v16 = v12;
      swift_bridgeObjectRetain();
      v17 = v16;
      sub_10056C188(v12, v15, v14);
      if (v13[19])
      {
        v18 = swift_bridgeObjectRetain();
        sub_100AC59BC(v18);
        swift_bridgeObjectRelease();
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v17, "_setEnabledTopics:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    }
    v22 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = (_QWORD *)swift_task_alloc(dword_1011D8134);
    *(_QWORD *)(v0 + 128) = v19;
    *v19 = v0;
    v19[1] = sub_100AC6394;
    return sub_100AC6FC8();
  }
}

uint64_t sub_100AC6394()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_100AC63EC, v1, 0);
}

uint64_t sub_100AC63EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)v7 = *(_QWORD *)(v0 + 56);
  *(_OWORD *)(v7 + 8) = v8;
  *(_QWORD *)(v7 + 24) = v5;
  v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v10 = v7 + *(int *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()(v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v10, v4);
  sub_100AC65FC(v7, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
  swift_beginAccess(v6 + 112, v0 + 16, 33, 0);
  sub_100AC5DDC(v3, v2);
  swift_endAccess(v0 + 16);
  v12 = *(void **)(v6 + 120);
  if (v12)
  {
    v13 = *(_QWORD **)(v0 + 88);
    v15 = v13[16];
    v14 = v13[17];
    v16 = v12;
    swift_bridgeObjectRetain();
    v17 = v16;
    sub_10056C188(v12, v15, v14);
    if (v13[19])
    {
      v18 = swift_bridgeObjectRetain();
      sub_100AC59BC(v18);
      swift_bridgeObjectRelease();
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "_setEnabledTopics:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  v20 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PushNotificationObserver.RegisteredHandler(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D8230;
  if (!qword_1011D8230)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PushNotificationObserver.RegisteredHandler);
  return result;
}

uint64_t sub_100AC65FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void PushNotificationObserver.unregister(registeredHandler:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D8128);
  __chkstk_darwin(v4);
  v6 = v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v11 + 24), v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  swift_beginAccess(v2 + 14, v24, 33, 0);
  sub_100AC5DDC((uint64_t)v6, (uint64_t)v10);
  swift_endAccess(v24);
  v13 = (void **)(v2 + 15);
  v12 = (void *)v2[15];
  if (v12)
  {
    v15 = v2[16];
    v14 = v2[17];
    v16 = v12;
    swift_bridgeObjectRetain();
    v17 = v16;
    sub_10056C188(v12, v15, v14);
    if (v2[19])
    {
      v18 = swift_bridgeObjectRetain();
      sub_100AC59BC(v18);
      swift_bridgeObjectRelease();
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "_setEnabledTopics:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  if (!*(_QWORD *)(v2[14] + 16))
  {
    v20 = *v13;
    if (*v13)
    {
      objc_msgSend(v20, "setDelegate:", 0);
      v20 = *v13;
      if (*v13)
      {
        objc_msgSend(v20, "shutdown");
        v20 = *v13;
      }
    }
    v21 = v2[16];
    v22 = v2[17];
    *v13 = 0;
    v2[16] = 0;
    v2[17] = 0;
    sub_10056C188(v20, v21, v22);
  }
}

void PushNotificationObserver.connection(_:didReceiveMessageForTopic:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v8 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject(&unk_1010F7B18, 64, 7);
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v4;
    v12[5] = a2;
    v12[6] = a3;
    v12[7] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100A3F884((uint64_t)v10, (uint64_t)&unk_1011D8148, (uint64_t)v12);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100AC69B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_100AC69D4, 0, 0);
}

uint64_t sub_100AC69D4()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32))
    return swift_task_switch(sub_100AC69F4, *(_QWORD *)(v0 + 16), 0);
  __break(1u);
  return result;
}

uint64_t sub_100AC69F4()
{
  uint64_t v0;

  sub_100AC6B90(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100AC6B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];

  v41 = a3;
  v6 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011D82F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  swift_beginAccess(v3 + 112, v44, 0, 0);
  v15 = *(_QWORD *)(v3 + 112);
  v16 = *(_QWORD *)(v15 + 64);
  v39 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  v36 = v20 - 1;
  swift_bridgeObjectRetain();
  v21 = 0;
  v40 = v20;
  v37 = v15 + 104;
  v38 = v20 - 5;
  v42 = a2;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_8;
    }
    v29 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v29 >= v40)
    {
      v31 = v21;
    }
    else
    {
      v30 = *(_QWORD *)(v39 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v21 + 1;
      if ((uint64_t)(v21 + 2) < v40)
      {
        v30 = *(_QWORD *)(v39 + 8 * (v21 + 2));
        if (v30)
        {
          v29 = v21 + 2;
          goto LABEL_12;
        }
        v31 = v21 + 2;
        if ((uint64_t)(v21 + 3) < v40)
        {
          v30 = *(_QWORD *)(v39 + 8 * (v21 + 3));
          if (v30)
          {
            v29 = v21 + 3;
LABEL_12:
            v19 = (v30 - 1) & v30;
            v24 = __clz(__rbit64(v30)) + (v29 << 6);
            v21 = v29;
LABEL_8:
            v25 = *(_QWORD *)(v15 + 48);
            v26 = type metadata accessor for UUID(0);
            (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, v26);
            v27 = *(_QWORD *)(v15 + 56) + *(_QWORD *)(v43 + 72) * v24;
            v28 = sub_100007E8C(&qword_1011D82F8);
            sub_100AC65FC(v27, (uint64_t)&v11[*(int *)(v28 + 48)]);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
            a2 = v42;
            goto LABEL_15;
          }
          v29 = v21 + 4;
          v31 = v21 + 3;
          if ((uint64_t)(v21 + 4) < v40)
          {
            v30 = *(_QWORD *)(v39 + 8 * v29);
            if (v30)
              goto LABEL_12;
            while (v38 != v21)
            {
              v30 = *(_QWORD *)(v37 + 8 * v21++);
              if (v30)
              {
                v29 = v21 + 4;
                goto LABEL_12;
              }
            }
            v31 = v36;
          }
        }
      }
    }
    v32 = sub_100007E8C(&qword_1011D82F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
    v19 = 0;
    v21 = v31;
LABEL_15:
    sub_100065228((uint64_t)v11, (uint64_t)v14, &qword_1011D82F0);
    v33 = sub_100007E8C(&qword_1011D82F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v14, 1, v33) == 1)
    {
      swift_release();
      return;
    }
    sub_100A156A0((uint64_t)&v14[*(int *)(v33 + 48)], (uint64_t)v8);
    v34 = *((_QWORD *)v8 + 1);
    if (*(_QWORD *)v8 == a1 && v34 == a2
      || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v8, v34, a1, a2, 0) & 1) != 0)
    {
      (*((void (**)(uint64_t, uint64_t, uint64_t))v8 + 2))(a1, a2, v41);
    }
    sub_100AC81F0((uint64_t)v8);
    v22 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v14, v22);
  }
  __break(1u);
}

void *sub_100AC6F44(id a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v7 = (void *)v3[15];
  if (v7)
  {
    objc_msgSend(v7, "setDelegate:", 0);
    v8 = (void *)v3[15];
    if (v8)
      objc_msgSend(v8, "shutdown");
  }
  if (a1)
    objc_msgSend(a1, "setDelegate:", v3);
  v9 = (void *)v3[15];
  v10 = v3[16];
  v11 = v3[17];
  v3[15] = a1;
  v3[16] = a2;
  v3[17] = a3;
  return sub_10056C188(v9, v10, v11);
}

uint64_t sub_100AC6FC8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v1 + 32) = v0;
  v2 = sub_100AC82E4();
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 40) = v3;
  *v3 = v1;
  v3[1] = sub_100AC7064;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, v0, v2, 0xD000000000000017, 0x8000000100E4FEB0, sub_100AC7360, 0, &type metadata for PushNotificationObserver.PushConfiguration);
}

uint64_t sub_100AC7064()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_100AC70B8, v1, 0);
}

uint64_t sub_100AC70B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v1 = *(_QWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 152);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 144);
    v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v4 = v3 & 0xFFFFFFFFFFFFLL;
    if (v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(APSConnectionOverrideNamedDelegatePort);
      sub_1009E0478();
      v5 = swift_bridgeObjectRetain_n(v2, 2);
      v13 = (void *)static OS_dispatch_queue.main.getter(v5, v6, v7, v8, v9, v10, v11, v12);
      v14 = objc_allocWithZone((Class)APSConnection);
      v15 = String._bridgeToObjectiveC()();
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v14, "initWithEnvironmentName:namedDelegatePort:queue:", v15, v16, v13, swift_bridgeObjectRelease().n128_f64[0]);
      swift_bridgeObjectRelease();

      if (v17)
        goto LABEL_10;
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    v3 = 0;
    v2 = 0;
  }
  else
  {
    v17 = 0;
    v3 = 0;
  }
LABEL_10:
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(void **)(v18 + 120);
  if (!v19)
  {
    if (!v17)
      goto LABEL_25;
    swift_bridgeObjectRetain();
LABEL_19:
    if (!v2)
      goto LABEL_25;
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v18 + 128);
  v20 = *(_QWORD *)(v18 + 136);
  sub_100AC8328(*(void **)(v18 + 120));
  swift_bridgeObjectRetain();
  sub_10056C188(v19, v21, v20);
  if (!v17)
  {
    if (!v20)
      goto LABEL_25;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_19;
  if (!v2)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v21 == v3 && v20 == v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    sub_10056C188(v17, v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, v3, v2, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_25;
LABEL_23:
  sub_100AC6F44(v17, v3, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AC72E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1011D8144);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10006AEE4;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch(sub_100AC69D4, 0, 0);
}

uint64_t sub_100AC7360(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  void *v26;

  v2 = sub_100007E8C(&qword_1011D8328);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - v7;
  if (qword_1011D1CF0 != -1)
    swift_once(&qword_1011D1CF0, sub_100A3CB80);
  v9 = static BagProvider.shared;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  v10(v5, (uint64_t)v8, v2);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010F7CD0, v12 + v4, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v8, v2);
  sub_100007E8C(&qword_1011D6170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10098A8A8);
  v14 = v26;
  if (v26)
  {
    sub_100AC75EC(v26);

  }
  else
  {
    v15 = type metadata accessor for BagProvider.Observer();
    v16 = swift_allocObject(v15, 40, 7);
    v17 = swift_weakInit(v16 + 16, 0);
    *(_QWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 32) = 0;
    swift_weakAssign(v17, v9);
    v18 = swift_allocObject(&unk_1010F7CF8, 24, 7);
    swift_weakInit(v18 + 16, v9);
    v19 = (_QWORD *)swift_allocObject(&unk_1010F7D20, 48, 7);
    v19[2] = sub_100AC83B8;
    v19[3] = v13;
    v19[4] = v18;
    v19[5] = v16;
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v16 + 24) = sub_100A35A60;
    *(_QWORD *)(v16 + 32) = v19;
    swift_retain();
    swift_retain();
    v22 = sub_10004BA30(v20, v21);
    __chkstk_darwin(v22);
    *(&v25 - 2) = v9;
    *(&v25 - 1) = v16;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100A35A6C);
    sub_100A3CF60(0);
    swift_release();
  }
  v23 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v23);
}

uint64_t sub_100AC75EC(void *a1)
{
  NSString v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyPushNotifications);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(a1, "dictionaryForBagKey:", v2, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v3)
  {
    v16 = 0;
    v17 = 0;
    goto LABEL_14;
  }
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v14 = 0x6D6E6F7269766E65;
  v15 = 0xEB00000000746E65;
  AnyHashable.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_10079C294((uint64_t)&v16), (v6 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10004FF2C((uint64_t)&v16);
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_10004FF60((uint64_t)&v18, &qword_1011D7160);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v14, &v18, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_13:
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(APSEnvironmentProduction);
    v17 = v11;
    goto LABEL_14;
  }
  v8 = v14;
  v7 = v15;
  v9 = (void *)objc_opt_self(APSConnection);
  v10 = String._bridgeToObjectiveC()();
  LODWORD(v9) = objc_msgSend(v9, "isValidEnvironment:", v10);

  if (!(_DWORD)v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = v8;
  v17 = v7;
LABEL_14:
  v12 = sub_100007E8C(&qword_1011D8328);
  return CheckedContinuation.resume(returning:)(&v16, v12);
}

id PushNotificationObserver.__allocating_init()()
{
  objc_class *v0;
  uint64_t v1;
  double v2;
  objc_super v4;

  v1 = swift_allocObject(v0, 160, 15);
  swift_defaultActor_initialize(v1);
  swift_retain();
  *(_QWORD *)(v1 + 112) = sub_100A13B64((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_QWORD *)(v1 + 152) = 0;
  *(_QWORD *)&v2 = swift_release().n128_u64[0];
  v4.receiver = (id)v1;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, "init", v2);
}

id PushNotificationObserver.init()()
{
  uint64_t v0;
  objc_super v2;

  swift_defaultActor_initialize(v0);
  swift_retain();
  *(_QWORD *)(v0 + 112) = sub_100A13B64((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_QWORD *)(v0 + 152) = 0;
  swift_release();
  v2.receiver = (id)v0;
  v2.super_class = (Class)type metadata accessor for PushNotificationObserver();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for PushNotificationObserver()
{
  return objc_opt_self(_TtC9MusicCore24PushNotificationObserver);
}

uint64_t PushNotificationObserver.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10056C188(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t PushNotificationObserver.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10056C188(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t SequentialVocalCommandsFilter.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = type metadata accessor for UUID(0);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PushNotificationObserver.RegisteredHandler(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for PushNotificationObserver.RegisteredHandler(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AC7CF4);
}

uint64_t sub_100AC7CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AC7D7C);
}

uint64_t sub_100AC7D7C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100AC7DF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100EE1688;
  v4[1] = (char *)&value witness table for () + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100AC7E70(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100AC7F20 + 4 * byte_100EE15F0[(v7 - 1)]))();
}

void sub_100AC7F70(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for PushNotificationObserver.UncheckedSendableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PushNotificationObserver.UncheckedSendableWrapper);
}

uint64_t _s5SuiteOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s5SuiteOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushNotificationObserver.PushConfiguration()
{
  return &type metadata for PushNotificationObserver.PushConfiguration;
}

ValueMetadata *type metadata accessor for PushNotificationObserver.Connection()
{
  return &type metadata for PushNotificationObserver.Connection;
}

uint64_t sub_100AC81F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100AC8230()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100AC826C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1011D8144);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10005AEE4;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch(sub_100AC69D4, 0, 0);
}

unint64_t sub_100AC82E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D8318;
  if (!qword_1011D8318)
  {
    v1 = type metadata accessor for PushNotificationObserver();
    result = swift_getWitnessTable(&protocol conformance descriptor for PushNotificationObserver, v1);
    atomic_store(result, (unint64_t *)&qword_1011D8318);
  }
  return result;
}

void *sub_100AC8328(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100AC8354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_100007E8C(&qword_1011D8328);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_100AC83B8(void *a1)
{
  sub_100007E8C(&qword_1011D8328);
  return sub_100AC75EC(a1);
}

uint64_t sub_100AC83F8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AC841C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t MPCPlaybackEngine.Configuration.playerID.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void *MPCPlaybackEngine.Configuration.fallbackPlaybackIntent.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = a4;
  return a4;
}

uint64_t sub_100AC84A8(uint64_t a1, uint64_t a2)
{
  return _sSo17MPCPlaybackEngineC9MusicCoreE13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
}

_UNKNOWN **static MPCPlaybackEngine.Option.allCases.getter()
{
  return &off_1010E7938;
}

void sub_100AC84D0(_QWORD *a1@<X8>)
{
  *a1 = &off_1010E7960;
}

id MPCPlaybackEngine.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  NSString v7;
  id v8;
  id v9;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithPlayerID:", v7);

  v9 = v8;
  sub_100ACB31C(a3, (uint64_t)a4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t MPCPlaybackEngine.configuration.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = v0;
  v2 = objc_msgSend(v1, "playerID");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  sub_100ACB238(v1);
  v4 = objc_msgSend(v1, "fallbackPlaybackIntent");

  return v3;
}

void MPCPlaybackEngine.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_100ACB31C(a3, (uint64_t)a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void (*MPCPlaybackEngine.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1;
  v5 = objc_msgSend(v4, "playerID");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = sub_100ACB238(v4);
  v10 = objc_msgSend(v4, "fallbackPlaybackIntent");

  *v3 = v6;
  v3[1] = v8;
  v3[2] = v9;
  v3[3] = v10;
  return sub_100AC871C;
}

void sub_100AC871C(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = v3;
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    sub_100ACB31C(v5, (uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v3 = (void *)v2[3];
  }
  else
  {
    sub_100ACB31C(*(_QWORD *)(*(_QWORD *)a1 + 16), (uint64_t)v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v2);
}

void sub_100AC87B8()
{
  Swift::Int v0;
  id v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v0 = sub_100A4B85C((uint64_t)&off_1010E5878);
  v1 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setLabel:", v2);

  v3 = (void *)objc_opt_self(MPModelSong);
  v4 = v1;
  v5 = objc_msgSend(v3, "kindWithVariants:", 3);
  objc_msgSend(v4, "setItemKind:", v5);

  v6 = objc_msgSend(v4, "playbackIntentWithStartItemIdentifiers:", 0);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v8, "setShuffleMode:", 1);

  }
  static MPCPlaybackEngine.Configuration.systemMusic = 0x636973754DLL;
  *(_QWORD *)algn_10124E288 = 0xE500000000000000;
  qword_10124E290 = v0;
  unk_10124E298 = v7;
}

uint64_t *MPCPlaybackEngine.Configuration.systemMusic.unsafeMutableAddressor()
{
  if (qword_1011D1E28 != -1)
    swift_once(&qword_1011D1E28, sub_100AC87B8);
  return &static MPCPlaybackEngine.Configuration.systemMusic;
}

uint64_t static MPCPlaybackEngine.Configuration.systemMusic.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (qword_1011D1E28 != -1)
    swift_once(&qword_1011D1E28, sub_100AC87B8);
  v0 = static MPCPlaybackEngine.Configuration.systemMusic;
  v1 = (void *)unk_10124E298;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = v1;
  return v0;
}

void *MPCPlayerRequestTracklistRange.nowPlayingItem.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.nowPlayingItem;
}

void *MPCPlayerRequestTracklistRange.nextPlayingItem.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.nextPlayingItem;
}

void *MPCPlayerRequestTracklistRange.upNextPlayingItems.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.upNextPlayingItems;
}

uint64_t static MPCPlayerRequestTracklistRange.upNextPlayingItems.getter()
{
  return 0;
}

BOOL static MPCPlayerRequestTracklistRange.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_100AC89F8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void MPCPlayerRequestTracklistRange.hash(into:)(int a1, Swift::UInt a2, Swift::UInt a3)
{
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
}

Swift::Int MPCPlayerRequestTracklistRange.hashValue.getter(Swift::UInt a1, Swift::UInt a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_100AC8A9C()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100AC8AF4()
{
  Swift::UInt *v0;
  Swift::UInt v1;

  v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_100AC8B2C(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_100AC8B80()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  Class isa;
  Class v7;
  id v8;
  uint64_t v9;

  v0 = sub_100007E8C((uint64_t *)&unk_1011D6870);
  inited = swift_initStackObject(v0, &v9);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)objc_opt_self(MPPropertySet);
  *(_QWORD *)(inited + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v3, "emptyPropertySet");
  sub_100A135A0(inited);
  v5 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10004A07C(0, (unint64_t *)&qword_1011D6EB0, MPPropertySet_ptr);
  v7 = Dictionary._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v5, "initWithProperties:relationships:", isa, v7, swift_bridgeObjectRelease().n128_f64[0]);

  static MPCPlayerResponse.playStateSectionProperties = (uint64_t)v8;
}

uint64_t *MPCPlayerResponse.playStateSectionProperties.unsafeMutableAddressor()
{
  if (qword_1011D1E30 != -1)
    swift_once(&qword_1011D1E30, sub_100AC8B80);
  return &static MPCPlayerResponse.playStateSectionProperties;
}

id static MPCPlayerResponse.playStateSectionProperties.getter()
{
  if (qword_1011D1E30 != -1)
    swift_once(&qword_1011D1E30, sub_100AC8B80);
  return (id)static MPCPlayerResponse.playStateSectionProperties;
}

id sub_100AC8D58()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D8330);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = (char *)&v23 - v7;
  v9 = objc_msgSend(v1, "tracklist", v6);
  v10 = objc_msgSend(v9, "playingItem");

  if (!v10)
    return 0;
  v11 = objc_msgSend(v10, "metadataObject");

  if (v11)
  {
    v12 = objc_msgSend(v1, "tracklist");
    v13 = objc_msgSend(v12, "playingItemIndexPath");

    if (v13)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v13);

      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 0, 1, v14);
    }
    else
    {
      v14 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    }
    sub_100ACB9A8((uint64_t)v4, (uint64_t)v8);
    type metadata accessor for IndexPath(0);
    v16 = *(_QWORD *)(v14 - 8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v14);
    if ((_DWORD)v17 != 1)
    {
      v19 = IndexPath.section.getter(v17);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v14);
      v20 = objc_msgSend(v1, "tracklist");
      v21 = objc_msgSend(v20, "items");

      v22 = objc_msgSend(v21, "sectionAtIndex:", v19);
      v15 = objc_msgSend(v22, "metadataObject");

      objc_msgSend(v1, "state");
      return v15;
    }

    sub_100ACB3F4((uint64_t)v8);
    return 0;
  }
  return 0;
}

uint64_t MPCPlayerResponse.playState(for:in:)(void *a1, void *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unsigned __int8 v20;

  v4 = sub_100AC8D58();
  if (!v5)
    return 0;
  v7 = v4;
  v8 = v5;
  v9 = v6;
  v10 = objc_msgSend(v5, "identifiers");
  v11 = objc_msgSend(a1, "identifiers");
  v12 = objc_msgSend(v10, "intersectsSet:", v11);

  if (!v12)
    goto LABEL_9;
  if (v7)
  {
    if (!a2)
    {

      return 0;
    }
    v13 = a2;
    v14 = v7;
    v15 = v13;
    v7 = v14;
    if (objc_msgSend(v7, "type") != (id)2
      || (v16 = objc_msgSend(v7, "album")) == 0)
    {

      goto LABEL_14;
    }
    v17 = v16;
    v18 = objc_msgSend(v16, "identifiers");
    v19 = objc_msgSend(v15, "identifiers");
    v20 = objc_msgSend(v18, "intersectsSet:", v19);

    if ((v20 & 1) != 0)
    {

      return v9;
    }
LABEL_9:

LABEL_14:
    return 0;
  }

  if (a2)
    return 0;
  return v9;
}

{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  unsigned __int8 v19;

  v4 = sub_100AC8D58();
  if (v5)
  {
    v7 = v4;
    v8 = v5;
    v9 = v6;
    v10 = objc_msgSend(v5, "innermostModelObject");
    v11 = objc_msgSend(v10, "identifiers");

    v12 = objc_msgSend(v8, "identifiers");
    v13 = objc_msgSend(v11, "unionSet:", v12);

    v14 = objc_msgSend(a1, "identifiers");
    LODWORD(v12) = objc_msgSend(v13, "intersectsSet:", v14);

    if ((_DWORD)v12)
    {
      if (!v7)
      {
        v9 = 0;
        v7 = v8;
        goto LABEL_12;
      }
      v7 = v7;
      if (objc_msgSend(v7, "type") != (id)4
        || (v15 = objc_msgSend(v7, "playlist")) == 0)
      {

        goto LABEL_11;
      }
      v16 = v15;
      v17 = objc_msgSend(v15, "identifiers");
      v18 = objc_msgSend(a2, "identifiers");
      v19 = objc_msgSend(v17, "intersectsSet:", v18);

      if ((v19 & 1) != 0)
      {

        v7 = v8;
LABEL_12:

        return v9;
      }
    }

LABEL_11:
    v9 = 0;
    goto LABEL_12;
  }
  return 0;
}

uint64_t MPCPlayerResponseItem.isLiveContent.getter()
{
  void *v0;
  unsigned __int8 v2;

  objc_msgSend(v0, "duration");
  return v2;
}

uint64_t MPCPlayerResponseTracklist.playingItemSupportsTimeSyncedLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  void *v13;
  id v14;
  void *v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  _BYTE v24[64];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D8330);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v24[-v10];
  result = (uint64_t)objc_msgSend(v1, "playingItem");
  if (result)
  {
    v13 = (void *)result;
    objc_msgSend((id)result, "duration");
    if (v24[56] == 1)
    {
LABEL_3:

      return 0;
    }
    v14 = objc_msgSend(v1, "playingItemIndexPath");
    if (v14)
    {
      v15 = v14;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
      v16(v4, v9, v5);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v16(v11, v4, v5);
        v17 = objc_msgSend(v1, "items");
        v18 = objc_msgSend(v17, "sectionAtIndex:", IndexPath.section.getter(v17));

        v19 = objc_msgSend(v18, "metadataObject");
        if (v19)
        {
          v20 = objc_msgSend(v19, "innermostModelObject");
          objc_opt_self(MPModelRadioStation);
          v21 = (void *)swift_dynamicCastObjCClass(v20);
          if (v21)
          {
            v22 = v21;
            if (objc_msgSend(v21, "type") == (id)4)
            {
              (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);

              goto LABEL_3;
            }
            v23 = objc_msgSend(v22, "subtype");

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
            if (v23 == (id)1)
              return 0;
          }
          else
          {

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
          }
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);

        }
        return 1;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    sub_100ACB3F4((uint64_t)v4);
    return 1;
  }
  return result;
}

void MPCPlayerResponseTracklist.currentPlayEvent.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;
  char v27;

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011D8330);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&aBlock[-1] - v10;
  v12 = objc_msgSend(v1, "playingItemIndexPath");
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_8;
  }
  v13 = v12;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_8:
    sub_100ACB3F4((uint64_t)v4);
    return;
  }
  v14(v11, v4, v5);
  v15 = objc_msgSend(v1, "items");
  v16 = objc_msgSend(v15, "sectionAtIndex:", IndexPath.section.getter(v15));

  v17 = objc_msgSend(v16, "metadataObject");
  if (v17)
  {
    v27 = 0;
    v18 = objc_msgSend(v17, "identifiers");
    __chkstk_darwin(v18);
    *(&v24 - 2) = (uint64_t)v17;
    *(&v24 - 1) = (uint64_t)&v27;
    v19 = objc_allocWithZone((Class)MPModelPlayEvent);
    v20 = swift_allocObject(&unk_1010F7D60, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_100ACB434;
    *(_QWORD *)(v20 + 24) = &v24 - 4;
    aBlock[4] = sub_10004D5F4;
    v26 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10004BF88;
    aBlock[3] = &unk_1010F7D78;
    v21 = _Block_copy(aBlock);
    v22 = objc_msgSend(v19, "initWithIdentifiers:block:", v18, v21, swift_retain(v20).n128_f64[0]);

    _Block_release(v21);
    swift_release(v26);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 0, 0, 0, 1);

    v23 = swift_release(v20);
    if ((v18 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v11, v5, v23);
      if (v27 == 1)

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

void sub_100AC9A0C(void *a1, void *a2, _BYTE *a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v6 = objc_opt_self(MPModelPlayEvent);
  v7 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v6, 0, 0, 0);
  v19 = a1;
  v8 = objc_msgSend(a2, "anyObject");
  v9 = v19;
  if (v8)
  {
    objc_opt_self(MPModelAlbum);
    v10 = swift_dynamicCastObjCClass(v8);
    if (v10)
    {
      v11 = v10;
      v12 = v8;
      objc_msgSend(v7, "setAlbum:", v11);
LABEL_10:

      return;
    }
    objc_opt_self(MPModelPlaylist);
    v13 = swift_dynamicCastObjCClass(v8);
    if (v13)
    {
      v14 = v13;
      v12 = v8;
      objc_msgSend(v7, "setPlaylist:", v14);
      goto LABEL_10;
    }
    objc_opt_self(MPModelArtist);
    v15 = swift_dynamicCastObjCClass(v8);
    if (v15)
    {
      v16 = v15;
      v12 = v8;
      objc_msgSend(v7, "setArtist:", v16);
      goto LABEL_10;
    }
    objc_opt_self(MPModelRadioStation);
    v17 = swift_dynamicCastObjCClass(v8);
    if (v17)
    {
      v18 = v17;
      v12 = v8;
      objc_msgSend(v7, "setRadioStation:", v18);
      goto LABEL_10;
    }

    v9 = v19;
  }

  *a3 = 1;
}

id MPCVocalsControlCommand.isTrulyActive.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, "isActive");
  if ((_DWORD)result)
    return (id)(objc_msgSend(v0, "isDisabled") ^ 1);
  return result;
}

uint64_t MPCPlayerResponse.VideoContext.__allocating_init(playerResponse:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __objc2_prot *v10;

  if (!a1)
    return 0;
  v2 = objc_msgSend(a1, "videoOutput");
  v3 = (uint64_t)v2;
  if (v2)
  {
    v10 = &OBJC_PROTOCOL___MPCVideoOutput_0;
    v4 = swift_dynamicCastObjCProtocolConditional(v2, 1, &v10);
    if (v4)
    {
      v5 = (void *)v4;
      ObjectType = swift_getObjectType();
      v7 = sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
      if (!swift_dynamicCastMetatype(ObjectType, v7))
        v5 = 0;
      if (v5)
      {
        v8 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
        v3 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
        MPCPlayerResponse.VideoContext.init(output:)(v5);
        goto LABEL_8;
      }
    }
    swift_unknownObjectRelease(v3);

    return 0;
  }
LABEL_8:

  return v3;
}

uint64_t MPCPlayerResponse.VideoContext.__allocating_init(output:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  MPCPlayerResponse.VideoContext.init(output:)(a1);
  return v3;
}

uint64_t MPCPlayerResponse.VideoContext.init(output:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[112];
  _QWORD v26[4];
  _BYTE v27[24];

  v2 = v1;
  v3 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output) = a1;
  v4 = a1;
  objc_msgSend(v4, "videoBounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_beginAccess(v2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, v27, 33, 0);
  v26[0] = v6;
  v26[1] = v8;
  v26[2] = v10;
  v26[3] = v12;
  _s3__C6CGRectVMa_0(0);
  Published.init(initialValue:)(v26, v13);
  swift_endAccess(v27);
  v14 = objc_msgSend(v4, "isReadyForDisplay");
  swift_beginAccess(v2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, v26, 33, 0);
  v27[0] = v14;
  Published.init(initialValue:)(v27, &type metadata for Bool);
  swift_endAccess(v26);
  v15 = sub_100007E8C(&qword_1011D61C0);
  inited = swift_initStackObject(v15, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  KeyPath = swift_getKeyPath(&unk_100EE1748);
  *(_QWORD *)(inited + 56) = sub_100007E8C(&qword_1011D8360);
  *(_QWORD *)(inited + 64) = &protocol witness table for KeyValueObservationTrigger<A, B>;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = KeyPath;
  v18 = swift_getKeyPath(&unk_100EE1778);
  *(_QWORD *)(inited + 96) = sub_100007E8C(&qword_1011D8368);
  *(_QWORD *)(inited + 104) = &protocol witness table for KeyValueObservationTrigger<A, B>;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = v18;
  v19 = swift_allocObject(&unk_1010F7DB0, 24, 7);
  swift_weakInit(v19 + 16, v2);
  v20 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v20, 48, 7);
  v21 = v4;
  v22 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 0, (uint64_t)sub_100ACB540, v19);
  v23 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v22;
  swift_release(v23);
  return v2;
}

uint64_t property wrapper backing initializer of MPCPlayerResponse.VideoContext.videoBounds(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD v6[4];

  *(double *)v6 = a1;
  *(double *)&v6[1] = a2;
  *(double *)&v6[2] = a3;
  *(double *)&v6[3] = a4;
  _s3__C6CGRectVMa_0(0);
  return Published.init(initialValue:)(v6, v4);
}

uint64_t MPCPlayerResponse.VideoContext.videoBounds.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[4];

  KeyPath = swift_getKeyPath(&unk_100EE17A0);
  v10 = swift_getKeyPath(&unk_100EE17C8);
  *(double *)v12 = a1;
  *(double *)&v12[1] = a2;
  *(double *)&v12[2] = a3;
  *(double *)&v12[3] = a4;
  swift_retain(v4);
  return static Published.subscript.setter(v12, v4, KeyPath, v10);
}

uint64_t property wrapper backing initializer of MPCPlayerResponse.VideoContext.isReadyForDisplay(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t MPCPlayerResponse.VideoContext.isReadyForDisplay.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_100EE17E8);
  v4 = swift_getKeyPath(&unk_100EE1810);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void sub_100ACA070(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  unsigned int v13;
  uint64_t KeyPath;
  uint64_t v15;
  double Width;
  uint64_t v17;
  uint64_t v18;
  double Height;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CGRect v28;
  _BYTE v29[24];
  _BYTE v30[24];
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (id *)(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
    swift_beginAccess(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v29, 0, 0);
    objc_msgSend(*v4, "videoBounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = objc_msgSend(*v4, "isReadyForDisplay");
    KeyPath = swift_getKeyPath(&unk_100EE17A0);
    v15 = swift_getKeyPath(&unk_100EE17C8);
    static Published.subscript.getter(&v28, v3, KeyPath, v15);
    swift_release(v15);
    swift_release(KeyPath);
    v31.origin.x = v6;
    v31.origin.y = v8;
    v31.size.width = v10;
    v31.size.height = v12;
    if (!CGRectEqualToRect(v31, v28))
    {
      v32.origin.x = v6;
      v32.origin.y = v8;
      v32.size.width = v10;
      v32.size.height = v12;
      Width = CGRectGetWidth(v32);
      v17 = swift_getKeyPath(&unk_100EE17A0);
      v18 = swift_getKeyPath(&unk_100EE17C8);
      static Published.subscript.getter(&v28, v3, v17, v18);
      swift_release(v18);
      swift_release(v17);
      if (vabdd_f64(Width, CGRectGetWidth(v28)) > 1.0)
      {
        v33.origin.x = v6;
        v33.origin.y = v8;
        v33.size.width = v10;
        v33.size.height = v12;
        Height = CGRectGetHeight(v33);
        v20 = swift_getKeyPath(&unk_100EE17A0);
        v21 = swift_getKeyPath(&unk_100EE17C8);
        static Published.subscript.getter(&v28, v3, v20, v21);
        swift_release(v21);
        swift_release(v20);
        if (vabdd_f64(Height, CGRectGetHeight(v28)) > 1.0)
        {
          v22 = swift_getKeyPath(&unk_100EE17A0);
          v23 = swift_getKeyPath(&unk_100EE17C8);
          v28.origin.x = v6;
          v28.origin.y = v8;
          v28.size.width = v10;
          v28.size.height = v12;
          swift_retain(v3);
          static Published.subscript.setter(&v28, v3, v22, v23);
        }
      }
    }
    v24 = swift_getKeyPath(&unk_100EE17E8);
    v25 = swift_getKeyPath(&unk_100EE1810);
    static Published.subscript.getter(&v28, v3, v24, v25);
    swift_release(v25);
    swift_release(v24);
    if (v13 == LOBYTE(v28.origin.x))
    {
      swift_release(v3);
    }
    else
    {
      v26 = swift_getKeyPath(&unk_100EE17E8);
      v27 = swift_getKeyPath(&unk_100EE1810);
      LOBYTE(v28.origin.x) = v13;
      static Published.subscript.setter(&v28, v3, v26, v27);
    }
  }
}

uint64_t MPCPlayerResponse.VideoContext.isReadyForDisplay.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EE17E8);
  v2 = swift_getKeyPath(&unk_100EE1810);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_100ACA3C0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EE17E8);
  v5 = swift_getKeyPath(&unk_100EE1810);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100ACA43C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EE17E8);
  v5 = swift_getKeyPath(&unk_100EE1810);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void (*MPCPlayerResponse.VideoContext.isReadyForDisplay.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EE17E8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EE1810);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, &qword_1011D8370);
}

uint64_t MPCPlayerResponse.VideoContext.$isReadyForDisplay.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011D8378, &OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, &qword_1011D8370);
}

void (*MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011D8378);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C(&qword_1011D8370);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

double MPCPlayerResponse.VideoContext.videoBounds.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100EE17A0);
  v2 = swift_getKeyPath(&unk_100EE17C8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_100ACA698@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  _OWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EE17A0);
  v5 = swift_getKeyPath(&unk_100EE17C8);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)v8;
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_100ACA714(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EE17A0);
  v6 = swift_getKeyPath(&unk_100EE17C8);
  v9 = v8;
  v10 = v2;
  v11 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v9, v4, KeyPath, v6);
}

void (*MPCPlayerResponse.VideoContext.videoBounds.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EE17A0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EE17C8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t MPCPlayerResponse.VideoContext.$videoBounds.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, &qword_1011D8380);
}

uint64_t sub_100ACA828(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = sub_100007E8C(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t MPCPlayerResponse.VideoContext.$videoBounds.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011D8388, &OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, &qword_1011D8380);
}

uint64_t sub_100ACA8A8(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE v16[24];

  v8 = sub_100007E8C(a2);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  swift_beginAccess(v4 + *a3, v16, 33, 0);
  v13 = sub_100007E8C(a4);
  Published.projectedValue.setter(v12, v13);
  swift_endAccess(v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

void (*MPCPlayerResponse.VideoContext.$videoBounds.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011D8388);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C(&qword_1011D8380);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

void sub_100ACAA48(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id MPCPlayerResponse.VideoContext.output.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v3, 0, 0);
  return *v1;
}

void MPCPlayerResponse.VideoContext.output.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MPCPlayerResponse.VideoContext.output.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t MPCPlayerResponse.VideoContext.description.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v5;
  uint64_t v7;
  _QWORD v8[3];
  unint64_t v9;
  unint64_t v10;

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000026;
  v10 = 0x8000000100E4FED0;
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v8, 0, 0);
  v2 = *v1;
  ObjectType = swift_getObjectType();
  v7 = v2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
  v5._countAndFlagsBits = sub_1009AD19C((uint64_t)&v7, ObjectType, WitnessTable);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MPCPlayerResponse.VideoContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v2 = sub_100007E8C(&qword_1011D8370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v4 = sub_100007E8C(&qword_1011D8380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return v0;
}

uint64_t MPCPlayerResponse.VideoContext.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v2 = sub_100007E8C(&qword_1011D8370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v4 = sub_100007E8C(&qword_1011D8380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_100ACAE34()
{
  return MPCPlayerResponse.VideoContext.description.getter();
}

uint64_t sub_100ACAE54(uint64_t *a1, uint64_t *a2)
{
  return _sSo17MPCPlayerResponseC9MusicCoreE12VideoContextC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t MPCPlayerResponse.videoContext.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __objc2_prot *v10;

  v1 = v0;
  v2 = objc_msgSend(v1, "videoOutput");
  v3 = (uint64_t)v2;
  if (v2)
  {
    v10 = &OBJC_PROTOCOL___MPCVideoOutput_0;
    v4 = swift_dynamicCastObjCProtocolConditional(v2, 1, &v10);
    if (!v4)
      goto LABEL_8;
    v5 = (void *)v4;
    ObjectType = swift_getObjectType();
    v7 = sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
    if (!swift_dynamicCastMetatype(ObjectType, v7))
      v5 = 0;
    if (!v5)
    {
LABEL_8:
      swift_unknownObjectRelease(v3);

      return 0;
    }
    v8 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
    v3 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    MPCPlayerResponse.VideoContext.init(output:)(v5);
  }

  return v3;
}

uint64_t _sSo17MPCPlaybackEngineC9MusicCoreE13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, Swift::Int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  char v12;
  uint64_t result;
  id v14;
  id v15;
  char v16;

  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
  {
    if ((sub_100AA4880(a3, a7) & 1) != 0)
    {
      if (a4)
      {
        if (a8)
        {
          sub_10004A07C(0, (unint64_t *)&unk_1011D8520, MPCPlaybackIntent_ptr);
          v14 = a8;
          v15 = a4;
          v16 = static NSObject.== infix(_:_:)(v15, v14);

          if ((v16 & 1) != 0)
            return 1;
        }
      }
      else if (!a8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _sSo17MPCPlayerResponseC9MusicCoreE12VideoContextC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGRect v24;
  _BYTE v25[24];
  _BYTE v26[24];
  CGRect v27;

  sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
  v4 = (void **)(a1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(a1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v26, 0, 0);
  v5 = *v4;
  v6 = (void **)(a2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(a2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v25, 0, 0);
  v7 = *v6;
  v8 = v5;
  v9 = v7;
  v10 = static NSObject.== infix(_:_:)(v8, v9);

  if ((v10 & 1) == 0)
    return 0;
  KeyPath = swift_getKeyPath(&unk_100EE17A0);
  v12 = swift_getKeyPath(&unk_100EE17C8);
  static Published.subscript.getter(&v24, a1, KeyPath, v12);
  swift_release();
  swift_release();
  x = v24.origin.x;
  y = v24.origin.y;
  width = v24.size.width;
  height = v24.size.height;
  v17 = swift_getKeyPath(&unk_100EE17A0);
  v18 = swift_getKeyPath(&unk_100EE17C8);
  static Published.subscript.getter(&v24, a2, v17, v18);
  swift_release();
  swift_release();
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  result = CGRectEqualToRect(v27, v24);
  if (!(_DWORD)result)
    return result;
  v20 = swift_getKeyPath(&unk_100EE17E8);
  v21 = swift_getKeyPath(&unk_100EE1810);
  static Published.subscript.getter(&v24, a1, v20, v21);
  swift_release();
  swift_release();
  if (LOBYTE(v24.origin.x) != 1)
    return 0;
  v22 = swift_getKeyPath(&unk_100EE17E8);
  v23 = swift_getKeyPath(&unk_100EE1810);
  static Published.subscript.getter(&v24, a2, v22, v23);
  swift_release();
  swift_release();
  return LOBYTE(v24.origin.x);
}

void *sub_100ACB238(void *a1)
{
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  void *v8;

  v8 = &_swiftEmptySetSingleton;
  if (objc_msgSend(a1, "isSystemMusicApplication"))
    sub_100AAB5A8(&v3, 0);
  if (objc_msgSend(a1, "isAudioAnalyzerEnabled"))
    sub_100AAB5A8(&v4, 1u);
  if (objc_msgSend(a1, "isPictureInPictureSupported"))
    sub_100AAB5A8(&v5, 2u);
  if (objc_msgSend(a1, "isVideoSupported"))
    sub_100AAB5A8(&v6, 3u);
  if (objc_msgSend(a1, "isStateRestorationSupported"))
    sub_100AAB5A8(&v7, 4u);
  return v8;
}

id sub_100ACB31C(uint64_t a1, uint64_t a2)
{
  void *v2;

  objc_msgSend(v2, "setSystemMusicApplication:", sub_10075C720(0, a1));
  objc_msgSend(v2, "setAudioAnalyzerEnabled:", sub_10075C720(1u, a1));
  objc_msgSend(v2, "setPictureInPictureSupported:", sub_10075C720(2u, a1));
  objc_msgSend(v2, "setVideoSupported:", sub_10075C720(3u, a1));
  objc_msgSend(v2, "setStateRestorationSupported:", sub_10075C720(4u, a1));
  return objc_msgSend(v2, "setFallbackPlaybackIntent:", a2);
}

uint64_t sub_100ACB3F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011D8330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100ACB434(void *a1)
{
  uint64_t v1;

  sub_100AC9A0C(a1, *(void **)(v1 + 16), *(_BYTE **)(v1 + 24));
}

uint64_t sub_100ACB43C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100ACB44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100ACB45C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for MPCPlayerResponse.VideoContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1011D83D8;
  if (!qword_1011D83D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MPCPlayerResponse.VideoContext);
  return result;
}

const char *sub_100ACB4A0()
{
  return "isReadyForDisplay";
}

id sub_100ACB4AC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isReadyForDisplay");
  *a2 = (_BYTE)result;
  return result;
}

const char *sub_100ACB4DC()
{
  return "videoBounds";
}

id sub_100ACB4E8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*a1, "videoBounds");
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_100ACB51C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100ACB540()
{
  uint64_t v0;

  sub_100ACA070(v0);
}

unint64_t sub_100ACB55C()
{
  unint64_t result;

  result = qword_1011D8390;
  if (!qword_1011D8390)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPCPlaybackEngine.Option, &type metadata for MPCPlaybackEngine.Option);
    atomic_store(result, (unint64_t *)&qword_1011D8390);
  }
  return result;
}

unint64_t sub_100ACB5A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D8398;
  if (!qword_1011D8398)
  {
    v1 = sub_100044B54(&qword_1011D83A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011D8398);
  }
  return result;
}

unint64_t sub_100ACB5F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D83A8;
  if (!qword_1011D83A8)
  {
    type metadata accessor for MPCPlayerRequestTracklistRange(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MPCPlayerRequestTracklistRange, v1);
    atomic_store(result, (unint64_t *)&qword_1011D83A8);
  }
  return result;
}

void _s13ConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));

}

_QWORD *_s13ConfigurationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *_s13ConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a1[3];
  v7 = (void *)a2[3];
  a1[3] = v7;
  v8 = v7;

  return a1;
}

_QWORD *_s13ConfigurationVwta(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for MPCPlaybackEngine.Configuration()
{
  return &type metadata for MPCPlaybackEngine.Configuration;
}

uint64_t _s6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100ACB7DC + 4 * byte_100EE16F5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100ACB810 + 4 * asc_100EE16F0[v4]))();
}

uint64_t sub_100ACB810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ACB818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ACB820);
  return result;
}

uint64_t sub_100ACB82C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ACB834);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100ACB838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ACB840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPCPlaybackEngine.Option()
{
  return &type metadata for MPCPlaybackEngine.Option;
}

uint64_t sub_100ACB85C()
{
  return type metadata accessor for MPCPlayerResponse.VideoContext(0);
}

void sub_100ACB864(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_100ACB900();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100ACB954(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = &unk_100EE1A08;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_100ACB900()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011D83E8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011D83E8);
  }
}

void sub_100ACB954(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011D83F0)
  {
    _s3__C6CGRectVMa_0(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011D83F0);
  }
}

uint64_t sub_100ACB9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011D8330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Player.SnapshotController.windowScene.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t Player.SnapshotController.player.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 24));
}

uint64_t Player.SnapshotController.__allocating_init(windowScene:player:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 81, 7);
  Player.SnapshotController.init(windowScene:player:)(a1, a2);
  return v5;
}

uint64_t Player.SnapshotController.init(windowScene:player:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString *v18;
  NSString *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v34[72];
  _BYTE v35[72];
  _BYTE v36[112];
  _BYTE v37[32];

  v3 = v2;
  v6 = v2 + 16;
  v7 = swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 80) = 1;
  swift_beginAccess(v7, v37, 1, 0);
  swift_unknownObjectWeakAssign(v6, a1);
  *(_QWORD *)(v3 + 24) = a2;
  v8 = sub_100007E8C((uint64_t *)&unk_1011D6EE0);
  v9 = swift_allocObject(v8, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EA7AD0;
  v10 = sub_100007E8C(&qword_1011D61C0);
  inited = swift_initStackObject(v10, v36);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  UIScreen.Dimensions.size.getter(UISceneDidEnterBackgroundNotification);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v13;
  UIScreen.Dimensions.size.getter(UISceneWillEnterForegroundNotification);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = v15;
  v16 = swift_allocObject(&unk_1010F7F58, 24, 7);
  swift_weakInit(v16 + 16, v3);
  v17 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v17, 48, 7);
  swift_retain();
  v18 = UISceneDidEnterBackgroundNotification;
  v19 = UISceneWillEnterForegroundNotification;
  *(_QWORD *)(v9 + 32) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_100ACBE28, v16);
  v20 = swift_initStackObject(v10, v35);
  *(_OWORD *)(v20 + 16) = xmmword_100EA7AA0;
  UIScreen.Dimensions.size.getter(UIScreenBrightnessDidChangeNotification);
  *(_QWORD *)(v20 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v20 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v20 + 32) = v21;
  *(_QWORD *)(v20 + 40) = v22;
  v23 = swift_allocObject(&unk_1010F7F58, 24, 7);
  swift_weakInit(v23 + 16, v3);
  swift_allocObject(v17, 48, 7);
  v24 = UIScreenBrightnessDidChangeNotification;
  *(_QWORD *)(v9 + 40) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v20, 1, (uint64_t)sub_100ACC414, v23);
  v25 = swift_initStackObject(v10, v34);
  *(_OWORD *)(v25 + 16) = xmmword_100EA7AA0;
  UIScreen.Dimensions.size.getter(UIApplicationProtectedDataDidBecomeAvailable);
  *(_QWORD *)(v25 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v25 + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v27;
  v28 = swift_allocObject(&unk_1010F7F58, 24, 7);
  swift_weakInit(v28 + 16, v3);
  swift_allocObject(v17, 48, 7);
  v29 = UIApplicationProtectedDataDidBecomeAvailable;
  v30 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v25, 1, (uint64_t)sub_100ACCA80, v28);
  *(_QWORD *)(v9 + 48) = v30;
  specialized Array._endMutation()(v30);

  swift_release();
  v31 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = v9;
  swift_bridgeObjectRelease(v31);
  return v3;
}

uint64_t sub_100ACBDB0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100ACBDD4(uint64_t a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  if (swift_weakLoadStrong(v1))
  {
    sub_100ACBE30();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100ACBE28()
{
  uint64_t v0;

  return sub_100ACBDD4(v0);
}

double sub_100ACBE30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *Strong;
  void *v18;
  id v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  int v61;
  os_log_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70[3];
  char v71[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011DB8A0);
  __chkstk_darwin(v2);
  v68 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011D8EA0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011D8608);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011D8610);
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007E8C(&qword_1011D8618);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0 + 16;
  swift_beginAccess(v16, v71, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
  if (Strong && (v18 = Strong, v19 = objc_msgSend(Strong, "activationState"), v18, v19 == (id)2))
  {
    if (*(_QWORD *)(v1 + 40))
      return result;
    if (qword_1011D1E50 != -1)
      swift_once(&qword_1011D1E50, sub_100AE78F8);
    v63 = v14;
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100048B14(v21, (uint64_t)qword_10124E2E0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      v62 = v23;
      v26 = v25;
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v24, "[📸👁️] App is backgrounded: Observing for now playing changes", v25, 2u);
      v27 = v26;
      v23 = v62;
      swift_slowDealloc(v27, -1, -1);
    }

    v28 = *(_QWORD *)(v1 + 24);
    KeyPath = swift_getKeyPath("8x4");
    v30 = swift_getKeyPath(&unk_100EE1AB0);
    static Published.subscript.getter(v70, v28, KeyPath, v30);
    swift_release();
    swift_release();
    v31 = *(void **)(v1 + 48);
    *(id *)(v1 + 48) = v70[0];

    swift_beginAccess(v28 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v70, 33, 0);
    v32 = sub_100007E8C((uint64_t *)&unk_1011D8980);
    Published.projectedValue.getter(v32);
    swift_endAccess(v70);
    v33 = sub_100049F28((unint64_t *)&qword_1011D8620, &qword_1011D8EA0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.dropFirst(_:)(1, v4, v33);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v34 = sub_100049F28(&qword_1011D8628, &qword_1011D8608, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v35 = sub_100ACD440();
    v36 = v63;
    Publisher<>.removeDuplicates()(v8, v34, v35);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v37 = sub_10004A07C(0, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr);
    v70[0] = (id)static OS_dispatch_queue.main.getter(v37, v38, v39, v40, v41, v42, v43, v44);
    v45 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v46 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v68, 1, 1, v45);
    v47 = sub_100049F28(&qword_1011D8648, &qword_1011D8610, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v48 = sub_1000EA1BC((unint64_t *)&qword_1011D8E20, (unint64_t *)&qword_1011D6190, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v49 = v65;
    v50 = v66;
    Publisher.receive<A>(on:options:)(v70, v46, v65, v37, v47, v48);
    sub_10004FF60(v46, (uint64_t *)&unk_1011DB8A0);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v49);
    v51 = swift_allocObject(&unk_1010F7F58, 24, 7);
    swift_weakInit(v51 + 16, v1);
    v52 = sub_100049F28(&qword_1011D8650, &qword_1011D8618, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v53 = v69;
    v54 = Publisher<>.sink(receiveValue:)(sub_100ACD4C4, v51, v69, v52);
    v55 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v50, v53, v55);
    *(_QWORD *)(v1 + 40) = v54;
  }
  else
  {
    if (qword_1011D1E50 != -1)
      swift_once(&qword_1011D1E50, sub_100AE78F8);
    v56 = type metadata accessor for Logger(0);
    v57 = sub_100048B14(v56, (uint64_t)qword_10124E2E0);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "[📸👁️] App is foregrounded: Stopping now playing changes observation", v60, 2u);
      swift_slowDealloc(v60, -1, -1);
    }

    v61 = *(unsigned __int8 *)(v1 + 64);
    *(_BYTE *)(v1 + 64) = 0;
    if (v61 == 1)
    {
      *(_QWORD *)(v1 + 72) = 0;
      *(_BYTE *)(v1 + 80) = 1;
    }
    *(_QWORD *)(v1 + 40) = 0;
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_100ACC414()
{
  uint64_t v0;

  return sub_100ACCA24(v0, 0);
}

void sub_100ACC430(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unsigned int v5;
  void *Strong;
  void *v7;
  id v8;
  double v9;
  double v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  NSObject *oslog;
  char v49;
  uint64_t v50;
  uint64_t v51[3];

  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v3 = (void *)objc_opt_self(UIApplication);
    v4 = objc_msgSend(v3, "sharedApplication");
    v5 = objc_msgSend(v4, "isProtectedDataAvailable");

    if (v5)
    {
      swift_beginAccess(v1 + 16, v51, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (Strong
        && (v7 = Strong,
            v8 = objc_msgSend(Strong, "screen"),
            v7,
            objc_msgSend(v8, "brightness"),
            v10 = v9,
            v8,
            v10 > 0.0))
      {
        v11 = *(unsigned __int8 *)(v1 + 64);
        *(_BYTE *)(v1 + 64) = 0;
        if (v11 == 1)
        {
          *(_QWORD *)(v1 + 72) = 0;
          *(_BYTE *)(v1 + 80) = 1;
        }
        if (qword_1011D1E50 != -1)
          swift_once(&qword_1011D1E50, sub_100AE78F8);
        v12 = type metadata accessor for Logger(0);
        v13 = sub_100048B14(v12, (uint64_t)qword_10124E2E0);
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.default.getter(v14);
        if (os_log_type_enabled(v14, v15))
        {
          v16 = swift_slowAlloc(22, -1);
          v17 = swift_slowAlloc(32, -1);
          v50 = v17;
          *(_DWORD *)v16 = 134349314;
          *(double *)(v16 + 4) = v10;
          *(_WORD *)(v16 + 12) = 2080;
          v18 = objc_msgSend(v3, "sharedApplication");
          v19 = objc_msgSend(v18, "isProtectedDataAvailable");

          if (v19)
            v20 = 0x64656B636F6C6E75;
          else
            v20 = 0x64656B636F6CLL;
          if (v19)
            v21 = (char *)0xE800000000000000;
          else
            v21 = (char *)0xE600000000000000;
          *(_QWORD *)(v16 + 14) = sub_10099627C((char *)v20, v21, &v50);
          swift_bridgeObjectRelease(v21);
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "[📸] Brightness is at %{public}f, device is %s", (uint8_t *)v16, 0x16u);
          swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v17, -1, -1);
          swift_slowDealloc(v16, -1, -1);
        }

        v23 = Logger.logObject.getter(v22);
        v24 = static os_log_type_t.default.getter(v23);
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc(12, -1);
          v26 = swift_slowAlloc(32, -1);
          v50 = v26;
          *(_DWORD *)v25 = 136446210;
          v49 = a1;
          v27 = (char *)String.init<A>(describing:)(&v49, &_s18SnapshotControllerC6ReasonON);
          v29 = v28;
          *(_QWORD *)(v25 + 4) = sub_10099627C(v27, v28, &v50);
          swift_bridgeObjectRelease(v29);
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "[📸✅:%{public}s] Taking Snapshot!", (uint8_t *)v25, 0xCu);
          swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v26, -1, -1);
          swift_slowDealloc(v25, -1, -1);
        }

        v30 = objc_msgSend(v3, "sharedApplication");
        objc_msgSend(v30, "_updateSnapshotForBackgroundApplication:", 0);

      }
      else
      {
        if (qword_1011D1E50 != -1)
          swift_once(&qword_1011D1E50, sub_100AE78F8);
        v39 = type metadata accessor for Logger(0);
        v40 = sub_100048B14(v39, (uint64_t)qword_10124E2E0);
        v41 = Logger.logObject.getter(v40);
        v42 = static os_log_type_t.default.getter(v41);
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc(12, -1);
          v44 = swift_slowAlloc(32, -1);
          v50 = v44;
          *(_DWORD *)v43 = 136446210;
          v49 = a1;
          v45 = (char *)String.init<A>(describing:)(&v49, &_s18SnapshotControllerC6ReasonON);
          v47 = v46;
          *(_QWORD *)(v43 + 4) = sub_10099627C(v45, v46, &v50);
          swift_bridgeObjectRelease(v47);
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "[📸❌:%{public}s] Skipping: Screen brightness is 0", (uint8_t *)v43, 0xCu);
          swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v44, -1, -1);
          swift_slowDealloc(v43, -1, -1);
        }

      }
    }
    else
    {
      if (qword_1011D1E50 != -1)
        swift_once(&qword_1011D1E50, sub_100AE78F8);
      v31 = type metadata accessor for Logger(0);
      v32 = sub_100048B14(v31, (uint64_t)qword_10124E2E0);
      oslog = Logger.logObject.getter(v32);
      v33 = static os_log_type_t.default.getter(oslog);
      if (os_log_type_enabled(oslog, v33))
      {
        v34 = swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v51[0] = v35;
        *(_DWORD *)v34 = 136446210;
        LOBYTE(v50) = a1;
        v36 = (char *)String.init<A>(describing:)(&v50, &_s18SnapshotControllerC6ReasonON);
        v38 = v37;
        *(_QWORD *)(v34 + 4) = sub_10099627C(v36, v37, v51);
        swift_bridgeObjectRelease(v38);
        _os_log_impl((void *)&_mh_execute_header, oslog, v33, "[📸❌:%{public}s] Skipping Snapshot Request: Device is locked", (uint8_t *)v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

      }
      else
      {

      }
    }
  }
}

double sub_100ACCA24(uint64_t a1, char a2)
{
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    sub_100ACC430(a2);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100ACCA80()
{
  uint64_t v0;

  return sub_100ACCA24(v0, 1);
}

void sub_100ACCA9C(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;

  v5 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + 48);
  v33 = v8;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v2 + 48) = a1;
    v9 = a1;

    return;
  }
  if (v8)
  {
    v10 = objc_msgSend(v8, "tracklist");
    v11 = objc_msgSend(v10, "playingItem");

    if (!a1)
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
      if (!v11)
        goto LABEL_25;
      goto LABEL_9;
    }
  }
  else
  {
    v11 = 0;
    v13 = 0;
    v14 = 0;
    if (!a1)
      goto LABEL_25;
  }
  v15 = objc_msgSend(a1, "tracklist");
  v12 = objc_msgSend(v15, "playingItem");

  if (!v11)
  {
    v13 = 0;
    v19 = 0;
    v17 = 0;
    v14 = 0;
    if (!v12)
      goto LABEL_25;
    goto LABEL_12;
  }
LABEL_9:
  v16 = objc_msgSend(v11, "contentItemIdentifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  if (!v12)
  {
    v14 = 0;
    v13 = v11;
    if (!v19)
      goto LABEL_25;
    goto LABEL_22;
  }
  v13 = v11;
LABEL_12:
  v20 = objc_msgSend(v12, "contentItemIdentifier");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (!v19)
  {
    v14 = v12;
    if (!v23)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (!v23)
  {
    v11 = v13;
LABEL_22:
    v23 = v19;
    v13 = v11;
LABEL_23:
    v24 = swift_bridgeObjectRelease(v23);
    goto LABEL_27;
  }
  if (v17 == v21 && v19 == v23)
  {
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    v14 = v12;
    goto LABEL_25;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
  swift_bridgeObjectRelease(v19);
  v24 = swift_bridgeObjectRelease(v23);
  v14 = v12;
  if ((v25 & 1) == 0)
  {
LABEL_27:
    static TaskPriority.userInitiated.getter(v24);
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 1, v26);
    v27 = swift_allocObject(&unk_1010F7F90, 32, 7);
    *(_QWORD *)(v27 + 16) = &unk_1011D8660;
    *(_QWORD *)(v27 + 24) = v2;
    swift_retain();
    v28 = static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_1011D8670, v27, (uint64_t)&type metadata for () + 8, 1.0);
    swift_release();
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011D8CF0);
    v29 = *(_QWORD *)(v2 + 56);
    *(_QWORD *)(v2 + 56) = v28;
    swift_retain();
    if (v29)
    {
      sub_100007E8C((uint64_t *)&unk_1011D67C0);
      Task.cancel()();
      swift_release();
    }
    swift_release();

    goto LABEL_31;
  }
LABEL_25:
  if ((sub_100ACCE7C(v13, v14) & 1) != 0)
  {
    v12 = v14;
    goto LABEL_27;
  }

LABEL_31:
  v30 = *(void **)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  v31 = a1;

}

double sub_100ACCE1C(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    sub_100ACCA9C(v2, 0);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100ACCE7C(void *a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  unsigned int v8;
  id v10;
  void *v11;

  if (a1)
  {
    v3 = objc_msgSend(a1, "metadataObject");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "innermostModelObject");

      if (!a2)
        goto LABEL_4;
LABEL_8:
      v10 = objc_msgSend(a2, "metadataObject");
      if (v10)
      {
        v11 = v10;
        a2 = objc_msgSend(v10, "innermostModelObject");

        if (v5)
          goto LABEL_5;
      }
      else
      {
        a2 = 0;
        if (v5)
          goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
  v5 = 0;
  if (a2)
    goto LABEL_8;
LABEL_4:
  if (v5)
  {
LABEL_5:
    if (a2)
    {
      v6 = objc_msgSend(v5, "identifiers");
      v7 = objc_msgSend(a2, "identifiers");
      v8 = objc_msgSend(v6, "intersectsSet:", v7);

      return v8 ^ 1;
    }

    return 1;
  }
LABEL_10:
  if (a2)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_100ACCFC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100ACD02C, v4, v5);
}

uint64_t sub_100ACD02C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  if ((static Task<>.isCancelled.getter(v1) & 1) == 0)
    sub_100ACD070(2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100ACD070(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t aBlock[6];

  if ((*(_BYTE *)(v1 + 64) & 1) == 0)
  {
    v2 = v1;
    *(_BYTE *)(v1 + 64) = 1;
    *(_QWORD *)(v1 + 72) = 0;
    *(_BYTE *)(v1 + 80) = 1;
    if (qword_1011D1E50 != -1)
      swift_once(&qword_1011D1E50, sub_100AE78F8);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100048B14(v4, (uint64_t)qword_10124E2E0);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      aBlock[0] = v9;
      *(_DWORD *)v8 = 136446210;
      v15 = a1;
      v10 = (char *)String.init<A>(describing:)(&v15, &_s18SnapshotControllerC6ReasonON);
      *(_QWORD *)(v8 + 4) = sub_10099627C(v10, v11, aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[📸] Set Needs Snapshot for Reason=%{public}s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }

    v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v13 = swift_allocObject(&unk_1010F7FB8, 25, 7);
    *(_QWORD *)(v13 + 16) = v2;
    *(_BYTE *)(v13 + 24) = a1;
    aBlock[4] = (uint64_t)sub_100ACD5CC;
    aBlock[5] = v13;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001DBD98;
    aBlock[3] = (uint64_t)&unk_1010F7FD0;
    v14 = _Block_copy(aBlock);
    swift_retain();
    objc_msgSend(v12, "_performBlockAfterCATransactionCommits:", v14, swift_release().n128_f64[0]);
    _Block_release(v14);

  }
}

uint64_t sub_100ACD29C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_100169E9C;
  return v5();
}

uint64_t Player.SnapshotController.deinit(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  swift_release(*(_QWORD *)(v2 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
  swift_release(*(_QWORD *)(v2 + 40));

  swift_release(*(_QWORD *)(v2 + 56));
  return v2;
}

uint64_t Player.SnapshotController.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  swift_release(*(_QWORD *)(v2 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
  swift_release(*(_QWORD *)(v2 + 40));

  swift_release(*(_QWORD *)(v2 + 56));
  return swift_deallocClassInstance(v2, 81, 7);
}

uint64_t sub_100ACD380@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

double sub_100ACD3CC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + 16;
  swift_beginAccess(v3, v5, 1, 0);
  *(_QWORD *)&result = swift_unknownObjectWeakAssign(v3, v2).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for Player.SnapshotController()
{
  return objc_opt_self(_TtCC9MusicCore6Player18SnapshotController);
}

unint64_t sub_100ACD440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011D8630;
  if (!qword_1011D8630)
  {
    v1 = sub_100044B54(&qword_1011D8D60);
    sub_1000EA1BC(&qword_1011D8638, &qword_1011D8640, MPCPlayerResponse_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011D8630);
  }
  return result;
}

double sub_100ACD4C4(void **a1)
{
  uint64_t v1;

  return sub_100ACCE1C(a1, v1);
}

uint64_t sub_100ACD4CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1011D865C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10005AEE4;
  return sub_100ACCFC0(v0);
}

uint64_t sub_100ACD514()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100ACD538(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011D866C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011D8668 + dword_1011D8668))(a1, v4);
}

uint64_t sub_100ACD5A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100ACD5CC()
{
  uint64_t v0;

  sub_100ACC430(*(_BYTE *)(v0 + 24));
}

uint64_t sub_100ACD5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100ACD604(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t _s18SnapshotControllerC6ReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100ACD658 + 4 * byte_100EE1A25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100ACD68C + 4 * byte_100EE1A20[v4]))();
}

uint64_t sub_100ACD68C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ACD694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100ACD69CLL);
  return result;
}

uint64_t sub_100ACD6A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100ACD6B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100ACD6B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100ACD6BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18SnapshotControllerC6ReasonOMa()
{
  return &_s18SnapshotControllerC6ReasonON;
}

unint64_t sub_100ACD6DC()
{
  unint64_t result;

  result = qword_1011D8678;
  if (!qword_1011D8678)
  {
    result = swift_getWitnessTable(&unk_100EE1B18, &_s18SnapshotControllerC6ReasonON);
    atomic_store(result, (unint64_t *)&qword_1011D8678);
  }
  return result;
}

uint64_t PlaybackController.insert(_:location:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[20] = v5;
  v3[21] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v3[22] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[23] = v8;
  v3[24] = v9;
  return swift_task_switch(sub_100ACD7B8, v8, v9);
}

uint64_t sub_100ACD7B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t KeyPath;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  _QWORD *v35;
  uint64_t v37;

  v3 = v1[20];
  v2 = v1[21];
  v4 = v1[19];
  v5 = UUID.init()(a1);
  v6 = (char *)UUID.uuidString.getter(v5);
  v8 = v7;
  v1[25] = v6;
  v1[26] = v7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v9 = (void *)v1[16];
  v10 = type metadata accessor for Logger(0);
  v1[27] = sub_100048B14(v10, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v8, 2);
  v11 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v14 = (void *)v1[16];
  if (v13)
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37 = v16;
    *(_DWORD *)v15 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 4) = sub_10099627C(v6, v8, &v37);
    swift_bridgeObjectRelease_n(v8, 3);
    *(_WORD *)(v15 + 12) = 2082;
    v17 = v14;
    v18 = objc_msgSend(v17, "description", v37);
    v19 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v15 + 14) = sub_10099627C(v19, v21, &v37);
    swift_bridgeObjectRelease(v21);

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "⤵️ Inserting new intent with ID=%{public}s, intent=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v8, 2);

  }
  v22 = (uint64_t *)(v1[18] + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v22, v1 + 7, 0, 0);
  v23 = *v22;
  v25 = (void *)v1[16];
  v24 = (void *)v1[17];
  if (!v23)
  {
    v31 = v25;
    sub_100149434(v24);
    goto LABEL_10;
  }
  KeyPath = swift_getKeyPath(&unk_100EE1B50);
  v27 = swift_getKeyPath(&unk_100EE1B78);
  v28 = v25;
  swift_retain(v23);
  sub_100149434(v24);
  static Published.subscript.getter(v1 + 14, v23, KeyPath, v27);
  swift_release(v27);
  swift_release(KeyPath);
  swift_release(v23);
  v29 = (void *)v1[14];
  if (!v29)
  {
LABEL_10:
    v30 = 0;
    goto LABEL_11;
  }

  v30 = 1;
LABEL_11:
  v33 = (void *)v1[16];
  v32 = (void *)v1[17];
  MPCPlaybackIntent.isInGroupSession.setter(v30);
  v1[5] = &type metadata for Player.InsertCommand;
  v1[6] = &protocol witness table for Player.InsertCommand;
  v1[2] = v33;
  v1[3] = v32;
  v34 = v33;
  sub_100149434(v32);
  v35 = (_QWORD *)swift_task_alloc(dword_1011D86AC);
  v1[28] = v35;
  *v35 = v1;
  v35[1] = sub_100ACDB04;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)(v1 + 2), 0, 0, (uint64_t)v33);
}

uint64_t sub_100ACDB04(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[23];
    v7 = v4[24];
    v8 = sub_100ACDD00;
  }
  else
  {

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 2);
    v6 = v4[23];
    v7 = v4[24];
    v8 = sub_100ACDB84;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100ACDB84()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 176));
  v1 = swift_bridgeObjectRetain();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 208);
  if (v4)
  {
    v6 = *(char **)(v0 + 200);
    v8 = *(void **)(v0 + 128);
    v7 = *(void **)(v0 + 136);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v13 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_10099627C(v6, v5, &v13);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "✅ Successfully inserted intent with ID=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    sub_100823690(v7);
  }
  else
  {
    v11 = *(void **)(v0 + 136);

    sub_100823690(v11);
    swift_bridgeObjectRelease_n(v5, 2);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ACDD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  void *v31;
  void *v32;
  unint64_t v33;
  _QWORD *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 232);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 120) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  if (!swift_dynamicCast(v0 + 80, v0 + 120, v2, &type metadata for Player.PlaybackError, 0))
  {
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(void **)(v0 + 136);

    sub_100823690(v17);
    swift_release(v16);
    swift_bridgeObjectRelease(v15);
LABEL_12:
    v36 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 232));
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 240) = v4;
  *(_QWORD *)(v0 + 248) = v3;
  v5 = (void *)_convertErrorToNSError(_:)(v4);
  v6 = objc_msgSend(v5, "code");

  if (v6 != (id)3)
  {
    swift_release(*(_QWORD *)(v0 + 176));
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain(v4);
    v18 = swift_bridgeObjectRetain();
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    v21 = os_log_type_enabled(v19, v20);
    v22 = *(char **)(v0 + 208);
    if (v21)
    {
      v23 = *(char **)(v0 + 200);
      v24 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      v37[0] = v25;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v24 + 4) = sub_10099627C(v23, v22, v37);
      swift_bridgeObjectRelease_n(v22, 3);
      *(_WORD *)(v24 + 12) = 2082;
      *(_QWORD *)(v0 + 96) = v4;
      *(_QWORD *)(v0 + 104) = v3;
      swift_errorRetain(v4);
      swift_bridgeObjectRetain();
      v26 = (char *)String.init<A>(describing:)(v0 + 96, &type metadata for Player.PlaybackError);
      v28 = v27;
      *(_QWORD *)(v24 + 14) = sub_10099627C(v26, v27, v37);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "❌ Insert failed for intent with ID=%{public}s, error=%{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 208), 2);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
    }

    v32 = *(void **)(v0 + 128);
    v31 = *(void **)(v0 + 136);
    v33 = sub_100AE26A4();
    swift_allocError(&type metadata for Player.PlaybackError, v33, 0, 0);
    *v34 = v4;
    v34[1] = v3;
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_willThrow(v35);

    sub_100823690(v31);
    swift_errorRelease(v4);
    swift_bridgeObjectRelease(v3);
    goto LABEL_12;
  }
  v7 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 208), 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(char **)(v0 + 208);
  if (v10)
  {
    v12 = *(char **)(v0 + 200);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v37[0] = v14;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v13 + 4) = sub_10099627C(v12, v11, v37);
    swift_bridgeObjectRelease_n(v11, 3);
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v13 + 14) = sub_10099627C((char *)0xD00000000000001FLL, (char *)0x8000000100E50020, v37);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "❌ Insert failed for intent with ID=%{public}s, error=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 208), 2);
  }

  v29 = (_QWORD *)swift_task_alloc(dword_1011D86C4);
  *(_QWORD *)(v0 + 256) = v29;
  *v29 = v0;
  v29[1] = sub_100ACE190;
  return sub_100AD0E00(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
}

uint64_t sub_100ACE190()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  v3 = v2[26];
  if (v0)
  {
    swift_errorRelease(v0);
    swift_bridgeObjectRelease(v3);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_100AE5304;
  }
  else
  {
    swift_bridgeObjectRelease(v2[26]);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_100ACE214;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100ACE214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 176));
  v5 = sub_100AE26E8();
  swift_allocError(&type metadata for PlaybackController.CommandError, v5, 0, 0);
  *(_QWORD *)v6 = 3;
  *(_BYTE *)(v6 + 8) = 2;
  swift_willThrow(v7);

  sub_100823690(v3);
  swift_errorRelease(v1);
  swift_bridgeObjectRelease(v2);
  v8 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaybackController.add(_:route:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  v4 = type metadata accessor for CocoaError.Code(0);
  v3[21] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[22] = v5;
  v3[23] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3[24] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[25] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[26] = swift_task_alloc(v8);
  v3[27] = swift_task_alloc(v8);
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v3[28] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[29] = swift_task_alloc(v10);
  v3[30] = swift_task_alloc(v10);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v3[31] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v12);
  v3[33] = swift_task_alloc(v12);
  v13 = type metadata accessor for UUID(0);
  v3[34] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[35] = v14;
  v3[36] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v3[37] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v3[38] = v17;
  v3[39] = v18;
  return swift_task_switch(sub_100ACE430, v17, v18);
}

uint64_t sub_100ACE430()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v51;
  uint64_t v52;

  v2 = v0[35];
  v1 = v0[36];
  v3 = v0[34];
  v4 = (uint64_t *)(v0[20] + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
  swift_beginAccess(v4, v0 + 2, 1, 0);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[4] = 0;
  v10 = sub_100AE272C(v5, v6, v7, v8, v9);
  v11 = UUID.init()(v10);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  v0[40] = v12;
  v0[41] = v13;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v15 = v0 + 5;
  v16 = v0[33];
  v17 = v0[18];
  v18 = type metadata accessor for Logger(0);
  v0[42] = v18;
  v0[43] = sub_100048B14(v18, (uint64_t)static Logger.playbackController);
  sub_10005B704(v17, v16, type metadata accessor for PlaybackIntentDescriptor);
  v19 = swift_bridgeObjectRetain_n(v14, 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v23 = v0[33];
  if (v22)
  {
    v24 = v0[31];
    v25 = v0[32];
    v26 = swift_slowAlloc(22, -1);
    v51 = (char *)v12;
    v52 = swift_slowAlloc(64, -1);
    v27 = v52;
    *(_DWORD *)v26 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v26 + 4) = sub_10099627C(v51, v14, &v52);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v26 + 12) = 2082;
    sub_10005B704(v23, v25, type metadata accessor for PlaybackIntentDescriptor);
    v28 = v25;
    v15 = v0 + 5;
    v29 = (char *)String.init<A>(describing:)(v28, v24);
    v31 = v30;
    *(_QWORD *)(v26 + 14) = sub_10099627C(v29, v30, &v52);
    swift_bridgeObjectRelease(v31);
    sub_10005B748(v23, type metadata accessor for PlaybackIntentDescriptor);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "➕ Adding new playback intent with ID=%{public}s, descriptor=%{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    v32 = v27;
    v12 = (uint64_t)v51;
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v14, 2);
    sub_10005B748(v23, type metadata accessor for PlaybackIntentDescriptor);
  }

  v33 = v0[30];
  v34 = v0[28];
  sub_10005B704(v0[18], v33, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33, v34);
  v36 = (void **)v0[30];
  if (EnumCaseMultiPayload == 1)
  {
    v37 = v0[27];
    v38 = v0[24];
    v39 = v0[25];
    v40 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v39 + 32))(v37, v36, v38);
    v41 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v40);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  }
  else
  {
    v41 = *v36;
  }
  v42 = (uint64_t *)(v0[20] + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v42, v15, 0, 0);
  v43 = *v42;
  if (!*v42)
    goto LABEL_12;
  KeyPath = swift_getKeyPath(&unk_100EE1B50);
  v45 = swift_getKeyPath(&unk_100EE1B78);
  swift_retain(v43);
  static Published.subscript.getter(v0 + 14, v46, KeyPath, v45);
  swift_release(v45);
  swift_release(KeyPath);
  swift_release(v43);
  v47 = (void *)v0[14];
  if (v47)
  {

    v48 = 1;
  }
  else
  {
LABEL_12:
    v48 = 0;
  }
  MPCPlaybackIntent.isInGroupSession.setter(v48);

  v49 = (_QWORD *)swift_task_alloc(dword_1011D86E4);
  v0[44] = v49;
  *v49 = v0;
  v49[1] = sub_100ACE7FC;
  return sub_100AD1FD0(v0[18], v12, (uint64_t)v14, v0[19]);
}

uint64_t sub_100ACE7FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100ACEF44;
  else
    v4 = sub_100ACE85C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_100ACE85C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 328), 2);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 328);
  if (v4)
  {
    v6 = *(char **)(v0 + 320);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v27 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v7 + 4) = sub_10099627C(v6, v5, &v27);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "✅ Successfully added intent with ID=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
  }

  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 144);
  _s9MusicCore9AppReviewO16recordSongPlayedyyFZ_0();
  if (*(_BYTE *)(v10 + *(int *)(v9 + 32)) == 1)
  {
    v11 = (_QWORD *)swift_task_alloc(dword_1011D86FC);
    *(_QWORD *)(v0 + 368) = v11;
    *v11 = v0;
    v11[1] = sub_100ACEB20;
    return sub_100AD6E6C();
  }
  v13 = *(_QWORD *)(v0 + 144);
  if ((*(_BYTE *)(v13 + *(int *)(*(_QWORD *)(v0 + 248) + 36)) & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 328);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 232);
    sub_10005B704(v13, v16, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v16, v15) == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));
      v17 = (_QWORD *)swift_task_alloc(async function pointer to MusicPlaybackIntentDescriptor.donate()[1]);
      *(_QWORD *)(v0 + 376) = v17;
      *v17 = v0;
      v17[1] = sub_100ACECD4;
      return MusicPlaybackIntentDescriptor.donate()();
    }
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v18);
    sub_10005B748(v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  }
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 232);
  v22 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ACEB20()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 368));
  return swift_task_switch(sub_100ACEB6C, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_100ACEB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 144);
  if ((*(_BYTE *)(v1 + *(int *)(*(_QWORD *)(v0 + 248) + 36)) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 328);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 232);
    sub_10005B704(v1, v4, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v4, v3) == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));
      v5 = (_QWORD *)swift_task_alloc(async function pointer to MusicPlaybackIntentDescriptor.donate()[1]);
      *(_QWORD *)(v0 + 376) = v5;
      *v5 = v0;
      v5[1] = sub_100ACECD4;
      return MusicPlaybackIntentDescriptor.donate()();
    }
    v7 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v7);
    sub_10005B748(v8, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  }
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ACECD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(v2[41]);
    v4 = v2[38];
    v5 = v2[39];
    v6 = sub_100ACF8B4;
  }
  else
  {
    v4 = v2[38];
    v5 = v2[39];
    v6 = sub_100ACED40;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100ACED40()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  swift_release(*(_QWORD *)(v0 + 296));
  if (qword_1011D1E48 != -1)
    swift_once(&qword_1011D1E48, sub_100AE1C50);
  sub_100048B14(*(_QWORD *)(v0 + 336), (uint64_t)static Logger.siriIntents);
  v1 = swift_bridgeObjectRetain();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 328);
  if (v4)
  {
    v6 = *(char **)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v23 = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v10 + 4) = sub_10099627C(v6, v5, &v23);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Successfully donated intent with ID=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 192);

    swift_bridgeObjectRelease_n(v5, 2);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v15 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ACEF44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  __n128 v57;
  id v58;
  os_log_type_t v59;
  _BOOL4 v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  os_log_type_t v69;
  _BOOL4 v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85[2];

  v1 = *(_QWORD *)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 296));
  *(_QWORD *)(v0 + 96) = v1;
  v2 = (_QWORD *)(v0 + 96);
  swift_errorRetain(v1);
  v3 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  if (swift_dynamicCast(v0 + 80, v0 + 96, v3, &type metadata for PlaybackController.CommandError, 0))
  {
    v4 = *(void **)(v0 + 80);
    v5 = *(unsigned __int8 *)(v0 + 88);
    if (*(_BYTE *)(v0 + 88))
    {
      if (v5 != 3)
      {
LABEL_7:
        sub_100AE275C(*(id *)(v0 + 80), v5);
        goto LABEL_8;
      }
      if (v4)
      {
        if (v4 == (void *)2)
        {
          swift_errorRelease(*v2);
          goto LABEL_9;
        }
        goto LABEL_7;
      }
      v68 = swift_bridgeObjectRetain();
      v37 = Logger.logObject.getter(v68);
      v69 = static os_log_type_t.error.getter();
      v70 = os_log_type_enabled(v37, v69);
      v71 = *(char **)(v0 + 328);
      if (v70)
      {
        v72 = *(char **)(v0 + 320);
        v73 = swift_slowAlloc(12, -1);
        v74 = swift_slowAlloc(32, -1);
        v85[0] = v74;
        *(_DWORD *)v73 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v73 + 4) = sub_10099627C(v72, v71, v85);
        swift_bridgeObjectRelease_n(v71, 3);
        _os_log_impl((void *)&_mh_execute_header, v37, v69, "❌ Intent id=%{public}s) — Missing player", (uint8_t *)v73, 0xCu);
        swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v74, -1, -1);
        swift_slowDealloc(v73, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
      }
    }
    else
    {
      sub_100AE2790(*(id *)(v0 + 80), v5);
      swift_bridgeObjectRetain();
      v36 = sub_100AE2790(v4, 0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter();
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(char **)(v0 + 328);
      if (v39)
      {
        v41 = *(char **)(v0 + 320);
        v42 = swift_slowAlloc(22, -1);
        v43 = swift_slowAlloc(64, -1);
        v85[0] = v43;
        *(_DWORD *)v42 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v42 + 4) = sub_10099627C(v41, v40, v85);
        swift_bridgeObjectRelease_n(v40, 3);
        *(_WORD *)(v42 + 12) = 2082;
        *(_QWORD *)(v0 + 128) = v4;
        sub_100AE27B4(v4);
        v44 = (char *)String.init<A>(describing:)(v0 + 128, &type metadata for PlaybackController.CommandError.AlertKind);
        v46 = v45;
        *(_QWORD *)(v42 + 14) = sub_10099627C(v44, v45, v85);
        swift_bridgeObjectRelease(v46);
        sub_100AE275C(v4, 0);
        sub_100AE275C(v4, 0);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "❌ Intent id=%{public}s) — Could not present alertKind=%{public}s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        sub_100AE275C(v4, 0);
LABEL_35:
        v75 = *v2;
LABEL_38:
        swift_errorRelease(v75);
        goto LABEL_39;
      }
      sub_100AE275C(v4, 0);
      swift_bridgeObjectRelease_n(v40, 2);
      sub_100AE275C(v4, 0);
      sub_100AE275C(v4, 0);
    }

    goto LABEL_35;
  }
LABEL_8:
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v10 = swift_errorRetain(v6);
  static CocoaError.userCancelled.getter(v10);
  v11 = sub_100048748(&qword_1011D86E8, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  v12 = static _ErrorCodeProtocol.~= infix(_:_:)(v7, v6, v9, v11);
  swift_errorRelease(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if ((v12 & 1) == 0)
  {
    v24 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 104) = v24;
    swift_errorRetain(v24);
    if (swift_dynamicCast(v0 + 64, v0 + 104, v3, &type metadata for PlaybackController.CommandError, 0))
    {
      v25 = *(void **)(v0 + 64);
      v26 = *(unsigned __int8 *)(v0 + 72);
      if (v26 == 1)
      {
        swift_bridgeObjectRetain();
        v58 = sub_100AE2790(v25, 1);
        v28 = Logger.logObject.getter(v58);
        v59 = static os_log_type_t.error.getter();
        v60 = os_log_type_enabled(v28, v59);
        v61 = *(char **)(v0 + 328);
        if (!v60)
        {
          swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
          sub_100AE275C(v25, 1);
          sub_100AE275C(v25, 1);
          goto LABEL_37;
        }
        v62 = *(char **)(v0 + 320);
        v33 = swift_slowAlloc(22, -1);
        v63 = swift_slowAlloc(64, -1);
        v85[0] = v63;
        *(_DWORD *)v33 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_10099627C(v62, v61, v85);
        swift_bridgeObjectRelease_n(v61, 3);
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        v64 = sub_100007E8C(&qword_1011D86F0);
        v65 = (char *)Array.description.getter(v25, v64);
        v67 = v66;
        sub_100AE275C(v25, 1);
        *(_QWORD *)(v33 + 14) = sub_10099627C(v65, v67, v85);
        swift_bridgeObjectRelease(v67);
        sub_100AE275C(v25, 1);
        sub_100AE275C(v25, 1);
        _os_log_impl((void *)&_mh_execute_header, v28, v59, "❌ Intent id=%{public}s) — Could not produce playback commands=%{public}s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
        v35 = v63;
LABEL_29:
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v33, -1, -1);
LABEL_37:

        v75 = *(_QWORD *)(v0 + 104);
        goto LABEL_38;
      }
      if (v26 == 3 && v25 == (void *)1)
      {
        v27 = swift_bridgeObjectRetain();
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.error.getter();
        v30 = os_log_type_enabled(v28, v29);
        v31 = *(char **)(v0 + 328);
        if (!v30)
        {
          swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
          goto LABEL_37;
        }
        v32 = *(char **)(v0 + 320);
        v33 = swift_slowAlloc(12, -1);
        v34 = swift_slowAlloc(32, -1);
        v85[0] = v34;
        *(_DWORD *)v33 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_10099627C(v32, v31, v85);
        swift_bridgeObjectRelease_n(v31, 3);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "❌ Intent id=%{public}s) — Could not playback, subscription needed", (uint8_t *)v33, 0xCu);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        v35 = v34;
        goto LABEL_29;
      }
      sub_100AE275C(*(id *)(v0 + 64), v26);
    }
    v47 = *(_QWORD *)(v0 + 360);
    swift_errorRelease(*(_QWORD *)(v0 + 104));
    swift_errorRetain(v47);
    swift_bridgeObjectRetain();
    v48 = swift_errorRetain(v47);
    v14 = Logger.logObject.getter(v48);
    v49 = static os_log_type_t.error.getter();
    v50 = os_log_type_enabled(v14, v49);
    v51 = *(_QWORD *)(v0 + 360);
    v52 = *(char **)(v0 + 328);
    if (!v50)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
      swift_errorRelease(v51);
      swift_errorRelease(v51);
      goto LABEL_25;
    }
    v53 = *(char **)(v0 + 320);
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    v85[0] = v20;
    *(_DWORD *)v19 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_10099627C(v53, v52, v85);
    swift_bridgeObjectRelease_n(v52, 3);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 120) = v51;
    swift_errorRetain(v51);
    v54 = (char *)String.init<A>(describing:)(v0 + 120, v3);
    v56 = v55;
    *(_QWORD *)(v19 + 14) = sub_10099627C(v54, v55, v85);
    swift_bridgeObjectRelease(v56);
    swift_errorRelease(v51);
    swift_errorRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v14, v49, "❌ Intent id=%{public}s) — Failed to add with error=%{public}s", (uint8_t *)v19, 0x16u);
    v21 = (char *)&type metadata for Any + 8;
    v22 = v20;
    v23 = 2;
    goto LABEL_23;
  }
LABEL_9:
  v13 = swift_bridgeObjectRetain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(char **)(v0 + 328);
  if (v16)
  {
    v18 = *(char **)(v0 + 320);
    v19 = swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v85[0] = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_10099627C(v18, v17, v85);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "❌ Intent id=%{public}s) — User cancelled", (uint8_t *)v19, 0xCu);
    v21 = (char *)&type metadata for Any + 8;
    v22 = v20;
    v23 = 1;
LABEL_23:
    swift_arrayDestroy(v22, v23, v21);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
LABEL_25:

LABEL_39:
  v76 = *(_QWORD *)(v0 + 288);
  v78 = *(_QWORD *)(v0 + 256);
  v77 = *(_QWORD *)(v0 + 264);
  v80 = *(_QWORD *)(v0 + 232);
  v79 = *(_QWORD *)(v0 + 240);
  v82 = *(_QWORD *)(v0 + 208);
  v81 = *(_QWORD *)(v0 + 216);
  v83 = *(_QWORD *)(v0 + 184);
  swift_willThrow(v57);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ACF8B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  swift_release(*(_QWORD *)(v0 + 296));
  if (qword_1011D1E48 != -1)
    swift_once(&qword_1011D1E48, sub_100AE1C50);
  v1 = *(_QWORD *)(v0 + 384);
  sub_100048B14(*(_QWORD *)(v0 + 336), (uint64_t)static Logger.siriIntents);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 192);
  if (v5)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v24 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 136) = v6;
    swift_errorRetain(v6);
    v12 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v13 = (char *)String.init<A>(describing:)(v0 + 136, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_10099627C(v13, v14, &v24);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Donation error=%{public}s)", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
  }
  swift_errorRelease(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v16 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100ACFAE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  void *v41;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_10004A07C(0, &qword_1011D8A08, UISceneSession_ptr);
    v7 = sub_100AE4C84();
    v8 = Set.Iterator.init(_cocoa:)(v40, v5, v6, v7);
    v3 = v40[0];
    v37 = v40[1];
    v9 = v40[2];
    v10 = v40[3];
    v11 = v40[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v37 = a1 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v9 = v13;
    v10 = 0;
  }
  v35 = v9;
  v36 = (unint64_t)(v9 + 64) >> 6;
  v38 = *a2;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v16 = __CocoaSet.Iterator.next()(v8);
  if (!v16)
    goto LABEL_39;
  v17 = v16;
  v39 = v16;
  v18 = sub_10004A07C(0, &qword_1011D8A08, UISceneSession_ptr);
  swift_unknownObjectRetain(v17, v19);
  swift_dynamicCast(&v41, &v39, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
  v20 = v41;
  *(_QWORD *)&v21 = swift_unknownObjectRelease(v17).n128_u64[0];
  v22 = v10;
  v23 = v11;
  if (!v20)
    goto LABEL_39;
  while (1)
  {
    v28 = objc_msgSend(v20, "role", v21, v35);
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    if (v29 == v33 && v31 == v32)
    {

      swift_bridgeObjectRelease_n(v31, 2);
      goto LABEL_39;
    }
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v33, v32, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
      goto LABEL_39;

    v10 = v22;
    v11 = v23;
    if (v3 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v11)
      break;
    v23 = (v11 - 1) & v11;
    v24 = __clz(__rbit64(v11)) | (v10 << 6);
    v22 = v10;
LABEL_32:
    v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v24);
    if (!v20)
      goto LABEL_39;
  }
  v25 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    return;
  }
  if (v25 >= v36)
    goto LABEL_39;
  v26 = *(_QWORD *)(v37 + 8 * v25);
  v22 = v10 + 1;
  if (v26)
    goto LABEL_31;
  v22 = v10 + 2;
  if (v10 + 2 >= v36)
    goto LABEL_39;
  v26 = *(_QWORD *)(v37 + 8 * v22);
  if (v26)
    goto LABEL_31;
  v22 = v10 + 3;
  if (v10 + 3 >= v36)
    goto LABEL_39;
  v26 = *(_QWORD *)(v37 + 8 * v22);
  if (v26)
    goto LABEL_31;
  v22 = v10 + 4;
  if (v10 + 4 >= v36)
    goto LABEL_39;
  v26 = *(_QWORD *)(v37 + 8 * v22);
  if (v26)
    goto LABEL_31;
  v22 = v10 + 5;
  if (v10 + 5 >= v36)
    goto LABEL_39;
  v26 = *(_QWORD *)(v37 + 8 * v22);
  if (v26)
  {
LABEL_31:
    v23 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v22 << 6);
    goto LABEL_32;
  }
  v27 = v10 + 6;
  while (v36 != v27)
  {
    v26 = *(_QWORD *)(v37 + 8 * v27++);
    if (v26)
    {
      v22 = v27 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_10004FA7C(v3);
}

id PlaybackController.__allocating_init(coordinator:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PlaybackController.init(coordinator:)(a1);
}

id PlaybackController.init(coordinator:)(_QWORD *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_player] = 0;
  v4 = &v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper] = 0;
  v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented] = 0;
  v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented] = 0;
  sub_100064C78((uint64_t)a1, (uint64_t)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator]);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "init");
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
  return v5;
}

uint64_t PlaybackController.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100064C78(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, a1);
}

double sub_100ACFF78(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double result;
  char v24[24];
  char v25[24];
  _BYTE v26[24];
  char v27[24];
  char v28[24];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011D8EA0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    swift_beginAccess(a1 + 24, v25, 0, 0);
    v8 = *(char **)(a1 + 24);
    if (v8 && v8 == v2)
    {
      swift_beginAccess(a1 + 24, v24, 1, 0);
      v10 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = 0;
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(a1 + 24), swift_unknownObjectRelease(v10).n128_f64[0]);
    }
  }
  v11 = &v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v28, 0, 0);
  v12 = *(_QWORD *)v11;
  if (!*(_QWORD *)v11)
    goto LABEL_11;
  swift_beginAccess(v12 + 24, v27, 1, 0);
  v13 = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v12 + 24) = v2;
  v14 = v2;
  swift_retain(v12);
  objc_msgSend(*(id *)(v12 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(v12 + 24), swift_unknownObjectRelease(v13).n128_f64[0]);
  swift_release(v12);

  v15 = *(_QWORD *)v11;
  if (*(_QWORD *)v11)
  {
    swift_beginAccess(v15 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v26, 33, 0);
    swift_retain(v15);
    v16 = sub_100007E8C((uint64_t *)&unk_1011D8980);
    Published.projectedValue.getter(v16);
    swift_endAccess(v26);
    swift_release(v15);
    v17 = swift_allocObject(&unk_1010F8538, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v14);
    v18 = sub_100AE4B8C();
    v19 = Publisher<>.sink(receiveValue:)(sub_100AE4B84, v17, v4, v18);
    v20 = swift_release(v17);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  }
  else
  {
LABEL_11:
    v19 = 0;
  }
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription] = v19;
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100AD01B4(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v18[24];

  v4 = sub_100007E8C((uint64_t *)&unk_1011D8CF0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v11 = v7;
    v12 = v9;
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_1010F8900, 48, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v12;
    v15[5] = v7;
    v16 = sub_100A3F884((uint64_t)v6, (uint64_t)&unk_1011D8998, (uint64_t)v15);
    swift_release(v16);

  }
}

uint64_t sub_100AD02D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100AD0344, v8, v9);
}

uint64_t sub_100AD0344()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_release();
  sub_100AD0380(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100AD0380(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  double v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  void *v68;
  void *v69;
  double v70;
  id v71;
  void *v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v78;
  void *v79;
  id v80;
  _QWORD v81[7];
  char v82;
  __objc2_prot *v83;
  char v84[24];

  v2 = v1;
  if (!a1)
    goto LABEL_8;
  v4 = objc_msgSend(a1, "tracklist");
  if (!v4)
    goto LABEL_8;
  v5 = v4;
  v6 = objc_msgSend(v4, "playingItem");
  if (!v6)
  {
    v7 = v5;
    goto LABEL_7;
  }
  v7 = v6;
  if ((objc_msgSend(v6, "isPlaceholder") & 1) != 0)
  {

LABEL_7:
LABEL_8:
    v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
    swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor, v81, 1, 0);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    v13 = v8[4];
    *(_OWORD *)v8 = 0u;
    *((_OWORD *)v8 + 1) = 0u;
    v8[4] = 0;
    sub_100AE272C(v9, v10, v11, v12, v13);
    return;
  }
  v14 = objc_msgSend(v5, "uniqueIdentifier");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor, v84, 1, 0);
  if (!v18[2])
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_16:
    v23 = objc_msgSend(v7, "contentItemIdentifier", v21);
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = objc_msgSend(v5, "uniqueIdentifier");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = *v18;
    v32 = v18[1];
    v33 = v18[2];
    v34 = v18[3];
    v35 = v18[4];
    *v18 = 1;
    v18[1] = v24;
    v18[2] = v26;
    v18[3] = v28;
    v18[4] = v30;
    sub_100AE272C(v31, v32, v33, v34, v35);
    goto LABEL_17;
  }
  v19 = v18[3];
  v20 = v18[4];
  if (v15 == v19 && v17 == v20)
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_17;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v20, 0);
  *(_QWORD *)&v21 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v22 & 1) == 0)
    goto LABEL_16;
LABEL_17:
  v36 = objc_msgSend(v7, "contentItemIdentifier", v21);
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40 = v18[2];
  if (v40)
  {
    v41 = v18[1];
    if (v37 == v41 && v39 == v40)
      v42 = 1;
    else
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  }
  else
  {
    v42 = 0;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess(v18, v81, 32, 0);
  if (v18[2])
    v43 = *(_BYTE *)v18;
  else
    v43 = 0;
  swift_endAccess(v81);
  v44 = a1;
  v45 = objc_msgSend(v44, "videoOutput");
  if (!v45)
  {

    return;
  }
  v46 = v45;
  v83 = &OBJC_PROTOCOL___MPCVideoOutput_0;
  v47 = swift_dynamicCastObjCProtocolConditional(v45, 1, &v83);
  if (!v47)
    goto LABEL_38;
  v48 = (void *)v47;
  ObjectType = swift_getObjectType();
  v50 = sub_10004A07C(0, (unint64_t *)&qword_1011D6EC0, NSObject_ptr);
  if (!swift_dynamicCastMetatype(ObjectType, v50))
    v48 = 0;
  if (!v48)
  {
LABEL_38:

    swift_unknownObjectRelease(v46);
    return;
  }
  v51 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  v52 = MPCPlayerResponse.VideoContext.init(output:)(v48);

  if ((v43 & 1) == 0 || (v42 & 1) == 0 || objc_msgSend(v44, "state") != (id)2)
  {
    swift_release();
    goto LABEL_41;
  }
  v80 = (id)objc_opt_self(UIApplication);
  v53 = objc_msgSend(v80, "sharedApplication");
  v54 = objc_msgSend(v53, "openSessions");

  v55 = sub_10004A07C(0, &qword_1011D8A08, UISceneSession_ptr);
  v56 = sub_100AE4C84();
  v57 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v54, v55, v56);

  sub_100ACFAE8(v57, (uint64_t *)&UIWindowSceneSessionRoleApplication);
  v59 = v58;
  *(_QWORD *)&v60 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v59)
  {

    swift_release();
    return;
  }
  v61 = objc_msgSend(v59, "scene", v60);
  v62 = v59;
  if (!v61)
  {
    swift_release();

    goto LABEL_41;
  }
  v63 = v61;
  v79 = v62;
  v64 = objc_msgSend(v61, "activationState");

  if (v64)
  {
    swift_release();

LABEL_41:
    return;
  }
  v65 = objc_msgSend(v80, "sharedApplication");
  v66 = objc_msgSend(v65, "openSessions");

  v67 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v66, v55, v56);
  sub_100ACFAE8(v67, (uint64_t *)&_UIWindowSceneSessionRoleCarPlay);
  v69 = v68;
  *(_QWORD *)&v70 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v69
    || (v71 = objc_msgSend(v69, "scene", v70)) != 0
    && (v72 = v71, v73 = objc_msgSend(v71, "activationState"), v72, v73 == (id)-1))
  {
    swift_beginAccess(v18, v81, 33, 0);
    if (v18[2])
      *(_BYTE *)v18 = 0;
    swift_endAccess(v81);
    v74 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v75 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v76 = v74[4];
    sub_100007E68(v74, v75);
    v81[0] = v52;
    v82 = 1;
    v77 = *(void (**)(_QWORD *, uint64_t, uint64_t, __n128))(v76 + 8);
    v78 = swift_retain();
    v77(v81, v75, v76, v78);
    swift_release();

    sub_100AE2CA8(v81);
  }
  else
  {
    swift_release();

  }
}

uint64_t PlaybackController.player.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v3, 0, 0);
  return swift_retain(*v1);
}

double PlaybackController.player.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  sub_100ACFF78(v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*PlaybackController.player.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  swift_retain();
  return sub_100AD0AC4;
}

void sub_100AD0AC4(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(v5 + v4);
  *(_QWORD *)(v5 + v4) = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_100ACFF78(v6);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_100ACFF78(v6);
  }
  swift_release();
  swift_release();
  free(v2);
}

uint64_t Logger.playbackController.unsafeMutableAddressor()
{
  return sub_100A68E10(&qword_1011D1E38, (uint64_t)static Logger.playbackController, (uint64_t)sub_100AE1B34);
}

uint64_t PlaybackController.perform(_:options:route:intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v8;
  v5[9] = v9;
  return swift_task_switch(sub_100AD0BE8, v8, v9);
}

{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  v6 = type metadata accessor for Player.CommandOptions(0);
  v5[21] = v6;
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[23] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[24] = v9;
  v5[25] = v10;
  return swift_task_switch(sub_100AD7EF4, v9, v10);
}

uint64_t sub_100AD0BE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = sub_100007E8C((uint64_t *)&unk_1011D96C0);
  v3 = swift_allocObject(v2, 72, 7);
  v0[10] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100EA7AA0;
  sub_100064C78(v1, v3 + 32);
  v4 = (_QWORD *)swift_task_alloc(dword_1011D8734);
  v0[11] = v4;
  *v4 = v0;
  v4[1] = sub_100AD0C74;
  return PlaybackController.perform(_:options:route:intent:)(v3, v0[3], v0[4], v0[5]);
}

uint64_t sub_100AD0C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[8];
    v6 = v3[9];
    v7 = sub_100AD0DC0;
  }
  else
  {
    swift_bridgeObjectRelease(v3[10]);
    v5 = v3[8];
    v6 = v3[9];
    v7 = sub_100AD0CE8;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_100AD0CE8()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 56));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 96);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 96);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 96));
    v3 = *(_QWORD *)(v0 + 96);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_100AD0DC0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100AD0E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[25] = a3;
  v4[26] = v3;
  v4[23] = a1;
  v4[24] = a2;
  v5 = type metadata accessor for CocoaError.Code(0);
  v4[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[28] = v6;
  v4[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Player.CommandOptions(0);
  v4[30] = v7;
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100AD0E88, 0, 0);
}

uint64_t sub_100AD0E88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v1 = v0[25];
  v2 = type metadata accessor for Logger(0);
  v0[32] = sub_100048B14(v2, (uint64_t)static Logger.playbackController);
  v3 = swift_bridgeObjectRetain_n(v1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = (char *)v0[25];
  if (v6)
  {
    v8 = (char *)v0[24];
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v16 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_10099627C(v8, v7, &v16);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Intent id=%{public}s) — Offering play local option to user", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v0[25], 2);
  }

  v11 = type metadata accessor for MainActor(0);
  v0[33] = v11;
  v0[34] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v0[35] = v13;
  v0[36] = v14;
  return swift_task_switch(sub_100AD1054, v13, v14);
}

uint64_t sub_100AD1054(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 296) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_100AD10BC, v4, v6);
}

uint64_t sub_100AD10BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;

  v1 = (_QWORD *)v0[26];
  v0[7] = (char *)v0 + 153;
  v0[2] = v0;
  v0[3] = sub_100AD1114;
  v2 = swift_continuation_init(v0 + 2, 0);
  sub_100ADA364(v2, v1);
  return swift_continuation_await(v0 + 2, v3);
}

uint64_t sub_100AD1114()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 296);
  *(_BYTE *)(*v0 + 154) = *(_BYTE *)(*v0 + 153);
  swift_release(v2);
  return swift_task_switch(sub_100AD1168, *(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 288));
}

uint64_t sub_100AD1168()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 272));
  return swift_task_switch(sub_100AD11A4, 0, 0);
}

uint64_t sub_100AD11A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  _BOOL4 v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53[2];

  if (*(_BYTE *)(v0 + 154) == 1)
  {
    v1 = (_QWORD *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v2 = v1[3];
    v3 = v1[4];
    sub_100007E68(v1, v2);
    *(_QWORD *)(v0 + 304) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
    v4 = (_QWORD *)swift_task_alloc(dword_1011DB064);
    *(_QWORD *)(v0 + 312) = v4;
    *v4 = v0;
    v4[1] = sub_100AD17DC;
    return GroupActivitiesManager.leave(performLeaveCommand:)(0);
  }
  v6 = (_QWORD *)(v0 + 176);
  v7 = sub_100AE26E8();
  v8 = swift_allocError(&type metadata for PlaybackController.CommandError, v7, 0, 0);
  *(_QWORD *)v9 = 2;
  *(_BYTE *)(v9 + 8) = 3;
  swift_willThrow(v10);
  *(_QWORD *)(v0 + 176) = v8;
  swift_errorRetain(v8);
  v11 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  if (swift_dynamicCast(v0 + 144, v0 + 176, v11, &type metadata for PlaybackController.CommandError, 0))
  {
    v12 = *(void **)(v0 + 144);
    v13 = *(unsigned __int8 *)(v0 + 152);
    if (!*(_BYTE *)(v0 + 152))
    {
      swift_bridgeObjectRetain();
      sub_100AE2790(v12, 0);
      swift_bridgeObjectRetain();
      v42 = sub_100AE2790(v12, 0);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.error.getter();
      v45 = os_log_type_enabled(v43, v44);
      v46 = *(char **)(v0 + 200);
      if (v45)
      {
        v47 = *(char **)(v0 + 192);
        v48 = swift_slowAlloc(22, -1);
        v49 = swift_slowAlloc(64, -1);
        v53[0] = v49;
        *(_DWORD *)v48 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v48 + 4) = sub_10099627C(v47, v46, v53);
        swift_bridgeObjectRelease_n(v46, 3);
        *(_WORD *)(v48 + 12) = 2082;
        *(_QWORD *)(v0 + 168) = v12;
        sub_100AE27B4(v12);
        v50 = (char *)String.init<A>(describing:)(v0 + 168, &type metadata for PlaybackController.CommandError.AlertKind);
        v52 = v51;
        *(_QWORD *)(v48 + 14) = sub_10099627C(v50, v51, v53);
        swift_bridgeObjectRelease(v52);
        sub_100AE275C(v12, 0);
        sub_100AE275C(v12, 0);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Intent id=%{public}s) — Could not present alertKind=%{public}s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v49, -1, -1);
        swift_slowDealloc(v48, -1, -1);

        sub_100AE275C(v12, 0);
      }
      else
      {
        sub_100AE275C(v12, 0);
        swift_bridgeObjectRelease_n(v46, 2);
        sub_100AE275C(v12, 0);
        sub_100AE275C(v12, 0);

      }
      swift_errorRelease(*v6);
      goto LABEL_18;
    }
    if (v13 == 3 && v12 == (void *)2)
    {
      swift_errorRelease(*v6);
      goto LABEL_10;
    }
    sub_100AE275C(*(id *)(v0 + 144), v13);
  }
  v15 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 216);
  swift_errorRelease(*(_QWORD *)(v0 + 176));
  v17 = swift_errorRetain(v8);
  static CocoaError.userCancelled.getter(v17);
  v18 = sub_100048748(&qword_1011D86E8, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  v19 = static _ErrorCodeProtocol.~= infix(_:_:)(v14, v8, v16, v18);
  swift_errorRelease(v8);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_errorRetain(v8);
    swift_bridgeObjectRetain();
    v29 = swift_errorRetain(v8);
    v21 = Logger.logObject.getter(v29);
    v30 = static os_log_type_t.error.getter();
    v31 = os_log_type_enabled(v21, v30);
    v32 = *(char **)(v0 + 200);
    if (!v31)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      goto LABEL_17;
    }
    v33 = *(char **)(v0 + 192);
    v34 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v53[0] = v35;
    *(_DWORD *)v34 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v34 + 4) = sub_10099627C(v33, v32, v53);
    swift_bridgeObjectRelease_n(v32, 3);
    *(_WORD *)(v34 + 12) = 2082;
    *(_QWORD *)(v0 + 160) = v8;
    swift_errorRetain(v8);
    v36 = (char *)String.init<A>(describing:)(v0 + 160, v11);
    v38 = v37;
    *(_QWORD *)(v34 + 14) = sub_10099627C(v36, v37, v53);
    swift_bridgeObjectRelease(v38);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v21, v30, "Intent id=%{public}s) — Failed to insert with error=%{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v28 = v34;
    goto LABEL_14;
  }
LABEL_10:
  v20 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(char **)(v0 + 200);
  if (!v23)
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
    goto LABEL_17;
  }
  v25 = *(char **)(v0 + 192);
  v26 = swift_slowAlloc(12, -1);
  v27 = swift_slowAlloc(32, -1);
  v53[0] = v27;
  *(_DWORD *)v26 = 136446210;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v26 + 4) = sub_10099627C(v25, v24, v53);
  swift_bridgeObjectRelease_n(v24, 3);
  _os_log_impl((void *)&_mh_execute_header, v21, v22, "Intent id=%{public}s) — User cancelled", (uint8_t *)v26, 0xCu);
  swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v27, -1, -1);
  v28 = v26;
LABEL_14:
  swift_slowDealloc(v28, -1, -1);
LABEL_17:

LABEL_18:
  v40 = *(_QWORD *)(v0 + 248);
  v41 = *(_QWORD *)(v0 + 232);
  swift_willThrow(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD17DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));
  swift_release(v1);
  return swift_task_switch(sub_100AD1838, 0, 0);
}

uint64_t sub_100AD1838()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 120, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 320) = v2;
  if (v2)
  {
    v4 = *(int **)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 248);
    v5 = *(void **)(v0 + 184);
    *(_QWORD *)(v0 + 104) = &type metadata for Player.ReplaceCommand;
    *(_QWORD *)(v0 + 112) = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = 3;
    v6 = v5;
    swift_retain(v2);
    UUID.init()(v7);
    v8 = (_QWORD *)(v3 + v4[5]);
    *v8 = 0;
    v8[1] = 0;
    *(_QWORD *)(v3 + v4[6]) = 0;
    *(_BYTE *)(v3 + v4[7]) = 0;
    *(_QWORD *)(v3 + v4[8]) = 0;
    v9 = (_QWORD *)swift_task_alloc(dword_1011D8F2C);
    *(_QWORD *)(v0 + 328) = v9;
    *v9 = v0;
    v9[1] = sub_100AD1954;
    return sub_100AED0FC(v0 + 80, *(_QWORD *)(v0 + 248));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 248));
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100AD1954(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 328);
  *(_QWORD *)(*(_QWORD *)v2 + 336) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[40];
    sub_10005B748(v4[31], type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v7 = sub_100AD1A54;
  }
  else
  {
    v8 = v4 + 10;
    v9 = v4[40];
    v10 = v4[31];
    swift_release(v9);

    sub_10005B748(v10, type metadata accessor for Player.CommandOptions);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v8);
    v7 = sub_100AD1A0C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100AD1A0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD1A54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45[2];

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = (_QWORD *)(v0 + 176);
  swift_errorRetain(v1);
  v3 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  if (!swift_dynamicCast(v0 + 144, v0 + 176, v3, &type metadata for PlaybackController.CommandError, 0))
    goto LABEL_7;
  v4 = *(void **)(v0 + 144);
  v5 = *(unsigned __int8 *)(v0 + 152);
  if (*(_BYTE *)(v0 + 152))
  {
    if (v5 == 3 && v4 == (void *)2)
    {
      swift_errorRelease(*v2);
      goto LABEL_8;
    }
    sub_100AE275C(*(id *)(v0 + 144), v5);
LABEL_7:
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    v9 = swift_errorRetain(v1);
    static CocoaError.userCancelled.getter(v9);
    v10 = sub_100048748(&qword_1011D86E8, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v6, v1, v8, v10);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if ((v11 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_errorRetain(v1);
      swift_bridgeObjectRetain();
      v21 = swift_errorRetain(v1);
      v13 = Logger.logObject.getter(v21);
      v22 = static os_log_type_t.error.getter();
      v23 = os_log_type_enabled(v13, v22);
      v24 = *(char **)(v0 + 200);
      if (!v23)
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
        swift_errorRelease(v1);
        swift_errorRelease(v1);
        goto LABEL_15;
      }
      v25 = *(char **)(v0 + 192);
      v18 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(64, -1);
      v45[0] = v26;
      *(_DWORD *)v18 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v18 + 4) = sub_10099627C(v25, v24, v45);
      swift_bridgeObjectRelease_n(v24, 3);
      *(_WORD *)(v18 + 12) = 2082;
      *(_QWORD *)(v0 + 160) = v1;
      swift_errorRetain(v1);
      v27 = (char *)String.init<A>(describing:)(v0 + 160, v3);
      v29 = v28;
      *(_QWORD *)(v18 + 14) = sub_10099627C(v27, v28, v45);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v13, v22, "Intent id=%{public}s) — Failed to insert with error=%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      v20 = v26;
      goto LABEL_12;
    }
LABEL_8:
    v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(char **)(v0 + 200);
    if (!v15)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
      goto LABEL_15;
    }
    v17 = *(char **)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v45[0] = v19;
    *(_DWORD *)v18 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 4) = sub_10099627C(v17, v16, v45);
    swift_bridgeObjectRelease_n(v16, 3);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Intent id=%{public}s) — User cancelled", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v20 = v19;
LABEL_12:
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v18, -1, -1);
LABEL_15:

    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  sub_100AE2790(v4, 0);
  swift_bridgeObjectRetain();
  v34 = sub_100AE2790(v4, 0);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter();
  v37 = os_log_type_enabled(v35, v36);
  v38 = *(char **)(v0 + 200);
  if (v37)
  {
    v39 = *(char **)(v0 + 192);
    v40 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v45[0] = v41;
    *(_DWORD *)v40 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v40 + 4) = sub_10099627C(v39, v38, v45);
    swift_bridgeObjectRelease_n(v38, 3);
    *(_WORD *)(v40 + 12) = 2082;
    *(_QWORD *)(v0 + 168) = v4;
    sub_100AE27B4(v4);
    v42 = (char *)String.init<A>(describing:)(v0 + 168, &type metadata for PlaybackController.CommandError.AlertKind);
    v44 = v43;
    *(_QWORD *)(v40 + 14) = sub_10099627C(v42, v43, v45);
    swift_bridgeObjectRelease(v44);
    sub_100AE275C(v4, 0);
    sub_100AE275C(v4, 0);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Intent id=%{public}s) — Could not present alertKind=%{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    sub_100AE275C(v4, 0);
  }
  else
  {
    sub_100AE275C(v4, 0);
    swift_bridgeObjectRelease_n(v38, 2);
    sub_100AE275C(v4, 0);
    sub_100AE275C(v4, 0);

  }
  swift_errorRelease(*v2);
LABEL_16:
  v31 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 232);
  swift_willThrow(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD1FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v5[109] = v4;
  v5[108] = a4;
  v5[107] = a3;
  v5[106] = a2;
  v5[105] = a1;
  v6 = type metadata accessor for UUID(0);
  v5[110] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[111] = v7;
  v5[112] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v5[113] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v5[114] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[115] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[116] = swift_task_alloc(v11);
  v5[117] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5[118] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[119] = v13;
  v5[120] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v5[121] = v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[122] = swift_task_alloc(v15);
  v5[123] = swift_task_alloc(v15);
  v5[124] = swift_task_alloc(v15);
  v5[125] = swift_task_alloc(v15);
  v5[126] = swift_task_alloc(v15);
  v5[127] = swift_task_alloc(v15);
  v5[128] = swift_task_alloc(v15);
  v5[129] = swift_task_alloc(v15);
  v5[130] = swift_task_alloc(v15);
  v16 = type metadata accessor for PlaybackIntentDescriptor(0);
  v5[131] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[132] = swift_task_alloc(v17);
  v5[133] = swift_task_alloc(v17);
  v5[134] = swift_task_alloc(v17);
  v5[135] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v5[136] = v18;
  v5[137] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  v5[138] = v20;
  v5[139] = v21;
  return swift_task_switch(sub_100AD21D0, v20, v21);
}

uint64_t sub_100AD21D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 872);
  v2 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  *(_QWORD *)(v0 + 1120) = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 536, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 1128) = *v3;
  if (v4)
  {
    v5 = (_BYTE *)(v4 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    swift_beginAccess(v4 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v0 + 560, 0, 0);
    if (*v5 == 2)
    {
      swift_retain(v4);
    }
    else
    {
      v19 = qword_1011D1E38;
      swift_retain(v4);
      if (v19 != -1)
        swift_once(&qword_1011D1E38, sub_100AE1B34);
      v20 = *(_QWORD *)(v0 + 856);
      v21 = type metadata accessor for Logger(0);
      sub_100048B14(v21, (uint64_t)static Logger.playbackController);
      v22 = swift_bridgeObjectRetain_n(v20, 2);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter(v23);
      v25 = os_log_type_enabled(v23, v24);
      v26 = *(char **)(v0 + 856);
      if (v25)
      {
        v27 = *(char **)(v0 + 848);
        v28 = swift_slowAlloc(12, -1);
        v29 = swift_slowAlloc(32, -1);
        v39 = v29;
        *(_DWORD *)v28 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v28 + 4) = sub_10099627C(v27, v26, &v39);
        swift_bridgeObjectRelease_n(v26, 3);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Intent id=%{public}s) — Awaiting for engine to start", (uint8_t *)v28, 0xCu);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
      }

    }
    v30 = (_QWORD *)swift_task_alloc(dword_1011D8E44);
    *(_QWORD *)(v0 + 1136) = v30;
    *v30 = v0;
    v30[1] = sub_100AD2540;
    return Player.startEngineIfNeeded()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 1096));
    v6 = sub_100AE26E8();
    swift_allocError(&type metadata for PlaybackController.CommandError, v6, 0, 0);
    *(_QWORD *)v7 = 0;
    *(_BYTE *)(v7 + 8) = 3;
    swift_willThrow(v8);
    v9 = *(_QWORD *)(v0 + 1072);
    v10 = *(_QWORD *)(v0 + 1064);
    v11 = *(_QWORD *)(v0 + 1056);
    v12 = *(_QWORD *)(v0 + 1040);
    v13 = *(_QWORD *)(v0 + 1032);
    v14 = *(_QWORD *)(v0 + 1024);
    v15 = *(_QWORD *)(v0 + 1016);
    v16 = *(_QWORD *)(v0 + 1008);
    v17 = *(_QWORD *)(v0 + 1000);
    v31 = *(_QWORD *)(v0 + 992);
    v32 = *(_QWORD *)(v0 + 984);
    v33 = *(_QWORD *)(v0 + 976);
    v34 = *(_QWORD *)(v0 + 960);
    v35 = *(_QWORD *)(v0 + 936);
    v36 = *(_QWORD *)(v0 + 928);
    v37 = *(_QWORD *)(v0 + 904);
    v38 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100AD2540()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1136));
  return swift_task_switch(sub_100AD2590, *(_QWORD *)(v1 + 1104), *(_QWORD *)(v1 + 1112));
}

uint64_t sub_100AD2590()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  double v5;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  int v14;
  id v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(id *)(v0 + 864);
  if (!v1)
  {
    v2 = *(_QWORD *)(v0 + 1128);
    KeyPath = swift_getKeyPath(&unk_100EE1D10);
    v4 = swift_getKeyPath(&unk_100EE1D38);
    static Published.subscript.getter((_QWORD *)(v0 + 832), v2, KeyPath, v4);
    swift_release(v4);
    *(_QWORD *)&v5 = swift_release(KeyPath).n128_u64[0];
    v6 = *(void **)(v0 + 832);
    v1 = objc_msgSend(v6, "route", v5);

  }
  *(_QWORD *)(v0 + 1144) = v1;
  v7 = *(_QWORD *)(v0 + 1080);
  v8 = *(int **)(v0 + 1048);
  v9 = *(_QWORD *)(v0 + 840);
  *(_QWORD *)(v0 + 1152) = *(_QWORD *)(v9 + v8[5]);
  v10 = *(_QWORD *)(v9 + v8[6]);
  v11 = *(unsigned __int8 *)(v9 + v8[9]);
  sub_10005B704(v9, v7, type metadata accessor for PlaybackIntentDescriptor);
  v12 = *(_QWORD *)(v0 + 1080);
  if (v11 == 1)
  {
    v13 = *(id *)(v0 + 864);
    sub_10005B748(v12, type metadata accessor for PlaybackIntentDescriptor);
LABEL_6:
    v10 = 1;
    goto LABEL_7;
  }
  v14 = *(unsigned __int8 *)(v12 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
  v15 = *(id *)(v0 + 864);
  sub_10005B748(v12, type metadata accessor for PlaybackIntentDescriptor);
  if (v14 == 1)
    goto LABEL_6;
LABEL_7:
  *(_QWORD *)(v0 + 1160) = v10;
  v16 = *(_QWORD *)(v0 + 1088);
  v17 = v1;
  *(_QWORD *)(v0 + 1168) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 1176) = v19;
  *(_QWORD *)(v0 + 1184) = v20;
  return swift_task_switch(sub_100AD270C, v19, v20);
}

uint64_t sub_100AD270C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 1192) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_100AD2774, v4, v6);
}

uint64_t sub_100AD2774()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = (void *)v0[143];
  v2 = v0[109];
  v0[23] = (char *)v0 + 265;
  v0[18] = v0;
  v0[19] = sub_100AD27DC;
  v3 = swift_continuation_init(v0 + 18, 1);
  sub_100ADA900(v3, v2, v1);
  return swift_continuation_await(v0 + 18, v4);
}

uint64_t sub_100AD27DC(__n128 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 1200) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = *(_QWORD *)(v2 + 1184);
    v5 = *(_QWORD *)(v2 + 1176);
    v6 = sub_100AD3388;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 1192);
    *(_BYTE *)(v2 + 267) = *(_BYTE *)(v2 + 265);
    swift_release(v7);
    v4 = *(_QWORD *)(v2 + 1184);
    v5 = *(_QWORD *)(v2 + 1176);
    v6 = sub_100AD2860;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100AD2860()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[143];
  swift_release(v0[146]);

  return swift_task_switch(sub_100AD28A4, v0[138], v0[139]);
}

uint64_t sub_100AD28A4()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  char *v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  double v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  _QWORD *v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  _BOOL4 v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  unsigned __int8 v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v1 = *(unsigned __int8 *)(v0 + 267);
  if (v1 == 2)
  {
    v2 = *(void **)(v0 + 1144);
    v3 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));

    swift_release(v3);
    v4 = *(_QWORD *)(v0 + 1072);
    v5 = *(_QWORD *)(v0 + 1064);
    v6 = *(_QWORD *)(v0 + 1056);
    v7 = *(_QWORD *)(v0 + 1040);
    v8 = *(_QWORD *)(v0 + 1032);
    v9 = *(_QWORD *)(v0 + 1024);
    v10 = *(_QWORD *)(v0 + 1016);
    v11 = *(_QWORD *)(v0 + 1008);
    v12 = *(_QWORD *)(v0 + 1000);
    v125 = *(_QWORD *)(v0 + 992);
    v126 = *(_QWORD *)(v0 + 984);
    v127 = *(_QWORD *)(v0 + 976);
    v128 = *(_QWORD *)(v0 + 960);
    v129 = *(_QWORD *)(v0 + 936);
    v130 = *(_QWORD *)(v0 + 928);
    v131 = *(_QWORD *)(v0 + 904);
    v132 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v14 = *(_QWORD *)(v0 + 856);
  v15 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 1208) = sub_100048B14(v15, (uint64_t)static Logger.playbackController);
  v16 = swift_bridgeObjectRetain_n(v14, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = os_log_type_enabled(v17, v18);
  v20 = *(char **)(v0 + 856);
  if (v19)
  {
    v21 = v1 & 1;
    v22 = *(char **)(v0 + 848);
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v133 = v24;
    *(_DWORD *)v23 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v23 + 4) = sub_10099627C(v22, v20, &v133);
    swift_bridgeObjectRelease_n(v20, 3);
    *(_WORD *)(v23 + 12) = 2082;
    *(_BYTE *)(v0 + 266) = v21;
    v25 = (char *)String.init<A>(describing:)(v0 + 266, &type metadata for PlaybackController.PlayabilityOption);
    v27 = v26;
    *(_QWORD *)(v23 + 14) = sub_10099627C(v25, v26, &v133);
    swift_bridgeObjectRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Intent id=%{public}s) — Resolved Playability Options=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
  }

  v28 = *(_QWORD *)(v0 + 1040);
  v29 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 840), v28, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v29);
  v31 = *(void ***)(v0 + 1040);
  if (EnumCaseMultiPayload == 1)
  {
    v32 = *(_QWORD *)(v0 + 960);
    v33 = *(_QWORD *)(v0 + 952);
    v34 = *(_QWORD *)(v0 + 944);
    v35 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v33 + 32))(v32, v31, v34);
    v36 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v35);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  }
  else
  {
    v36 = *v31;
  }
  v37 = objc_msgSend(v36, "sharedListeningProperties");

  if (v37)
  {
    v38 = *(_QWORD *)(v0 + 1128);
    KeyPath = swift_getKeyPath(&unk_100EE1D58);
    v40 = swift_getKeyPath(&unk_100EE1D80);
    static Published.subscript.getter((_QWORD *)(v0 + 816), v38, KeyPath, v40);
    swift_release(v40);
    *(_QWORD *)&v41 = swift_release(KeyPath).n128_u64[0];
    v42 = *(void **)(v0 + 816);
    v43 = *(_QWORD *)(v0 + 1072);
    v44 = *(_QWORD *)(v0 + 840);
    if (v42)
    {
      v45 = objc_msgSend(*(id *)(v0 + 816), "isSharedListeningSession", v41);

      sub_10005B704(v44, v43, type metadata accessor for PlaybackIntentDescriptor);
      if (v45)
      {
        v46 = *(_QWORD *)(v0 + 1024);
        v47 = *(_QWORD *)(v0 + 968);
        sub_10005B704(*(_QWORD *)(v0 + 1072), v46, type metadata accessor for PlaybackIntentDescriptor.IntentType);
        v48 = swift_getEnumCaseMultiPayload(v46, v47);
        v49 = *(void ***)(v0 + 1024);
        if (v48 == 1)
        {
          v50 = *(_QWORD *)(v0 + 960);
          v51 = *(_QWORD *)(v0 + 952);
          v52 = *(_QWORD *)(v0 + 944);
          v53 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v51 + 32))(v50, v49, v52);
          v54 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v53);
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
        }
        else
        {
          v54 = *v49;
        }
        v95 = *(_QWORD *)(v0 + 1072);
        v96 = objc_msgSend(v54, "tracklistSource");

        sub_10005B748(v95, type metadata accessor for PlaybackIntentDescriptor);
        if (v96 != (id)100)
        {
          v97 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
          v98 = Logger.logObject.getter(v97);
          v99 = static os_log_type_t.default.getter(v98);
          v100 = os_log_type_enabled(v98, v99);
          v101 = *(char **)(v0 + 856);
          if (v100)
          {
            v102 = *(char **)(v0 + 848);
            v103 = swift_slowAlloc(12, -1);
            v104 = swift_slowAlloc(32, -1);
            v133 = v104;
            *(_DWORD *)v103 = 136446210;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v103 + 4) = sub_10099627C(v102, v101, &v133);
            swift_bridgeObjectRelease_n(v101, 3);
            _os_log_impl((void *)&_mh_execute_header, v98, v99, "Intent id=%{public}s) — Offering Shared Listening options", (uint8_t *)v103, 0xCu);
            swift_arrayDestroy(v104, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v104, -1, -1);
            swift_slowDealloc(v103, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
          }

          v105 = (_QWORD *)swift_task_alloc(dword_1011D8A4C);
          *(_QWORD *)(v0 + 1240) = v105;
          *v105 = v0;
          v105[1] = sub_100AD3D78;
          return sub_100AD8A68(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
        }
LABEL_20:
        *(int8x16_t *)(v0 + 1272) = vextq_s8(*(int8x16_t *)(v0 + 1152), *(int8x16_t *)(v0 + 1152), 8uLL);
        v64 = *(_QWORD *)(v0 + 1128);
        v65 = swift_getKeyPath(&unk_100EE1D10);
        v66 = swift_getKeyPath(&unk_100EE1D38);
        static Published.subscript.getter((_QWORD *)(v0 + 808), v64, v65, v66);
        swift_release(v66);
        *(_QWORD *)&v67 = swift_release(v65).n128_u64[0];
        v68 = *(void **)(v0 + 808);
        v69 = objc_msgSend(v68, "route", v67);
        *(_QWORD *)(v0 + 1288) = v69;

        if (!v69)
        {
          v76 = *(void **)(v0 + 1144);
          goto LABEL_27;
        }
        objc_opt_self(MPAVEndpointRoute);
        v70 = (void *)swift_dynamicCastObjCClass(v69);
        *(_QWORD *)(v0 + 1296) = v70;
        if (!v70)
          goto LABEL_24;
        v71 = v70;
        if (objc_msgSend(v70, "isDeviceRoute"))
          goto LABEL_24;
        v72 = *(_QWORD *)(v0 + 1128);
        v73 = swift_getKeyPath(&unk_100EE1B50);
        v74 = swift_getKeyPath(&unk_100EE1B78);
        static Published.subscript.getter((_QWORD *)(v0 + 824), v72, v73, v74);
        swift_release(v74);
        swift_release(v73);
        v75 = *(void **)(v0 + 824);

        if (v75)
        {
LABEL_24:
          v76 = *(void **)(v0 + 1144);
LABEL_25:

LABEL_27:
          *(_QWORD *)(v0 + 1328) = v76;
          v77 = *(_QWORD *)(v0 + 1008);
          v78 = *(_QWORD *)(v0 + 968);
          sub_10005B704(*(_QWORD *)(v0 + 840), v77, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v79 = swift_getEnumCaseMultiPayload(v77, v78);
          v80 = *(uint64_t **)(v0 + 1008);
          if (v79 == 1)
          {
            v81 = *(_QWORD *)(v0 + 960);
            v82 = *(_QWORD *)(v0 + 952);
            v83 = *(_QWORD *)(v0 + 944);
            v84 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v82 + 32))(v81, v80, v83);
            v85 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v84);
            (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
          }
          else
          {
            v85 = *v80;
          }
          *(_QWORD *)(v0 + 1336) = v85;
          v86 = dword_1011D8A1C;
          v87 = v76;
          v88 = (_QWORD *)swift_task_alloc(v86);
          *(_QWORD *)(v0 + 1344) = v88;
          *v88 = v0;
          v88[1] = sub_100AD4500;
          return sub_100AE27C4(v85, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v76);
        }
        v106 = *(unsigned __int8 *)(v0 + 267);
        sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v107 = *(_QWORD *)(v0 + 1064);
        if ((v106 & 1) != 0)
        {
          sub_10005B748(v107, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v108 = *(_QWORD *)(v0 + 1016);
          v109 = *(_QWORD *)(v0 + 968);
          sub_10005B704(v107, v108, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v110 = swift_getEnumCaseMultiPayload(v108, v109);
          v111 = *(void ***)(v0 + 1016);
          if (v110 == 1)
          {
            v112 = *(_QWORD *)(v0 + 960);
            v113 = *(_QWORD *)(v0 + 952);
            v114 = *(_QWORD *)(v0 + 944);
            v115 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v113 + 32))(v112, v111, v114);
            v116 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v115);
            (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v114);
          }
          else
          {
            v116 = *v111;
          }
          v117 = *(_QWORD *)(v0 + 1064);
          v118 = objc_msgSend(v116, "prefersEnqueuingUsingAirPlay");

          sub_10005B748(v117, type metadata accessor for PlaybackIntentDescriptor);
          if ((v118 & 1) == 0)
          {
            v120 = *(_QWORD *)(v0 + 1056);
            v121 = *(_QWORD *)(v0 + 840);
            v122 = objc_msgSend(v71, "supportsRemoteControl");
            sub_10005B704(v121, v120, type metadata accessor for PlaybackIntentDescriptor);
            if ((v122 & 1) != 0)
            {
              v123 = *(_QWORD *)(v0 + 1056);
              v124 = *(_BYTE *)(v123 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_10005B748(v123, type metadata accessor for PlaybackIntentDescriptor);
              if ((v124 & 1) == 0)
              {
                v76 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_25;
              }
LABEL_47:
              v119 = (_QWORD *)swift_task_alloc(dword_1011D8E5C);
              *(_QWORD *)(v0 + 1304) = v119;
              *v119 = v0;
              v119[1] = sub_100AD4358;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_46:
            sub_10005B748(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_47;
          }
        }
        sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_46;
      }
    }
    else
    {
      sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    }
    sub_10005B748(*(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_20;
  }
  v55 = *(_QWORD *)(v0 + 1032);
  v56 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 840), v55, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v57 = swift_getEnumCaseMultiPayload(v55, v56);
  v58 = *(void ***)(v0 + 1032);
  if (v57 == 1)
  {
    v59 = *(_QWORD *)(v0 + 960);
    v60 = *(_QWORD *)(v0 + 952);
    v61 = *(_QWORD *)(v0 + 944);
    v62 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v60 + 32))(v59, v58, v61);
    v63 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v62);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  }
  else
  {
    v63 = *v58;
  }
  *(_QWORD *)(v0 + 1216) = v63;
  v89 = (_QWORD *)(*(_QWORD *)(v0 + 872) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v90 = v89[3];
  v91 = v89[4];
  sub_100007E68(v89, v90);
  *(_QWORD *)(v0 + 1224) = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 40))(v90, v91);
  v92 = dword_1011DB03C;
  v93 = v63;
  v94 = (_QWORD *)swift_task_alloc(v92);
  *(_QWORD *)(v0 + 1232) = v94;
  *v94 = v0;
  v94[1] = sub_100AD352C;
  return GroupActivitiesManager.initiateSession(with:)((uint64_t)v63);
}

uint64_t sub_100AD3388()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[149];
  v2 = (void *)v0[143];
  swift_release(v0[146]);
  swift_release(v1);

  return swift_task_switch(sub_100AD33D8, v0[138], v0[139]);
}

uint64_t sub_100AD33D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD352C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1232);
  v4 = *(_QWORD *)(*v1 + 1224);
  v5 = *(void **)(*v1 + 1216);
  *(_BYTE *)(*v1 + 268) = a1;
  swift_task_dealloc(v3);

  swift_release(v4);
  return swift_task_switch(sub_100AD35A4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_100AD35A4()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unsigned __int8 v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v1 = *(unsigned __int8 *)(v0 + 268);

  if (v1 == 1)
  {
    v2 = *(void **)(v0 + 1144);
    v3 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));

    swift_release(v3);
    v4 = *(_QWORD *)(v0 + 1072);
    v5 = *(_QWORD *)(v0 + 1064);
    v6 = *(_QWORD *)(v0 + 1056);
    v7 = *(_QWORD *)(v0 + 1040);
    v8 = *(_QWORD *)(v0 + 1032);
    v9 = *(_QWORD *)(v0 + 1024);
    v10 = *(_QWORD *)(v0 + 1016);
    v11 = *(_QWORD *)(v0 + 1008);
    v12 = *(_QWORD *)(v0 + 1000);
    v86 = *(_QWORD *)(v0 + 992);
    v87 = *(_QWORD *)(v0 + 984);
    v88 = *(_QWORD *)(v0 + 976);
    v89 = *(_QWORD *)(v0 + 960);
    v90 = *(_QWORD *)(v0 + 936);
    v91 = *(_QWORD *)(v0 + 928);
    v92 = *(_QWORD *)(v0 + 904);
    v93 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 1128);
  KeyPath = swift_getKeyPath(&unk_100EE1D58);
  v16 = swift_getKeyPath(&unk_100EE1D80);
  static Published.subscript.getter((_QWORD *)(v0 + 816), v14, KeyPath, v16);
  swift_release(v16);
  *(_QWORD *)&v17 = swift_release(KeyPath).n128_u64[0];
  v18 = *(void **)(v0 + 816);
  v19 = *(_QWORD *)(v0 + 1072);
  v20 = *(_QWORD *)(v0 + 840);
  if (!v18)
  {
    sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_8;
  }
  v21 = objc_msgSend(*(id *)(v0 + 816), "isSharedListeningSession", v17);

  sub_10005B704(v20, v19, type metadata accessor for PlaybackIntentDescriptor);
  if (!v21)
  {
LABEL_8:
    sub_10005B748(*(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_9;
  }
  v22 = *(_QWORD *)(v0 + 1024);
  v23 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 1072), v22, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v23);
  v25 = *(void ***)(v0 + 1024);
  if (EnumCaseMultiPayload == 1)
  {
    v26 = *(_QWORD *)(v0 + 960);
    v27 = *(_QWORD *)(v0 + 952);
    v28 = *(_QWORD *)(v0 + 944);
    v29 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v27 + 32))(v26, v25, v28);
    v30 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v29);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  else
  {
    v30 = *v25;
  }
  v56 = *(_QWORD *)(v0 + 1072);
  v57 = objc_msgSend(v30, "tracklistSource");

  sub_10005B748(v56, type metadata accessor for PlaybackIntentDescriptor);
  if (v57 != (id)100)
  {
    v58 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter(v59);
    v61 = os_log_type_enabled(v59, v60);
    v62 = *(char **)(v0 + 856);
    if (v61)
    {
      v63 = *(char **)(v0 + 848);
      v64 = swift_slowAlloc(12, -1);
      v65 = swift_slowAlloc(32, -1);
      v94 = v65;
      *(_DWORD *)v64 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v64 + 4) = sub_10099627C(v63, v62, &v94);
      swift_bridgeObjectRelease_n(v62, 3);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Intent id=%{public}s) — Offering Shared Listening options", (uint8_t *)v64, 0xCu);
      swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v64, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
    }

    v66 = (_QWORD *)swift_task_alloc(dword_1011D8A4C);
    *(_QWORD *)(v0 + 1240) = v66;
    *v66 = v0;
    v66[1] = sub_100AD3D78;
    return sub_100AD8A68(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
  }
LABEL_9:
  *(int8x16_t *)(v0 + 1272) = vextq_s8(*(int8x16_t *)(v0 + 1152), *(int8x16_t *)(v0 + 1152), 8uLL);
  v31 = *(_QWORD *)(v0 + 1128);
  v32 = swift_getKeyPath(&unk_100EE1D10);
  v33 = swift_getKeyPath(&unk_100EE1D38);
  static Published.subscript.getter((_QWORD *)(v0 + 808), v31, v32, v33);
  swift_release(v33);
  *(_QWORD *)&v34 = swift_release(v32).n128_u64[0];
  v35 = *(void **)(v0 + 808);
  v36 = objc_msgSend(v35, "route", v34);
  *(_QWORD *)(v0 + 1288) = v36;

  if (!v36)
  {
    v43 = *(void **)(v0 + 1144);
    goto LABEL_16;
  }
  objc_opt_self(MPAVEndpointRoute);
  v37 = (void *)swift_dynamicCastObjCClass(v36);
  *(_QWORD *)(v0 + 1296) = v37;
  if (v37)
  {
    v38 = v37;
    if (!objc_msgSend(v37, "isDeviceRoute"))
    {
      v39 = *(_QWORD *)(v0 + 1128);
      v40 = swift_getKeyPath(&unk_100EE1B50);
      v41 = swift_getKeyPath(&unk_100EE1B78);
      static Published.subscript.getter((_QWORD *)(v0 + 824), v39, v40, v41);
      swift_release(v41);
      swift_release(v40);
      v42 = *(void **)(v0 + 824);

      if (!v42)
      {
        v67 = *(unsigned __int8 *)(v0 + 267);
        sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v68 = *(_QWORD *)(v0 + 1064);
        if ((v67 & 1) != 0)
        {
          sub_10005B748(v68, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v69 = *(_QWORD *)(v0 + 1016);
          v70 = *(_QWORD *)(v0 + 968);
          sub_10005B704(v68, v69, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v71 = swift_getEnumCaseMultiPayload(v69, v70);
          v72 = *(void ***)(v0 + 1016);
          if (v71 == 1)
          {
            v73 = *(_QWORD *)(v0 + 960);
            v74 = *(_QWORD *)(v0 + 952);
            v75 = *(_QWORD *)(v0 + 944);
            v76 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v74 + 32))(v73, v72, v75);
            v77 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v76);
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
          }
          else
          {
            v77 = *v72;
          }
          v78 = *(_QWORD *)(v0 + 1064);
          v79 = objc_msgSend(v77, "prefersEnqueuingUsingAirPlay");

          sub_10005B748(v78, type metadata accessor for PlaybackIntentDescriptor);
          if ((v79 & 1) == 0)
          {
            v81 = *(_QWORD *)(v0 + 1056);
            v82 = *(_QWORD *)(v0 + 840);
            v83 = objc_msgSend(v38, "supportsRemoteControl");
            sub_10005B704(v82, v81, type metadata accessor for PlaybackIntentDescriptor);
            if ((v83 & 1) != 0)
            {
              v84 = *(_QWORD *)(v0 + 1056);
              v85 = *(_BYTE *)(v84 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_10005B748(v84, type metadata accessor for PlaybackIntentDescriptor);
              if ((v85 & 1) == 0)
              {
                v43 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_14;
              }
LABEL_34:
              v80 = (_QWORD *)swift_task_alloc(dword_1011D8E5C);
              *(_QWORD *)(v0 + 1304) = v80;
              *v80 = v0;
              v80[1] = sub_100AD4358;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_33:
            sub_10005B748(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_34;
          }
        }
        sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_33;
      }
    }
  }
  v43 = *(void **)(v0 + 1144);
LABEL_14:

LABEL_16:
  *(_QWORD *)(v0 + 1328) = v43;
  v44 = *(_QWORD *)(v0 + 1008);
  v45 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 840), v44, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v46 = swift_getEnumCaseMultiPayload(v44, v45);
  v47 = *(uint64_t **)(v0 + 1008);
  if (v46 == 1)
  {
    v48 = *(_QWORD *)(v0 + 960);
    v49 = *(_QWORD *)(v0 + 952);
    v50 = *(_QWORD *)(v0 + 944);
    v51 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v49 + 32))(v48, v47, v50);
    v52 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v51);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  }
  else
  {
    v52 = *v47;
  }
  *(_QWORD *)(v0 + 1336) = v52;
  v53 = dword_1011D8A1C;
  v54 = v43;
  v55 = (_QWORD *)swift_task_alloc(v53);
  *(_QWORD *)(v0 + 1344) = v55;
  *v55 = v0;
  v55[1] = sub_100AD4500;
  return sub_100AE27C4(v52, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v43);
}

uint64_t sub_100AD3D78(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();

  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 1240);
  *(_QWORD *)(*v4 + 1248) = v3;
  swift_task_dealloc(v9);
  if (v3)
  {
    v10 = *(_QWORD *)(v8 + 1112);
    v11 = *(_QWORD *)(v8 + 1104);
    v12 = sub_100AD5BF8;
  }
  else
  {
    *(_BYTE *)(v8 + 269) = a3;
    *(_QWORD *)(v8 + 1256) = a2;
    *(_QWORD *)(v8 + 1264) = a1;
    v10 = *(_QWORD *)(v8 + 1112);
    v11 = *(_QWORD *)(v8 + 1104);
    v12 = sub_100AD3E0C;
  }
  return swift_task_switch(v12, v11, v10);
}

uint64_t sub_100AD3E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  unsigned __int8 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  if ((*(_BYTE *)(v0 + 269) & 1) != 0)
  {
    v14 = *(void **)(v0 + 1144);
    v15 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v16 = sub_100AE26E8();
    swift_allocError(&type metadata for PlaybackController.CommandError, v16, 0, 0);
    *(_QWORD *)v17 = 2;
    *(_BYTE *)(v17 + 8) = 3;
    swift_willThrow(v18);
    swift_release(v15);

    v19 = *(_QWORD *)(v0 + 1072);
    v20 = *(_QWORD *)(v0 + 1064);
    v21 = *(_QWORD *)(v0 + 1056);
    v22 = *(_QWORD *)(v0 + 1040);
    v23 = *(_QWORD *)(v0 + 1032);
    v24 = *(_QWORD *)(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 1016);
    v26 = *(_QWORD *)(v0 + 1008);
    v27 = *(_QWORD *)(v0 + 1000);
    v60 = *(_QWORD *)(v0 + 992);
    v61 = *(_QWORD *)(v0 + 984);
    v62 = *(_QWORD *)(v0 + 976);
    v63 = *(_QWORD *)(v0 + 960);
    v64 = *(_QWORD *)(v0 + 936);
    v65 = *(_QWORD *)(v0 + 928);
    v66 = *(_QWORD *)(v0 + 904);
    v67 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_OWORD *)(v0 + 1272) = *(_OWORD *)(v0 + 1256);
  v1 = *(_QWORD *)(v0 + 1128);
  KeyPath = swift_getKeyPath(&unk_100EE1D10);
  v3 = swift_getKeyPath(&unk_100EE1D38);
  static Published.subscript.getter((_QWORD *)(v0 + 808), v1, KeyPath, v3);
  swift_release(v3);
  *(_QWORD *)&v4 = swift_release(KeyPath).n128_u64[0];
  v5 = *(void **)(v0 + 808);
  v6 = objc_msgSend(v5, "route", v4);
  *(_QWORD *)(v0 + 1288) = v6;

  if (!v6)
  {
    v13 = *(void **)(v0 + 1144);
    goto LABEL_10;
  }
  objc_opt_self(MPAVEndpointRoute);
  v7 = (void *)swift_dynamicCastObjCClass(v6);
  *(_QWORD *)(v0 + 1296) = v7;
  if (v7)
  {
    v8 = v7;
    if (!objc_msgSend(v7, "isDeviceRoute"))
    {
      v9 = *(_QWORD *)(v0 + 1128);
      v10 = swift_getKeyPath(&unk_100EE1B50);
      v11 = swift_getKeyPath(&unk_100EE1B78);
      static Published.subscript.getter((_QWORD *)(v0 + 824), v9, v10, v11);
      swift_release(v11);
      swift_release(v10);
      v12 = *(void **)(v0 + 824);

      if (!v12)
      {
        v41 = *(unsigned __int8 *)(v0 + 267);
        sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v42 = *(_QWORD *)(v0 + 1064);
        if ((v41 & 1) != 0)
        {
          sub_10005B748(v42, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v43 = *(_QWORD *)(v0 + 1016);
          v44 = *(_QWORD *)(v0 + 968);
          sub_10005B704(v42, v43, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v43, v44);
          v46 = *(void ***)(v0 + 1016);
          if (EnumCaseMultiPayload == 1)
          {
            v47 = *(_QWORD *)(v0 + 960);
            v48 = *(_QWORD *)(v0 + 952);
            v49 = *(_QWORD *)(v0 + 944);
            v50 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v48 + 32))(v47, v46, v49);
            v51 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v50);
            (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
          }
          else
          {
            v51 = *v46;
          }
          v52 = *(_QWORD *)(v0 + 1064);
          v53 = objc_msgSend(v51, "prefersEnqueuingUsingAirPlay");

          sub_10005B748(v52, type metadata accessor for PlaybackIntentDescriptor);
          if ((v53 & 1) == 0)
          {
            v55 = *(_QWORD *)(v0 + 1056);
            v56 = *(_QWORD *)(v0 + 840);
            v57 = objc_msgSend(v8, "supportsRemoteControl");
            sub_10005B704(v56, v55, type metadata accessor for PlaybackIntentDescriptor);
            if ((v57 & 1) != 0)
            {
              v58 = *(_QWORD *)(v0 + 1056);
              v59 = *(_BYTE *)(v58 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_10005B748(v58, type metadata accessor for PlaybackIntentDescriptor);
              if ((v59 & 1) == 0)
              {
                v13 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_7;
              }
LABEL_22:
              v54 = (_QWORD *)swift_task_alloc(dword_1011D8E5C);
              *(_QWORD *)(v0 + 1304) = v54;
              *v54 = v0;
              v54[1] = sub_100AD4358;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_21:
            sub_10005B748(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_22;
          }
        }
        sub_10005B704(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_21;
      }
    }
  }
  v13 = *(void **)(v0 + 1144);
LABEL_7:

LABEL_10:
  *(_QWORD *)(v0 + 1328) = v13;
  v29 = *(_QWORD *)(v0 + 1008);
  v30 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 840), v29, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v31 = swift_getEnumCaseMultiPayload(v29, v30);
  v32 = *(uint64_t **)(v0 + 1008);
  if (v31 == 1)
  {
    v33 = *(_QWORD *)(v0 + 960);
    v34 = *(_QWORD *)(v0 + 952);
    v35 = *(_QWORD *)(v0 + 944);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v34 + 32))(v33, v32, v35);
    v37 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v36);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  }
  else
  {
    v37 = *v32;
  }
  *(_QWORD *)(v0 + 1336) = v37;
  v38 = dword_1011D8A1C;
  v39 = v13;
  v40 = (_QWORD *)swift_task_alloc(v38);
  *(_QWORD *)(v0 + 1344) = v40;
  *v40 = v0;
  v40[1] = sub_100AD4500;
  return sub_100AE27C4(v37, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v13);
}

uint64_t sub_100AD4358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 1304);
  *(_QWORD *)(*(_QWORD *)v2 + 1312) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[139];
    v7 = v4[138];
    v8 = sub_100AD5D4C;
  }
  else
  {
    v4[165] = a1;
    v6 = v4[139];
    v7 = v4[138];
    v8 = sub_100AD43D4;
  }
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_100AD43D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v1 = *(void **)(v0 + 1320);
  if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
    objc_msgSend(*(id *)(v0 + 1296), "establishGroup");

  *(_QWORD *)(v0 + 1328) = v1;
  v2 = *(_QWORD *)(v0 + 1008);
  v3 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 840), v2, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  v5 = *(uint64_t **)(v0 + 1008);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 944);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v6, v5, v8);
    v10 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    v10 = *v5;
  }
  *(_QWORD *)(v0 + 1336) = v10;
  v11 = dword_1011D8A1C;
  v12 = v1;
  v13 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 1344) = v13;
  *v13 = v0;
  v13[1] = sub_100AD4500;
  return sub_100AE27C4(v10, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v1);
}

uint64_t sub_100AD4500()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1344);
  *(_QWORD *)(*v1 + 1352) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1112);
    v5 = *(_QWORD *)(v2 + 1104);
    v6 = sub_100AD46C8;
  }
  else
  {
    v7 = *(void **)(v2 + 1328);

    v4 = *(_QWORD *)(v2 + 1112);
    v5 = *(_QWORD *)(v2 + 1104);
    v6 = sub_100AD457C;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100AD457C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1328);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD46C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  _OWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  void *v133;
  id v134;
  __n128 v135;
  unint64_t v136;
  _QWORD *v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(void);
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  _BOOL4 v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v194)(uint64_t, uint64_t, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238[2];

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(void **)(v0 + 1328);

  *(_QWORD *)(v0 + 800) = v1;
  swift_errorRetain(v1);
  v3 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  if (!swift_dynamicCast(v0 + 584, v0 + 800, v3, &type metadata for Player.PlaybackError, 0))
  {
    v20 = *(void **)(v0 + 1328);
    v21 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    swift_errorRelease(*(_QWORD *)(v0 + 800));
    swift_willThrow(v22);
    swift_release(v21);

LABEL_75:
    v139 = *(_QWORD *)(v0 + 1072);
    v140 = *(_QWORD *)(v0 + 1064);
    v141 = *(_QWORD *)(v0 + 1056);
    v142 = *(_QWORD *)(v0 + 1040);
    v143 = *(_QWORD *)(v0 + 1032);
    v144 = *(_QWORD *)(v0 + 1024);
    v145 = *(_QWORD *)(v0 + 1016);
    v146 = *(_QWORD *)(v0 + 1008);
    v147 = *(_QWORD *)(v0 + 1000);
    v210 = *(_QWORD *)(v0 + 992);
    v213 = *(_QWORD *)(v0 + 984);
    v216 = *(_QWORD *)(v0 + 976);
    v219 = *(_QWORD *)(v0 + 960);
    v223 = *(_QWORD *)(v0 + 936);
    v226 = *(_QWORD *)(v0 + 928);
    v230 = *(_QWORD *)(v0 + 904);
    v233 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    swift_task_dealloc(v143);
    swift_task_dealloc(v144);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v147);
    swift_task_dealloc(v210);
    swift_task_dealloc(v213);
    swift_task_dealloc(v216);
    swift_task_dealloc(v219);
    swift_task_dealloc(v223);
    swift_task_dealloc(v226);
    swift_task_dealloc(v230);
    swift_task_dealloc(v233);
    v148 = *(uint64_t (**)(void))(v0 + 8);
    return v148();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 1352));
  v4 = *(_QWORD *)(v0 + 584);
  *(_QWORD *)(v0 + 1360) = v4;
  v5 = *(_QWORD *)(v0 + 592);
  *(_QWORD *)(v0 + 1368) = v5;
  v6 = (void *)_convertErrorToNSError(_:)(v4);
  *(_QWORD *)(v0 + 1376) = v6;
  _s3__C4CodeOMa_0(0);
  v8 = v7;
  *(_QWORD *)(v0 + 760) = 1;
  v9 = sub_100048748(&qword_1011D2CF0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EDA880);
  v10 = v6;
  v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 760, v10, v8, v9);

  if ((v11 & 1) != 0)
  {
    v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(char **)(v0 + 856);
    if (v15)
    {
      v17 = *(char **)(v0 + 848);
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v238[0] = v19;
      *(_DWORD *)v18 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v18 + 4) = sub_10099627C(v17, v16, v238);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Intent id=%{public}s) — Offering replace intent options to user", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
    }

    v35 = *(_QWORD *)(v0 + 1088);
    *(_QWORD *)(v0 + 1384) = static MainActor.shared.getter(v36);
    v37 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 1392) = v37;
    *(_QWORD *)(v0 + 1400) = v38;
    return swift_task_switch(sub_100AD5EA8, v37, v38);
  }
  *(_QWORD *)(v0 + 728) = 5;
  v23 = v10;
  v24 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 728, v23, v8, v9);

  if ((v24 & 1) != 0)
  {
    v228 = *(void **)(v0 + 1328);
    v231 = v5;
    v25 = *(_QWORD *)(v0 + 1128);
    v26 = *(_QWORD *)(v0 + 1048);
    v27 = *(_QWORD *)(v0 + 872);
    v28 = *(_QWORD *)(v0 + 840);
    swift_release(*(_QWORD *)(v0 + 1096));
    v29 = v4;
    v30 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v31 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    sub_100007E68((_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v30);
    sub_100AE4CEC(v28 + *(int *)(v26 + 28), v0 + 272);
    *(_BYTE *)(v0 + 328) = 2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8))(v0 + 272, v30, v31);
    sub_100AE2CA8((_QWORD *)(v0 + 272));
    v32 = sub_100AE26E8();
    swift_allocError(&type metadata for PlaybackController.CommandError, v32, 0, 0);
    *(_QWORD *)v33 = 1;
    *(_BYTE *)(v33 + 8) = 3;
    swift_willThrow(v34);
    swift_release(v25);
    swift_errorRelease(v29);
    swift_bridgeObjectRelease(v231);

LABEL_74:
    swift_errorRelease(*(_QWORD *)(v0 + 800));
    goto LABEL_75;
  }
  *(_QWORD *)(v0 + 720) = 3;
  v40 = v23;
  v41 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 720, v40, v8, v9);

  if ((v41 & 1) != 0)
  {
    v42 = *(_QWORD *)(v0 + 992);
    v43 = *(_QWORD *)(v0 + 968);
    sub_10005B704(*(_QWORD *)(v0 + 840), v42, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42, v43);
    v45 = *(uint64_t **)(v0 + 992);
    if (EnumCaseMultiPayload == 1)
    {
      v46 = *(_QWORD *)(v0 + 960);
      v47 = *(_QWORD *)(v0 + 952);
      v48 = *(_QWORD *)(v0 + 944);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v47 + 32))(v46, v45, v48);
      v50 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v49);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    }
    else
    {
      v50 = *v45;
    }
    *(_QWORD *)(v0 + 1448) = v50;
    v65 = (_QWORD *)swift_task_alloc(dword_1011D86C4);
    *(_QWORD *)(v0 + 1456) = v65;
    *v65 = v0;
    v65[1] = sub_100AD65E8;
    return sub_100AD0E00(v50, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
  }
  type metadata accessor for Code(0);
  v52 = v51;
  *(_QWORD *)(v0 + 680) = 1001;
  v53 = sub_100048748(&qword_1011D2D18, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EDA844);
  v54 = v40;
  v55 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 680, v54, v52, v53);

  if ((v55 & 1) == 0)
  {
    v66 = *(void **)(v0 + 1328);
    v67 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_73:
    v136 = sub_100AE26A4();
    swift_allocError(&type metadata for Player.PlaybackError, v136, 0, 0);
    *v137 = v4;
    v137[1] = v5;
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_willThrow(v138);
    swift_release(v67);
    swift_errorRelease(v4);
    swift_bridgeObjectRelease(v5);

    goto LABEL_74;
  }
  v56 = *(_QWORD *)(v0 + 984);
  v57 = *(_QWORD *)(v0 + 968);
  sub_10005B704(*(_QWORD *)(v0 + 840), v56, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v58 = swift_getEnumCaseMultiPayload(v56, v57);
  v59 = *(void ***)(v0 + 984);
  if (v58 == 1)
  {
    v60 = *(_QWORD *)(v0 + 960);
    v61 = *(_QWORD *)(v0 + 952);
    v62 = *(_QWORD *)(v0 + 944);
    v63 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v61 + 32))(v60, v59, v62);
    v64 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v63);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  }
  else
  {
    v64 = *v59;
  }
  v68 = objc_msgSend(v64, "sharedListeningProperties");

  if (!v68)
    goto LABEL_31;
  v69 = objc_msgSend(v54, "userInfo");
  v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v69, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v73 = v72;
  if (*(_QWORD *)(v70 + 16) && (v74 = sub_10079C2C4(v71, v72), (v75 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v70 + 56) + 32 * v74, v0 + 504);
  }
  else
  {
    *(_OWORD *)(v0 + 504) = 0u;
    *(_OWORD *)(v0 + 520) = 0u;
  }
  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v73);
  if (!*(_QWORD *)(v0 + 528))
  {
    swift_release(*(_QWORD *)(v0 + 1096));
    sub_10004FF60(v0 + 504, &qword_1011D7160);
    goto LABEL_45;
  }
  type metadata accessor for MPCPlayerRequestError(0);
  v77 = v76;
  if ((swift_dynamicCast(v0 + 736, v0 + 504, (char *)&type metadata for Any + 8, v76, 6) & 1) == 0)
  {
LABEL_31:
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_45:
    v99 = *(_QWORD *)(*(_QWORD *)(v0 + 872) + *(_QWORD *)(v0 + 1120));
    if (!v99)
      goto LABEL_72;
    KeyPath = swift_getKeyPath(&unk_100EE1B50);
    v101 = swift_getKeyPath(&unk_100EE1B78);
    swift_retain(v99);
    static Published.subscript.getter((_QWORD *)(v0 + 640), v102, KeyPath, v101);
    swift_release(v101);
    swift_release(KeyPath);
    swift_release(v99);
    v103 = *(void **)(v0 + 640);
    if (!v103)
      goto LABEL_72;

    v104 = objc_msgSend(v54, "userInfo");
    v105 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v104, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    v108 = v107;
    if (*(_QWORD *)(v105 + 16) && (v109 = sub_10079C2C4(v106, v107), (v110 & 1) != 0))
    {
      sub_10004FA40(*(_QWORD *)(v105 + 56) + 32 * v109, v0 + 376);
    }
    else
    {
      *(_OWORD *)(v0 + 376) = 0u;
      *(_OWORD *)(v0 + 392) = 0u;
    }
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v108);
    if (!*(_QWORD *)(v0 + 400))
    {
      sub_10004FF60(v0 + 376, &qword_1011D7160);
      goto LABEL_72;
    }
    v111 = (void **)(v0 + 616);
    type metadata accessor for MPCMusicBehaviorError(0);
    v113 = v112;
    if ((swift_dynamicCast(v0 + 616, v0 + 376, (char *)&type metadata for Any + 8, v112, 6) & 1) != 0)
    {
      v114 = *v111;
      *(_QWORD *)(v0 + 632) = *v111;
      v115 = sub_100048748(&qword_1011D2C60, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100EDA734);
      _BridgedStoredNSError.code.getter(v113, v115);
      if (*(_QWORD *)(v0 + 624) != 6)
      {

        goto LABEL_72;
      }
      v236 = v4;
      v116 = (_OWORD *)(v0 + 408);
      v225 = v114;
      v229 = v0;
      *(_QWORD *)(v0 + 648) = v114;
      v117 = _BridgedStoredNSError.userInfo.getter(v113, v115);
      v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
      v120 = v119;
      if (*(_QWORD *)(v117 + 16) && (v121 = sub_10079C2C4(v118, v119), (v122 & 1) != 0))
      {
        sub_10004FA40(*(_QWORD *)(v117 + 56) + 32 * v121, v0 + 408);
      }
      else
      {
        *v116 = 0u;
        *(_OWORD *)(v0 + 424) = 0u;
      }
      swift_bridgeObjectRelease(v117);
      swift_bridgeObjectRelease(v120);
      if (!*(_QWORD *)(v0 + 432))
      {

        sub_10004FF60((uint64_t)v116, &qword_1011D7160);
        goto LABEL_72;
      }
      v123 = sub_100007E8C(&qword_1011D8A28);
      if ((swift_dynamicCast(v0 + 656, v116, (char *)&type metadata for Any + 8, v123, 6) & 1) != 0)
      {
        v124 = *(_QWORD *)(v0 + 656);
        if (*(_QWORD *)(v124 + 16))
        {
          v125 = *(id *)(v124 + 32);
          swift_bridgeObjectRelease(v124);
          *(_QWORD *)(v0 + 672) = v125;
          _BridgedStoredNSError.code.getter(v113, v115);
          if (*(_QWORD *)(v0 + 664) != 4)
          {
LABEL_88:

            goto LABEL_72;
          }
          v126 = (_OWORD *)(v0 + 440);
          *(_QWORD *)(v0 + 688) = v125;
          v127 = _BridgedStoredNSError.userInfo.getter(v113, v115);
          v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
          v130 = v129;
          v222 = v125;
          v232 = v5;
          if (*(_QWORD *)(v127 + 16) && (v131 = sub_10079C2C4(v128, v129), (v132 & 1) != 0))
          {
            sub_10004FA40(*(_QWORD *)(v127 + 56) + 32 * v131, v0 + 440);
          }
          else
          {
            *v126 = 0u;
            *(_OWORD *)(v0 + 456) = 0u;
          }
          swift_bridgeObjectRelease(v127);
          swift_bridgeObjectRelease(v130);
          if (*(_QWORD *)(v0 + 464))
          {
            v149 = (_QWORD *)(v0 + 696);
            v150 = sub_100007E8C((uint64_t *)&unk_1011D8A30);
            if ((swift_dynamicCast(v0 + 696, v126, (char *)&type metadata for Any + 8, v150, 6) & 1) != 0)
            {
              v151 = *v149;
              if (*(_QWORD *)(*v149 + 16))
              {
                v152 = *(id *)(v151 + 32);
                swift_bridgeObjectRelease(v151);
                *(_QWORD *)(v0 + 712) = v152;
                type metadata accessor for MPCError(0);
                v154 = v153;
                v155 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
                _BridgedStoredNSError.code.getter(v154, v155);

                if (*(_QWORD *)(v0 + 704) == 61)
                {
                  v156 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
                  v157 = Logger.logObject.getter(v156);
                  v158 = static os_log_type_t.default.getter(v157);
                  v159 = os_log_type_enabled(v157, v158);
                  v160 = *(char **)(v0 + 856);
                  if (v159)
                  {
                    v161 = *(char **)(v0 + 848);
                    v162 = swift_slowAlloc(12, -1);
                    v163 = swift_slowAlloc(32, -1);
                    v238[0] = v163;
                    *(_DWORD *)v162 = 136446210;
                    swift_bridgeObjectRetain();
                    *(_QWORD *)(v162 + 4) = sub_10099627C(v161, v160, v238);
                    swift_bridgeObjectRelease_n(v160, 3);
                    _os_log_impl((void *)&_mh_execute_header, v157, v158, "Intent id=%{public}s) — SharePlayTogether content not available in host's storefront", (uint8_t *)v162, 0xCu);
                    swift_arrayDestroy(v163, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v163, -1, -1);
                    swift_slowDealloc(v162, -1, -1);
                  }
                  else
                  {
                    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
                  }

                  v164 = *(_QWORD *)(v0 + 936);
                  v165 = *(_QWORD *)(v0 + 928);
                  v166 = *(_QWORD *)(v0 + 920);
                  v167 = *(_QWORD *)(v229 + 912);
                  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E502E0);
                  v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 16);
                  v168(v165, v164, v167);
                  if (qword_1011D1B40 != -1)
                    swift_once(&qword_1011D1B40, sub_1009887D8);
                  v217 = *(_QWORD *)(v229 + 1128);
                  v220 = *(void **)(v229 + 1328);
                  v169 = *(_QWORD *)(v229 + 936);
                  v170 = *(_QWORD *)(v229 + 928);
                  v171 = *(_QWORD *)(v229 + 920);
                  v172 = *(_QWORD *)(v229 + 912);
                  v173 = *(_QWORD *)(v229 + 904);
                  v206 = *(_QWORD *)(v229 + 896);
                  v209 = *(_QWORD *)(v229 + 888);
                  v211 = *(_QWORD *)(v229 + 880);
                  v214 = *(_QWORD *)(v229 + 872);
                  v174 = qword_10124DE50;
                  static Locale.current.getter((id)qword_10124DE50);
                  v175 = String.init(localized:table:bundle:locale:comment:)(v170, 0, 0, v174, v173, 0, 0, 256);
                  v207 = v176;
                  v208 = v175;
                  v177 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
                  v177(v169, v172);
                  String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x8000000100E50300);
                  v168(v170, v169, v172);
                  v178 = qword_10124DE50;
                  static Locale.current.getter((id)qword_10124DE50);
                  v179 = String.init(localized:table:bundle:locale:comment:)(v170, 0, 0, v178, v173, 0, 0, 256);
                  v204 = v180;
                  v205 = v179;
                  v177(v169, v172);
                  v181 = sub_100007E8C(&qword_1011D8810);
                  v182 = swift_allocObject(v181, 88, 7);
                  *(_OWORD *)(v182 + 16) = xmmword_100EA7AA0;
                  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
                  v168(v170, v169, v172);
                  v183 = qword_10124DE50;
                  static Locale.current.getter((id)qword_10124DE50);
                  v184 = String.init(localized:table:bundle:locale:comment:)(v170, 0, 0, v183, v173, 0, 0, 256);
                  v186 = v185;
                  v187 = ((uint64_t (*)(uint64_t, uint64_t))v177)(v169, v172);
                  v188 = UUID.init()(v187);
                  v189 = UUID.uuidString.getter(v188);
                  v191 = v190;
                  (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v206, v211);
                  *(_QWORD *)(v182 + 32) = v189;
                  *(_QWORD *)(v182 + 40) = v191;
                  *(_QWORD *)(v182 + 48) = v184;
                  *(_QWORD *)(v182 + 56) = v186;
                  *(_BYTE *)(v182 + 64) = 2;
                  *(_QWORD *)(v182 + 72) = 0;
                  *(_QWORD *)(v182 + 80) = 0;
                  v192 = *(_QWORD *)(v214 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
                  v193 = *(_QWORD *)(v214 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
                  sub_100007E68((_QWORD *)(v214 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v192);
                  *(_QWORD *)(v229 + 208) = v208;
                  *(_QWORD *)(v229 + 216) = v207;
                  *(_QWORD *)(v229 + 224) = v205;
                  *(_QWORD *)(v229 + 232) = v204;
                  *(_BYTE *)(v229 + 240) = 0;
                  *(_QWORD *)(v229 + 248) = v182;
                  *(_QWORD *)(v229 + 256) = 0;
                  *(_BYTE *)(v229 + 264) = 0;
                  v194 = *(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 8);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v194(v229 + 208, v192, v193);
                  swift_release(v217);
                  swift_bridgeObjectRelease(v207);
                  swift_bridgeObjectRelease(v204);
                  swift_bridgeObjectRelease(v182);

                  swift_errorRelease(v236);
                  swift_bridgeObjectRelease(v232);

                  sub_100AE2CA8((_QWORD *)(v229 + 208));
                  swift_errorRelease(*(_QWORD *)(v229 + 800));
                  v195 = *(_QWORD *)(v229 + 1072);
                  v196 = *(_QWORD *)(v229 + 1064);
                  v197 = *(_QWORD *)(v229 + 1056);
                  v198 = *(_QWORD *)(v229 + 1040);
                  v199 = *(_QWORD *)(v229 + 1032);
                  v200 = *(_QWORD *)(v229 + 1024);
                  v201 = *(_QWORD *)(v229 + 1016);
                  v202 = *(_QWORD *)(v229 + 1008);
                  v203 = *(_QWORD *)(v229 + 1000);
                  v212 = *(_QWORD *)(v229 + 992);
                  v215 = *(_QWORD *)(v229 + 984);
                  v218 = *(_QWORD *)(v229 + 976);
                  v221 = *(_QWORD *)(v229 + 960);
                  v224 = *(_QWORD *)(v229 + 936);
                  v227 = *(_QWORD *)(v229 + 928);
                  v234 = *(_QWORD *)(v229 + 904);
                  v237 = *(_QWORD *)(v229 + 896);
                  swift_task_dealloc(*(_QWORD *)(v229 + 1080));
                  swift_task_dealloc(v195);
                  swift_task_dealloc(v196);
                  swift_task_dealloc(v197);
                  swift_task_dealloc(v198);
                  swift_task_dealloc(v199);
                  swift_task_dealloc(v200);
                  swift_task_dealloc(v201);
                  swift_task_dealloc(v202);
                  swift_task_dealloc(v203);
                  swift_task_dealloc(v212);
                  swift_task_dealloc(v215);
                  swift_task_dealloc(v218);
                  swift_task_dealloc(v221);
                  swift_task_dealloc(v224);
                  swift_task_dealloc(v227);
                  swift_task_dealloc(v234);
                  swift_task_dealloc(v237);
                  v148 = *(uint64_t (**)(void))(v229 + 8);
                  return v148();
                }
              }
              else
              {
                swift_bridgeObjectRelease(*v149);
              }
            }
            goto LABEL_88;
          }

          sub_10004FF60((uint64_t)v126, &qword_1011D7160);
          goto LABEL_72;
        }
        swift_bridgeObjectRelease(v124);
      }

    }
LABEL_72:
    v66 = *(void **)(v0 + 1328);
    v67 = *(_QWORD *)(v0 + 1128);
    goto LABEL_73;
  }
  v235 = v4;
  v78 = *(void **)(v0 + 736);
  *(_QWORD *)(v0 + 1472) = v78;
  *(_QWORD *)(v0 + 752) = v78;
  v79 = sub_100048748(&qword_1011D2C70, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100EDAAEC);
  _BridgedStoredNSError.code.getter(v77, v79);
  if (*(_QWORD *)(v0 + 744) != 1000)
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    v4 = v235;
    goto LABEL_45;
  }
  v80 = (_OWORD *)(v0 + 472);
  *(_QWORD *)(v0 + 768) = v78;
  v81 = _BridgedStoredNSError.userInfo.getter(v77, v79);
  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v84 = v83;
  if (*(_QWORD *)(v81 + 16))
  {
    v85 = sub_10079C2C4(v82, v83);
    if ((v86 & 1) != 0)
    {
      sub_10004FA40(*(_QWORD *)(v81 + 56) + 32 * v85, v0 + 472);
    }
    else
    {
      *v80 = 0u;
      *(_OWORD *)(v0 + 488) = 0u;
    }
  }
  else
  {
    *v80 = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
  }
  v4 = v235;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v84);
  if (!*(_QWORD *)(v0 + 496))
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    sub_10004FF60(v0 + 472, &qword_1011D7160);
    goto LABEL_45;
  }
  type metadata accessor for MPCError(0);
  v88 = v87;
  if ((swift_dynamicCast(v0 + 776, v0 + 472, (char *)&type metadata for Any + 8, v87, 6) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_44:

    goto LABEL_45;
  }
  v89 = *(void **)(v0 + 776);
  *(_QWORD *)(v0 + 1480) = v89;
  *(_QWORD *)(v0 + 792) = v89;
  v90 = sub_100048748(&qword_1011D2CC0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100EDA8E8);
  _BridgedStoredNSError.code.getter(v88, v90);
  if (*(_QWORD *)(v0 + 784) != 58)
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    goto LABEL_44;
  }
  v91 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
  v92 = Logger.logObject.getter(v91);
  v93 = static os_log_type_t.default.getter(v92);
  v94 = os_log_type_enabled(v92, v93);
  v95 = *(char **)(v0 + 856);
  if (v94)
  {
    v96 = *(char **)(v0 + 848);
    v97 = swift_slowAlloc(12, -1);
    v98 = swift_slowAlloc(32, -1);
    v238[0] = v98;
    *(_DWORD *)v97 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v97 + 4) = sub_10099627C(v96, v95, v238);
    swift_bridgeObjectRelease_n(v95, 3);
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "Intent id=%{public}s) — SharedListening requires system route", (uint8_t *)v97, 0xCu);
    swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v98, -1, -1);
    swift_slowDealloc(v97, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
  }

  v133 = (void *)objc_opt_self(MPAVRoutingController);
  *(_QWORD *)(v0 + 1488) = v133;
  v134 = objc_msgSend(v133, "systemRoute");
  *(_QWORD *)(v0 + 1496) = v134;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_100AD6654;
  *(_QWORD *)(v0 + 368) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 336) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 344) = 0x40000000;
  *(_QWORD *)(v0 + 352) = sub_100A1E374;
  *(_QWORD *)(v0 + 360) = &unk_1010F8918;
  objc_msgSend(v133, "setActiveRoute:completion:", v134, v0 + 336);
  return swift_continuation_await(v0 + 16, v135);
}

uint64_t sub_100AD5BF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD5D4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 1288);
  v2 = *(void **)(v0 + 1144);
  v3 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v3);
  v4 = *(_QWORD *)(v0 + 1072);
  v5 = *(_QWORD *)(v0 + 1064);
  v6 = *(_QWORD *)(v0 + 1056);
  v7 = *(_QWORD *)(v0 + 1040);
  v8 = *(_QWORD *)(v0 + 1032);
  v9 = *(_QWORD *)(v0 + 1024);
  v10 = *(_QWORD *)(v0 + 1016);
  v11 = *(_QWORD *)(v0 + 1008);
  v12 = *(_QWORD *)(v0 + 1000);
  v14 = *(_QWORD *)(v0 + 992);
  v15 = *(_QWORD *)(v0 + 984);
  v16 = *(_QWORD *)(v0 + 976);
  v17 = *(_QWORD *)(v0 + 960);
  v18 = *(_QWORD *)(v0 + 936);
  v19 = *(_QWORD *)(v0 + 928);
  v20 = *(_QWORD *)(v0 + 904);
  v21 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD5EA8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 1408) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_100AD5F10, v4, v6);
}

uint64_t sub_100AD5F10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = v0[109];
  v0[15] = v0 + 75;
  v0[10] = v0;
  v0[11] = sub_100AD5F68;
  v2 = swift_continuation_init(v0 + 10, 0);
  sub_100AD9AA8(v2, v1);
  return swift_continuation_await(v0 + 10, v3);
}

uint64_t sub_100AD5F68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1408);
  *(_QWORD *)(v1 + 1416) = *(_QWORD *)(v1 + 600);
  *(_BYTE *)(v1 + 270) = *(_BYTE *)(v1 + 608);
  swift_release(v2);
  return swift_task_switch(sub_100AD5FC8, *(_QWORD *)(v1 + 1392), *(_QWORD *)(v1 + 1400));
}

uint64_t sub_100AD5FC8()
{
  _QWORD *v0;

  swift_release(v0[173]);
  return swift_task_switch(sub_100AD6004, v0[138], v0[139]);
}

uint64_t sub_100AD6004()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if ((*(_BYTE *)(v0 + 270) & 1) != 0)
  {
    v1 = *(void **)(v0 + 1376);
    v2 = *(_QWORD *)(v0 + 1368);
    v3 = *(_QWORD *)(v0 + 1360);
    v4 = *(void **)(v0 + 1328);
    v5 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v6 = sub_100AE26E8();
    swift_allocError(&type metadata for PlaybackController.CommandError, v6, 0, 0);
    *(_QWORD *)v7 = 2;
    *(_BYTE *)(v7 + 8) = 3;
    swift_willThrow(v8);
    swift_release(v5);
    swift_errorRelease(v3);
    swift_bridgeObjectRelease(v2);

    swift_errorRelease(*(_QWORD *)(v0 + 800));
    v9 = *(_QWORD *)(v0 + 1072);
    v10 = *(_QWORD *)(v0 + 1064);
    v11 = *(_QWORD *)(v0 + 1056);
    v12 = *(_QWORD *)(v0 + 1040);
    v13 = *(_QWORD *)(v0 + 1032);
    v14 = *(_QWORD *)(v0 + 1024);
    v15 = *(_QWORD *)(v0 + 1016);
    v16 = *(_QWORD *)(v0 + 1008);
    v17 = *(_QWORD *)(v0 + 1000);
    v29 = *(_QWORD *)(v0 + 992);
    v30 = *(_QWORD *)(v0 + 984);
    v31 = *(_QWORD *)(v0 + 976);
    v32 = *(_QWORD *)(v0 + 960);
    v33 = *(_QWORD *)(v0 + 936);
    v34 = *(_QWORD *)(v0 + 928);
    v35 = *(_QWORD *)(v0 + 904);
    v36 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 1000);
    v20 = *(_QWORD *)(v0 + 968);
    sub_10005B704(*(_QWORD *)(v0 + 840), v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
    v22 = *(uint64_t **)(v0 + 1000);
    if (EnumCaseMultiPayload == 1)
    {
      v23 = *(_QWORD *)(v0 + 960);
      v24 = *(_QWORD *)(v0 + 952);
      v25 = *(_QWORD *)(v0 + 944);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v24 + 32))(v23, v22, v25);
      v27 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v26);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    else
    {
      v27 = *v22;
    }
    *(_QWORD *)(v0 + 1424) = v27;
    v28 = (_QWORD *)swift_task_alloc(dword_1011D8A1C);
    *(_QWORD *)(v0 + 1432) = v28;
    *v28 = v0;
    v28[1] = sub_100AD628C;
    return sub_100AE27C4(v27, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1416), 0);
  }
}

uint64_t sub_100AD628C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1432);
  *(_QWORD *)(*v1 + 1440) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_100AD646C;
  else
    v4 = sub_100AD62F8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_100AD62F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD646C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD65E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1456);
  *(_QWORD *)(*v1 + 1464) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_100AD6B54;
  else
    v4 = sub_100AE5300;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_100AD6654()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 1504) = v2;
  if (v2)
    v3 = sub_100AD6CD0;
  else
    v3 = sub_100AD66B4;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 1104), *(_QWORD *)(v1 + 1112));
}

uint64_t sub_100AD66B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 976);
  v2 = *(_QWORD *)(v0 + 968);
  v3 = *(_QWORD *)(v0 + 840);

  sub_10005B704(v3, v1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  v5 = *(uint64_t **)(v0 + 976);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 944);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v6, v5, v8);
    v10 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    v10 = *v5;
  }
  *(_QWORD *)(v0 + 1512) = v10;
  v11 = objc_msgSend(*(id *)(v0 + 1488), "systemRoute");
  *(_QWORD *)(v0 + 1520) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_1011D8A1C);
  *(_QWORD *)(v0 + 1528) = v12;
  *v12 = v0;
  v12[1] = sub_100AD67C8;
  return sub_100AE27C4(v10, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v11);
}

uint64_t sub_100AD67C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1528);
  *(_QWORD *)(*v1 + 1536) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 1512);

  if (v0)
    v5 = sub_100AD69C8;
  else
    v5 = sub_100AD6844;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_100AD6844()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 1480);
  v2 = *(void **)(v0 + 1472);
  v3 = *(void **)(v0 + 1376);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1360);
  v6 = *(void **)(v0 + 1328);
  v7 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v7);
  swift_errorRelease(v5);
  swift_bridgeObjectRelease(v4);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v8 = *(_QWORD *)(v0 + 1072);
  v9 = *(_QWORD *)(v0 + 1064);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 1040);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  v14 = *(_QWORD *)(v0 + 1016);
  v15 = *(_QWORD *)(v0 + 1008);
  v16 = *(_QWORD *)(v0 + 1000);
  v18 = *(_QWORD *)(v0 + 992);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 960);
  v22 = *(_QWORD *)(v0 + 936);
  v23 = *(_QWORD *)(v0 + 928);
  v24 = *(_QWORD *)(v0 + 904);
  v25 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD69C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 1480);
  v2 = *(void **)(v0 + 1472);
  v3 = *(void **)(v0 + 1376);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1360);
  v6 = *(void **)(v0 + 1328);
  v7 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v7);
  swift_errorRelease(v5);
  swift_bridgeObjectRelease(v4);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v8 = *(_QWORD *)(v0 + 1072);
  v9 = *(_QWORD *)(v0 + 1064);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 1040);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  v14 = *(_QWORD *)(v0 + 1016);
  v15 = *(_QWORD *)(v0 + 1008);
  v16 = *(_QWORD *)(v0 + 1000);
  v18 = *(_QWORD *)(v0 + 992);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 960);
  v22 = *(_QWORD *)(v0 + 936);
  v23 = *(_QWORD *)(v0 + 928);
  v24 = *(_QWORD *)(v0 + 904);
  v25 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD6B54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD6CD0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 1496);
  v2 = *(void **)(v0 + 1480);
  v3 = *(void **)(v0 + 1472);
  v4 = *(void **)(v0 + 1376);
  v5 = *(_QWORD *)(v0 + 1368);
  v6 = *(_QWORD *)(v0 + 1360);
  v7 = *(void **)(v0 + 1328);
  v8 = *(_QWORD *)(v0 + 1128);
  v9 = swift_release(*(_QWORD *)(v0 + 1096));
  swift_willThrow(v9);
  swift_release(v8);

  swift_errorRelease(v6);
  swift_bridgeObjectRelease(v5);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v10 = *(_QWORD *)(v0 + 1072);
  v11 = *(_QWORD *)(v0 + 1064);
  v12 = *(_QWORD *)(v0 + 1056);
  v13 = *(_QWORD *)(v0 + 1040);
  v14 = *(_QWORD *)(v0 + 1032);
  v15 = *(_QWORD *)(v0 + 1024);
  v16 = *(_QWORD *)(v0 + 1016);
  v17 = *(_QWORD *)(v0 + 1008);
  v18 = *(_QWORD *)(v0 + 1000);
  v20 = *(_QWORD *)(v0 + 992);
  v21 = *(_QWORD *)(v0 + 984);
  v22 = *(_QWORD *)(v0 + 976);
  v23 = *(_QWORD *)(v0 + 960);
  v24 = *(_QWORD *)(v0 + 936);
  v25 = *(_QWORD *)(v0 + 928);
  v26 = *(_QWORD *)(v0 + 904);
  v27 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD6E6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1[29] = v0;
  v2 = type metadata accessor for Player.CommandOptions(0);
  v1[30] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v3);
  v1[32] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[33] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[34] = v6;
  v1[35] = v7;
  return swift_task_switch(sub_100AD6F0C, v6, v7);
}

uint64_t sub_100AD6F0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t DynamicType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 200, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 288) = *v1;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 264));
    v22 = *(_QWORD *)(v0 + 248);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 104) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 112) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 84) = 1;
  *(_DWORD *)(v0 + 80) = 0;
  v3 = sub_100007E68((_QWORD *)(v0 + 80), (uint64_t)&type metadata for Player.VocalsCommand);
  DynamicType = swift_getDynamicType(v3, &type metadata for Player.VocalsCommand, 1);
  v5 = *(_QWORD *)(v0 + 112);
  swift_retain(v2);
  v6 = sub_100AEFA94(DynamicType, v5);
  if (!v6)
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 80));
    goto LABEL_11;
  }
  v7 = (void *)v6;
  v8 = MPCPlayerResponse.canPerform(_:)(v0 + 80);

  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 80));
  if (!v8)
  {
LABEL_11:
    if (qword_1011D1E38 != -1)
      swift_once(&qword_1011D1E38, sub_100AE1B34);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100048B14(v24, (uint64_t)static Logger.playbackController);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Auto-Sing] Preparing VA…", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }
    v29 = *(_QWORD *)(v0 + 256);
    v30 = *(int **)(v0 + 240);

    *(_QWORD *)(v0 + 144) = &type metadata for Player.VocalsCommand.Prepare;
    *(_QWORD *)(v0 + 152) = &protocol witness table for Player.VocalsCommand.Prepare;
    UUID.init()(v31);
    v32 = (_QWORD *)(v29 + v30[5]);
    *v32 = 0;
    v32[1] = 0;
    *(_QWORD *)(v29 + v30[6]) = 0;
    *(_BYTE *)(v29 + v30[7]) = 0;
    *(_QWORD *)(v29 + v30[8]) = 0;
    v33 = (_QWORD *)swift_task_alloc(dword_1011D8F24);
    *(_QWORD *)(v0 + 296) = v33;
    *v33 = v0;
    v33[1] = sub_100AD727C;
    v19 = *(_QWORD *)(v0 + 256);
    v20 = 5.0;
    v21 = v0 + 120;
    return sub_100AEBA58(v21, v19, v20);
  }
  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100048B14(v9, (uint64_t)static Logger.playbackController);
  *(_QWORD *)(v0 + 312) = v10;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Auto-Sing] Awaiting for Vocals Command…", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  v15 = *(int **)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 248);

  *(_QWORD *)(v0 + 184) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 192) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 164) = 1;
  *(_DWORD *)(v0 + 160) = 0;
  UUID.init()(v16);
  v17 = (_QWORD *)(v14 + v15[5]);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v14 + v15[6]) = 0;
  *(_BYTE *)(v14 + v15[7]) = 0;
  *(_QWORD *)(v14 + v15[8]) = 0;
  v18 = (_QWORD *)swift_task_alloc(dword_1011D8F24);
  *(_QWORD *)(v0 + 320) = v18;
  *v18 = v0;
  v18[1] = sub_100AD7488;
  v19 = *(_QWORD *)(v0 + 248);
  v20 = 5.0;
  v21 = v0 + 160;
  return sub_100AEBA58(v21, v19, v20);
}

uint64_t sub_100AD727C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 296);
  *(_QWORD *)(*(_QWORD *)v2 + 304) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_10005B748(v4[32], type metadata accessor for Player.CommandOptions);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_100AD7644;
  }
  else
  {
    v9 = v4[32];

    sub_10005B748(v9, type metadata accessor for Player.CommandOptions);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 15);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_100AD7320;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100AD7320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048B14(v1, (uint64_t)static Logger.playbackController);
  *(_QWORD *)(v0 + 312) = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[Auto-Sing] Awaiting for Vocals Command…", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = *(int **)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 248);

  *(_QWORD *)(v0 + 184) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 192) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 164) = 1;
  *(_DWORD *)(v0 + 160) = 0;
  UUID.init()(v8);
  v9 = (_QWORD *)(v6 + v7[5]);
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)(v6 + v7[6]) = 0;
  *(_BYTE *)(v6 + v7[7]) = 0;
  *(_QWORD *)(v6 + v7[8]) = 0;
  v10 = (_QWORD *)swift_task_alloc(dword_1011D8F24);
  *(_QWORD *)(v0 + 320) = v10;
  *v10 = v0;
  v10[1] = sub_100AD7488;
  return sub_100AEBA58(v0 + 160, *(_QWORD *)(v0 + 248), 5.0);
}

uint64_t sub_100AD7488(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 320);
  *(_QWORD *)(*(_QWORD *)v2 + 328) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_10005B748(v4[31], type metadata accessor for Player.CommandOptions);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_100AD787C;
  }
  else
  {
    v9 = v4[31];

    sub_10005B748(v9, type metadata accessor for Player.CommandOptions);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v4 + 20);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_100AD752C;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100AD752C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 264));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[Auto-Sing] Vocals command performed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 288);
  v6 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v7 = v6[3];
  v8 = v6[4];
  sub_100007E68(v6, v7);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v0 + 16, v7, v8);
  swift_release(v5);
  sub_100AE2CA8((_QWORD *)(v0 + 16));
  v9 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD7644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  swift_release(*(_QWORD *)(v0 + 264));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 304);
  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.playbackController);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 224) = v1;
    swift_errorRetain(v1);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 224, v8);
    v11 = v10;
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v18);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Auto-Sing] Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v12 = *(_QWORD *)(v0 + 288);
  v13 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v14 = v13[3];
  v15 = v13[4];
  sub_100007E68(v13, v14);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(v0 + 16, v14, v15);
  swift_release(v12);
  sub_100AE2CA8((_QWORD *)(v0 + 16));
  v16 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100AD787C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  swift_release(*(_QWORD *)(v0 + 264));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 328);
  if (qword_1011D1E38 != -1)
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)static Logger.playbackController);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 224) = v1;
    swift_errorRetain(v1);
    v8 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
    v9 = (char *)String.init<A>(describing:)(v0 + 224, v8);
    v11 = v10;
    *(_QWORD *)(v6 + 4) = sub_10099627C(v9, v10, &v18);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Auto-Sing] Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  v12 = *(_QWORD *)(v0 + 288);
  v13 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v14 = v13[3];
  v15 = v13[4];
  sub_100007E68(v13, v14);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(v0 + 16, v14, v15);
  swift_release(v12);
  sub_100AE2CA8((_QWORD *)(v0 + 16));
  v16 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Logger.siriIntents.unsafeMutableAddressor()
{
  return sub_100A68E10(&qword_1011D1E48, (uint64_t)static Logger.siriIntents, (uint64_t)sub_100AE1C50);
}

BOOL PlaybackController.canPerform(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  _BYTE v10[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v10, 0, 0);
  v4 = *v3;
  if (v4)
  {
    v5 = a1[3];
    v6 = a1[4];
    v7 = sub_100007E68(a1, v5);
    swift_retain(v4);
    v8 = sub_100AF93A4((uint64_t)v7, v4, v5, v6);
    swift_release(v4);
  }
  else
  {
    return 0;
  }
  return v8;
}

uint64_t PlaybackController.canPerform(anyOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v13[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v13, 0, 0);
  if (!*v5)
    goto LABEL_13;
  swift_retain();
  v6 = sub_100AEFA94(a1, a2);
  if (!v6)
  {
    swift_release();
LABEL_13:
    v11 = 0;
    return v11 & 1;
  }
  v7 = (void *)v6;
  v8 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
  if (v8)
    v9 = v8;
  else
    v9 = 0;
  if (v8)
    v10 = a1;
  else
    v10 = 0;
  if (!v10)
  {
    swift_release();

    goto LABEL_13;
  }
  v11 = (*(uint64_t (**)(void *))(v9 + 16))(v7);
  swift_release();

  return v11 & 1;
}

uint64_t PlaybackController.performWhenAvailable(_:options:timeout:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 64) = v3;
  *(double *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 72) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 80) = v7;
  *(_QWORD *)(v4 + 88) = v8;
  return swift_task_switch(sub_100AD7CBC, v7, v8);
}

uint64_t sub_100AD7CBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v6;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v3 = dword_1011D8F24;
    swift_retain(v2);
    v4 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_100AD7D68;
    return sub_100AEBA58(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(double *)(v0 + 56));
  }
  else
  {
    v6 = swift_release(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v6);
  }
}

uint64_t sub_100AD7D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  *(_QWORD *)(*(_QWORD *)v2 + 112) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_100AD7E1C;
  }
  else
  {
    swift_release(v4[12]);
    v4[15] = a1;
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_100AD7DE4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100AD7DE4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 120), v1);
}

uint64_t sub_100AD7E1C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100AD7EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 80, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 216) = v4;
  if (v4)
  {
    v6 = *(int **)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 136);
    v7 = *(void **)(v0 + 144);
    swift_retain(v4);
    UUID.init()(v9);
    v10 = (_QWORD *)(v5 + v6[5]);
    *v10 = 0;
    v10[1] = 0;
    v11 = v6[6];
    *(_QWORD *)(v5 + v11) = 0;
    v12 = v6[7];
    *(_BYTE *)(v5 + v12) = 0;
    v13 = v6[8];
    *(_QWORD *)(v5 + v11) = v8;
    *(_BYTE *)(v5 + v12) = 1;
    *(_QWORD *)(v5 + v13) = v7;
    v14 = dword_1011D8F34;
    v15 = v7;
    v16 = (_QWORD *)swift_task_alloc(v14);
    *(_QWORD *)(v0 + 224) = v16;
    *v16 = v0;
    v16[1] = sub_100AD800C;
    return sub_100AED380(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 176));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100AD800C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  v6 = v4[27];
  v7 = v4[22];
  if (v1)
  {
    sub_10005B748(v7, type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v8 = v4[24];
    v9 = v4[25];
    v10 = sub_100AD848C;
  }
  else
  {
    v4[30] = a1;
    sub_10005B748(v7, type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v8 = v4[24];
    v9 = v4[25];
    v10 = sub_100AD80B0;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_100AD80B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 184));
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(void **)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v1);
    goto LABEL_18;
  }
  if (v1 >= 0)
    v33 = v1 & 0xFFFFFFFFFFFFFF8;
  else
    v33 = v1;
  swift_bridgeObjectRetain();
  v2 = (void *)_CocoaArrayWrapper.endIndex.getter(v33);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    v3 = *(id *)(v1 + 32);
  }
  v2 = v3;
  v4 = objc_msgSend(v3, "dialog", swift_bridgeObjectRelease(v1).n128_f64[0]);
  if (!v4)
  {

LABEL_18:
    sub_100AE2C7C(0, 0);
    goto LABEL_19;
  }
  v38 = (uint64_t *)(v0 + 16);
  v39 = v4;
  if (qword_1011D1E38 != -1)
LABEL_22:
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = type metadata accessor for Logger(0);
  sub_100048B14(v6, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v5, 2);
  v7 = v2;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 128);
  v37 = v7;
  if (v10)
  {
    v12 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v40 = v35;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v13 = sub_100007E8C(&qword_1011D86F0);
    v14 = (char *)Array.description.getter(v11, v13);
    v16 = v15;
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v12 + 4) = sub_10099627C(v14, v16, &v40);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease_n(v11, 2);
    *(_WORD *)(v12 + 12) = 2082;
    v17 = v7;
    v18 = objc_msgSend(v17, "description");
    v19 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v12 + 14) = sub_10099627C(v19, v21, &v40);
    swift_bridgeObjectRelease(v21);

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "⤵️ 🛑 Commands %{public}s — Perform error -> Presenting dialog for status=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v11, 2);

  }
  v22 = *(_QWORD *)(v0 + 208);
  v23 = *(void **)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 160);
  v25 = (_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v26 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v27 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_100007E68((_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v26);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 40);
  v36 = v23;
  v29 = v28(v26, v27);
  v30 = *(_QWORD *)(v24 + v22);
  v32 = v25[3];
  v31 = v25[4];
  sub_100007E68(v25, v32);
  swift_retain(v30);
  MPCPlayerCommandDialog.alert(context:completion:)(v23, v29, v30, 0, 0, v38);
  *(_BYTE *)(v0 + 72) = 0;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v31 + 8))(v38, v32, v31);
  sub_100AE2CA8(v38);

  swift_release(v29);
  swift_release(v30);

LABEL_19:
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100AD848C()
{
  uint64_t v0;
  uint64_t v1;
  char **v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  id v29;
  id v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  __n128 v51;
  uint64_t v53;
  id v54;
  uint64_t *v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59[2];

  v3 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(v0 + 120) = v3;
  v4 = (_QWORD *)(v0 + 120);
  swift_errorRetain(v3);
  v5 = sub_100007E8C((uint64_t *)&unk_1011D67C0);
  if ((swift_dynamicCast(v0 + 104, v0 + 120, v5, &type metadata for Player.PlaybackError, 0) & 1) == 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
LABEL_29:
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 232));
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = (void *)((unint64_t)v6 >> 62);
  if (!((unint64_t)v6 >> 62))
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_4;
LABEL_27:
    swift_bridgeObjectRelease(v6);
    goto LABEL_28;
  }
  if (v6 < 0)
    v48 = *(_QWORD *)(v0 + 112);
  else
    v48 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v48))
    goto LABEL_27;
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    v10 = *(id *)(v6 + 32);
  }
  v11 = v10;
  v2 = &selRef_handleVolumeDownButton;
  v12 = objc_msgSend(v10, "dialog", swift_bridgeObjectRelease(v6).n128_f64[0]);

  if (!v12)
  {
LABEL_28:
    v49 = sub_100AE26A4();
    swift_allocError(&type metadata for Player.PlaybackError, v49, 0, 0);
    *v50 = v7;
    v50[1] = v6;
    swift_willThrow(v51);
    swift_errorRelease(*v4);
    goto LABEL_29;
  }

  v13 = *v4;
  swift_bridgeObjectRetain();
  swift_errorRelease(v13);
  v1 = v6 & 0xFFFFFFFFFFFFFF8;
  if (!v8)
  {
    v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_10;
LABEL_36:
    swift_bridgeObjectRelease(v6);
    goto LABEL_37;
  }
LABEL_32:
  if (v6 >= 0)
    v53 = v1;
  else
    v53 = v6;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v53))
    goto LABEL_36;
LABEL_10:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_41;
    }
    v15 = *(id *)(v6 + 32);
  }
  v8 = v15;
  v58 = objc_msgSend(v15, v2[374], swift_bridgeObjectRelease(v6).n128_f64[0]);
  if (!v58)
  {

LABEL_37:
    sub_100AE2C7C(v7, v6);
    goto LABEL_38;
  }
  v55 = (uint64_t *)(v0 + 16);
  if (qword_1011D1E38 != -1)
LABEL_41:
    swift_once(&qword_1011D1E38, sub_100AE1B34);
  v16 = *(_QWORD *)(v0 + 128);
  v17 = type metadata accessor for Logger(0);
  sub_100048B14(v17, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v16, 2);
  v18 = v8;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 128);
  v56 = v18;
  v57 = v7;
  if (v21)
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v59[0] = v24;
    *(_DWORD *)v23 = 136446466;
    swift_bridgeObjectRetain();
    v25 = sub_100007E8C(&qword_1011D86F0);
    v26 = (char *)Array.description.getter(v22, v25);
    v28 = v27;
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)(v23 + 4) = sub_10099627C(v26, v28, v59);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease_n(v22, 2);
    *(_WORD *)(v23 + 12) = 2082;
    v29 = v18;
    v30 = objc_msgSend(v29, "description");
    v31 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    *(_QWORD *)(v23 + 14) = sub_10099627C(v31, v33, v59);
    swift_bridgeObjectRelease(v33);

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "⤵️ 🛑 Commands %{public}s — Perform error -> Presenting dialog for status=%{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v22, 2);

  }
  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(void **)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 160);
  v37 = (_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v38 = *(_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v39 = *(_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_100007E68((_QWORD *)(v36 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v38);
  v40 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 40);
  v54 = v35;
  v41 = v40(v38, v39);
  v42 = *(_QWORD *)(v36 + v34);
  v43 = v37[3];
  v44 = v37[4];
  sub_100007E68(v37, v43);
  swift_retain(v42);
  MPCPlayerCommandDialog.alert(context:completion:)(v35, v41, v42, 0, 0, v55);
  *(_BYTE *)(v0 + 72) = 0;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 8))(v55, v43, v44);
  sub_100AE2CA8(v55);
  if (v57)
  {
    v45 = sub_100AE26A4();
    swift_allocError(&type metadata for Player.PlaybackError, v45, 0, 0);
    *v46 = v57;
    v46[1] = v6;
    swift_errorRetain(v57);
    swift_bridgeObjectRetain();
    swift_willThrow(v47);

    swift_errorRelease(v57);
    swift_release(v41);
    swift_release(v42);

    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_29;
  }

  swift_release(v41);
  swift_release(v42);

LABEL_38:
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_100AD8A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  v5 = type metadata accessor for Locale(0);
  v4[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[43] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[44] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[45] = swift_task_alloc(v8);
  v4[46] = swift_task_alloc(v8);
  v9 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4[47] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[48] = v10;
  v4[49] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v4[50] = v11;
  v4[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v4[52] = v12;
  v4[53] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v4[54] = v14;
  v4[55] = v15;
  return swift_task_switch(sub_100AD8B80, v14, v15);
}

uint64_t sub_100AD8B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t DynamicType;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v47;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = type metadata accessor for PlaybackIntentDescriptor(0);
  sub_100AE4CEC(v1 + *(int *)(v2 + 28), v0 + 160);
  sub_100AE4CEC(v0 + 160, v0 + 240);
  v3 = *(_QWORD *)(v0 + 264);
  if (!v3)
  {
    sub_10004FF60(v0 + 240, &qword_1011D8A40);
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_QWORD *)(v0 + 152) = 0;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(v0 + 272);
  sub_100007E68((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
  sub_100ADB1F0(v3, v4, v0 + 120);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 240));
  if (!*(_QWORD *)(v0 + 144))
  {
LABEL_12:
    sub_10004FF60(v0 + 120, &qword_1011D8A40);
    goto LABEL_13;
  }
  sub_100064C48((__int128 *)(v0 + 120), v0 + 80);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = sub_100007E68((_QWORD *)(v0 + 80), v5);
  DynamicType = swift_getDynamicType(v6, v5, 1);
  if (qword_1011D1F40 != -1)
    swift_once(&qword_1011D1F40, sub_100B4C400);
  v8 = *((_QWORD *)off_1011DBAA8 + 2);
  if (!v8)
  {
LABEL_9:
    v10 = *(_QWORD *)(v0 + 400);
    v11 = *(_QWORD *)(v0 + 408);
    sub_10005B704(*(_QWORD *)(v0 + 304), v11, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v10);
    v13 = *(uint64_t **)(v0 + 408);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *(_QWORD *)(v0 + 384);
      v14 = *(_QWORD *)(v0 + 392);
      v16 = *(_QWORD *)(v0 + 376);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v15 + 32))(v14, v13, v16);
      v18 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v17);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    else
    {
      v18 = *v13;
    }
    *(_QWORD *)(v0 + 448) = v18;
    v47 = (_QWORD *)swift_task_alloc(dword_1011D86C4);
    *(_QWORD *)(v0 + 456) = v47;
    *v47 = v0;
    v47[1] = sub_100AD8FB8;
    return sub_100AD0E00(v18, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
  }
  v9 = (_QWORD *)((char *)off_1011DBAA8 + 32);
  while (*v9 != DynamicType)
  {
    v9 += 2;
    if (!--v8)
      goto LABEL_9;
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 80));
LABEL_13:
  if (qword_1011D1F48 != -1)
    swift_once(&qword_1011D1F48, sub_100B4CA40);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100048B14(v19, (uint64_t)static Logger.sharedListening);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Offering SharePlay options (Play Now/Next/Last)", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  sub_100AE4CEC(v0 + 160, v0 + 200);
  v24 = *(_QWORD *)(v0 + 224);
  if (v24)
  {
    v25 = *(_QWORD *)(v0 + 232);
    sub_100007E68((_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 224));
    v26 = sub_100ADB510(v24, v25);
    v28 = v27;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 200));
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 360);
    v31 = *(_QWORD *)(v0 + 368);
    v32 = *(_QWORD *)(v0 + 344);
    v33 = *(_QWORD *)(v0 + 352);
    sub_10004FF60(v0 + 200, &qword_1011D8A40);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000030, 0x8000000100E50350);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v30, v31, v32);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v34 = *(_QWORD *)(v0 + 360);
    v35 = *(_QWORD *)(v0 + 368);
    v36 = *(_QWORD *)(v0 + 344);
    v37 = *(_QWORD *)(v0 + 352);
    v38 = *(_QWORD *)(v0 + 336);
    v39 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v26 = String.init(localized:table:bundle:locale:comment:)(v34, 0, 0, v39, v38, 0, 0, 256);
    v28 = v40;
    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  }
  *(_QWORD *)(v0 + 472) = v28;
  *(_QWORD *)(v0 + 480) = v26;
  v41 = static MainActor.shared.getter(v29);
  *(_QWORD *)(v0 + 488) = v41;
  if (v41)
  {
    ObjectType = swift_getObjectType();
    v43 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v45 = v44;
  }
  else
  {
    v43 = 0;
    v45 = 0;
  }
  return swift_task_switch(sub_100AD90C0, v43, v45);
}

uint64_t sub_100AD8FB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 448);
  v3 = *(_QWORD *)(*v1 + 456);
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_100AD9250;
  else
    v5 = sub_100AD9024;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 432), *(_QWORD *)(v2 + 440));
}

uint64_t sub_100AD9024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 424));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 80));
  sub_10004FF60(v0 + 160, &qword_1011D8A40);
  v1 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v0 + 8))(0, 0, 1);
}

uint64_t sub_100AD90C0()
{
  _QWORD *v0;
  uint64_t v1;
  ValueMetadata *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v2 = (ValueMetadata *)v0[59];
  v1 = v0[60];
  v3 = v0[41];
  v4 = v0[38];
  v0[7] = v0 + 35;
  v0[2] = v0;
  v0[3] = sub_100AD913C;
  v5 = swift_continuation_init(v0 + 2, 0);
  sub_100ADBE18(v5, v4, v3, v1, v2);
  return swift_continuation_await(v0 + 2, v6);
}

uint64_t sub_100AD913C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *v0 + 280;
  v3 = *(_QWORD *)(*v0 + 488);
  v4 = *(_QWORD *)(*v0 + 472);
  *(_OWORD *)(v1 + 496) = *(_OWORD *)v2;
  *(_BYTE *)(v1 + 297) = *(_BYTE *)(v2 + 16);
  swift_release(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_100AD91A8, *(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440));
}

uint64_t sub_100AD91A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 424));
  sub_10004FF60(v0 + 160, &qword_1011D8A40);
  v1 = *(unsigned __int8 *)(v0 + 297);
  v3 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 392);
  v6 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v3, v2, v1);
}

uint64_t sub_100AD9250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 424));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 80));
  sub_10004FF60(v0 + 160, &qword_1011D8A40);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_100AD92F4(id a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *result;
  id v10;
  _QWORD *v11;
  uint64_t DynamicType;
  _UNKNOWN **v13;
  id v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  id v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _UNKNOWN **v25;
  id v26;
  uint64_t v27;
  void *v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t inited;
  _QWORD *v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  void *v39;
  BOOL v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  BOOL v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  unint64_t v53;
  id v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  BOOL v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  __int128 v72;
  ValueMetadata *v73;
  _UNKNOWN **v74;
  _QWORD v75[5];
  uint64_t v76;
  __int128 v77;
  ValueMetadata *v78;
  _UNKNOWN **v79;
  _QWORD *v80;
  char v81[32];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v7, v81, 0, 0);
  v8 = *v7;
  result = _swiftEmptyArrayStorage;
  if (*v7)
  {
    v80 = _swiftEmptyArrayStorage;
    if ((a2 & 2) != 0)
    {
      v78 = &type metadata for Player.ReplaceCommand;
      v79 = &protocol witness table for Player.ReplaceCommand;
      *(_QWORD *)&v77 = a1;
      *((_QWORD *)&v77 + 1) = a3;
      v11 = sub_100007E68(&v77, (uint64_t)&type metadata for Player.ReplaceCommand);
      DynamicType = swift_getDynamicType(v11, &type metadata for Player.ReplaceCommand, 1);
      v13 = v79;
      v14 = a1;
      swift_retain(v8);
      v15 = sub_100AEFA94(DynamicType, (uint64_t)v13);
      if (v15)
      {
        v16 = (void *)v15;
        v17 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
        if (v17)
        {
          v18 = v14;
          v19 = _swiftEmptyArrayStorage;
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            v19 = sub_1009B9BA8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
          v21 = v19[2];
          v20 = v19[3];
          v22 = v21 + 1;
          if (v21 >= v20 >> 1)
            v19 = sub_1009B9BA8((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
          v78 = &type metadata for Player.ReplaceCommand;
          v79 = &protocol witness table for Player.ReplaceCommand;
          *(_QWORD *)&v77 = v18;
          *((_QWORD *)&v77 + 1) = a3;
          goto LABEL_36;
        }
      }
      else
      {
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);

      }
    }
    else
    {
      v10 = a1;
      swift_retain(v8);
    }
    if ((a2 & 1) == 0)
    {
      if ((a2 & 4) != 0)
      {
        v78 = &type metadata for Player.InsertCommand;
        v79 = &protocol witness table for Player.InsertCommand;
        v77 = (unint64_t)a1;
        v23 = sub_100007E68(&v77, (uint64_t)&type metadata for Player.InsertCommand);
        v24 = swift_getDynamicType(v23, &type metadata for Player.InsertCommand, 1);
        v25 = v79;
        v26 = a1;
        v27 = sub_100AEFA94(v24, (uint64_t)v25);
        if (v27)
        {
          v28 = (void *)v27;
          v29 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
          if (v29)
          {
            v18 = v26;
            v19 = _swiftEmptyArrayStorage;
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              v19 = sub_1009B9BA8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
            v31 = v19[2];
            v30 = v19[3];
            if (v31 >= v30 >> 1)
              v19 = sub_1009B9BA8((_QWORD *)(v30 > 1), v31 + 1, 1, v19);
            v78 = &type metadata for Player.InsertCommand;
            v79 = &protocol witness table for Player.InsertCommand;
            v77 = (unint64_t)v18;
            v19[2] = v31 + 1;
            v32 = &v19[5 * v31];
            goto LABEL_37;
          }
        }
        else
        {
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);

        }
      }
      if ((a2 & 8) != 0)
      {
        v78 = &type metadata for Player.InsertCommand;
        v79 = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)&v77 = a1;
        *((_QWORD *)&v77 + 1) = 1;
        v47 = sub_100007E68(&v77, (uint64_t)&type metadata for Player.InsertCommand);
        v48 = swift_getDynamicType(v47, &type metadata for Player.InsertCommand, 1);
        v49 = v79;
        a1 = a1;
        v50 = sub_100AEFA94(v48, (uint64_t)v49);
        if (v50)
        {
          v51 = (void *)v50;
          v52 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
          if (v52)
          {
            v18 = a1;
            v19 = _swiftEmptyArrayStorage;
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              v19 = sub_1009B9BA8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
            v21 = v19[2];
            v53 = v19[3];
            v22 = v21 + 1;
            if (v21 >= v53 >> 1)
              v19 = sub_1009B9BA8((_QWORD *)(v53 > 1), v21 + 1, 1, v19);
            v78 = &type metadata for Player.InsertCommand;
            v79 = &protocol witness table for Player.InsertCommand;
            *(_QWORD *)&v77 = v18;
            *((_QWORD *)&v77 + 1) = 1;
LABEL_36:
            v19[2] = v22;
            v32 = &v19[5 * v21];
LABEL_37:
            sub_100064C48(&v77, (uint64_t)(v32 + 4));
            swift_release(v8);

            return v19;
          }
        }
        else
        {
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);

        }
      }
LABEL_53:
      swift_release(v8);

      return v80;
    }
    v33 = sub_100007E8C((uint64_t *)&unk_1011D96C0);
    inited = swift_initStackObject(v33, &v76);
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    *(_QWORD *)(inited + 56) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(inited + 64) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 96) = &type metadata for Player.ChangeCommand;
    *(_QWORD *)(inited + 104) = &protocol witness table for Player.ChangeCommand;
    *(_BYTE *)(inited + 72) = 1;
    v78 = &type metadata for Player.InsertCommand;
    v79 = &protocol witness table for Player.InsertCommand;
    v77 = (unint64_t)a1;
    v35 = sub_100007E68(&v77, (uint64_t)&type metadata for Player.InsertCommand);
    v36 = swift_getDynamicType(v35, &type metadata for Player.InsertCommand, 1);
    v37 = v79;
    a1 = a1;
    v38 = sub_100AEFA94(v36, (uint64_t)v37);
    if (v38)
    {
      v39 = (void *)v38;
      v40 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
      if (v40)
      {
        v78 = &type metadata for Player.ChangeCommand;
        v79 = &protocol witness table for Player.ChangeCommand;
        LOBYTE(v77) = 1;
        v41 = sub_100007E68(&v77, (uint64_t)&type metadata for Player.ChangeCommand);
        v42 = swift_getDynamicType(v41, &type metadata for Player.ChangeCommand, 1);
        v43 = sub_100AEFA94(v42, (uint64_t)v79);
        if (v43)
        {
          v44 = (void *)v43;
          v45 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
          if (v45)
          {
            sub_100A05368(inited);
            v78 = &type metadata for Player.ReplaceCommand;
            v79 = &protocol witness table for Player.ReplaceCommand;
            *(_QWORD *)&v77 = a1;
            *((_QWORD *)&v77 + 1) = a3;
            v46 = a1;
            goto LABEL_45;
          }
        }
        else
        {
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
        }
      }
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);

    }
    swift_bridgeObjectRelease(inited);
    v78 = &type metadata for Player.ReplaceCommand;
    v79 = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)&v77 = a1;
    *((_QWORD *)&v77 + 1) = a3;
    sub_100064C78((uint64_t)&v77, (uint64_t)v75);
    v54 = a1;
    v55 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    {
      v55 = sub_1009B9BA8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      v80 = v55;
    }
    v57 = v55[2];
    v56 = v55[3];
    if (v57 >= v56 >> 1)
    {
      v55 = sub_1009B9BA8((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
      v80 = v55;
    }
    v58 = sub_1006EA194((uint64_t)v75, v75[3]);
    __chkstk_darwin(v58);
    v60 = (uint64_t *)((char *)&v72 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v61 + 16))(v60);
    v62 = *v60;
    v63 = v60[1];
    v73 = &type metadata for Player.ReplaceCommand;
    v74 = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)&v72 = v62;
    *((_QWORD *)&v72 + 1) = v63;
    v55[2] = v57 + 1;
    sub_100064C48(&v72, (uint64_t)&v55[5 * v57 + 4]);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v75);
LABEL_45:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
    v78 = &type metadata for Player.PlaybackCommand;
    v79 = &protocol witness table for Player.PlaybackCommand;
    LOBYTE(v77) = 0;
    v64 = sub_100007E68(&v77, (uint64_t)&type metadata for Player.PlaybackCommand);
    v65 = swift_getDynamicType(v64, &type metadata for Player.PlaybackCommand, 1);
    v66 = sub_100AEFA94(v65, (uint64_t)v79);
    if (v66)
    {
      v67 = (void *)v66;
      v68 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
      if (v68)
      {
        v69 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
          v69 = sub_1009B9BA8(0, v69[2] + 1, 1, v69);
        v71 = v69[2];
        v70 = v69[3];
        if (v71 >= v70 >> 1)
          v69 = sub_1009B9BA8((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
        v78 = &type metadata for Player.PlaybackCommand;
        v79 = &protocol witness table for Player.PlaybackCommand;
        LOBYTE(v77) = 0;
        v69[2] = v71 + 1;
        sub_100064C48(&v77, (uint64_t)&v69[5 * v71 + 4]);
        swift_release(v8);

        return v69;
      }
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v77);
    }
    goto LABEL_53;
  }
  return result;
}

_QWORD *sub_100AD9AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[4];
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;

  v63 = (char *)a2;
  v59 = a1;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v52 - v14;
  String.LocalizationValue.init(stringLiteral:)(1885693259, 0xE400000000000000);
  v65 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v65(v13, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v16 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v60 = (_QWORD *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v16, v8, 0, 0, 256);
  v68 = v17;
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  v19 = swift_allocObject(&unk_1010F89E0, 24, 7);
  v62 = v19;
  v20 = v59;
  *(_QWORD *)(v19 + 16) = v59;
  v21 = UUID.init()(v19);
  v58 = UUID.uuidString.getter(v21);
  v64 = v22;
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v5, v2);
  String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
  v65(v13, v15, v9);
  v24 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v57 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v24, v8, 0, 0, 256);
  v67 = v25;
  v18(v15, v9);
  v26 = swift_allocObject(&unk_1010F8A08, 24, 7);
  v61 = v26;
  *(_QWORD *)(v26 + 16) = v20;
  v27 = UUID.init()(v26);
  v56 = UUID.uuidString.getter(v27);
  v66 = v28;
  v23(v5, v2);
  v29 = v2;
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v30 = qword_10124ED40;
  v55 = static String.cancelButtonTitle;
  v54 = swift_allocObject(&unk_1010F8A30, 24, 7);
  *(_QWORD *)(v54 + 16) = v20;
  v31 = swift_bridgeObjectRetain();
  v32 = UUID.init()(v31);
  v59 = UUID.uuidString.getter(v32);
  v34 = v33;
  v23(v5, v29);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x8000000100E504D0);
  v65(v13, v15, v9);
  v35 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v65 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v35, v8, 0, 0, 256);
  v52 = v36;
  v18(v15, v9);
  v37 = sub_100007E8C(&qword_1011D8810);
  v38 = swift_allocObject(v37, 200, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100EA7AC0;
  v39 = v64;
  *(_QWORD *)(v38 + 32) = v58;
  *(_QWORD *)(v38 + 40) = v39;
  v40 = v68;
  *(_QWORD *)(v38 + 48) = v60;
  *(_QWORD *)(v38 + 56) = v40;
  *(_BYTE *)(v38 + 64) = 2;
  v42 = v61;
  v41 = v62;
  *(_QWORD *)(v38 + 72) = &unk_1011D8AA8;
  *(_QWORD *)(v38 + 80) = v41;
  v43 = v66;
  *(_QWORD *)(v38 + 88) = v56;
  *(_QWORD *)(v38 + 96) = v43;
  v44 = v67;
  *(_QWORD *)(v38 + 104) = v57;
  *(_QWORD *)(v38 + 112) = v44;
  *(_BYTE *)(v38 + 120) = 2;
  *(_QWORD *)(v38 + 128) = &unk_1011D8AB8;
  *(_QWORD *)(v38 + 136) = v42;
  *(_QWORD *)(v38 + 144) = v59;
  *(_QWORD *)(v38 + 152) = v34;
  *(_QWORD *)(v38 + 160) = v55;
  *(_QWORD *)(v38 + 168) = v30;
  v53 = v30;
  *(_BYTE *)(v38 + 176) = 2;
  v45 = v54;
  *(_QWORD *)(v38 + 184) = &unk_1011D8AC8;
  *(_QWORD *)(v38 + 192) = v45;
  v46 = &v63[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator];
  v47 = *(_QWORD *)&v63[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32];
  v63 = *(char **)&v63[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24];
  v60 = sub_100007E68(v46, (uint64_t)v63);
  v69[0] = 0;
  v69[1] = 0;
  v48 = v52;
  v69[2] = v65;
  v69[3] = v52;
  v70 = 0;
  v71 = v38;
  v72 = 0;
  v73 = 0;
  v65 = *(void (**)(char *, char *, uint64_t))(v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = v68;
  swift_bridgeObjectRetain();
  swift_retain(v41);
  swift_bridgeObjectRetain();
  v50 = v67;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  swift_bridgeObjectRetain();
  swift_retain(v45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65((char *)v69, v63, v47);
  swift_release(v41);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v64);
  swift_release(v42);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v66);
  swift_release(v45);
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(0);
  return sub_100AE2CA8(v69);
}

uint64_t sub_100ADA03C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_100ADA054, 0, 0);
}

uint64_t sub_100ADA054()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 2;
  *(_BYTE *)(v0 + 24) = 0;
  sub_100065228(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1011D8AD0);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ADA0AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_100ADA0C4, 0, 0);
}

uint64_t sub_100ADA0C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 1;
  *(_BYTE *)(v0 + 24) = 0;
  sub_100065228(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1011D8AD0);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ADA11C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_100ADA134, 0, 0);
}

uint64_t sub_100ADA134()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  sub_100065228(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1011D8AD0);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ADA18C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v18[-v10];
  if (!a1)
    goto LABEL_6;
  if (objc_msgSend(a1, "isHomePodRoute"))
  {
    v12 = 0x8000000100E50650;
    v13 = 0xD000000000000056;
    goto LABEL_8;
  }
  if (objc_msgSend(a1, "isAppleTVRoute"))
  {
    v13 = 0xD000000000000057;
    v14 = "If you AirPlay this, Apple TV will stop playing when your (device) is no longer nearby.";
  }
  else
  {
LABEL_6:
    v13 = 0xD00000000000005ALL;
    v14 = "If you AirPlay this, this device will stop playing when your (device) is no longer nearby.";
  }
  v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
LABEL_8:
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v15 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v16 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v16;
}

_QWORD *sub_100ADA364(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD v61[4];
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v57 = a2;
  v59 = (_QWORD *)type metadata accessor for UUID(0);
  v3 = *(v59 - 1);
  __chkstk_darwin(v59);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v46 - v14;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E506B0);
  v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v16(v13, v15, v9);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v17 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v54 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v17, v8, 0, 0, 256);
  v56 = v18;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v15, v9);
  v20 = swift_allocObject(&unk_1010F8AA8, 24, 7);
  v55 = v20;
  *(_QWORD *)(v20 + 16) = a1;
  v21 = UUID.init()(v20);
  v53 = UUID.uuidString.getter(v21);
  v60 = v22;
  v23 = a1;
  v24 = *(void (**)(char *, _QWORD *))(v3 + 8);
  v24(v5, v59);
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v52 = static String.cancelButtonTitle;
  v58 = qword_10124ED40;
  v51 = swift_allocObject(&unk_1010F8AD0, 24, 7);
  *(_QWORD *)(v51 + 16) = v23;
  v25 = swift_bridgeObjectRetain();
  v26 = UUID.init()(v25);
  v50 = UUID.uuidString.getter(v26);
  v28 = v27;
  v24(v5, v59);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E502E0);
  v16(v13, v15, v9);
  v29 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v59 = (_QWORD *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v29, v8, 0, 0, 256);
  v49 = v30;
  v19(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x8000000100E50300);
  v16(v13, v15, v9);
  v31 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v48 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v31, v8, 0, 0, 256);
  v33 = v32;
  v19(v15, v9);
  v34 = sub_100007E8C(&qword_1011D8810);
  v35 = swift_allocObject(v34, 144, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EA7A80;
  v36 = v60;
  *(_QWORD *)(v35 + 32) = v53;
  *(_QWORD *)(v35 + 40) = v36;
  v37 = v55;
  v38 = v56;
  *(_QWORD *)(v35 + 48) = v54;
  *(_QWORD *)(v35 + 56) = v38;
  *(_BYTE *)(v35 + 64) = 2;
  *(_QWORD *)(v35 + 72) = &unk_1011D8B08;
  *(_QWORD *)(v35 + 80) = v37;
  *(_QWORD *)(v35 + 88) = v50;
  *(_QWORD *)(v35 + 96) = v28;
  v47 = v28;
  v39 = v51;
  v40 = v58;
  *(_QWORD *)(v35 + 104) = v52;
  *(_QWORD *)(v35 + 112) = v40;
  *(_BYTE *)(v35 + 120) = 2;
  *(_QWORD *)(v35 + 128) = &unk_1011D8B18;
  *(_QWORD *)(v35 + 136) = v39;
  v41 = *(_QWORD *)((char *)v57 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v42 = *(_QWORD *)((char *)v57 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  v57 = sub_100007E68((_QWORD *)((char *)v57 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v41);
  v43 = v49;
  v61[0] = v59;
  v61[1] = v49;
  v61[2] = v48;
  v61[3] = v33;
  v62 = 0;
  v63 = v35;
  v64 = 0;
  v65 = 0;
  v59 = *(_QWORD **)(v42 + 8);
  swift_bridgeObjectRetain();
  v44 = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v37);
  swift_bridgeObjectRetain();
  swift_retain(v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(_QWORD *, uint64_t, uint64_t))v59)(v61, v41, v42);
  swift_release(v37);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v44);
  swift_release(v39);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v43);
  return sub_100AE2CA8(v61);
}

uint64_t sub_100ADA854(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100ADA86C, 0, 0);
}

uint64_t sub_100ADA86C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  **(_BYTE **)(*(_QWORD *)(v1 + 64) + 40) = 1;
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ADA8AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100ADA8C4, 0, 0);
}

uint64_t sub_100ADA8C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  **(_BYTE **)(*(_QWORD *)(v1 + 64) + 40) = 0;
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_100ADA900(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  void *v57;
  void *v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(id *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81[4];
  char v82;
  char *v83;
  uint64_t v84;
  char v85;
  char v86[32];

  v79 = a1;
  v80 = a3;
  v4 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v78 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v72 - v14;
  v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v86, 0, 0);
  v17 = *v16;
  if (!v17)
    goto LABEL_4;
  KeyPath = swift_getKeyPath(&unk_100EE1B50);
  v19 = swift_getKeyPath(&unk_100EE1B78);
  swift_retain(v17);
  static Published.subscript.getter(v81, v20, KeyPath, v19);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v19);
  v21 = v81[0];

  if (v21)
  {
    v22 = 0;
  }
  else
  {
LABEL_4:
    v23 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
    v22 = sub_100ADB044((uint64_t)v80);

  }
  v24 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v25 = objc_msgSend(v24, "applicationState");

  if (!v22)
  {
LABEL_12:
    LOBYTE(v81[0]) = 0;
    v31 = v79;
    sub_100065228((uint64_t)v81, *(_QWORD *)(*(_QWORD *)(v79 + 64) + 40), &qword_1011D8AF8);
    return (_QWORD *)swift_continuation_throwingResume(v31);
  }
  if (v25 == (id)2)
  {
    if (qword_1011D1E38 != -1)
      swift_once(&qword_1011D1E38, sub_100AE1B34);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100048B14(v26, (uint64_t)static Logger.playbackController);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Music is background so bypass the requires subscription alert and use buffered AirPlay", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    goto LABEL_12;
  }
  v75 = v10;
  v76 = a2;
  v74 = v9;
  if (v80)
  {
    String.LocalizationValue.init(stringLiteral:)(0x776F4E2079616C50, 0xE800000000000000);
    v33 = v78;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v13, v15, v10);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v34 = qword_10124DE50;
    static Locale.current.getter((id)qword_10124DE50);
    v73 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v34, v9, 0, 0, 256);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v10);
    v37 = swift_allocObject(&unk_1010F8A80, 24, 7);
    *(_QWORD *)(v37 + 16) = v79;
    v38 = UUID.init()(v37);
    v72 = UUID.uuidString.getter(v38);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v6, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v37);
    v41 = sub_1009B95B8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v43 = *((_QWORD *)v41 + 2);
    v42 = *((_QWORD *)v41 + 3);
    if (v43 >= v42 >> 1)
      v41 = sub_1009B95B8((char *)(v42 > 1), v43 + 1, 1, v41);
    *((_QWORD *)v41 + 2) = v43 + 1;
    v44 = &v41[56 * v43];
    *((_QWORD *)v44 + 4) = v72;
    *((_QWORD *)v44 + 5) = v40;
    *((_QWORD *)v44 + 6) = v73;
    *((_QWORD *)v44 + 7) = v36;
    v44[64] = 2;
    *((_QWORD *)v44 + 9) = &unk_1011D8AF0;
    *((_QWORD *)v44 + 10) = v37;
    swift_release(v37);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v40);
  }
  else
  {
    v41 = (char *)_swiftEmptyArrayStorage;
  }
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v45 = static String.cancelButtonTitle;
  v46 = (void *)qword_10124ED40;
  v47 = swift_allocObject(&unk_1010F8A58, 24, 7);
  *(_QWORD *)(v47 + 16) = v79;
  v48 = swift_bridgeObjectRetain();
  v49 = UUID.init()(v48);
  v50 = UUID.uuidString.getter(v49);
  v51 = v6;
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v51, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v47);
  if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
    v41 = sub_1009B95B8(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
  v55 = *((_QWORD *)v41 + 2);
  v54 = *((_QWORD *)v41 + 3);
  if (v55 >= v54 >> 1)
    v41 = sub_1009B95B8((char *)(v54 > 1), v55 + 1, 1, v41);
  *((_QWORD *)v41 + 2) = v55 + 1;
  v56 = &v41[56 * v55];
  *((_QWORD *)v56 + 4) = v50;
  *((_QWORD *)v56 + 5) = v53;
  *((_QWORD *)v56 + 6) = v45;
  *((_QWORD *)v56 + 7) = v46;
  v56[64] = 2;
  *((_QWORD *)v56 + 9) = &unk_1011D8AE0;
  *((_QWORD *)v56 + 10) = v47;
  v57 = (void *)sub_100ADA18C(v80);
  v59 = v58;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000005ELL, 0x8000000100E50530);
  v80 = v46;
  v60 = v15;
  v61 = v78;
  v62 = v75;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v13, v60, v75);
  v79 = v53;
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v63 = qword_10124DE50;
  v64 = (id)qword_10124DE50;
  v65 = v74;
  static Locale.current.getter(v64);
  v66 = (void *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v63, v65, 0, 0, 256);
  v68 = v67;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v62);
  v69 = *(_QWORD *)(v76 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v70 = *(_QWORD *)(v76 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_100007E68((_QWORD *)(v76 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v69);
  v81[0] = v57;
  v81[1] = v59;
  v81[2] = v66;
  v81[3] = v68;
  v82 = 0;
  v83 = v41;
  v84 = 0;
  v85 = 0;
  v71 = *(void (**)(id *, uint64_t, uint64_t))(v70 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71(v81, v69, v70);
  swift_release(v47);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v68);
  swift_bridgeObjectRelease(v59);
  return sub_100AE2CA8(v81);
}

uint64_t sub_100ADB044(uint64_t result)
{
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  id v6;
  unsigned int v7;

  if (result)
  {
    if ((objc_msgSend((id)result, "isDeviceRoute") & 1) != 0)
    {
      return 0;
    }
    else
    {
      v2 = objc_msgSend(v1, "musicSubscriptionStatus");
      if (!v2
        || (v3 = v2,
            v4 = objc_msgSend(v2, "capabilities"),
            v5 = objc_msgSend(v3, "capabilities"),
            v3,
            result = (v5 & 2) == 0,
            (v5 & 2) == 0)
        && (v4 & 1) != 0)
      {
        v6 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v7 = objc_msgSend(v6, "isCloudLibraryEnabled");

        if (v7)
          return 0;
        else
          return 2;
      }
    }
  }
  return result;
}

uint64_t sub_100ADB118(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100ADB130, 0, 0);
}

uint64_t sub_100ADB130()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 24) = 1;
  sub_100065228(v0 + 24, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1011D8AF8);
  swift_continuation_throwingResume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ADB184(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100ADB19C, 0, 0);
}

uint64_t sub_100ADB19C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 24) = 2;
  sub_100065228(v0 + 24, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1011D8AF8);
  swift_continuation_throwingResume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100ADB1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v4 = v3;
  v42 = a2;
  v53 = (_QWORD *)a3;
  v51 = type metadata accessor for GenericMusicItem(0);
  v43 = *(_QWORD *)(v51 - 8);
  v6 = __chkstk_darwin(v51);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v50 = (char *)&v40 - v8;
  v9 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  __chkstk_darwin(v9);
  v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Playlist.Entry(0);
  v46 = *(_QWORD *)(v52 - 8);
  v11 = __chkstk_darwin(v52);
  v45 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v40 - v21;
  v23 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v20);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v44 = v4;
  v26(v25, v4, a1);
  if (swift_dynamicCast(v22, v25, a1, v15, 0))
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v22, v15);
    Track.musicItem.getter((uint64_t)v53);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    v28 = v52;
    v27 = v53;
    if (swift_dynamicCast(v14, v25, a1, v52, 0))
    {
      v30 = v45;
      v29 = v46;
      v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v45, v14, v28);
      v32 = v47;
      Playlist.Entry.internalItem.getter(v31);
      Playlist.Entry.InternalItem.musicItem.getter(v27);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
    else
    {
      v34 = v50;
      v33 = v51;
      if (swift_dynamicCast(v50, v25, a1, v51, 0))
      {
        v35 = v43;
        v36 = v41;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v34, v33);
        GenericMusicItem.innerMusicItem.getter((uint64_t)v27);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v33);
      }
      else
      {
        v37 = v42;
        v27[3] = a1;
        v27[4] = v37;
        v38 = (char *)sub_100049F68(v27);
        v26(v38, v44, a1);
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, a1);
}

uint64_t sub_100ADB510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD v73[6];
  _BYTE v74[24];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v58 = type metadata accessor for Station(0);
  v56[0] = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for MusicMovie(0);
  v56[1] = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TVEpisode(0);
  v59 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for Playlist(0);
  v64 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Album(0);
  v65 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v72 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)v56 - v18;
  v20 = type metadata accessor for Song(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100ADB1F0(a1, a2, (uint64_t)v74);
  if (!v75)
    goto LABEL_31;
  v24 = v17;
  sub_100AE4CEC((uint64_t)v74, (uint64_t)v73);
  v25 = sub_100007E8C(&qword_1011D8A50);
  if (swift_dynamicCast(v23, v73, v25, v20, 0))
  {
    v26 = v19;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000035, 0x8000000100E50490);
    v27 = v24;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v26, v13);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v28 = qword_10124DE50;
    v29 = (id)qword_10124DE50;
    v30 = v72;
    static Locale.current.getter(v29);
    v31 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v30, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    goto LABEL_20;
  }
  v32 = v71;
  if (swift_dynamicCast(v10, v73, v25, v71, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x8000000100E503D0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v33 = qword_10124DE50;
    v34 = (id)qword_10124DE50;
    v35 = v72;
    static Locale.current.getter(v34);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v33, v35, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v36 = v68;
    goto LABEL_19;
  }
  v10 = v69;
  v32 = v70;
  if (swift_dynamicCast(v69, v73, v25, v70, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x8000000100E50450);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v37 = qword_10124DE50;
    v38 = (id)qword_10124DE50;
    v39 = v72;
    static Locale.current.getter(v38);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v37, v39, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v36 = v65;
    goto LABEL_19;
  }
  v10 = v66;
  v32 = v67;
  if (swift_dynamicCast(v66, v73, v25, v67, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x8000000100E50410);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_1011D1B40 != -1)
      swift_once(&qword_1011D1B40, sub_1009887D8);
    v40 = qword_10124DE50;
    v41 = (id)qword_10124DE50;
    v42 = v72;
    static Locale.current.getter(v41);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v40, v42, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v43 = &v79;
LABEL_18:
    v36 = *(v43 - 32);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v32);
LABEL_20:
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v73);
    sub_10004FF60((uint64_t)v74, &qword_1011D8A40);
    return v31;
  }
  v44 = v62;
  v45 = v63;
  if (!swift_dynamicCast(v62, v73, v25, v63, 0))
  {
    v44 = v60;
    v45 = v61;
    if (swift_dynamicCast(v60, v73, v25, v61, 0))
    {
      v46 = &v77;
      goto LABEL_25;
    }
    v10 = v57;
    v32 = v58;
    if (swift_dynamicCast(v57, v73, v25, v58, 0))
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x8000000100E50390);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
      if (qword_1011D1B40 != -1)
        swift_once(&qword_1011D1B40, sub_1009887D8);
      v49 = qword_10124DE50;
      v50 = (id)qword_10124DE50;
      v51 = v72;
      static Locale.current.getter(v50);
      v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v49, v51, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v43 = &v76;
      goto LABEL_18;
    }
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v73);
LABEL_31:
    sub_10004FF60((uint64_t)v74, &qword_1011D8A40);
    v48 = 0xD000000000000030;
    v47 = 0x8000000100E50350;
    goto LABEL_32;
  }
  v46 = &v78;
LABEL_25:
  (*(void (**)(char *, uint64_t))(*(v46 - 32) + 8))(v44, v45);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v73);
  sub_10004FF60((uint64_t)v74, &qword_1011D8A40);
  v47 = 0x8000000100E503D0;
  v48 = 0xD000000000000036;
LABEL_32:
  String.LocalizationValue.init(stringLiteral:)(v48, v47);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v52 = qword_10124DE50;
  v53 = (id)qword_10124DE50;
  v54 = v72;
  static Locale.current.getter(v53);
  v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v52, v54, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  return v31;
}

_QWORD *sub_100ADBE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  uint64_t DynamicType;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  void **v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  void *v81;
  BOOL v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  ValueMetadata *v113;
  void (*v114)(id *, uint64_t, uint64_t);
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  void (*v118)(char *, char *, uint64_t);
  char *v119;
  uint64_t v120;
  void **v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  ValueMetadata *v126;
  char *v127;
  char *v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  ValueMetadata *v139;
  _UNKNOWN **v140;
  char *v141;
  uint64_t v142;
  char v143;
  char v144[24];

  v126 = a5;
  v125 = a4;
  v133 = a2;
  v134 = a3;
  v135 = a1;
  v124 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v6 = __chkstk_darwin(v132);
  v121 = (void **)((char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v9 = (id *)((char *)&v116 - v8);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v116 - v22;
  String.LocalizationValue.init(stringLiteral:)(0x776F4E2079616C50, 0xE800000000000000);
  v118 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v118(v21, v23, v17);
  if (qword_1011D1B40 != -1)
    swift_once(&qword_1011D1B40, sub_1009887D8);
  v24 = qword_10124DE50;
  static Locale.current.getter((id)qword_10124DE50);
  v127 = v21;
  v119 = v16;
  v131 = (id)String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v24, v16, 0, 0, 256);
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v128 = v23;
  v120 = v17;
  v117 = v27;
  v27(v23, v17);
  v28 = swift_allocObject(&unk_1010F8940, 24, 7);
  *(_QWORD *)(v28 + 16) = v135;
  v29 = UUID.init()(v28);
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  v129 = *(void (**)(char *, uint64_t))(v11 + 8);
  v130 = v10;
  v129(v13, v10);
  v33 = sub_1009B95B8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v35 = *((_QWORD *)v33 + 2);
  v34 = *((_QWORD *)v33 + 3);
  v36 = v13;
  if (v35 >= v34 >> 1)
    v33 = sub_1009B95B8((char *)(v34 > 1), v35 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v35 + 1;
  v37 = &v33[56 * v35];
  *((_QWORD *)v37 + 4) = v30;
  *((_QWORD *)v37 + 5) = v32;
  *((_QWORD *)v37 + 6) = v131;
  *((_QWORD *)v37 + 7) = v26;
  v37[64] = 2;
  *((_QWORD *)v37 + 9) = &unk_1011D8A60;
  *((_QWORD *)v37 + 10) = v28;
  sub_10005B704(v133, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v9, v132) == 1)
  {
    v38 = v123;
    v39 = v122;
    v40 = v124;
    v41 = (*(uint64_t (**)(char *, id *, uint64_t))(v123 + 32))(v122, v9, v124);
    v131 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(v41);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
  else
  {
    v131 = *v9;
  }
  v42 = v128;
  v43 = (uint64_t *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v144, 0, 0);
  v44 = *v43;
  if (*v43)
  {
    v139 = &type metadata for Player.InsertCommand;
    v140 = &protocol witness table for Player.InsertCommand;
    v45 = v131;
    v136 = v131;
    v137 = 0;
    v46 = sub_100007E68(&v136, (uint64_t)&type metadata for Player.InsertCommand);
    DynamicType = swift_getDynamicType(v46, &type metadata for Player.InsertCommand, 1);
    v48 = (uint64_t)v140;
    v49 = v45;
    swift_retain(v44);
    v50 = sub_100AEFA94(DynamicType, v48);
    if (v50)
    {
      v51 = (void *)v50;
      v52 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v136);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v136);
      swift_release(v44);
      v53 = v127;
      if (!v52)
        goto LABEL_16;
      String.LocalizationValue.init(stringLiteral:)(0x78654E2079616C50, 0xE900000000000074);
      v54 = v120;
      v118(v53, v42, v120);
      v55 = qword_10124DE50;
      v56 = (id)qword_10124DE50;
      v57 = v53;
      v58 = v119;
      static Locale.current.getter(v56);
      v116 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v55, v58, 0, 0, 256);
      v60 = v59;
      v117(v42, v54);
      v61 = swift_allocObject(&unk_1010F89B8, 24, 7);
      *(_QWORD *)(v61 + 16) = v135;
      v62 = UUID.init()(v61);
      v63 = UUID.uuidString.getter(v62);
      v65 = v64;
      v129(v13, v130);
      v67 = *((_QWORD *)v33 + 2);
      v66 = *((_QWORD *)v33 + 3);
      if (v67 >= v66 >> 1)
        v33 = sub_1009B95B8((char *)(v66 > 1), v67 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v67 + 1;
      v68 = &v33[56 * v67];
      *((_QWORD *)v68 + 4) = v63;
      *((_QWORD *)v68 + 5) = v65;
      *((_QWORD *)v68 + 6) = v116;
      *((_QWORD *)v68 + 7) = v60;
      v68[64] = 2;
      *((_QWORD *)v68 + 9) = &unk_1011D8A90;
      *((_QWORD *)v68 + 10) = v61;
      v42 = v128;
    }
    else
    {
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v136);

      swift_release(v44);
    }
  }
  v53 = v127;
LABEL_16:
  v69 = v121;
  sub_10005B704(v133, (uint64_t)v121, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v69, v132) == 1)
  {
    v70 = v123;
    v71 = v122;
    v72 = v124;
    v73 = (*(uint64_t (**)(char *, void **, uint64_t))(v123 + 32))(v122, v69, v124);
    v74 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v73);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    v75 = *v43;
    if (!v75)
      goto LABEL_26;
  }
  else
  {
    v74 = *v69;
    v75 = *v43;
    if (!v75)
      goto LABEL_26;
  }
  v139 = &type metadata for Player.InsertCommand;
  v140 = &protocol witness table for Player.InsertCommand;
  v136 = v74;
  v137 = 1;
  v76 = sub_100007E68(&v136, (uint64_t)&type metadata for Player.InsertCommand);
  v77 = swift_getDynamicType(v76, &type metadata for Player.InsertCommand, 1);
  v78 = (uint64_t)v140;
  v79 = v74;
  swift_retain(v75);
  v80 = sub_100AEFA94(v77, v78);
  if (v80)
  {
    v81 = (void *)v80;
    v82 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v136);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v136);
    swift_release(v75);
    if (v82)
    {
      String.LocalizationValue.init(stringLiteral:)(0x73614C2079616C50, 0xE900000000000074);
      v83 = v53;
      v84 = v53;
      v85 = v120;
      v118(v83, v42, v120);
      v86 = qword_10124DE50;
      v87 = (id)qword_10124DE50;
      v88 = v119;
      static Locale.current.getter(v87);
      v89 = String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v86, v88, 0, 0, 256);
      v91 = v90;
      v117(v42, v85);
      v92 = swift_allocObject(&unk_1010F8990, 24, 7);
      *(_QWORD *)(v92 + 16) = v135;
      v93 = UUID.init()(v92);
      v94 = UUID.uuidString.getter(v93);
      v96 = v95;
      v129(v13, v130);
      v98 = *((_QWORD *)v33 + 2);
      v97 = *((_QWORD *)v33 + 3);
      if (v98 >= v97 >> 1)
        v33 = sub_1009B95B8((char *)(v97 > 1), v98 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v98 + 1;
      v99 = &v33[56 * v98];
      *((_QWORD *)v99 + 4) = v94;
      *((_QWORD *)v99 + 5) = v96;
      *((_QWORD *)v99 + 6) = v89;
      *((_QWORD *)v99 + 7) = v91;
      v99[64] = 2;
      *((_QWORD *)v99 + 9) = &unk_1011D8A80;
      *((_QWORD *)v99 + 10) = v92;
    }
  }
  else
  {
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v136);

    swift_release(v75);
  }
LABEL_26:
  if (qword_1011D2420 != -1)
    swift_once(&qword_1011D2420, sub_100B62390);
  v101 = static String.cancelButtonTitle;
  v100 = qword_10124ED40;
  v102 = swift_allocObject(&unk_1010F8968, 24, 7);
  *(_QWORD *)(v102 + 16) = v135;
  v103 = swift_bridgeObjectRetain();
  v104 = UUID.init()(v103);
  v105 = UUID.uuidString.getter(v104);
  v107 = v106;
  v129(v36, v130);
  v109 = *((_QWORD *)v33 + 2);
  v108 = *((_QWORD *)v33 + 3);
  if (v109 >= v108 >> 1)
    v33 = sub_1009B95B8((char *)(v108 > 1), v109 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v109 + 1;
  v110 = &v33[56 * v109];
  *((_QWORD *)v110 + 4) = v105;
  *((_QWORD *)v110 + 5) = v107;
  *((_QWORD *)v110 + 6) = v101;
  *((_QWORD *)v110 + 7) = v100;
  v110[64] = 2;
  *((_QWORD *)v110 + 9) = &unk_1011D8A70;
  *((_QWORD *)v110 + 10) = v102;
  v111 = *(_QWORD *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v112 = *(_QWORD *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_100007E68((_QWORD *)(v134 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v111);
  v136 = 0;
  v137 = 0;
  v113 = v126;
  v138 = v125;
  v139 = v126;
  LOBYTE(v140) = 0;
  v141 = v33;
  v142 = 0;
  v143 = 0;
  v114 = *(void (**)(id *, uint64_t, uint64_t))(v112 + 8);
  swift_bridgeObjectRetain_n(v126, 2);
  swift_bridgeObjectRetain();
  v114(&v136, v111, v112);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v113);
  swift_bridgeObjectRelease(0);

  return sub_100AE2CA8(&v136);
}

