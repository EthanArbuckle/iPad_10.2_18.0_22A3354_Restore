uint64_t sub_1001399EC(unint64_t *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v16;
  unint64_t i;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;

  v2 = *a1;
  if (*a1 >> 62)
    goto LABEL_72;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_14:
    swift_bridgeObjectRelease(v2);
    v14 = *a1;
    if (!(*a1 >> 62))
      return *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14 < 0)
      v41 = *a1;
    else
      v41 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v42 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v14);
    return v42;
  }
LABEL_3:
  v4 = 0;
  v5 = (uint64_t *)(v2 & 0xC000000000000001);
  v46 = OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint;
  v6 = (uint64_t)NSLayoutConstraint_ptr;
  while (1)
  {
    v7 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2) : *(id *)(v2 + 8 * v4 + 32);
    v8 = v7;
    v9 = *(void **)(a2 + v46);
    if (v9)
      break;

    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      if ((v2 & 0x8000000000000000) != 0)
        v40 = v2;
      else
        v40 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v3 = _CocoaArrayWrapper.endIndex.getter(v40);
      if (!v3)
        goto LABEL_14;
      goto LABEL_3;
    }
LABEL_13:
    ++v4;
    if (v13 == v3)
      goto LABEL_14;
  }
  sub_10004A07C(0, &qword_1011A1480, NSLayoutConstraint_ptr);
  v10 = v8;
  v11 = v9;
  v12 = static NSObject.== infix(_:_:)(v10, v11);

  if ((v12 & 1) == 0)
  {
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_61;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease(v2);
  v16 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_82;
  }
  v5 = (uint64_t *)a1;
  v6 = *a1;
  if (*a1 >> 62)
  {
LABEL_82:
    if (v6 < 0)
      v43 = v6;
    else
      v43 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v44 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v6);
    if (v16 == v44)
      return v4;
LABEL_20:
    for (i = v4 + 5; ; ++i)
    {
      v2 = i - 4;
      v18 = *v5;
      if ((*v5 & 0xC000000000000001) != 0)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v18);
      }
      else
      {
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_62;
        if (v2 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_63;
        v19 = *(id *)(v18 + 8 * i);
      }
      v20 = *(void **)(a2 + v46);
      if (!v20)
      {

        if (v2 == v4)
          goto LABEL_48;
        goto LABEL_30;
      }
      v21 = v19;
      v22 = v20;
      v23 = static NSObject.== infix(_:_:)(v21, v22);

      if ((v23 & 1) == 0)
        break;
LABEL_49:
      v36 = i - 3;
      if (__OFADD__(v2, 1))
        goto LABEL_64;
      v37 = *v5;
      if ((unint64_t)*v5 >> 62)
      {
        if (v37 < 0)
          v39 = *v5;
        else
          v39 = v37 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v38 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(v37);
      }
      else
      {
        v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v36 == v38)
        return v4;
    }
    if (v2 == v4)
    {
LABEL_48:
      if (__OFADD__(v4++, 1))
        goto LABEL_65;
      goto LABEL_49;
    }
LABEL_30:
    v24 = *v5;
    if ((*v5 & 0xC000000000000001) != 0)
    {
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *v5);
      v24 = *v5;
      if ((*v5 & 0xC000000000000001) == 0)
      {
LABEL_34:
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_68;
        if (v2 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_69;
        v26 = *(id *)(v24 + 8 * i);
        goto LABEL_37;
      }
    }
    else
    {
      if ((v4 & 0x8000000000000000) != 0)
        goto LABEL_66;
      if (v4 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_67;
      v25 = *(id *)(v24 + 8 * v4 + 32);
      if ((v24 & 0xC000000000000001) == 0)
        goto LABEL_34;
    }
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v24);
    v24 = *v5;
LABEL_37:
    isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v24);
    *v5 = v24;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v24 < 0 || (v24 & 0x4000000000000000) != 0)
    {
      v24 = sub_10072E088(v24);
      *v5 = v24;
    }
    v28 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
    *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v26;

    specialized Array._endMutation()(v29);
    v30 = *v5;
    v31 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
    *v5 = v30;
    if (!v31 || v30 < 0 || (v30 & 0x4000000000000000) != 0)
    {
      v30 = sub_10072E088(v30);
      *v5 = v30;
    }
    if ((v2 & 0x8000000000000000) != 0)
      goto LABEL_70;
    v32 = v30 & 0xFFFFFFFFFFFFFF8;
    if (v2 >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_71;
    v33 = *(void **)(v32 + 8 * i);
    *(_QWORD *)(v32 + 8 * i) = v25;

    specialized Array._endMutation()(v34);
    goto LABEL_48;
  }
  if (v16 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_20;
  return v4;
}

double sub_100139E44@<D0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  double v10;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  char v24;
  uint64_t v25;
  double v26;
  double v27;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  char v52;
  double v53;
  double result;
  double v55;
  double v56;
  double v57;
  double v58;

  v10 = a4;
  if (a5 >= 812.0)
  {
    v12 = a4 - dbl_100EABC50[a1];
    if (a5 >= 896.0)
      v14 = 100.0;
    else
      v14 = 92.0;
    v13 = 6.0;
    *(double *)&v15 = 48.0;
  }
  else
  {
    v12 = a4 + -88.0;
    v13 = 12.0;
    v14 = 64.0;
    *(double *)&v15 = 88.0;
  }
  v16 = *(double *)&v15;
  v17 = HI.SizeClass.init(_:)(a4);
  v58 = v13;
  if (!a1)
  {
    v23 = v10 - v16;
    if (a2)
    {
      if (objc_msgSend(a2, "userInterfaceIdiom") != (id)1 && v10 >= 340.0)
      {
LABEL_45:
        v22 = 0.0;
        if (a5 >= 754.0)
        {
          v24 = 1;
          v20 = 108.0;
          v25 = 0x4050800000000000;
          v26 = 40.0;
          v27 = 0.0;
          v19 = a5 / 6.5;
          if (a2)
            goto LABEL_47;
        }
        else
        {
          v24 = 1;
          v20 = 88.0;
          v25 = 0x4050800000000000;
          v26 = 32.0;
          v27 = 0.0;
          v19 = 95.0;
          if (a2)
            goto LABEL_47;
        }
LABEL_52:
        v53 = 20.0;
        goto LABEL_53;
      }
    }
    else if (v10 >= 340.0)
    {
      goto LABEL_45;
    }
    v19 = Int.seconds.getter(117);
    v20 = fmin(a5 / 9.0 + a6, 157.0);
    v22 = fmin(a5 / 6.0, 150.0);
    v29 = v13 + 56.0;
    v30 = a5 - v20 - v22;
    if (v13 + 56.0 > (v30 - v23) * 0.5)
      v14 = v13 + 56.0;
    else
      v14 = (v30 - v23) * 0.5;
    if (v30 < v23 + v14 + v19)
    {
      v23 = v30 - v19 - v29;
      v19 = a5 - (v20 + v22 + v29 + v23);
      v14 = v13 + 56.0;
    }
    v24 = 0;
    v27 = 0.0;
    v25 = 0x4050800000000000;
    v26 = 32.0;
    if (!a2)
      goto LABEL_52;
    goto LABEL_47;
  }
  v18 = v17;
  if (a1 == 1)
  {
    v12 = v10 + -156.0;
    if (v17 >= 5u)
      v19 = 107.0;
    else
      v19 = 97.0;
    v14 = 78.0;
    v20 = 76.0;
    v21 = a5 - (v12 + 78.0 + v19 + 76.0);
    v22 = 0.0;
    if (v21 >= 150.0)
    {
      v24 = 1;
      v25 = 0x4050800000000000;
      v26 = 40.0;
      v23 = v10 + -156.0;
      v27 = 40.0;
      if (!a2)
        goto LABEL_52;
    }
    else
    {
      v23 = v12 + v21 + -150.0;
      v24 = 1;
      v20 = 76.0;
      v25 = 0x4050800000000000;
      v26 = 40.0;
      v14 = 78.0;
      v27 = 40.0;
      if (!a2)
        goto LABEL_52;
    }
  }
  else
  {
    v31 = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");
    objc_msgSend(v31, "intrinsicContentSize");
    v33 = v32;

    v34 = v10 * 0.5 + v33 * 0.5;
    v35 = Int.seconds.getter(56);
    if (v18 >= 5u)
      v36 = 50;
    else
      v36 = 38;
    v37 = Int.seconds.getter(v36);
    v14 = Int.seconds.getter(60);
    v38 = Int.seconds.getter(267);
    v39 = Int.seconds.getter(350);
    v40 = v38;
    v20 = v35;
    v41 = v39;
    v23 = a5 - v14 - v38 - v37 - v20;
    v42 = v10 - v34 + -78.0 + -52.0;
    if (qword_10119B968 != -1)
    {
      v55 = v20;
      swift_once(&qword_10119B968, sub_10012C474);
      v40 = v38;
      v20 = v55;
    }
    v12 = v42 - (*(double *)&qword_10124C8E0 + *(double *)&qword_10124C8E0);
    if (v12 >= v23)
    {
      if (v23 < v12 && v41 <= v23)
        v12 = v23;
    }
    else
    {
      v23 = v42 - (*(double *)&qword_10124C8E0 + *(double *)&qword_10124C8E0);
    }
    v24 = 0;
    v25 = 0x404C000000000000;
    v26 = 40.0;
    v19 = 109.0;
    v22 = 140.0;
    v43 = a5 - (v40 + v23);
    if (v43 * 0.5 > v14)
      v14 = v43 * 0.5;
    v27 = v43 - v14 - v20;
    v10 = v23;
    if (!a2)
      goto LABEL_52;
  }
LABEL_47:
  v56 = v27;
  v57 = v20;
  v44 = v12;
  v45 = v22;
  v46 = v14;
  v47 = v10;
  v48 = v23;
  v49 = v19;
  v50 = v26;
  v51 = objc_msgSend(a2, "preferredContentSizeCategory");
  v52 = UIContentSizeCategory.isAccessibilityCategory.getter(v51);

  v19 = v49;
  v23 = v48;
  v10 = v47;
  v14 = v46;
  v22 = v45;
  v12 = v44;
  v53 = 33.0;
  if ((v52 & 1) != 0)
  {
    v26 = 50.0;
  }
  else
  {
    v53 = 20.0;
    v26 = v50;
  }
  v27 = v56;
  v20 = v57;
LABEL_53:
  *(double *)a3 = v53;
  result = v58;
  *(double *)(a3 + 8) = v58;
  *(double *)(a3 + 16) = v14;
  *(double *)(a3 + 24) = v10;
  *(double *)(a3 + 32) = v23;
  *(double *)(a3 + 40) = v12;
  *(double *)(a3 + 48) = v19;
  *(double *)(a3 + 56) = v22;
  *(_BYTE *)(a3 + 64) = v24;
  *(double *)(a3 + 72) = v26;
  *(_QWORD *)(a3 + 80) = v25;
  *(double *)(a3 + 88) = v27;
  *(double *)(a3 + 96) = v20;
  return result;
}

uint64_t sub_10013A3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10013A3F4()
{
  uint64_t v0;

  sub_100110CA4(v0);
}

uint64_t sub_10013A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A3DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013A444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10013A48C(uint64_t a1, void (*a2)(uint64_t, void *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v18 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      goto LABEL_23;
    v16 = *(_QWORD *)(v18 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v7)
        goto LABEL_23;
      v16 = *(_QWORD *)(v18 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v7)
          goto LABEL_23;
        v16 = *(_QWORD *)(v18 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v7)
            goto LABEL_23;
          v16 = *(_QWORD *)(v18 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_5:
    v11 = 8 * v10;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v11);
    v13 = *(void **)(*(_QWORD *)(a1 + 56) + v11);
    v14 = v13;
    a2(v12, v13);

  }
  v17 = v15 + 4;
  if (v17 >= v7)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v16 = *(_QWORD *)(v18 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    v16 = *(_QWORD *)(v18 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_10013A628()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[6];
  uint64_t v31;

  v1 = v0;
  v2 = &v0[OBJC_IVAR___MusicNowPlayingControlsViewController_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlaying] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsToken] = 0;
  v0[OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState] = 3;
  *(_QWORD *)&v0[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberView] = 0;
  v3 = OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView;
  type metadata accessor for PassthroughView();
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_dismissButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControl] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController__playingItemAudioTrait] = 10;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_buttonsStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contextButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButtonPackageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___favoriteButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionController] = 0;
  v4 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionContainerView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v4] = v6;
  v7 = OBJC_IVAR___MusicNowPlayingControlsViewController_attributionView;
  type metadata accessor for NowPlayingAttributionView();
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v9 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v7] = v9;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titleMarqueeView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_subtitleMarqueeView] = 0;
  v10 = OBJC_IVAR___MusicNowPlayingControlsViewController_shuffleButton;
  type metadata accessor for NowPlayingShuffleButton();
  *(_QWORD *)&v1[v10] = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 0);
  v11 = OBJC_IVAR___MusicNowPlayingControlsViewController_repeatButton;
  type metadata accessor for NowPlayingRepeatButton();
  *(_QWORD *)&v1[v11] = objc_msgSend((id)swift_getObjCClassFromMetadata(), "buttonWithType:", 0);
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomContainerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsStackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton] = 0;
  v12 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration];
  v12[1] = 0;
  v12[2] = 0;
  *v12 = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButton] = 0;
  v13 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playPauseStopButtonConfiguration];
  v13[1] = 0;
  v13[2] = 0;
  *v13 = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton] = 0;
  v14 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration];
  v14[1] = 0;
  v14[2] = 0;
  *v14 = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlider] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsStackView] = 0;
  v15 = OBJC_IVAR___MusicNowPlayingControlsViewController_routeSharePlayTogetherControl;
  type metadata accessor for NowPlayingRouteSharePlayTogetherControl();
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___bottomButtonsConfiguration] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___lyricsButtonStateImages] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_singIndicatorView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherParticipantsSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuide] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuide] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkPlaceholderLayoutGuide] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentRegularLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentExtendedLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerRegularLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerExtendedCollapsedLayoutConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideRegularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideCollapsedConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_placeholderArtworkLayoutGuideConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController__titlesStackViewRegularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_titlesStackViewCollapsedConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsCompactConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsRegularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_grabberYConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkYConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_timeControlWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerMinYConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerCenterYConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerLayoutGuideHeightConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsLayoutGuideHeightConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_volumeSlideBottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bottomButtonsLayoutGuideHeightConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedLeadingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideBottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideTopConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundTopConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideMotionBackgroundCollapsedTopConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideExtendedTopConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentLayoutGuideSplitViewBottomConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_routeButtonRegularLeadingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_queueModeBadgeMaskLayer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playerSubscriptions] = &_swiftEmptySetSingleton;
  v16 = OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager;
  *(_QWORD *)&v1[v16] = objc_msgSend((id)objc_opt_self(MAMusicHapticsManager), "sharedManager");
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkLayoutGuideFullBleedConstraints] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingHasTallMotionData] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_deferArtworkModeUpdates] = 0;
  v17 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metricsReporter];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkDidChangeHandler];
  *v18 = 0;
  v18[1] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingRoutePicker] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_isPresentingSharePlayTogetherSessionManagement] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_needsTopViewsUpdate] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_contentView], 0);
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTopOffset] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_animationData] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_areControlsHidden] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_sessionWaitTimer] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_mode] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_currentLayoutType] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_bindings] = _swiftEmptyArrayStorage;
  v19 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousContentLayoutGuideFrame];
  *v19 = 0u;
  v19[1] = 0u;
  v20 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousArtworkFrame];
  *v20 = 0u;
  v20[1] = 0u;
  v21 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_previousBounds];
  *v21 = 0u;
  v21[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_artworkTapGestureRecognizer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoPinchGestureRecognizer] = 0;
  v22 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemNavigationStyle];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = -1;
  v23 = OBJC_IVAR___MusicNowPlayingControlsViewController_transportControlsController;
  v24 = type metadata accessor for TransportControlsController();
  v25 = swift_allocObject(v24, 104, 7);
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 80) = 0u;
  *(_QWORD *)(v25 + 96) = 0;
  *(_QWORD *)&v1[v23] = v25;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___mediaControls] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController____lazy_storage___leaveSessionButton] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_didAnimateReactionOnce] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_reactionEffectInteraction] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitWatchdog] = 0;
  v26 = &v1[OBJC_IVAR___MusicNowPlayingControlsViewController_metrics];
  sub_100139E44(0, 0, (uint64_t)v30, 0.0, 0.0, UIEdgeInsetsZero.bottom);
  v27 = v30[5];
  *((_OWORD *)v26 + 4) = v30[4];
  *((_OWORD *)v26 + 5) = v27;
  *((_QWORD *)v26 + 12) = v31;
  v28 = v30[1];
  *(_OWORD *)v26 = v30[0];
  *((_OWORD *)v26 + 1) = v28;
  v29 = v30[3];
  *((_OWORD *)v26 + 2) = v30[2];
  *((_OWORD *)v26 + 3) = v29;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_nowPlayingPath] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_sharePlayTogetherSession] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_needsSharePlayTogetherTooltipPresentation] = 0;
  v1[OBJC_IVAR___MusicNowPlayingControlsViewController_presentingVideo] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___MusicNowPlayingControlsViewController_videoOutput] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/NowPlayingControlsViewController.swift", 44, 2, 256, 0);
  __break(1u);
}

unint64_t sub_10013ADBC()
{
  unint64_t result;

  result = qword_1011A3810;
  if (!qword_1011A3810)
  {
    result = swift_getWitnessTable(&unk_100EC3ABC, &type metadata for MusicLibraryTrait);
    atomic_store(result, (unint64_t *)&qword_1011A3810);
  }
  return result;
}

uint64_t sub_10013AE00()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v9, v10, v11, v12, v13, v14, v15, v16);
  v18 = swift_allocObject(&unk_1010B19E0, 24, 7);
  *(_QWORD *)(v18 + 16) = v0;
  aBlock[4] = sub_10013B014;
  v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010B19F8;
  v19 = _Block_copy(aBlock);
  v20 = v30;
  v21 = v1;
  v22 = swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100048748((unint64_t *)&qword_1011A30C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A2120);
  v25 = sub_100049F28(&qword_1011A30D0, (uint64_t *)&unk_1011A2120, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v2, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10013B014()
{
  sub_100133030();
}

uint64_t sub_10013B034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10013B044(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10013B04C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10013B078(void *a1)
{
  uint64_t v1;

  sub_100138034(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10013B080()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10013B0A4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setShowsPlaybackControls:", 1);
}

uint64_t sub_10013B0B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013B0E4()
{
  uint64_t v0;

  return sub_1001379E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10013B0F0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectWeakDestroy(v0 + 48, v1);
  v2 = *(unsigned __int8 *)(v0 + 96);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v2);
  if (*(_QWORD *)(v0 + 104))
    swift_release(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10013B150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = v0 + 48;
  v6 = *(_BYTE *)(v0 + 32);
  v7 = (_QWORD *)swift_task_alloc(dword_1011B9C7C);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_10006AEE4;
  return sub_10055545C(v2, v3, v6, v4, v5);
}

_QWORD *sub_10013B1C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[9];
  v6 = a1[12];
  swift_release(a1[14]);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

unint64_t sub_10013B23C()
{
  unint64_t result;

  result = qword_1011A2150;
  if (!qword_1011A2150)
  {
    result = swift_getWitnessTable(&unk_100EB3764, &type metadata for HasAnimatedBackgroundTrait);
    atomic_store(result, (unint64_t *)&qword_1011A2150);
  }
  return result;
}

uint64_t sub_10013B280()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013B290()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013B2BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011ACD4C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_100323E8C(a1, v4, v5, v6);
}

id sub_10013B328()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_mainContainerView), "layoutIfNeeded");
}

uint64_t sub_10013B344()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10013B354()
{
  uint64_t v0;

  return sub_100134184(*(_QWORD *)(v0 + 16));
}

id sub_10013B35C()
{
  return sub_10013C1C4(&OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
}

void sub_10013B36C()
{
  uint64_t v0;

  sub_10013428C(*(_QWORD *)(v0 + 16), 1.0);
}

double sub_10013B388(uint64_t a1)
{
  uint64_t v1;

  return sub_1001341D0(a1, *(void **)(v1 + 16));
}

void sub_10013B390()
{
  uint64_t v0;

  sub_1001342F0(*(_QWORD *)(v0 + 16));
}

void sub_10013B398()
{
  uint64_t v0;

  sub_10013428C(*(_QWORD *)(v0 + 16), 0.0);
}

void sub_10013B3B4()
{
  uint64_t v0;

  sub_100133C04(v0);
}

void sub_10013B3BC()
{
  uint64_t v0;

  sub_100133C80(*(_QWORD *)(v0 + 16));
}

id sub_10013B3C4()
{
  return sub_10013C1C4(&OBJC_IVAR___MusicNowPlayingControlsViewController_playingItemAudioTraitButton);
}

void sub_10013B3DC()
{
  uint64_t v0;

  sub_100133BB4(v0);
}

void sub_10013B3E8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_100134A44(v1, a1);
}

_QWORD *sub_10013B3F0(_QWORD *a1)
{
  destroy for Tooltip.Presentation(a1);
  return a1;
}

unint64_t sub_10013B424()
{
  unint64_t result;

  result = qword_1011A21A0;
  if (!qword_1011A21A0)
  {
    result = swift_getWitnessTable(&unk_100EB370C, &type metadata for NowPlayingLayoutTypeTrait);
    atomic_store(result, (unint64_t *)&qword_1011A21A0);
  }
  return result;
}

unint64_t sub_10013B468()
{
  unint64_t result;

  result = qword_1011BCC80;
  if (!qword_1011BCC80)
  {
    result = swift_getWitnessTable(&unk_100EC3EA8, &type metadata for NowPlayingViewController.LayoutType);
    atomic_store(result, (unint64_t *)&qword_1011BCC80);
  }
  return result;
}

uint64_t sub_10013B4AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10044DF40(a1, *(_QWORD *)(v1 + 16));
}

void sub_10013B4B8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001308C0(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10013B4C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_10013B4E4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = sub_10011DAF0();
  objc_msgSend(v2, "setSelected:", v1);

}

uint64_t sub_10013B52C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013B53C(char a1)
{
  uint64_t v1;

  return sub_10012F4AC(a1, v1);
}

void sub_10013B544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    if (objc_msgSend(*(id *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_musicHapticsManager), "isActive"))v3 = 1;
    else
      v3 = 2;
  }
  else
  {
    v3 = 0;
  }
  *(_BYTE *)(v2 + OBJC_IVAR___MusicNowPlayingControlsViewController_hapticsState) = v3;
  sub_10011C9E8();
}

uint64_t sub_10013B5AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10013B5D0()
{
  uint64_t v0;

  sub_10012D8B8(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10013B5D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013B5E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013B60C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011A21C4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10005AEE4;
  return sub_10012D284(a1);
}

uint64_t sub_10013B670(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_10013B684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10013B6A8()
{
  uint64_t v0;

  return sub_10012BCF0(*(_QWORD *)(v0 + 16));
}

void sub_10013B6B0()
{
  uint64_t v0;

  sub_10012BD44(*(_QWORD *)(v0 + 16));
}

void sub_10013B6B8(void *a1)
{
  uint64_t v1;

  sub_10012AE54(a1, v1);
}

uint64_t sub_10013B6C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10013B6E8(void **a1)
{
  uint64_t v1;

  sub_10012B3B4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10013B6F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10013B72C(uint64_t a1)
{
  uint64_t v1;

  sub_10012B7A0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10013B738()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10013B764()
{
  uint64_t v0;

  sub_10012B6B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10013B76C()
{
  uint64_t v0;

  sub_100128804(v0);
}

void sub_10013B774()
{
  uint64_t v0;

  sub_100128A54(v0);
}

void sub_10013B77C()
{
  uint64_t v0;

  sub_100128BF4(v0);
}

void sub_10013B784()
{
  uint64_t v0;

  sub_100128D00(v0);
}

uint64_t sub_10013B78C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013B7B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10013B7DC()
{
  uint64_t v0;

  return sub_100129960(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), 130.0);
}

id sub_10013B800()
{
  return sub_10013C1C4(&OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
}

uint64_t sub_10013B814()
{
  uint64_t v0;

  return (*(uint64_t (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0));
}

void sub_10013B84C()
{
  uint64_t v0;

  sub_100128F68(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10013B85C()
{
  uint64_t v0;

  sub_100128DDC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10013B868()
{
  return sub_10013B98C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100128E28);
}

void sub_10013B874()
{
  uint64_t v0;

  sub_10012917C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10013B880()
{
  uint64_t v0;

  sub_1001292AC(v0);
}

void sub_10013B888()
{
  uint64_t v0;

  sub_100129524(v0);
}

void sub_10013B890()
{
  uint64_t v0;

  sub_100129754(v0);
}

id sub_10013B898()
{
  uint64_t v0;

  return sub_100129960(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), -300.0);
}

void sub_10013B8BC(uint64_t a1)
{
  uint64_t v1;

  sub_1001299F4(a1, v1);
}

void sub_10013B8C4()
{
  uint64_t v0;

  sub_100129A94(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10013B8D0()
{
  uint64_t v0;

  sub_100129AFC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10013B8DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

id sub_10013B910()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id result;

  v1 = v0[3];
  if (*(_QWORD *)(v1 + 80) == v0[2])
  {
    v2 = (void *)v0[4];
    *(_BYTE *)(v1 + 72) = 1;
    return objc_msgSend(v2, "startAnimation");
  }
  return result;
}

uint64_t sub_10013B93C()
{
  uint64_t v0;

  return sub_100129800(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_10013B94C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10013B980()
{
  return sub_10013B98C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100129864);
}

uint64_t sub_10013B98C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10013B9A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 26, 7);
}

id sub_10013B9C4()
{
  uint64_t v0;

  return sub_100125C64(*(char **)(v0 + 16), *(_WORD *)(v0 + 24));
}

id sub_10013B9D0()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_artworkView);
  if (result)
    return objc_msgSend(result, "setAlpha:", 1.0);
  return result;
}

void sub_10013B9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10011DEA4(a1, a2, v2);
}

void sub_10013BA00(void *a1)
{
  uint64_t v1;

  sub_10011E000(a1, v1);
}

uint64_t sub_10013BA0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011A223C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_10011E14C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10013BA8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != (void *)1)
  {

    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

unint64_t sub_10013BAC4()
{
  unint64_t result;

  result = qword_1011A2260;
  if (!qword_1011A2260)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_1011A2260);
  }
  return result;
}

uint64_t sub_10013BB0C()
{
  return 8;
}

uint64_t sub_10013BB18(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10013BB20(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10013BB34(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_10013BB48()
{
  unint64_t result;

  result = qword_1011A2268;
  if (!qword_1011A2268)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_1011A2268);
  }
  return result;
}

uint64_t sub_10013BB90()
{
  return 8;
}

uint64_t sub_10013BBA8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10013BBE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1011A2284);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_10011B34C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10013BC6C(uint64_t result, char a2)
{
  if (a2 != -1)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t sub_10013BC80(uint64_t result, char a2)
{
  if (a2 != -1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10013BC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v1 = _s7ContextVMa_1(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = (id *)(v0 + v4);
  v7 = _s7ContextV6SourceOMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {
    if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
    {

    }
    else
    {
      v8 = type metadata accessor for Playlist.Entry(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
      v9 = (char *)v6 + *(int *)(sub_100007E8C(&qword_1011A22A0) + 48);
      v10 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
  }
  v11 = (char *)v6 + *(int *)(v1 + 20);
  if (v11[8] != 255)
    swift_bridgeObjectRelease(*(_QWORD *)v11);

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10013BDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s7ContextVMa_1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013BE14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s7ContextVMa_1(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011A229C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_10011C2B4(a1, v5, v6, v7, v8);
}

uint64_t sub_10013BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s7ContextVMa_1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013BEEC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013BF20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011A22B4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10011A760(a1, v4, v5, v7, v6);
}

uint64_t sub_10013BF98()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013BFCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011A22CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10006AEE4;
  return sub_10011AB98(a1, v4, v5, v7, v6);
}

unint64_t sub_10013C044()
{
  unint64_t result;

  result = qword_1011A22D8;
  if (!qword_1011A22D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.Accessibility, &type metadata for Feature.Accessibility);
    atomic_store(result, (unint64_t *)&qword_1011A22D8);
  }
  return result;
}

void sub_10013C088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100119780(a1, a2, a3, v3);
}

void sub_10013C090(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_10013C0A8(a1, a2, a3 & 1);
}

void sub_10013C0A8(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release(a2);
}

void sub_10013C0B8()
{
  sub_1001312F8();
}

uint64_t sub_10013C0D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10013C0E8()
{
  uint64_t v0;

  sub_100110574(*(_QWORD *)(v0 + 16));
}

id sub_10013C0F0(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_10013C108(result, a2, a3 & 1);
  return result;
}

id sub_10013C108(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_retain(a2);
}

void sub_10013C118()
{
  sub_10011C9E8();
  sub_100133D14();
}

id sub_10013C13C()
{
  uint64_t v0;

  return sub_100134414(*(id *)(v0 + 16));
}

id sub_10013C144()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

uint64_t sub_10013C158()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10013C194(int a1)
{
  uint64_t v1;

  sub_10013448C(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_10013C1A0()
{
  sub_10011C9E8();
  sub_100134558();
}

id sub_10013C1C4(_QWORD *a1)
{
  uint64_t v1;
  id result;

  result = *(id *)(*(_QWORD *)(v1 + 16) + *a1);
  if (result)
    return objc_msgSend(result, "setAlpha:");
  __break(1u);
  return result;
}

uint64_t sub_10013C1E8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013C214()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

void sub_10013C23C()
{
  uint64_t v0;

  sub_100110460(v0);
}

id sub_10013C244()
{
  uint64_t v0;

  return sub_10012A40C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10013C250()
{
  uint64_t v0;

  sub_10012A690(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_10013C25C()
{
  uint64_t v0;

  sub_10012AA0C(*(void **)(v0 + 16));
}

unint64_t sub_10013C274()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A22F8;
  if (!qword_1011A22F8)
  {
    v1 = sub_100044B54(&qword_1011A22F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011A22F8);
  }
  return result;
}

void sub_10013C2D0(uint64_t a1)
{
  uint64_t v1;

  sub_100116640(a1, v1);
}

uint64_t sub_10013C2D8(uint64_t a1)
{
  uint64_t v1;

  return sub_100116858(a1, v1);
}

void *sub_10013C2E0(uint64_t a1)
{
  uint64_t v1;

  return sub_100116AD8(a1, v1);
}

void sub_10013C2E8(uint64_t a1)
{
  uint64_t v1;

  sub_100116B38(a1, v1);
}

void sub_10013C2F0(uint64_t a1)
{
  uint64_t v1;

  sub_100116BD8(a1, v1);
}

void sub_10013C2F8(uint64_t a1)
{
  uint64_t v1;

  sub_100117670(a1, v1, &OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton, &OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration);
}

void sub_10013C320(uint64_t a1)
{
  uint64_t v1;

  sub_1001177B8(a1, v1, &OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration, &OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton);
}

void sub_10013C348(uint64_t a1)
{
  uint64_t v1;

  sub_1001178F0(a1, v1, &OBJC_IVAR___MusicNowPlayingControlsViewController_leftButtonConfiguration, &OBJC_IVAR___MusicNowPlayingControlsViewController_leftButton);
}

void sub_10013C370(uint64_t a1)
{
  uint64_t v1;

  sub_100117670(a1, v1, &OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton, &OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration);
}

void sub_10013C398(uint64_t a1)
{
  uint64_t v1;

  sub_1001177B8(a1, v1, &OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration, &OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton);
}

void sub_10013C3C0(uint64_t a1)
{
  uint64_t v1;

  sub_1001178F0(a1, v1, &OBJC_IVAR___MusicNowPlayingControlsViewController_rightButtonConfiguration, &OBJC_IVAR___MusicNowPlayingControlsViewController_rightButton);
}

void sub_10013C3E8(uint64_t a1)
{
  uint64_t v1;

  sub_100117A1C(a1, v1);
}

void sub_10013C3F0(void *a1)
{
  uint64_t v1;

  sub_100117AE4(a1, v1);
}

void sub_10013C3F8(uint64_t a1)
{
  uint64_t v1;

  sub_100117C84(a1, v1);
}

void sub_10013C400(uint64_t a1)
{
  uint64_t v1;

  sub_100117CEC(a1, v1);
}

void sub_10013C408(uint64_t a1)
{
  uint64_t v1;

  sub_100117DBC(a1, v1, sub_10012AA9C);
}

void sub_10013C428()
{
  uint64_t v0;

  sub_100117E10(v0);
}

id sub_10013C430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;

  result = *(id *)(*(_QWORD *)(v2 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_lyricsButton);
  if (result)
    return objc_msgSend(result, "setImage:forState:", a2, a1);
  __break(1u);
  return result;
}

void sub_10013C45C(uint64_t a1)
{
  uint64_t v1;

  sub_100117EAC(a1, v1);
}

void sub_10013C464(uint64_t a1)
{
  uint64_t v1;

  sub_100117FD8(a1, v1);
}

void sub_10013C46C()
{
  uint64_t v0;

  sub_100118204(v0);
}

double sub_10013C474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100118FE0(a1, a2, v2);
}

void sub_10013C47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001190D4(a1, a2, v2);
}

void sub_10013C484(void **a1)
{
  uint64_t v1;

  sub_1001191D8(a1, v1);
}

void sub_10013C48C(void **a1)
{
  uint64_t v1;

  sub_100119258(a1, v1);
}

void sub_10013C494(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1001192DC(a1, v1);
}

void sub_10013C49C()
{
  uint64_t v0;

  sub_100119450(v0, (void (*)(void))sub_100130A44);
}

void sub_10013C4BC()
{
  uint64_t v0;

  sub_100119450(v0, (void (*)(void))sub_10011AF3C);
}

void sub_10013C4DC(uint64_t a1)
{
  uint64_t v1;

  sub_1001194A4(a1, v1);
}

void sub_10013C4E4()
{
  uint64_t v0;

  sub_1001194F4(v0);
}

void sub_10013C4F0()
{
  uint64_t v0;

  sub_100118104(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

BOOL sub_10013C4F8(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_10013C50C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10013C538()
{
  uint64_t v0;

  sub_10012FD78(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10013C544()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013C570(uint64_t a1)
{
  uint64_t v1;

  return sub_10012FED0(a1, *(void **)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10013C57C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);

    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

uint64_t sub_10013C5B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v11;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    v11 = a3;
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

_QWORD *sub_10013C5EC(_QWORD *a1)
{
  uint64_t v2;
  void *v3;

  v2 = a1[1];
  v3 = (void *)a1[2];
  swift_bridgeObjectRelease(a1[9]);

  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_10013C62C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011A23F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return sub_100117430(a1);
}

uint64_t sub_10013C690(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1011A2404);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10006AEE4;
  return sub_100117254(a1);
}

void sub_10013C6F4()
{
  uint64_t v0;

  sub_10011716C(*(_QWORD *)(v0 + 16));
}

void sub_10013C6FC(uint64_t a1)
{
  uint64_t v1;

  sub_100117DBC(a1, v1, sub_100134E20);
}

uint64_t sub_10013C71C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy(a1, a2);
  return a1;
}

char *sub_10013C918(char *a1, uint64_t *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  id v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011A1440);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = &v4[v11];
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)v13;
    v15 = v13[8];
    sub_10006B3F8(*(_QWORD *)v13, v15);
    *(_QWORD *)v12 = v14;
    v12[8] = v15;
    v16 = *(int *)(a3 + 24);
    v17 = &v4[v16];
    v18 = (char *)a2 + v16;
    v19 = *(void **)v18;
    v10 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v10;
    v20 = v19;
  }
  swift_retain(v10);
  return v4;
}

double sub_10013CA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 8));
  v6 = a1 + *(int *)(a2 + 24);

  *(_QWORD *)&result = swift_release(*(_QWORD *)(v6 + 8)).n128_u64[0];
  return result;
}

char *sub_10013CAC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A1440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  v13 = v11[8];
  sub_10006B3F8(*(_QWORD *)v11, v13);
  *(_QWORD *)v10 = v12;
  v10[8] = v13;
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(void **)v16;
  v18 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v18;
  v19 = v17;
  swift_retain(v18);
  return a1;
}

char *sub_10013CBB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100007E8C(&qword_1011A1440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_10006B3F8(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  sub_10006B604(v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(void **)&a1[v19];
  v23 = *(void **)v21;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v24 = v23;

  v25 = *((_QWORD *)v20 + 1);
  v26 = *((_QWORD *)v21 + 1);
  *((_QWORD *)v20 + 1) = v26;
  swift_retain(v26);
  swift_release(v25);
  return a1;
}

char *sub_10013CD20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C(&qword_1011A1440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  return a1;
}

char *sub_10013CDF4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100007E8C(&qword_1011A1440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  v16 = *(_QWORD *)v13;
  v17 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  sub_10006B604(v16, v17);
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(void **)&a1[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;

  v22 = *((_QWORD *)v19 + 1);
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_release(v22);
  return a1;
}

uint64_t sub_10013CF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10013CF50);
}

uint64_t sub_10013CF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100007E8C(&qword_1011A1440);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_10013CFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10013CFE8);
}

uint64_t sub_10013CFE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011A1440);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for ArtworkBackdropView(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A24E8;
  if (!qword_1011A24E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ArtworkBackdropView);
  return result;
}

void sub_10013D0A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10013D11C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_100EABCA0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_10013D11C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B66A0)
  {
    v2 = type metadata accessor for Artwork(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011B66A0);
  }
}

uint64_t sub_10013D170(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F969A0, 1);
}

uint64_t sub_10013D180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64x2_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  int64x2_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64x2_t v48;
  _OWORD v49[4];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _BYTE v53[7];
  char v54;
  int64x2_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;

  v37 = a1;
  v46 = a3;
  v45 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v45);
  v44 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for GeometryProxy(0);
  v6 = *(_QWORD *)(v47 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v47);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkBackdropView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = static VerticalAlignment.center.getter(v12);
  sub_10013D4C8(a2, &v55);
  v40 = v56;
  v41 = v55;
  v39 = v57;
  v43 = v58;
  v38 = static Animation.linear(duration:)(0.25);
  v14 = *(int64x2_t *)(a2 + *(int *)(v9 + 24));
  v35 = a2;
  v55 = v14;
  v15 = sub_100007E8C(&qword_1011A2528);
  State.wrappedValue.getter(&v48, v15);
  v34 = v48.i64[0];
  sub_10013ED50(a2, (uint64_t)v13);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16 = v47;
  v36(v8, a1, v47);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = *(unsigned __int8 *)(v6 + 80);
  v20 = (v11 + v19 + v18) & ~v19;
  v21 = v20 + v7;
  v22 = v17 | v19 | 7;
  v23 = swift_allocObject(&unk_1010B2CF8, v21, v22);
  sub_10013EE60((uint64_t)v13, v23 + v18);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v24(v23 + v20, v8, v16);
  v54 = 1;
  v48 = (int64x2_t)(unint64_t)v42;
  LOBYTE(v49[0]) = 1;
  *(_DWORD *)((char *)v49 + 1) = *(_DWORD *)v53;
  DWORD1(v49[0]) = *(_DWORD *)&v53[3];
  *(int64x2_t *)((char *)v49 + 8) = v41;
  *(_OWORD *)((char *)&v49[1] + 8) = v40;
  *(_OWORD *)((char *)&v49[2] + 8) = v39;
  v25 = v44;
  *((_QWORD *)&v49[3] + 1) = v43;
  *(_QWORD *)&v50 = v38;
  *((_QWORD *)&v50 + 1) = v34;
  *(_QWORD *)&v51 = sub_10013EEF4;
  v52 = 0uLL;
  *((_QWORD *)&v51 + 1) = v23;
  v26 = v35;
  sub_10013EF64(v35, v44);
  sub_10013ED50(v26, (uint64_t)v13);
  v27 = v47;
  v36(v8, v37, v47);
  v28 = swift_allocObject(&unk_1010B2D20, v21, v22);
  sub_10013EE60((uint64_t)v13, v28 + v18);
  v24(v28 + v20, v8, v27);
  v29 = sub_100007E8C(&qword_1011A2530);
  v30 = sub_10013F140();
  v31 = sub_10013F248();
  View.onChange<A>(of:initial:_:)(v25, 0, sub_10013F0CC, v28, v29, v45, v30, v31);
  swift_release(v28);
  sub_10004FF60(v25, &qword_1011A1440);
  v59 = v49[3];
  v60 = v50;
  v61 = v51;
  v62 = v52;
  v55 = v48;
  v56 = v49[0];
  v57 = v49[1];
  v58 = v49[2];
  return sub_10013F2C4((uint64_t)&v55);
}

void sub_10013D4C8(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64x2_t v20;
  __int128 v21;
  id v22;

  v4 = type metadata accessor for OpacityTransition(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v21 - v9;
  v21 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for ArtworkBackdropView(0) + 24));
  v11 = sub_100007E8C(&qword_1011A2528);
  State.wrappedValue.getter(&v22, v11);
  v12 = (uint64_t)v22;
  if (v22)
  {
    v13 = v22;
    v14 = static SafeAreaRegions.all.getter();
    v15 = static Edge.Set.all.getter(v14);
    OpacityTransition.init()();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    v16 = sub_100048748(&qword_1011BF720, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
    v17 = AnyTransition.init<A>(_:)(v8, v4, v16);
    LOBYTE(v21) = 1;
    LOBYTE(v22) = 1;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

    v18 = v15;
    v19 = 256;
    if (!(_BYTE)v22)
      v19 = 0;
    v20 = vdupq_n_s64(0x3FE3333333333333uLL);
    v20.i64[0] = v19 | v21;
  }
  else
  {
    v14 = 0;
    v18 = 0;
    v17 = 0;
    v20 = 0uLL;
  }
  a2->i64[0] = v12;
  a2->i64[1] = v14;
  a2[1].i64[0] = v18;
  a2[1].i64[1] = 0;
  a2[2] = v20;
  a2[3].i64[0] = v17;
}

uint64_t sub_10013D66C(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v46;
  char *v47;
  void (*v48)(uint64_t, char *, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v52 = type metadata accessor for ArtworkBackdropView(0);
  v6 = *(_QWORD *)(v52 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v52);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A1440);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  __chkstk_darwin(v17);
  v19 = (char *)&v47 - v18;
  v20 = a1;
  v22 = v21;
  sub_10013EF64(v20, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v22) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011A1440);
LABEL_8:
    v24 = v52;
    v25 = v53;
    goto LABEL_9;
  }
  v50 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v6;
  v23 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v23(v19, v13, v22);
  if (a3 <= 0.0 || a2 <= 0.0)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v22);
    goto LABEL_8;
  }
  v48 = (void (*)(uint64_t, char *, uint64_t))v23;
  v49 = v19;
  v24 = v52;
  v25 = v53;
  v26 = v53 + *(int *)(v52 + 20);
  v27 = *(_QWORD *)v26;
  v28 = v22;
  v29 = *(_BYTE *)(v26 + 8);
  sub_10006B3F8(*(_QWORD *)v26, v29);
  v30 = sub_100824A24(v27, v29);
  sub_10006B604(v27, v29);
  if (v30 > 0.0)
  {
    v31 = type metadata accessor for TaskPriority(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
    v47 = v10;
    v32(v10, 1, 1, v31);
    v33 = v50;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v50, v49, v28);
    sub_10013ED50(v25, (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    type metadata accessor for MainActor(0);
    v35 = static MainActor.shared.getter(v34);
    v36 = *(unsigned __int8 *)(v15 + 80);
    v37 = (v36 + 32) & ~v36;
    v38 = (v16 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = *(unsigned __int8 *)(v51 + 80);
    v40 = (v39 + v38 + 16) & ~v39;
    v41 = swift_allocObject(&unk_1010B2D48, v40 + v7, v36 | v39 | 7);
    *(_QWORD *)(v41 + 16) = v35;
    *(_QWORD *)(v41 + 24) = &protocol witness table for MainActor;
    v48(v41 + v37, v33, v28);
    v42 = (double *)(v41 + v38);
    *v42 = a2;
    v42[1] = a3;
    sub_10013EE60((uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v41 + v40);
    v43 = sub_100166D14((uint64_t)v47, (uint64_t)&unk_1011A2588, v41);
    v44 = swift_release(v43);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v49, v28, v44);
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v28);
LABEL_9:
  v55 = *(_OWORD *)(v25 + *(int *)(v24 + 24));
  v54 = 0;
  v46 = sub_100007E8C(&qword_1011A2528);
  return State.wrappedValue.setter(&v54, v46);
}

uint64_t sub_10013D9D4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v7 + 88) = a7;
  *(double *)(v7 + 72) = a1;
  *(double *)(v7 + 80) = a2;
  *(_QWORD *)(v7 + 64) = a6;
  v8 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v7 + 96) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 112) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011C5B20);
  *(_QWORD *)(v7 + 120) = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 128) = swift_task_alloc(v11);
  *(_QWORD *)(v7 + 136) = swift_task_alloc(v11);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A1440) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 144) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 152) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 160) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 168) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 176) = swift_task_alloc(v12);
  *(_QWORD *)(v7 + 184) = swift_task_alloc(v12);
  v13 = type metadata accessor for Backdrop.SnapshotConfiguration(0);
  *(_QWORD *)(v7 + 192) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v7 + 200) = v14;
  *(_QWORD *)(v7 + 208) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Artwork.ImageFormat(0);
  *(_QWORD *)(v7 + 216) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v7 + 224) = v16;
  *(_QWORD *)(v7 + 232) = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Artwork.CropStyle(0);
  *(_QWORD *)(v7 + 240) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v7 + 248) = v18;
  *(_QWORD *)(v7 + 256) = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 264) = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  *(_QWORD *)(v7 + 272) = v21;
  *(_QWORD *)(v7 + 280) = v22;
  return swift_task_switch(sub_10013DB84, v21, v22);
}

uint64_t sub_10013DB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = Artwork.CropStyle.fallback.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  v8 = Artwork.ImageFormat.fallback.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v8, v5);
  v9 = (_QWORD *)swift_task_alloc(dword_1011DEFCC);
  *(_QWORD *)(v0 + 288) = v9;
  *v9 = v0;
  v9[1] = sub_10013DC2C;
  return Artwork.image(for:cropStyle:format:)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232), *(double *)(v0 + 72), *(double *)(v0 + 80));
}

uint64_t sub_10013DC2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  *(_QWORD *)(*(_QWORD *)v2 + 296) = a1;
  swift_task_dealloc(v4);
  v6 = v3[31];
  v5 = v3[32];
  v8 = v3[29];
  v7 = v3[30];
  v9 = v3[27];
  v10 = v3[28];
  if (v1)
  {
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v11 = v3[34];
    v12 = v3[35];
    v13 = sub_10013E514;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v10 + 8))(v3[29], v3[27]);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v11 = v3[34];
    v12 = v3[35];
    v13 = sub_10013DD04;
  }
  return swift_task_switch(v13, v11, v12);
}

uint64_t sub_10013DD04()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  double v12;
  id v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  objc_msgSend(*(id *)(v0 + 296), "size");
  v1 = *(void **)(v0 + 296);
  if (v2 > 0.0)
  {
    objc_msgSend(*(id *)(v0 + 296), "size");
    v1 = *(void **)(v0 + 296);
    if (v3 > 0.0)
    {
      v4 = *(_QWORD *)(v0 + 88);
      v6 = *(double *)(v0 + 72);
      v5 = *(double *)(v0 + 80);
      v7 = type metadata accessor for ArtworkBackdropView(0);
      *(_QWORD *)(v0 + 304) = v7;
      v8 = v4 + *(int *)(v7 + 20);
      v9 = *(_QWORD *)v8;
      v10 = *(_BYTE *)(v8 + 8);
      v11 = v1;
      sub_10006B3F8(v9, v10);
      v12 = sub_100824A24(v9, v10);
      sub_10006B604(v9, v10);
      v13 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
      Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)(v1, v13, v6, v5, v12, 0.0);
      type metadata accessor for Backdrop.CompositeRenderer(0);
      v14 = (_QWORD *)swift_task_alloc(async function pointer to static Backdrop.CompositeRenderer.snapshot(configuration:)[1]);
      *(_QWORD *)(v0 + 312) = v14;
      *v14 = v0;
      v14[1] = sub_10013E140;
      return static Backdrop.CompositeRenderer.snapshot(configuration:)(*(_QWORD *)(v0 + 208));
    }
  }
  swift_release(*(_QWORD *)(v0 + 264));

  v17 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 16))(v16, *(_QWORD *)(v0 + 64), v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
  sub_10013EF64(v22, v17);
  v23 = v18 + *(int *)(v19 + 48);
  sub_10013EF64(v16, v18);
  sub_10013EF64(v17, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v24(v18, 1, v20) == 1)
  {
    v25 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 96);
    sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_1011A1440);
    sub_10004FF60(v25, &qword_1011A1440);
    if (v24(v23, 1, v26) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011A1440);
LABEL_11:
      v41 = *(_QWORD *)(v0 + 88);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v41 + *(int *)(type metadata accessor for ArtworkBackdropView(0) + 24));
      *(_QWORD *)(v0 + 48) = 0;
      v42 = sub_100007E8C(&qword_1011A2528);
      State.wrappedValue.setter(v0 + 48, v42);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  v27 = *(_QWORD *)(v0 + 96);
  sub_10013EF64(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 144));
  v28 = v24(v23, 1, v27);
  v30 = *(_QWORD *)(v0 + 152);
  v29 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 144);
  if (v28 == 1)
  {
    v32 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_1011A1440);
    sub_10004FF60(v29, &qword_1011A1440);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
LABEL_9:
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011C5B20);
    goto LABEL_12;
  }
  v34 = *(_QWORD *)(v0 + 128);
  v36 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 112);
  v37 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v35, v23, v37);
  v38 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  v39 = dispatch thunk of static Equatable.== infix(_:_:)(v31, v35, v37, v38);
  v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v40(v35, v37);
  sub_10004FF60(v30, &qword_1011A1440);
  sub_10004FF60(v29, &qword_1011A1440);
  v40(v31, v37);
  sub_10004FF60(v34, &qword_1011A1440);
  if ((v39 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  v43 = *(_QWORD *)(v0 + 232);
  v44 = *(_QWORD *)(v0 + 208);
  v46 = *(_QWORD *)(v0 + 176);
  v45 = *(_QWORD *)(v0 + 184);
  v48 = *(_QWORD *)(v0 + 160);
  v47 = *(_QWORD *)(v0 + 168);
  v50 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 152);
  v51 = *(_QWORD *)(v0 + 136);
  v52 = *(_QWORD *)(v0 + 128);
  v53 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10013E140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *(_QWORD **)v2;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 312));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = v4[34];
    v6 = v4[35];
    v7 = sub_10013E810;
  }
  else
  {
    v4[40] = a1;
    v5 = v4[34];
    v6 = v4[35];
    v7 = sub_10013E1B8;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10013E1B8()
{
  uint64_t v0;
  void *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  __n128 v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;

  v1 = *(void **)(v0 + 320);
  v2 = swift_release(*(_QWORD *)(v0 + 264));
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v8 + 16))(v3, *(_QWORD *)(v0 + 64), v7, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
  sub_10013EF64(v9, v4);
  v10 = v5 + *(int *)(v6 + 48);
  sub_10013EF64(v3, v5);
  sub_10013EF64(v4, v10);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v11(v5, 1, v7) != 1)
  {
    v14 = *(_QWORD *)(v0 + 96);
    sub_10013EF64(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 168));
    v15 = v11(v10, 1, v14);
    v17 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 168);
    if (v15 != 1)
    {
      v21 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 104);
      v22 = *(_QWORD *)(v0 + 112);
      v24 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v10, v24);
      v25 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v22, v24, v25);
      v27 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v27(v22, v24);
      sub_10004FF60(v17, &qword_1011A1440);
      sub_10004FF60(v16, &qword_1011A1440);
      v27(v18, v24);
      sub_10004FF60(v21, &qword_1011A1440);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v38 = *(void **)(v0 + 296);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));

      goto LABEL_10;
    }
    v19 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
    sub_10004FF60(v16, &qword_1011A1440);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011C5B20);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 96);
  sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
  sub_10004FF60(v12, &qword_1011A1440);
  if (v11(v10, 1, v13) != 1)
    goto LABEL_6;
  sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011A1440);
LABEL_8:
  v28 = *(void **)(v0 + 296);
  v30 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 88) + *(int *)(*(_QWORD *)(v0 + 304) + 24);
  v34 = *(void **)v32;
  v33 = *(_QWORD *)(v32 + 8);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)v32;
  *(_QWORD *)(v0 + 40) = v33;
  *(_QWORD *)(v0 + 56) = v1;
  swift_retain(v33);
  v35 = v34;
  v36 = sub_100007E8C(&qword_1011A2528);
  State.wrappedValue.setter(v0 + 56, v36);

  v37 = swift_release(v33);
  (*(void (**)(uint64_t, uint64_t, __n128))(v30 + 8))(v29, v31, v37);
LABEL_10:
  v39 = *(_QWORD *)(v0 + 232);
  v40 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v44 = *(_QWORD *)(v0 + 160);
  v43 = *(_QWORD *)(v0 + 168);
  v46 = *(_QWORD *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 152);
  v47 = *(_QWORD *)(v0 + 136);
  v49 = *(_QWORD *)(v0 + 128);
  v50 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10013E514()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v1 = swift_release(*(_QWORD *)(v0 + 264));
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v7 + 16))(v2, *(_QWORD *)(v0 + 64), v6, v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  sub_10013EF64(v8, v3);
  v9 = v4 + *(int *)(v5 + 48);
  sub_10013EF64(v2, v4);
  sub_10013EF64(v3, v9);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v10(v4, 1, v6) == 1)
  {
    v11 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 96);
    sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_1011A1440);
    sub_10004FF60(v11, &qword_1011A1440);
    if (v10(v9, 1, v12) == 1)
    {
      sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011A1440);
LABEL_8:
      v27 = *(_QWORD *)(v0 + 88);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v27 + *(int *)(type metadata accessor for ArtworkBackdropView(0) + 24));
      *(_QWORD *)(v0 + 48) = 0;
      v28 = sub_100007E8C(&qword_1011A2528);
      State.wrappedValue.setter(v0 + 48, v28);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v0 + 96);
  sub_10013EF64(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 144));
  v14 = v10(v9, 1, v13);
  v16 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 144);
  if (v14 == 1)
  {
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 152), &qword_1011A1440);
    sub_10004FF60(v15, &qword_1011A1440);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 128), &qword_1011C5B20);
    goto LABEL_9;
  }
  v20 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v9, v23);
  v24 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
  v25 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v21, v23, v24);
  v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v26(v21, v23);
  sub_10004FF60(v16, &qword_1011A1440);
  sub_10004FF60(v15, &qword_1011A1440);
  v26(v17, v23);
  sub_10004FF60(v20, &qword_1011A1440);
  if ((v25 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v29 = *(_QWORD *)(v0 + 232);
  v30 = *(_QWORD *)(v0 + 208);
  v32 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 184);
  v34 = *(_QWORD *)(v0 + 160);
  v33 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 144);
  v35 = *(_QWORD *)(v0 + 152);
  v37 = *(_QWORD *)(v0 + 136);
  v39 = *(_QWORD *)(v0 + 128);
  v40 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10013E810()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  __n128 v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;

  v1 = swift_release(*(_QWORD *)(v0 + 264));
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v7 + 16))(v2, *(_QWORD *)(v0 + 64), v6, v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  sub_10013EF64(v8, v3);
  v9 = v4 + *(int *)(v5 + 48);
  sub_10013EF64(v2, v4);
  sub_10013EF64(v3, v9);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v10(v4, 1, v6) != 1)
  {
    v13 = *(_QWORD *)(v0 + 96);
    sub_10013EF64(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 168));
    v14 = v10(v9, 1, v13);
    v16 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 168);
    if (v14 != 1)
    {
      v20 = *(_QWORD *)(v0 + 136);
      v22 = *(_QWORD *)(v0 + 104);
      v21 = *(_QWORD *)(v0 + 112);
      v23 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v9, v23);
      v24 = sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
      v25 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v21, v23, v24);
      v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v26(v21, v23);
      sub_10004FF60(v16, &qword_1011A1440);
      sub_10004FF60(v15, &qword_1011A1440);
      v26(v17, v23);
      sub_10004FF60(v20, &qword_1011A1440);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v37 = *(void **)(v0 + 296);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));

      goto LABEL_10;
    }
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
    sub_10004FF60(v15, &qword_1011A1440);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
LABEL_6:
    sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011C5B20);
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 96);
  sub_10004FF60(*(_QWORD *)(v0 + 176), &qword_1011A1440);
  sub_10004FF60(v11, &qword_1011A1440);
  if (v10(v9, 1, v12) != 1)
    goto LABEL_6;
  sub_10004FF60(*(_QWORD *)(v0 + 136), &qword_1011A1440);
LABEL_8:
  v27 = *(void **)(v0 + 296);
  v29 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 192);
  v31 = *(_QWORD *)(v0 + 88) + *(int *)(*(_QWORD *)(v0 + 304) + 24);
  v33 = *(void **)v31;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)v31;
  *(_QWORD *)(v0 + 40) = v32;
  *(_QWORD *)(v0 + 56) = 0;
  swift_retain(v32);
  v34 = v33;
  v35 = sub_100007E8C(&qword_1011A2528);
  State.wrappedValue.setter(v0 + 56, v35);

  v36 = swift_release(v32);
  (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v28, v30, v36);
LABEL_10:
  v38 = *(_QWORD *)(v0 + 232);
  v39 = *(_QWORD *)(v0 + 208);
  v41 = *(_QWORD *)(v0 + 176);
  v40 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 160);
  v42 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 144);
  v44 = *(_QWORD *)(v0 + 152);
  v46 = *(_QWORD *)(v0 + 136);
  v48 = *(_QWORD *)(v0 + 128);
  v49 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10013EB64()
{
  _QWORD *v0;

  return objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", *v0);
}

uint64_t sub_10013EBA8(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_10013EBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10013F728();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10013EC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10013F728();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10013EC88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10013F728();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10013ECAC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  sub_10013ED50(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_1010B2CD0, v7 + v5, v6 | 7);
  result = sub_10013EE60((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *a2 = sub_10013EEA4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_10013ED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkBackdropView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013ED94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ArtworkBackdropView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  sub_10006B604(*(_QWORD *)(v6 + *(int *)(v1 + 20)), *(_BYTE *)(v6 + *(int *)(v1 + 20) + 8));
  v9 = v6 + *(int *)(v1 + 24);

  swift_release(*(_QWORD *)(v9 + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10013EE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArtworkBackdropView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013EEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkBackdropView(0) - 8) + 80);
  return sub_10013D180(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_10013EEF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  double v4;
  double v5;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkBackdropView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = type metadata accessor for GeometryProxy(0);
  v4 = GeometryProxy.size.getter(v3);
  return sub_10013D66C(v0 + v2, v4, v5);
}

uint64_t sub_10013EF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011A1440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013EFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for ArtworkBackdropView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v15 = *(_QWORD *)(v2 + 64);
  v16 = type metadata accessor for GeometryProxy(0);
  v5 = *(_QWORD *)(v16 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v4;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v4, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v4, v9);
  v11 = (v4 + v15 + v6) & ~v6;
  sub_10006B604(*(_QWORD *)(v8 + *(int *)(v1 + 20)), *(_BYTE *)(v8 + *(int *)(v1 + 20) + 8));
  v12 = v8 + *(int *)(v1 + 24);

  v13 = swift_release(*(_QWORD *)(v12 + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v11, v16, v13);
  return swift_deallocObject(v0, v11 + v7, v3 | v6 | 7);
}

uint64_t sub_10013F0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  double v5;

  type metadata accessor for ArtworkBackdropView(0);
  v3 = type metadata accessor for GeometryProxy(0);
  v4 = GeometryProxy.size.getter(v3);
  return sub_10013D66C(a2, v4, v5);
}

unint64_t sub_10013F140()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2538;
  if (!qword_1011A2538)
  {
    v1 = sub_100044B54(&qword_1011A2530);
    sub_10013F1AC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2538);
  }
  return result;
}

unint64_t sub_10013F1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2540;
  if (!qword_1011A2540)
  {
    v1 = sub_100044B54(&qword_1011A2548);
    sub_100049F28(&qword_1011A2550, &qword_1011A2558, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011A2560, &qword_1011A2568, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2540);
  }
  return result;
}

unint64_t sub_10013F248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2570;
  if (!qword_1011A2570)
  {
    v1 = sub_100044B54(&qword_1011A1440);
    sub_100048748(&qword_1011A2578, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2570);
  }
  return result;
}

uint64_t sub_10013F2C4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(void **)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  sub_10013F340(*(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  swift_release(v2);

  sub_10004BA30(v4, v5);
  sub_10004BA30(v6, v7);
  return a1;
}

void sub_10013F340(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_release(a7);

  }
}

uint64_t sub_10013F370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for Artwork(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for ArtworkBackdropView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 16) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v12(v0 + v4, v1, v11);
  v13 = v0 + v9;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v9, 1, v1))
    ((void (*)(uint64_t, uint64_t))v12)(v0 + v9, v1);
  sub_10006B604(*(_QWORD *)(v13 + *(int *)(v6 + 20)), *(_BYTE *)(v13 + *(int *)(v6 + 20) + 8));
  v14 = v13 + *(int *)(v6 + 24);

  swift_release(*(_QWORD *)(v14 + 8));
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

uint64_t sub_10013F47C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for Artwork(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkBackdropView(0) - 8) + 80);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(double *)(v1 + v6);
  v12 = *(double *)(v1 + v6 + 8);
  v13 = v1 + ((v6 + v7 + 16) & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1011A2584);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10005AEE4;
  return sub_10013D9D4(v11, v12, a1, v8, v9, v10, v13);
}

void **initializeBufferWithCopyOfBuffer for JSComponentController.Environment(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for JSComponentController.Environment(id *a1)
{

}

void **assignWithCopy for JSComponentController.Environment(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *initializeWithTake for JSComponentController.Environment(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for JSComponentController.Environment(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for JSComponentController.Environment(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSComponentController.Environment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkBackdropView.ImageViewRepresentable()
{
  return &type metadata for ArtworkBackdropView.ImageViewRepresentable;
}

uint64_t sub_10013F6B4()
{
  return sub_100049F28(&qword_1011A2590, &qword_1011A2598, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

unint64_t sub_10013F6E4()
{
  unint64_t result;

  result = qword_1011A25A0;
  if (!qword_1011A25A0)
  {
    result = swift_getWitnessTable(&unk_100EABD28, &type metadata for ArtworkBackdropView.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1011A25A0);
  }
  return result;
}

unint64_t sub_10013F728()
{
  unint64_t result;

  result = qword_1011A25A8;
  if (!qword_1011A25A8)
  {
    result = swift_getWitnessTable(&unk_100EABD78, &type metadata for ArtworkBackdropView.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1011A25A8);
  }
  return result;
}

uint64_t MusicLibrarySectionedRequest.playbackIntent(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A20D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119F7C8);
  sub_10078FD98(v6, (uint64_t)v5);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>, a2);
  v8 = MusicPlayableRequest.playbackIntent(withStartingItem:)(v5, a2, WitnessTable);
  sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011A20D0);
  return v8;
}

uint64_t MusicLibraryRequest.playbackIntent(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  _BYTE v7[40];

  v3 = sub_100007E8C(&qword_1011A25B0);
  sub_10078FD98(v3, (uint64_t)v7);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicLibraryRequest<A>, a2);
  v5 = MusicPlayableRequest.playbackIntent(withStartingItem:)(v7, a2, WitnessTable);
  sub_10004FF60((uint64_t)v7, &qword_1011A16C8);
  return v5;
}

uint64_t type metadata accessor for WelcomeViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A2618, (uint64_t)&nominal type descriptor for WelcomeViewController);
}

uint64_t sub_10013F8D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[2];

  v2 = qword_10124C8F0;
  result = type metadata accessor for WelcomeViewModel(319);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10013F950@<X0>(char *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _BYTE v58[16];
  uint64_t *v59;
  double v60;
  _OWORD v61[3];

  v57 = a1;
  v2 = sub_100007E8C(&qword_1011A28C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_1011A28C8);
  __chkstk_darwin(v51);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100007E8C(&qword_1011A28D0);
  __chkstk_darwin(v53);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100007E8C(&qword_1011A28D8);
  v9 = __chkstk_darwin(v56);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v55 = (uint64_t)&v50 - v12;
  v13 = sub_100007E8C(&qword_1011A28E0);
  v54 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v52 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v50 - v17;
  v59 = v1;
  v19 = static Axis.Set.vertical.getter(v16);
  v20 = sub_100007E8C(&qword_1011A28E8);
  v21 = sub_10005610C(&qword_1011A28F0, &qword_1011A28E8, (void (*)(void))sub_100142284);
  v22 = ScrollView.init(_:showsIndicators:content:)(v19, 1, sub_10014227C, v58, v20, v21);
  *(_QWORD *)v4 = static HorizontalAlignment.center.getter(v22);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v23 = sub_100007E8C(&qword_1011A2918);
  v24 = sub_1001405C0(v1, (uint64_t)&v4[*(int *)(v23 + 44)]);
  v25 = static Alignment.bottom.getter(v24);
  _FrameLayout.init(width:height:alignment:)(v61, 0, 1, 0, 1, v25, v26);
  sub_10004A160((uint64_t)v4, (uint64_t)v6, &qword_1011A28C0);
  v27 = &v6[*(int *)(v51 + 36)];
  v28 = v61[1];
  *(_OWORD *)v27 = v61[0];
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v61[2];
  sub_10004FF60((uint64_t)v4, &qword_1011A28C0);
  sub_10004A160((uint64_t)v6, (uint64_t)v8, &qword_1011A28C8);
  *(_WORD *)&v8[*(int *)(v53 + 36)] = 256;
  v29 = sub_10004FF60((uint64_t)v6, &qword_1011A28C8);
  LOBYTE(v4) = static Edge.Set.horizontal.getter(v29);
  v30 = *(uint64_t *)((char *)v1 + *(int *)(type metadata accessor for WelcomeView(0) + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100EABFB8);
  v32 = swift_getKeyPath(&unk_100EABFE0);
  swift_retain(v30);
  static Published.subscript.getter(&v60, v33, KeyPath, v32);
  swift_release(v30);
  swift_release(KeyPath);
  swift_release(v32);
  v34 = EdgeInsets.init(_all:)(v60);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011A28D0);
  v41 = &v11[*(int *)(v56 + 36)];
  *v41 = (char)v4;
  *((double *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  sub_10004FF60((uint64_t)v8, &qword_1011A28D0);
  v42 = v55;
  sub_100065228((uint64_t)v11, v55, &qword_1011A28D8);
  v43 = v54;
  v44 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v45 = v52;
  v44(v52, v18, v13);
  sub_10004A160(v42, (uint64_t)v11, &qword_1011A28D8);
  v46 = v57;
  v44(v57, v45, v13);
  v47 = sub_100007E8C(&qword_1011A2920);
  sub_10004A160((uint64_t)v11, (uint64_t)&v46[*(int *)(v47 + 48)], &qword_1011A28D8);
  sub_10004FF60(v42, &qword_1011A28D8);
  v48 = *(void (**)(char *, uint64_t))(v43 + 8);
  v48(v18, v13);
  sub_10004FF60((uint64_t)v11, &qword_1011A28D8);
  return ((uint64_t (*)(char *, uint64_t))v48)(v45, v13);
}

uint64_t sub_10013FDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  double v43;

  v4 = sub_100007E8C(&qword_1011A2910);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A2900);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v8);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v11 = sub_100007E8C(&qword_1011A2978);
  v12 = sub_10014002C(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  v13 = static Edge.Set.horizontal.getter(v12);
  v14 = a1 + *(int *)(type metadata accessor for WelcomeView(0) + 20);
  v15 = *(_QWORD *)(v14 + 8);
  KeyPath = swift_getKeyPath(&unk_100EABFB8);
  v17 = swift_getKeyPath(&unk_100EABFE0);
  swift_retain(v15);
  static Published.subscript.getter(&v43, v18, KeyPath, v17);
  swift_release(v15);
  swift_release(KeyPath);
  swift_release(v17);
  v19 = EdgeInsets.init(_all:)(v43);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_10004A160((uint64_t)v6, (uint64_t)v10, &qword_1011A2910);
  v26 = &v10[*(int *)(v7 + 36)];
  *v26 = v13;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  v27 = sub_10004FF60((uint64_t)v6, &qword_1011A2910);
  v28 = static Edge.Set.top.getter(v27);
  v29 = *(_QWORD *)(v14 + 8);
  v30 = swift_getKeyPath(&unk_100EAC030);
  v31 = swift_getKeyPath(&unk_100EAC058);
  swift_retain(v29);
  static Published.subscript.getter(&v43, v32, v30, v31);
  swift_release(v29);
  swift_release(v30);
  swift_release(v31);
  v33 = EdgeInsets.init(_all:)(v43);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_10004A160((uint64_t)v10, a2, &qword_1011A2900);
  v40 = a2 + *(int *)(sub_100007E8C(&qword_1011A28E8) + 36);
  *(_BYTE *)v40 = v28;
  *(double *)(v40 + 8) = v33;
  *(_QWORD *)(v40 + 16) = v35;
  *(_QWORD *)(v40 + 24) = v37;
  *(_QWORD *)(v40 + 32) = v39;
  *(_BYTE *)(v40 + 40) = 0;
  return sub_10004FF60((uint64_t)v10, &qword_1011A2900);
}

uint64_t sub_10014002C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t KeyPath;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;

  v97 = a2;
  v3 = sub_100007E8C(&qword_1011A2980);
  v4 = __chkstk_darwin(v3);
  v98 = (uint64_t)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v96 = (char *)&v91 - v6;
  v7 = type metadata accessor for AttributedString(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A2988);
  v12 = __chkstk_darwin(v11);
  v95 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v99 = (uint64_t)&v91 - v14;
  v15 = sub_100007E8C(&qword_1011A05F8);
  v16 = __chkstk_darwin(v15);
  v94 = (uint64_t)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v91 - v18;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  v22 = qword_10119C1E0;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v23 = qword_10124D260;
  v24 = (id)qword_10124D260;
  v25 = Image.init(_:bundle:)(v20, v21, v23);
  v100 = v25;
  v26 = AccessibilityIdentifier.privacyWelcomeImage.unsafeMutableAddressor();
  v27 = *v26;
  v28 = v26[1];
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v27, v28, &type metadata for Image, &protocol witness table for Image);
  swift_release(v25);
  swift_bridgeObjectRelease(v28);
  v29 = type metadata accessor for WelcomeViewModel(0);
  v30.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v29 + 24), v7);
  v31 = Text.init(_:)(v10, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  v38 = static Font.largeTitle.getter();
  v39 = Text.font(_:)(v38, v31, v33, v37, v35);
  v92 = a1;
  v93 = v19;
  v41 = v40;
  v43 = v42;
  v45 = v44;
  swift_release(v38);
  v46 = v43 & 1;
  sub_100055BAC(v31, v33, v37);
  swift_bridgeObjectRelease(v35);
  v48 = static Font.Weight.bold.getter(v47);
  v49 = Text.fontWeight(_:)(*(_QWORD *)&v48, 0, v39, v41, v46, v45);
  v51 = v50;
  v53 = v52;
  LOBYTE(v38) = v54 & 1;
  sub_100055BAC(v39, v41, v46);
  swift_bridgeObjectRelease(v45);
  v100 = v49;
  v101 = v51;
  v102 = v38;
  v103 = v53;
  v55 = AccessibilityIdentifier.privacyWelcomeTitle.unsafeMutableAddressor();
  v56 = *v55;
  v57 = v55[1];
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v56, v57, &type metadata for Text, &protocol witness table for Text);
  swift_bridgeObjectRelease(v57);
  sub_100055BAC(v49, v51, v38);
  swift_bridgeObjectRelease(v53);
  v58 = (uint64_t *)(v92 + *(int *)(v29 + 28));
  v59 = v58[1];
  v100 = *v58;
  v101 = v59;
  v60 = sub_100055B68();
  swift_bridgeObjectRetain();
  v61 = Text.init<A>(_:)(&v100, &type metadata for String, v60);
  v63 = v62;
  v65 = v64;
  v67 = v66 & 1;
  v68 = static Font.body.getter(v61);
  v69 = Text.font(_:)(v68, v61, v63, v67, v65);
  v71 = v70;
  LOBYTE(v46) = v72;
  v74 = v73;
  swift_release(v68);
  LOBYTE(v38) = v46 & 1;
  sub_100055BAC(v61, v63, v67);
  swift_bridgeObjectRelease(v65);
  KeyPath = swift_getKeyPath(&unk_100EAC078);
  v100 = v69;
  v101 = v71;
  v102 = v46 & 1;
  v103 = v74;
  v104 = KeyPath;
  v105 = 1;
  v76 = AccessibilityIdentifier.privacyWelcomeDescription.unsafeMutableAddressor();
  v77 = *v76;
  v78 = v76[1];
  swift_bridgeObjectRetain();
  v79 = sub_100007E8C(&qword_10119E038);
  v80 = sub_100055D34();
  v81 = (uint64_t)v96;
  View.accessibilityIdentifier(_:)(v77, v78, v79, v80);
  swift_bridgeObjectRelease(v78);
  sub_100055BAC(v69, v71, v38);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v74);
  v83 = (uint64_t)v93;
  v82 = v94;
  sub_10004A160((uint64_t)v93, v94, &qword_1011A05F8);
  v84 = v99;
  v85 = v95;
  sub_10004A160(v99, v95, &qword_1011A2988);
  v86 = v98;
  sub_10004A160(v81, v98, &qword_1011A2980);
  v87 = v97;
  sub_10004A160(v82, v97, &qword_1011A05F8);
  v88 = (int *)sub_100007E8C(&qword_1011A2990);
  sub_10004A160(v85, v87 + v88[12], &qword_1011A2988);
  v89 = v87 + v88[16];
  *(_QWORD *)v89 = 0;
  *(_BYTE *)(v89 + 8) = 1;
  sub_10004A160(v86, v87 + v88[20], &qword_1011A2980);
  sub_10004FF60(v81, &qword_1011A2980);
  sub_10004FF60(v84, &qword_1011A2988);
  sub_10004FF60(v83, &qword_1011A05F8);
  sub_10004FF60(v86, &qword_1011A2980);
  sub_10004FF60(v85, &qword_1011A2988);
  return sub_10004FF60(v82, &qword_1011A05F8);
}

uint64_t sub_1001405C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;

  v61 = type metadata accessor for BorderedProminentButtonStyle(0);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011A2928);
  v64 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011A2930);
  __chkstk_darwin(v63);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100007E8C(&qword_1011A2938);
  __chkstk_darwin(v65);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C(&qword_1011A2940);
  __chkstk_darwin(v75);
  v66 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A2948);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v74 = (uint64_t)&v60 - v18;
  v19 = static Alignment.bottom.getter(v17);
  _FrameLayout.init(width:height:alignment:)(&v83, 0, 1, 0, 1, v19, v20);
  v73 = v83;
  v72 = v84;
  v71 = v85;
  v70 = v86;
  v69 = v87;
  v68 = v88;
  v21 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for WelcomeViewModel(0) + 32));
  v22 = *v21;
  v23 = v21[1];
  v25 = *a1;
  v24 = a1[1];
  v82 = 0;
  swift_bridgeObjectRetain();
  sub_100048AAC(v25, v24);
  v26 = State.init(wrappedValue:)(&v82, &type metadata for Bool);
  v27 = v76;
  v28 = v77;
  v76 = v22;
  v77 = v23;
  v78 = v25;
  v79 = v24;
  v80 = v27;
  v81 = v28;
  BorderedProminentButtonStyle.init()(v26);
  v29 = sub_100142350();
  v30 = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v31 = v61;
  View.buttonStyle<A>(_:)(v5, &type metadata for PrivacyOnboardingProgressButton, v61, v29, v30);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v5, v31);
  swift_bridgeObjectRelease(v77);
  sub_10004BA30(v78, v79);
  swift_release(v81);
  v34 = static Color.accentColor.getter(v32, v33);
  KeyPath = swift_getKeyPath(&unk_100EAC000);
  v36 = v64;
  v37 = v67;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v9, v7, v67);
  v38 = (uint64_t *)&v9[*(int *)(v63 + 36)];
  *v38 = KeyPath;
  v38[1] = v34;
  v39 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v37);
  LOBYTE(v34) = static Edge.Set.bottom.getter(v39);
  v40 = EdgeInsets.init(_all:)(20.0);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_10004A160((uint64_t)v9, (uint64_t)v11, &qword_1011A2930);
  v47 = &v11[*(int *)(v65 + 36)];
  *v47 = v34;
  *((double *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  v48 = sub_10004FF60((uint64_t)v9, &qword_1011A2930);
  v49 = static Alignment.center.getter(v48);
  v50 = v66;
  sub_100149A34(0.0, 1, 0.0, 1, 400.0, 0, 0.0, 1, v66, 0.0, 1, 0.0, 1, v49, v51);
  sub_10004FF60((uint64_t)v11, &qword_1011A2938);
  v52 = AccessibilityIdentifier.privacyTermsAcceptButton.unsafeMutableAddressor();
  v53 = *v52;
  v54 = v52[1];
  v55 = sub_10005610C(&qword_1011A2958, &qword_1011A2940, (void (*)(void))sub_100142520);
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)(v53, v54, v75, v55);
  swift_bridgeObjectRelease(v54);
  sub_10004FF60(v50, &qword_1011A2940);
  v56 = v74;
  sub_100065228((uint64_t)v16, v74, &qword_1011A2948);
  sub_10004A160(v56, (uint64_t)v16, &qword_1011A2948);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = v73;
  *(_BYTE *)(a2 + 24) = v72;
  *(_QWORD *)(a2 + 32) = v71;
  *(_BYTE *)(a2 + 40) = v70;
  v57 = v68;
  *(_QWORD *)(a2 + 48) = v69;
  *(_QWORD *)(a2 + 56) = v57;
  *(_WORD *)(a2 + 64) = 256;
  v58 = sub_100007E8C(&qword_1011A2970);
  sub_10004A160((uint64_t)v16, a2 + *(int *)(v58 + 64), &qword_1011A2948);
  sub_10004FF60(v56, &qword_1011A2948);
  return sub_10004FF60((uint64_t)v16, &qword_1011A2948);
}

char *sub_100140B54()
{
  char *v0;
  id v1;

  type metadata accessor for JSPrivacyLinkViewModel();
  v0 = JSPrivacyLinkViewModel.__allocating_init(nativelyHandledPrivacyLinkIdentifier:)(0xD00000000000001FLL, 0x8000000100E2EAE0);
  v1 = objc_allocWithZone((Class)type metadata accessor for JSPrivacyLinkViewController());
  return JSPrivacyLinkViewController.init(privacyLinkViewModel:)(v0);
}

uint64_t sub_100140BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001426F8();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100140C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001426F8();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100140C50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001426F8();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100140C78(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for WelcomeView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - v7;
  v9 = (uint64_t)v1 + qword_1011A2608;
  sub_10005B704(a1, (uint64_t)v1 + qword_1011A2608, type metadata accessor for WelcomeViewModel);
  v10 = type metadata accessor for HostedEnvironment(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v22 = 0;
  v12 = v1;
  Published.init(initialValue:)(&v22, &type metadata for CGFloat);
  v22 = 0;
  Published.init(initialValue:)(&v22, &type metadata for CGFloat);
  *(_QWORD *)&v12[qword_1011A2610] = v11;
  sub_10005B704(v9, (uint64_t)v8, type metadata accessor for WelcomeViewModel);
  v13 = (uint64_t *)&v8[*(int *)(v3 + 20)];
  v14 = sub_100048748(&qword_1011A2998, type metadata accessor for HostedEnvironment, (uint64_t)&unk_100EABF80);
  swift_retain();
  v16 = ObservedObject.init(wrappedValue:)(v15, v10, v14);
  v18 = v17;

  *v13 = v16;
  v13[1] = v18;
  sub_10005B704((uint64_t)v8, (uint64_t)v5, type metadata accessor for WelcomeView);
  v19 = UIHostingController.init(rootView:)(v5);
  sub_10005B748(a1, type metadata accessor for WelcomeViewModel);
  sub_10005B748((uint64_t)v8, type metadata accessor for WelcomeView);
  return v19;
}

void sub_100140E4C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/WelcomeViewController.swift", 33, 2, 104, 0);
  __break(1u);
}

void sub_100140EA4(void *a1)
{
  id v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)swift_getObjectType(a1);
  v1 = v4.receiver;
  objc_msgSendSuper2(&v4, "viewDidLoad");
  v2 = objc_msgSend(v1, "navigationController", v4.receiver, v4.super_class);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setModalInPresentation:", 1);

    v1 = v3;
  }

}

id sub_100140F28()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Width;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  CGRect v25;
  CGRect v26;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v25.origin.x = v4;
    v25.origin.y = v6;
    v25.size.width = v8;
    v25.size.height = v10;
    Width = CGRectGetWidth(v25);
    v12 = 16.0;
    if (Width >= 375.0)
      v12 = 24.0;
    if (Width < 400.0)
      v13 = v12;
    else
      v13 = 44.0;
    v26.origin.x = v4;
    v26.origin.y = v6;
    v26.size.width = v8;
    v26.size.height = v10;
    v14 = round(CGRectGetHeight(v26) * 0.09);
    v15 = *(_QWORD *)&v0[qword_1011A2610];
    KeyPath = swift_getKeyPath(&unk_100EABFB8);
    v17 = swift_getKeyPath(&unk_100EABFE0);
    static Published.subscript.getter(&v24, v15, KeyPath, v17);
    swift_release(KeyPath);
    swift_release(v17);
    if (v24 != v13)
    {
      v18 = swift_getKeyPath(&unk_100EABFB8);
      v19 = swift_getKeyPath(&unk_100EABFE0);
      v24 = v13;
      swift_retain(v15);
      static Published.subscript.setter(&v24, v15, v18, v19);
    }
    v20 = swift_getKeyPath(&unk_100EAC030);
    v21 = swift_getKeyPath(&unk_100EAC058);
    static Published.subscript.getter(&v24, v15, v20, v21);
    swift_release(v20);
    result = (id)swift_release(v21);
    if (v24 != v14)
    {
      v22 = swift_getKeyPath(&unk_100EAC030);
      v23 = swift_getKeyPath(&unk_100EAC058);
      v24 = v14;
      swift_retain(v15);
      return (id)static Published.subscript.setter(&v24, v15, v22, v23);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100141144(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "viewDidLayoutSubviews");
  sub_100140F28();

}

void sub_100141198()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.WelcomeViewController", 27, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_1001411C4()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.WelcomeViewController", 27, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

double sub_1001411F0()
{
  uint64_t v0;
  double result;

  sub_10005B748(v0 + qword_1011A2608, type metadata accessor for WelcomeViewModel);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_1011A2610)).n128_u64[0];
  return result;
}

double sub_100141224(uint64_t a1)
{
  double result;

  sub_10005B748(a1 + qword_1011A2608, type metadata accessor for WelcomeViewModel);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_1011A2610)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for WelcomeViewModel(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A2878, (uint64_t)&nominal type descriptor for WelcomeViewModel);
}

uint64_t sub_100141278()
{
  return type metadata accessor for WelcomeViewController(0);
}

double sub_100141280()
{
  return sub_1001412A8((uint64_t)&unk_100EABFB8, (uint64_t)&unk_100EABFE0);
}

double sub_100141294()
{
  return sub_1001412A8((uint64_t)&unk_100EAC030, (uint64_t)&unk_100EAC058);
}

double sub_1001412A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_100141310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5MusicP33_6FB7ABC0DD91FC95256C23D50A196AC217HostedEnvironment__horizontalInsets;
  v2 = sub_100007E8C(&qword_10119DF00);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5MusicP33_6FB7ABC0DD91FC95256C23D50A196AC217HostedEnvironment__topPadding, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100141384()
{
  return type metadata accessor for HostedEnvironment(0);
}

uint64_t type metadata accessor for HostedEnvironment(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A26A0, (uint64_t)&nominal type descriptor for HostedEnvironment);
}

void sub_1001413A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100054AF8();
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

uint64_t *sub_10014140C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *v4 = *a2;
      v4[1] = v7;
      swift_retain(v7);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v9 = a2[3];
    v4[2] = a2[2];
    v4[3] = v9;
    v10 = (int *)type metadata accessor for WelcomeViewModel(0);
    v11 = v10[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for AttributedString(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v16 = v10[7];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v10[8];
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = *(int *)(a3 + 20);
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v8 = v26[1];
    *v25 = *v26;
    v25[1] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain(v8);
  return v4;
}

double sub_100141538(_QWORD *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  double result;

  if (*a1)
    swift_release(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  v4 = (int *)type metadata accessor for WelcomeViewModel(0);
  v5 = (char *)a1 + v4[6];
  v6 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v4[8] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1001415D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain(v6);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = (int *)type metadata accessor for WelcomeViewModel(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for AttributedString(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = v8[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = v8[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = *(int *)(a3 + 20);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v25);
  return a1;
}

_QWORD *sub_1001416D8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      swift_retain(v9);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v7 = a2[1];
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v8);
LABEL_8:
  a1[2] = a2[2];
  v10 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = (int *)type metadata accessor for WelcomeViewModel(0);
  v12 = v11[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v17[1];
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v19);
  v20 = v11[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  *v21 = *v22;
  v23 = v21[1];
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v23);
  v24 = *(int *)(a3 + 20);
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  *v25 = *v26;
  v27 = v26[1];
  v28 = v25[1];
  v25[1] = v27;
  swift_retain(v27);
  swift_release(v28);
  return a1;
}

uint64_t sub_10014183C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = (int *)type metadata accessor for WelcomeViewModel(0);
  v8 = v7[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1001418F4(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v7 = a2[1];
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  swift_release(v8);
LABEL_8:
  v10 = a2[3];
  v11 = a1[3];
  a1[2] = a2[2];
  a1[3] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = (int *)type metadata accessor for WelcomeViewModel(0);
  v13 = v12[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v12[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = v12[8];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = *(int *)(a3 + 20);
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_release(v34);
  return a1;
}

uint64_t sub_100141A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100141A18);
}

uint64_t sub_100141A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for WelcomeViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100141A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100141AA4);
}

uint64_t sub_100141AA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for WelcomeViewModel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WelcomeView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A27E8, (uint64_t)&nominal type descriptor for WelcomeView);
}

uint64_t sub_100141B34(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for WelcomeViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EABEE0;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100141BA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *v4 = *a2;
      v4[1] = v7;
      swift_retain(v7);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v9 = a2[3];
    v4[2] = a2[2];
    v4[3] = v9;
    v10 = a3[6];
    v11 = (char *)v4 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for AttributedString(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v9);
    v14(v11, v12, v13);
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)v4 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)v4 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v22);
  }
  return v4;
}

uint64_t sub_100141CA0(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;

  if (*a1)
    swift_release(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
}

_QWORD *sub_100141D20(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain(v6);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for AttributedString(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)((char *)a1 + v14);
  v19 = (_QWORD *)((char *)a2 + v14);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v20);
  return a1;
}

_QWORD *sub_100141DF0(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      swift_retain(v9);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v7 = a2[1];
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v8);
LABEL_8:
  a1[2] = a2[2];
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  return a1;
}

uint64_t sub_100141F1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for AttributedString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

_QWORD *sub_100141FB8(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      v9 = a2[1];
      *a1 = v6;
      a1[1] = v9;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v7 = a2[1];
  v8 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  swift_release(v8);
LABEL_8:
  v10 = a2[3];
  v11 = a1[3];
  a1[2] = a2[2];
  a1[3] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for AttributedString(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  v27 = v23[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease(v27);
  return a1;
}

uint64_t sub_1001420A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001420B4);
}

uint64_t sub_1001420B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100142130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014213C);
}

uint64_t sub_10014213C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AttributedString(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001421B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100EABF18;
  v4[1] = &unk_100EABEE0;
  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100EABEE0;
    v4[4] = &unk_100EABEE0;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100142230(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F96BE4, 1);
}

uint64_t sub_100142240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for HostedEnvironment(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10014227C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10013FDBC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100142284()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A28F8;
  if (!qword_1011A28F8)
  {
    v1 = sub_100044B54(&qword_1011A2900);
    sub_100049F28(&qword_1011A2908, &qword_1011A2910, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A28F8);
  }
  return result;
}

double sub_100142308@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100142394(a1, (uint64_t)&unk_100EABFB8, (uint64_t)&unk_100EABFE0, a2);
}

uint64_t sub_10014232C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10014240C(a1, a2, a3, a4, (uint64_t)&unk_100EABFB8, (uint64_t)&unk_100EABFE0);
}

unint64_t sub_100142350()
{
  unint64_t result;

  result = qword_1011A2950;
  if (!qword_1011A2950)
  {
    result = swift_getWitnessTable(&unk_100EC3B40, &type metadata for PrivacyOnboardingProgressButton);
    atomic_store(result, (unint64_t *)&qword_1011A2950);
  }
  return result;
}

double sub_100142394@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, double *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  double v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  result = v10;
  *a4 = v10;
  return result;
}

uint64_t sub_10014240C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_100142480@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001424A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001424D0(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_1001424F8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_100142520()
{
  return sub_10005610C(&qword_1011A2960, &qword_1011A2938, (void (*)(void))sub_100142544);
}

unint64_t sub_100142544()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011A2968;
  if (!qword_1011A2968)
  {
    v1 = sub_100044B54(&qword_1011A2930);
    v2[0] = &type metadata for PrivacyOnboardingProgressButton;
    v2[1] = type metadata accessor for BorderedProminentButtonStyle(255);
    v2[2] = sub_100142350();
    v2[3] = sub_100048748(&qword_1011A0D00, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2968);
  }
  return result;
}

double sub_100142624@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_100142394(a1, (uint64_t)&unk_100EAC030, (uint64_t)&unk_100EAC058, a2);
}

uint64_t sub_100142648(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10014240C(a1, a2, a3, a4, (uint64_t)&unk_100EAC030, (uint64_t)&unk_100EAC058);
}

ValueMetadata *type metadata accessor for WelcomeView.PrivacyLinkView()
{
  return &type metadata for WelcomeView.PrivacyLinkView;
}

uint64_t sub_100142684()
{
  return sub_100049F28(&qword_1011A29A0, &qword_1011A29A8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

unint64_t sub_1001426B4()
{
  unint64_t result;

  result = qword_1011A29B0;
  if (!qword_1011A29B0)
  {
    result = swift_getWitnessTable("!n ", &type metadata for WelcomeView.PrivacyLinkView);
    atomic_store(result, (unint64_t *)&qword_1011A29B0);
  }
  return result;
}

unint64_t sub_1001426F8()
{
  unint64_t result;

  result = qword_1011A29B8;
  if (!qword_1011A29B8)
  {
    result = swift_getWitnessTable(&unk_100EAC108, &type metadata for WelcomeView.PrivacyLinkView);
    atomic_store(result, (unint64_t *)&qword_1011A29B8);
  }
  return result;
}

uint64_t sub_10014273C(uint64_t a1)
{
  type metadata accessor for Array(0);
  return a1;
}

uint64_t sub_100142764(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  return sub_1001428BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1010B3320, (uint64_t)&unk_1011A2A68);
}

void sub_10014279C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_1010B3028, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_1001483E4, v9);
  swift_release(v6);
  swift_release(v9);

}

uint64_t sub_10014284C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  return sub_1001428BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1010B3348, (uint64_t)&unk_1011A2A70);
}

uint64_t sub_100142884(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  return sub_1001428BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1010B3370, (uint64_t)&unk_1011A2A78);
}

uint64_t sub_1001428BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, __n128);
  _BYTE v37[72];

  v35 = a4;
  v36 = a3;
  v33 = a10;
  v34 = a11;
  v13 = type metadata accessor for PlaybackIntentDescriptor(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = UIView.noticePresenter.getter();
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
  sub_1001493F0(a6, (uint64_t)v16);
  sub_100064AC8(a9, (uint64_t)v37);
  type metadata accessor for MainActor(0);
  sub_100149434(a8);
  v22 = swift_retain();
  v23 = static MainActor.shared.getter(v22);
  v24 = *(unsigned __int8 *)(v14 + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(v33, v28 + 72, v24 | 7);
  *(_QWORD *)(v29 + 16) = v23;
  *(_QWORD *)(v29 + 24) = &protocol witness table for MainActor;
  sub_100149448((uint64_t)v16, v29 + v25);
  *(_QWORD *)(v29 + v26) = a8;
  *(_QWORD *)(v29 + v27) = v20;
  sub_100064EF0((uint64_t)v37, v29 + v28);
  sub_100166D14((uint64_t)v19, v34, v29);
  swift_release();
  v30 = swift_release();
  return v36(1, v30);
}

uint64_t sub_100142A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for Notice(0);
  v7[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v7[7] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v7[8] = v11;
  v7[9] = v12;
  return swift_task_switch(sub_100142B14, v11, v12);
}

uint64_t sub_100142B14()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t **v3;

  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v1 = (void *)qword_10124C798;
  v0[10] = qword_10124C798;
  v1;
  v2 = PlaybackIntentDescriptor.intent.getter();
  v0[11] = v2;
  v3 = (uint64_t **)swift_task_alloc(dword_1011D869C);
  v0[12] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_100142BB4;
  return PlaybackController.insert(_:location:)(v2, v0[3]);
}

uint64_t sub_100142BB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 64);
    v5 = *(_QWORD *)(v2 + 72);
    v6 = sub_100142C98;
  }
  else
  {
    v7 = *(void **)(v2 + 80);

    v4 = *(_QWORD *)(v2 + 64);
    v5 = *(_QWORD *)(v2 + 72);
    v6 = sub_100142C24;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100142C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 56));
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 32);
    Player.InsertCommand.Location.notice.getter(*(_QWORD *)(v0 + 24));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v3 + 192))(v2, 0);
    sub_10005B748(v2, type metadata accessor for Notice);
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100142C98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(void **)(v0 + 80);
  v2 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 56));

  v4 = sub_10037C1A0();
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v4, 1, (id)0xF, (void **)1, 0, 0);

  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100142D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSString v21;
  void *v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  _QWORD aBlock[7];

  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(a1);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x4C206F7420646441, 0xEE00797261726269);
  static Locale.current.getter(v17);
  String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v13, 0, 0, 256);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1010B2FB0, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = a3;
  *((_QWORD *)v20 + 3) = a4;
  *((_QWORD *)v20 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v10, a3);
  swift_retain();
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1001462A0;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014279C;
  aBlock[3] = &unk_1010B2FC8;
  v22 = _Block_copy(aBlock);
  v23 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v21, v22);

  _Block_release(v22);
  swift_release();
  if (qword_10119B9F0 != -1)
    swift_once(&qword_10119B9F0, sub_1001481C0);
  v24 = (id)qword_1011A29C0;
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v25, v24);

  if (v26)
  {
    v27 = objc_msgSend(v26, "imageWithTintColor:renderingMode:", *UIColor.MusicTint.normal.unsafeMutableAddressor(), 1);

  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v23, "setImage:", v27);

  if (qword_10119B9F8 != -1)
    swift_once(&qword_10119B9F8, sub_1001481FC);
  objc_msgSend(v23, "setBackgroundColor:", qword_1011A29C8);
  return v23;
}

id sub_100143068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];
  _BYTE v37[80];

  v34 = a5;
  v35 = a6;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(a1);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
  static Locale.current.getter(v19);
  String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, 0, v15, 0, 0, 256);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a4);
  sub_100064AC8(a3, (uint64_t)v37);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject(&unk_1010B3078, v23 + 72, v20 | 7);
  v25 = v34;
  *((_QWORD *)v24 + 2) = a4;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v35;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v21], v12, a4);
  *(_QWORD *)&v24[v22] = a2;
  sub_100064EF0((uint64_t)v37, (uint64_t)&v24[v23]);
  swift_retain();
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100148630;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014279C;
  aBlock[3] = &unk_1010B3090;
  v27 = _Block_copy(aBlock);
  v28 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v26, v27);

  _Block_release(v27);
  swift_release();
  if (qword_10119B9F0 != -1)
    swift_once(&qword_10119B9F0, sub_1001481C0);
  v29 = (id)qword_1011A29C0;
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v30, v29);

  objc_msgSend(v28, "setImage:", v31);
  v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v28, "setBackgroundColor:", v32);

  return v28;
}

id sub_1001433B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  NSString v60;
  void *v61;
  id v62;
  id v63;
  NSString v64;
  id v65;
  id v66;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD aBlock[6];
  _BYTE v88[56];

  v86 = a6;
  v82 = a5;
  v81 = a3;
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v80 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v11);
  v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v69 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C((uint64_t *)&unk_1011B8E10);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v71 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v70 = (char *)&v68 - v16;
  v83 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v17);
  v79 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v18;
  __chkstk_darwin(v19);
  v85 = (char *)&v68 - v20;
  v21 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011A2A10);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v68 - v30;
  static MusicLibraryAction<>.remove.getter(v32);
  v84 = a2;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v24, a4, v21, v86, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v28, v31, v25);
  LODWORD(v24) = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v28, v25);
  v33 = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
  v34 = *(void (**)(char *, uint64_t))(v26 + 8);
  v35 = v83;
  v34(v28, v25);
  v36 = v31;
  v37 = v85;
  v34(v36, v25);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v76 = a1;
  v39 = v38(v37, a1, a4);
  if ((_DWORD)v24 == v33)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, a4);
    v40 = v86;
    v41 = v84;
  }
  else
  {
    v42 = v69;
    static MusicLibraryAction<>.removeDownload.getter(v39);
    v68 = v38;
    v43 = v70;
    v44 = v74;
    v45 = v86;
    v41 = v84;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v37, v42, a4, v74, v86, &protocol witness table for MusicLibrary.RemoveDownloadAction);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v44);
    v46 = v73;
    v47 = v71;
    v48 = v75;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v71, v43, v75);
    LODWORD(v44) = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v47, v48);
    v49 = *(void (**)(char *, uint64_t))(v46 + 8);
    v49(v47, v48);
    v50 = v43;
    v38 = v68;
    v49(v50, v48);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v85, a4);
    v40 = v45;
    if ((_DWORD)v44 != v33)
      return 0;
  }
  v51 = v78;
  v52 = String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
  v53 = v80;
  static Locale.current.getter(v52);
  String.init(localized:table:bundle:locale:comment:)(v51, 0, 0, 0, v53, 0, 0, 256);
  sub_100064AC8(v81, (uint64_t)v88);
  v54 = v79;
  v38(v79, v76, a4);
  v55 = *(unsigned __int8 *)(v35 + 80);
  v56 = (v55 + 112) & ~v55;
  v57 = (v77 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = (char *)swift_allocObject(&unk_1010B32A8, v57 + 8, v55 | 7);
  v59 = v82;
  *((_QWORD *)v58 + 2) = a4;
  *((_QWORD *)v58 + 3) = v59;
  *((_QWORD *)v58 + 4) = v40;
  sub_100064EF0((uint64_t)v88, (uint64_t)(v58 + 40));
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v58[v56], v54, a4);
  *(_QWORD *)&v58[v57] = v41;
  swift_retain();
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1001491E8;
  aBlock[5] = v58;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014279C;
  aBlock[3] = &unk_1010B32C0;
  v61 = _Block_copy(aBlock);
  v62 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v60, v61);

  _Block_release(v61);
  swift_release();
  if (qword_10119B9F0 != -1)
    swift_once(&qword_10119B9F0, sub_1001481C0);
  v63 = (id)qword_1011A29C0;
  v64 = String._bridgeToObjectiveC()();
  v65 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v64, v63);

  objc_msgSend(v62, "setImage:", v65);
  v66 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  objc_msgSend(v62, "setBackgroundColor:", v66);

  return v62;
}

double sub_100143A84(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, __n128);

  v29 = a8;
  v30 = a4;
  v31 = a3;
  v11 = *(_QWORD *)(a7 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(a1);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = UIView.noticePresenter.getter();
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a6, a7);
  type metadata accessor for MainActor(0);
  swift_retain();
  v19 = swift_retain();
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v21 + 56) & ~v21;
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject(&unk_1010B3050, v23 + 8, v21 | 7);
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = &protocol witness table for MainActor;
  v25 = v29;
  *((_QWORD *)v24 + 4) = a7;
  *((_QWORD *)v24 + 5) = v25;
  *((_QWORD *)v24 + 6) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v24[v22], v13, a7);
  *(_QWORD *)&v24[v23] = v17;
  sub_100166D14((uint64_t)v16, (uint64_t)&unk_1011A29F0, (uint64_t)v24);
  v26 = swift_release();
  v31(1, v26);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100143C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = type metadata accessor for Logger(0);
  v8[10] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[11] = v10;
  v8[12] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  v8[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v8[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice.Variant(0);
  v8[15] = v13;
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Notice(0);
  v8[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v8[18] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v8[19] = v17;
  v8[20] = v18;
  return swift_task_switch(sub_100143D50, v17, v18);
}

uint64_t sub_100143D50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t WitnessTable;

  v1 = v0[8];
  v2 = v0[6];
  v3 = sub_100148540(v1, v1);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = swift_allocObject(v3, ((*(unsigned __int8 *)(v4 + 80) + (unint64_t)*(unsigned int *)(v3 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72), *(unsigned __int8 *)(v4 + 80) | (unint64_t)*(unsigned __int16 *)(v3 + 52));
  v6 = static Array._adoptStorage(_:count:)(v5, 1);
  v0[21] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v2, v1);
  v8 = type metadata accessor for Array(0);
  v0[2] = v6;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  v0[22] = v9;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  *v9 = v0;
  v9[1] = sub_100143E40;
  return MusicLibrary.add<A, B>(_:)(v0 + 2, v8, v0[8], WitnessTable, v0[9]);
}

uint64_t sub_100143E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *v2;
  v6 = *(_QWORD *)(*v2 + 168);
  v5 = *(_QWORD *)(*v2 + 176);
  *(_QWORD *)(*v2 + 184) = v1;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v6);
  if (v1)
  {
    v7 = *(_QWORD *)(v4 + 152);
    v8 = *(_QWORD *)(v4 + 160);
    v9 = sub_100143F88;
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    v7 = *(_QWORD *)(v4 + 152);
    v8 = *(_QWORD *)(v4 + 160);
    v9 = sub_100143EC0;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100143EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 144));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v2 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 56);
    swift_storeEnumTagMultiPayload(v3, *(_QWORD *)(v0 + 120), 7);
    static Notice.variant(_:)(v3);
    sub_10005B748(v3, type metadata accessor for Notice.Variant);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 192))(v2, 0);
    sub_10005B748(v2, type metadata accessor for Notice);
  }
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100143F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 144));
  v5 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 80);
    v35 = *(_QWORD *)(v0 + 96);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v36 = v12;
    *(_QWORD *)(v0 + 24) = v9;
    swift_errorRetain(v9);
    v13 = sub_100007E8C(&qword_1011A14B0);
    v14 = String.init<A>(describing:)(v0 + 24, v13);
    v16 = v15;
    *(_QWORD *)(v0 + 32) = sub_100322200(v14, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to add item=%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v35, v34);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 80);
    swift_errorRelease(v17);
    swift_errorRelease(v17);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 56);
  v22 = *(_QWORD *)(v0 + 184);
  if (v21)
  {
    v24 = *(_QWORD *)(v0 + 120);
    v23 = *(_QWORD **)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 112);
    v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x8000000100E2EB40);
    static Locale.current.getter(v27);
    *v23 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, 0, v26, 0, 0, 256);
    v23[1] = v28;
    swift_storeEnumTagMultiPayload(v23, v24, 2);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)v21 + 184))(v23, 1);
    swift_errorRelease(v22);
    sub_10005B748((uint64_t)v23, type metadata accessor for Notice.Variant);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 184));
  }
  v29 = *(_QWORD *)(v0 + 128);
  v31 = *(_QWORD *)(v0 + 104);
  v30 = *(_QWORD *)(v0 + 112);
  v32 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014425C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, __n128);
  _BYTE v39[72];

  v33 = a6;
  v37 = a4;
  v38 = a3;
  v35 = a9;
  v36 = a10;
  v14 = *(_QWORD *)(a8 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(a1);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, a8);
  sub_100064AC8(a7, (uint64_t)v39);
  type metadata accessor for MainActor(0);
  swift_retain();
  v34 = a2;
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v14 + 80);
  v24 = (v23 + 56) & ~v23;
  v25 = (v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 79) & 0xFFFFFFFFFFFFFFF8;
  v28 = (char *)swift_allocObject(&unk_1010B30C8, v27 + 8, v23 | 7);
  *((_QWORD *)v28 + 2) = v22;
  *((_QWORD *)v28 + 3) = &protocol witness table for MainActor;
  v29 = v35;
  *((_QWORD *)v28 + 4) = a8;
  *((_QWORD *)v28 + 5) = v29;
  *((_QWORD *)v28 + 6) = v36;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v28[v24], v16, a8);
  *(_QWORD *)&v28[v25] = v33;
  sub_100064EF0((uint64_t)v39, (uint64_t)&v28[v26]);
  *(_QWORD *)&v28[v27] = v34;
  sub_100166D14((uint64_t)v19, (uint64_t)&unk_1011A2A00, (uint64_t)v28);
  v30 = swift_release();
  return v38(1, v30);
}

uint64_t sub_100144444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v8[52] = v22;
  v8[53] = v23;
  v8[50] = a7;
  v8[51] = a8;
  v8[48] = a5;
  v8[49] = a6;
  v8[47] = a4;
  v10 = type metadata accessor for Logger(0);
  v8[54] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[55] = v11;
  v8[56] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v8[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v8[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Notice.Variant(0);
  v8[59] = v14;
  v8[60] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  v8[61] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a8 - 8);
  v8[62] = v16;
  v8[63] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  v8[64] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  v8[65] = v19;
  v8[66] = v20;
  return swift_task_switch(sub_100144598, v19, v20);
}

uint64_t sub_100144598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 416);
  v16 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 496) + 16))(v1, *(_QWORD *)(v0 + 376), v4);
  sub_100064AC8(v5, v0 + 240);
  v7 = type metadata accessor for AlertPresenter();
  v8 = swift_allocObject(v7, 88, 7);
  sub_100064EF0(v0 + 240, v8 + 16);
  v18 = v7;
  v19 = &off_1010C20D0;
  *(_QWORD *)&v17 = v8;
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
  swift_retain(v6);
  Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v1, v6, &v17, v2, v4, v3, v16, (unint64_t (**)())(v0 + 312));
  static Actions.Download.action(context:)(v0 + 312, v0 + 16);
  swift_release(*(_QWORD *)(v0 + 320));
  swift_release(*(_QWORD *)(v0 + 336));
  swift_release(*(_QWORD *)(v0 + 352));
  v10 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 208) = v10;
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 112);
  v11 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 144) = v11;
  v12 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 176) = v12;
  v13 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  *(_QWORD *)(v0 + 536) = v13;
  v14 = sub_100007E8C(&qword_1011A2A08);
  *v13 = v0;
  v13[1] = sub_100144734;
  return Action.execute(bypassSupportedStatusCheck:)(v14, 0, v14);
}

uint64_t sub_100144734()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v3);
  sub_100148840(v2 + 2);
  if (v0)
    v4 = sub_100144830;
  else
    v4 = sub_1001447B4;
  return swift_task_switch(v4, v2[65], v2[66]);
}

uint64_t sub_1001447B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 512));
  v1 = *(_QWORD *)(v0 + 480);
  v2 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 504));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100144830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 512));
  v5 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 544);
    v35 = *(_QWORD *)(v0 + 440);
    v36 = *(_QWORD *)(v0 + 432);
    v37 = *(_QWORD *)(v0 + 448);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v38 = v11;
    *(_DWORD *)v10 = 136315138;
    *(_QWORD *)(v0 + 360) = v9;
    swift_errorRetain(v9);
    v12 = sub_100007E8C(&qword_1011A14B0);
    v13 = String.init<A>(describing:)(v0 + 360, v12);
    v15 = v14;
    *(_QWORD *)(v0 + 368) = sub_100322200(v13, v14, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 368, v0 + 376);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to download item=%s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v36);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 544);
    v18 = *(_QWORD *)(v0 + 440);
    v17 = *(_QWORD *)(v0 + 448);
    v19 = *(_QWORD *)(v0 + 432);
    swift_errorRelease(v16);
    swift_errorRelease(v16);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = UIView.noticePresenter.getter();
  v21 = *(_QWORD *)(v0 + 544);
  if (v20)
  {
    v22 = v20;
    v24 = *(_QWORD *)(v0 + 472);
    v23 = *(_QWORD **)(v0 + 480);
    v26 = *(_QWORD *)(v0 + 456);
    v25 = *(_QWORD *)(v0 + 464);
    v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E2EB70);
    static Locale.current.getter(v27);
    *v23 = String.init(localized:table:bundle:locale:comment:)(v25, 0, 0, 0, v26, 0, 0, 256);
    v23[1] = v28;
    swift_storeEnumTagMultiPayload(v23, v24, 2);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)v22 + 184))(v23, 1);
    swift_release(v22);
    swift_errorRelease(v21);
    sub_10005B748((uint64_t)v23, type metadata accessor for Notice.Variant);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 544));
  }
  v29 = *(_QWORD *)(v0 + 480);
  v30 = *(_QWORD *)(v0 + 488);
  v32 = *(_QWORD *)(v0 + 456);
  v31 = *(_QWORD *)(v0 + 464);
  v33 = *(_QWORD *)(v0 + 448);
  swift_task_dealloc(*(_QWORD *)(v0 + 504));
  swift_task_dealloc(v30);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100144B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[72];

  v35 = a10;
  v36 = a3;
  v33 = a7;
  v34 = a9;
  v14 = *(_QWORD *)(a8 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(a1);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_100064AC8(a5, (uint64_t)v37);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a6, a8);
  type metadata accessor for MainActor(0);
  swift_retain();
  v21 = a4;
  v22 = swift_retain();
  v23 = static MainActor.shared.getter(v22);
  v24 = *(unsigned __int8 *)(v14 + 80);
  v25 = (v24 + 128) & ~v24;
  v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (char *)swift_allocObject(&unk_1010B32F8, v27 + 16, v24 | 7);
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = &protocol witness table for MainActor;
  v29 = v34;
  *((_QWORD *)v28 + 4) = a8;
  *((_QWORD *)v28 + 5) = v29;
  *((_QWORD *)v28 + 6) = v35;
  sub_100064EF0((uint64_t)v37, (uint64_t)(v28 + 56));
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v28[v25], v16, a8);
  *(_QWORD *)&v28[v26] = v33;
  v30 = &v28[v27];
  *(_QWORD *)v30 = v36;
  *((_QWORD *)v30 + 1) = v21;
  sub_100166D14((uint64_t)v19, (uint64_t)&unk_1011A2A58, (uint64_t)v28);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100144D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 72) = v15;
  *(_OWORD *)(v8 + 56) = v14;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 80) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100144D88, v11, v12);
}

uint64_t sub_100144D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _BOOL8 v11;
  id v12;
  void (*v14)(uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v14 = *(void (**)(uint64_t))(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 80));
  v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v8 = objc_msgSend(v7, "traitCollection");

  v9 = objc_msgSend(v8, "horizontalSizeClass");
  v11 = *(unsigned __int8 *)(v6 + 48) == 255 && v9 != (id)1;
  sub_10004A07C(0, &qword_1011A2A18, UIAlertController_ptr);
  v12 = sub_10037A540(v5, v4, v11, v3, v2, v1);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v12, 1, (id)0xF, (void **)1, 0, 0);

  v14(1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100144EC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t);
  int v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  Class isa;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int v90;
  id v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  __int128 v114[3];
  _QWORD v115[5];
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v113 = a3;
  v111 = a4;
  v112 = a2;
  v103 = type metadata accessor for MusicLibrary.DownloadAction(0);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v98 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C((uint64_t *)&unk_1011B8DB0);
  v102 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v100 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v99 = (char *)&v95 - v8;
  v109 = type metadata accessor for MusicLibrary.AddAction(0);
  v106 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v108 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011A29D0);
  v107 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v97 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v96 = (char *)&v95 - v12;
  __chkstk_darwin(v13);
  v105 = (char *)&v95 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v95 - v16;
  v18 = type metadata accessor for Playlist.EditableComponents(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v22);
  v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  Playlist.Entry.internalItem.getter(v30);
  Playlist.Entry.InternalItem.musicItem.getter(v115);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v31 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
  v32 = sub_100007E8C(&qword_1011A29D8);
  if (swift_dynamicCast(v114, v115, v31, v32, 6))
  {
    sub_100145714(v114, &v116);
    *(_QWORD *)&v114[0] = _swiftEmptyArrayStorage;
    v33 = sub_10014572C(v29, (uint64_t)v112, v113, v111);
    v34 = v33;
    if (v33)
    {
      v35 = v33;
      Playlist.editableComponents.getter(v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v24, 1, v18) == 1)
      {
        sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011C65F0);
      }
      else
      {
        static Playlist.EditableComponents.tracklist.getter();
        v37 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
        LODWORD(v112) = dispatch thunk of SetAlgebra.isSuperset(of:)(v21, v18, v37);
        v38 = *(void (**)(char *, uint64_t))(v19 + 8);
        v38(v21, v18);
        v38(v24, v18);
        if ((v112 & 1) != 0)
        {
          v39 = v35;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
          v41 = *(_QWORD *)((*(_QWORD *)&v114[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v40 = *(_QWORD *)((*(_QWORD *)&v114[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v41 >= v40 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
          v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
          specialized Array._endMutation()(v42);

          goto LABEL_18;
        }
      }

    }
    v112 = v34;
    v43 = v117;
    v44 = v119;
    v45 = sub_100007E68(&v116, v117);
    v46 = v108;
    static MusicLibraryAction<>.add.getter(v45);
    v47 = v45;
    v48 = v43;
    v49 = v109;
    v50 = v113;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v47, v46, v48, v109, v44, &protocol witness table for MusicLibrary.AddAction);
    v106 = *(_QWORD *)(v106 + 8);
    ((void (*)(char *, uint64_t))v106)(v46, v49);
    v51 = v107;
    v52 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    v53 = v105;
    v54 = v110;
    v52(v105, v17, v110);
    v55 = *(uint64_t (**)(char *, uint64_t))(v51 + 88);
    LODWORD(v44) = v55(v53, v54);
    v56 = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
    v57 = *(void (**)(char *, uint64_t))(v51 + 8);
    v57(v53, v54);
    v57(v17, v54);
    v58 = v117;
    if ((_DWORD)v44 == v56)
    {
      v59 = v118;
      v60 = sub_100007E68(&v116, v117);
      v61 = sub_100142D18((uint64_t)v60, v50, v58, v59);
    }
    else
    {
      v62 = v119;
      v63 = sub_100007E68(&v116, v117);
      v64 = v98;
      static MusicLibraryAction<>.download.getter(v63);
      v65 = v99;
      v66 = v58;
      v67 = v103;
      MusicLibrary.supportedStatus<A, B>(for:action:)(v63, v64, v66, v103, v62, &protocol witness table for MusicLibrary.DownloadAction);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v64, v67);
      v68 = v102;
      v69 = v100;
      v70 = v104;
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v65, v104);
      LODWORD(v63) = (*(uint64_t (**)(char *, uint64_t))(v68 + 88))(v69, v70);
      v71 = *(void (**)(char *, uint64_t))(v68 + 8);
      v71(v69, v70);
      v71(v65, v70);
      v72 = v117;
      if ((_DWORD)v63 != v56)
      {
        v82 = v119;
        v83 = sub_100007E68(&v116, v117);
        v84 = v108;
        static MusicLibraryAction<>.add.getter(v83);
        v85 = v96;
        v86 = v72;
        v87 = v109;
        MusicLibrary.supportedStatus<A, B>(for:action:)(v83, v84, v86, v109, v82, &protocol witness table for MusicLibrary.AddAction);
        ((void (*)(char *, uint64_t))v106)(v84, v87);
        v88 = v97;
        v89 = v110;
        v52(v97, v85, v110);
        v90 = v55(v88, v89);
        v57(v88, v89);
        v57(v85, v89);
        v34 = v112;
        if (v112 && v90 != v56)
        {
          v91 = v112;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
          v93 = *(_QWORD *)((*(_QWORD *)&v114[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v92 = *(_QWORD *)((*(_QWORD *)&v114[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v93 >= v92 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v92 > 1, v93 + 1, 1);
          v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v93, v91);
          specialized Array._endMutation()(v94);
        }
        goto LABEL_18;
      }
      v74 = v118;
      v73 = v119;
      v75 = sub_100007E68(&v116, v117);
      v61 = sub_100143068((uint64_t)v75, v50, v111, v72, v74, v73);
    }
    v76 = v61;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
    v78 = *(_QWORD *)((*(_QWORD *)&v114[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v77 = *(_QWORD *)((*(_QWORD *)&v114[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v78 >= v77 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1);
    v79 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v78, v76);
    specialized Array._endMutation()(v79);
    v34 = v112;
LABEL_18:
    sub_10004A07C(0, &qword_1011B8DC0, UIContextualAction_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v36 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

    _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v116);
    return v36;
  }
  memset(v114, 0, sizeof(v114));
  sub_10004FF60((uint64_t)v114, &qword_1011A29E0);
  return 0;
}

_OWORD *sub_100145714(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

id sub_10014572C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  NSString v75;
  void *v76;
  id v77;
  NSString v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD aBlock[6];
  __int128 v110[3];
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v101 = a4;
  v103 = a3;
  v106 = a2;
  v98 = type metadata accessor for Playlist.Entry(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v95 = v5;
  v96 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v93 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v92 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for Playlist.Variant(0);
  v104 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v88 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v99);
  v105 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v12);
  v89 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v86 - v15;
  __chkstk_darwin(v17);
  v107 = (uint64_t)&v86 - v18;
  v108 = type metadata accessor for Playlist(0);
  v102 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v91 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v86 - v21;
  v23 = type metadata accessor for Playlist.EditableComponents(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C((uint64_t *)&unk_1011C65F0);
  __chkstk_darwin(v27);
  v29 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = a1;
  Playlist.Entry.internalItem.getter(v34);
  Playlist.Entry.InternalItem.musicItem.getter(&v111);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  v35 = sub_100007E8C((uint64_t *)&unk_1011B2DD0);
  v36 = sub_100007E8C(&qword_1011A29D8);
  if (swift_dynamicCast(v110, &v111, v35, v36, 6))
  {
    v37 = sub_100145714(v110, &v112);
    v38 = v106;
    Playlist.editableComponents.getter(v37);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23) == 1)
    {
      sub_10004FF60((uint64_t)v29, (uint64_t *)&unk_1011C65F0);
      v39 = v102;
      v40 = v108;
      v87 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 16);
      v41 = v87(v22, v38, v108);
      v42 = v107;
    }
    else
    {
      static Playlist.EditableComponents.tracklist.getter();
      v44 = sub_100048748((unint64_t *)&unk_1011AD750, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
      v45 = dispatch thunk of SetAlgebra.isSuperset(of:)(v26, v23, v44);
      v46 = *(void (**)(char *, uint64_t))(v24 + 8);
      v46(v26, v23);
      v46(v29, v23);
      v39 = v102;
      v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 16);
      v40 = v108;
      v41 = v47(v22, v38, v108);
      v42 = v107;
      if ((v45 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v40);
        v48 = v101;
LABEL_15:
        v60 = v92;
        v61 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
        v62 = v93;
        static Locale.current.getter(v61);
        v107 = String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, 0, v62, 0, 0, 256);
        v106 = v63;
        sub_1001488FC((uint64_t)&v112, (uint64_t)&v111);
        v64 = v91;
        v47(v91, v38, v40);
        v65 = v39;
        v66 = v97;
        v67 = v96;
        v68 = v98;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v94, v98);
        sub_100064AC8(v48, (uint64_t)v110);
        v69 = *(unsigned __int8 *)(v65 + 80);
        v70 = (v69 + 72) & ~v69;
        v71 = *(unsigned __int8 *)(v66 + 80);
        v72 = (v90 + v71 + v70) & ~v71;
        v73 = (v95 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
        v74 = swift_allocObject(&unk_1010B30F0, v73 + 72, v69 | v71 | 7);
        sub_100145714(&v111, (_OWORD *)(v74 + 16));
        *(_QWORD *)(v74 + 64) = v103;
        (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v74 + v70, v64, v108);
        (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v74 + v72, v67, v68);
        sub_100064EF0((uint64_t)v110, v74 + v73);
        swift_retain();
        v75 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        aBlock[4] = sub_100148A40;
        aBlock[5] = v74;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10014279C;
        aBlock[3] = &unk_1010B3108;
        v76 = _Block_copy(aBlock);
        v43 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v75, v76);

        _Block_release(v76);
        swift_release();
        if (qword_10119B9F0 != -1)
          swift_once(&qword_10119B9F0, sub_1001481C0);
        v77 = (id)qword_1011A29C0;
        v78 = String._bridgeToObjectiveC()();
        v79 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v78, v77);

        objc_msgSend(v43, "setImage:", v79);
        v80 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
        objc_msgSend(v43, "setBackgroundColor:", v80);

        goto LABEL_19;
      }
      v87 = v47;
    }
    Playlist.variant.getter(v41);
    v49 = v104;
    v50 = v100;
    (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v16, enum case for Playlist.Variant.favoriteSongs(_:), v100);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v16, 0, 1, v50);
    v51 = v105;
    v52 = v105 + *(int *)(v99 + 48);
    sub_1001488B4(v42, v105);
    sub_1001488B4((uint64_t)v16, v52);
    v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v53(v51, 1, v50) == 1)
    {
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011CEF20);
      v51 = v105;
      sub_10004FF60(v42, (uint64_t *)&unk_1011CEF20);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v40);
      v54 = v53(v52, 1, v50);
      v48 = v101;
      if (v54 == 1)
      {
        sub_10004FF60(v51, (uint64_t *)&unk_1011CEF20);
        v47 = v87;
        goto LABEL_15;
      }
    }
    else
    {
      v55 = v89;
      sub_1001488B4(v51, v89);
      if (v53(v52, 1, v50) != 1)
      {
        v56 = v104;
        v57 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v88, v52, v50);
        v58 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        LODWORD(v102) = dispatch thunk of static Equatable.== infix(_:_:)(v55, v57, v50, v58);
        v59 = *(void (**)(char *, uint64_t))(v56 + 8);
        v59(v57, v50);
        sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011CEF20);
        sub_10004FF60(v107, (uint64_t *)&unk_1011CEF20);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v40);
        v59((char *)v55, v50);
        sub_10004FF60(v51, (uint64_t *)&unk_1011CEF20);
        v48 = v101;
        v38 = v106;
        v47 = v87;
        if ((v102 & 1) != 0)
          goto LABEL_15;
LABEL_18:
        v81 = v113;
        v82 = v114;
        v83 = v115;
        v84 = sub_100007E68(&v112, v113);
        v43 = sub_1001433B8((uint64_t)v84, v103, v48, v81, v82, v83);
LABEL_19:
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v112);
        return v43;
      }
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011CEF20);
      sub_10004FF60(v42, (uint64_t *)&unk_1011CEF20);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v40);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v55, v50);
      v48 = v101;
    }
    sub_10004FF60(v51, (uint64_t *)&unk_1011C66C0);
    goto LABEL_18;
  }
  memset(v110, 0, sizeof(v110));
  sub_10004FF60((uint64_t)v110, &qword_1011A29E0);
  return 0;
}

uint64_t sub_100146234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1001462A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, __n128), uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4[2];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_100143A84(a1, a2, a3, a4, v4[4], (uint64_t)v4 + ((v6 + 40) & ~v6), v5, v4[3]);
}

uint64_t sub_1001462C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001462D0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001462D8(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  int v57;
  __objc2_prot_list **p_base_prots;
  int v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  __objc2_prot_list **v80;
  id v81;
  NSString v82;
  void *v83;
  id v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  unint64_t v89;
  const char *v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  _BOOL8 v115;
  uint64_t v116;
  NSString v117;
  id v118;
  BOOL v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  NSString v124;
  void *v125;
  id v126;
  NSString v127;
  id v128;
  void *v129;
  char *v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t);
  char *v157;
  char *v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  _QWORD v162[6];
  __int128 v163;
  void **aBlock;
  uint64_t v165;
  void (*v166)(uint64_t, void *);
  void *v167;
  double (*v168)(uint64_t);
  uint64_t v169;

  v142 = a8;
  v159 = a7;
  v161 = a6;
  v155 = a4;
  v156 = a3;
  v129 = a2;
  v154 = a9;
  v140 = type metadata accessor for Playlist(0);
  v139 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin(v140);
  v137 = v10;
  v138 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v134 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for Playlist.Entry(0);
  v151 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v149 = v12;
  v150 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v158 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v133 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v157 = (char *)&v129 - v18;
  v146 = type metadata accessor for Playlist.Variant(0);
  v145 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v130 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100007E8C((uint64_t *)&unk_1011C66C0);
  __chkstk_darwin(v148);
  v147 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  __chkstk_darwin(v21);
  v131 = (uint64_t)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v143 = (char *)&v129 - v24;
  __chkstk_darwin(v25);
  v144 = (char *)&v129 - v26;
  v27 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C(&qword_1011A2A10);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v129 - v36;
  v38 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v39 = objc_msgSend(v38, "traitCollection");

  v141 = objc_msgSend(v39, "horizontalSizeClass");
  v40 = a5[3];
  v41 = a5[5];
  v132 = a5;
  v42 = sub_100007E68(a5, v40);
  static MusicLibraryAction<>.remove.getter(v42);
  v43 = v42;
  v44 = v145;
  v45 = v41;
  v46 = v146;
  MusicLibrary.supportedStatus<A, B>(for:action:)(v43, v30, v40, v27, v45, &protocol witness table for MusicLibrary.RemoveAction);
  v47 = v27;
  v48 = (uint64_t)v143;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v47);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v37, v31);
  v49 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v34, v31);
  v160 = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
  v50 = *(void (**)(char *, uint64_t))(v32 + 8);
  v51 = (uint64_t)v147;
  v50(v34, v31);
  v52 = v31;
  v53 = (uint64_t)v144;
  v54 = ((uint64_t (*)(char *, uint64_t))v50)(v37, v52);
  Playlist.variant.getter(v54);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v48, enum case for Playlist.Variant.favoriteSongs(_:), v46);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v48, 0, 1, v46);
  v55 = v51 + *(int *)(v148 + 48);
  sub_1001488B4(v53, v51);
  sub_1001488B4(v48, v55);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  v57 = v56(v51, 1, v46);
  p_base_prots = (__objc2_prot_list **)(&JSAccount + 40);
  v153 = v49;
  if (v57 == 1)
  {
    sub_10004FF60(v48, (uint64_t *)&unk_1011CEF20);
    sub_10004FF60(v53, (uint64_t *)&unk_1011CEF20);
    v59 = v56(v55, 1, v46);
    v60 = v158;
    if (v59 == 1)
    {
      sub_10004FF60(v51, (uint64_t *)&unk_1011CEF20);
      v61 = v157;
      v62 = v142;
LABEL_8:
      v69 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E2EF60);
      static Locale.current.getter(v69);
      v147 = (char *)String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, 0, v60, 0, 0, 256);
      v148 = v70;
      v71 = String.LocalizationValue.init(stringLiteral:)(0x766146206F646E55, 0xED0000657469726FLL);
      static Locale.current.getter(v71);
      String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, 0, v60, 0, 0, 256);
      v72 = v151;
      v73 = v150;
      v74 = v152;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v62, v152);
      v75 = *(unsigned __int8 *)(v72 + 80);
      v76 = (v75 + 24) & ~v75;
      v77 = (v149 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
      v78 = swift_allocObject(&unk_1010B31E0, v77 + 8, v75 | 7);
      *(_QWORD *)(v78 + 16) = v161;
      (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v78 + v76, v73, v74);
      v79 = v129;
      *(_QWORD *)(v78 + v77) = v129;
      v80 = p_base_prots;
      swift_retain();
      v81 = v79;
      v82 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v169 = v78;
      aBlock = _NSConcreteStackBlock;
      v165 = 1107296256;
      v166 = sub_100223938;
      v167 = &unk_1010B31F8;
      v168 = sub_100148D28;
      v83 = _Block_copy(&aBlock);
      swift_release();
      v84 = objc_msgSend((id)objc_opt_self(UIAlertAction), (SEL)p_base_prots[406], v82, 2, v83);
      goto LABEL_37;
    }
    goto LABEL_6;
  }
  v63 = v130;
  v64 = v131;
  sub_1001488B4(v51, v131);
  if (v56(v55, 1, v46) == 1)
  {
    sub_10004FF60(v48, (uint64_t *)&unk_1011CEF20);
    sub_10004FF60(v53, (uint64_t *)&unk_1011CEF20);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v64, v46);
    v60 = v158;
LABEL_6:
    v65 = sub_10004FF60(v51, (uint64_t *)&unk_1011C66C0);
    v61 = v157;
    v62 = v142;
    v66 = v160;
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v63, v55, v46);
  v67 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  LODWORD(v148) = dispatch thunk of static Equatable.== infix(_:_:)(v64, v63, v46, v67);
  v68 = *(void (**)(char *, uint64_t))(v44 + 8);
  v68(v63, v46);
  sub_10004FF60(v48, (uint64_t *)&unk_1011CEF20);
  sub_10004FF60(v53, (uint64_t *)&unk_1011CEF20);
  v68((char *)v64, v46);
  v65 = sub_10004FF60(v51, (uint64_t *)&unk_1011CEF20);
  v60 = v158;
  v61 = v157;
  v62 = v142;
  v66 = v160;
  p_base_prots = &JSAccount.base_prots;
  if ((v148 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v85 = v134;
  Playlist.Entry.internalItem.getter(v65);
  v86 = v135;
  v87 = v136;
  v88 = (*(uint64_t (**)(char *, uint64_t))(v135 + 88))(v85, v136);
  if (v88 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    if (v49 == v66)
    {
      v89 = 0xD000000000000068;
      v90 = "Would you like to remove this movie from this playlist or delete it from your library and all playlists?";
    }
    else
    {
      v89 = 0xD000000000000037;
      v90 = "Would you like to remove this movie from this playlist?";
    }
    goto LABEL_29;
  }
  if (v88 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    if (v49 == v66)
    {
      v89 = 0xD00000000000006ELL;
      v90 = "Would you like to remove this music video from this playlist or delete it from your library and all playlists?";
    }
    else
    {
      v89 = 0xD00000000000003DLL;
      v90 = "Would you like to remove this music video from this playlist?";
    }
    goto LABEL_29;
  }
  if (v88 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    if (v49 == v66)
    {
      v89 = 0xD000000000000067;
      v90 = "Would you like to remove this song from this playlist or delete it from your library and all playlists?";
    }
    else
    {
      v89 = 0xD000000000000036;
      v90 = "Would you like to remove this song from this playlist?";
    }
    goto LABEL_29;
  }
  if (v88 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    if (v49 == v66)
    {
      v89 = 0xD00000000000006ALL;
      v90 = "Would you like to remove this episode from this playlist or delete it from your library and all playlists?";
    }
    else
    {
      v89 = 0xD000000000000039;
      v90 = "Would you like to remove this episode from this playlist?";
    }
    goto LABEL_29;
  }
  if (v88 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    || v88 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
    if (v49 == v66)
    {
      v97 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000062, 0x8000000100E2EC30);
      static Locale.current.getter(v97);
      v147 = (char *)String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, 0, v60, 0, 0, 256);
      v148 = v98;
      v93 = v133;
      goto LABEL_31;
    }
    v99 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x8000000100E2EB90);
    static Locale.current.getter(v99);
    v147 = (char *)String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, 0, v60, 0, 0, 256);
    v148 = v100;
    v93 = v133;
LABEL_35:
    v95 = 0x65766F6D6552;
    v96 = 0xE600000000000000;
    goto LABEL_36;
  }
  if (v49 == v66)
  {
    v89 = 0xD000000000000062;
    v90 = "Would you like to remove this from this playlist or delete it from your library and all playlists?";
LABEL_29:
    v91 = (unint64_t)(v90 - 32) | 0x8000000000000000;
    goto LABEL_30;
  }
  v91 = 0x8000000100E2EB90;
  v89 = 0xD000000000000031;
LABEL_30:
  v92 = String.LocalizationValue.init(stringLiteral:)(v89, v91);
  static Locale.current.getter(v92);
  v93 = v133;
  v147 = (char *)String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, 0, v60, 0, 0, 256);
  v148 = v94;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  if (v49 != v160)
    goto LABEL_35;
LABEL_31:
  v95 = 0xD000000000000019;
  v96 = 0x8000000100E2EC10;
LABEL_36:
  v101 = String.LocalizationValue.init(stringLiteral:)(v95, v96);
  static Locale.current.getter(v101);
  v146 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, 0, v60, 0, 0, 256);
  v145 = v102;
  v103 = v151;
  v104 = v150;
  v105 = v152;
  (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v62, v152);
  v106 = v139;
  v107 = v138;
  v108 = v140;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v138, v159, v140);
  v109 = *(unsigned __int8 *)(v103 + 80);
  v110 = (v109 + 24) & ~v109;
  v111 = *(unsigned __int8 *)(v106 + 80);
  v112 = (v149 + v111 + v110) & ~v111;
  v113 = swift_allocObject(&unk_1010B3140, v112 + v137, v109 | v111 | 7);
  *(_QWORD *)(v113 + 16) = v161;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v113 + v110, v104, v105);
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v113 + v112, v107, v108);
  swift_retain();
  v82 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v169 = v113;
  aBlock = _NSConcreteStackBlock;
  v165 = 1107296256;
  v166 = sub_100223938;
  v167 = &unk_1010B3158;
  v168 = sub_100148BB8;
  v83 = _Block_copy(&aBlock);
  swift_release();
  v80 = &JSAccount.base_prots;
  v84 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v82, 2, v83);
LABEL_37:
  v114 = v84;
  _Block_release(v83);

  sub_10004A07C(0, &qword_1011A2A18, UIAlertController_ptr);
  v115 = 0;
  v116 = v154;
  if (*(unsigned __int8 *)(v154 + 48) == 255)
    v115 = v141 != (id)1;
  v117 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v118 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "alertControllerWithTitle:message:preferredStyle:", 0, v117, v115);

  objc_msgSend(v118, "addAction:", v114);
  if (v153 == v160)
  {
    v119 = v141 == (id)1;
    v120 = v157;
    v121 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E2EBF0);
    v122 = v158;
    static Locale.current.getter(v121);
    String.init(localized:table:bundle:locale:comment:)(v120, 0, 0, 0, v122, 0, 0, 256);
    sub_100064AC8(v116, (uint64_t)&aBlock);
    sub_1001488FC((uint64_t)v132, (uint64_t)&v163);
    v123 = swift_allocObject(&unk_1010B3190, 145, 7);
    sub_100064EF0((uint64_t)&aBlock, v123 + 16);
    sub_100145714(&v163, (_OWORD *)(v123 + 88));
    *(_QWORD *)(v123 + 136) = v161;
    *(_BYTE *)(v123 + 144) = v119;
    swift_retain();
    v124 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v162[4] = sub_100148C84;
    v162[5] = v123;
    v162[0] = _NSConcreteStackBlock;
    v162[1] = 1107296256;
    v162[2] = sub_100223938;
    v162[3] = &unk_1010B31A8;
    v125 = _Block_copy(v162);
    swift_release();
    v126 = objc_msgSend((id)objc_opt_self(UIAlertAction), (SEL)v80[406], v124, 2, v125);
    _Block_release(v125);

    objc_msgSend(v118, "addAction:", v126);
  }
  String.cancelButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v127 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v128 = objc_msgSend((id)objc_opt_self(UIAlertAction), (SEL)v80[406], v127, 1, 0);

  objc_msgSend(v118, "addAction:", v128);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v118, 1, (id)0xF, (void **)1, 0, 0);
  v156(1);

}

double sub_10014742C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  double result;
  uint64_t v23;

  v7 = type metadata accessor for Playlist.Entry(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  type metadata accessor for MainActor(0);
  swift_retain();
  v15 = a4;
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject(&unk_1010B3230, v20 + 8, v18 | 7);
  *((_QWORD *)v21 + 2) = v17;
  *((_QWORD *)v21 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v21 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v21[v19], v10, v7);
  *(_QWORD *)&v21[v20] = v15;
  sub_100980A1C((uint64_t)v13, (uint64_t)&unk_1011A2A28, (uint64_t)v21);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001475B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t v12;

  v6[2] = a6;
  v8 = type metadata accessor for Notice.Variant(0);
  v6[3] = v8;
  v6[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notice(0);
  v6[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[6] = type metadata accessor for MainActor(0);
  v6[7] = static MainActor.shared.getter(v10);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.undoFavorite<A>(_:)[1]);
  v6[8] = v11;
  v12 = type metadata accessor for Playlist.Entry(0);
  *v11 = v6;
  v11[1] = sub_10014768C;
  return MusicLibrary.undoFavorite<A>(_:)(a5, v12, &protocol witness table for Playlist.Entry);
}

uint64_t sub_10014768C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1001477CC;
  else
    v6 = sub_100147714;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100147714()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(v0 + 56));
  v1 = UIView.noticePresenter.getter();
  if (v1)
  {
    v2 = v1;
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    swift_storeEnumTagMultiPayload(v4, *(_QWORD *)(v0 + 24), 10);
    static Notice.variant(_:)(v4);
    sub_10005B748(v4, type metadata accessor for Notice.Variant);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 192))(v3, 0);
    swift_release(v2);
    sub_10005B748(v3, type metadata accessor for Notice);
  }
  v5 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001477CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100147814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a4;
  v28 = a2;
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v5);
  type metadata accessor for MainActor(0);
  v16 = v28;
  v17 = swift_retain();
  v18 = static MainActor.shared.getter(v17);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = (v19 + 40) & ~v19;
  v21 = *(unsigned __int8 *)(v6 + 80);
  v22 = (v10 + v21 + v20) & ~v21;
  v23 = (char *)swift_allocObject(&unk_1010B3280, v22 + v7, v19 | v21 | 7);
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v23 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v23[v20], v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v23[v22], v26, v25);
  sub_100166D14((uint64_t)v14, (uint64_t)&unk_1011A2A48, (uint64_t)v23);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1001479FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _QWORD *v16;

  v6[6] = a5;
  v6[7] = a6;
  v9 = type metadata accessor for Playlist(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist.Entry(0);
  v6[11] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[12] = v12;
  v6[13] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Logger(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[17] = type metadata accessor for MainActor(0);
  v6[18] = static MainActor.shared.getter(v15);
  v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove(_:from:)[1]);
  v6[19] = v16;
  *v16 = v6;
  v16[1] = sub_100147AF8;
  return MusicLibrary.remove(_:from:)(a5, a6);
}

uint64_t sub_100147AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100147BD0;
  else
    v6 = sub_100147B80;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100147B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100147BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 72);
  v50 = *(_QWORD *)(v0 + 80);
  v53 = *(_QWORD *)(v0 + 48);
  v46 = *(_QWORD *)(v0 + 56);
  v48 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 144));
  v9 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v53, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v50, v46, v48);
  swift_errorRetain(v1);
  v10 = swift_errorRetain(v1);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 160);
    v49 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 104);
    v51 = *(_QWORD *)(v0 + 112);
    v54 = *(_QWORD *)(v0 + 128);
    v41 = *(_QWORD *)(v0 + 96);
    v42 = *(_QWORD *)(v0 + 88);
    v43 = *(_QWORD *)(v0 + 80);
    v44 = *(_QWORD *)(v0 + 72);
    v45 = *(_QWORD *)(v0 + 64);
    v15 = swift_slowAlloc(32, -1);
    v47 = swift_slowAlloc(96, -1);
    v56 = v47;
    *(_DWORD *)v15 = 136446722;
    v16 = Playlist.Entry.description.getter();
    v18 = v17;
    *(_QWORD *)(v0 + 16) = sub_100322200(v16, v17, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    v19 = swift_bridgeObjectRelease(v18);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v14, v42, v19);
    *(_WORD *)(v15 + 12) = 2082;
    v21 = Playlist.description.getter(v20);
    v23 = v22;
    *(_QWORD *)(v0 + 24) = sub_100322200(v21, v22, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t, __n128))(v44 + 8))(v43, v45, v24);
    *(_WORD *)(v15 + 22) = 2082;
    *(_QWORD *)(v0 + 32) = v13;
    swift_errorRetain(v13);
    v25 = sub_100007E8C(&qword_1011A14B0);
    v26 = String.init<A>(describing:)(v0 + 32, v25);
    v28 = v27;
    *(_QWORD *)(v0 + 40) = sub_100322200(v26, v27, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to remove entry=%{public}s from playlist=%{public}s with error=%{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy(v47, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v13);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v54, v51);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 160);
    v30 = *(_QWORD *)(v0 + 120);
    v31 = *(_QWORD *)(v0 + 104);
    v52 = *(_QWORD *)(v0 + 112);
    v55 = *(_QWORD *)(v0 + 128);
    v32 = v11;
    v34 = *(_QWORD *)(v0 + 88);
    v33 = *(_QWORD *)(v0 + 96);
    v35 = *(_QWORD *)(v0 + 72);
    v36 = *(_QWORD *)(v0 + 80);
    v37 = *(_QWORD *)(v0 + 64);
    swift_errorRelease(v29);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
    swift_errorRelease(v29);
    swift_errorRelease(v29);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v55, v52);
  }
  v38 = *(_QWORD *)(v0 + 104);
  v39 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100147F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  __int128 v18[3];
  _BYTE v19[72];

  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100064AC8(a2, (uint64_t)v19);
  sub_1001488FC(a3, (uint64_t)v18);
  type metadata accessor for MainActor(0);
  v13 = swift_retain();
  v14 = static MainActor.shared.getter(v13);
  v15 = swift_allocObject(&unk_1010B3258, 161, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = &protocol witness table for MainActor;
  sub_100064EF0((uint64_t)v19, v15 + 32);
  sub_100145714(v18, (_OWORD *)(v15 + 104));
  *(_QWORD *)(v15 + 152) = a4;
  *(_BYTE *)(v15 + 160) = a5;
  sub_100166D14((uint64_t)v11, (uint64_t)&unk_1011A2A38, v15);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100148070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + 48) = a7;
  *(_QWORD *)(v7 + 24) = a5;
  *(_QWORD *)(v7 + 32) = a6;
  *(_QWORD *)(v7 + 16) = a4;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 40) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001480E4, v10, v11);
}

uint64_t sub_1001480E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;

  v1 = *(unsigned __int8 *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  v5 = v3[3];
  v6 = v3[4];
  v7 = v3[5];
  v8 = sub_100007E68(v3, v5);
  v9 = (*(unsigned __int8 *)(v4 + 48) == 255) & (v1 ^ 1u);
  sub_10004A07C(0, &qword_1011A2A18, UIAlertController_ptr);
  v10 = sub_10037A540((uint64_t)v8, v2, v9, v5, v6, v7);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v10, 1, (id)0xF, (void **)1, 0, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1001481C0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithWeight:", 5);
  qword_1011A29C0 = (uint64_t)result;
  return result;
}

void sub_1001481FC()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[6];

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_1001482A0;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100264780;
  v3[3] = &unk_1010B2FF0;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release();
  qword_1011A29C8 = (uint64_t)v2;
}

id sub_1001482A0(void *a1)
{
  id v2;
  id v3;
  id v4;
  double v5;
  double v6;

  v2 = objc_msgSend(a1, "userInterfaceStyle");
  v3 = objc_msgSend(a1, "accessibilityContrast");
  if (v2)
  {
    if (v2 == (id)2)
    {
      if ((unint64_t)v3 + 1 < 2)
      {
        v4 = objc_allocWithZone((Class)UIColor);
        v5 = 0.11;
        v6 = 0.12;
        return objc_msgSend(v4, "initWithRed:green:blue:alpha:", v5, v5, v6, 1.0);
      }
      if (v3 == (id)1)
      {
        v4 = objc_allocWithZone((Class)UIColor);
        v5 = 0.15;
        v6 = 0.16;
        return objc_msgSend(v4, "initWithRed:green:blue:alpha:", v5, v5, v6, 1.0);
      }
    }
    else if (v2 == (id)1)
    {
      goto LABEL_4;
    }
LABEL_11:
    v4 = objc_allocWithZone((Class)UIColor);
    v5 = 0.93;
    v6 = 0.94;
    return objc_msgSend(v4, "initWithRed:green:blue:alpha:", v5, v5, v6, 1.0);
  }
LABEL_4:
  if ((unint64_t)v3 + 1 < 2 || v3 != (id)1)
    goto LABEL_11;
  v4 = objc_allocWithZone((Class)UIColor);
  v5 = 0.89;
  v6 = 0.9;
  return objc_msgSend(v4, "initWithRed:green:blue:alpha:", v5, v5, v6, 1.0);
}

uint64_t sub_1001483C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001483E4(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1001483F8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *((_QWORD *)v0 + 4);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 6));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_release(*(_QWORD *)&v0[v6]);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100148488(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = v1[6];
  v11 = (uint64_t)v1 + v7;
  v12 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_1011A29EC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006AEE4;
  return sub_100143C30(a1, v8, v9, v10, v11, v12, v4, v5);
}

uint64_t sub_100148540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType(a2))
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return sub_100007E8C((uint64_t *)&unk_1011A1470);
  else
    return type metadata accessor for _ContiguousArrayStorage(0, a2);
}

uint64_t sub_10014858C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v4));
  v6 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5, v7);
  v8 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), v8);
  if (*(_QWORD *)(v6 + 56))
    swift_release(*(_QWORD *)(v6 + 64));
  return swift_deallocObject(v0, v5 + 72, v2 | 7);
}

uint64_t sub_100148630(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = v4[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10014425C(a1, a2, a3, a4, (uint64_t)v4 + v7, *(_QWORD *)((char *)v4 + v8), (uint64_t)v4 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8), v5, v4[3], v4[4]);
}

uint64_t sub_10014868C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v5));
  v8 = v0 + v6;
  swift_unknownObjectWeakDestroy(v0 + v6, v9);
  v10 = *(unsigned __int8 *)(v0 + v6 + 48);
  if (v10 != 255)
    sub_100064AA4(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v10);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  v11 = (v6 + 79) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;

  return swift_deallocObject(v0, v12, v3 | 7);
}

uint64_t sub_100148764(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = v1[4];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = *(_QWORD *)((char *)v1 + v6);
  v11 = (uint64_t)v1 + v5;
  v12 = (uint64_t)v1 + v7;
  v13 = *(_QWORD *)((char *)v1 + ((v7 + 79) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1011A29FC);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100144444(a1, v8, v9, v11, v10, v12, v13, v3);
}

_QWORD *sub_100148840(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[8];
  v6 = a1[11];
  swift_release(a1[13]);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_1001488B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011CEF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001488FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100148940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 16));
  v11 = swift_release(*(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  v12 = v0 + v10;
  swift_unknownObjectWeakDestroy(v0 + v10, v13);
  v14 = *(unsigned __int8 *)(v0 + v10 + 48);
  if (v14 != 255)
    sub_100064AA4(*(id *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), v14);
  if (*(_QWORD *)(v12 + 56))
    swift_release(*(_QWORD *)(v12 + 64));
  return swift_deallocObject(v0, v10 + 72, v3 | v8 | 7);
}

void sub_100148A40(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v9 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  sub_1001462D8(a1, a2, a3, a4, (_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 64), v4 + v10, v4 + v13, v4 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100148AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

double sub_100148BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  return sub_100147814(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_100148C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  v3 = *(unsigned __int8 *)(v2 + 64);
  if (v3 != 255)
    sub_100064AA4(*(id *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), v3);
  if (*(_QWORD *)(v2 + 72))
    swift_release(*(_QWORD *)(v2 + 80));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v2 + 88));
  swift_release(*(_QWORD *)(v2 + 136));
  return swift_deallocObject(v2, 145, 7);
}

double sub_100148C84(uint64_t a1)
{
  uint64_t v1;

  return sub_100147F44(a1, v1 + 16, v1 + 88, *(_QWORD *)(v1 + 136), *(_BYTE *)(v1 + 144));
}

uint64_t sub_100148C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

double sub_100148D28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10014742C(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100148D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100148E14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1011A2A24);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10005AEE4;
  return sub_1001475B4(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100148EC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 32, v1);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 != 255)
    sub_100064AA4(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v2);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 161, 7);
}

uint64_t sub_100148F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v1 + 32;
  v7 = v1 + 104;
  v8 = *(_QWORD *)(v1 + 152);
  v9 = *(_BYTE *)(v1 + 160);
  v10 = (_QWORD *)swift_task_alloc(dword_1011A2A34);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100148070(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100148FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100149080(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc(dword_1011A2A44);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_1001479FC(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_10014913C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  int v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  swift_unknownObjectWeakDestroy(v2 + 40, a2);
  v8 = *(unsigned __int8 *)(v2 + 88);
  if (v8 != 255)
    sub_100064AA4(*(id *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), v8);
  if (*(_QWORD *)(v2 + 96))
    v7 = swift_release(*(_QWORD *)(v2 + 104));
  v9 = (v5 + 112) & ~v5;
  v10 = (v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v2 + v9, v3, v7);
  swift_release(*(_QWORD *)(v2 + v10));
  return swift_deallocObject(v2, v10 + 8, v5 | 7);
}

double sub_1001491E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = v4[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_100144B2C(a1, a2, a3, a4, (uint64_t)(v4 + 5), (uint64_t)v4 + v7, *(_QWORD *)((char *)v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, v4[3], v4[4]);
}

uint64_t sub_10014923C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 56, v5);
  v7 = *(unsigned __int8 *)(v0 + 104);
  if (v7 != 255)
    sub_100064AA4(*(id *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v7);
  if (*(_QWORD *)(v0 + 112))
    v6 = swift_release(*(_QWORD *)(v0 + 120));
  v8 = (v3 + 128) & ~v3;
  v9 = (v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v8, v1, v6);
  swift_release(*(_QWORD *)(v0 + v9));
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v3 | 7);
}

uint64_t sub_10014930C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = *(_QWORD *)(v1[4] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v1[2];
  v7 = v1[3];
  v8 = (uint64_t)(v1 + 7);
  v9 = *(_QWORD *)((char *)v1 + v5);
  v10 = (uint64_t)v1 + v4;
  v11 = (_QWORD *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_1011A2A54);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100144D00(a1, v6, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_1001493F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100149434(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

uint64_t sub_100149448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014948C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v7);
  v13 = v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)swift_task_alloc(dword_1011A2A64);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100142A84(a1, v8, v9, v11, v10, v12, v13);
}

uint64_t sub_10014955C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = (id *)(v0 + v4);
  v8 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {

  }
  v10 = (id *)((char *)v7 + *(int *)(v1 + 28));
  if (v10[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);
  v11 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(void **)(v0 + v5);
  if ((unint64_t)v12 >= 4)

  swift_release(*(_QWORD *)(v0 + v6));
  v13 = v0 + v11;
  swift_unknownObjectWeakDestroy(v0 + v11, v14);
  v15 = *(unsigned __int8 *)(v0 + v11 + 48);
  if (v15 != 255)
    sub_100064AA4(*(id *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), v15);
  if (*(_QWORD *)(v13 + 56))
    swift_release(*(_QWORD *)(v13 + 64));
  return swift_deallocObject(v0, v11 + 72, v3 | 7);
}

uint64_t sub_100149688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + v6);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v7);
  v13 = v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)swift_task_alloc(dword_1011A2A64);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10005AEE4;
  return sub_100142A84(a1, v8, v9, v11, v10, v12, v13);
}

double sub_100149790@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_10119DFB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_10119DFC0).n128_u64[0];
  return result;
}

double sub_1001497F4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_10119E030, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_10119E078).n128_u64[0];
  return result;
}

__n128 sub_100149858@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v34;
  double v35;
  double v36;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  double v49;
  double v50;
  double v51;
  double v52;
  _OWORD v53[7];

  v19 = a9;
  v20 = a17;
  v21 = a18;
  v22 = a15;
  v23 = a14;
  v24 = a12;
  v25 = a10;
  v26 = a2 & 1;
  v27 = a1;
  if ((_DWORD)v26)
    v27 = -INFINITY;
  v28 = a4 & 1;
  v29 = a3;
  if ((_DWORD)v28)
    v29 = v27;
  v30 = a6 & 1;
  v31 = a8 & 1;
  v32 = a5;
  if ((a6 & 1) != 0)
    v32 = v29;
  if (v27 > v29 || v29 > v32)
    goto LABEL_22;
  v34 = a7;
  if ((_DWORD)v31)
    v34 = -INFINITY;
  v35 = a10;
  if ((a11 & 1) != 0)
    v35 = v34;
  v36 = a12;
  if ((a13 & 1) != 0)
    v36 = v35;
  if (v34 > v35 || v35 > v36)
  {
LABEL_22:
    v51 = a5;
    v52 = a7;
    v49 = a1;
    v50 = a3;
    v47 = v28;
    v48 = v26;
    v46 = v31;
    v39 = static os_log_type_t.fault.getter();
    v40 = (void *)static Log.runtimeIssuesLog.getter();
    v41 = v39;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v41, &_mh_execute_header, v40, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v31 = v46;
    v28 = v47;
    v26 = v48;
    v23 = a14;
    v22 = a15;
    v24 = a12;
    v25 = a10;
    a1 = v49;
    a3 = v50;
    a5 = v51;
    a7 = v52;
    v21 = a18;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v53, *(_QWORD *)&a1, v26, *(_QWORD *)&a3, v28, *(_QWORD *)&a5, v30, *(_QWORD *)&a7, v31, *(_QWORD *)&v25, a11 & 1, *(_QWORD *)&v24, a13 & 1, v23, v22);
  v20(v18, v19, a16);
  v42 = v19 + *(int *)(sub_100007E8C(v21) + 36);
  v43 = v53[5];
  *(_OWORD *)(v42 + 64) = v53[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v53[6];
  v44 = v53[1];
  *(_OWORD *)v42 = v53[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v53[3];
  *(_OWORD *)(v42 + 32) = v53[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

double sub_100149A34@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_1011A2938, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2940).n128_u64[0];
  return result;
}

double sub_100149A98@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A4360, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A4570).n128_u64[0];
  return result;
}

double sub_100149AFC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D50, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D58).n128_u64[0];
  return result;
}

double sub_100149B60@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F10, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F18).n128_u64[0];
  return result;
}

double sub_100149BC4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F30, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F38).n128_u64[0];
  return result;
}

double sub_100149C28@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F40, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F48).n128_u64[0];
  return result;
}

uint64_t sub_100149C8C@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20)
{
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  uint64_t v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  double v50;
  _OWORD v51[7];

  v21 = a20;
  v22 = a19;
  v23 = a18;
  v25 = a15;
  v24 = a16;
  v26 = a13;
  v27 = a11;
  v28 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v28)
    a10.n128_f64[0] = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = a10.n128_f64[0];
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a14 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (a10.n128_f64[0] > v30 || v30 > v34)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v36 = a11;
  if ((a12 & 1) != 0)
    v36 = a10.n128_f64[0];
  v37 = a13;
  if ((a14 & 1) != 0)
    v37 = v36;
  if (a10.n128_f64[0] > v36 || v36 > v37)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v28;
    v45 = v29;
    v39 = static os_log_type_t.fault.getter(a10);
    v40 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v40, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a14 & 1;
    v29 = v45;
    v25 = a15;
    v24 = a16;
    v28 = v46;
    v27 = a11;
    v26 = a13;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v22 = a19;
    v21 = a20;
    v23 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, a1, v28, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, a7, v32, *(_QWORD *)&v27, a12 & 1, *(_QWORD *)&v26, v33, v25, v24);
  *(_QWORD *)a9 = a17;
  *(_QWORD *)(a9 + 8) = v23;
  *(_BYTE *)(a9 + 16) = v22 & 1;
  *(_QWORD *)(a9 + 24) = v21;
  v41 = v51[5];
  *(_OWORD *)(a9 + 96) = v51[4];
  *(_OWORD *)(a9 + 112) = v41;
  *(_OWORD *)(a9 + 128) = v51[6];
  v42 = v51[1];
  *(_OWORD *)(a9 + 32) = v51[0];
  *(_OWORD *)(a9 + 48) = v42;
  v43 = v51[3];
  *(_OWORD *)(a9 + 64) = v51[2];
  *(_OWORD *)(a9 + 80) = v43;
  sub_100055BBC(a17, v23, v22 & 1);
  return swift_bridgeObjectRetain();
}

double sub_100149E6C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2CF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2CF8).n128_u64[0];
  return result;
}

double sub_100149ED0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D00, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D08).n128_u64[0];
  return result;
}

double sub_100149F34@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D10, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D18).n128_u64[0];
  return result;
}

double sub_100149F98@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2CB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2CC0).n128_u64[0];
  return result;
}

_QWORD *sub_100149FFC@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  __int128 *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  unint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  _OWORD v45[7];
  uint64_t v46;
  char v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _BYTE v51[32];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v21 = v40;
    v20 = a11;
    a1 = v41;
    a3 = v42;
    v19 = a13;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[1];
  v48 = *v16;
  v49 = v33;
  sub_1001541F8((uint64_t)&v48, (uint64_t)v51);
  v50 = *((_QWORD *)&v49 + 1);
  v46 = *((_QWORD *)v16 + 4);
  v47 = *((_BYTE *)v16 + 40);
  v34 = v16[1];
  *a9 = *v16;
  a9[1] = v34;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v16 + 25);
  v35 = v45[6];
  v36 = v45[4];
  a9[8] = v45[5];
  a9[9] = v35;
  v37 = v45[1];
  a9[3] = v45[0];
  a9[4] = v37;
  v38 = v45[2];
  a9[6] = v45[3];
  a9[7] = v36;
  a9[5] = v38;
  sub_100154234((uint64_t)v51);
  sub_100055D0C(&v50);
  return sub_1000F4330(&v46);
}

double sub_10014A1D4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F20, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F28).n128_u64[0];
  return result;
}

double sub_10014A238@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for PosterView.TextContentView, (void (*)(uint64_t, uint64_t, uint64_t))sub_10005B704, &qword_1011A2E40).n128_u64[0];
  return result;
}

uint64_t *sub_10014A29C@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v39;
  double v40;
  double v41;
  unint64_t v42;
  _OWORD v44[7];

  v17 = v16;
  v18 = a9;
  v19 = a16;
  v20 = a13;
  v21 = a11;
  v22 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((a2 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = a10.n128_f64[0];
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a14 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v24;
  if (a10.n128_f64[0] > v24 || v24 > v28)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v30 = a11;
  if ((a12 & 1) != 0)
    v30 = a10.n128_f64[0];
  v31 = a13;
  if ((a14 & 1) != 0)
    v31 = v30;
  if (a10.n128_f64[0] > v30 || v30 > v31)
  {
LABEL_22:
    v42 = a7;
    v41 = a5;
    v39 = a1;
    v40 = a3;
    v33 = static os_log_type_t.fault.getter(a10);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = a14 & 1;
    v19 = a16;
    v21 = a11;
    a1 = v39;
    a3 = v40;
    v20 = a13;
    a5 = v41;
    a7 = v42;
    v18 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, a1, v22, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, a7, v26, *(_QWORD *)&v21, a12 & 1, *(_QWORD *)&v20, v27, a15, v19);
  memcpy((void *)v18, v17, 0x101uLL);
  v35 = v44[5];
  *(_OWORD *)(v18 + 328) = v44[4];
  *(_OWORD *)(v18 + 344) = v35;
  *(_OWORD *)(v18 + 360) = v44[6];
  v36 = v44[1];
  *(_OWORD *)(v18 + 264) = v44[0];
  *(_OWORD *)(v18 + 280) = v36;
  v37 = v44[3];
  *(_OWORD *)(v18 + 296) = v44[2];
  *(_OWORD *)(v18 + 312) = v37;
  return sub_100154BC4((uint64_t *)v17);
}

double sub_10014A44C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2DF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2DF8).n128_u64[0];
  return result;
}

double sub_10014A4B0@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2E00, &qword_1011A2E08).n128_u64[0];
  return result;
}

double sub_10014A508@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2E10, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2E18).n128_u64[0];
  return result;
}

double sub_10014A56C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C50, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C58).n128_u64[0];
  return result;
}

double sub_10014A5D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C40, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C48).n128_u64[0];
  return result;
}

double sub_10014A634@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2E30, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2E38).n128_u64[0];
  return result;
}

double sub_10014A698@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C60, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C68).n128_u64[0];
  return result;
}

double sub_10014A6FC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C70, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C78).n128_u64[0];
  return result;
}

double sub_10014A760@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C80, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C88).n128_u64[0];
  return result;
}

double sub_10014A7C4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2CA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2CA8).n128_u64[0];
  return result;
}

double sub_10014A828@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2C90, &qword_1011A2C98).n128_u64[0];
  return result;
}

_QWORD *sub_10014A880@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  __int128 *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  unint64_t v41;
  double v42;
  double v43;
  unint64_t v44;
  _OWORD v45[7];
  __int128 v46;
  char v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _BYTE v51[32];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v21 = v40;
    v20 = a11;
    a1 = v41;
    a3 = v42;
    v19 = a13;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[1];
  v48 = *v16;
  v49 = v33;
  sub_1001541F8((uint64_t)&v48, (uint64_t)v51);
  v35 = v16[1];
  v46 = v16[2];
  v34 = v46;
  *(_OWORD *)a9 = *v16;
  *(_OWORD *)(a9 + 16) = v35;
  *(_OWORD *)(a9 + 32) = v34;
  *(_OWORD *)(a9 + 152) = v45[6];
  v36 = v45[4];
  *(_OWORD *)(a9 + 136) = v45[5];
  *(_OWORD *)(a9 + 120) = v36;
  v37 = v45[2];
  *(_OWORD *)(a9 + 104) = v45[3];
  v38 = v45[1];
  *(_OWORD *)(a9 + 56) = v45[0];
  v50 = *((_QWORD *)&v49 + 1);
  v47 = *((_BYTE *)v16 + 48);
  *(_BYTE *)(a9 + 48) = v47;
  *(_OWORD *)(a9 + 72) = v38;
  *(_OWORD *)(a9 + 88) = v37;
  sub_100154234((uint64_t)v51);
  sub_100055D0C(&v50);
  return sub_1000F4330(&v46);
}

double sub_10014AA64@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2EF0, &qword_1011A2EF8).n128_u64[0];
  return result;
}

double sub_10014AABC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2EE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2EE8).n128_u64[0];
  return result;
}

double sub_10014AB20@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2D20, &qword_1011A2D28).n128_u64[0];
  return result;
}

double sub_10014AB78@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D30, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D38).n128_u64[0];
  return result;
}

double sub_10014ABDC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for DetailedGridView.TextContentView, (void (*)(uint64_t, uint64_t, uint64_t))sub_10005B704, &qword_1011A2CB0).n128_u64[0];
  return result;
}

uint64_t sub_10014AC40@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unsigned int v38;
  double v39;
  double v40;
  double v41;
  double v42;
  _OWORD v43[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v42 = a7;
    v40 = a1;
    v41 = a5;
    v39 = a3;
    v38 = v20;
    v32 = static os_log_type_t.fault.getter();
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v38;
    v19 = a10;
    a3 = v39;
    a1 = v40;
    a5 = v41;
    v18 = a12;
    a7 = v42;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v43, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v43[2];
  *(_OWORD *)(a9 + 56) = v43[3];
  v35 = v43[5];
  *(_OWORD *)(a9 + 72) = v43[4];
  *(_OWORD *)(a9 + 88) = v35;
  *(_OWORD *)(a9 + 104) = v43[6];
  v36 = v43[1];
  *(_OWORD *)(a9 + 8) = v43[0];
  *(_OWORD *)(a9 + 24) = v36;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v34;
  return swift_retain(a16);
}

double sub_10014ADE8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D90, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D98).n128_u64[0];
  return result;
}

double sub_10014AE4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2DA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2DA8).n128_u64[0];
  return result;
}

double sub_10014AEB0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2DC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2DC8).n128_u64[0];
  return result;
}

double sub_10014AF14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2DE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2DE8).n128_u64[0];
  return result;
}

double sub_10014AF78@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2DD0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2DD8).n128_u64[0];
  return result;
}

double sub_10014AFDC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2ED0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2ED8).n128_u64[0];
  return result;
}

uint64_t sub_10014B040@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  _OWORD *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  unint64_t v40;
  double v41;
  double v42;
  unint64_t v43;
  _OWORD v44[7];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v42 = a5;
    v43 = a7;
    v41 = a3;
    v40 = a1;
    v39 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v21 = v39;
    v20 = a11;
    a1 = v40;
    a3 = v41;
    v19 = a13;
    a5 = v42;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[3];
  a9[2] = v16[2];
  a9[3] = v33;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v16 + 57);
  v34 = v16[1];
  *a9 = *v16;
  a9[1] = v34;
  v35 = v44[5];
  a9[9] = v44[4];
  a9[10] = v35;
  a9[11] = v44[6];
  v36 = v44[1];
  a9[5] = v44[0];
  a9[6] = v36;
  v37 = v44[3];
  a9[7] = v44[2];
  a9[8] = v37;
  return sub_100154638((uint64_t)v16);
}

double sub_10014B1EC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_1011A2988, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2CC8).n128_u64[0];
  return result;
}

uint64_t sub_10014B250@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((_DWORD)v23)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a7;
    v44 = a5;
    v41 = a3;
    v42 = a1;
    v39 = v23;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v23 = v39;
    v21 = v40;
    v18 = a15;
    v20 = a10;
    v19 = a12;
    a3 = v41;
    a1 = v42;
    a7 = v43;
    a5 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = a17;
  v35 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v35;
  *(_OWORD *)(a9 + 112) = v45[6];
  v36 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v36;
  v37 = v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(_OWORD *)(a9 + 64) = v37;
  swift_retain(a17);
  return swift_retain(a16);
}

double sub_10014B3F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F60, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F68).n128_u64[0];
  return result;
}

double sub_10014B454@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F70, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F78).n128_u64[0];
  return result;
}

_QWORD *sub_10014B4B8@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  __int128 *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  double v40;
  unint64_t v41;
  double v42;
  unint64_t v43;
  _OWORD v44[7];
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v48[32];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v43 = a7;
    v41 = a1;
    v42 = a5;
    v40 = a3;
    v39 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v20 = a11;
    v21 = v39;
    a3 = v40;
    a1 = v41;
    a5 = v42;
    v19 = a13;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[1];
  v45 = *v16;
  v46 = v33;
  sub_1001541F8((uint64_t)&v45, (uint64_t)v48);
  v34 = v16[1];
  *(_OWORD *)a9 = *v16;
  *(_OWORD *)(a9 + 16) = v34;
  v35 = v44[2];
  *(_OWORD *)(a9 + 88) = v44[3];
  v36 = v44[5];
  *(_OWORD *)(a9 + 104) = v44[4];
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 136) = v44[6];
  v37 = v44[1];
  *(_OWORD *)(a9 + 40) = v44[0];
  *(_OWORD *)(a9 + 56) = v37;
  v47 = *((_QWORD *)&v46 + 1);
  *(_WORD *)(a9 + 32) = *((_WORD *)v16 + 16);
  *(_OWORD *)(a9 + 72) = v35;
  sub_100154234((uint64_t)v48);
  return sub_100055D0C(&v47);
}

uint64_t sub_10014B684@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  const void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v39;
  double v40;
  double v41;
  unint64_t v42;
  _OWORD v44[7];

  v17 = v16;
  v18 = a9;
  v19 = a16;
  v20 = a13;
  v21 = a11;
  v22 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((a2 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = a10.n128_f64[0];
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a14 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v24;
  if (a10.n128_f64[0] > v24 || v24 > v28)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v30 = a11;
  if ((a12 & 1) != 0)
    v30 = a10.n128_f64[0];
  v31 = a13;
  if ((a14 & 1) != 0)
    v31 = v30;
  if (a10.n128_f64[0] > v30 || v30 > v31)
  {
LABEL_22:
    v42 = a7;
    v41 = a5;
    v39 = a1;
    v40 = a3;
    v33 = static os_log_type_t.fault.getter(a10);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = a14 & 1;
    v19 = a16;
    v21 = a11;
    a1 = v39;
    a3 = v40;
    v20 = a13;
    a5 = v41;
    a7 = v42;
    v18 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, a1, v22, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, a7, v26, *(_QWORD *)&v21, a12 & 1, *(_QWORD *)&v20, v27, a15, v19);
  memcpy((void *)v18, v17, 0x131uLL);
  v35 = v44[5];
  *(_OWORD *)(v18 + 376) = v44[4];
  *(_OWORD *)(v18 + 392) = v35;
  *(_OWORD *)(v18 + 408) = v44[6];
  v36 = v44[1];
  *(_OWORD *)(v18 + 312) = v44[0];
  *(_OWORD *)(v18 + 328) = v36;
  v37 = v44[3];
  *(_OWORD *)(v18 + 344) = v44[2];
  *(_OWORD *)(v18 + 360) = v37;
  return sub_100154D1C((uint64_t)v17);
}

double sub_10014B834@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F50, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F58).n128_u64[0];
  return result;
}

double sub_10014B898@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2E60, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2E68).n128_u64[0];
  return result;
}

double sub_10014B8FC@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2E80, &qword_1011A2E88).n128_u64[0];
  return result;
}

double sub_10014B954@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2E70, &qword_1011A2E78).n128_u64[0];
  return result;
}

double sub_10014B9AC@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2EB0, &qword_1011A2EB8).n128_u64[0];
  return result;
}

double sub_10014BA04@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2EA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2EA8).n128_u64[0];
  return result;
}

double sub_10014BA68@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_1011A2E90, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2E98).n128_u64[0];
  return result;
}

double sub_10014BACC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D70, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D78).n128_u64[0];
  return result;
}

double sub_10014BB30@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D80, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D88).n128_u64[0];
  return result;
}

double sub_10014BB94@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011C4F00, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C10).n128_u64[0];
  return result;
}

double sub_10014BBF8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011C4EC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C08).n128_u64[0];
  return result;
}

double sub_10014BC5C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C18, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011C4F50).n128_u64[0];
  return result;
}

double sub_10014BCC0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2E20, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2E28).n128_u64[0];
  return result;
}

id sub_10014BD24@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  double v17;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v30;
  double v31;
  double v32;
  uint64_t v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a1;
  v19 = a15;
  v20 = a12;
  v21 = a10;
  v22 = a2 & 1;
  v23 = a1;
  if ((_DWORD)v22)
    v23 = -INFINITY;
  v24 = a4 & 1;
  v25 = a3;
  if ((a4 & 1) != 0)
    v25 = v23;
  v26 = a6 & 1;
  v27 = a8 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v25;
  if (v23 > v25 || v25 > v28)
    goto LABEL_22;
  v30 = a7;
  if ((a8 & 1) != 0)
    v30 = -INFINITY;
  v31 = a10;
  if ((a11 & 1) != 0)
    v31 = v30;
  v32 = a12;
  if ((a13 & 1) != 0)
    v32 = v31;
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v40 = v22;
    v34 = static os_log_type_t.fault.getter();
    v35 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v34, &_mh_execute_header, v35, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v19 = a15;
    v22 = v40;
    v21 = a10;
    v17 = a1;
    a3 = v42;
    v20 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&v17, v22, *(_QWORD *)&a3, v24, *(_QWORD *)&a5, v26, *(_QWORD *)&a7, v27, *(_QWORD *)&v21, a11 & 1, *(_QWORD *)&v20, a13 & 1, a14, v19);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = a17;
  v36 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v45[6];
  v37 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v37;
  v38 = v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(_OWORD *)(a9 + 64) = v38;
  swift_retain(a17);
  return a16;
}

double sub_10014BED8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2E48, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2E50).n128_u64[0];
  return result;
}

double sub_10014BF3C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D60, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D68).n128_u64[0];
  return result;
}

uint64_t sub_10014BFA0@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unsigned int v42;
  double v43;
  unint64_t v44;
  double v45;
  unint64_t v46;
  _OWORD v47[7];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v46 = a7;
    v44 = a1;
    v45 = a5;
    v43 = a3;
    v42 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v20 = a11;
    v21 = v42;
    a3 = v43;
    a1 = v44;
    a5 = v45;
    v19 = a13;
    a7 = v46;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v47, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = *(_OWORD *)(v16 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v16 + 128);
  *(_OWORD *)(a9 + 144) = v33;
  v34 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(a9 + 80) = v34;
  v35 = *(_OWORD *)(v16 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v16 + 96);
  *(_OWORD *)(a9 + 112) = v35;
  v36 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v16;
  *(_OWORD *)(a9 + 16) = v36;
  v37 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(a9 + 48) = v37;
  v38 = v47[2];
  *(_OWORD *)(a9 + 216) = v47[3];
  v39 = v47[5];
  *(_OWORD *)(a9 + 232) = v47[4];
  *(_OWORD *)(a9 + 248) = v39;
  *(_OWORD *)(a9 + 264) = v47[6];
  v40 = v47[1];
  *(_OWORD *)(a9 + 168) = v47[0];
  *(_OWORD *)(a9 + 184) = v40;
  *(_BYTE *)(a9 + 160) = *(_BYTE *)(v16 + 160);
  *(_OWORD *)(a9 + 200) = v38;
  return sub_100154674(v16);
}

double sub_10014C174@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011C93C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2DB8).n128_u64[0];
  return result;
}

double sub_10014C1D8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2DB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011C9230).n128_u64[0];
  return result;
}

uint64_t sub_10014C23C@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  unint64_t v42;
  double v43;
  double v44;
  unint64_t v45;
  _OWORD v46[7];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v21 = v41;
    v20 = a11;
    a1 = v42;
    a3 = v43;
    v19 = a13;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(a9 + 80) = v33;
  *(_QWORD *)(a9 + 96) = *(_QWORD *)(v16 + 96);
  v34 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v16;
  *(_OWORD *)(a9 + 16) = v34;
  v35 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(a9 + 48) = v35;
  v36 = v46[1];
  *(_OWORD *)(a9 + 104) = v46[0];
  *(_OWORD *)(a9 + 120) = v36;
  v37 = v46[3];
  *(_OWORD *)(a9 + 136) = v46[2];
  v38 = v46[4];
  v39 = v46[5];
  *(_OWORD *)(a9 + 200) = v46[6];
  *(_OWORD *)(a9 + 184) = v39;
  *(_OWORD *)(a9 + 168) = v38;
  *(_OWORD *)(a9 + 152) = v37;
  return sub_1001546FC(v16);
}

double sub_10014C3FC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2EC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2EC8).n128_u64[0];
  return result;
}

double sub_10014C460@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2D40, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2D48).n128_u64[0];
  return result;
}

double sub_10014C4C4@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011A2A80, &qword_1011A2E58).n128_u64[0];
  return result;
}

__n128 sub_10014C51C@<Q0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t *a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  uint64_t v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unint64_t v46;
  double v47;
  unint64_t v48;
  double v49;
  _OWORD v50[7];

  v19 = a9;
  v20 = a17;
  v22 = a15;
  v21 = a16;
  v23 = a13;
  v24 = a11;
  v25 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v25)
    a10.n128_f64[0] = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = a10.n128_f64[0];
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (a10.n128_f64[0] > v27 || v27 > v30)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v32 = a11;
  if ((a12 & 1) != 0)
    v32 = a10.n128_f64[0];
  v33 = a13;
  if ((a14 & 1) != 0)
    v33 = v32;
  if (a10.n128_f64[0] > v32 || v32 > v33)
  {
LABEL_22:
    v48 = a7;
    v49 = a5;
    v46 = a1;
    v47 = a3;
    v45 = v25;
    v35 = v26;
    v37 = static os_log_type_t.fault.getter(a10);
    v38 = (void *)static Log.runtimeIssuesLog.getter();
    v39 = v37;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v38, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v35;
    v22 = a15;
    v21 = a16;
    v25 = v45;
    v24 = a11;
    v23 = a13;
    a1 = v46;
    a3 = v47;
    a7 = v48;
    a5 = v49;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v50, a1, v25, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, a7, v29, *(_QWORD *)&v24, a12 & 1, *(_QWORD *)&v23, a14 & 1, v22, v21);
  v40 = sub_100007E8C(v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v19, v18, v40);
  v41 = v19 + *(int *)(sub_100007E8C(a18) + 36);
  v42 = v50[5];
  *(_OWORD *)(v41 + 64) = v50[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v50[6];
  v43 = v50[1];
  *(_OWORD *)v41 = v50[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v50[3];
  *(_OWORD *)(v41 + 32) = v50[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_10014C6F8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C28).n128_u64[0];
  return result;
}

double sub_10014C75C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2C30, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2C38).n128_u64[0];
  return result;
}

__n128 sub_10014C7C0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v30;
  double v31;
  double v32;
  uint64_t v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a17;
  v19 = a15;
  v20 = a12;
  v21 = a10;
  v22 = a2 & 1;
  v23 = a1;
  if ((_DWORD)v22)
    v23 = -INFINITY;
  v24 = a4 & 1;
  v25 = a3;
  if ((_DWORD)v24)
    v25 = v23;
  v26 = a6 & 1;
  v27 = a8 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v25;
  if (v23 > v25 || v25 > v28)
    goto LABEL_22;
  v30 = a7;
  if ((a8 & 1) != 0)
    v30 = -INFINITY;
  v31 = a10;
  if ((a11 & 1) != 0)
    v31 = v30;
  v32 = a12;
  if ((a13 & 1) != 0)
    v32 = v31;
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v41 = a1;
    v42 = a3;
    v39 = v24;
    v40 = v22;
    v34 = static os_log_type_t.fault.getter();
    v35 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v34, &_mh_execute_header, v35, "Contradictory frame constraints specified.", 42, 2, &_swiftEmptyArrayStorage);

    v24 = v39;
    v22 = v40;
    v19 = a15;
    v21 = a10;
    v20 = a12;
    a1 = v41;
    a3 = v42;
    a5 = v43;
    v18 = a17;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v22, *(_QWORD *)&a3, v24, *(_QWORD *)&a5, v26, *(_QWORD *)&a7, v27, *(_QWORD *)&v21, a11 & 1, *(_QWORD *)&v20, a13 & 1, a14, v19);
  *(_QWORD *)a9 = a16;
  *(_BYTE *)(a9 + 8) = v18 & 1;
  v36 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v45[6];
  v37 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v37;
  result = (__n128)v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(__n128 *)(a9 + 64) = result;
  return result;
}

double sub_10014C968@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100149858(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1011A2F00, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2F08).n128_u64[0];
  return result;
}

uint64_t sub_10014C9CC@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  _OWORD *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unsigned int v46;
  double v47;
  unint64_t v48;
  double v49;
  unint64_t v50;
  _OWORD v51[7];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v50 = a7;
    v48 = a1;
    v49 = a5;
    v47 = a3;
    v46 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v20 = a11;
    v21 = v46;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    v19 = a13;
    a7 = v50;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[9];
  a9[8] = v16[8];
  a9[9] = v33;
  v34 = v16[10];
  v35 = v16[5];
  a9[4] = v16[4];
  a9[5] = v35;
  v36 = v16[7];
  a9[6] = v16[6];
  a9[7] = v36;
  v37 = v16[1];
  *a9 = *v16;
  a9[1] = v37;
  v38 = v16[3];
  a9[2] = v16[2];
  a9[3] = v38;
  v39 = v51[4];
  v40 = v51[5];
  v41 = v51[2];
  a9[14] = v51[3];
  a9[15] = v39;
  v42 = v51[6];
  a9[16] = v40;
  a9[17] = v42;
  v43 = v51[0];
  v44 = v51[1];
  a9[10] = v34;
  a9[11] = v43;
  a9[12] = v44;
  a9[13] = v41;
  return sub_100154ABC((uint64_t)v16);
}

_QWORD *sub_10014CB8C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1001545F4();
  result = EnvironmentValues.subscript.getter(&v4, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_10014CBD8(id *a1)
{
  unint64_t v1;
  id v2;
  id v4;

  v4 = *a1;
  v1 = sub_1001545F4();
  v2 = v4;
  return EnvironmentValues.subscript.setter(&v4, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v1);
}

double sub_10014CC30@<D0>(_OWORD *a1@<X8>)
{
  return sub_10014CCB4((uint64_t (*)(void))sub_1001545B0, (uint64_t)&type metadata for RootViewFeatureNameKey, a1);
}

uint64_t sub_10014CC44(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD v4[2];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  v2 = sub_1001545B0();
  swift_bridgeObjectRetain();
  return EnvironmentValues.subscript.setter(v4, &type metadata for RootViewFeatureNameKey, &type metadata for RootViewFeatureNameKey, v2);
}

double sub_10014CCA0@<D0>(_OWORD *a1@<X8>)
{
  return sub_10014CCB4((uint64_t (*)(void))sub_10015456C, (uint64_t)&type metadata for RecommendationDataKey, a1);
}

double sub_10014CCB4@<D0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X4>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;

  v5 = a1();
  EnvironmentValues.subscript.getter(&v7, a2, a2, v5);
  result = *(double *)&v7;
  *a3 = v7;
  return result;
}

uint64_t sub_10014CD08(uint64_t *a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4[2];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  sub_1000A0168(v4[0], v1);
  v2 = sub_10015456C();
  return EnvironmentValues.subscript.setter(v4, &type metadata for RecommendationDataKey, &type metadata for RecommendationDataKey, v2);
}

uint64_t sub_10014CD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  int *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t *v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t *v73;
  void *v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84[2];

  v4 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v79 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v76 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v76 - v11;
  v13 = *(_QWORD *)(a2 + 24);
  v81 = *(_QWORD *)(a2 + 16);
  v82 = (int *)a2;
  v80 = v13;
  v15 = type metadata accessor for SourcedPlaybackIntent(255, v81, v13, v14);
  v16 = type metadata accessor for Optional(0, v15);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v76 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v76 - v21;
  v23 = a1;
  v25 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v23, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v15) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v78 = v15;
  v27(v22, v20, v15);
  v29 = v82;
  v28 = v83;
  sub_100824838((uint64_t)v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v10, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  v30 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v12, v10);
  v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v10, v4);
  v31(v12, v4);
  if ((v30 & 1) == 0)
  {
    v64 = v79;
    sub_100824838(v79);
    v65 = v28 + v29[15];
    v66 = *(uint8_t **)v65;
    if (*(_QWORD *)v65)
    {
      v67 = (uint64_t *)(v28 + v29[13]);
      v68 = *v67;
      if (*v67)
      {
        swift_retain(*v67);
        swift_retain(v66);
        sub_100547E9C(v64, v66, v68);
        swift_release(v66);
        v69 = swift_release(v68);
        ((void (*)(uint64_t, uint64_t, __n128))v31)(v64, v4, v69);
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v78);
      }
      v70 = v67[1];
      swift_retain(v66);
      v71 = &qword_10119CBF8;
      v72 = sub_100007E8C(&qword_10119CBF8);
      v73 = (unint64_t *)&unk_10119CC00;
      v74 = &protocol conformance descriptor for PresentedViewState<A>;
    }
    else
    {
      v70 = *(_QWORD *)(v65 + 8);
      v71 = (uint64_t *)&unk_1011B4E40;
      v72 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
      v73 = (unint64_t *)&unk_10119CC10;
      v74 = &protocol conformance descriptor for PresentedViewState<A>;
    }
    v75 = sub_100049F28(v73, v71, (uint64_t)v74);
    result = EnvironmentObject.error()(0, v70, v72, v75);
    __break(1u);
    return result;
  }
  v77 = v22;
  v79 = v25;
  v32 = v28 + v29[14];
  v33 = *(id *)v32;
  v34 = (uint64_t)v29;
  v35 = *(_BYTE *)(v32 + 8);
  sub_1000A4100(*(id *)v32, v35);
  v76 = sub_100824044(v33, v35);
  sub_1000A4224(v33, v35);
  v36 = sub_100154264(v34);
  swift_retain(v36);
  v37 = sub_1001542DC(v34);
  v38 = v28;
  __chkstk_darwin(v37);
  *(&v76 - 2) = &type metadata for TabIdentifier;
  v39 = sub_1000502A4();
  *(&v76 - 1) = (id)v39;
  KeyPath = swift_getKeyPath(&unk_100EAC518);
  __chkstk_darwin(KeyPath);
  *(&v76 - 2) = &type metadata for TabIdentifier;
  *(&v76 - 1) = (id)v39;
  v41 = swift_getKeyPath(&unk_100EAC550);
  v42 = v36;
  swift_retain(v37);
  static Published.subscript.getter(v84, v43, KeyPath, v41);
  swift_release(v37);
  swift_release(KeyPath);
  swift_release(v41);
  v44 = v84[0];
  v45 = v38 + *(int *)(v34 + 64);
  v46 = *(_QWORD *)v45;
  v47 = *(_QWORD *)(v45 + 8);
  v48 = *(_BYTE *)(v45 + 16);
  sub_1000A410C(*(_QWORD *)v45, v47, v48);
  sub_100824224(v46, v47, v48);
  v50 = v49;
  sub_1000A4230(v46, v47, v48);
  v51 = v38 + *(int *)(v34 + 68);
  v52 = *(_QWORD *)v51;
  v53 = *(_QWORD *)(v51 + 8);
  v54 = *(_BYTE *)(v51 + 16);
  sub_1000A411C(*(_QWORD *)v51, v53, v54);
  sub_100824400(v52, v53, v54, v84);
  sub_1000A4240(v52, v53, v54);
  v55 = v84[0];
  v56 = v84[1];
  sub_10066D160(v44);
  v58 = v57;
  v60 = v59;
  swift_bridgeObjectRelease(v50);
  if (v56 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    v55 = sub_10066D7A8();
    v56 = v61;
    swift_bridgeObjectRelease(v60);
  }
  swift_release(v42);
  v63 = v76;
  v62 = (uint64_t)v77;
  PlaybackController.enqueue<A>(_:playbackMetrics:)((uint64_t)v77, v58, v60, v55, v56, v81, v80);
  swift_bridgeObjectRelease(v60);
  sub_1000822B4(v55, v56);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v62, v78);
}

uint64_t PlaybackButton.init(mode:intent:onPerform:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;

  v12 = a1 & 1;
  v13 = (int *)type metadata accessor for PlaybackButton(0, a5, a6, a4);
  *(_QWORD *)(a7 + 8) = 0;
  *(_QWORD *)(a7 + 16) = 0;
  v14 = a7 + v13[10];
  v16 = type metadata accessor for SourcedPlaybackIntent(0, a5, a6, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  v17 = (_QWORD *)(a7 + v13[11]);
  v18 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
  v19 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
  *v17 = EnvironmentObject.init()(v18, v19);
  v17[1] = v20;
  v21 = (_QWORD *)(a7 + v13[12]);
  v22 = type metadata accessor for TabSelectionManager(0);
  v23 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
  *v21 = EnvironmentObject.init()(v22, v23);
  v21[1] = v24;
  v25 = (_QWORD *)(a7 + v13[13]);
  v26 = sub_100007E8C(&qword_10119CBF8);
  v27 = sub_100049F28((unint64_t *)&unk_10119CC00, &qword_10119CBF8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v25 = EnvironmentObject.init()(v26, v27);
  v25[1] = v28;
  v29 = a7 + v13[14];
  *(_QWORD *)v29 = swift_getKeyPath(&unk_100EAC290);
  *(_BYTE *)(v29 + 8) = 0;
  v30 = (_QWORD *)(a7 + v13[15]);
  v31 = sub_100007E8C((uint64_t *)&unk_1011B4E40);
  v32 = sub_100049F28((unint64_t *)&unk_10119CC10, (uint64_t *)&unk_1011B4E40, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  *v30 = EnvironmentObject.init()(v31, v32);
  v30[1] = v33;
  v34 = a7 + v13[16];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_100EAC2B8);
  *(_QWORD *)(v34 + 8) = 0;
  *(_BYTE *)(v34 + 16) = 0;
  v35 = a7 + v13[17];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EAC2E0);
  *(_QWORD *)(v35 + 8) = 0;
  *(_BYTE *)(v35 + 16) = 0;
  v36 = (_QWORD *)(a7 + v13[18]);
  *v36 = swift_getKeyPath(&unk_100EAC308);
  v37 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  v38 = type metadata accessor for Optional(0, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v14, a2, v38);
  *(_BYTE *)a7 = v12;
  result = sub_10004BA30(*(_QWORD *)(a7 + 8), *(_QWORD *)(a7 + 16));
  *(_QWORD *)(a7 + 8) = a3;
  *(_QWORD *)(a7 + 16) = a4;
  return result;
}

uint64_t type metadata accessor for PlaybackButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackButton);
}

_QWORD *sub_10014D51C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1001545F4();
  result = EnvironmentValues.subscript.getter(&v4, &_s28PlaybackControllerContextKeyVN, &_s28PlaybackControllerContextKeyVN, v2);
  *a1 = v4;
  return result;
}

double sub_10014D56C@<D0>(_OWORD *a1@<X8>)
{
  return sub_10014CCB4((uint64_t (*)(void))sub_1001545B0, (uint64_t)&type metadata for RootViewFeatureNameKey, a1);
}

double sub_10014D584@<D0>(_OWORD *a1@<X8>)
{
  return sub_10014CCB4((uint64_t (*)(void))sub_10015456C, (uint64_t)&type metadata for RecommendationDataKey, a1);
}

uint64_t PlaybackLabel.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t KeyPath;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v29 = a2;
  v3 = sub_100007E8C(&qword_1011A2A80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A2A88);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A2A90);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A2A98);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1 & 1;
  v16 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v18 = 0x656C6666756873;
  else
    v18 = 0x6C69662E79616C70;
  if (v16)
    v19 = 0xE90000000000006CLL;
  else
    v19 = 0xE700000000000000;
  v30[0] = PlaybackMode.localizedTitle.getter(v17);
  v30[1] = v20;
  v21 = sub_100055B68();
  Label<>.init<A>(_:systemImage:)(v30, v18, v19, &type metadata for String, v21);
  KeyPath = swift_getKeyPath(&unk_100EAC330);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  v23 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v23 = KeyPath;
  *((_QWORD *)v23 + 1) = 1;
  v23[16] = 0;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_1011A2A88);
  *(_WORD *)&v12[*(int *)(v10 + 36)] = 257;
  v24 = sub_10004FF60((uint64_t)v9, &qword_1011A2A88);
  v25 = static Alignment.center.getter(v24);
  sub_100149858(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v25, v26, (uint64_t)&qword_1011A2A90, (void (*)(uint64_t, uint64_t, uint64_t))sub_10004A160, &qword_1011A2A98);
  sub_10004FF60((uint64_t)v12, &qword_1011A2A90);
  return sub_100065228((uint64_t)v15, v29, &qword_1011A2A98);
}

uint64_t PlaybackMode.localizedTitle.getter(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  const char *v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    v11 = String.LocalizationValue.init(stringLiteral:)(0x656C6666756853, 0xE700000000000000);
    static Locale.current.getter(v11);
    v7 = "Label for shuffle button";
    v8 = v5;
    v9 = v3;
    v10 = 24;
  }
  else
  {
    v6 = String.LocalizationValue.init(stringLiteral:)(2036427856, 0xE400000000000000);
    static Locale.current.getter(v6);
    v7 = "Label for play button";
    v8 = v5;
    v9 = v3;
    v10 = 21;
  }
  return String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v9, v7, v10, 2);
}

uint64_t PlaybackMode.systemImageName.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C6666756873;
  else
    return 0x6C69662E79616C70;
}

uint64_t sub_10014D98C@<X0>(uint64_t a1@<X8>)
{
  char *v1;

  return PlaybackLabel.body.getter(*v1, a1);
}

uint64_t PlaybackButtonStack.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v6 = type metadata accessor for Optional(0, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v3, v6);
}

uint64_t PlaybackButtonStack.intent.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v7 = type metadata accessor for Optional(0, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v4, a1, v7);
}

uint64_t (*UIView.Shadow.color.modify())()
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackButtonStack.onPerform.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = *v2;
  sub_100048AAC(*v2, v2[1]);
  return v3;
}

uint64_t PlaybackButtonStack.onPerform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t result;

  v6 = (uint64_t *)(v3 + *(int *)(a3 + 36));
  result = sub_10004BA30(*v6, v6[1]);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*SourcedPlaybackIntent.enqueueMode.modify())()
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackButtonStack.init(_:onPerform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;

  v12 = type metadata accessor for SourcedPlaybackIntent(0, a4, a5, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a6, 1, 1, v12);
  v14 = (uint64_t *)(a6 + *(int *)(type metadata accessor for PlaybackButtonStack(0, a4, a5, v13) + 36));
  v15 = type metadata accessor for Optional(0, v12);
  *v14 = 0;
  v14[1] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(a6, a1, v15);
  result = sub_10004BA30(*v14, v14[1]);
  *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t PlaybackButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v34 = a3;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = type metadata accessor for PlaybackButton(255, v3, v4, a2);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v9 = type metadata accessor for HStack(255, v7, WitnessTable);
  v10 = type metadata accessor for TitleAndIconLabelStyle(255);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v9);
  v35 = v9;
  v36 = v10;
  v37 = v11;
  v38 = sub_100048748(&qword_1011A2AA0, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v35, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v13 = type metadata accessor for IconOnlyLabelStyle(255);
  v14 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v35 = v9;
  v36 = v13;
  v37 = v11;
  v38 = v14;
  v15 = swift_getOpaqueTypeMetadata2(255, &v35, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v16 = swift_getTupleTypeMetadata2(255, OpaqueTypeMetadata2, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, v16);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v19 = type metadata accessor for ViewThatFits(0, v17, v18);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v33 - v25;
  v27 = static Axis.Set.horizontal.getter(v24);
  v28 = Axis.Set.init(rawValue:)(0);
  v29 = Axis.Set.init(rawValue:)(v28);
  v30 = Axis.Set.init(rawValue:)(v29 & v27);
  if (v30 != v27)
  {
    v30 = Axis.Set.init(rawValue:)(v28 | v27);
    v28 = v30;
  }
  __chkstk_darwin(v30);
  *(&v33 - 4) = v3;
  *(&v33 - 3) = v4;
  *(&v33 - 2) = v33;
  ViewThatFits.init(in:content:)(v28, sub_10014EFC8);
  swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v19);
  sub_10081EB14((uint64_t)v23, v19, (uint64_t)v26);
  v31 = *(void (**)(char *, uint64_t))(v20 + 8);
  v31(v23, v19);
  sub_1000EA744((uint64_t)v26, v19, v34);
  return ((uint64_t (*)(char *, uint64_t))v31)(v26, v19);
}

uint64_t sub_10014DE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  char *v48;
  uint64_t (*v49)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v56 = a3;
  v67 = a1;
  v65 = a4;
  v6 = type metadata accessor for IconOnlyLabelStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v6;
  v59 = v6;
  v64 = v7;
  __chkstk_darwin(v6);
  v63 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackButton(255, a2, (uint64_t)a3, v10);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v11, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for HStack(255, v13, WitnessTable);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v15);
  v58 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v71 = (char *)v15;
  v72 = v8;
  v73 = v16;
  v74 = v58;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v71, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v18 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v61 = OpaqueTypeMetadata2;
  v62 = v18;
  v19 = __chkstk_darwin(OpaqueTypeMetadata2);
  v57 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v60 = (uint64_t)&v51 - v21;
  v22 = type metadata accessor for TitleAndIconLabelStyle(0);
  OpaqueTypeConformance2 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_checkMetadataState(0, v15);
  v54 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (char *)&v51 - v26;
  v28 = sub_100048748(&qword_1011A2AA0, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  v71 = (char *)v25;
  v72 = v22;
  v73 = v16;
  v74 = v28;
  v29 = swift_getOpaqueTypeMetadata2(0, &v71, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v66 = *(_QWORD *)(v29 - 8);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v51 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v34 = (char *)&v51 - v33;
  v53 = (char *)&v51 - v33;
  v52 = type metadata accessor for PlaybackButtonStack(0, a2, (uint64_t)v56, v35);
  v36 = sub_10014E320(v52);
  TitleAndIconLabelStyle.init()(v36);
  View.labelStyle<A>(_:)(v24, v25, v22, v16, v28);
  (*(void (**)(char *, uint64_t))(OpaqueTypeConformance2 + 8))(v24, v22);
  v54 = *(_QWORD *)(v54 + 8);
  ((void (*)(char *, uint64_t))v54)(v27, v25);
  v71 = (char *)v25;
  v72 = v22;
  v73 = v16;
  v74 = v28;
  v37 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  sub_10081EB14((uint64_t)v32, v29, (uint64_t)v34);
  v56 = *(void (**)(char *, uint64_t))(v66 + 8);
  v56(v32, v29);
  v38 = sub_10014E320(v52);
  v39 = v63;
  IconOnlyLabelStyle.init()(v38);
  v41 = (uint64_t)v57;
  v40 = v58;
  v42 = v59;
  View.labelStyle<A>(_:)(v39, v25, v59, v37, v58);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v42);
  ((void (*)(char *, uint64_t))v54)(v27, v25);
  v71 = (char *)v25;
  v72 = v42;
  v73 = v37;
  v74 = v40;
  v43 = swift_getOpaqueTypeConformance2(&v71, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v44 = v60;
  v45 = v61;
  sub_10081EB14(v41, v61, v60);
  v46 = v62;
  v47 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v47(v41, v45);
  v48 = v53;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v32, v53, v29);
  v71 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v41, v44, v45);
  v72 = v41;
  v70[0] = v29;
  v70[1] = v45;
  v68 = OpaqueTypeConformance2;
  v69 = v43;
  sub_1004D49B8((uint64_t *)&v71, 2uLL, (uint64_t)v70);
  v47(v44, v45);
  v49 = (uint64_t (*)(char *, uint64_t))v56;
  v56(v48, v29);
  v47(v41, v45);
  return v49(v32, v29);
}

uint64_t sub_10014E320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = v1;
  v2 = static VerticalAlignment.center.getter(a1);
  v4 = type metadata accessor for PlaybackButton(255, v10, v1, v3);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v4, 0, 0);
  v6 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  return HStack.init(alignment:spacing:content:)(v2, 0x4030000000000000, 0, sub_100154364, &v9, v6, WitnessTable);
}

uint64_t sub_10014E3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t WitnessTable;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74[3];

  v68 = a1;
  v65 = a5;
  v67 = type metadata accessor for PlaybackButtonStack(0, a2, a3, a4);
  v7 = *(_QWORD *)(v67 - 8);
  v62 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v67);
  v9 = (char *)&v54 - v8;
  v11 = type metadata accessor for SourcedPlaybackIntent(255, a2, a3, v10);
  v12 = type metadata accessor for Optional(0, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  v57 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v54 - v14;
  v16 = a2;
  v18 = type metadata accessor for PlaybackButton(0, a2, a3, v17);
  v70 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v64 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v63 = (uint64_t)&v54 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v54 - v24;
  __chkstk_darwin(v23);
  v69 = (uint64_t)&v54 - v26;
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v27 = v68;
  v61(v15, v68, v12);
  v60 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v28 = v9;
  v54 = v9;
  v29 = v27;
  v30 = v67;
  v60(v9, v29, v67);
  v31 = *(unsigned __int8 *)(v7 + 80);
  v32 = (v31 + 32) & ~v31;
  v62 += v32;
  v59 = v31 | 7;
  v33 = swift_allocObject(&unk_1010B34F0, v62, v31 | 7);
  v56 = v16;
  *(_QWORD *)(v33 + 16) = v16;
  *(_QWORD *)(v33 + 24) = a3;
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v58(v33 + v32, v28, v30);
  v34 = v16;
  v35 = a3;
  static PlaybackButton.play<A>(_:onPerform:)((uint64_t)v15, (uint64_t)sub_100154374, v33, v36, v34, a3, (uint64_t)v25);
  v37 = swift_release(v33);
  v57 = *(_QWORD *)(v57 + 8);
  v38 = v66;
  ((void (*)(char *, uint64_t, __n128))v57)(v15, v66, v37);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PlaybackButton<A>, v18);
  v55 = v25;
  sub_10081EB14((uint64_t)v25, v18, v69);
  v40 = *(void (**)(char *, uint64_t))(v70 + 8);
  v40(v25, v18);
  v41 = v68;
  v61(v15, v68, v38);
  v42 = v54;
  v43 = v67;
  v60(v54, v41, v67);
  v44 = swift_allocObject(&unk_1010B3518, v62, v59);
  v45 = v56;
  *(_QWORD *)(v44 + 16) = v56;
  *(_QWORD *)(v44 + 24) = v35;
  v58(v44 + v32, v42, v43);
  v46 = v63;
  static PlaybackButton.shuffle<A>(_:onPerform:)((uint64_t)v15, (uint64_t)sub_1001544C8, v44, v47, v45, v35, v63);
  v48 = swift_release(v44);
  ((void (*)(char *, uint64_t, __n128))v57)(v15, v66, v48);
  v49 = (uint64_t)v55;
  sub_10081EB14(v46, v18, (uint64_t)v55);
  v40((char *)v46, v18);
  v50 = v69;
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
  v51(v46, v69, v18);
  v74[0] = v46;
  v52 = (uint64_t)v64;
  v51((uint64_t)v64, v49, v18);
  v74[1] = v52;
  v73[0] = v18;
  v73[1] = v18;
  v71 = WitnessTable;
  v72 = WitnessTable;
  sub_1004D49B8(v74, 2uLL, (uint64_t)v73);
  v40((char *)v49, v18);
  v40((char *)v50, v18);
  v40((char *)v52, v18);
  return ((uint64_t (*)(uint64_t, uint64_t))v40)(v46, v18);
}

uint64_t static PlaybackButton.play<A>(_:onPerform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10014E7D4(a1, a2, a3, a4, a5, a6, 0, a7);
}

uint64_t static PlaybackButton.shuffle<A>(_:onPerform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10014E7D4(a1, a2, a3, a4, a5, a6, 1, a7);
}

uint64_t sub_10014E7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v26 = a7;
  v24 = a8;
  v25 = a6;
  v12 = type metadata accessor for SourcedPlaybackIntent(255, a5, a6, a4);
  v13 = type metadata accessor for Optional(0, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v23 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  v20 = *(_QWORD *)(v12 - 8);
  v21 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v12) != 1)
  {
    SourcedPlaybackIntent.withPlaybackMode(_:)(v26, v12, (uint64_t)v19);
    v21 = 0;
    v14 = v20;
    v13 = v12;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v19, v21, 1, v12);
  sub_100048AAC(a2, a3);
  return PlaybackButton.init(mode:intent:onPerform:)(v26, (uint64_t)v19, a2, a3, a5, v25, v24);
}

uint64_t LaunchURL.Resolver.option.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PlaybackButton.mode.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t PlaybackButton.onPerform.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t PlaybackButton.onPerform.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10004BA30(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*UIView.Shadow.opacity.modify())()
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackButton.intent.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = v3 + *(int *)(a1 + 40);
  v6 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v7 = type metadata accessor for Optional(0, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v5, v7);
}

uint64_t PlaybackButton.intent.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v4 + *(int *)(a2 + 40);
  v7 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v8 = type metadata accessor for Optional(0, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, a1, v8);
}

uint64_t (*SourcedPlaybackIntent.playbackMode.modify())()
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t PlaybackButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39[16];
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;

  v3 = v2;
  v38 = a2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(a1);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A2AB0);
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100007E8C(&qword_1011A2AB8);
  __chkstk_darwin(v37);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A2AC0);
  __chkstk_darwin(v13);
  v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v7, v3, a1);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(&unk_1010B3398, v16 + v6, v15 | 7);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)(v17 + 24) = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, v7, a1);
  v40 = v18;
  v41 = v19;
  v42 = v3;
  v20 = sub_10014F238();
  Button.init(action:label:)(sub_10014F1D8, v17, sub_10014F228, v39, &type metadata for PlaybackLabel, v20);
  if ((*v3 & 1) != 0)
    v21 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
  else
    v21 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  v23 = *v21;
  v22 = v21[1];
  v24 = sub_100049F28(&qword_1011A2AD0, &qword_1011A2AB0, (uint64_t)&protocol conformance descriptor for Button<A>);
  swift_bridgeObjectRetain();
  v25 = v35;
  View.accessibilityIdentifier(_:)(v23, v22, v35, v24);
  v26 = swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t, __n128))(v34 + 8))(v10, v25, v26);
  if ((*v3 & 1) != 0)
    v27 = AccessibilityString.playbackShuffleButtonLabel.unsafeMutableAddressor();
  else
    v27 = AccessibilityString.playbackPlayButtonLabel.unsafeMutableAddressor();
  v28 = *v27;
  v29 = v27[1];
  v30 = sub_10014F27C();
  swift_bridgeObjectRetain();
  v31 = (uint64_t)v36;
  View.accessibilityLabel(_:)(v28, v29, v37, v30);
  swift_bridgeObjectRelease(v29);
  sub_10004FF60((uint64_t)v12, &qword_1011A2AB8);
  return sub_100065228(v31, v38, &qword_1011A2AC0);
}

uint64_t sub_10014ED20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  v5 = type metadata accessor for PlaybackButton(0, a2, a3, a4);
  v6 = a1 + *(int *)(v5 + 40);
  result = sub_10014CD58(v6, v5);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 8);
  if (v8)
    return v8(a1, v6);
  return result;
}

uint64_t PlaybackMode.accessibilityIdentifier.getter(char a1)
{
  return sub_10014EDA4(a1, (uint64_t (*)(void))AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor, (uint64_t (*)(void))AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor);
}

uint64_t PlaybackMode.accessibilityLabel.getter(char a1)
{
  return sub_10014EDA4(a1, (uint64_t (*)(void))AccessibilityString.playbackPlayButtonLabel.unsafeMutableAddressor, (uint64_t (*)(void))AccessibilityString.playbackShuffleButtonLabel.unsafeMutableAddressor);
}

uint64_t sub_10014EDA4(char a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t *v4;
  uint64_t v5;

  if ((a1 & 1) != 0)
    a2 = a3;
  v4 = (uint64_t *)a2();
  v5 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  return v5;
}

_QWORD *sub_10014EDDC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100154528();
  return EnvironmentValues.subscript.getter(a1, &type metadata for PlayabilityStatusKey, &type metadata for PlayabilityStatusKey, v2);
}

_QWORD *sub_10014EE18@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_100154528();
  return EnvironmentValues.subscript.getter(a1, &type metadata for PlayabilityStatusKey, &type metadata for PlayabilityStatusKey, v2);
}

uint64_t sub_10014EE54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.playabilityStatus.setter((uint64_t)v4);
}

uint64_t static PlaybackButton.withPlaybackMode<A>(_:intent:onPerform:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  if ((a1 & 1) != 0)
    return static PlaybackButton.shuffle<A>(_:onPerform:)(a2, a3, a4, a4, a5, a6, a7);
  else
    return static PlaybackButton.play<A>(_:onPerform:)(a2, a3, a4, a4, a5, a6, a7);
}

uint64_t sub_10014EF04@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10014EF34@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10014EF64(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_10014EF90(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t type metadata accessor for PlaybackButtonStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackButtonStack);
}

uint64_t sub_10014EFC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10014DE48(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), *(void (**)(char *, uint64_t))(v1 + 24), a1);
}

uint64_t sub_10014EFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v8 = (int *)type metadata accessor for PlaybackButton(0, v5, v6, a4);
  v9 = *((_QWORD *)v8 - 1);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = v4 + v11;
  if (*(_QWORD *)(v4 + v11 + 8))
    swift_release(*(_QWORD *)(v13 + 16));
  v14 = v13 + v8[10];
  v15 = type metadata accessor for SourcedPlaybackIntent(0, v5, v6, v7);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v14, v5);
    v16 = v14 + *(int *)(v15 + 36);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
    v20 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v18, v19);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v20);
    v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (EnumCaseMultiPayload == 1
      || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, AssociatedTypeWitness))
    {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v16, AssociatedTypeWitness);
    }
  }
  swift_release(*(_QWORD *)(v13 + v8[11]));
  swift_release(*(_QWORD *)(v13 + v8[12]));
  swift_release(*(_QWORD *)(v13 + v8[13]));
  sub_1000A4224(*(id *)(v13 + v8[14]), *(_BYTE *)(v13 + v8[14] + 8));
  swift_release(*(_QWORD *)(v13 + v8[15]));
  sub_1000A4230(*(_QWORD *)(v13 + v8[16]), *(_QWORD *)(v13 + v8[16] + 8), *(_BYTE *)(v13 + v8[16] + 16));
  sub_1000A4240(*(_QWORD *)(v13 + v8[17]), *(_QWORD *)(v13 + v8[17] + 8), *(_BYTE *)(v13 + v8[17] + 16));
  v23 = (_QWORD *)(v13 + v8[18]);
  v24 = sub_100007E8C((uint64_t *)&unk_1011C72D0);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  }
  else
  {
    swift_release(*v23);
  }
  return swift_deallocObject(v4, v11 + v12, v10 | 7);
}

uint64_t sub_10014F1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaybackButton(0, v5, v6, a4) - 8) + 80);
  return sub_10014ED20(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

void sub_10014F228(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = **(_BYTE **)(v1 + 32);
}

unint64_t sub_10014F238()
{
  unint64_t result;

  result = qword_1011A2AC8;
  if (!qword_1011A2AC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaybackLabel, &type metadata for PlaybackLabel);
    atomic_store(result, (unint64_t *)&qword_1011A2AC8);
  }
  return result;
}

unint64_t sub_10014F27C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2AD8[0];
  if (!qword_1011A2AD8[0])
  {
    v1 = sub_100044B54(&qword_1011A2AB8);
    sub_100049F28(&qword_1011A2AD0, &qword_1011A2AB0, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, qword_1011A2AD8);
  }
  return result;
}

uint64_t sub_10014F318(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaybackLabel.body>>, 1);
}

uint64_t sub_10014F328(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of PlaybackButtonStack.body>>, 1);
}

uint64_t sub_10014F35C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of PlaybackButton.body>>, 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackLabel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10014F3DC + 4 * byte_100EAC1B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10014F410 + 4 * byte_100EAC1B0[v4]))();
}

uint64_t sub_10014F410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10014F418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10014F420);
  return result;
}

uint64_t sub_10014F42C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10014F434);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10014F438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10014F440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackLabel()
{
  return &type metadata for PlaybackLabel;
}

uint64_t sub_10014F45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  _QWORD v8[2];

  v5 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  result = type metadata accessor for Optional(319, v5);
  if (v7 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    v8[1] = &unk_100EAC488;
    swift_initStructMetadata(a1, 0, 2, v8, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10014F4DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  size_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unsigned __int8 *v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  char v29;
  size_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  int v36;
  size_t v37;
  uint64_t v38;
  uint64_t *__dst;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(_DWORD *)(v9 + 80);
  v13 = v11 + v12;
  v14 = (v11 + v12) & ~v12;
  if (*(_DWORD *)(v9 + 84))
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = v10 + 1;
  if (v10 <= v15)
    v16 = v15;
  else
    v16 = *(_QWORD *)(v9 + 64);
  v17 = v14 + v16 + 1;
  v18 = *(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80);
  if ((v18 & 0x1000F8) != 0 || (v17 & 0xFFFFFFFFFFFFFFF8) != 0 && (v17 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (uint64_t *)(v20 + (((v18 & 0xF8 | 7u) + 16) & ~(unint64_t)(v18 & 0xF8 | 7u)));
    goto LABEL_36;
  }
  v35 = AssociatedTypeWitness;
  v38 = v14;
  __dst = a1;
  v22 = ~v12;
  v37 = v16;
  v36 = *(_DWORD *)(v9 + 84);
  if (v7 <= 0xFD)
  {
    v23 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v22);
    if (v23[v16] < 2u)
      goto LABEL_17;
  }
  else if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
    v23 = (unsigned __int8 *)(((unint64_t)a2 + v13) & v22);
LABEL_17:
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(__dst, a2, v5);
    v24 = (void *)(((unint64_t)__dst + v13) & v22);
    v25 = v23[v37];
    if (v25 >= 2)
    {
      if (v37 <= 3)
        v26 = v37;
      else
        v26 = 4;
      __asm { BR              X12 }
    }
    v21 = __dst;
    if (v25 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(v24, v23, v35);
      v29 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v23, 1, v35))
      {
        memcpy(v24, v23, v15);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(v24, v23, v35);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v24, 0, 1, v35);
      }
      v29 = 0;
    }
    v30 = v10 + 1;
    *((_BYTE *)v24 + v37) = v29;
    v28 = v38;
    if (!v36)
    {
      if (v10 <= v30)
        ++v10;
      v30 = v10 + 1;
    }
    *((_BYTE *)v24 + v30) = v23[v30];
    goto LABEL_34;
  }
  v27 = v17 + 1;
  v21 = __dst;
  memcpy(__dst, a2, v27);
  v10 = v37;
  v28 = v38;
LABEL_34:
  v31 = v28 + v10 + 9;
  v32 = ((unint64_t)v21 + v31) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)a2 + v31) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v33 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    return v21;
  }
  v20 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v20;
LABEL_36:
  swift_retain(v20);
  return v21;
}

uint64_t sub_10014F7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  result = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a2 + 24), v3, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v7 = result;
  v8 = *(_QWORD *)(result - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(v4 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = ~v12;
  v14 = v11 + v12;
  v15 = (v11 + v12) & ~v12;
  if (v5 <= 0xFD)
  {
    v19 = (v14 + a1) & v13;
    if (v9)
      v20 = *(_QWORD *)(v8 + 64);
    else
      v20 = v10 + 1;
    if (v10 <= v20)
      v18 = v20;
    else
      v18 = *(_QWORD *)(v8 + 64);
    if (*(unsigned __int8 *)(v19 + v18) >= 2u)
      goto LABEL_34;
  }
  else
  {
    v26 = result;
    v16 = v15;
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    if ((_DWORD)result)
    {
      if (v9)
        v17 = v10;
      else
        v17 = v10 + 1;
      if (v10 <= v17)
        v18 = v17;
      else
        v18 = v10;
      v15 = v16;
LABEL_34:
      v10 = v18;
      goto LABEL_35;
    }
    v19 = (v14 + a1) & v13;
    if (v9)
      v21 = v10;
    else
      v21 = v10 + 1;
    if (v10 <= v21)
      v18 = v21;
    else
      v18 = v10;
    v15 = v16;
    v7 = v26;
  }
  v22 = v15;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v23 = *(unsigned __int8 *)(v19 + v18);
  if (v23 >= 2)
  {
    if (v18 <= 3)
      v24 = v18;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1
    || (result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v19, 1, v7), !(_DWORD)result))
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v19, v7);
  }
  v15 = v22;
  if (!v9)
    goto LABEL_34;
LABEL_35:
  v25 = (_QWORD *)((a1 + v15 + v10 + 9) & 0xFFFFFFFFFFFFFFF8);
  if (*v25 >= 0xFFFFFFFFuLL)
    return swift_release(v25[1]);
  return result;
}

void *sub_10014F9E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  size_t v16;
  unsigned __int8 *v17;
  size_t v18;
  uint64_t v19;
  void *v20;
  size_t v21;
  size_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  size_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ~v12;
  v14 = *(_QWORD *)(v6 + 64) + v12;
  v32 = AssociatedTypeWitness;
  v33 = v14 & ~v12;
  if (v7 <= 0xFD)
  {
    v17 = (unsigned __int8 *)(((unint64_t)a2 + v14) & v13);
    if (v10)
      v18 = *(_QWORD *)(v9 + 64);
    else
      v18 = v11 + 1;
    if (v11 <= v18)
      v16 = v18;
    else
      v16 = *(_QWORD *)(v9 + 64);
    if (v17[v16] >= 2u)
      goto LABEL_17;
    v10 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
      if (v10)
        v15 = v11;
      else
        v15 = v11 + 1;
      if (v11 <= v15)
        v16 = v15;
      else
        v16 = v11;
LABEL_17:
      v19 = v33;
      memcpy(a1, a2, v16 + v33 + 2);
      goto LABEL_43;
    }
    v17 = (unsigned __int8 *)(((unint64_t)a2 + v14) & v13);
  }
  (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
  v20 = (void *)(((unint64_t)a1 + v14) & v13);
  if (v10)
    v21 = v11;
  else
    v21 = v11 + 1;
  if (v11 <= v21)
    v22 = v21;
  else
    v22 = v11;
  v23 = v17[v22];
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(v20, v17, v32);
    v25 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v32))
    {
      memcpy(v20, v17, v21);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(v20, v17, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v32);
    }
    v25 = 0;
  }
  v26 = v11 + 1;
  *((_BYTE *)v20 + v22) = v25;
  if (v10)
  {
    *((_BYTE *)v20 + v26) = v17[v26];
    v16 = v11;
  }
  else
  {
    if (v11 <= v26)
      v16 = v11 + 1;
    else
      v16 = v11;
    *((_BYTE *)v20 + v16 + 1) = v17[v16 + 1];
  }
  v19 = v33;
LABEL_43:
  v27 = v19 + v16 + 9;
  v28 = ((unint64_t)a1 + v27) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)a2 + v27) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v29 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  else
  {
    v30 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = v30;
    swift_retain(v30);
  }
  return a1;
}

void *sub_10014FCA4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;
  size_t v21;
  size_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  size_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  void *v29;
  size_t v30;
  size_t v31;
  unsigned int v32;
  uint64_t v33;
  char v34;
  void *v35;
  unsigned __int8 *v36;
  size_t v37;
  unsigned int v38;
  uint64_t v39;
  size_t v40;
  unsigned int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(v6 + 64);
  v55 = v9;
  v56 = AssociatedTypeWitness;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = ~v13;
  v15 = v12 + v13;
  v16 = (v12 + v13) & ~v13;
  v57 = v10;
  if (v7 <= 0xFD)
  {
    if (v10)
      v22 = v11;
    else
      v22 = v11 + 1;
    if (v11 <= v22)
      v21 = v22;
    else
      v21 = v11;
    v23 = (unsigned __int8 *)(((unint64_t)a2 + v15) & v14);
    v24 = v23[v21];
    if (*(unsigned __int8 *)((((unint64_t)a1 + v15) & v14) + v21) >= 2u)
    {
      if (v24 >= 2)
      {
LABEL_68:
        memcpy(a1, a2, v21 + v16 + 2);
        goto LABEL_94;
      }
      goto LABEL_38;
    }
    if (v24 >= 2)
    {
LABEL_30:
      (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
      v26 = ((unint64_t)a1 + v15) & v14;
      v27 = *(unsigned __int8 *)(v26 + v21);
      if (v27 >= 2)
      {
        if (v21 <= 3)
          v28 = v21;
        else
          v28 = 4;
        __asm { BR              X12 }
      }
      if (v27 == 1 || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v55 + 48))(v26, 1, v56))
        (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v26, v56);
      goto LABEL_68;
    }
  }
  else
  {
    v52 = (v12 + v13) & ~v13;
    v53 = a1;
    v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, v7, v5);
    v19 = v17(a2, v7, v5);
    if (v18)
    {
      if (v19)
      {
        if (v57)
          v20 = v11;
        else
          v20 = v11 + 1;
        if (v11 <= v20)
          v21 = v20;
        else
          v21 = v11;
        v16 = v52;
        a1 = v53;
        goto LABEL_68;
      }
      v23 = (unsigned __int8 *)(((unint64_t)a2 + v15) & v14);
      v16 = v52;
      a1 = v53;
LABEL_38:
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      v54 = a1;
      v29 = (void *)(((unint64_t)a1 + v15) & v14);
      if (v57)
        v30 = v11;
      else
        v30 = v11 + 1;
      if (v11 <= v30)
        v31 = v30;
      else
        v31 = v11;
      v32 = v23[v31];
      if (v32 >= 2)
      {
        if (v31 <= 3)
          v33 = v31;
        else
          v33 = 4;
        __asm { BR              X12 }
      }
      if (v32 == 1)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v55 + 16))(v29, v23, v56);
        v34 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v23, 1, v56))
        {
          memcpy(v29, v23, v30);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v55 + 16))(v29, v23, v56);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v29, 0, 1, v56);
        }
        v34 = 0;
      }
      a1 = v54;
      v40 = v11 + 1;
      *((_BYTE *)v29 + v31) = v34;
      if (v57)
      {
        *((_BYTE *)v29 + v40) = v23[v40];
        v21 = v11;
      }
      else
      {
        if (v11 <= v40)
          v21 = v11 + 1;
        else
          v21 = v11;
        *((_BYTE *)v29 + v21 + 1) = v23[v21 + 1];
      }
      goto LABEL_94;
    }
    if (v19)
    {
      if (v57)
        v25 = v11;
      else
        v25 = v11 + 1;
      if (v11 <= v25)
        v21 = v25;
      else
        v21 = v11;
      v16 = v52;
      a1 = v53;
      goto LABEL_30;
    }
    v23 = (unsigned __int8 *)(((unint64_t)a2 + v15) & v14);
    v16 = v52;
    a1 = v53;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  v35 = a1;
  v36 = (unsigned __int8 *)(((unint64_t)a1 + v15) & v14);
  if (v57)
    v37 = v11;
  else
    v37 = v11 + 1;
  if (v11 <= v37)
    v21 = v37;
  else
    v21 = v11;
  if (v23 != v36)
  {
    v38 = v36[v21];
    if (v38 >= 2)
    {
      if (v21 <= 3)
        v39 = v21;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    if (v38 == 1 || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v36, 1, v56))
      (*(void (**)(unsigned __int8 *, uint64_t))(v55 + 8))(v36, v56);
    v41 = v23[v21];
    if (v41 >= 2)
    {
      if (v21 <= 3)
        v42 = v21;
      else
        v42 = 4;
      __asm { BR              X12 }
    }
    if (v41 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 16))(v36, v23, v56);
      v43 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v23, 1, v56))
      {
        memcpy(v36, v23, v37);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 16))(v36, v23, v56);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v36, 0, 1, v56);
      }
      v43 = 0;
    }
    v36[v21] = v43;
  }
  v36[v21 + 1] = v23[v21 + 1];
  a1 = v35;
LABEL_94:
  v44 = v16 + v21 + 9;
  v45 = (_QWORD *)(((unint64_t)a1 + v44) & 0xFFFFFFFFFFFFFFF8);
  v46 = (unint64_t *)(((unint64_t)a2 + v44) & 0xFFFFFFFFFFFFFFF8);
  v47 = *v46;
  if (*v45 < 0xFFFFFFFFuLL)
  {
    if (v47 >= 0xFFFFFFFF)
    {
      v50 = v46[1];
      *v45 = v47;
      v45[1] = v50;
      swift_retain(v50);
      return a1;
    }
LABEL_100:
    *(_OWORD *)v45 = *(_OWORD *)v46;
    return a1;
  }
  if (v47 < 0xFFFFFFFF)
  {
    swift_release(v45[1]);
    goto LABEL_100;
  }
  v48 = v46[1];
  v49 = v45[1];
  *v45 = v47;
  v45[1] = v48;
  swift_retain(v48);
  swift_release(v49);
  return a1;
}

void *sub_1001502EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  size_t v16;
  unsigned __int8 *v17;
  size_t v18;
  uint64_t v19;
  void *v20;
  size_t v21;
  size_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  size_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ~v12;
  v14 = *(_QWORD *)(v6 + 64) + v12;
  v33 = AssociatedTypeWitness;
  v34 = v14 & ~v12;
  if (v7 <= 0xFD)
  {
    v17 = (unsigned __int8 *)(((unint64_t)a2 + v14) & v13);
    if (v10)
      v18 = *(_QWORD *)(v9 + 64);
    else
      v18 = v11 + 1;
    if (v11 <= v18)
      v16 = v18;
    else
      v16 = *(_QWORD *)(v9 + 64);
    if (v17[v16] >= 2u)
      goto LABEL_17;
    v10 = *(_DWORD *)(v9 + 84);
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
    {
      if (v10)
        v15 = v11;
      else
        v15 = v11 + 1;
      if (v11 <= v15)
        v16 = v15;
      else
        v16 = v11;
LABEL_17:
      v19 = v34;
      memcpy(a1, a2, v16 + v34 + 2);
      goto LABEL_43;
    }
    v17 = (unsigned __int8 *)(((unint64_t)a2 + v14) & v13);
  }
  (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
  v20 = (void *)(((unint64_t)a1 + v14) & v13);
  if (v10)
    v21 = v11;
  else
    v21 = v11 + 1;
  if (v11 <= v21)
    v22 = v21;
  else
    v22 = v11;
  v23 = v17[v22];
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 32))(v20, v17, v33);
    v25 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v33))
    {
      memcpy(v20, v17, v21);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 32))(v20, v17, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v33);
    }
    v25 = 0;
  }
  v26 = v11 + 1;
  *((_BYTE *)v20 + v22) = v25;
  if (v10)
  {
    *((_BYTE *)v20 + v26) = v17[v26];
    v16 = v11;
  }
  else
  {
    if (v11 <= v26)
      v16 = v11 + 1;
    else
      v16 = v11;
    *((_BYTE *)v20 + v16 + 1) = v17[v16 + 1];
  }
  v19 = v34;
LABEL_43:
  v27 = v19 + v16 + 9;
  v28 = ((unint64_t)a1 + v27) & 0xFFFFFFFFFFFFFFF8;
  v29 = (uint64_t *)(((unint64_t)a2 + v27) & 0xFFFFFFFFFFFFFFF8);
  v30 = *v29;
  if ((unint64_t)*v29 < 0xFFFFFFFF)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  else
  {
    v31 = v29[1];
    *(_QWORD *)v28 = v30;
    *(_QWORD *)(v28 + 8) = v31;
  }
  return a1;
}

void *sub_1001505A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;
  size_t v21;
  size_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  size_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  void *v29;
  size_t v30;
  size_t v31;
  unsigned int v32;
  uint64_t v33;
  char v34;
  void *v35;
  unsigned __int8 *v36;
  size_t v37;
  unsigned int v38;
  uint64_t v39;
  size_t v40;
  unsigned int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(v6 + 64);
  v55 = v9;
  v56 = AssociatedTypeWitness;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = ~v13;
  v15 = v12 + v13;
  v16 = (v12 + v13) & ~v13;
  v57 = v10;
  if (v7 <= 0xFD)
  {
    if (v10)
      v22 = v11;
    else
      v22 = v11 + 1;
    if (v11 <= v22)
      v21 = v22;
    else
      v21 = v11;
    v23 = (unsigned __int8 *)(((unint64_t)a2 + v15) & v14);
    v24 = v23[v21];
    if (*(unsigned __int8 *)((((unint64_t)a1 + v15) & v14) + v21) >= 2u)
    {
      if (v24 >= 2)
      {
LABEL_68:
        memcpy(a1, a2, v21 + v16 + 2);
        goto LABEL_94;
      }
      goto LABEL_38;
    }
    if (v24 >= 2)
    {
LABEL_30:
      (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
      v26 = ((unint64_t)a1 + v15) & v14;
      v27 = *(unsigned __int8 *)(v26 + v21);
      if (v27 >= 2)
      {
        if (v21 <= 3)
          v28 = v21;
        else
          v28 = 4;
        __asm { BR              X12 }
      }
      if (v27 == 1 || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v55 + 48))(v26, 1, v56))
        (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v26, v56);
      goto LABEL_68;
    }
  }
  else
  {
    v52 = (v12 + v13) & ~v13;
    v53 = a1;
    v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, v7, v5);
    v19 = v17(a2, v7, v5);
    if (v18)
    {
      if (v19)
      {
        if (v57)
          v20 = v11;
        else
          v20 = v11 + 1;
        if (v11 <= v20)
          v21 = v20;
        else
          v21 = v11;
        v16 = v52;
        a1 = v53;
        goto LABEL_68;
      }
      v23 = (unsigned __int8 *)(((unint64_t)a2 + v15) & v14);
      v16 = v52;
      a1 = v53;
LABEL_38:
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      v54 = a1;
      v29 = (void *)(((unint64_t)a1 + v15) & v14);
      if (v57)
        v30 = v11;
      else
        v30 = v11 + 1;
      if (v11 <= v30)
        v31 = v30;
      else
        v31 = v11;
      v32 = v23[v31];
      if (v32 >= 2)
      {
        if (v31 <= 3)
          v33 = v31;
        else
          v33 = 4;
        __asm { BR              X12 }
      }
      if (v32 == 1)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v55 + 32))(v29, v23, v56);
        v34 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v23, 1, v56))
        {
          memcpy(v29, v23, v30);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v55 + 32))(v29, v23, v56);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v29, 0, 1, v56);
        }
        v34 = 0;
      }
      a1 = v54;
      v40 = v11 + 1;
      *((_BYTE *)v29 + v31) = v34;
      if (v57)
      {
        *((_BYTE *)v29 + v40) = v23[v40];
        v21 = v11;
      }
      else
      {
        if (v11 <= v40)
          v21 = v11 + 1;
        else
          v21 = v11;
        *((_BYTE *)v29 + v21 + 1) = v23[v21 + 1];
      }
      goto LABEL_94;
    }
    if (v19)
    {
      if (v57)
        v25 = v11;
      else
        v25 = v11 + 1;
      if (v11 <= v25)
        v21 = v25;
      else
        v21 = v11;
      v16 = v52;
      a1 = v53;
      goto LABEL_30;
    }
    v23 = (unsigned __int8 *)(((unint64_t)a2 + v15) & v14);
    v16 = v52;
    a1 = v53;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  v35 = a1;
  v36 = (unsigned __int8 *)(((unint64_t)a1 + v15) & v14);
  if (v57)
    v37 = v11;
  else
    v37 = v11 + 1;
  if (v11 <= v37)
    v21 = v37;
  else
    v21 = v11;
  if (v23 != v36)
  {
    v38 = v36[v21];
    if (v38 >= 2)
    {
      if (v21 <= 3)
        v39 = v21;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    if (v38 == 1 || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v36, 1, v56))
      (*(void (**)(unsigned __int8 *, uint64_t))(v55 + 8))(v36, v56);
    v41 = v23[v21];
    if (v41 >= 2)
    {
      if (v21 <= 3)
        v42 = v21;
      else
        v42 = 4;
      __asm { BR              X12 }
    }
    if (v41 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 32))(v36, v23, v56);
      v43 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v23, 1, v56))
      {
        memcpy(v36, v23, v37);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 32))(v36, v23, v56);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v36, 0, 1, v56);
      }
      v43 = 0;
    }
    v36[v21] = v43;
  }
  v36[v21 + 1] = v23[v21 + 1];
  a1 = v35;
LABEL_94:
  v44 = v16 + v21 + 9;
  v45 = (_QWORD *)(((unint64_t)a1 + v44) & 0xFFFFFFFFFFFFFFF8);
  v46 = (unint64_t *)(((unint64_t)a2 + v44) & 0xFFFFFFFFFFFFFFF8);
  v47 = *v46;
  if (*v45 < 0xFFFFFFFFuLL)
  {
    if (v47 >= 0xFFFFFFFF)
    {
      v50 = v46[1];
      *v45 = v47;
      v45[1] = v50;
      return a1;
    }
LABEL_100:
    *(_OWORD *)v45 = *(_OWORD *)v46;
    return a1;
  }
  if (v47 < 0xFFFFFFFF)
  {
    swift_release(v45[1]);
    goto LABEL_100;
  }
  v48 = v46[1];
  v49 = v45[1];
  *v45 = v47;
  v45[1] = v48;
  swift_release(v49);
  return a1;
}

uint64_t sub_100150BE4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v10 = 254;
  else
    v10 = v7;
  v11 = v10 - 1;
  if ((v10 - 1) <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = v10 - 1;
  if (*(_DWORD *)(v8 + 84))
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = v9 + 1;
  if (v9 > v13)
    v13 = *(_QWORD *)(v8 + 64);
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v8 + 80);
  v15 = *(_QWORD *)(v6 + 64) + v14;
  v16 = v13 + (v15 & ~v14) + 1;
  if (v12 < a2)
  {
    if ((((v16 & 0xFFFFFFFFFFFFFFF8) + 24) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X0 }
  }
  if (v11 < 0x7FFFFFFE)
  {
    v22 = *(_QWORD *)((a1 + v16 + 8) & 0xFFFFFFFFFFFFF8);
    if (v22 >= 0xFFFFFFFF)
      LODWORD(v22) = -1;
    if ((v22 + 1) >= 2)
      return v22;
    else
      return 0;
  }
  else
  {
    if (v7 < 0xFE)
    {
      v23 = *(unsigned __int8 *)(((v15 + a1) & ~v14) + v13);
      if (v23 >= 2)
        v21 = (v23 ^ 0xFF) + 1;
      else
        v21 = 0;
    }
    else
    {
      v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
    }
    if (v21 >= 2)
      return v21 - 1;
    else
      return 0;
  }
}

void sub_100150DB8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a4 + 24), v7, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v11 = *(_QWORD *)(v10 + 64);
  if (v9 <= 0xFE)
    v12 = 254;
  else
    v12 = v9;
  if ((v12 - 1) <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12 - 1;
  v14 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = v11 + 1;
  if (v11 > v16)
    v16 = v11;
  v15 = *(_QWORD *)(v8 + 64) + v14;
  if (v13 >= a3)
  {
    v19 = 0;
    if (a2 <= v13)
      goto LABEL_25;
  }
  else
  {
    if ((((_DWORD)v16 + (v15 & ~(_DWORD)v14) + 1) & 0xFFFFFFF8) == 0xFFFFFFE8)
      v17 = a3 - v13 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    if (a2 <= v13)
LABEL_25:
      __asm { BR              X16 }
  }
  if ((((_DWORD)v16 + (v15 & ~(_DWORD)v14) + 1) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    v20 = ~v13 + a2;
    bzero(a1, ((v16 + (v15 & ~v14) + 1) & 0xFFFFFFFFFFFFFFF8) + 24);
    *a1 = v20;
  }
  __asm { BR              X10 }
}

void sub_100150F10()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x100151038);
}

void sub_100150F18()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x100150F20);
  JUMPOUT(0x100151038);
}

void sub_100150FA8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x100151038);
}

void sub_100150FB0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x100151038);
}

void sub_100150FB8(unsigned int a1@<W8>)
{
  size_t v1;
  int v2;
  uint64_t v3;
  char *v4;
  unsigned int v5;
  uint64_t v6;

  *(_WORD *)&v4[v6] = 0;
  if (v5)
  {
    if (a1 < 0x7FFFFFFE)
    {
      if (v5 > 0x7FFFFFFE)
        JUMPOUT(0x100151028);
      *(_QWORD *)((unint64_t)&v4[v3 + 8] & 0xFFFFFFFFFFFFFFF8) = v5;
    }
    else
    {
      v1 = (v3 + 1);
      if (a1 >= v5)
        JUMPOUT(0x100150FC4);
      if ((_DWORD)v3 != -1)
      {
        if (v1 <= 3)
          v2 = v3 + 1;
        else
          v2 = 4;
        bzero(v4, v1);
        __asm { BR              X10 }
      }
    }
  }
  JUMPOUT(0x100151038);
}

void sub_100151020()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x100151038);
}

void sub_1001510F8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x100151038);
}

void sub_100151100()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x100151038);
}

void sub_100151110()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x100151038);
}

uint64_t sub_10015111C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 64);
}

void sub_100151124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[11];

  v10[0] = &unk_100EAC4C0;
  v10[1] = &unk_100EAC488;
  v5 = type metadata accessor for SourcedPlaybackIntent(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v6 = type metadata accessor for Optional(319, v5);
  if (v7 <= 0x3F)
  {
    v10[2] = *(_QWORD *)(v6 - 8) + 64;
    v10[3] = &unk_100EAC488;
    v10[4] = &unk_100EAC488;
    v10[5] = &unk_100EAC488;
    v10[6] = &unk_100EAC4D8;
    v10[7] = &unk_100EAC488;
    v10[8] = &unk_100EAC4F0;
    v10[9] = &unk_100EAC4F0;
    sub_100153E9C(319);
    if (v9 <= 0x3F)
    {
      v10[10] = *(_QWORD *)(v8 - 8) + 64;
      swift_initStructMetadata(a1, 0, 11, v10, a1 + 32);
    }
  }
}

unint64_t sub_1001511E8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  __n128 *v25;
  unint64_t v26;
  __n128 *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  int v39;
  size_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void *v60;
  char v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  double v73;
  _QWORD *v74;
  uint64_t *v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t __n;
  uint64_t v81;
  size_t v82;
  uint64_t v83;
  uint64_t v84;
  size_t v85;
  int v86;
  unint64_t v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v4, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 | v6;
  v11 = (v9 | v6);
  v89 = *(_DWORD *)(v5 + 84);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_QWORD *)(v5 + 64);
  v86 = *(_DWORD *)(v8 + 84);
  if (v86)
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = v12 + 1;
  v87 = *(_QWORD *)(v8 + 64);
  v88 = AssociatedTypeWitness;
  v85 = v14;
  if (v12 <= v14)
    v15 = v14;
  else
    v15 = *(_QWORD *)(v8 + 64);
  v16 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v17 & 0xF8;
  v19 = v18 | 7;
  if (*(_QWORD *)(v16 + 64) <= 8uLL)
    v20 = 8;
  else
    v20 = *(_QWORD *)(v16 + 64);
  v21 = (v17 | v10) & 0x100000;
  v22 = (v19 | v11) == 7 && v21 == 0;
  if (!v22
    || (v23 = (v13 + v9) & ~(unint64_t)v9,
        v20
      + ((v18
        + 24
        + ((((((((((((v11 + 24) & ~v11) + v15 + v23 + 2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 39) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v19)
      + 1 > 0x18))
  {
    v32 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v33 = v32 + (((v19 | v11) + 16) & ~(v19 | v11));
LABEL_50:
    swift_retain(v32);
    return v33;
  }
  __n = v15 + v23 + 2;
  v81 = v13 + v9;
  v82 = v15;
  v83 = v18 + 24;
  v24 = ~v11;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v25 = (__n128 *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
  v26 = a2 & 0xFFFFFFFFFFFFFFF8;
  v27 = (__n128 *)(v26 + 8);
  v28 = *(_QWORD *)(v26 + 8);
  v79 = v16;
  v84 = v20;
  v29 = v23;
  if (v28 < 0xFFFFFFFF)
  {
    v31 = *v27;
    *v25 = *v27;
  }
  else
  {
    v30 = *(_QWORD *)(v26 + 16);
    v25->n128_u64[0] = v28;
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = v30;
    v31 = swift_retain(v30);
  }
  v34 = v89;
  v35 = ~(unint64_t)v9;
  v90 = ~v19;
  v36 = v26 + v11;
  v37 = (void *)(((a1 & 0xFFFFFFFFFFFFFFF8) + v11 + 24) & v24);
  v38 = (const void *)((v36 + 24) & v24);
  if (v34 <= 0xFD)
  {
    v41 = v81;
    v40 = v82;
    v42 = (unsigned __int8 *)(((unint64_t)v38 + v81) & v35);
    if (v42[v82] < 2u)
      goto LABEL_24;
LABEL_29:
    memcpy(v37, v38, __n);
    goto LABEL_42;
  }
  v39 = (*(uint64_t (**)(uint64_t, __n128))(v5 + 48))((v36 + 24) & v24, v31);
  v41 = v81;
  v40 = v82;
  if (v39)
    goto LABEL_29;
  v42 = (unsigned __int8 *)(((unint64_t)v38 + v81) & v35);
LABEL_24:
  (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v37, v38, v4);
  v43 = ((unint64_t)v37 + v41) & v35;
  v44 = v42[v40];
  if (v44 >= 2)
  {
    if (v40 <= 3)
      v45 = v40;
    else
      v45 = 4;
    __asm { BR              X12 }
  }
  if (v44 == 1)
  {
    (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(((unint64_t)v37 + v41) & v35, v42, v88);
    v46 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v42, 1, v88))
    {
      memcpy((void *)(((unint64_t)v37 + v41) & v35), v42, v85);
    }
    else
    {
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(((unint64_t)v37 + v41) & v35, v42, v88);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)v37 + v41) & v35, 0, 1, v88);
    }
    v46 = 0;
  }
  v47 = v87 + 1;
  *(_BYTE *)(v43 + v40) = v46;
  if (v86)
  {
    *(_BYTE *)(v43 + v47) = v42[v47];
    v40 = v87;
  }
  else
  {
    if (v87 <= v47)
      v40 = v87 + 1;
    else
      v40 = v87;
    *(_BYTE *)(v43 + v40 + 1) = v42[v40 + 1];
  }
LABEL_42:
  v48 = v29 + v40 + 2;
  v49 = (_QWORD *)(((unint64_t)v37 + v48 + 7) & 0xFFFFFFFFFFFFFFF8);
  v50 = (uint64_t *)(((unint64_t)v38 + v48 + 7) & 0xFFFFFFFFFFFFFFF8);
  v51 = *v50;
  *v49 = *v50;
  v49[1] = v50[1];
  v52 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
  v53 = (uint64_t *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
  v54 = *v53;
  *v52 = *v53;
  v52[1] = v53[1];
  v55 = (_QWORD *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
  v56 = (uint64_t *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
  v57 = *v56;
  *v55 = *v56;
  v55[1] = v56[1];
  v58 = ((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8;
  v59 = ((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8;
  v60 = *(void **)v59;
  v61 = *(_BYTE *)(v59 + 8);
  swift_retain(v51);
  swift_retain(v54);
  swift_retain(v57);
  sub_1000A4100(v60, v61);
  *(_QWORD *)v58 = v60;
  *(_BYTE *)(v58 + 8) = v61;
  v62 = (_QWORD *)(((unint64_t)v55 + 39) & 0xFFFFFFFFFFFFFFF8);
  v63 = (uint64_t *)(((unint64_t)v56 + 39) & 0xFFFFFFFFFFFFFFF8);
  v64 = *v63;
  *v62 = *v63;
  v62[1] = v63[1];
  v65 = ((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = ((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8;
  v67 = *(_QWORD *)v66;
  v68 = *(_QWORD *)(v66 + 8);
  LOBYTE(v60) = *(_BYTE *)(v66 + 16);
  swift_retain(v64);
  sub_1000A410C(v67, v68, (char)v60);
  *(_QWORD *)v65 = v67;
  *(_QWORD *)(v65 + 8) = v68;
  *(_BYTE *)(v65 + 16) = (_BYTE)v60;
  v69 = ((unint64_t)v62 + 47) & 0xFFFFFFFFFFFFFFF8;
  v70 = ((unint64_t)v63 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = *(_QWORD *)v70;
  v72 = *(_QWORD *)(v70 + 8);
  LOBYTE(v60) = *(_BYTE *)(v70 + 16);
  v73 = sub_1000A411C(*(_QWORD *)v70, v72, (char)v60);
  *(_QWORD *)v69 = v71;
  *(_QWORD *)(v69 + 8) = v72;
  *(_BYTE *)(v69 + 16) = (_BYTE)v60;
  v74 = (_QWORD *)((v83 + v69) & v90);
  v75 = (uint64_t *)((v83 + v70) & v90);
  v76 = *((unsigned __int8 *)v75 + v84);
  if (v76 >= 2)
  {
    if (v84 <= 3)
      v77 = v84;
    else
      v77 = 4;
    __asm { BR              X12 }
  }
  v33 = a1;
  if (v76 != 1)
  {
    v32 = *v75;
    *v74 = *v75;
    *((_BYTE *)v74 + v84) = 0;
    goto LABEL_50;
  }
  (*(void (**)(_QWORD *, double))(v79 + 16))(v74, v73);
  *((_BYTE *)v74 + v84) = 1;
  return v33;
}

void sub_100151778()
{
  unsigned __int16 *v0;
  unsigned int v1;

  if (v1 >= 4)
  {
    if ((*v0 | (*((unsigned __int8 *)v0 + 2) << 16)) != 0xFFFFFFFF)
      JUMPOUT(0x10015147CLL);
    JUMPOUT(0x100151500);
  }
  JUMPOUT(0x1001514E8);
}

double sub_1001517AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  double result;

  v3 = a1 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
    swift_release(*(_QWORD *)(v3 + 16));
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4, v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_DWORD *)(v9 + 80) | v7;
  v12 = *(_DWORD *)(v9 + 80);
  v13 = (v3 + v11 + 24) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = *(_QWORD *)(v6 + 64);
  v16 = ~v12;
  v17 = v15 + v12;
  v18 = (v15 + v12) & ~v12;
  if (*(_DWORD *)(v6 + 84) <= 0xFDu)
  {
    v21 = (v17 + v13) & v16;
    if (v10)
      v22 = *(_QWORD *)(v9 + 64);
    else
      v22 = v14 + 1;
    if (v14 <= v22)
      v20 = v22;
    else
      v20 = *(_QWORD *)(v9 + 64);
    if (*(unsigned __int8 *)(v21 + v20) >= 2u)
      goto LABEL_34;
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t))(v6 + 48))(v13))
    {
      if (v10)
        v19 = v14;
      else
        v19 = v14 + 1;
      if (v14 <= v19)
        v20 = v19;
      else
        v20 = v14;
LABEL_34:
      v14 = v20;
      goto LABEL_35;
    }
    v21 = (v17 + v13) & v16;
    if (v10)
      v23 = v14;
    else
      v23 = v14 + 1;
    if (v14 <= v23)
      v20 = v23;
    else
      v20 = v14;
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  v24 = *(unsigned __int8 *)(v21 + v20);
  if (v24 >= 2)
  {
    if (v20 <= 3)
      v25 = v20;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  if (v24 == 1
    || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v21, 1, AssociatedTypeWitness))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v21, AssociatedTypeWitness);
  }
  if (!v10)
    goto LABEL_34;
LABEL_35:
  v26 = v13 + v18 + v14 + 9;
  v27 = (v26 & 0xFFFFFFFFFFFFFFF8) + 23;
  swift_release(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF8));
  v27 &= 0xFFFFFFFFFFFFF8uLL;
  swift_release(*(_QWORD *)v27);
  v28 = (_QWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v28);
  sub_1000A4224(*(id *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)((((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  v29 = (_QWORD *)(((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_release(*v29);
  sub_1000A4230(*(_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)((((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)((((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16));
  sub_1000A4240(*(_QWORD *)(((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)((((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)((((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8) + 16));
  v30 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  v31 = *(_DWORD *)(v30 + 80) & 0xF8 | 7;
  v32 = (_QWORD *)(((((unint64_t)v29 + 47) & 0xFFFFFFFFFFFFFFF8) + v31 + 17) & ~v31);
  v33 = *(_QWORD *)(v30 + 64);
  if (v33 <= 8)
    v33 = 8;
  v34 = *((unsigned __int8 *)v32 + v33);
  if (v34 >= 2)
  {
    if (v33 <= 3)
      v35 = v33;
    else
      v35 = 4;
    __asm { BR              X14 }
  }
  if (v34 == 1)
    (*(void (**)(void))(v30 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v32).n128_u64[0];
  return result;
}

unint64_t sub_100151AE0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  unsigned __int8 *v26;
  size_t v27;
  uint64_t v28;
  void *v29;
  size_t v30;
  size_t v31;
  unsigned int v32;
  uint64_t v33;
  char v34;
  size_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  char v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  v5 = (a1 & 0xFFFFFFFFFFFFFFF8) + 8;
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v7 < 0xFFFFFFFF)
  {
    *(_OWORD *)v5 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_QWORD *)v5 = v7;
    *(_QWORD *)(v5 + 8) = v8;
    swift_retain(v8);
  }
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = *(_DWORD *)(v14 + 80) | v12;
  v17 = *(_DWORD *)(v14 + 80);
  v18 = (void *)((v4 + v16 + 24) & ~v16);
  v19 = (const void *)((v6 + v16 + 24) & ~v16);
  v20 = *(_QWORD *)(v14 + 64);
  v21 = *(_QWORD *)(v11 + 64);
  v22 = ~v17;
  v23 = v21 + v17;
  v74 = AssociatedTypeWitness;
  v75 = (v21 + v17) & ~v17;
  if (*(_DWORD *)(v11 + 84) <= 0xFDu)
  {
    v26 = (unsigned __int8 *)(((unint64_t)v19 + v23) & v22);
    if (v15)
      v27 = *(_QWORD *)(v14 + 64);
    else
      v27 = v20 + 1;
    if (v20 <= v27)
      v25 = v27;
    else
      v25 = *(_QWORD *)(v14 + 64);
    if (v26[v25] >= 2u)
      goto LABEL_20;
    v15 = *(_DWORD *)(v14 + 84);
  }
  else
  {
    if ((*(unsigned int (**)(const void *))(v11 + 48))(v19))
    {
      if (v15)
        v24 = v20;
      else
        v24 = v20 + 1;
      if (v20 <= v24)
        v25 = v24;
      else
        v25 = v20;
LABEL_20:
      v28 = v75;
      memcpy(v18, v19, v25 + v75 + 2);
      goto LABEL_45;
    }
    v26 = (unsigned __int8 *)(((unint64_t)v19 + v23) & v22);
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v18, v19, v10);
  v29 = (void *)(((unint64_t)v18 + v23) & v22);
  if (v15)
    v30 = v20;
  else
    v30 = v20 + 1;
  if (v20 <= v30)
    v31 = v30;
  else
    v31 = v20;
  v32 = v26[v31];
  if (v32 >= 2)
  {
    if (v31 <= 3)
      v33 = v31;
    else
      v33 = 4;
    __asm { BR              X12 }
  }
  if (v32 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v14 + 16))(v29, v26, v74);
    v34 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v14 + 48))(v26, 1, v74))
    {
      memcpy(v29, v26, v30);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v14 + 16))(v29, v26, v74);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v29, 0, 1, v74);
    }
    v34 = 0;
  }
  v28 = v75;
  v35 = v20 + 1;
  *((_BYTE *)v29 + v31) = v34;
  if (v15)
  {
    *((_BYTE *)v29 + v35) = v26[v35];
    v25 = v20;
  }
  else
  {
    if (v20 <= v35)
      v25 = v20 + 1;
    else
      v25 = v20;
    *((_BYTE *)v29 + v25 + 1) = v26[v25 + 1];
  }
LABEL_45:
  v36 = v28 + v25 + 2;
  v37 = (_QWORD *)(((unint64_t)v18 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  v38 = (uint64_t *)(((unint64_t)v19 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  v39 = *v38;
  *v37 = *v38;
  v37[1] = v38[1];
  v40 = (_QWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  v41 = (uint64_t *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  *v40 = *v41;
  v40[1] = v41[1];
  v43 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = (uint64_t *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v45 = *v44;
  *v43 = *v44;
  v43[1] = v44[1];
  v46 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(void **)v47;
  v49 = *(_BYTE *)(v47 + 8);
  swift_retain(v39);
  swift_retain(v42);
  swift_retain(v45);
  sub_1000A4100(v48, v49);
  *(_QWORD *)v46 = v48;
  *(_BYTE *)(v46 + 8) = v49;
  v50 = (_QWORD *)(((unint64_t)v43 + 39) & 0xFFFFFFFFFFFFFFF8);
  v51 = (uint64_t *)(((unint64_t)v44 + 39) & 0xFFFFFFFFFFFFFFF8);
  v52 = *v51;
  *v50 = *v51;
  v50[1] = v51[1];
  v53 = ((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8;
  v54 = ((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  v55 = *(_QWORD *)v54;
  v56 = *(_QWORD *)(v54 + 8);
  LOBYTE(v48) = *(_BYTE *)(v54 + 16);
  swift_retain(v52);
  sub_1000A410C(v55, v56, (char)v48);
  *(_QWORD *)v53 = v55;
  *(_QWORD *)(v53 + 8) = v56;
  *(_BYTE *)(v53 + 16) = (_BYTE)v48;
  v57 = ((unint64_t)v50 + 47) & 0xFFFFFFFFFFFFFFF8;
  v58 = ((unint64_t)v51 + 47) & 0xFFFFFFFFFFFFFFF8;
  v59 = *(_QWORD *)v58;
  v60 = *(_QWORD *)(v58 + 8);
  LOBYTE(v48) = *(_BYTE *)(v58 + 16);
  sub_1000A411C(*(_QWORD *)v58, v60, (char)v48);
  *(_QWORD *)v57 = v59;
  *(_QWORD *)(v57 + 8) = v60;
  *(_BYTE *)(v57 + 16) = (_BYTE)v48;
  v61 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  v62 = *(_DWORD *)(v61 + 80) & 0xF8;
  v63 = v62 + 24;
  v64 = v62 + 24 + v57;
  v65 = ~v62 & 0xFFFFFFFFFFFFFFF8;
  v66 = (_QWORD *)(v64 & v65);
  v67 = (uint64_t *)((v63 + v58) & v65);
  if (*(_QWORD *)(v61 + 64) <= 8uLL)
    v68 = 8;
  else
    v68 = *(_QWORD *)(v61 + 64);
  v69 = *((unsigned __int8 *)v67 + v68);
  if (v69 >= 2)
  {
    if (v68 <= 3)
      v70 = v68;
    else
      v70 = 4;
    __asm { BR              X13 }
  }
  if (v69 == 1)
  {
    (*(void (**)(_QWORD *))(v61 + 16))(v66);
    v71 = 1;
  }
  else
  {
    v72 = *v67;
    *v66 = *v67;
    swift_retain(v72);
    v71 = 0;
  }
  *((_BYTE *)v66 + v68) = v71;
  return a1;
}

unint64_t sub_100151FD8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  size_t v31;
  size_t v32;
  size_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  size_t v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  void *v41;
  size_t v42;
  size_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned __int8 *v46;
  size_t v47;
  unsigned int v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  size_t v52;
  unsigned int v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  char v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  __n128 v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v114;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  v5 = (unint64_t *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v8 = (unint64_t *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v7 = *v8;
  if (*v5 < 0xFFFFFFFF)
  {
    if (v7 >= 0xFFFFFFFF)
    {
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
      *v5 = v7;
      v5[1] = v11;
      swift_retain(v11);
      goto LABEL_8;
    }
  }
  else
  {
    if (v7 >= 0xFFFFFFFF)
    {
      v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
      v10 = v5[1];
      *v5 = v7;
      v5[1] = v9;
      swift_retain(v9);
      swift_release(v10);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16));
  }
  *(_OWORD *)v5 = *(_OWORD *)v8;
LABEL_8:
  v13 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v12, v13, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v17 = AssociatedTypeWitness;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = *(_DWORD *)(v18 + 80) | v15;
  v20 = *(_DWORD *)(v18 + 80);
  v21 = (void *)((v4 + v19 + 24) & ~v19);
  v22 = (void *)((v6 + v19 + 24) & ~v19);
  v23 = *(unsigned int *)(v14 + 84);
  v111 = v18;
  v24 = *(_QWORD *)(v18 + 64);
  v25 = *(_QWORD *)(v14 + 64);
  v26 = ~v20;
  v27 = v25 + v20;
  v114 = (v25 + v20) & ~v20;
  v112 = *(_DWORD *)(v18 + 84);
  if (v23 > 0xFD)
  {
    v110 = AssociatedTypeWitness;
    v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
    v29 = v28(v21, v23, v13);
    v30 = v28(v22, v23, v13);
    if (v29)
    {
      if (v30)
      {
        if (v112)
          v31 = v24;
        else
          v31 = v24 + 1;
        if (v24 <= v31)
          v32 = v31;
        else
          v32 = v24;
        goto LABEL_27;
      }
      v34 = (unsigned __int8 *)(((unint64_t)v22 + v27) & v26);
      v17 = v110;
      goto LABEL_44;
    }
    if (v30)
    {
      if (v112)
        v37 = v24;
      else
        v37 = v24 + 1;
      if (v24 <= v37)
        v32 = v37;
      else
        v32 = v24;
      v17 = v110;
      goto LABEL_36;
    }
    v34 = (unsigned __int8 *)(((unint64_t)v22 + v27) & v26);
    v17 = v110;
    goto LABEL_59;
  }
  if (*(_DWORD *)(v18 + 84))
    v33 = *(_QWORD *)(v18 + 64);
  else
    v33 = v24 + 1;
  if (v24 <= v33)
    v32 = v33;
  else
    v32 = *(_QWORD *)(v18 + 64);
  v34 = (unsigned __int8 *)(((unint64_t)v22 + v27) & v26);
  v35 = v34[v32];
  if (*(unsigned __int8 *)((((unint64_t)v21 + v27) & v26) + v32) < 2u)
  {
    if (v35 >= 2)
    {
LABEL_36:
      (*(void (**)(void *, uint64_t))(v14 + 8))(v21, v13);
      v38 = ((unint64_t)v21 + v27) & v26;
      v39 = *(unsigned __int8 *)(v38 + v32);
      if (v39 >= 2)
      {
        if (v32 <= 3)
          v40 = v32;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      v36 = v114;
      if (v39 == 1 || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v111 + 48))(v38, 1, v17))
        (*(void (**)(unint64_t, uint64_t))(v111 + 8))(v38, v17);
      goto LABEL_77;
    }
LABEL_59:
    (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v21, v22, v13);
    v46 = (unsigned __int8 *)(((unint64_t)v21 + v27) & v26);
    if (v112)
      v47 = v24;
    else
      v47 = v24 + 1;
    if (v24 <= v47)
      v32 = v47;
    else
      v32 = v24;
    v36 = v114;
    if (v34 != v46)
    {
      v48 = v46[v32];
      if (v48 >= 2)
      {
        if (v32 <= 3)
          v49 = v32;
        else
          v49 = 4;
        __asm { BR              X12 }
      }
      if (v48 == 1 || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v111 + 48))(v46, 1, v17))
        (*(void (**)(unsigned __int8 *, uint64_t))(v111 + 8))(v46, v17);
      v53 = v34[v32];
      if (v53 >= 2)
      {
        if (v32 <= 3)
          v54 = v32;
        else
          v54 = 4;
        __asm { BR              X12 }
      }
      if (v53 == 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v111 + 16))(v46, v34, v17);
        v55 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v111 + 48))(v34, 1, v17))
        {
          memcpy(v46, v34, v47);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v111 + 16))(v46, v34, v17);
          (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v46, 0, 1, v17);
        }
        v55 = 0;
      }
      v46[v32] = v55;
    }
    v46[v32 + 1] = v34[v32 + 1];
    goto LABEL_100;
  }
  if (v35 >= 2)
  {
LABEL_27:
    v36 = v114;
LABEL_77:
    memcpy(v21, v22, v32 + v36 + 2);
LABEL_100:
    v51 = a1;
    goto LABEL_101;
  }
LABEL_44:
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v21, v22, v13);
  v41 = (void *)(((unint64_t)v21 + v27) & v26);
  if (v112)
    v42 = v24;
  else
    v42 = v24 + 1;
  if (v24 <= v42)
    v43 = v42;
  else
    v43 = v24;
  v44 = v34[v43];
  if (v44 >= 2)
  {
    if (v43 <= 3)
      v45 = v43;
    else
      v45 = 4;
    __asm { BR              X12 }
  }
  if (v44 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v111 + 16))(v41, v34, v17);
    v50 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v111 + 48))(v34, 1, v17))
    {
      memcpy(v41, v34, v42);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v111 + 16))(v41, v34, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v41, 0, 1, v17);
    }
    v50 = 0;
  }
  v51 = a1;
  v52 = v24 + 1;
  *((_BYTE *)v41 + v43) = v50;
  if (v112)
  {
    *((_BYTE *)v41 + v52) = v34[v52];
    v32 = v24;
    v36 = v114;
  }
  else
  {
    if (v24 <= v52)
      v32 = v24 + 1;
    else
      v32 = v24;
    *((_BYTE *)v41 + v32 + 1) = v34[v32 + 1];
    v36 = v114;
  }
LABEL_101:
  v56 = v36 + v32 + 2;
  v57 = (uint64_t *)(((unint64_t)v21 + v56 + 7) & 0xFFFFFFFFFFFFFFF8);
  v58 = (uint64_t *)(((unint64_t)v22 + v56 + 7) & 0xFFFFFFFFFFFFFFF8);
  v59 = *v57;
  v60 = *v58;
  *v57 = *v58;
  swift_retain(v60);
  swift_release(v59);
  v57[1] = v58[1];
  v61 = (uint64_t *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
  v62 = (uint64_t *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
  v63 = *v61;
  v64 = *v62;
  *v61 = *v62;
  swift_retain(v64);
  swift_release(v63);
  v61[1] = v62[1];
  v65 = (uint64_t *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
  v66 = (uint64_t *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8);
  v67 = *v65;
  v68 = *v66;
  *v65 = *v66;
  swift_retain(v68);
  swift_release(v67);
  v65[1] = v66[1];
  v69 = ((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8;
  v70 = ((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8;
  v71 = *(id *)v70;
  LOBYTE(v62) = *(_BYTE *)(v70 + 8);
  sub_1000A4100(*(id *)v70, (char)v62);
  v72 = *(void **)v69;
  v73 = *(_BYTE *)(v69 + 8);
  *(_QWORD *)v69 = v71;
  *(_BYTE *)(v69 + 8) = (_BYTE)v62;
  sub_1000A4224(v72, v73);
  v74 = (uint64_t *)(((unint64_t)v65 + 39) & 0xFFFFFFFFFFFFFFF8);
  v75 = (uint64_t *)(((unint64_t)v66 + 39) & 0xFFFFFFFFFFFFFFF8);
  v76 = *v74;
  v77 = *v75;
  *v74 = *v75;
  swift_retain(v77);
  swift_release(v76);
  v74[1] = v75[1];
  v78 = ((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  v79 = ((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFFFF8;
  v80 = *(_QWORD *)v79;
  v81 = *(_QWORD *)(v79 + 8);
  LOBYTE(v66) = *(_BYTE *)(v79 + 16);
  sub_1000A410C(*(_QWORD *)v79, v81, (char)v66);
  v82 = *(_QWORD *)v78;
  v83 = *(_QWORD *)(v78 + 8);
  v84 = *(_BYTE *)(v78 + 16);
  *(_QWORD *)v78 = v80;
  *(_QWORD *)(v78 + 8) = v81;
  *(_BYTE *)(v78 + 16) = (_BYTE)v66;
  sub_1000A4230(v82, v83, v84);
  v85 = ((unint64_t)v74 + 47) & 0xFFFFFFFFFFFFFFF8;
  v86 = ((unint64_t)v75 + 47) & 0xFFFFFFFFFFFFFFF8;
  v87 = *(_QWORD *)v86;
  v88 = *(_QWORD *)(v86 + 8);
  LOBYTE(v66) = *(_BYTE *)(v86 + 16);
  sub_1000A411C(*(_QWORD *)v86, v88, (char)v66);
  v89 = *(_QWORD *)v85;
  v90 = *(_QWORD *)(v85 + 8);
  v91 = *(_BYTE *)(v85 + 16);
  *(_QWORD *)v85 = v87;
  *(_QWORD *)(v85 + 8) = v88;
  *(_BYTE *)(v85 + 16) = (_BYTE)v66;
  sub_1000A4240(v89, v90, v91);
  v92 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(_DWORD *)(v93 + 80) & 0xF8;
  v95 = v94 + 24;
  v96 = v94 + 24 + v85;
  v97 = ~v94 & 0xFFFFFFFFFFFFFFF8;
  v98 = (_QWORD *)(v96 & v97);
  v99 = v95 + v86;
  v100 = (uint64_t *)(v99 & v97);
  if ((v96 & v97) != (v99 & v97))
  {
    v101 = v92;
    if (*(_QWORD *)(v93 + 64) <= 8uLL)
      v102 = 8;
    else
      v102 = *(_QWORD *)(v93 + 64);
    v103 = *((unsigned __int8 *)v98 + v102);
    if (v103 >= 2)
    {
      if (v102 <= 3)
        v104 = v102;
      else
        v104 = 4;
      __asm { BR              X12 }
    }
    if (v103 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v93 + 8))(v98, v92);
    else
      v105 = swift_release(*v98);
    v106 = *((unsigned __int8 *)v100 + v102);
    if (v106 >= 2)
    {
      if (v102 <= 3)
        v107 = v102;
      else
        v107 = 4;
      __asm { BR              X12 }
    }
    if (v106 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v93 + 16))(v98, v100, v101, v105);
      *((_BYTE *)v98 + v102) = 1;
    }
    else
    {
      v108 = *v100;
      *v98 = *v100;
      *((_BYTE *)v98 + v102) = 0;
      swift_retain(v108);
    }
  }
  return v51;
}

unint64_t sub_1001529B4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  unsigned __int8 *v26;
  size_t v27;
  uint64_t v28;
  void *v29;
  size_t v30;
  size_t v31;
  unsigned int v32;
  uint64_t v33;
  char v34;
  size_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  _OWORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  unint64_t v48;
  unint64_t v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  char v64;
  uint64_t v66;
  uint64_t v67;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
  v5 = a2 & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v6 < 0xFFFFFFFF)
  {
    *v4 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  else
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_QWORD *)v4 = v6;
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = v7;
  }
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v8, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v12 = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80) | v10;
  v16 = v5 + v15;
  v17 = *(_DWORD *)(v13 + 80);
  v18 = (void *)((v3 + v15 + 24) & ~v15);
  v19 = (const void *)((v16 + 24) & ~v15);
  v20 = *(_QWORD *)(v13 + 64);
  v21 = *(_QWORD *)(v9 + 64);
  v22 = ~v17;
  v23 = v21 + v17;
  v67 = (v21 + v17) & ~v17;
  if (*(_DWORD *)(v9 + 84) <= 0xFDu)
  {
    v66 = AssociatedTypeWitness;
    v26 = (unsigned __int8 *)(((unint64_t)v19 + v23) & v22);
    if (v14)
      v27 = *(_QWORD *)(v13 + 64);
    else
      v27 = v20 + 1;
    if (v20 <= v27)
      v25 = v27;
    else
      v25 = *(_QWORD *)(v13 + 64);
    if (v26[v25] >= 2u)
      goto LABEL_20;
    v14 = *(_DWORD *)(v13 + 84);
  }
  else
  {
    if ((*(unsigned int (**)(const void *))(v9 + 48))(v19))
    {
      if (v14)
        v24 = v20;
      else
        v24 = v20 + 1;
      if (v20 <= v24)
        v25 = v24;
      else
        v25 = v20;
LABEL_20:
      v28 = v67;
      memcpy(v18, v19, v25 + v67 + 2);
      goto LABEL_45;
    }
    v66 = v12;
    v26 = (unsigned __int8 *)(((unint64_t)v19 + v23) & v22);
  }
  (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v18, v19, v8);
  v29 = (void *)(((unint64_t)v18 + v23) & v22);
  if (v14)
    v30 = v20;
  else
    v30 = v20 + 1;
  if (v20 <= v30)
    v31 = v30;
  else
    v31 = v20;
  v32 = v26[v31];
  if (v32 >= 2)
  {
    if (v31 <= 3)
      v33 = v31;
    else
      v33 = 4;
    __asm { BR              X12 }
  }
  if (v32 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v13 + 32))(v29, v26, v66);
    v34 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v13 + 48))(v26, 1, v66))
    {
      memcpy(v29, v26, v30);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v13 + 32))(v29, v26, v66);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v66);
    }
    v34 = 0;
  }
  v28 = v67;
  v35 = v20 + 1;
  *((_BYTE *)v29 + v31) = v34;
  if (v14)
  {
    *((_BYTE *)v29 + v35) = v26[v35];
    v25 = v20;
  }
  else
  {
    if (v20 <= v35)
      v25 = v20 + 1;
    else
      v25 = v20;
    *((_BYTE *)v29 + v25 + 1) = v26[v25 + 1];
  }
LABEL_45:
  v36 = v28 + v25 + 2;
  v37 = (_OWORD *)(((unint64_t)v18 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_OWORD *)(((unint64_t)v19 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_OWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_OWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = (_OWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_OWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_QWORD *)v44;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = v45;
  v46 = (_OWORD *)(((unint64_t)v41 + 39) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_OWORD *)(((unint64_t)v42 + 39) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = ((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = ((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_OWORD *)v49;
  *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
  *(_OWORD *)v48 = v50;
  v51 = ((unint64_t)v46 + 47) & 0xFFFFFFFFFFFFFFF8;
  v52 = ((unint64_t)v47 + 47) & 0xFFFFFFFFFFFFFFF8;
  v53 = *(_OWORD *)v52;
  *(_BYTE *)(v51 + 16) = *(_BYTE *)(v52 + 16);
  *(_OWORD *)v51 = v53;
  v54 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  v55 = *(_DWORD *)(v54 + 80) & 0xF8;
  v56 = v55 + 24;
  v57 = v55 + 24 + v51;
  v58 = ~v55 & 0xFFFFFFFFFFFFFFF8;
  v59 = (_QWORD *)(v57 & v58);
  v60 = (_QWORD *)((v56 + v52) & v58);
  if (*(_QWORD *)(v54 + 64) <= 8uLL)
    v61 = 8;
  else
    v61 = *(_QWORD *)(v54 + 64);
  v62 = *((unsigned __int8 *)v60 + v61);
  if (v62 >= 2)
  {
    if (v61 <= 3)
      v63 = v61;
    else
      v63 = 4;
    __asm { BR              X13 }
  }
  if (v62 == 1)
  {
    (*(void (**)(_QWORD *))(v54 + 32))(v59);
    v64 = 1;
  }
  else
  {
    v64 = 0;
    *v59 = *v60;
  }
  *((_BYTE *)v59 + v61) = v64;
  return a1;
}

unint64_t sub_100152E2C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  size_t v31;
  size_t v32;
  size_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  size_t v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  void *v41;
  size_t v42;
  size_t v43;
  unsigned int v44;
  uint64_t v45;
  char v46;
  unsigned __int8 *v47;
  size_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  size_t v52;
  unsigned int v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void *v69;
  char v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  __n128 v99;
  unsigned int v100;
  uint64_t v101;
  char v102;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v108;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  v5 = (unint64_t *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v8 = (unint64_t *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  v7 = *v8;
  if (*v5 < 0xFFFFFFFF)
  {
    if (v7 >= 0xFFFFFFFF)
    {
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
      *v5 = v7;
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = v11;
      goto LABEL_8;
    }
  }
  else
  {
    if (v7 >= 0xFFFFFFFF)
    {
      v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
      v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
      *v5 = v7;
      v5[1] = v9;
      swift_release(v10);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16));
  }
  *(_OWORD *)v5 = *(_OWORD *)v8;
LABEL_8:
  v13 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v12, v13, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
  v17 = AssociatedTypeWitness;
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = *(_DWORD *)(v18 + 80) | v15;
  v20 = *(_DWORD *)(v18 + 80);
  v21 = (void *)((v4 + v19 + 24) & ~v19);
  v22 = (void *)((v6 + v19 + 24) & ~v19);
  v23 = *(unsigned int *)(v14 + 84);
  v105 = v18;
  v24 = *(_QWORD *)(v18 + 64);
  v25 = *(_QWORD *)(v14 + 64);
  v26 = ~v20;
  v27 = v25 + v20;
  v108 = (v25 + v20) & ~v20;
  v106 = *(_DWORD *)(v18 + 84);
  if (v23 > 0xFD)
  {
    v104 = AssociatedTypeWitness;
    v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
    v29 = v28(v21, v23, v13);
    v30 = v28(v22, v23, v13);
    if (v29)
    {
      if (v30)
      {
        if (v106)
          v31 = v24;
        else
          v31 = v24 + 1;
        if (v24 <= v31)
          v32 = v31;
        else
          v32 = v24;
        goto LABEL_27;
      }
      v34 = (unsigned __int8 *)(((unint64_t)v22 + v27) & v26);
      v17 = v104;
      goto LABEL_44;
    }
    if (v30)
    {
      if (v106)
        v37 = v24;
      else
        v37 = v24 + 1;
      if (v24 <= v37)
        v32 = v37;
      else
        v32 = v24;
      v17 = v104;
      goto LABEL_36;
    }
    v34 = (unsigned __int8 *)(((unint64_t)v22 + v27) & v26);
    v17 = v104;
    goto LABEL_58;
  }
  if (*(_DWORD *)(v18 + 84))
    v33 = *(_QWORD *)(v18 + 64);
  else
    v33 = v24 + 1;
  if (v24 <= v33)
    v32 = v33;
  else
    v32 = *(_QWORD *)(v18 + 64);
  v34 = (unsigned __int8 *)(((unint64_t)v22 + v27) & v26);
  v35 = v34[v32];
  if (*(unsigned __int8 *)((((unint64_t)v21 + v27) & v26) + v32) < 2u)
  {
    if (v35 >= 2)
    {
LABEL_36:
      (*(void (**)(void *, uint64_t))(v14 + 8))(v21, v13);
      v38 = ((unint64_t)v21 + v27) & v26;
      v39 = *(unsigned __int8 *)(v38 + v32);
      if (v39 >= 2)
      {
        if (v32 <= 3)
          v40 = v32;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      v36 = v108;
      if (v39 == 1 || !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v105 + 48))(v38, 1, v17))
        (*(void (**)(unint64_t, uint64_t))(v105 + 8))(v38, v17);
      goto LABEL_74;
    }
LABEL_58:
    (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v21, v22, v13);
    v47 = (unsigned __int8 *)(((unint64_t)v21 + v27) & v26);
    if (v106)
      v48 = v24;
    else
      v48 = v24 + 1;
    if (v24 <= v48)
      v32 = v48;
    else
      v32 = v24;
    v36 = v108;
    if (v34 != v47)
    {
      v49 = v47[v32];
      if (v49 >= 2)
      {
        if (v32 <= 3)
          v50 = v32;
        else
          v50 = 4;
        __asm { BR              X12 }
      }
      if (v49 == 1 || !(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v105 + 48))(v47, 1, v17))
        (*(void (**)(unsigned __int8 *, uint64_t))(v105 + 8))(v47, v17);
      v53 = v34[v32];
      if (v53 >= 2)
      {
        if (v32 <= 3)
          v54 = v32;
        else
          v54 = 4;
        __asm { BR              X12 }
      }
      if (v53 == 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v105 + 32))(v47, v34, v17);
        v55 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v105 + 48))(v34, 1, v17))
        {
          memcpy(v47, v34, v48);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v105 + 32))(v47, v34, v17);
          (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v47, 0, 1, v17);
        }
        v55 = 0;
      }
      v47[v32] = v55;
    }
    v47[v32 + 1] = v34[v32 + 1];
    goto LABEL_100;
  }
  if (v35 >= 2)
  {
LABEL_27:
    v36 = v108;
LABEL_74:
    memcpy(v21, v22, v32 + v36 + 2);
LABEL_100:
    v51 = a1;
    goto LABEL_101;
  }
LABEL_44:
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v21, v22, v13);
  v41 = (void *)(((unint64_t)v21 + v27) & v26);
  if (v106)
    v42 = v24;
  else
    v42 = v24 + 1;
  if (v24 <= v42)
    v43 = v42;
  else
    v43 = v24;
  v44 = v34[v43];
  if (v44 >= 2)
  {
    if (v43 <= 3)
      v45 = v43;
    else
      v45 = 4;
    __asm { BR              X12 }
  }
  v36 = v108;
  if (v44 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v105 + 32))(v41, v34, v17);
    v46 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v105 + 48))(v34, 1, v17))
    {
      memcpy(v41, v34, v42);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v105 + 32))(v41, v34, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v41, 0, 1, v17);
    }
    v46 = 0;
  }
  v51 = a1;
  v52 = v24 + 1;
  *((_BYTE *)v41 + v43) = v46;
  if (v106)
  {
    *((_BYTE *)v41 + v52) = v34[v52];
    v32 = v24;
  }
  else
  {
    if (v24 <= v52)
      v32 = v24 + 1;
    else
      v32 = v24;
    *((_BYTE *)v41 + v32 + 1) = v34[v32 + 1];
  }
LABEL_101:
  v56 = v36 + v32 + 2;
  v57 = (uint64_t *)(((unint64_t)v21 + v56 + 7) & 0xFFFFFFFFFFFFFFF8);
  v58 = (uint64_t *)(((unint64_t)v22 + v56 + 7) & 0xFFFFFFFFFFFFFFF8);
  v59 = *v57;
  *v57 = *v58;
  swift_release(v59);
  v57[1] = v58[1];
  v60 = (uint64_t *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (uint64_t *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
  v62 = *v60;
  *v60 = *v61;
  swift_release(v62);
  v60[1] = v61[1];
  v63 = (uint64_t *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
  v64 = (uint64_t *)(((unint64_t)v61 + 23) & 0xFFFFFFFFFFFFFFF8);
  v65 = *v63;
  *v63 = *v64;
  swift_release(v65);
  v63[1] = v64[1];
  v66 = ((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8;
  v67 = ((unint64_t)v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  v68 = *(_QWORD *)v67;
  LOBYTE(v67) = *(_BYTE *)(v67 + 8);
  v69 = *(void **)v66;
  v70 = *(_BYTE *)(v66 + 8);
  *(_QWORD *)v66 = v68;
  *(_BYTE *)(v66 + 8) = v67;
  sub_1000A4224(v69, v70);
  v71 = (uint64_t *)(((unint64_t)v63 + 39) & 0xFFFFFFFFFFFFFFF8);
  v72 = (uint64_t *)(((unint64_t)v64 + 39) & 0xFFFFFFFFFFFFFFF8);
  v73 = *v71;
  *v71 = *v72;
  swift_release(v73);
  v71[1] = v72[1];
  v74 = ((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8;
  v75 = ((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  v76 = *(_BYTE *)(v75 + 16);
  v77 = *(_QWORD *)v74;
  v78 = *(_QWORD *)(v74 + 8);
  v79 = *(_BYTE *)(v74 + 16);
  *(_OWORD *)v74 = *(_OWORD *)v75;
  *(_BYTE *)(v74 + 16) = v76;
  sub_1000A4230(v77, v78, v79);
  v80 = ((unint64_t)v71 + 47) & 0xFFFFFFFFFFFFFFF8;
  v81 = ((unint64_t)v72 + 47) & 0xFFFFFFFFFFFFFFF8;
  v82 = *(_BYTE *)(v81 + 16);
  v83 = *(_QWORD *)v80;
  v84 = *(_QWORD *)(v80 + 8);
  v85 = *(_BYTE *)(v80 + 16);
  *(_OWORD *)v80 = *(_OWORD *)v81;
  *(_BYTE *)(v80 + 16) = v82;
  sub_1000A4240(v83, v84, v85);
  v86 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(_DWORD *)(v87 + 80) & 0xF8;
  v89 = v88 + 24;
  v90 = v88 + 24 + v80;
  v91 = ~v88 & 0xFFFFFFFFFFFFFFF8;
  v92 = (_QWORD *)(v90 & v91);
  v93 = v89 + v81;
  v94 = (_QWORD *)(v93 & v91);
  if ((v90 & v91) != (v93 & v91))
  {
    v95 = v86;
    if (*(_QWORD *)(v87 + 64) <= 8uLL)
      v96 = 8;
    else
      v96 = *(_QWORD *)(v87 + 64);
    v97 = *((unsigned __int8 *)v92 + v96);
    if (v97 >= 2)
    {
      if (v96 <= 3)
        v98 = v96;
      else
        v98 = 4;
      __asm { BR              X12 }
    }
    if (v97 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v87 + 8))(v92, v86);
    else
      v99 = swift_release(*v92);
    v100 = *((unsigned __int8 *)v94 + v96);
    if (v100 >= 2)
    {
      if (v96 <= 3)
        v101 = v96;
      else
        v101 = 4;
      __asm { BR              X12 }
    }
    if (v100 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v87 + 32))(v92, v94, v95, v99);
      v102 = 1;
    }
    else
    {
      v102 = 0;
      *v92 = *v94;
    }
    *((_BYTE *)v92 + v96) = v102;
  }
  return v51;
}

uint64_t sub_100153770(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  unsigned int v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a3 + 24), v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v11 = 254;
  else
    v11 = v7;
  if ((v11 - 1) <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = v11 - 1;
  v13 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v13 + 64);
  if (v9)
    v15 = v10;
  else
    v15 = v10 + 1;
  if (v10 > v15)
    v15 = v10;
  if (!a2)
    return 0;
  v16 = *(_DWORD *)(v8 + 80);
  v17 = *(_DWORD *)(v8 + 80) | *(unsigned __int8 *)(v6 + 80);
  v18 = *(_QWORD *)(v6 + 64) + v16;
  if (a2 <= v12)
    goto LABEL_35;
  v19 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v20 = v14
      + ((v19
        + ((((((((((v15 + (v18 & ~v16) + ((v17 + 24) & ~v17) + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 39) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 17) & ~v19)
      + 1;
  v21 = 8 * v20;
  if (v20 <= 3)
  {
    v24 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v24))
    {
      v22 = *(_DWORD *)(a1 + v20);
      if (!v22)
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v24 > 0xFF)
    {
      v22 = *(unsigned __int16 *)(a1 + v20);
      if (!*(_WORD *)(a1 + v20))
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v24 < 2)
    {
LABEL_35:
      v27 = a1 & 0xFFFFFFFFFFFFFFF8;
      if (v11 < 1)
      {
        v29 = (v27 + v17 + 24) & ~v17;
        if (v7 < 0xFE)
        {
          v31 = *(unsigned __int8 *)(((v18 + v29) & ~v16) + v15);
          if (v31 >= 2)
            v30 = (v31 ^ 0xFF) + 1;
          else
            v30 = 0;
        }
        else
        {
          v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v29, v7, v5);
        }
        if (v30 >= 2)
          return v30 - 1;
        else
          return 0;
      }
      else
      {
        v28 = *(_QWORD *)(v27 + 8);
        if (v28 >= 0xFFFFFFFF)
          LODWORD(v28) = -1;
        if ((v28 + 1) >= 2)
          return v28;
        else
          return 0;
      }
    }
  }
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_35;
LABEL_26:
  v25 = (v22 - 1) << v21;
  if (v20 > 3)
    v25 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v26 = v20;
    else
      v26 = 4;
    __asm { BR              X11 }
  }
  return v12 + v25 + 1;
}

void sub_100153A0C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  size_t v20;
  _BYTE *v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;

  v7 = *(_QWORD *)(a4 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, *(_QWORD *)(a4 + 24), v7, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable)- 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v10 + 64);
  if (v9 <= 0xFE)
    v13 = 254;
  else
    v13 = v9;
  if ((v13 - 1) <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13 - 1;
  v15 = *(_QWORD *)(type metadata accessor for MusicPlayer.PlayabilityStatus(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  if (v11)
    v18 = v12;
  else
    v18 = v12 + 1;
  if (v12 > v18)
    v18 = v12;
  v19 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v17 = *(_DWORD *)(v10 + 80) | *(unsigned __int8 *)(v8 + 80);
  v20 = v16
      + ((v19
        + ((((((((((v18
                  + ((*(_QWORD *)(v8 + 64) + *(_DWORD *)(v10 + 80)) & ~(unint64_t)*(_DWORD *)(v10 + 80))
                  + 1
                  + ((v17 + 24) & ~v17)
                  + 8) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 39) & 0xFFFFFFFFFFFFFFF8)
          + 47) & 0xFFFFFFFFFFFFFFF8)
        + 17) & ~v19)
      + 1;
  if (a3 <= v14)
  {
    v22 = 0;
    v21 = a1;
  }
  else
  {
    v21 = a1;
    if (v20 <= 3)
    {
      v24 = ((a3 - v14 + ~(-1 << (8 * v20))) >> (8 * v20)) + 1;
      if (HIWORD(v24))
      {
        v22 = &dword_100000004;
      }
      else if (v24 >= 0x100)
      {
        v22 = 2;
      }
      else
      {
        v22 = v24 > 1;
      }
    }
    else
    {
      v22 = &_mh_execute_header.magic + 1;
    }
  }
  if (v14 < a2)
  {
    v23 = ~v14 + a2;
    if (v20 < 4)
    {
      if ((_DWORD)v20)
      {
        v25 = v23 & ~(-1 << (8 * v20));
        bzero(v21, v20);
        if ((_DWORD)v20 == 3)
        {
          *(_WORD *)v21 = v25;
          v21[2] = BYTE2(v25);
        }
        else if ((_DWORD)v20 == 2)
        {
          *(_WORD *)v21 = v25;
        }
        else
        {
          *v21 = v25;
        }
      }
    }
    else
    {
      bzero(v21, v20);
      *(_DWORD *)v21 = v23;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_100153E78()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x100153DA8);
}

void sub_100153E80()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x100153DA8);
}

void sub_100153E90()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
  JUMPOUT(0x100153DA8);
}

void sub_100153E9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10119F6B8)
  {
    v2 = type metadata accessor for MusicPlayer.PlayabilityStatus(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10119F6B8);
  }
}

uint64_t sub_100153EF0()
{
  return sub_10005610C(&qword_1011A2BE0, &qword_1011A2A98, (void (*)(void))sub_100153F24);
}

uint64_t sub_100153F24()
{
  return sub_10005610C(&qword_1011A2BE8, &qword_1011A2A90, (void (*)(void))sub_100153F48);
}

unint64_t sub_100153F48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2BF0;
  if (!qword_1011A2BF0)
  {
    v1 = sub_100044B54(&qword_1011A2A88);
    sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    sub_100049F28(&qword_1011A0FA8, (uint64_t *)&unk_1011BF930, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2BF0);
  }
  return result;
}

uint64_t sub_100153FE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for PlaybackButton(255, *a1, a1[1], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v4, 0, 0);
  v6 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  v8 = type metadata accessor for HStack(255, v6, WitnessTable);
  v9 = type metadata accessor for TitleAndIconLabelStyle(255);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v8);
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v23 = sub_100048748(&qword_1011A2AA0, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v20, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v12 = type metadata accessor for IconOnlyLabelStyle(255);
  v13 = sub_100048748(&qword_1011A2AA8, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v20 = v8;
  v21 = v12;
  v22 = v10;
  v23 = v13;
  v14 = swift_getOpaqueTypeMetadata2(255, &v20, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v15 = swift_getTupleTypeMetadata2(255, OpaqueTypeMetadata2, v14, 0, 0);
  v16 = type metadata accessor for TupleView(255, v15);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v16);
  v18 = type metadata accessor for ViewThatFits(255, v16, v17);
  return swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v18);
}

unint64_t sub_100154174()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A2C00;
  if (!qword_1011A2C00)
  {
    v1 = sub_100044B54(&qword_1011A2AC0);
    sub_10014F27C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A2C00);
  }
  return result;
}

uint64_t sub_1001541F8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_100154234(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_100154264(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  result = *v2;
  if (!*v2)
  {
    v4 = v2[1];
    v5 = sub_100007E8C((uint64_t *)&unk_10119CBE0);
    v6 = sub_100049F28(&qword_1011C5B90, (uint64_t *)&unk_10119CBE0, (uint64_t)&unk_100EC0A50);
    result = EnvironmentObject.error()(0, v4, v5, v6);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001542DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 48));
  result = *v2;
  if (!*v2)
  {
    v4 = v2[1];
    v5 = type metadata accessor for TabSelectionManager(0);
    v6 = sub_100048748((unint64_t *)&qword_10119CBF0, type metadata accessor for TabSelectionManager, (uint64_t)&unk_100EBC860);
    result = EnvironmentObject.error()(0, v4, v5, v6);
    __break(1u);
  }
  return result;
}

uint64_t sub_10015434C()
{
  return 16;
}

__n128 sub_100154358(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100154364@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10014E3D0(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_100154374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001544D0(a1, a2, 0, a4);
}

uint64_t sub_100154380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  _QWORD *v22;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for PlaybackButtonStack(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  v12 = v4 + v10;
  v14 = type metadata accessor for SourcedPlaybackIntent(0, v5, v6, v13);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v4 + v10, 1, v14))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v10, v5);
    v15 = v12 + *(int *)(v14 + 36);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6, v5, &protocol requirements base descriptor for PlaybackSource, &associated type descriptor for PlaybackSource.Playable);
    v19 = type metadata accessor for PlaybackEnqueueMode(0, AssociatedTypeWitness, v17, v18);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v19);
    v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (EnumCaseMultiPayload == 1
      || !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v15, 1, AssociatedTypeWitness))
    {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v15, AssociatedTypeWitness);
    }
  }
  v22 = (_QWORD *)(v12 + *(int *)(v7 + 36));
  if (*v22)
    swift_release(v22[1]);
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

uint64_t sub_1001544C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001544D0(a1, a2, 1, a4);
}

uint64_t sub_1001544D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t (**v8)(uint64_t);

  result = type metadata accessor for PlaybackButtonStack(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v8 = (uint64_t (**)(uint64_t))(v4 + *(int *)(result + 36) + ((v7 + 32) & ~v7));
  if (*v8)
    return (*v8)(a3);
  return result;
}

unint64_t sub_100154528()
{
  unint64_t result;

  result = qword_1011A2CD0;
  if (!qword_1011A2CD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayabilityStatusKey, &type metadata for PlayabilityStatusKey);
    atomic_store(result, (unint64_t *)&qword_1011A2CD0);
  }
  return result;
}

unint64_t sub_10015456C()
{
  unint64_t result;

  result = qword_1011A2CD8;
  if (!qword_1011A2CD8)
  {
    result = swift_getWitnessTable(&unk_100EC85F0, &type metadata for RecommendationDataKey);
    atomic_store(result, (unint64_t *)&qword_1011A2CD8);
  }
  return result;
}

unint64_t sub_1001545B0()
{
  unint64_t result;

  result = qword_1011A2CE0;
  if (!qword_1011A2CE0)
  {
    result = swift_getWitnessTable(&unk_100EC85B8, &type metadata for RootViewFeatureNameKey);
    atomic_store(result, (unint64_t *)&qword_1011A2CE0);
  }
  return result;
}

unint64_t sub_1001545F4()
{
  unint64_t result;

  result = qword_1011A2CE8;
  if (!qword_1011A2CE8)
  {
    result = swift_getWitnessTable(&unk_100EB66E0, &_s28PlaybackControllerContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011A2CE8);
  }
  return result;
}

uint64_t sub_100154638(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100154674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_BYTE *)(a1 + 136);
  sub_100055BBC(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100055BBC(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1001546FC(uint64_t a1)
{
  sub_100154744(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 48), *(_BYTE *)(a1 + 52));
  swift_retain();
  return a1;
}

void sub_100154744(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  if ((a8 & 1) != 0)
    sub_100154980(a1, a2, a3, a4, a5, a6, a7, HIBYTE(a7) & 1);
  else
    sub_100154758((uint64_t)a1, a2, a3, a4, a5, BYTE6(a5) & 1);
}

void sub_100154758(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    sub_100154938(a1, a2, a3, a4);
  else
    sub_10015477C(a1, a2, a3, a4, a5, BYTE5(a5) & 1);
}

void sub_10015477C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    sub_10015486C(a1, a2, a3, a4, a5, BYTE3(a5) & 1);
  else
    sub_100154790(a1, a2, a3, a4, a5, BYTE4(a5) & 1);
}

void sub_100154790(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  id v7;

  if ((a6 & 1) != 0)
  {
    swift_retain();
    v7 = a2;
    swift_retain();
  }
  else
  {
    sub_1001547DC(a1, a2, a3, a4, a5, HIBYTE(a5) & 1);
  }
}

uint64_t sub_1001547DC(uint64_t result, void *a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if ((a6 & 1) == 0)
    return sub_1001547EC(result, a2, a3, a4, a5, BYTE2(a5) & 1);
  return result;
}

uint64_t sub_1001547EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, __int16 a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_100154810(a1, a2, a3, a4, a5, HIBYTE(a5) & 1);
  else
    return sub_100154938(a1, a2, a3, a4);
}

uint64_t sub_100154810(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_100154834(a1, a2, a3, a4, a5 & 1);
  else
    return sub_100154950(a1, a2, a3, a4);
}

uint64_t sub_100154834(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  id v7;
  uint64_t result;

  if ((a5 & 1) == 0)
  {
    swift_retain(a4);
    v7 = a2;
    return swift_retain(a3);
  }
  return result;
}

double sub_10015486C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  double result;
  id v8;

  if ((a6 & 1) != 0)
  {
    sub_1001548B8(a1, a2, a3, a4, a5, BYTE2(a5) & 1);
  }
  else
  {
    swift_retain();
    v8 = a2;
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

uint64_t sub_1001548B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, __int16 a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_100154938(a1, a2, a3, a4);
  else
    return sub_1001548DC(a1, a2, a3, a4, a5, HIBYTE(a5) & 1);
}

uint64_t sub_1001548DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_100154950(a1, a2, a3, a4);
  else
    return sub_100154900(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_100154900(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  id v7;
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_retain(a4);
    v7 = a2;
    return swift_retain(a3);
  }
  return result;
}

uint64_t sub_100154938(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100154950(a1, a2, a3, a4);
}

uint64_t sub_100154950(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;

  swift_retain(a4);
  v6 = a2;
  return swift_retain(a3);
}

id sub_100154980(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  if ((a8 & 1) != 0)
    return sub_100154A68(a1, a2, a3, a4, a5, BYTE1(a5) & 1);
  else
    return sub_100154994(a1, a2, a3, a4, a5, a6, a7, BYTE2(a7) & 1);
}

id sub_100154994(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, char a8)
{
  if ((a8 & 1) != 0)
    return sub_1001549D4(a1, a2, a3, a4, a5, a6, a7, HIBYTE(a7) & 1);
  else
    return sub_1001549A8(a1, (uint64_t)a2, a3 & 1);
}

id sub_1001549A8(void *a1, uint64_t a2, char a3)
{
  id v4;

  if ((a3 & 1) != 0)
  {
    v4 = a1;
    swift_retain(a2);
    a1 = v4;
  }
  return a1;
}

id sub_1001549D4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  id v13;

  if ((a8 & 1) != 0)
  {
    v13 = a2;
    return (id)sub_100154A5C(a3, a4, a5, a6, a7 & 1);
  }
  else
  {
    swift_retain();
    return a1;
  }
}

uint64_t sub_100154A5C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    return swift_retain(result);
  return result;
}

id sub_100154A68(id result, void *a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if ((a6 & 1) == 0)
    return sub_100154A78((uint64_t)result, a2, a3, a4, a5 & 1);
  return result;
}

id sub_100154A78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  id v6;

  if ((a5 & 1) == 0)
    return a2;
  swift_retain(a4);
  v6 = a2;
  return (id)swift_retain(a3);
}

uint64_t sub_100154ABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 144);
  v13 = *(_QWORD *)(a1 + 168);
  v14 = *(_QWORD *)(a1 + 160);
  sub_1000E4440(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_100055BBC(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_100154B8C(v5, v6, v7, v8, v9, v12, v11);
  sub_1000E4440(v16, v15, v14, v13);
  return a1;
}

uint64_t sub_100154B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    sub_100055BBC(a4, a5, a6 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_100154BC4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[15];
  v3 = a1[16];
  v4 = a1[17];
  v5 = a1[18];
  v6 = a1[24];
  v7 = a1[25];
  v9 = a1[27];
  v10 = a1[26];
  sub_100154CBC(a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  sub_1000E4440(v2, v3, v4, v5);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000E4440(v6, v7, v10, v9);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

double sub_100154CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  double result;

  if (a7)
  {
    sub_100055BBC(a4, a5, a6 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

uint64_t sub_100154D1C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 232);
  sub_100055BBC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = v2;
  return a1;
}

double sub_100154DD0@<D0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  NSString *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  NSString *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  dispatch_semaphore_t v45;
  void *v46;
  Class isa;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  id v61;
  char v62[24];
  __int128 aBlock;
  uint64_t (*v64)(uint64_t, uint64_t);
  void *v65;
  Swift::Int (*v66)(uint64_t);
  uint64_t v67;

  v2 = v1;
  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v2, "activityType");
  if (!v7)
  {
    *(_QWORD *)(a1 + 24) = &type metadata for String;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
    return result;
  }
  v60 = (_OWORD *)a1;
  v61 = v7;
  v9 = swift_allocBox(v4);
  v11 = v10;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v58 = v11;
  v59 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  v14 = sub_100041F44((uint64_t)_swiftEmptyArrayStorage);
  v15 = objc_msgSend(v2, "activityType");
  if (!v15)
    goto LABEL_8;
  v16 = v15;
  v17 = v9;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeMessage);
  if (v18 == v21 && v20 == v22)
  {
    v35 = UIActivityTypeMessage;

    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_15;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  v26 = UIActivityTypeMessage;

  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v24);
  v9 = v17;
  if ((v25 & 1) != 0)
  {
LABEL_15:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    *(_QWORD *)&aBlock = v14;
    sub_1005ECBC8(0x3130343035, 0xE500000000000000, 0x6763737469, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
    v37 = aBlock;
    swift_bridgeObjectRelease(0x8000000000000000);
    v38 = swift_isUniquelyReferenced_nonNull_native(v37);
    *(_QWORD *)&aBlock = v37;
    v39 = 0xD000000000000012;
    v40 = 0x8000000100E2F3D0;
    v41 = 0x7463737469;
    v42 = 0xE500000000000000;
    goto LABEL_18;
  }
LABEL_8:
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
  v29 = v28;
  v30._countAndFlagsBits = v27;
  v30._object = v29;
  v31 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010A9EE8, v30);
  swift_bridgeObjectRelease(v29);
  if (v31 > 2)
    goto LABEL_19;
  v32 = swift_isUniquelyReferenced_nonNull_native(v14);
  *(_QWORD *)&aBlock = v14;
  sub_1005ECBC8(0x3130343035, 0xE500000000000000, 0x6763737469, 0xE500000000000000, v32);
  v33 = aBlock;
  swift_bridgeObjectRelease(0x8000000000000000);
  if ((_BYTE)v31)
  {
    if (v31 == 1)
      v34 = 0x8000000100E2F3B0;
    else
      v34 = 0x8000000100E2F370;
  }
  else
  {
    v34 = 0x8000000100E2F390;
  }
  v43 = swift_isUniquelyReferenced_nonNull_native(v33);
  *(_QWORD *)&aBlock = v33;
  sub_1005ECBC8(0xD000000000000011, v34, 0x7463737469, 0xE500000000000000, v43);
  v44 = aBlock;
  swift_bridgeObjectRelease(0x8000000000000000);
  v38 = swift_isUniquelyReferenced_nonNull_native(v44);
  *(_QWORD *)&aBlock = v44;
  v39 = 0x636973756DLL;
  v40 = 0xE500000000000000;
  v41 = 7368801;
  v42 = 0xE300000000000000;
LABEL_18:
  sub_1005ECBC8(v39, v40, v41, v42, v38);
  v14 = aBlock;
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_19:
  v45 = dispatch_semaphore_create(0);
  v46 = *(void **)&v2[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewControllerP33_84E0FBA0540C9AC5FB893F254C8A85DC29LyricsURLActivityItemProvider_snippetComponents];
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v48 = swift_allocObject(&unk_1010B35A0, 32, 7);
  *(_QWORD *)(v48 + 16) = v9;
  *(_QWORD *)(v48 + 24) = v45;
  v66 = sub_10015E70C;
  v67 = v48;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v64 = sub_100155358;
  v65 = &unk_1010B35B8;
  v49 = _Block_copy(&aBlock);
  v50 = v9;
  v51 = v67;
  swift_retain(v50);
  v52 = v45;
  objc_msgSend(v46, "URLWithAdditionalParameters:completion:", isa, v49, swift_release(v51).n128_f64[0]);
  _Block_release(v49);

  OS_dispatch_semaphore.wait()();
  v53 = v58;
  swift_beginAccess(v58, v62, 0, 0);
  sub_10004A160(v53, (uint64_t)v6, &qword_10119E460);
  v54 = v59;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v6, 1, v12) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_10119E460);
    v55 = v60;
    *((_QWORD *)v60 + 3) = &type metadata for String;
    swift_release(v50);

    *v55 = 0;
    v55[1] = 0xE000000000000000;
  }
  else
  {
    v65 = (void *)v12;
    v56 = sub_100049F68(&aBlock);
    (*(void (**)(_QWORD *, char *, uint64_t))(v54 + 32))(v56, v6, v12);

    sub_100048ABC(&aBlock, v60);
    *(_QWORD *)&result = swift_release(v50).n128_u64[0];
  }
  return result;
}

Swift::Int sub_1001552FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = swift_projectBox(a2);
  swift_beginAccess(v3, v5, 1, 0);
  sub_10015E72C(a1, v3);
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_100155358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, __n128);
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;

  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, __n128))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v9 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
  }
  else
  {
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  }
  v11 = swift_retain(v7);
  v8(v6, v11);
  swift_release(v7);
  return sub_10004FF60((uint64_t)v6, &qword_10119E460);
}

id sub_100155490()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for LyricsSharingActivityViewController.LyricsURLActivityItemProvider);
}

id sub_1001555BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  char v39;
  uint64_t v40;
  id v41;
  id v42;
  Class isa;
  objc_class *v44;
  id v45;
  id v46;
  char *v47;
  unint64_t v48;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  objc_super v59;
  _BYTE v60[24];

  v51 = a5;
  v54 = a4;
  v55 = a2;
  v56 = a3;
  v52 = a1;
  v58 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v58);
  v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v53 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong];
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v17(&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong], 1, 1, v7);
  v18 = &v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsID];
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsLoader] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_windowBackgroundView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_leadingSilence] = 0;
  v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_needsLyricsReporting] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_visibleDuration] = 0;
  v19 = &v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart];
  v20 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_isVisible] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_backgroundObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_foregroundObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_dismissalObserver] = 0;
  v50 = v8;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v22 = v52;
  v21(v15, v52, v7);
  v17(v15, 0, 1, v7);
  v23 = v54;
  swift_beginAccess(v16, v60, 33, 0);
  v24 = v5;
  v25 = (uint64_t)v15;
  v26 = v7;
  sub_1000A5508(v25, v16, &qword_10119E480);
  swift_endAccess(v60);
  v27 = (uint64_t)v53;
  v21(v53, v22, v7);
  LyricsLoader.Song.init(_:)(v27, (uint64_t)v12);
  LyricsLoader.Song.modelObjectSong.getter();
  v29 = v28;
  sub_10005B748((uint64_t)v12, type metadata accessor for LyricsLoader.Song);
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong] = v29;
  v30 = v18[1];
  v31 = v56;
  *v18 = v55;
  v18[1] = v31;
  swift_bridgeObjectRelease(v30);
  v32 = v23;
  sub_100064AC8(v23, (uint64_t)&v24[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationSource]);
  type metadata accessor for LyricsSelectionViewController(0);
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionViewController] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v33 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v34 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata] = v33;
  v35 = v22;
  v36 = sub_10056DC04();
  v37 = objc_msgSend(v36, "specialization");

  if (v37)
  {
    objc_opt_self(LPiTunesMediaSongMetadata);
    v38 = (void *)swift_dynamicCastObjCClass(v37);
    v39 = v51;
    v40 = v50;
    if (!v38)

  }
  else
  {
    v38 = 0;
    v39 = v51;
    v40 = v50;
  }
  v41 = *(id *)&v24[v34];
  v42 = objc_msgSend(v38, "artwork");
  objc_msgSend(v41, "setImage:", v42);

  isa = Array._bridgeToObjectiveC()().super.isa;
  v44 = (objc_class *)type metadata accessor for LyricsSharingActivityViewController(0);
  v59.receiver = v24;
  v59.super_class = v44;
  v45 = objc_msgSendSuper2(&v59, "initWithActivityItems:applicationActivities:", isa, 0);

  v46 = v45;
  v47 = v57;
  UIViewController.traitOverrides.getter();
  v48 = sub_10013B23C();
  dispatch thunk of UIMutableTraits.subscript.setter(1, &type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v48, v58, &protocol witness table for UITraitOverrides);
  UIViewController.traitOverrides.setter(v47);
  sub_100155A7C(v39 & 1);

  sub_100064B4C(v32);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v26);
  return v46;
}

double sub_100155A7C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  NSString *v10;
  NSString *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  NSString v17;
  NSString v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  NSString *v22;
  NSString *v23;
  Class v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  Class v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  objc_msgSend(v1, "setAllowsCustomPresentationStyle:", 1);
  objc_msgSend(v1, "setModalPresentationStyle:", 2);
  v4 = sub_100007E8C(&qword_10119E430);
  v5 = swift_allocObject(v4, 256, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA8160;
  type metadata accessor for ActivityType(0);
  v7 = v6;
  *(_QWORD *)(v5 + 32) = UIActivityTypeAirDrop;
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = UIActivityTypeCopyToPasteboard;
  *(_QWORD *)(v5 + 120) = v6;
  *(_QWORD *)(v5 + 88) = v6;
  *(_QWORD *)(v5 + 96) = UIActivityTypeMessage;
  v8 = qword_10119C708;
  v9 = UIActivityTypeAirDrop;
  v10 = UIActivityTypeCopyToPasteboard;
  v11 = UIActivityTypeMessage;
  if (v8 != -1)
    swift_once(&qword_10119C708, sub_1006DB7C0);
  v12 = (void *)qword_10124D820;
  *(_QWORD *)(v5 + 152) = v7;
  *(_QWORD *)(v5 + 128) = v12;
  v13 = qword_10119C710;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_10119C710, sub_1006DB7F4);
  v15 = (void *)qword_10124D828;
  *(_QWORD *)(v5 + 184) = v7;
  *(_QWORD *)(v5 + 160) = v15;
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v5 + 216) = v7;
  *(_QWORD *)(v5 + 192) = v17;
  v18 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v5 + 248) = v7;
  *(_QWORD *)(v5 + 224) = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setIncludedActivityTypes:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v20 = sub_100007E8C(&qword_10119E428);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EA7A80;
  *(_QWORD *)(v21 + 32) = v10;
  *(_QWORD *)(v21 + 40) = UIActivityTypeSharePlay;
  v22 = v10;
  v23 = UIActivityTypeSharePlay;
  v24 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setExcludedActivityTypes:", v24, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v25 = swift_allocObject(v4, 96, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100EA7A80;
  v26 = (void *)qword_10124D820;
  *(_QWORD *)(v25 + 32) = qword_10124D820;
  v27 = (void *)qword_10124D828;
  *(_QWORD *)(v25 + 88) = v7;
  *(_QWORD *)(v25 + 56) = v7;
  *(_QWORD *)(v25 + 64) = v27;
  v28 = v26;
  v29 = v27;
  v30 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setActivityTypeOrder:", v30, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v2, "setCustomViewController:", *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionViewController]);
  objc_msgSend(v2, "setPhotosHeaderMetadata:", *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata]);
  sub_100159CD8();
  sub_10015A1AC();
  if ((a1 & 1) != 0)
  {
    sub_100158B04();
    v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_needsLyricsReporting] = 1;
    v32 = swift_allocObject(&unk_1010B35F0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v2);
    v33 = type metadata accessor for NotificationObserver();
    swift_allocObject(v33, 64, 7);
    v34 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationDidEnterBackgroundNotification, 0, 1, 1, (uint64_t)sub_10015EC60, v32);
    v35 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_backgroundObserver];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_backgroundObserver] = v34;
    swift_release(v35);
    v36 = swift_allocObject(&unk_1010B35F0, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v2);
    swift_allocObject(v33, 64, 7);
    v37 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationWillEnterForegroundNotification, 0, 1, 1, (uint64_t)sub_10015EC68, v36);
    v38 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_foregroundObserver];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_foregroundObserver] = v37;
    swift_release(v38);
    v39 = (void *)UIPresentationControllerPresentationTransitionDidEndNotification;
    v40 = swift_allocObject(&unk_1010B35F0, 24, 7);
    swift_unknownObjectWeakInit(v40 + 16, v2);
    swift_allocObject(v33, 64, 7);
    v41 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v39, 0, 1, 1, (uint64_t)sub_10015EC70, v40);
    v42 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationObserver];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationObserver] = v41;
    swift_release(v42);
    v43 = (void *)UIPresentationControllerDismissalTransitionDidEndNotification;
    v44 = swift_allocObject(&unk_1010B35F0, 24, 7);
    swift_unknownObjectWeakInit(v44 + 16, v2);
    swift_allocObject(v33, 64, 7);
    v45 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v43, 0, 1, 1, (uint64_t)sub_10015EC78, v44);
    v46 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_dismissalObserver];
    *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_dismissalObserver] = v45;
    *(_QWORD *)&result = swift_release(v46).n128_u64[0];
  }
  return result;
}

void sub_100155FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Strong;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  v4 = __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v8 = &v18[-v7 - 8];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v14 = (char *)Strong;
    v15 = Strong + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart, v19, 0, 0);
    sub_10004A160(v15, (uint64_t)v8, (uint64_t *)&unk_1011A30A0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A30A0);
    }
    else
    {
      v16 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
      *(double *)&v14[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_visibleDuration] = *(double *)&v14[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_visibleDuration] - Date.timeIntervalSinceNow.getter(v16);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
      swift_beginAccess(v15, v18, 33, 0);
      sub_1000A5508((uint64_t)v6, v15, (uint64_t *)&unk_1011A30A0);
      swift_endAccess(v18);
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    }

  }
}

void sub_10015619C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    Date.init()(Strong);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
    v9 = (uint64_t)&v7[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart];
    swift_beginAccess(&v7[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart], v10, 33, 0);
    sub_1000A5508((uint64_t)v5, v9, (uint64_t *)&unk_1011A30A0);
    swift_endAccess(v10);

  }
}

void sub_100156294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  id v25;
  char v26[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_isVisible) != 1)
      goto LABEL_23;
    Notification.object.getter(&v22);
    if (!*((_QWORD *)&v23 + 1))
    {

      sub_10004FF60((uint64_t)&v22, &qword_10119DCC0);
      return;
    }
    v5 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    if ((swift_dynamicCast(&v25, &v22, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
      goto LABEL_23;
    v6 = v25;
    if ((static NSObject.== infix(_:_:)(v25, v4) & 1) == 0)
    {
      v7 = objc_msgSend(v4, "view");
      if (!v7)
      {
        __break(1u);
        return;
      }
      v8 = v7;
      v9 = objc_msgSend(v7, "window");

      if (v9)
      {
        v10 = objc_msgSend(v9, "windowScene");

        if (v10)
        {
          v11 = objc_msgSend(v10, "delegate");
          if (v11
            && (v25 = v11,
                v12 = sub_100007E8C(&qword_1011A9300),
                v13 = sub_100007E8C(&qword_1011A3120),
                (swift_dynamicCast(&v22, &v25, v12, v13, 6) & 1) != 0))
          {
            if (*((_QWORD *)&v23 + 1))
            {
              v14 = *(_QWORD *)(*sub_100007E68(&v22, *((uint64_t *)&v23 + 1))
                              + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
              swift_retain(v14);
              _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v22);

              if (v14)
              {
                v15 = *(_QWORD *)(v14 + 32);
                v16 = (id)(v15 & 0x3FFFFFFFFFFFFFFFLL);
                v17 = objc_msgSend(v6, "presentingViewController", swift_release(v14).n128_f64[0]);
                if (v17)
                {
                  v18 = v17;
                  if (v15 >> 62)
                    v15 = (unint64_t)v16;
                  v19 = v16;
                  v20 = v18;
                  v21 = static NSObject.== infix(_:_:)(v20, v15);

                  if ((v21 & 1) != 0)
                  {
                    sub_10015C224();

                    return;
                  }
                }

LABEL_23:
                return;
              }
              goto LABEL_19;
            }
          }
          else
          {
            v24 = 0;
            v22 = 0u;
            v23 = 0u;
          }
          sub_10004FF60((uint64_t)&v22, (uint64_t *)&unk_1011A3110);

          return;
        }
      }
    }
LABEL_19:

  }
}

void sub_100156550(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  id v32;
  char v33[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_isVisible) != 1)
      goto LABEL_23;
    Notification.object.getter(&v29);
    if (!*((_QWORD *)&v30 + 1))
    {

      sub_10004FF60((uint64_t)&v29, &qword_10119DCC0);
      return;
    }
    v8 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    if ((swift_dynamicCast(&v32, &v29, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
      goto LABEL_23;
    v9 = v32;
    v10 = objc_msgSend(v7, "view");
    if (!v10)
    {
      __break(1u);
      return;
    }
    v11 = v10;
    v12 = objc_msgSend(v10, "window");

    if (v12)
    {
      v13 = objc_msgSend(v12, "windowScene");

      if (v13)
      {
        v14 = objc_msgSend(v13, "delegate");
        if (v14
          && (v32 = v14,
              v15 = sub_100007E8C(&qword_1011A9300),
              v16 = sub_100007E8C(&qword_1011A3120),
              (swift_dynamicCast(&v29, &v32, v15, v16, 6) & 1) != 0))
        {
          if (*((_QWORD *)&v30 + 1))
          {
            v17 = *(_QWORD *)(*sub_100007E68(&v29, *((uint64_t *)&v30 + 1))
                            + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
            swift_retain(v17);
            _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v29);

            if (v17)
            {
              v18 = *(_QWORD *)(v17 + 32);
              v19 = (id)(v18 & 0x3FFFFFFFFFFFFFFFLL);
              v20 = objc_msgSend(v9, "presentingViewController", swift_release(v17).n128_f64[0]);
              if (v20)
              {
                v21 = v20;
                v22 = v18 >> 62 ? v19 : (id)v18;
                v23 = v19;
                v24 = v21;
                v25 = static NSObject.== infix(_:_:)(v24, v22);

                if ((v25 & 1) != 0)
                {
                  Date.init()(v26);
                  v27 = type metadata accessor for Date(0);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 0, 1, v27);
                  v28 = (uint64_t)&v7[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart];
                  swift_beginAccess(&v7[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart], &v29, 33, 0);
                  sub_1000A5508((uint64_t)v5, v28, (uint64_t *)&unk_1011A30A0);
                  swift_endAccess(&v29);

                  return;
                }
              }

LABEL_23:
              return;
            }
            goto LABEL_19;
          }
        }
        else
        {
          v31 = 0;
          v29 = 0u;
          v30 = 0u;
        }
        sub_10004FF60((uint64_t)&v29, (uint64_t *)&unk_1011A3110);

        return;
      }
    }
LABEL_19:

  }
}

void sub_1001568FC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  char *v24;
  unint64_t v25;
  char *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_super v40;

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for LyricsSharingActivityViewController(0);
  v40.receiver = v2;
  v40.super_class = v10;
  objc_msgSendSuper2(&v40, "viewIsAppearing:", a1 & 1);
  v11 = objc_msgSend(v2, "presentingViewController");
  if (!v11
    || (v12 = v11,
        v13 = type metadata accessor for NowPlayingViewController(0),
        v14 = swift_dynamicCastClass(v12, v13),
        v12,
        !v14))
  {
    v15 = objc_msgSend(v2, "view");
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, "window");

      if (v17)
      {
        if (*(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_windowBackgroundView])
        {

        }
        else
        {
          v39 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_windowBackgroundView;
          type metadata accessor for LyricsBackgroundView();
          v18 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
          v19 = *(void **)&v18[OBJC_IVAR___MusicLyricsBackgroundView_renderer];
          if (v19)
          {
            v20 = v19;
            dispatch thunk of Backdrop.CompositeRenderer.isBehindLyrics.setter(1);

          }
          v21 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
          objc_msgSend(v17, "bounds");
          objc_msgSend(v21, "setFrame:");
          objc_msgSend(v21, "setAutoresizingMask:", 18);
          v22 = v18;
          objc_msgSend(v17, "bounds");
          objc_msgSend(v22, "setFrame:");

          objc_msgSend(v22, "setAutoresizingMask:", 18);
          objc_msgSend(v21, "addSubview:", v22);
          v23 = objc_allocWithZone((Class)type metadata accessor for BackdropView());
          v24 = sub_10044CE0C();
          UIView.traitOverrides.getter();
          v25 = sub_10013B23C();
          dispatch thunk of UIMutableTraits.subscript.setter(1, &type metadata for HasAnimatedBackgroundTrait, &type metadata for HasAnimatedBackgroundTrait, v25, v7, &protocol witness table for UITraitOverrides);
          UIView.traitOverrides.setter(v9);
          v26 = v24;
          objc_msgSend(v17, "bounds");
          objc_msgSend(v26, "setFrame:");

          objc_msgSend(v26, "setAutoresizingMask:", 18);
          objc_msgSend(v21, "addSubview:", v26);
          v27 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
          objc_msgSend(v17, "bounds");
          objc_msgSend(v27, "setFrame:");
          objc_msgSend(v27, "setAutoresizingMask:", 18);
          v28 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
          objc_msgSend(v27, "setBackgroundColor:", v28);

          objc_msgSend(v21, "addSubview:", v27);
          objc_msgSend(v17, "insertSubview:atIndex:", v21, 0);
          v29 = *(void **)&v2[v39];
          *(_QWORD *)&v2[v39] = v21;
          v30 = v21;

          v31 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 1, 1, v31);
          type metadata accessor for MainActor(0);
          v32 = v22;
          v33 = v2;
          v35 = static MainActor.shared.getter(v34);
          v36 = (_QWORD *)swift_allocObject(&unk_1010B3898, 48, 7);
          v36[2] = v35;
          v36[3] = &protocol witness table for MainActor;
          v36[4] = v33;
          v36[5] = v32;
          v37 = sub_100980A1C((uint64_t)v6, (uint64_t)&unk_1011A3130, (uint64_t)v36);

          swift_release(v37);
          v33[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_isVisible] = 1;
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100156D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A63A0);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A14A0);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A1440);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119E480);
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v5[11] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[12] = v11;
  v5[13] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[14] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[15] = v14;
  v5[16] = v15;
  return swift_task_switch(sub_100156EA0, v14, v15);
}

uint64_t sub_100156EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  double Width;
  double Height;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  CGRect v39;
  CGRect v40;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_10004A160(v4, v3, &qword_10119E480);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 40);
    swift_release(*(_QWORD *)(v0 + 112));
    sub_10004FF60(v5, &qword_10119E480);
    v7 = objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong), "artworkCatalog");
    if (v7)
    {
      v8 = v7;
      v10 = *(void **)(v0 + 40);
      v9 = *(void **)(v0 + 48);
      v11 = swift_allocObject(&unk_1010B38C0, 32, 7);
      *(_QWORD *)(v11 + 16) = v9;
      *(_QWORD *)(v11 + 24) = v10;
      v12 = v9;
      v13 = v10;
      MPArtworkCatalog.requestImage(_:)((uint64_t)sub_10015EFD8, v11);

      swift_release(v11);
    }
LABEL_10:
    v26 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 80);
    v29 = *(_QWORD *)(v0 + 56);
    v28 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 104));
    swift_task_dealloc(v27);
    swift_task_dealloc(v26);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 72);
  v15 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  Song.artwork.getter(v15);
  v16 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v0 + 136) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v0 + 144) = v17;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    v18 = *(_QWORD *)(v0 + 72);
    swift_release(*(_QWORD *)(v0 + 112));
    sub_10004FF60(v18, &qword_1011A1440);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = *(void **)(v19 + OBJC_IVAR___MusicLyricsBackgroundView_renderer);
    if (v20)
    {
      v21 = v20;
      dispatch thunk of Backdrop.CompositeRenderer.setImage(_:animated:)(0, 0);

      v19 = *(_QWORD *)(v0 + 48);
    }
    v22 = *(void **)(v19 + OBJC_IVAR___MusicLyricsBackgroundView_metalView);
    v24 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 88);
    if (v22)
      objc_msgSend(v22, "setNeedsDisplay");
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    goto LABEL_10;
  }
  v32 = *(_QWORD *)(v0 + 56);
  v31 = *(_QWORD *)(v0 + 64);
  v33 = *(void **)(v0 + 48);
  objc_msgSend(v33, "frame");
  Width = CGRectGetWidth(v39);
  objc_msgSend(v33, "frame");
  Height = CGRectGetHeight(v40);
  v36 = type metadata accessor for Artwork.CropStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v31, 1, 1, v36);
  v37 = type metadata accessor for Artwork.ImageFormat(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v32, 1, 1, v37);
  v38 = (_QWORD *)swift_task_alloc(async function pointer to Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)[1]);
  *(_QWORD *)(v0 + 152) = v38;
  *v38 = v0;
  v38[1] = sub_1001571A8;
  return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56), 0, 0, Width, Height, 1.0);
}

uint64_t sub_1001571A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v2;
  v5 = (*v2)[19];
  (*v2)[20] = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[8];
    sub_10004FF60(v4[7], (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v6, (uint64_t *)&unk_1011A14A0);
    v7 = v4[15];
    v8 = v4[16];
    v9 = sub_10015735C;
  }
  else
  {
    v10 = v4[17];
    v11 = v4[18];
    v13 = v4[8];
    v12 = v4[9];
    v14 = v4[7];
    v4[21] = a1;
    sub_10004FF60(v14, (uint64_t *)&unk_1011A63A0);
    sub_10004FF60(v13, (uint64_t *)&unk_1011A14A0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
    v7 = v4[15];
    v8 = v4[16];
    v9 = sub_10015727C;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10015727C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 112));
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v2 + OBJC_IVAR___MusicLyricsBackgroundView_renderer);
  if (v3)
  {
    v4 = v3;
    dispatch thunk of Backdrop.CompositeRenderer.setImage(_:animated:)(v1, 0);

    v2 = *(_QWORD *)(v0 + 48);
  }
  v5 = *(void **)(v2 + OBJC_IVAR___MusicLyricsBackgroundView_metalView);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  if (v5)
    objc_msgSend(v5, "setNeedsDisplay");

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015735C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100157408(void *a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v14 = Logger.lyrics.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
    sub_10015EFE4(a1, 1);
    v15 = a4;
    sub_10015EFE4(a1, 1);
    v16 = (char *)v15;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v33 = swift_slowAlloc(64, -1);
      v36 = v33;
      *(_DWORD *)v19 = 136446466;
      v32[1] = v19 + 4;
      v20 = objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong], "humanDescription");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v34 = v8;
      v22 = v21;
      v24 = v23;

      v35 = sub_100322200(v22, v24, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);

      swift_bridgeObjectRelease(v24);
      *(_WORD *)(v19 + 12) = 2082;
      v35 = (uint64_t)a1;
      swift_errorRetain(a1);
      v25 = sub_100007E8C(&qword_1011A14B0);
      v26 = String.init<A>(describing:)(&v35, v25);
      v28 = v27;
      v35 = sub_100322200(v26, v27, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
      swift_bridgeObjectRelease(v28);
      sub_1000652D0(a1, 1);
      sub_1000652D0(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to retrieve image for song=%{public}s with error=%{public}s", (uint8_t *)v19, 0x16u);
      v29 = v33;
      swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      sub_1000652D0(a1, 1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v34);
    }
    else
    {
      sub_1000652D0(a1, 1);

      sub_1000652D0(a1, 1);
      sub_1000652D0(a1, 1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    v12 = *(void **)(a3 + OBJC_IVAR___MusicLyricsBackgroundView_renderer);
    if (v12)
    {
      sub_10015EFE4(a1, 0);
      v13 = v12;
      dispatch thunk of Backdrop.CompositeRenderer.setImage(_:animated:)(a1, 0);

    }
    else
    {
      v30 = a1;
    }
    v31 = *(void **)(a3 + OBJC_IVAR___MusicLyricsBackgroundView_metalView);
    if (v31)
      objc_msgSend(v31, "setNeedsDisplay");
    sub_1000652D0(a1, 0);
  }
}

id sub_1001577A8(char a1)
{
  char *v1;
  id result;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LyricsSharingActivityViewController(0);
  objc_msgSendSuper2(&v4, "viewDidDisappear:", a1 & 1);
  result = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_windowBackgroundView], "removeFromSuperview");
  if (v1[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_needsLyricsReporting] == 1)
  {
    sub_10015C224();
    return (id)sub_10015BB54(0x79616C705F776F6ELL, (char *)0xEB00000000676E69, *(double *)&v1[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_visibleDuration]);
  }
  return result;
}

void sub_100157888(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  uint64_t v19;
  id v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  Swift::String v100;
  void *object;
  Swift::String v102;
  void *v103;
  NSString v104;
  id v105;
  void *v106;
  void *v107;
  NSURL *v108;
  void *v109;
  void *v110;
  id v111;
  NSString v112;
  Class isa;
  Class v114;
  id v115;
  void *v116;
  char *v117;
  id v118;
  uint64_t v119;
  void *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSString v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  Class v129;
  id v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  Class v137;
  char *v138;
  void *v139;
  void *v140;
  uint64_t v141;
  void *v142;
  char *v143;
  char *v144;
  id v145;
  id v146;
  uint64_t v147;
  void *v148;
  id v149;
  id v150;
  uint64_t v151;
  void *v152;
  id v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  void *v160;
  id v161;
  id v162;
  uint64_t v163;
  void *v164;
  id v165;
  uint64_t v166;
  void *v167;
  id v168;
  uint64_t v169;
  void *v170;
  id v171;
  uint64_t v172;
  void *v173;
  id v174;
  uint64_t v175;
  void *v176;
  id v177;
  uint64_t v178;
  void *v179;
  id v180;
  id v181;
  void *v182;
  uint64_t v183;
  void *v184;
  id v185;
  id v186;
  uint64_t v187;
  char *v188;
  uint64_t *v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  char *v207;
  uint64_t v208;
  unint64_t v209;
  char v210[24];
  char v211[24];
  objc_super v212;
  NSURL v213;

  v2 = v1;
  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v187 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v8);
  v10 = (char *)&v187 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v11);
  v13 = (char *)&v187 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v187 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (objc_class *)type metadata accessor for LyricsSharingActivityViewController(0);
  v212.receiver = v2;
  v212.super_class = v18;
  objc_msgSendSuper2(&v212, "_prepareActivity:", a1);
  v19 = _s8ActivityCMa();
  if (swift_dynamicCastClass(a1, v19))
    return;
  v206 = v13;
  v202 = v7;
  v203 = v10;
  v204 = v5;
  sub_10015EC80(a1);
  v20 = objc_msgSend(a1, "activityType");
  v205 = v4;
  if (!v20)
    goto LABEL_7;
  v21 = v20;
  v207 = v2;
  v22 = v17;
  v23 = v15;
  v24 = v14;
  v25 = (char *)0xEE0065726168535FLL;
  v26 = 0x736567617373654DLL;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v29 = v28;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIActivityTypeMessage);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    swift_bridgeObjectRelease_n(v29, 2);

    v14 = v24;
    v15 = v23;
    v17 = v22;
    v2 = v207;
    goto LABEL_8;
  }
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v29);

  v14 = v24;
  v15 = v23;
  v17 = v22;
  v2 = v207;
  if ((v33 & 1) == 0)
  {
LABEL_7:
    v25 = (char *)0xEC00000065726168;
    v26 = 0x535F6C6169636F53;
  }
LABEL_8:
  sub_10015BB54(v26, v25, 0.0);
  swift_bridgeObjectRelease(v25);
  objc_opt_self(UIMessageActivity);
  v34 = swift_dynamicCastObjCClass(a1);
  if (!v34)
    return;
  v35 = (void *)v34;
  v36 = a1;
  v37 = objc_msgSend(v35, "messageComposeViewController");
  if (!v37)
    goto LABEL_17;
  v38 = v37;
  v39 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager];
  if (!v39
    || (swift_beginAccess(v39 + 72, v211, 0, 0), v40 = *(_QWORD *)(v39 + 72), (v41 = *(_QWORD *)(v40 + 16)) == 0))
  {

LABEL_17:
    return;
  }
  v194 = v14;
  v189 = (uint64_t *)(v39 + 72);
  v195 = v36;
  v42 = (_QWORD *)(v40 + 32);
  v43 = v42[4];
  v44 = v42[8];
  v45 = v42[10];
  v46 = v42[12];
  v47 = &v42[13 * v41];
  v200 = *(v47 - 9);
  v201 = v46;
  v199 = *(v47 - 5);
  v48 = *(v47 - 3);
  v49 = *(v47 - 1);
  swift_retain(v39);
  v196 = v43;
  v50 = v48;
  swift_bridgeObjectRetain();
  v197 = v44;
  v51 = v44;
  v52 = v200;
  swift_retain(v51);
  v198 = v45;
  v53 = v45;
  v54 = v199;
  swift_retain(v53);
  swift_retain(v201);
  swift_bridgeObjectRetain();
  swift_retain(v54);
  swift_retain(v48);
  v55 = objc_msgSend(v38, "contentURLs", swift_retain(v49).n128_f64[0]);
  if (!v55)
  {

    swift_release(v39);
    swift_bridgeObjectRelease(v52);
    swift_release(v54);
    swift_release(v48);
    v67 = v49;
LABEL_21:
    swift_release(v67);
    swift_bridgeObjectRelease(v196);
    swift_release(v197);
    swift_release(v198);
    v68 = v201;
    goto LABEL_22;
  }
  v56 = v55;
  v190 = v38;
  v193 = v50;
  v191 = v49;
  v192 = v39;
  v57 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, &type metadata for String);

  if (!v57[2])
  {
    swift_bridgeObjectRelease(v57);

    swift_release(v192);
    swift_bridgeObjectRelease(v200);
    swift_release(v199);
    swift_release(v193);
    v67 = v191;
    goto LABEL_21;
  }
  v58 = v57[4];
  v59 = v57[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v57);
  v60 = v206;
  URL.init(string:)(v58, v59);
  v61 = swift_bridgeObjectRelease(v59);
  v62 = v194;
  v63 = (*(uint64_t (**)(id, uint64_t, uint64_t, __n128))(v15 + 48))(v60, 1, v194, v61);
  v64 = v193;
  v66 = v199;
  v65 = v200;
  if (v63 == 1)
  {

    swift_bridgeObjectRelease(v65);
    swift_release(v66);
    swift_release(v64);
    swift_release(v191);
    swift_bridgeObjectRelease(v196);
    swift_release(v197);
    swift_release(v198);
    swift_release(v201);
    swift_release(v192);
    sub_10004FF60((uint64_t)v60, &qword_10119E460);
    return;
  }
  (*(void (**)(char *, id, uint64_t))(v15 + 32))(v17, v60, v62);
  v69 = (uint64_t)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong];
  swift_beginAccess(&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong], v210, 0, 0);
  v70 = (uint64_t)v203;
  sub_10004A160(v69, (uint64_t)v203, &qword_10119E480);
  v72 = v204;
  v71 = v205;
  v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v70, 1, v205);
  v187 = v15;
  if (v73)
  {
    sub_10004FF60(v70, &qword_10119E480);
    v74 = *(void **)&v2[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong];
    objc_opt_self(MPModelArtist);
    v75 = swift_dynamicCastObjCClass(v74);
    if (v75)
    {
      v76 = (void *)v75;
      v77 = v74;
      v78 = sub_100062210(v76);
      v79 = v74;
      v80 = v78;
      v81 = v64;
LABEL_29:
      v83 = v66;
LABEL_30:
      v84 = v200;
LABEL_31:
      v206 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
      objc_msgSend(v206, "setSpecialization:", v80);

      goto LABEL_32;
    }
    objc_opt_self(MPModelComposer);
    v85 = swift_dynamicCastObjCClass(v74);
    v81 = v64;
    if (v85)
    {
      v86 = (void *)v85;
      v87 = v74;
      v88 = sub_100061E4C(v86, 0);
      v79 = v74;
      v80 = v88;
      goto LABEL_29;
    }
    objc_opt_self(MPModelCurator);
    v141 = swift_dynamicCastObjCClass(v74);
    v83 = v66;
    if (v141)
    {
      v142 = (void *)v141;
      v206 = v74;
      v143 = v2;
      v144 = v17;
      v145 = objc_msgSend(v142, "editorialArtworkCatalog");
      v146 = sub_100061E4C(v142, v145);
      v79 = v74;
      v80 = v146;

      v17 = v144;
      v2 = v143;
      v84 = v200;

      goto LABEL_31;
    }
    objc_opt_self(MPModelAlbum);
    v147 = swift_dynamicCastObjCClass(v74);
    if (v147)
    {
      v148 = (void *)v147;
      v149 = v74;
      v150 = sub_100062500(v148);
LABEL_53:
      v79 = v74;
      v80 = v150;
      goto LABEL_30;
    }
    objc_opt_self(MPModelRadioStation);
    v151 = swift_dynamicCastObjCClass(v74);
    if (v151)
    {
      v152 = (void *)v151;
      v153 = v74;
      v150 = sub_10006287C(v152);
      goto LABEL_53;
    }
    v154 = v197;
    v155 = v2;
    v156 = v198;
    v157 = v201;
    v158 = v17;
    objc_opt_self(MPModelSong);
    v206 = v74;
    v159 = swift_dynamicCastObjCClass(v74);
    if (v159)
    {
      v160 = (void *)v159;
      v79 = v206;
      v161 = v206;
      v162 = sub_100062AA8(v160);
LABEL_66:
      v80 = v162;
LABEL_67:
      v17 = v158;
      v2 = v155;
      v81 = v193;
      v83 = v199;
      goto LABEL_30;
    }
    objc_opt_self(MPModelPlaylist);
    v163 = swift_dynamicCastObjCClass(v206);
    if (v163)
    {
      v164 = (void *)v163;
      v79 = v206;
      v165 = v206;
      v162 = sub_100062EC4(v164);
      goto LABEL_66;
    }
    objc_opt_self(MPModelTVShow);
    v166 = swift_dynamicCastObjCClass(v206);
    if (v166)
    {
      v167 = (void *)v166;
      v79 = v206;
      v168 = v206;
      v162 = sub_1000632A8(v167);
      goto LABEL_66;
    }
    objc_opt_self(MPModelMovie);
    v169 = swift_dynamicCastObjCClass(v206);
    if (v169)
    {
      v170 = (void *)v169;
      v79 = v206;
      v171 = v206;
      v162 = sub_1000632C0(v170);
      goto LABEL_66;
    }
    objc_opt_self(MPModelTVSeason);
    v172 = swift_dynamicCastObjCClass(v206);
    if (v172)
    {
      v173 = (void *)v172;
      v79 = v206;
      v174 = v206;
      v162 = sub_100063544(v173);
      goto LABEL_66;
    }
    objc_opt_self(MPModelTVEpisode);
    v175 = swift_dynamicCastObjCClass(v206);
    if (v175)
    {
      v176 = (void *)v175;
      v79 = v206;
      v177 = v206;
      v162 = sub_100063784(v176);
      goto LABEL_66;
    }
    objc_opt_self(MPModelSocialPerson);
    v178 = swift_dynamicCastObjCClass(v206);
    if (v178)
    {
      v179 = (void *)v178;
      v180 = v206;
      v181 = objc_msgSend(v179, "artworkCatalog");
      if (!v181)
        v181 = MPModelPerson.monogramArtworkCatalog.getter();
      v182 = v181;
      v80 = sub_100061E4C(v179, v181);

      v17 = v158;
      v2 = v155;
      v81 = v193;
      v83 = v199;
      v84 = v200;
      v79 = v206;
      goto LABEL_31;
    }
    objc_opt_self(MPModelRecordLabel);
    v183 = swift_dynamicCastObjCClass(v206);
    if (v183)
    {
      v184 = (void *)v183;
      v79 = v206;
      v185 = v206;
      v186 = objc_msgSend(v184, "artworkCatalog");
      v80 = sub_100063AD8(v184, v186);

      goto LABEL_67;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v62);

    swift_bridgeObjectRelease(v200);
    swift_release(v199);
    swift_release(v193);
    swift_release(v191);
    swift_bridgeObjectRelease(v196);
    swift_release(v154);
    swift_release(v156);
    swift_release(v157);
    v68 = v192;
LABEL_22:
    swift_release(v68);
    return;
  }
  v82 = v202;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v202, v70, v71);
  sub_10004FF60(v70, &qword_10119E480);
  v206 = sub_10056DC04();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v82, v71);
  v81 = v64;
  v83 = v66;
  v84 = v200;
LABEL_32:
  v207 = v2;
  v188 = v17;
  v89 = *v189;
  v90 = *(_QWORD *)(*v189 + 16);
  if (v90)
  {
    swift_bridgeObjectRetain_n(*v189, 2);
    v91 = 0;
    v205 = v89;
    v92 = (uint64_t *)(v89 + 128);
    v93 = 0xE000000000000000;
    do
    {
      v94 = *(v92 - 8);
      v96 = (uint64_t (*)(uint64_t))*(v92 - 5);
      v95 = *(v92 - 4);
      v97 = *(v92 - 2);
      v98 = *v92;
      v92 += 13;
      v208 = v91;
      v209 = v93;
      swift_bridgeObjectRetain();
      swift_retain(v95);
      swift_retain(v97);
      swift_retain(v98);
      v99 = swift_bridgeObjectRetain();
      v100._countAndFlagsBits = v96(v99);
      object = v100._object;
      String.append(_:)(v100);
      swift_bridgeObjectRelease(object);
      v102._countAndFlagsBits = 10;
      v102._object = (void *)0xE100000000000000;
      String.append(_:)(v102);
      swift_bridgeObjectRelease(v94);
      swift_release(v95);
      swift_release(v97);
      swift_release(v98);
      swift_bridgeObjectRelease(v93);
      v91 = v208;
      v93 = v209;
      --v90;
    }
    while (v90);
    swift_bridgeObjectRelease_n(v205, 2);
    v62 = v194;
    v81 = v193;
    v83 = v199;
    v84 = v200;
  }
  else
  {
    v93 = 0xE000000000000000;
  }
  v103 = String.trim()()._object;
  swift_bridgeObjectRelease(v93);
  v104 = String._bridgeToObjectiveC()();
  v105 = v206;
  objc_msgSend(v206, "setSelectedText:", v104);

  URL._bridgeToObjectiveC()(&v213);
  v107 = v106;
  objc_msgSend(v105, "setURL:", v106);

  URL._bridgeToObjectiveC()(v108);
  v110 = v109;
  objc_msgSend(v105, "setOriginalURL:", v109);

  v111 = objc_msgSend(objc_allocWithZone((Class)LPLyricExcerptMetadata), "init");
  v112 = String._bridgeToObjectiveC()();
  objc_msgSend(v111, "setLyrics:", v112, swift_bridgeObjectRelease(v103).n128_f64[0]);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v111, "setStartTime:", isa);

  v114 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v111, "setEndTime:", v114);

  v115 = objc_msgSend(v105, "specialization");
  if (v115)
  {
    v116 = v115;
    objc_opt_self(LPiTunesMediaSongMetadata);
    v117 = (char *)swift_dynamicCastObjCClass(v116);
    if (v117)
    {
      v118 = v116;
      v119 = *BagProvider.shared.unsafeMutableAddressor();
      swift_retain(v119);
      v120 = (void *)BagProvider.bag.getter();
      v121 = swift_release(v119).n128_u64[0];
      if (v120)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyStoreFrontID);
        v123 = v122;
        v124 = String._bridgeToObjectiveC()();
        v125 = objc_msgSend(v120, "stringForBagKey:", v124, swift_bridgeObjectRelease(v123).n128_f64[0]);

        if (v125)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v125);
          v127 = v126;

          v120 = String._bridgeToObjectiveC()();
          v121 = swift_bridgeObjectRelease(v127).n128_u64[0];
        }
        else
        {
          v120 = 0;
        }
      }
      objc_msgSend(v117, "setStoreFrontIdentifier:", v120, *(double *)&v121, v187);

      objc_msgSend(v117, "setLyricExcerpt:", v111);
      v129 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v117, "setOffers:", v129);

      v130 = objc_msgSend(*(id *)&v207[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata], "image");
      objc_msgSend(v117, "setArtwork:", v130);

    }
    v207 = v117;
    v128 = v81;

  }
  else
  {
    v128 = v81;
    v207 = 0;
  }
  v131 = v190;
  objc_msgSend(v190, "setBody:", 0, v187);
  v132 = v206;
  v133 = objc_msgSend(v206, "dataRepresentation");
  v134 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v133);
  v136 = v135;

  v137 = Data._bridgeToObjectiveC()().super.isa;
  sub_1000652DC(v134, v136);
  v138 = v188;
  URL._bridgeToObjectiveC()(&v213);
  v140 = v139;
  objc_msgSend(v131, "addRichLinkData:withWebpageURL:", v137, v139);

  swift_release(v192);
  swift_bridgeObjectRelease(v84);
  swift_release(v83);
  swift_release(v128);
  swift_release(v191);
  swift_bridgeObjectRelease(v196);
  swift_release(v197);
  swift_release(v198);
  swift_release(v201);

  (*(void (**)(char *, uint64_t))(v187 + 8))(v138, v62);
}

double sub_100158904(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double result;

  v6 = v5;
  v12 = sub_10015E580();
  if ((v13 & 1) != 0)
    v14 = 150;
  else
    v14 = v12;
  v15 = type metadata accessor for LyricsSelectionManager();
  swift_allocObject(v15, 88, 7);
  swift_bridgeObjectRetain();
  sub_10015EBB8(a2);
  swift_bridgeObjectRetain();
  v16 = sub_1002F410C(a1, a2, a3, a4, v14);
  v17 = swift_allocObject(&unk_1010B35F0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v6);
  v18 = v16[6];
  v19 = v16[7];
  v16[6] = sub_10015EC58;
  v16[7] = v17;
  sub_10004BA30(v18, v19);
  v20 = *(char **)(v6 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionViewController);
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager];
  *(_QWORD *)&v20[OBJC_IVAR____TtC5Music29LyricsSelectionViewController_selectionManager] = v16;
  swift_retain_n(v16, 2);
  v22 = v20;
  if (objc_msgSend(v22, "isViewLoaded", swift_release(v21).n128_f64[0]))
    sub_1002EF3C0();
  swift_release(v16);

  v23 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager) = v16;
  swift_retain(v16);
  swift_release(v23);
  *(double *)(v6 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_leadingSilence) = a5;
  sub_100159CD8();
  sub_10015A1AC();
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_100158A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100159CD8();

  }
  swift_beginAccess(v1, &v6, 0, 0);
  v4 = swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = (void *)v4;
    sub_10015A1AC();

  }
}

void sub_100158B04()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  double (*v7)(id, uint64_t (*)(uint64_t, uint64_t, unsigned __int8, uint64_t), uint64_t, __n128);
  id v8;
  __n128 v9;
  __n128 v10;
  _QWORD *v11;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LyricsLoader()), "init");
  v2 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsLoader;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsLoader);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsLoader) = v1;

  v4 = *(_QWORD **)(v0 + v2);
  if (v4)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong);
    v6 = swift_allocObject(&unk_1010B35F0, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v0);
    v7 = *(double (**)(id, uint64_t (*)(uint64_t, uint64_t, unsigned __int8, uint64_t), uint64_t, __n128))((swift_isaMask & *v4) + 0xD0);
    v11 = v4;
    v8 = v5;
    v9 = swift_retain(v6);
    v10.n128_f64[0] = v7(v8, sub_10015EAC4, v6, v9);
    swift_release_n(v6, 2, v10);

  }
}

uint64_t sub_100158C0C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void **aBlock;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;
  char v48[24];

  v40 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v48, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a5);
  if (result)
  {
    v17 = (void *)result;
    v18 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v38 = static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25, v37, v38, v39, v40, v41, aBlock, v43);
    v39 = v13;
    v26 = swift_allocObject(&unk_1010B37F8, 56, 7);
    *(_QWORD *)(v26 + 16) = a1;
    *(_QWORD *)(v26 + 24) = a2;
    *(_BYTE *)(v26 + 32) = a3;
    v27 = v40;
    *(_QWORD *)(v26 + 40) = v17;
    *(_QWORD *)(v26 + 48) = v27;
    v46 = sub_10015EB10;
    v47 = v26;
    aBlock = _NSConcreteStackBlock;
    v43 = 1107296256;
    v44 = sub_1001DBD98;
    v45 = &unk_1010B3810;
    v28 = _Block_copy(&aBlock);
    v37 = v10;
    v29 = v28;
    v30 = v47;
    sub_10015EB20(a1, a2, a3);
    v31 = v17;
    swift_errorRetain(v27);
    v32 = swift_release(v30);
    static DispatchQoS.unspecified.getter(v32);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v33 = sub_10015E7E0();
    v34 = sub_100007E8C((uint64_t *)&unk_1011A2120);
    v35 = sub_10015E828();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v34, v35, v9, v33);
    v36 = (void *)v38;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v15, v39);
  }
  return result;
}

uint64_t sub_100158E58(double *a1, uint64_t a2, int a3, char *a4, uint64_t a5)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  unsigned __int8 v34;
  id v35;
  void **v36;
  double v37;
  double v38;
  float v39;
  double v40;
  uint64_t v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  NSString v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void **v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  char v94;
  void **aBlock;
  uint64_t v96;
  void (*v97)(uint64_t, void *);
  void *v98;
  id (*v99)();
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;

  v10 = ~(_BYTE)a3;
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v10 || (a3 & 1) == 0)
    return sub_1001595F0(a5);
  v20 = *((unsigned __int8 *)a1 + 56);
  v21 = sub_100055BBC((uint64_t)a1, a2, 1);
  if (!v20)
  {
    v57 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000059, 0x8000000100E2F610);
    static Locale.current.getter(v57);
    String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v13, 0, 0, 256);
    v59 = v58;
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v59);
    v61 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v60, 1);

    v62 = String.okButtonTitle.unsafeMutableAddressor()[1];
    v63 = swift_allocObject(&unk_1010B3848, 24, 7);
    *(_QWORD *)(v63 + 16) = a4;
    swift_bridgeObjectRetain();
    v64 = a4;
    v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v62);
    v99 = sub_10015EBA0;
    v100 = (void *)v63;
    aBlock = _NSConcreteStackBlock;
    v96 = 1107296256;
    v97 = sub_100223938;
    v98 = &unk_1010B3860;
    v66 = _Block_copy(&aBlock);
    swift_release(v100);
    v67 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v65, 0, v66);
    _Block_release(v66);

    objc_msgSend(v61, "addAction:", v67);
    v91 = 0u;
    v92 = 0u;
    v93 = 0;
    v94 = -1;
    PresentationSource.init(viewController:position:)(v64, (uint64_t)&v91, (uint64_t)&aBlock);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v61, 1, (id)0xF, (void **)1, 0, 0);

    sub_10015EB88((uint64_t)a1, a2, a3);
    return sub_100064B4C((uint64_t)&aBlock);
  }
  v89 = a2;
  sub_1002425C8(v21);
  v22 = *((_QWORD *)a1 + 3);
  v23 = &a4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsID];
  v24 = *(_QWORD *)&a4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsID + 8];
  *(double *)v23 = a1[2];
  *((_QWORD *)v23 + 1) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v25 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 432))();
  v90 = a3;
  v88 = a4;
  v87 = v19;
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, "tracklist");

    if (v27)
    {
      if ((MPCPlayerResponseTracklist.playingItemSupportsTimeSyncedLyrics.getter() & 1) != 0)
      {
        v28 = objc_msgSend(v27, "playingItem");
        v29 = v28;
        if (!v28)
        {

          v42 = 0;
          v43 = 0;
          v44 = 0;
          v55 = 0;
          v45 = 0;
          v25 = 0;
          v46 = 0;
          v47 = 0;
          v48 = 0;
          v50 = 0;
          v49 = 0;
          v52 = 0;
          goto LABEL_28;
        }
        v30 = objc_msgSend(v28, "metadataObject");
        if (v30
          && (v31 = v30,
              v32 = objc_msgSend(v30, "identifiers"),
              v31,
              v33 = objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong], "identifiers"), v34 = objc_msgSend(v32, "intersectsSet:", v33), v33, v32, (v34 & 1) != 0))
        {
          v35 = objc_msgSend(v29, "duration");
          v36 = aBlock;
          v37 = *(double *)&v98;
          v38 = *(double *)&v99;
          v39 = *(float *)&v100;
          v40 = v38 + (static Date.timeIntervalSinceReferenceDate.getter(v35) - *(double *)&v36) * v39;
          if (v40 >= v37)
            v40 = v37;
          (*(void (**)(__int128 *__return_ptr, uint64_t, double))(*(_QWORD *)a1 + 296))(&v91, 1, fmax(v40, 0.0));

          if (*((_QWORD *)&v92 + 1))
          {
            v41 = sub_100007E8C((uint64_t *)&unk_1011A3100);
            if (swift_dynamicCast(&aBlock, &v91, v41, &type metadata for Lyrics.TextLine, 6))
            {
              v42 = aBlock;
              v43 = v96;
              v44 = (uint64_t)v97;
              v45 = (uint64_t)v99;
              v25 = v100;
              v46 = v101;
              v47 = v102;
              v48 = v103;
              v50 = v104;
              v49 = v105;
              v51 = 256;
              v52 = v106;
              v29 = v107;
              if (!BYTE1(v98))
                v51 = 0;
              v53 = v51 | v98;
              v54 = 0x10000;
              if (!BYTE2(v98))
                v54 = 0;
              v55 = v53 | v54;
              goto LABEL_28;
            }
          }
          else
          {
            sub_10004FF60((uint64_t)&v91, &qword_1011A30F8);
          }
        }
        else
        {

        }
      }
      else
      {

      }
    }
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v55 = 0;
    v45 = 0;
    v25 = 0;
  }
  else
  {
    v42 = 0;
    v43 = 0;
    v44 = 0;
    v55 = 0;
    v45 = 0;
  }
  v46 = 0;
  v47 = 0;
  v48 = 0;
  v50 = 0;
  v49 = 0;
  v52 = 0;
  v29 = 0;
LABEL_28:
  v80 = v42;
  v81 = v55;
  v82 = v44;
  v83 = v45;
  v84 = (uint64_t)v25;
  v85 = v46;
  v86 = v47;
  aBlock = v42;
  v96 = v43;
  v97 = (void (*)(uint64_t, void *))v44;
  v98 = (void *)v55;
  v99 = (id (*)())v45;
  v100 = v25;
  v101 = v46;
  v102 = v47;
  v103 = v48;
  v104 = v50;
  v105 = v49;
  v106 = v52;
  v107 = v29;
  v68 = *((_QWORD *)a1 + 6);
  v69 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 192);
  v70 = swift_bridgeObjectRetain();
  v71 = v69(v70);
  v73 = v72;
  v74 = v88;
  sub_100158904(v68, (uint64_t *)&aBlock, v71, v72, a1[11]);
  swift_bridgeObjectRelease(v68);
  swift_bridgeObjectRelease(v73);
  v75 = (uint64_t)v87;
  Date.init()(v76);
  v77 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v75, 0, 1, v77);
  v78 = (uint64_t)&v74[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart];
  swift_beginAccess(v78, &v91, 33, 0);
  sub_1000A5508(v75, v78, (uint64_t *)&unk_1011A30A0);
  swift_endAccess(&v91);
  sub_10015EB38((uint64_t)v80, v43, v82, v81, v83, v84, v85, v86, v48, v50, v49, v52, (uint64_t)v29);
  return sub_10015EB88((uint64_t)a1, v89, v90);
}

uint64_t sub_1001595F0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __objc2_prot_list **v9;
  __objc2_prot_list **p_base_prots;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  NSString v36;
  id v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  void *v53;
  id v54;
  id v55;
  _BYTE v57[16];
  void **aBlock;
  uint64_t v59;
  void (*v60)(uint64_t, void *);
  void *v61;
  void *v62;
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  char v66;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v5 = &v57[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (__objc2_prot_list **)(&JSAccount + 40);
  p_base_prots = (__objc2_prot_list **)(&JSAccount + 40);
  if (!a1)
  {
    v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E2F530);
    static Locale.current.getter(v22);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v24 = v23;
    v25 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000029, 0x8000000100E2F550);
    static Locale.current.getter(v25);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v27 = v26;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
LABEL_13:
    v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v46 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, v38, 1);
    goto LABEL_14;
  }
  v11 = (void *)_convertErrorToNSError(_:)(a1);
  v12 = objc_msgSend(v11, "domain");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v13 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v19);
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v15).n128_u64[0];
    if ((v20 & 1) == 0)
      goto LABEL_12;
  }
  if (objc_msgSend(v11, "code", v21) != (id)-3005)
  {
LABEL_12:

    v47 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E2F580);
    static Locale.current.getter(v47);
    String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
    v27 = v48;
    v28 = 0;
    p_base_prots = &JSAccount.base_prots;
    v9 = &JSAccount.base_prots;
    goto LABEL_13;
  }
  v29 = String.LocalizationValue.init(stringLiteral:)(0x746963696C707845, 0xEF73636972794C20);
  static Locale.current.getter(v29);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v31 = v30;
  v32 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000068, 0x8000000100E2F5A0);
  static Locale.current.getter(v32);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v34 = v33;
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  v37 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v35, v36, 1);

  v38 = v37;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  static Locale.current.getter(v39);
  String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, 0, v5, 0, 0, 256);
  v41 = v40;
  v42 = swift_allocObject(&unk_1010B37A8, 24, 7);
  *(_QWORD *)(v42 + 16) = v1;
  v43 = v1;
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v62 = sub_10015EABC;
  v63 = v42;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100223938;
  v61 = &unk_1010B37C0;
  v45 = _Block_copy(&aBlock);
  swift_release(v63);
  v9 = &JSAccount.base_prots;
  v28 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v44, 0, v45);
  _Block_release(v45);

  p_base_prots = &JSAccount.base_prots;
  objc_msgSend(v38, "addAction:", v28);

  v46 = v38;
LABEL_14:

  v49 = String.okButtonTitle.unsafeMutableAddressor()[1];
  v50 = swift_allocObject(&unk_1010B3758, 24, 7);
  *(_QWORD *)(v50 + 16) = v1;
  v51 = v1;
  swift_bridgeObjectRetain();
  v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  v62 = sub_10015EFF0;
  v63 = v50;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_100223938;
  v61 = &unk_1010B3770;
  v53 = _Block_copy(&aBlock);
  swift_release(v63);
  v54 = objc_msgSend((id)objc_opt_self(UIAlertAction), (SEL)v9[406], v52, 0, v53);
  _Block_release(v53);

  objc_msgSend(v46, (SEL)p_base_prots[412], v54);
  objc_msgSend(v46, "setPreferredAction:", v54);
  memset(v64, 0, sizeof(v64));
  v65 = 0;
  v66 = -1;
  PresentationSource.init(viewController:position:)(v51, (uint64_t)v64, (uint64_t)&aBlock);
  v55 = v46;
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v55, 1, (id)0xF, (void **)1, 0, 0);

  return sub_100064B4C((uint64_t)&aBlock);
}

void sub_100159C5C(int a1, id a2)
{
  id v2;
  id v3;

  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  v2 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v2)
  {
    v3 = v2;
    LSApplicationWorkspace.openRestrictions()();

  }
}

id sub_100159CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[32];

  v1 = v0;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager);
  if (v8)
  {
    swift_beginAccess(v8 + 9, v45, 0, 0);
    v9 = *(_QWORD *)(v8[9] + 16);
    v10 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata;
    v11 = *(void **)(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata);
    swift_retain(v8);
    v12 = v11;
    if (v9)
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
      v44 = *(_QWORD *)(v8[9] + 16);
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v44, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v14._object = (void *)0x8000000100E2F4B0;
      v14._countAndFlagsBits = 0xD000000000000011;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
      v15 = String.LocalizationValue.init(stringInterpolation:)(v3);
      static Locale.current.getter(v15);
      String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v5, 0, 0, 256);
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v12, "setTitle:", v18);

      v19 = *(id *)(v1 + v10);
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2);
      v20._countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
      v44 = v8[8];
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v44, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v21._countAndFlagsBits = 543584032;
      v21._object = (void *)0xE400000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
      v44 = v8[2];
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v44, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v22._countAndFlagsBits = 0x7463617261686320;
      v22._object = (void *)0xED00002973287265;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
      v23 = String.LocalizationValue.init(stringInterpolation:)(v3);
      static Locale.current.getter(v23);
      String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v5, "5 of 25 characters", 18, 2);
      v25 = v24;
      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
      objc_msgSend(v19, "setSummary:", v26);

    }
    else
    {
      v34 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100E2F4F0);
      static Locale.current.getter(v34);
      String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v5, 0, 0, 256);
      v36 = v35;
      v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      objc_msgSend(v12, "setTitle:", v37);

      v38 = *(id *)(v1 + v10);
      v39 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E2F510);
      static Locale.current.getter(v39);
      String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v5, 0, 0, 256);
      v41 = v40;
      v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v41);
      objc_msgSend(v38, "setSummary:", v42);

    }
    return (id)swift_release(v8);
  }
  else
  {
    v27 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata;
    v28 = *(id *)(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_headerMetadata);
    v29 = String.LocalizationValue.init(stringLiteral:)(0xE2676E6964616F4CLL, 0xAA0000000000A680);
    static Locale.current.getter(v29);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v5, 0, 0, 256);
    v31 = v30;
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    objc_msgSend(v28, "setTitle:", v32);

    return objc_msgSend(*(id *)(v1 + v27), "setSummary:", 0);
  }
}

void sub_10015A1AC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  void *v33;
  uint64_t v34;
  objc_class *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  void *v41;
  id v42;
  char *v43;
  id v44;
  void *v45;
  id v46;
  uint64_t (**v47)();
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double *v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  id v78;
  void *v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unsigned int v86;
  id v87;
  void *v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  objc_class *v112;
  _BYTE *v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  Class isa;
  unint64_t v129;
  Class v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  double v137;
  double v138;
  double v139;
  id v140;
  NSString v141;
  id v142;
  objc_class *v143;
  char *v144;
  id v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  NSURL *v149;
  void *v150;
  void *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  unint64_t v162;
  _QWORD *v163;
  void *v164;
  _QWORD *v165;
  char *v166;
  id v167;
  __n128 v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char *v173;
  uint64_t v174;
  id v175;
  id v176;
  uint64_t v177;
  void *v178;
  void *v179;
  Swift::String v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  int v215;
  uint64_t v216;
  char *v217;
  objc_super v218;
  objc_super v219;
  void **aBlock;
  unint64_t v221;
  uint64_t (*v222)(uint64_t);
  void *v223;
  void (*v224)();
  _QWORD *v225;
  char v226[8];
  char v227[8];
  objc_super v228;
  unint64_t v229;

  v1 = v0;
  v196 = type metadata accessor for DispatchWorkItemFlags(0);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v194 = (char *)&v181 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for DispatchQoS(0);
  v192 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v191 = (char *)&v181 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v4);
  v197 = (char *)&v181 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A1440);
  v7 = __chkstk_darwin(v6);
  v216 = (uint64_t)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v198 = (char *)&v181 - v10;
  v11 = __chkstk_darwin(v9);
  v207 = (uint64_t)&v181 - v12;
  __chkstk_darwin(v11);
  v209 = (uint64_t)&v181 - v13;
  v206 = type metadata accessor for Song(0);
  v205 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v210 = (char *)&v181 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_10119E480);
  v16 = __chkstk_darwin(v15);
  v204 = (char *)&v181 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v203 = (uint64_t)&v181 - v19;
  __chkstk_darwin(v18);
  v202 = (uint64_t)&v181 - v20;
  v21 = type metadata accessor for Locale(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v181 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v181 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = (unint64_t)_swiftEmptyArrayStorage;
  v27 = String.LocalizationValue.init(stringLiteral:)(0x6F53206572616853, 0xAD0000A680E2676ELL);
  static Locale.current.getter(v27);
  v28 = String.init(localized:table:bundle:locale:comment:)(v26, 0, 0, 0, v23, 0, 0, 256);
  v30 = v29;
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v31);

  if (qword_10119C708 != -1)
    swift_once(&qword_10119C708, sub_1006DB7C0);
  v33 = (void *)qword_10124D820;
  v34 = swift_allocObject(&unk_1010B35F0, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16, v1);
  v35 = (objc_class *)_s8ActivityCMa();
  v36 = (char *)objc_allocWithZone(v35);
  v37 = OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_image;
  *(_QWORD *)&v36[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_image] = 0;
  v38 = OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity__activityType;
  *(_QWORD *)&v36[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity__activityType] = 0;
  v39 = (uint64_t *)&v36[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_title];
  *v39 = v28;
  v39[1] = v30;
  v40 = v1;
  v41 = *(void **)&v36[v37];
  *(_QWORD *)&v36[v37] = v32;
  v42 = v33;
  v43 = v36;
  v44 = v32;

  v45 = *(void **)&v36[v38];
  *(_QWORD *)&v36[v38] = v42;
  v46 = v42;

  v47 = (uint64_t (**)())&v43[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_performBlock];
  *v47 = sub_10015E798;
  v47[1] = (uint64_t (*)())v34;
  swift_retain(v34);

  v228.receiver = v43;
  v228.super_class = v35;
  v48 = objc_msgSendSuper2(&v228, "init");
  swift_release(v34);

  v49 = v48;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
  v51 = *(_QWORD *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v50 = *(_QWORD *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v51 >= v50 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
  v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
  specialized Array._endMutation()(v52);
  v208 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager;
  v53 = *(_QWORD *)&v40[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager];
  v54 = v40;
  if (!v53
    || (v201 = (uint64_t *)(v53 + 72),
        swift_beginAccess(v53 + 72, v227, 0, 0),
        v55 = *(_QWORD *)(v53 + 72),
        (v56 = *(_QWORD *)(v55 + 16)) == 0))
  {
    isa = Array._bridgeToObjectiveC()().super.isa;
    v129 = v229;
    sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
    v130 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v129);
    objc_msgSend(v40, "_updateActivityItems:applicationActivities:", isa, v130);

    return;
  }
  v190 = v49;
  v58 = *(double *)(v55 + 32);
  v57 = (_QWORD *)(v55 + 32);
  v59 = v58;
  v60 = v57[4];
  v61 = v57[8];
  v62 = v57[10];
  v63 = v57[12];
  v64 = (double *)&v57[13 * v56];
  v65 = *(v64 - 12);
  v66 = *((_QWORD *)v64 - 9);
  v67 = *((_QWORD *)v64 - 5);
  v68 = *((_QWORD *)v64 - 3);
  v69 = *((_QWORD *)v64 - 1);
  v217 = &v54[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong];
  v211 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong;
  v200 = &v54[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationSource];
  v189 = v53;
  swift_retain(v53);
  v185 = v60;
  swift_bridgeObjectRetain();
  v186 = v61;
  swift_retain(v61);
  v187 = v62;
  swift_retain(v62);
  v188 = v63;
  swift_retain(v63);
  v181 = v66;
  swift_bridgeObjectRetain();
  v182 = v67;
  swift_retain(v67);
  v183 = v68;
  swift_retain(v68);
  v184 = v69;
  swift_retain(v69);
  swift_beginAccess(v217, v226, 0, 0);
  v70 = 0;
  v71 = 0;
  v199 = 0x8000000100E2F410;
  v72 = v209;
  do
  {
    v73 = v70;
    v214 = *((unsigned __int8 *)&off_1010A9EC0 + v71 + 32);
    v74 = v202;
    sub_10004A160((uint64_t)v217, v202, &qword_10119E480);
    v75 = v205;
    v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
    v77 = v206;
    if (v76(v74, 1, v206))
    {
      sub_10004FF60(v74, &qword_10119E480);
      v78 = objc_msgSend(*(id *)&v54[v211], "title");
      if (v78)
      {
        v79 = v78;
        v213 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        v81 = v80;

      }
      else
      {
        v213 = 0;
        v81 = 0;
      }
    }
    else
    {
      v82 = v210;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v210, v74, v77);
      v83 = sub_10004FF60(v74, &qword_10119E480);
      v213 = Song.title.getter(v83);
      v81 = v84;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v82, v77);
    }
    v85 = v203;
    sub_10004A160((uint64_t)v217, v203, &qword_10119E480);
    v86 = v76(v85, 1, v77);
    v215 = v73;
    if (!v86)
    {
      v92 = v210;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v210, v85, v77);
      v93 = sub_10004FF60(v85, &qword_10119E480);
      v212 = Song.artistName.getter(v93);
      v91 = v94;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v92, v77);
LABEL_19:
      v95 = (uint64_t)v204;
      goto LABEL_22;
    }
    sub_10004FF60(v85, &qword_10119E480);
    v87 = objc_msgSend(*(id *)&v54[v211], "artist");
    if (!v87)
    {
      v212 = 0;
      v91 = 0;
      goto LABEL_19;
    }
    v88 = v87;
    v89 = objc_msgSend(v87, "name");

    if (v89)
    {
      v212 = static String._unconditionallyBridgeFromObjectiveC(_:)(v89);
      v91 = v90;

    }
    else
    {
      v212 = 0;
      v91 = 0;
    }
    v95 = (uint64_t)v204;
LABEL_22:
    sub_10004A160((uint64_t)v217, v95, &qword_10119E480);
    if (v76(v95, 1, v77))
    {
      sub_10004FF60(v95, &qword_10119E480);
      v96 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v72, 1, 1, v96);
    }
    else
    {
      v97 = v210;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v210, v95, v77);
      v98 = sub_10004FF60(v95, &qword_10119E480);
      Song.artwork.getter(v98);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v97, v77);
    }
    v99 = v207;
    sub_10004A160(v72, v207, &qword_1011A1440);
    v100 = type metadata accessor for Artwork(0);
    v101 = *(_QWORD *)(v100 - 8);
    v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100);
    sub_10004FF60(v99, &qword_1011A1440);
    if (v102 == 1 && objc_msgSend(*(id *)&v54[v211], "artworkCatalog"))
    {
      v103 = (uint64_t)v198;
      Artwork.init(_:)();
      sub_10004FF60(v72, &qword_1011A1440);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v103, 0, 1, v100);
      sub_100065228(v103, v72, &qword_1011A1440);
    }
    sub_10004A160(v72, v216, &qword_1011A1440);
    v104 = *v201;
    v105 = *(_QWORD *)&v54[v208];
    if (v105)
    {
      v107 = *(_QWORD *)(v105 + 24);
      v106 = *(_QWORD *)(v105 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      v107 = 0;
      v106 = 0;
    }
    sub_100064AC8((uint64_t)v200, (uint64_t)&aBlock);
    swift_bridgeObjectRetain();
    v108 = v54;
    v109 = objc_msgSend(v54, "traitCollection");
    objc_msgSend(v109, "displayScale");
    v111 = v110;

    v112 = (objc_class *)type metadata accessor for ShareLyricsStoryActivity(0);
    v113 = objc_allocWithZone(v112);
    static Logger.music(_:)(0xD000000000000018, v199);
    v114 = &v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_language];
    v115 = v213;
    if (v81)
    {
      v116 = v81;
    }
    else
    {
      v115 = 0;
      v116 = 0xE000000000000000;
    }
    *v114 = 0;
    v114[1] = 0;
    v117 = (uint64_t *)&v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_title];
    *v117 = v115;
    v117[1] = v116;
    v118 = v212;
    if (v91)
    {
      v119 = v91;
    }
    else
    {
      v118 = 0;
      v119 = 0xE000000000000000;
    }
    v120 = (uint64_t *)&v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_subtitle];
    *v120 = v118;
    v120[1] = v119;
    v121 = v216;
    sub_10004A160(v216, (uint64_t)&v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_artwork], &qword_1011A1440);
    v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_socialNetwork] = v214;
    *(_QWORD *)&v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_lines] = v104;
    v122 = v114[1];
    *v114 = v107;
    v114[1] = v106;
    swift_bridgeObjectRelease(v122);
    sub_100064AC8((uint64_t)&aBlock, (uint64_t)&v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_presentationSource]);
    *(_QWORD *)&v113[OBJC_IVAR____TtC5Music24ShareLyricsStoryActivity_displayScale] = v111;

    v219.receiver = v113;
    v219.super_class = v112;
    v123 = objc_msgSendSuper2(&v219, "init");
    sub_100064B4C((uint64_t)&aBlock);
    sub_10004FF60(v121, &qword_1011A1440);
    v124 = v123;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v124);
    v126 = *(_QWORD *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v125 = *(_QWORD *)((v229 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v126 >= v125 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v125 > 1, v126 + 1, 1);
    v127 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v126, v124);
    specialized Array._endMutation()(v127);

    v72 = v209;
    sub_10004FF60(v209, &qword_1011A1440);
    v70 = 1;
    v71 = &_mh_execute_header.magic + 1;
    v54 = v108;
  }
  while ((v215 & 1) == 0);
  v131 = *(void **)&v108[v211];
  v132 = *(_QWORD *)&v108[v208];
  if (v132)
  {
    v133 = *(_QWORD *)(v132 + 32);
    if (v133)
    {
      v134 = v131;
      swift_bridgeObjectRetain();
      goto LABEL_47;
    }
  }
  v135 = static Locale.preferredLanguages.getter(v131);
  if (!*(_QWORD *)(v135 + 16))
  {
    __break(1u);
    goto LABEL_51;
  }
  v136 = v135;
  v133 = *(_QWORD *)(v135 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v136);
  swift_bridgeObjectRelease(0);
LABEL_47:
  v137 = *(double *)&v54[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_leadingSilence];
  v138 = v59 - v137;
  v139 = v65 - v137;
  v140 = objc_allocWithZone((Class)MPStoreLyricsSnippetURLComponents);
  v141 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v133);
  v142 = objc_msgSend(v140, "initWithSong:language:startTime:endTime:", v131, v141, v138, v139);

  if (v142)
  {
    v143 = (objc_class *)type metadata accessor for LyricsSharingActivityViewController.LyricsURLActivityItemProvider();
    v144 = (char *)objc_allocWithZone(v143);
    *(_QWORD *)&v144[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewControllerP33_84E0FBA0540C9AC5FB893F254C8A85DC29LyricsURLActivityItemProvider_snippetComponents] = v142;
    v145 = v142;
    v146 = v197;
    URL.init(string:)(0xD000000000000011, 0x8000000100E2F490);
    v147 = type metadata accessor for URL(0);
    v148 = *(_QWORD *)(v147 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147) != 1)
    {
      URL._bridgeToObjectiveC()(v149);
      v151 = v150;
      (*(void (**)(char *, uint64_t))(v148 + 8))(v146, v147);
      v218.receiver = v144;
      v218.super_class = v143;
      v152 = objc_msgSendSuper2(&v218, "initWithPlaceholderItem:", v151);

      v153 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
      v161 = (void *)static OS_dispatch_queue.main.getter(v153, v154, v155, v156, v157, v158, v159, v160, v181, v182, v183, v184, v185, v186, v187);
      v162 = v229;
      v163 = (_QWORD *)swift_allocObject(&unk_1010B3618, 40, 7);
      v163[2] = v54;
      v163[3] = v152;
      v163[4] = v162;
      v224 = sub_10015E7D4;
      v225 = v163;
      aBlock = _NSConcreteStackBlock;
      v221 = 1107296256;
      v222 = sub_1001DBD98;
      v223 = &unk_1010B3630;
      v164 = _Block_copy(&aBlock);
      v165 = v225;
      v166 = v54;
      v167 = v152;
      v168 = swift_release(v165);
      v169 = v191;
      static DispatchQoS.unspecified.getter(v168);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v170 = sub_10015E7E0();
      v171 = sub_100007E8C((uint64_t *)&unk_1011A2120);
      v172 = sub_10015E828();
      v173 = v194;
      v174 = v196;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v171, v172, v196, v170);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v169, v173, v164);
      swift_release(v189);
      _Block_release(v164);

      swift_bridgeObjectRelease(v181);
      swift_release(v182);
      swift_release(v183);
      swift_release(v184);
      swift_bridgeObjectRelease(v185);
      swift_release(v186);
      swift_release(v187);
      swift_release(v188);

      (*(void (**)(char *, uint64_t))(v195 + 8))(v173, v174);
      (*(void (**)(char *, uint64_t))(v192 + 8))(v169, v193);
      return;
    }
LABEL_51:
    __break(1u);
  }
  aBlock = 0;
  v221 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease(v221);
  aBlock = (void **)0xD00000000000002BLL;
  v221 = 0x8000000100E2F460;
  v175 = *(id *)&v54[v211];
  v176 = objc_msgSend(v175, "description");
  v177 = static String._unconditionallyBridgeFromObjectiveC(_:)(v176);
  v179 = v178;

  v180._countAndFlagsBits = v177;
  v180._object = v179;
  String.append(_:)(v180);
  swift_bridgeObjectRelease(v179);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, v221, "Music/LyricsSharingActivityViewController.swift", 47, 2, 544, 0);
  __break(1u);
}

uint64_t sub_10015B354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  objc_class *v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _BYTE v62[72];
  uint64_t v63;
  _BYTE v64[32];
  uint64_t v65;
  _BYTE v66[72];
  char v67[24];
  char v68[32];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v57 - v13;
  a1 += 16;
  swift_beginAccess(a1, v68, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v16 = (char *)result;
    v17 = result + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong;
    swift_beginAccess(result + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong, v67, 0, 0);
    sub_10004A160(v17, (uint64_t)v7, &qword_10119E480);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10004FF60((uint64_t)v7, &qword_10119E480);
      v18 = OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong;
      v19 = *(void **)&v16[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong];
      v20 = (uint64_t)&v16[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationSource];
      sub_100064AC8((uint64_t)&v16[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationSource], (uint64_t)v66);
      v65 = 0;
      memset(v64, 0, sizeof(v64));
      v63 = (uint64_t)_swiftEmptyArrayStorage;
      v21 = *(void **)&v16[v18];
      v22 = v16;
      v23 = v19;
      sub_100064AC8(v20, (uint64_t)v62);
      v24 = (objc_class *)type metadata accessor for ShareModelStoryActivity();
      v59 = 0u;
      v60 = 0u;
      v61 = 0;
      objc_allocWithZone(v24);
      v25 = sub_10055E6D4(0, v21, 0, (uint64_t)v62, (uint64_t)&v59);
      if (v25)
      {
        v26 = v25;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
        v27 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v28 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v27 >= v28 >> 1)
        {
          v55 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v27 + 1, 1);
          v27 = v55;
        }
        v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v26);
        specialized Array._endMutation()(v29);
      }
      v30 = *(void **)&v16[v18];
      sub_100064AC8(v20, (uint64_t)v62);
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
      objc_allocWithZone(v24);
      v31 = sub_10055E6D4(1, v30, 0, (uint64_t)v62, (uint64_t)&v59);
      if (v31)
      {
        v32 = v31;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v33 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v34 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v33 >= v34 >> 1)
        {
          v56 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v33 + 1, 1);
          v33 = v56;
        }
        v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v32);
        specialized Array._endMutation()(v35);
      }
      v36 = *(void **)&v16[v18];
      sub_100064AC8(v20, (uint64_t)v62);
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
      objc_allocWithZone(v24);
      v37 = sub_10055E6D4(2, v36, 0, (uint64_t)v62, (uint64_t)&v59);
      if (v37)
      {
        v38 = v37;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
        v40 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v39 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v40 >= v39 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
        v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
        specialized Array._endMutation()(v41);
      }
      type metadata accessor for SharingController();
      v42 = v63;

      v43 = sub_100007E8C(&qword_10119E428);
      v44 = swift_allocObject(v43, 40, 7);
      *(_OWORD *)(v44 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v44 + 32) = UIActivityTypeSharePlay;
      v45 = UIActivityTypeSharePlay;
      sub_10005BE5C(v23, 0, 0, (uint64_t)v66, (uint64_t)v64, v42, 0, 0, 0, v44);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v42);

      sub_10004FF60((uint64_t)v64, (uint64_t *)&unk_10119E450);
      return sub_100064B4C((uint64_t)v66);
    }
    else
    {
      v58 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v58(v14, v7, v8);
      v46 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v4, 1, 1, v46);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      type metadata accessor for MainActor(0);
      v57 = v16;
      v48 = static MainActor.shared.getter(v47);
      v49 = *(unsigned __int8 *)(v9 + 80);
      v50 = (v49 + 32) & ~v49;
      v51 = (v10 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
      v52 = swift_allocObject(&unk_1010B3668, v51 + 8, v49 | 7);
      *(_QWORD *)(v52 + 16) = v48;
      *(_QWORD *)(v52 + 24) = &protocol witness table for MainActor;
      v58((char *)(v52 + v50), v12, v8);
      v53 = v57;
      *(_QWORD *)(v52 + v51) = v57;
      v54 = sub_100166D14((uint64_t)v4, (uint64_t)&unk_1011A30E0, v52);
      swift_release(v54);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  return result;
}

uint64_t sub_10015B8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a4;
  v5[12] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[14] = v8;
  v5[15] = v9;
  return swift_task_switch(sub_10015B958, v8, v9);
}

uint64_t sub_10015B958()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[12];
  v2 = type metadata accessor for SharingController();
  sub_100064AC8(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_presentationSource, (uint64_t)(v0 + 2));
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1011A30E8 + dword_1011A30E8);
  v3 = (_QWORD *)swift_task_alloc(unk_1011A30EC);
  v0[16] = v3;
  *v3 = v0;
  v3[1] = sub_10015B9F4;
  return v5(v0[11], 0, (uint64_t)(v0 + 2), v2);
}

uint64_t sub_10015B9F4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  sub_100064B4C(v1 + 16);
  return swift_task_switch(sub_10015BA4C, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_10015BA4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10015BA7C(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class v7;
  Class isa;

  v4 = sub_100007E8C(&qword_10119E430);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v5 + 56) = type metadata accessor for LyricsSharingActivityViewController.LyricsURLActivityItemProvider();
  *(_QWORD *)(v5 + 32) = a2;
  v6 = a2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
  v7 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "_updateActivityItems:applicationActivities:", isa, v7);

}

uint64_t sub_10015BB54(uint64_t a1, char *a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  double v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSString v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  unsigned int v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  double v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[24];

  v4 = v3;
  v68 = a1;
  v69 = a2;
  v6 = type metadata accessor for Logger(0);
  v70 = *(_QWORD *)(v6 - 8);
  v71 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_10119E480);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v67 - v13;
  v15 = type metadata accessor for Song(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend(objc_allocWithZone((Class)MPCReportingLyricsViewEvent), "init");
  v20 = (uint64_t)&v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_musicKitSong], v74, 0, 0);
  sub_10004A160(v20, (uint64_t)v14, &qword_10119E480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v14, &qword_10119E480);
    objc_msgSend(v19, "setModelSong:", *(_QWORD *)&v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v18, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    MPCReportingLyricsViewEvent.song.setter(v12);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v22 = v4;
  v23 = &v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsID];
  v24 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsID + 8];
  v25 = v70;
  v26 = v8;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v27 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v19, "setLyricsID:", v27, v21);

  objc_msgSend(v19, "setVisibleDuration:", a3);
  v29 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionManager];
  if (v29 && (v30 = *(_QWORD *)(v29 + 32)) != 0)
  {
    swift_bridgeObjectRetain();
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  else
  {
    v31 = 0;
  }
  objc_msgSend(v19, "setLanguage:", v31, v28);

  objc_msgSend(v19, "setDisplayType:", 0);
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setFeatureName:", v32);

  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v33 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)qword_10124C788 + 432))();
  if (v33)
  {
    v34 = v33;
    v35 = objc_msgSend(v33, "tracklist");

    if (v35)
    {
      v36 = objc_msgSend(v35, "playingItem");
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, "metadataObject");
        if (v38)
        {
          v39 = v38;
          v40 = objc_msgSend(v38, "identifiers");

          v69 = v4;
          v41 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong], "identifiers");
          v42 = objc_msgSend(v40, "intersectsSet:", v41);

          if (v42)
          {
            MPCPlayerResponseTracklist.currentPlayEvent.getter();
            v44 = v43;
            objc_msgSend(v19, "setModelPlayEvent:", v43);

            v35 = v44;
          }
          v22 = v69;
        }

      }
    }
  }
  v45 = objc_msgSend(objc_allocWithZone((Class)MPCLyricsReportingController), "init");
  objc_msgSend(v45, "recordLyricsViewEvent:", v19);

  v46 = Logger.lyrics.unsafeMutableAddressor();
  v47 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v8, v46, v71);
  v48 = v22;
  v49 = Logger.logObject.getter(v48);
  v50 = static os_log_type_t.default.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc(32, -1);
    v68 = swift_slowAlloc(96, -1);
    v73 = v68;
    *(_DWORD *)v51 = 136446722;
    v52 = *(_QWORD *)v23;
    v53 = *((_QWORD *)v23 + 1);
    swift_bridgeObjectRetain();
    v54 = Optional<A>.description.getter(v52, v53);
    v69 = v26;
    v56 = v55;
    swift_bridgeObjectRelease(v53);
    v72 = sub_100322200(v54, v56, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);

    swift_bridgeObjectRelease(v56);
    *(_WORD *)(v51 + 12) = 2082;
    v57 = Double.description.getter(a3);
    v59 = v58;
    v72 = sub_100322200(v57, v58, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
    *(_QWORD *)&v60 = swift_bridgeObjectRelease(v59).n128_u64[0];
    *(_WORD *)(v51 + 22) = 2082;
    v61 = objc_msgSend(*(id *)&v48[OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_mpModelSong], "humanDescription", v60);
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    v64 = v63;

    v72 = sub_100322200(v62, v64, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);

    swift_bridgeObjectRelease(v64);
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Recorded Sharing PAF Event with id=%{public}s; timing=%{public}ss; song=%{public}s",
      (uint8_t *)v51,
      0x20u);
    v65 = v68;
    swift_arrayDestroy(v68, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1, -1);
    swift_slowDealloc(v51, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v69, v71);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v47);
  }
}

uint64_t sub_10015C224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  v3 = __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v15[-v6];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_lyricsVisibilityStart, v16, 0, 0);
  sub_10004A160(v12, (uint64_t)v7, (uint64_t *)&unk_1011A30A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A30A0);
  v14 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
  *(double *)(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_visibleDuration) = *(double *)(v1 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_visibleDuration)
                                                                                                - Date.timeIntervalSinceNow.getter(v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
  swift_beginAccess(v12, v15, 33, 0);
  sub_1000A5508((uint64_t)v5, v12, (uint64_t *)&unk_1011A30A0);
  swift_endAccess(v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_10015C400()
{
  return sub_10015C40C(type metadata accessor for LyricsSharingActivityViewController);
}

id sub_10015C40C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10015C550()
{
  return type metadata accessor for LyricsSharingActivityViewController(0);
}

uint64_t type metadata accessor for LyricsSharingActivityViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A3038;
  if (!qword_1011A3038)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LyricsSharingActivityViewController);
  return result;
}

void sub_10015C594(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[18];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10015C698(319, &qword_1011A3048, (uint64_t (*)(uint64_t))&type metadata accessor for Song);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100EAC598;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[5] = &unk_100EAC5B0;
    v6[6] = &unk_100EAC5B0;
    v6[7] = &unk_100EAC5B0;
    v6[8] = &unk_100EAC5C8;
    v6[9] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[10] = &unk_100EAC5E0;
    v6[11] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_10015C698(319, (unint64_t *)&qword_1011A3050, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[12] = *(_QWORD *)(v4 - 8) + 64;
      v6[13] = &unk_100EAC5E0;
      v6[14] = &unk_100EAC5B0;
      v6[15] = &unk_100EAC5B0;
      v6[16] = &unk_100EAC5B0;
      v6[17] = &unk_100EAC5B0;
      swift_updateClassMetadata2(a1, 256, 18, v6, a1 + 80);
    }
  }
}

void sub_10015C698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for LyricsSharingActivityViewController.LyricsURLActivityItemProvider()
{
  return objc_opt_self(_TtCC5Music35LyricsSharingActivityViewControllerP33_84E0FBA0540C9AC5FB893F254C8A85DC29LyricsURLActivityItemProvider);
}

id sub_10015C704()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC5Music35LyricsSharingActivityViewController_selectionViewController);
  v2 = sub_1002EDBD4();

  return v2;
}

uint64_t sub_10015C740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v4[82] = a4;
  v4[81] = a3;
  v4[80] = a2;
  v5 = type metadata accessor for Locale(0);
  v4[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[84] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0);
  v4[85] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[86] = v8;
  v4[87] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_10119E460) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[88] = swift_task_alloc(v9);
  v4[89] = swift_task_alloc(v9);
  v4[90] = swift_task_alloc(v9);
  v4[91] = swift_task_alloc(v9);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011A30F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[92] = swift_task_alloc(v10);
  v4[93] = swift_task_alloc(v10);
  v4[94] = swift_task_alloc(v10);
  v4[95] = swift_task_alloc(v10);
  v11 = type metadata accessor for Playlist(0);
  v4[96] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[97] = v12;
  v4[98] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119E480);
  v4[99] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Song(0);
  v4[100] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[101] = v15;
  v16 = *(_QWORD *)(v15 + 64);
  v4[102] = v16;
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[103] = swift_task_alloc(v17);
  v4[104] = swift_task_alloc(v17);
  v4[59] = v14;
  v4[60] = &protocol witness table for Song;
  v4[105] = sub_100049F68(v4 + 56);
  v18 = *(void (**)(void))(v15 + 16);
  v4[106] = v18;
  v18();
  v19 = type metadata accessor for MainActor(0);
  v4[107] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v4[108] = v21;
  v4[109] = v22;
  return swift_task_switch(sub_10015C988, v21, v22);
}

uint64_t sub_10015C988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  id v36;
  id v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  id v61;
  char *v62;
  void *v63;
  id v64;
  double (**v65)();
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  char v90;
  char v91;
  _QWORD *v92;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  id v97;
  _QWORD *v98;
  uint64_t v99;
  double v100;
  void *v101;
  id v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSString v130;
  id v131;
  uint64_t v132;
  NSString v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  objc_class *v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  objc_super *v165;
  objc_super *v166;
  objc_super *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174[3];

  v173 = (_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 648);
  v2 = swift_allocObject(&unk_1010B3690, 88, 7);
  *(_QWORD *)(v0 + 880) = v2;
  v161 = v2;
  v165 = (objc_super *)(v2 + 16);
  sub_100064AC8(v1, v2 + 16);
  v3 = swift_allocObject(&unk_1010B36B8, 24, 7);
  *(_QWORD *)(v0 + 888) = v3;
  *(_QWORD *)(v3 + 16) = 0;
  sub_100064C78(v0 + 448, v0 + 128);
  v4 = sub_100007E8C(&qword_10119E488);
  *(_QWORD *)(v0 + 896) = v4;
  v5 = sub_100007E8C(&qword_10119E490);
  v170 = v4;
  v168 = v3;
  if (swift_dynamicCast(v0 + 168, v0 + 128, v4, v5, 6))
  {
    sub_100064C48((__int128 *)(v0 + 168), v0 + 88);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 120);
    sub_100007E68((_QWORD *)(v0 + 88), v6);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);

    *(_QWORD *)(v3 + 16) = v8;
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 88));
  }
  else
  {
    *(_QWORD *)(v0 + 200) = 0;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 184) = 0u;
    sub_10004FF60(v0 + 168, &qword_10119E498);
  }
  v9 = *(void **)(v0 + 640);
  v10 = swift_allocObject(&unk_1010B36E0, 24, 7);
  *(_QWORD *)(v0 + 904) = v10;
  *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
  if (v9)
  {
    v11 = v10;
    *(_QWORD *)(v0 + 552) = sub_10004A07C(0, (unint64_t *)&unk_10119E4B0, NSItemProvider_ptr);
    *(_QWORD *)(v0 + 528) = v9;
    v12 = v9;
    v13 = sub_100431698(0, 1, 1, _swiftEmptyArrayStorage);
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v13 = sub_100431698((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v13[2] = v15 + 1;
    sub_100048ABC((_OWORD *)(v0 + 528), &v13[4 * v15 + 4]);
    *(_QWORD *)(v11 + 16) = v13;
  }
  v16 = swift_allocObject(&unk_1010B3708, 24, 7);
  *(_QWORD *)(v0 + 912) = v16;
  *(_QWORD *)(v16 + 16) = _swiftEmptyArrayStorage;
  v17 = (_QWORD *)(v16 + 16);
  v18 = v0 + 448;
  sub_100064C78((uint64_t)v173, v0 + 248);
  v19 = sub_100007E8C(&qword_10119E4A0);
  v20 = v170;
  if (swift_dynamicCast(v0 + 288, v0 + 248, v170, v19, 6))
  {
    sub_100064C48((__int128 *)(v0 + 288), v0 + 208);
    v21 = swift_task_alloc(32);
    *(_QWORD *)(v21 + 16) = v0 + 208;
    *(_QWORD *)(v21 + 24) = v165;
    v22 = (uint64_t)sub_10016BFF0((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_100064C60, v21, (uint64_t)&off_1010AA718);
    swift_task_dealloc(v21);
    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v149 = v22;
      else
        v149 = v22 & 0xFFFFFFFFFFFFFF8;
      v150 = sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
      v24 = _bridgeCocoaArray<A>(_:)(v149, v150);
    }
    else
    {
      v23 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v23);
      sub_10004A07C(0, (unint64_t *)&unk_1011A30B0, UIActivity_ptr);
      v24 = v22;
    }
    swift_bridgeObjectRelease(v22);
    sub_100804E0C(v24);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 208));
  }
  else
  {
    *(_QWORD *)(v0 + 320) = 0;
    *(_OWORD *)(v0 + 288) = 0u;
    *(_OWORD *)(v0 + 304) = 0u;
    sub_10004FF60(v0 + 288, &qword_10119E4A8);
  }
  v25 = *(_QWORD *)(v0 + 808);
  v26 = *(_QWORD *)(v0 + 800);
  v27 = *(_QWORD *)(v0 + 792);
  sub_100064C78((uint64_t)v173, v0 + 328);
  v28 = swift_dynamicCast(v27, v0 + 328, v170, v26, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if (!v28)
  {
    v74 = *(_QWORD *)(v0 + 792);
    v29(v74, 1, 1, *(_QWORD *)(v0 + 800));
    sub_10004FF60(v74, &qword_10119E480);
    goto LABEL_28;
  }
  v30 = *(_QWORD *)(v0 + 832);
  v31 = *(_QWORD *)(v0 + 808);
  v32 = *(_QWORD *)(v0 + 800);
  v33 = *(_QWORD *)(v0 + 792);
  v29(v33, 0, 1, v32);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
  v34(v30, v33, v32);
  type metadata accessor for LyricsLoader();
  if ((static LyricsLoader.supportsLyrics(for:)(v30) & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 808) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 800));
    v20 = v170;
    goto LABEL_28;
  }
  sub_10015E580();
  v20 = v170;
  if ((v35 & 1) != 0)
    goto LABEL_26;
  v36 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v37 = objc_msgSend(v36, "userInterfaceIdiom");

  if (v37 == (id)6)
    goto LABEL_26;
  v39 = Song.hasLyrics.getter(v38);
  v40 = *(_QWORD *)(v0 + 832);
  if ((v39 & 1) == 0)
  {
LABEL_27:
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 808) + 8))(v40, *(_QWORD *)(v0 + 800));
    goto LABEL_28;
  }
  if ((Song.hasTimeSyncedLyrics.getter(v40) & 1) == 0)
  {
LABEL_26:
    v40 = *(_QWORD *)(v0 + 832);
    goto LABEL_27;
  }
  v41 = *(_QWORD *)(v0 + 672);
  v42 = *(_QWORD *)(v0 + 664);
  v43 = String.LocalizationValue.init(stringLiteral:)(0x794C206572616853, 0xAFA680E273636972);
  static Locale.current.getter(v43);
  v44 = String.init(localized:table:bundle:locale:comment:)(v41, 0, 0, 0, v42, 0, 0, 256);
  v156 = v45;
  v158 = v44;
  v46 = String._bridgeToObjectiveC()();
  v154 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v46);

  if (qword_10119C700 != -1)
    swift_once(&qword_10119C700, sub_1006DB78C);
  v47 = *(_QWORD *)(v0 + 824);
  v48 = *(_QWORD *)(v0 + 816);
  v49 = *(_QWORD *)(v0 + 808);
  v50 = *(_QWORD *)(v0 + 800);
  v151 = (void *)qword_10124D818;
  v152 = *(_QWORD *)(v0 + 656);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 848))(v47, *(_QWORD *)(v0 + 832), v50);
  v51 = *(unsigned __int8 *)(v49 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = (v48 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_1010B3730, v54 + 8, v51 | 7);
  v34(v55 + v52, v47, v50);
  *(_QWORD *)(v55 + v53) = v161;
  *(_QWORD *)(v55 + v54) = v152;
  v153 = (objc_class *)_s8ActivityCMa();
  v56 = (char *)objc_allocWithZone(v153);
  v57 = OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_image;
  *(_QWORD *)&v56[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_image] = 0;
  v58 = OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity__activityType;
  *(_QWORD *)&v56[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity__activityType] = 0;
  v59 = (uint64_t *)&v56[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_title];
  *v59 = v158;
  v59[1] = v156;
  v60 = *(void **)&v56[v57];
  *(_QWORD *)&v56[v57] = v154;
  v61 = v151;
  swift_retain(v161);
  v62 = v56;
  v162 = v154;

  v63 = *(void **)&v56[v58];
  *(_QWORD *)&v56[v58] = v61;
  v64 = v61;

  v65 = (double (**)())&v62[OBJC_IVAR____TtCC5Music35LyricsSharingActivityViewController8Activity_performBlock];
  *v65 = sub_100064BFC;
  v65[1] = (double (*)())v55;
  swift_retain(v55);

  *(_QWORD *)(v0 + 608) = v62;
  *(_QWORD *)(v0 + 616) = v153;
  v66 = objc_msgSendSuper2((objc_super *)(v0 + 608), "init");
  swift_release(v55);

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
  v69 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v68 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v69 >= v68 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
  v70 = *(_QWORD *)(v0 + 832);
  v71 = *(_QWORD *)(v0 + 808);
  v72 = *(_QWORD *)(v0 + 800);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v66);
  specialized Array._endMutation()(v73);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
  v20 = v170;
  v18 = v0 + 448;
LABEL_28:
  v75 = *(_QWORD *)(v0 + 776);
  v76 = *(_QWORD *)(v0 + 768);
  v77 = *(_QWORD *)(v0 + 760);
  sub_100064C78(v18, v0 + 368);
  v78 = swift_dynamicCast(v77, v0 + 368, v20, v76, 6);
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56);
  if (v78)
  {
    v80 = *(_QWORD *)(v0 + 784);
    v81 = *(_QWORD *)(v0 + 776);
    v82 = *(_QWORD *)(v0 + 768);
    v83 = *(_QWORD *)(v0 + 760);
    v84 = *(_QWORD *)(v0 + 728);
    v79(v83, 0, 1, v82);
    v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v83, v82);
    Playlist.url.getter(v85);
    v86 = type metadata accessor for URL(0);
    *(_QWORD *)(v0 + 920) = v86;
    v87 = *(_QWORD *)(v86 - 8);
    *(_QWORD *)(v0 + 928) = v87;
    v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
    *(_QWORD *)(v0 + 936) = v88;
    LODWORD(v80) = v88(v84, 1, v86);
    sub_10004FF60(v84, &qword_10119E460);
    v89 = *(_QWORD *)(v0 + 784);
    if ((_DWORD)v80 == 1)
    {
      v90 = Playlist.isPublic.getter(v89);
      v89 = *(_QWORD *)(v0 + 784);
      if (v90 != 2 && (v90 & 1) == 0)
      {
        v91 = Playlist.isShareable.getter();
        v89 = *(_QWORD *)(v0 + 784);
        if ((v91 & 1) == 0)
        {
          if ((Playlist.canMakeShareable.getter() & 1) != 0)
          {
            v92 = (_QWORD *)swift_task_alloc(dword_1011D486C);
            *(_QWORD *)(v0 + 952) = v92;
            *v92 = v0;
            v92[1] = sub_10015DDF8;
            return Playlist.publish()(*(_QWORD *)(v0 + 752));
          }
          v89 = *(_QWORD *)(v0 + 784);
        }
      }
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 776) + 8))(v89, *(_QWORD *)(v0 + 768));
  }
  else
  {
    v94 = *(_QWORD *)(v0 + 760);
    v79(v94, 1, 1, *(_QWORD *)(v0 + 768));
    sub_10004FF60(v94, &qword_1011A30F0);
  }
  v95 = *(void **)(v168 + 16);
  if (v95)
  {
    *(_QWORD *)(v0 + 632) = v95;
    v96 = dword_1011D48AC;
    v97 = v95;
    v98 = (_QWORD *)swift_task_alloc(v96);
    *(_QWORD *)(v0 + 944) = v98;
    *v98 = v0;
    v98[1] = sub_10015D818;
    return Song.augmentMetadata(_:)(v0 + 632);
  }
  swift_release(*(_QWORD *)(v0 + 856));
  v99 = *(_QWORD *)(v0 + 888);
  *(_QWORD *)&v100 = swift_beginAccess(v99 + 16, v0 + 560, 0, 0).n128_u64[0];
  v101 = *(void **)(v99 + 16);
  if (!v101)
  {
    v106 = *(_QWORD *)(v0 + 720);
    v107 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 1, 1, v107);
LABEL_46:
    v171 = v0 + 16;
    v109 = *(_QWORD *)(v0 + 696);
    v110 = *(_QWORD *)(v0 + 688);
    v111 = *(_QWORD *)(v0 + 680);
    sub_10004FF60(*(_QWORD *)(v0 + 720), &qword_10119E460);
    v112 = Logger.actions.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 16))(v109, v112, v111);
    v113 = sub_100064C78((uint64_t)v173, v0 + 488);
    v114 = Logger.logObject.getter(v113);
    v115 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v114, v115))
    {
      v155 = *(_QWORD *)(v0 + 896);
      v159 = *(_QWORD *)(v0 + 688);
      v163 = *(_QWORD *)(v0 + 680);
      v166 = *(objc_super **)(v0 + 696);
      v116 = (uint8_t *)swift_slowAlloc(12, -1);
      v117 = swift_slowAlloc(32, -1);
      v174[0] = v117;
      *(_DWORD *)v116 = 136446210;
      sub_100064C78(v0 + 488, v0 + 408);
      v118 = String.init<A>(describing:)(v0 + 408, v155);
      v120 = v119;
      *(_QWORD *)(v0 + 624) = sub_100322200(v118, v119, v174);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
      swift_bridgeObjectRelease(v120);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));
      _os_log_impl((void *)&_mh_execute_header, v114, v115, "No sharing url for item=%{public}s", v116, 0xCu);
      swift_arrayDestroy(v117, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v117, -1, -1);
      swift_slowDealloc(v116, -1, -1);

      (*(void (**)(objc_super *, uint64_t))(v159 + 8))(v166, v163);
    }
    else
    {
      v121 = *(_QWORD *)(v0 + 696);
      v122 = *(_QWORD *)(v0 + 688);
      v123 = *(_QWORD *)(v0 + 680);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));

      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v121, v123);
    }
    v124 = *(_QWORD *)(v0 + 912);
    v125 = *(_QWORD *)(v0 + 904);
    v126 = *(_QWORD *)(v0 + 888);
    v127 = *(_QWORD *)(v0 + 880);
    Song.failureMessage.getter();
    v129 = v128;
    v130 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v129);
    v131 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v130, 0, 1);

    v132 = String.okButtonTitle.unsafeMutableAddressor()[1];
    swift_bridgeObjectRetain();
    v133 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v132);
    v134 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v133, 1, 0);

    objc_msgSend(v131, "addAction:", v134);
    swift_beginAccess(v127 + 16, v0 + 584, 0, 0);
    sub_100064AC8(v127 + 16, v171);
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v131, 1, (id)0xF, (void **)1, 0, 0);

    sub_100064B4C(v171);
    swift_release(v124);
    swift_release(v125);
    swift_release(v126);
    v135 = v127;
    goto LABEL_51;
  }
  v102 = objc_msgSend(v101, "originalURL", v100);
  v103 = *(_QWORD *)(v0 + 712);
  if (v102)
  {
    v104 = v102;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v102);

    v105 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v103, 0, 1, v105);
  }
  else
  {
    v105 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v103, 1, 1, v105);
  }
  v108 = *(_QWORD *)(v0 + 720);
  sub_100065228(*(_QWORD *)(v0 + 712), v108, &qword_10119E460);
  type metadata accessor for URL(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48))(v108, 1, v105) == 1)
    goto LABEL_46;
  v136 = *(_QWORD *)(v0 + 912);
  v137 = *(_QWORD *)(v0 + 904);
  v138 = *(_QWORD *)(v0 + 888);
  v139 = *(_QWORD *)(v0 + 880);
  sub_10004FF60(*(_QWORD *)(v0 + 720), &qword_10119E460);
  swift_release(v136);
  swift_release(v137);
  swift_release(v138);
  v135 = v139;
LABEL_51:
  swift_release(v135);
  v140 = *(_QWORD *)(v0 + 832);
  v141 = *(_QWORD *)(v0 + 824);
  v142 = *(_QWORD *)(v0 + 792);
  v143 = *(_QWORD *)(v0 + 784);
  v144 = *(_QWORD *)(v0 + 760);
  v145 = *(_QWORD *)(v0 + 752);
  v146 = *(_QWORD *)(v0 + 744);
  v147 = *(_QWORD *)(v0 + 736);
  v148 = *(_QWORD *)(v0 + 728);
  v157 = *(_QWORD *)(v0 + 720);
  v160 = *(_QWORD *)(v0 + 712);
  v164 = *(_QWORD *)(v0 + 704);
  v167 = *(objc_super **)(v0 + 696);
  v169 = *(_QWORD *)(v0 + 672);
  v172 = *(_QWORD *)(v0 + 664);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v173);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v147);
  swift_task_dealloc(v148);
  swift_task_dealloc(v157);
  swift_task_dealloc(v160);
  swift_task_dealloc(v164);
  swift_task_dealloc(v167);
  swift_task_dealloc(v169);
  swift_task_dealloc(v172);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015D818()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 944));
  return swift_task_switch(sub_10015D868, *(_QWORD *)(v1 + 864), *(_QWORD *)(v1 + 872));
}

uint64_t sub_10015D868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  uint64_t v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 912);
  v2 = *(_QWORD *)(v0 + 904);
  v3 = *(_QWORD *)(v0 + 888);
  v4 = *(_QWORD *)(v0 + 880);
  v5 = *(_QWORD *)(v0 + 640);
  swift_release(*(_QWORD *)(v0 + 856));
  sub_10005D4BC(v1, v2, v3, v5, v4);

  v6 = *(_QWORD *)(v0 + 888);
  *(_QWORD *)&v7 = swift_beginAccess(v6 + 16, v0 + 560, 0, 0).n128_u64[0];
  v8 = *(void **)(v6 + 16);
  if (v8)
  {
    v9 = objc_msgSend(v8, "originalURL", v7);
    v10 = *(_QWORD *)(v0 + 712);
    if (v9)
    {
      v11 = v9;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
    }
    else
    {
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
    }
    v15 = *(_QWORD *)(v0 + 720);
    sub_100065228(*(_QWORD *)(v0 + 712), v15, &qword_10119E460);
    type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v15, 1, v12) != 1)
    {
      v46 = *(_QWORD *)(v0 + 912);
      v47 = *(_QWORD *)(v0 + 904);
      v48 = *(_QWORD *)(v0 + 888);
      v49 = *(_QWORD *)(v0 + 880);
      sub_10004FF60(*(_QWORD *)(v0 + 720), &qword_10119E460);
      swift_release(v46);
      swift_release(v47);
      swift_release(v48);
      v45 = v49;
      goto LABEL_12;
    }
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 720);
    v14 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  v16 = v0 + 16;
  v17 = *(_QWORD *)(v0 + 696);
  v18 = *(_QWORD *)(v0 + 688);
  v19 = *(_QWORD *)(v0 + 680);
  sub_10004FF60(*(_QWORD *)(v0 + 720), &qword_10119E460);
  v20 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v20, v19);
  v21 = sub_100064C78(v0 + 448, v0 + 488);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = *(_QWORD *)(v0 + 896);
    v61 = *(_QWORD *)(v0 + 688);
    v63 = *(_QWORD *)(v0 + 680);
    v65 = *(_QWORD *)(v0 + 696);
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v69 = v26;
    *(_DWORD *)v25 = 136446210;
    sub_100064C78(v0 + 488, v0 + 408);
    v27 = v24;
    v16 = v0 + 16;
    v28 = String.init<A>(describing:)(v0 + 408, v27);
    v30 = v29;
    *(_QWORD *)(v0 + 624) = sub_100322200(v28, v29, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    swift_bridgeObjectRelease(v30);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "No sharing url for item=%{public}s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v65, v63);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 696);
    v32 = *(_QWORD *)(v0 + 688);
    v33 = *(_QWORD *)(v0 + 680);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v34 = *(_QWORD *)(v0 + 912);
  v35 = *(_QWORD *)(v0 + 904);
  v36 = *(_QWORD *)(v0 + 888);
  v37 = *(_QWORD *)(v0 + 880);
  Song.failureMessage.getter();
  v39 = v38;
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v40, 0, 1);

  v42 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v44 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v43, 1, 0);

  objc_msgSend(v41, "addAction:", v44);
  swift_beginAccess(v37 + 16, v0 + 584, 0, 0);
  sub_100064AC8(v37 + 16, v16);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v41, 1, (id)0xF, (void **)1, 0, 0);

  sub_100064B4C(v16);
  swift_release(v34);
  swift_release(v35);
  swift_release(v36);
  v45 = v37;
LABEL_12:
  swift_release(v45);
  v50 = *(_QWORD *)(v0 + 832);
  v51 = *(_QWORD *)(v0 + 824);
  v52 = *(_QWORD *)(v0 + 792);
  v53 = *(_QWORD *)(v0 + 784);
  v54 = *(_QWORD *)(v0 + 760);
  v55 = *(_QWORD *)(v0 + 752);
  v56 = *(_QWORD *)(v0 + 744);
  v57 = *(_QWORD *)(v0 + 736);
  v58 = *(_QWORD *)(v0 + 728);
  v60 = *(_QWORD *)(v0 + 720);
  v62 = *(_QWORD *)(v0 + 712);
  v64 = *(_QWORD *)(v0 + 704);
  v66 = *(_QWORD *)(v0 + 696);
  v67 = *(_QWORD *)(v0 + 672);
  v68 = *(_QWORD *)(v0 + 664);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 448));
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015DDF8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 952));
  return swift_task_switch(sub_10015DE48, *(_QWORD *)(v1 + 864), *(_QWORD *)(v1 + 872));
}

uint64_t sub_10015DE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSURL *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  id v69;
  uint64_t v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;

  v97 = (_QWORD *)(v0 + 448);
  v1 = *(_QWORD *)(v0 + 776);
  v2 = *(_QWORD *)(v0 + 768);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = *(_QWORD *)(v0 + 744);
  swift_release(*(_QWORD *)(v0 + 856));
  sub_10004A160(v3, v4, &qword_1011A30F0);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v6 = v5(v4, 1, v2);
  v7 = *(_QWORD *)(v0 + 888);
  if (v6 == 1)
  {
    sub_10004FF60(*(_QWORD *)(v0 + 744), &qword_1011A30F0);

    *(_QWORD *)(v7 + 16) = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 776);
    v9 = *(_QWORD *)(v0 + 768);
    v10 = *(_QWORD *)(v0 + 752);
    v11 = *(_QWORD *)(v0 + 744);
    v12 = *(_QWORD *)(v0 + 736);
    v13 = sub_10056D6C4();
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(v11, v9);

    *(_QWORD *)(v7 + 16) = v13;
    sub_10004A160(v10, v12, &qword_1011A30F0);
    LODWORD(v11) = v5(v12, 1, v9);
    v15 = v13;
    v16 = v15;
    v17 = *(_QWORD *)(v0 + 920);
    if ((_DWORD)v11 == 1)
    {
      v18 = *(_QWORD *)(v0 + 928);
      v19 = *(_QWORD *)(v0 + 704);
      sub_10004FF60(*(_QWORD *)(v0 + 736), &qword_1011A30F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v19, 1, 1, v17);
      v20 = 0;
    }
    else
    {
      v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 936);
      v22 = *(_QWORD *)(v0 + 768);
      v23 = *(_QWORD *)(v0 + 736);
      v24 = *(_QWORD *)(v0 + 704);
      Playlist.url.getter(v15);
      v14(v23, v22);
      if (v21(v24, 1, v17) == 1)
      {
        v20 = 0;
      }
      else
      {
        v26 = *(_QWORD *)(v0 + 928);
        v27 = *(_QWORD *)(v0 + 920);
        v28 = *(_QWORD *)(v0 + 704);
        URL._bridgeToObjectiveC()(v25);
        v20 = v29;
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v27);
      }
    }
    objc_msgSend(v16, "setOriginalURL:", v20);

  }
  v30 = *(_QWORD *)(v0 + 784);
  v31 = *(_QWORD *)(v0 + 776);
  v32 = *(_QWORD *)(v0 + 768);
  v33 = *(_QWORD *)(v0 + 752);
  sub_10005D4BC(*(_QWORD *)(v0 + 912), *(_QWORD *)(v0 + 904), *(_QWORD *)(v0 + 888), *(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 880));
  sub_10004FF60(v33, &qword_1011A30F0);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  v34 = *(_QWORD *)(v0 + 888);
  *(_QWORD *)&v35 = swift_beginAccess(v34 + 16, v0 + 560, 0, 0).n128_u64[0];
  v36 = *(void **)(v34 + 16);
  if (v36)
  {
    v37 = objc_msgSend(v36, "originalURL", v35);
    v38 = *(_QWORD *)(v0 + 712);
    if (v37)
    {
      v39 = v37;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v37);

      v40 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 0, 1, v40);
    }
    else
    {
      v40 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 1, 1, v40);
    }
    v43 = *(_QWORD *)(v0 + 720);
    sub_100065228(*(_QWORD *)(v0 + 712), v43, &qword_10119E460);
    type metadata accessor for URL(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v43, 1, v40) != 1)
    {
      v74 = *(_QWORD *)(v0 + 912);
      v75 = *(_QWORD *)(v0 + 904);
      v76 = *(_QWORD *)(v0 + 888);
      v77 = *(_QWORD *)(v0 + 880);
      sub_10004FF60(*(_QWORD *)(v0 + 720), &qword_10119E460);
      swift_release(v74);
      swift_release(v75);
      swift_release(v76);
      v73 = v77;
      goto LABEL_20;
    }
  }
  else
  {
    v41 = *(_QWORD *)(v0 + 720);
    v42 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
  }
  v44 = v0 + 16;
  v45 = *(_QWORD *)(v0 + 696);
  v46 = *(_QWORD *)(v0 + 688);
  v47 = *(_QWORD *)(v0 + 680);
  sub_10004FF60(*(_QWORD *)(v0 + 720), &qword_10119E460);
  v48 = Logger.actions.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v45, v48, v47);
  v49 = sub_100064C78((uint64_t)v97, v0 + 488);
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = *(_QWORD *)(v0 + 896);
    v89 = *(_QWORD *)(v0 + 688);
    v91 = *(_QWORD *)(v0 + 680);
    v93 = *(_QWORD *)(v0 + 696);
    v53 = (uint8_t *)swift_slowAlloc(12, -1);
    v54 = swift_slowAlloc(32, -1);
    v98 = v54;
    *(_DWORD *)v53 = 136446210;
    sub_100064C78(v0 + 488, v0 + 408);
    v55 = String.init<A>(describing:)(v0 + 408, v52);
    v57 = v56;
    *(_QWORD *)(v0 + 624) = sub_100322200(v55, v56, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632);
    v58 = v57;
    v44 = v0 + 16;
    swift_bridgeObjectRelease(v58);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "No sharing url for item=%{public}s", v53, 0xCu);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v53, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v93, v91);
  }
  else
  {
    v59 = *(_QWORD *)(v0 + 696);
    v60 = *(_QWORD *)(v0 + 688);
    v61 = *(_QWORD *)(v0 + 680);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 488));

    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
  }
  v62 = *(_QWORD *)(v0 + 912);
  v63 = *(_QWORD *)(v0 + 904);
  v64 = *(_QWORD *)(v0 + 888);
  v65 = *(_QWORD *)(v0 + 880);
  Song.failureMessage.getter();
  v67 = v66;
  v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v67);
  v69 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v68, 0, 1);

  v70 = String.okButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v70);
  v72 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v71, 1, 0);

  objc_msgSend(v69, "addAction:", v72);
  swift_beginAccess(v65 + 16, v0 + 584, 0, 0);
  sub_100064AC8(v65 + 16, v44);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v69, 1, (id)0xF, (void **)1, 0, 0);

  sub_100064B4C(v44);
  swift_release(v62);
  swift_release(v63);
  swift_release(v64);
  v73 = v65;
LABEL_20:
  swift_release(v73);
  v78 = *(_QWORD *)(v0 + 832);
  v79 = *(_QWORD *)(v0 + 824);
  v80 = *(_QWORD *)(v0 + 792);
  v81 = *(_QWORD *)(v0 + 784);
  v82 = *(_QWORD *)(v0 + 760);
  v83 = *(_QWORD *)(v0 + 752);
  v84 = *(_QWORD *)(v0 + 744);
  v85 = *(_QWORD *)(v0 + 736);
  v86 = *(_QWORD *)(v0 + 728);
  v88 = *(_QWORD *)(v0 + 720);
  v90 = *(_QWORD *)(v0 + 712);
  v92 = *(_QWORD *)(v0 + 704);
  v94 = *(_QWORD *)(v0 + 696);
  v95 = *(_QWORD *)(v0 + 672);
  v96 = *(_QWORD *)(v0 + 664);
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v97);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015E580()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v0 = *BagProvider.shared.unsafeMutableAddressor();
  swift_retain(v0);
  v1 = (void *)BagProvider.bag.getter();
  swift_release(v0);
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
    goto LABEL_9;
  }
  ICURLBag.subscript.getter(ICURLBagKeyMusicSubscription, (uint64_t)&v8);

  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_9:
    sub_10004FF60((uint64_t)&v8, &qword_10119DCC0);
LABEL_10:
    v8 = 0u;
    v9 = 0u;
LABEL_11:
    sub_10004FF60((uint64_t)&v8, &qword_10119DCC0);
    return 0;
  }
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3090);
  if ((swift_dynamicCast(&v7, &v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
    goto LABEL_10;
  v3 = v7;
  if (!v7)
    goto LABEL_10;
  if (*(_QWORD *)(v7 + 16) && (v4 = sub_10079C2C4(0xD00000000000001ALL, 0x8000000100E2F2F0), (v5 & 1) != 0))
  {
    sub_10004FA40(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_11;
  if (swift_dynamicCast(&v7, &v8, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
    return v7;
  else
    return 0;
}

uint64_t sub_10015E6E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_10015E70C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001552FC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10015E714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10015E724(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10015E72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_10119E460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015E774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10015E798()
{
  uint64_t v0;

  return sub_10015B354(v0);
}

uint64_t sub_10015E7A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10015E7D4()
{
  uint64_t v0;

  sub_10015BA7C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_10015E7E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A30C0;
  if (!qword_1011A30C0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1011A30C0);
  }
  return result;
}

unint64_t sub_10015E828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A30D0;
  if (!qword_1011A30D0)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011A2120);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, &qword_1011A30D0);
  }
  return result;
}

uint64_t sub_10015E874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10015E904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011A30DC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_10015B8EC(a1, v6, v7, v8, v9);
}

uint64_t sub_10015E9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  v3 = *(unsigned __int8 *)(v2 + 64);
  if (v3 != 255)
    sub_100064AA4(*(id *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), v3);
  if (*(_QWORD *)(v2 + 72))
    swift_release(*(_QWORD *)(v2 + 80));
  return swift_deallocObject(v2, 88, 7);
}

uint64_t sub_10015E9F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015EA1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015EA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_10015EABC(int a1)
{
  uint64_t v1;

  sub_100159C5C(a1, *(id *)(v1 + 16));
}

uint64_t sub_10015EAC4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100158C0C(a1, a2, a3, a4, v4);
}

uint64_t sub_10015EACC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_100055BAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1 & 1);

  swift_errorRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10015EB10()
{
  uint64_t v0;

  return sub_100158E58(*(double **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(char **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10015EB20(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_100055BBC(result, a2, a3 & 1);
  return result;
}

uint64_t sub_10015EB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease(a5);
    swift_release(a9);
    swift_release(a11);
    return swift_release(a13);
  }
  return result;
}

uint64_t sub_10015EB88(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_100055BAC(result, a2, a3 & 1);
  return result;
}

id sub_10015EBA0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t *sub_10015EBB8(uint64_t *a1)
{
  sub_10015EC08(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12]);
  return a1;
}

uint64_t sub_10015EC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain(a5);
    swift_retain(a9);
    swift_retain(a11);
    return swift_retain(a13);
  }
  return result;
}

void sub_10015EC58()
{
  uint64_t v0;

  sub_100158A88(v0);
}

void sub_10015EC60(uint64_t a1)
{
  uint64_t v1;

  sub_100155FC0(a1, v1);
}

void sub_10015EC68(uint64_t a1)
{
  uint64_t v1;

  sub_10015619C(a1, v1);
}

void sub_10015EC70(uint64_t a1)
{
  uint64_t v1;

  sub_100156294(a1, v1);
}

void sub_10015EC78(uint64_t a1)
{
  uint64_t v1;

  sub_100156550(a1, v1);
}

uint64_t sub_10015EC80(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __n128 v28;
  _BYTE v31[24];

  v2 = sub_100007E8C(&qword_10119E460);
  v3 = __chkstk_darwin(v2);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v31[-v6 - 8];
  v8 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v8);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = objc_msgSend(a1, "activityTitle");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0xE000000000000000;
  }
  v16 = type metadata accessor for URL(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v7, 1, 1, v16);
  v17(v5, 1, 1, v16);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v13, v15, 2, 35, (uint64_t)v7, 0, 0, 3, (uint64_t)v10, 0, 0, 65280, 0, 0, 0, 0, (uint64_t)v5, 0, 1,
    0,
    0,
    0);
  v18 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v20 = v19;
  v22 = v21;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v23 = qword_10124C790;
  swift_retain(qword_10124C790);
  v24 = GroupActivitiesManager.hasJoined.getter();
  v25 = GroupActivitiesManager.participantsCount.getter();
  v26 = (uint64_t *)(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v23 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v31, 0, 0);
  v27 = *v26;
  v28 = swift_release(v23);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v18) + 0xB8))(v10, v20, v22, v24 & 1, v25, v27, v28);

  swift_bridgeObjectRelease(v22);
  return sub_10005B748((uint64_t)v10, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_10015EF00()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10015EF34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1011A312C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_100156D7C(a1, v4, v5, v7, v6);
}

uint64_t sub_10015EFAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10015EFD8(void *a1, char a2)
{
  uint64_t v2;

  sub_100157408(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

id sub_10015EFE4(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_errorRetain();
  else
    return a1;
}

void sub_10015F02C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_100007E8C(&qword_1011A3248);
  __chkstk_darwin(v6);
  v2 = sub_100007E8C(&qword_1011A3250);
  __chkstk_darwin(v2);
  v3 = sub_100007E8C(&qword_1011A3258);
  __chkstk_darwin(v3);
  v5 = sub_100007E8C(&qword_1011A3188);
  __chkstk_darwin(v5);
  v7 = sub_100007E8C(&qword_1011A3178);
  __chkstk_darwin(v7);
  v4 = _s8MainViewVMa(0);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_10015F1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1006935C0(v2);
  sub_1001606D4(v2, v8);
  swift_storeEnumTagMultiPayload(v8, v0, 0);
  v10 = sub_100048748(&qword_1011A3190, _s8MainViewVMa, (uint64_t)&unk_100EC9EA8);
  v11 = sub_10015FDFC();
  _ConditionalContent<>.init(storage:)(v8, v3, &type metadata for ListenNowView, v10, v11);
  sub_10004A160(v7, v5, &qword_1011A3188);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v12 = sub_100007E8C(&qword_1011A31A8);
  v13 = sub_10015FD78();
  v14 = sub_10015FE40();
  _ConditionalContent<>.init(storage:)(v5, *(_QWORD *)(v9 - 256), v12, v13, v14);
  sub_10004FF60(v7, &qword_1011A3188);
  sub_10004A160(v4, v1, &qword_1011A3178);
  swift_storeEnumTagMultiPayload(v1, *(_QWORD *)(v9 - 248), 0);
  v15 = sub_100007E8C(&qword_1011A31C8);
  v16 = sub_10015FCE4();
  v17 = sub_10015FEEC();
  _ConditionalContent<>.init(storage:)(v1, *(_QWORD *)(v9 - 240), v15, v16, v17);
  sub_10004FF60(v4, &qword_1011A3178);
  return sub_100160718(v2);
}

uint64_t sub_10015F820@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[32];

  v34 = a2;
  v33 = sub_100007E8C(&qword_1011A3138);
  __chkstk_darwin(v33);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011A3140);
  __chkstk_darwin(v32);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A3148);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011A3150);
  __chkstk_darwin(v29);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A3158);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015F02C(a1);
  v35[16] = a1;
  v15 = sub_100007E8C(&qword_1011A3160);
  v16 = sub_10015FD08(&qword_1011A3168, &qword_1011A3140, (void (*)(void))sub_10015FCE4, (void (*)(void))sub_10015FEEC);
  v17 = sub_10015FF98();
  v18 = v15;
  v19 = v12;
  View.tabItem<A>(_:)(sub_10015FCDC, v35, v32, v18, v16, v17);
  sub_10004FF60((uint64_t)v6, &qword_1011A3140);
  v21 = v30;
  v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v4, v9, v31);
  v4[*(int *)(v33 + 36)] = a1;
  sub_10004A160((uint64_t)v4, (uint64_t)v11, &qword_1011A3138);
  v11[*(int *)(v29 + 36)] = a1;
  sub_10004FF60((uint64_t)v4, &qword_1011A3138);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  KeyPath = swift_getKeyPath(&unk_100EAC650);
  sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011A3150);
  v23 = &v14[*(int *)(v19 + 36)];
  *(_QWORD *)v23 = KeyPath;
  v23[8] = a1;
  sub_10004FF60((uint64_t)v11, &qword_1011A3150);
  if (a1 - 1 >= 4)
  {
    if (a1)
    {
      v26 = 0xD000000000000016;
      v24 = 0x8000000100E2F6A0;
      v25 = 50;
      goto LABEL_6;
    }
    v24 = 0x8000000100E2F6C0;
    v25 = 100;
  }
  else
  {
    v24 = 0x8000000100E2F6E0;
    v25 = 200;
  }
  v26 = 0xD000000000000017;
LABEL_6:
  v27 = sub_10016042C();
  View.artworkCaching(id:limit:)(v26, v24, v25, 0, v19, v27);
  swift_bridgeObjectRelease(v24);
  return sub_10004FF60((uint64_t)v14, &qword_1011A3158);
}

uint64_t sub_10015FB68(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[32];
  _BYTE v17[32];
  _QWORD v18[2];

  v2 = sub_100007E8C(&qword_1011A2A80);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_1011A31F0);
  v7 = __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17[16] = a1;
  v16[16] = a1;
  Label.init(title:icon:)(sub_100160668, v17, sub_100160670, v16, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image, v7);
  sub_100160204(a1);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  sub_1006DB9DC(a1);
  v11 = v10;
  v18[0] = v12;
  v18[1] = v10;
  v13 = sub_10016001C();
  v14 = sub_100055B68();
  View.accessibilityLabel<A>(_:)(v18, v6, &type metadata for String, v13, v14);
  swift_bridgeObjectRelease(v11);
  return sub_10004FF60((uint64_t)v9, &qword_1011A31F0);
}

uint64_t sub_10015FCDC()
{
  uint64_t v0;

  return sub_10015FB68(*(_BYTE *)(v0 + 16));
}

uint64_t sub_10015FCE4()
{
  return sub_10015FD08(&qword_1011A3170, &qword_1011A3178, (void (*)(void))sub_10015FD78, (void (*)(void))sub_10015FE40);
}

uint64_t sub_10015FD08(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10015FD78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3180;
  if (!qword_1011A3180)
  {
    v1 = sub_100044B54(&qword_1011A3188);
    sub_100048748(&qword_1011A3190, _s8MainViewVMa, (uint64_t)&unk_100EC9EA8);
    sub_10015FDFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3180);
  }
  return result;
}

unint64_t sub_10015FDFC()
{
  unint64_t result;

  result = qword_1011A3198;
  if (!qword_1011A3198)
  {
    result = swift_getWitnessTable(&unk_100EB8E54, &type metadata for ListenNowView);
    atomic_store(result, (unint64_t *)&qword_1011A3198);
  }
  return result;
}

uint64_t sub_10015FE40()
{
  return sub_10015FD08(&qword_1011A31A0, &qword_1011A31A8, (void (*)(void))sub_10015FE64, (void (*)(void))sub_10015FEA8);
}

unint64_t sub_10015FE64()
{
  unint64_t result;

  result = qword_1011A31B0;
  if (!qword_1011A31B0)
  {
    result = swift_getWitnessTable(&unk_100EB8E04, &type metadata for BrowseView);
    atomic_store(result, (unint64_t *)&qword_1011A31B0);
  }
  return result;
}

unint64_t sub_10015FEA8()
{
  unint64_t result;

  result = qword_1011A31B8;
  if (!qword_1011A31B8)
  {
    result = swift_getWitnessTable(&unk_100EB8DB4, &type metadata for RadioView);
    atomic_store(result, (unint64_t *)&qword_1011A31B8);
  }
  return result;
}

uint64_t sub_10015FEEC()
{
  return sub_10015FD08(&qword_1011A31C0, &qword_1011A31C8, (void (*)(void))sub_10015FF10, (void (*)(void))sub_10015FF54);
}

unint64_t sub_10015FF10()
{
  unint64_t result;

  result = qword_1011A31D0;
  if (!qword_1011A31D0)
  {
    result = swift_getWitnessTable(&unk_100ED4364, &_s8MainViewVN);
    atomic_store(result, (unint64_t *)&qword_1011A31D0);
  }
  return result;
}

unint64_t sub_10015FF54()
{
  unint64_t result;

  result = qword_1011A31D8;
  if (!qword_1011A31D8)
  {
    result = swift_getWitnessTable(&unk_100EB8D64, &type metadata for VideosView);
    atomic_store(result, (unint64_t *)&qword_1011A31D8);
  }
  return result;
}

unint64_t sub_10015FF98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A31E0;
  if (!qword_1011A31E0)
  {
    v1 = sub_100044B54(&qword_1011A3160);
    sub_10016001C();
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A31E0);
  }
  return result;
}

unint64_t sub_10016001C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A31E8;
  if (!qword_1011A31E8)
  {
    v1 = sub_100044B54(&qword_1011A31F0);
    sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A31E8);
  }
  return result;
}

uint64_t sub_1001600B8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v10[2];

  sub_1006DB9DC(a1);
  v10[0] = v3;
  v10[1] = v4;
  v5 = sub_100055B68();
  result = Text.init<A>(_:)(v10, &type metadata for String, v5);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v9;
  return result;
}

void sub_10016010C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10016015C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;

  result = ((uint64_t (*)(uint64_t, unint64_t))Image.init(_internalSystemName:))(a1 + 3, 0x8000000100E2F740);
  *v1 = result;
  return result;
}

void sub_100160204(char a1)
{
  __asm { BR              X10 }
}

double sub_100160238()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v0 = AccessibilityIdentifier.libraryTab.unsafeMutableAddressor();
  v2 = *v0;
  v1 = v0[1];
  swift_bridgeObjectRetain();
  v3 = sub_100007E8C(&qword_1011A2A80);
  v4 = sub_100049F28(&qword_1011A2BF8, &qword_1011A2A80, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  View.accessibilityIdentifier(_:)(v2, v1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

uint64_t sub_1001602CC()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_100160624();
  EnvironmentValues.subscript.getter(&var1, &_s6TabKeyVN, &_s6TabKeyVN, v0);
  return var1;
}

_QWORD *sub_100160304@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_100160624();
  result = EnvironmentValues.subscript.getter(&v4, &_s6TabKeyVN, &_s6TabKeyVN, v2);
  *a1 = v4;
  return result;
}

_QWORD *sub_100160350@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_100160624();
  result = EnvironmentValues.subscript.getter(&v4, &_s6TabKeyVN, &_s6TabKeyVN, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_10016039C(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100160624();
  return EnvironmentValues.subscript.setter(&v3, &_s6TabKeyVN, &_s6TabKeyVN, v1);
}

uint64_t sub_1001603E4(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100160624();
  return EnvironmentValues.subscript.setter(&v3, &_s6TabKeyVN, &_s6TabKeyVN, v1);
}

unint64_t sub_10016042C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A31F8;
  if (!qword_1011A31F8)
  {
    v1 = sub_100044B54(&qword_1011A3158);
    sub_1001604B0();
    sub_100049F28(&qword_1011A3230, &qword_1011A3238, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A31F8);
  }
  return result;
}

unint64_t sub_1001604B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3200;
  if (!qword_1011A3200)
  {
    v1 = sub_100044B54(&qword_1011A3150);
    sub_100160534();
    sub_100049F28(&qword_1011A3220, &qword_1011A3228, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3200);
  }
  return result;
}

unint64_t sub_100160534()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011A3208;
  if (!qword_1011A3208)
  {
    v1 = sub_100044B54(&qword_1011A3138);
    v2[0] = sub_100044B54(&qword_1011A3140);
    v2[1] = sub_100044B54(&qword_1011A3160);
    v2[2] = sub_10015FD08(&qword_1011A3168, &qword_1011A3140, (void (*)(void))sub_10015FCE4, (void (*)(void))sub_10015FEEC);
    v2[3] = sub_10015FF98();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.tabItem<A>(_:)>>, 1);
    sub_100049F28(&qword_1011A3210, &qword_1011A3218, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3208);
  }
  return result;
}

unint64_t sub_100160624()
{
  unint64_t result;

  result = qword_1011A3240;
  if (!qword_1011A3240)
  {
    result = swift_getWitnessTable("yr ", &_s6TabKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011A3240);
  }
  return result;
}

uint64_t sub_100160668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001600B8(*(_BYTE *)(v1 + 16), a1);
}

void sub_100160670()
{
  uint64_t v0;

  sub_10016010C(*(_BYTE *)(v0 + 16));
}

void sub_100160678(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_100160684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;

  v8 = sub_100160764();
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1001606D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s8MainViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100160718(uint64_t a1)
{
  uint64_t v2;

  v2 = _s8MainViewVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *_s6TabKeyVMa()
{
  return &_s6TabKeyVN;
}

unint64_t sub_100160764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3268;
  if (!qword_1011A3268)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011CEE90);
    sub_1001607C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3268);
  }
  return result;
}

unint64_t sub_1001607C8()
{
  unint64_t result;

  result = qword_1011A3270;
  if (!qword_1011A3270)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TabIdentifier, &type metadata for TabIdentifier);
    atomic_store(result, (unint64_t *)&qword_1011A3270);
  }
  return result;
}

uint64_t _s14descr1010B3B01O21MusicX_ViewControllerCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A32C8;
  if (!qword_1011A32C8)
    return swift_getSingletonMetadata(a1, &_s14descr1010B3B01O21MusicX_ViewControllerCMn);
  return result;
}

void sub_100160848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[9];

  v2 = qword_10124C918;
  v5[0] = &unk_100EAC6D8;
  sub_1000D9828(319);
  if (v4 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(v3 - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[3] = &unk_100EAC6F0;
    v5[4] = &unk_100EAC6D8;
    v5[5] = &unk_100EAC6D8;
    v5[6] = &unk_100EAC708;
    v5[7] = &unk_100EAC6F0;
    v5[8] = &unk_100EAC6F0;
    swift_initClassMetadata2(a1, 0, 9, v5, a1 + v2);
  }
}

char *sub_1001608F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *result;
  void *v56;
  unsigned int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD v126[4];
  uint64_t v127;

  v7 = v6;
  v125 = a6;
  v124 = a5;
  v110 = a4;
  v106 = a3;
  v122 = a2;
  v118 = sub_100007E8C((uint64_t *)&unk_1011A08E0);
  __chkstk_darwin(v118);
  v117 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100007E8C(&qword_1011A3330);
  __chkstk_darwin(v116);
  v115 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100007E8C(&qword_1011A3338);
  __chkstk_darwin(v114);
  v113 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100007E8C((uint64_t *)&unk_1011A3340);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  __chkstk_darwin(v13);
  v109 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v108 = (uint64_t)&v102 - v16;
  v17 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v17);
  v104 = (uint64_t *)((char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v19);
  v105 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A3350);
  __chkstk_darwin(v21);
  v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v102 - v25;
  v27 = (uint64_t *)&v6[qword_1011A3280];
  *v27 = 0;
  v27[1] = 0;
  v28 = qword_1011A3290;
  v29 = _s8MetadataO5ModelCMa(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = v6;
  *(_QWORD *)&v6[v28] = sub_1004F619C();
  *(_QWORD *)&v30[qword_1011A3298] = 0;
  v31 = qword_1011A32A0;
  v127 = 0;
  v32 = sub_100007E8C(&qword_1011A3358);
  State.init(wrappedValue:)(&v127, v32);
  *(_OWORD *)&v30[v31] = v126[0];
  v33 = qword_1011A32A8;
  v127 = 0;
  v34 = sub_100007E8C((uint64_t *)&unk_1011A3360);
  State.init(wrappedValue:)(&v127, v34);
  *(_OWORD *)&v30[v33] = v126[0];
  v103 = qword_1011A32B0;
  v30[qword_1011A32B0] = 1;
  *(_QWORD *)&v30[qword_1011A32B8] = 0;
  *(_QWORD *)&v30[qword_1011A32C0] = 0;
  v107 = v30;
  v35 = &v30[qword_1011A3288];
  v36 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v111 = *(_QWORD *)(v36 - 8);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
  v37(v35, a1, v36);
  v39 = *v27;
  v38 = v27[1];
  v40 = v124;
  v41 = v125;
  *v27 = v124;
  v27[1] = v41;
  sub_100048AAC(v40, v41);
  sub_10004BA30(v39, v38);
  v42 = *(_QWORD *)&v7[v28];
  v43 = a1;
  v44 = v28;
  v123 = v43;
  v112 = v36;
  ((void (*)(char *))v37)(v26);
  v45 = type metadata accessor for PlaylistCovers.Source(0);
  swift_storeEnumTagMultiPayload(v26, v45, 0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v26, 0, 1, v45);
  KeyPath = swift_getKeyPath(&unk_100EAC748);
  v47 = swift_getKeyPath(&unk_100EAC770);
  sub_10004A160((uint64_t)v26, (uint64_t)v23, &qword_1011A3350);
  swift_retain_n(v42, 2);
  static Published.subscript.setter(v23, v42, KeyPath, v47);
  sub_10004FF60((uint64_t)v26, &qword_1011A3350);
  swift_release();
  v48 = *(_QWORD *)&v7[v28];
  v49 = sub_100047588((uint64_t)&off_1010AA378);
  v50 = swift_getKeyPath(&unk_100EAC790);
  v51 = swift_getKeyPath(&unk_100EAC7B8);
  *(_QWORD *)&v126[0] = v49;
  swift_retain();
  static Published.subscript.setter(v126, v48, v50, v51);
  v52 = *(_QWORD *)&v7[v28];
  v53 = swift_getKeyPath(&unk_100EAC7D8);
  v54 = swift_getKeyPath(&unk_100EAC800);
  LOBYTE(v126[0]) = 1;
  swift_retain();
  static Published.subscript.setter(v126, v52, v53, v54);
  result = (char *)objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v56 = result;
  v57 = objc_msgSend(result, "isCloudLibraryEnabled");

  v58 = v107;
  if (v57)
  {
    if (qword_10119B918 != -1)
      swift_once(&qword_10119B918, sub_1000FE7D4);
    v59 = qword_10124C870;
    v60 = swift_getKeyPath(&unk_100EAC8B0);
    v61 = swift_getKeyPath(&unk_100EAC8D8);
    v62 = v104;
    static Published.subscript.getter(v104, v59, v60, v61);
    swift_release();
    swift_release();
    v63 = type metadata accessor for UserProfile(0);
    v64 = *(_QWORD *)(v63 - 8);
    v65 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63);
    v66 = (uint64_t)v105;
    if (v65 == 1)
    {
      sub_10004FF60((uint64_t)v62, &qword_1011A2290);
      v67 = type metadata accessor for SocialProfile(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 1, 1, v67);
      v68 = v103;
    }
    else
    {
      UserProfile.socialProfile.getter();
      (*(void (**)(_QWORD *, uint64_t))(v64 + 8))(v62, v63);
      v69 = type metadata accessor for SocialProfile(0);
      v70 = 1;
      v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v66, 1, v69);
      v68 = v103;
      if (v71 != 1)
      {
LABEL_9:
        sub_10004FF60(v66, &qword_1011C8D50);
        v58[v68] = v70;
        v72 = *(_QWORD *)&v7[v44];
        v73 = swift_getKeyPath(&unk_100EAC8F8);
        v74 = swift_getKeyPath(&unk_100EAC920);
        LOBYTE(v126[0]) = v70;
        swift_retain();
        static Published.subscript.setter(v126, v72, v73, v74);
        goto LABEL_10;
      }
    }
    v70 = 0;
    goto LABEL_9;
  }
LABEL_10:
  v75 = v110;
  if (v110)
  {
    v76 = *(_QWORD *)&v7[v44];
    v77 = swift_getKeyPath(&unk_100EAC868);
    v78 = swift_getKeyPath(&unk_100EAC890);
    *(_QWORD *)&v126[0] = v106;
    *((_QWORD *)&v126[0] + 1) = v75;
    swift_retain();
    static Published.subscript.setter(v126, v76, v77, v78);
  }
  v79 = *(_QWORD *)&v7[v44];
  v80 = v122;
  v81 = v108;
  sub_10004A160(v122, v108, (uint64_t *)&unk_1011B5660);
  v82 = swift_getKeyPath(&unk_100EAC820);
  v83 = swift_getKeyPath(&unk_100EAC848);
  v84 = v109;
  sub_10004A160(v81, v109, (uint64_t *)&unk_1011B5660);
  swift_retain_n(v79, 2);
  static Published.subscript.setter(v84, v79, v82, v83);
  sub_10004FF60(v81, (uint64_t *)&unk_1011B5660);
  swift_release();

  swift_retain();
  sub_1004FECD0(v85, (uint64_t)v126);
  v86 = (char *)(id)UIHostingController.init(rootView:)(v126);
  sub_100161E98();
  objc_msgSend(v86, "setModalInPresentation:", 1);
  v87 = qword_1011A3290;
  swift_beginAccess(*(_QWORD *)&v86[qword_1011A3290] + OBJC_IVAR____TtCOO5Music15PlaylistEditing8Metadata5Model__title, v126, 33, 0);
  swift_retain();
  v88 = sub_100007E8C((uint64_t *)&unk_1011A3370);
  v89 = v113;
  Published.projectedValue.getter(v88);
  swift_endAccess(v126);
  swift_release();
  swift_beginAccess(*(_QWORD *)&v86[v87] + OBJC_IVAR____TtCOO5Music15PlaylistEditing8Metadata5Model__image, v126, 33, 0);
  swift_retain();
  v90 = sub_100007E8C(&qword_1011C5180);
  v91 = v115;
  Published.projectedValue.getter(v90);
  swift_endAccess(v126);
  swift_release();
  swift_beginAccess(*(_QWORD *)&v86[v87] + OBJC_IVAR____TtCOO5Music15PlaylistEditing8Metadata5Model__isVisible, v126, 33, 0);
  swift_retain();
  v92 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v93 = v117;
  Published.projectedValue.getter(v92);
  swift_endAccess(v126);
  swift_release();
  v94 = sub_100049F28(&qword_1011C6850, &qword_1011A3338, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v95 = sub_100049F28((unint64_t *)&unk_1011A3390, &qword_1011A3330, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v96 = sub_100049F28(&qword_1011A0928, (uint64_t *)&unk_1011A08E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v97 = v119;
  Publishers.CombineLatest3.init(_:_:_:)(v89, v91, v93, v114, v116, v118, v94, v95, v96);
  v98 = swift_allocObject(&unk_1010B3950, 24, 7);
  swift_unknownObjectWeakInit(v98 + 16);
  v99 = sub_100049F28((unint64_t *)&unk_1011A33A0, (uint64_t *)&unk_1011A3340, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
  v100 = v121;
  v101 = Publisher<>.sink(receiveValue:)(sub_1001660E8, v98, v121, v99);
  swift_release();

  sub_10004BA30(v124, v125);
  sub_10004FF60(v80, (uint64_t *)&unk_1011B5660);
  (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v123, v112);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v97, v100);
  *(_QWORD *)&v86[qword_1011A3298] = v101;
  swift_release();
  return v86;
}

void sub_100161424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  objc_class *v9;
  Swift::String v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[3];

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, (char *)v17 + 1, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = sub_100163644();
    v10 = String.trim()();
    v11 = swift_bridgeObjectRelease().n128_u64[0];
    v12 = ((unint64_t)v10._object >> 56) & 0xF;
    if (((uint64_t)v10._object & 0x2000000000000000) == 0)
      v12 = v10._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if (v12)
    {
      KeyPath = swift_getKeyPath(&unk_100EAC940);
      v14 = swift_getKeyPath(&unk_100EAC968);
      swift_retain();
      static Published.subscript.getter(v17, v15, KeyPath, v14);
      swift_release();
      swift_release();
      v11 = swift_release().n128_u64[0];
      LOBYTE(v12) = LOBYTE(v17[0]) ^ 1;
    }
    -[objc_class setEnabled:](v9, "setEnabled:", v12 & 1, *(double *)&v11);

    v16 = v8;
    objc_msgSend(v16, "setModalInPresentation:", sub_100162338(v2, v3, v4, v5) & 1);

  }
}

void sub_100161584(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100166110();
}

void sub_1001615A8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  id v14;
  objc_class *v15;
  id v16;
  objc_class *v17;
  _BYTE v18[16];
  objc_super v19;

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (objc_class *)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
  v19.receiver = v0;
  v19.super_class = v7;
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v8 = objc_msgSend(v0, "navigationItem");
  v9 = String.LocalizationValue.init(stringLiteral:)(0x79616C502077654ELL, 0xEC0000007473696CLL);
  static Locale.current.getter(v9);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setTitle:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v13 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v13, "setLargeTitleDisplayMode:", 2);

  v14 = objc_msgSend(v0, "navigationItem");
  v15 = sub_1001634E0();
  objc_msgSend(v14, "setLeftBarButtonItem:", v15);

  v16 = objc_msgSend(v0, "navigationItem");
  v17 = sub_100163644();
  objc_msgSend(v16, "setRightBarButtonItem:", v17);

}

void sub_10016179C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001615A8();

}

void sub_1001617D0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "window");

    if (v3 && (v4 = objc_msgSend(v3, "windowScene"), v3, v4))
    {
      v5 = objc_msgSend(v4, "coordinateSpace");

      objc_msgSend(v5, "bounds");
      v7 = v6;
      v9 = v8;
      swift_unknownObjectRelease(v5);
      v10 = 0;
      v11 = v7;
      v12 = v9;
    }
    else
    {
      v11 = 0;
      v12 = 0;
      v10 = 1;
    }
    sub_10016336C(v11, v12, v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001618E4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1001617D0();

}

void sub_100161918(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v11;
  objc_super v12;

  swift_unknownObjectRetain(a3, a2);
  v11 = a1;
  sub_10016336C(*(uint64_t *)&a4, *(uint64_t *)&a5, 0);
  v12.receiver = v11;
  v12.super_class = (Class)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
  objc_msgSendSuper2(&v12, "viewWillTransitionToSize:withTransitionCoordinator:", a3, a4, a5);

  swift_unknownObjectRelease(a3);
}

void sub_1001619B4(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
  objc_msgSendSuper2(&v12, "viewIsAppearing:", a1 & 1);
  sub_100161B08((char *)v1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = sub_100007E8C(&qword_1011A1750);
      v7 = swift_allocObject(v6, 48, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100EA7AA0;
      *(_QWORD *)(v7 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
      *(_QWORD *)(v7 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
      v8 = swift_allocObject(&unk_1010B3978, 24, 7);
      *(_QWORD *)(v8 + 16) = v1;
      v9 = sub_10004A07C(0, &qword_1011A33B0, UIWindow_ptr);
      v10 = v1;
      v11 = UIView.registerForTraitChanges<A>(_:handler:)(v7, sub_100166458, v8, v9);
      swift_release(v8);
      swift_bridgeObjectRelease(v7);

      swift_unknownObjectRelease(v11);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100161B08(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v16 - v6;
  v8 = objc_msgSend(a1, "view");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "window");

    if (v10)
    {
      v11 = *(_QWORD *)&a1[qword_1011A3290];
      v12 = objc_msgSend(v10, "traitCollection", swift_retain(v11).n128_f64[0]);
      v13 = objc_msgSend(v12, "horizontalSizeClass");

      UserInterfaceSizeClass.init(_:)(v13);
      KeyPath = swift_getKeyPath(&unk_100EAC988);
      v15 = swift_getKeyPath(&unk_100EAC9B0);
      sub_10004A160((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1011A33B8);
      swift_retain(v11);
      static Published.subscript.setter(v5, v11, KeyPath, v15);
      sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011A33B8);
      swift_release(v11);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100161C94(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1001619B4(a3);

}

uint64_t sub_100161CD4(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  __n128 v18;
  _BYTE v21[24];
  objc_super v22;

  v3 = type metadata accessor for MetricsEvent.Page(0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (objc_class *)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
  v22.receiver = v1;
  v22.super_class = v6;
  objc_msgSendSuper2(&v22, "viewDidAppear:", a1 & 1);
  v7 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v8 = MetricsEvent.Page.playlistCreation.unsafeMutableAddressor();
  sub_100166414(v8, (uint64_t)v5);
  sub_100540B34();
  v10 = v9;
  v12 = v11;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v13 = qword_10124C790;
  swift_retain(qword_10124C790);
  v14 = GroupActivitiesManager.hasJoined.getter();
  v15 = GroupActivitiesManager.participantsCount.getter();
  v16 = (uint64_t *)(v13 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v13 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v21, 0, 0);
  v17 = *v16;
  v18 = swift_release(v13);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v7) + 0xA0))(v5, v10, v12, v14 & 1, v15, v17, v18);

  swift_bridgeObjectRelease(v12);
  return sub_10005B748((uint64_t)v5, type metadata accessor for MetricsEvent.Page);
}

void sub_100161E58(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100161CD4(a3);

}

uint64_t sub_100161E98()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _OWORD v23[2];
  uint64_t v24;
  char v25[72];

  v1 = sub_100007E8C((uint64_t *)&unk_1011A3470);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A23A8);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v7 = (id)*ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.unsafeMutableAddressor();
  ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  UIScreen.Dimensions.size.getter(v7);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v9;
  v10 = swift_allocObject(&unk_1010B3AB8, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  v11 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v11, 48, 7);
  swift_retain();
  v12 = v0;
  v13 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_100166CE4, v10);
  v23[0] = *(_OWORD *)&v12[qword_1011A32A0];
  v24 = v13;
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3480);
  State.wrappedValue.setter(&v24, v14);
  if (qword_10119B918 != -1)
    swift_once(&qword_10119B918, sub_1000FE7D4);
  swift_beginAccess(qword_10124C870 + OBJC_IVAR____TtC5Music19UserProfileObserver__profile, v23, 33, 0);
  v15 = sub_100007E8C(&qword_1011A1618);
  Published.projectedValue.getter(v15);
  swift_endAccess(v23);
  v16 = swift_allocObject(&unk_1010B3AE0, 24, 7);
  *(_QWORD *)(v16 + 16) = v12;
  v17 = sub_100049F28(&qword_1011A3490, (uint64_t *)&unk_1011A3470, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v18 = v12;
  v19 = Publisher<>.sink(receiveValue:)(sub_100166CE4, v16, v1, v17);
  v20 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v20);
  v23[0] = *(_OWORD *)&v18[qword_1011A32A8];
  v24 = v19;
  v21 = sub_100007E8C(&qword_1011A3498);
  return State.wrappedValue.setter(&v24, v21);
}

double sub_10016211C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19[4];
  _QWORD v20[15];

  if ((sub_100166244() & 1) != 0)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v20);
    v1 = v20[3];
    swift_bridgeObjectRetain();
    sub_100065184(v20);
    v2 = sub_10075BDAC(3u, v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = qword_1011A3290;
  KeyPath = swift_getKeyPath(&unk_100EACA60);
  v5 = swift_getKeyPath(&unk_100EACA88);
  swift_retain();
  static Published.subscript.getter(v19, v6, KeyPath, v5);
  swift_release();
  swift_release();
  swift_release();
  LODWORD(KeyPath) = sub_10075C50C(3u, v19[0]);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if ((v2 & 1) != (_DWORD)KeyPath)
  {
    if ((v2 & 1) != 0)
    {
      *(_BYTE *)(v0 + qword_1011A32B0) = 1;
      v8 = *(_QWORD *)(v0 + v3);
      v9 = swift_getKeyPath(&unk_100EAC8F8);
      v10 = swift_getKeyPath(&unk_100EAC920);
      LOBYTE(v19[0]) = 1;
      swift_retain();
      static Published.subscript.setter(v19, v8, v9, v10);
      v11 = *(_QWORD *)(v0 + v3);
      v12 = swift_getKeyPath(&unk_100EACA60);
      v13 = swift_getKeyPath(&unk_100EACA88);
      swift_retain();
      v14 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(v19, v11, v12, v13);
      sub_10019539C(&v18, 3u);
    }
    else
    {
      v15 = *(_QWORD *)(v0 + v3);
      v16 = swift_getKeyPath(&unk_100EACA60);
      v17 = swift_getKeyPath(&unk_100EACA88);
      swift_retain();
      v14 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(v19, v15, v16, v17);
      sub_1001A3878(3u);
    }
    v14(v19, 0);
    swift_release();
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100162338(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t countAndFlagsBits;
  uint64_t v39;
  _QWORD v40[2];

  v5 = v4;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&countAndFlagsBits - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v13 = a2;
  }
  else
  {
    v14 = *(_QWORD *)(v5 + qword_1011A3290);
    KeyPath = swift_getKeyPath(&unk_100EAC868);
    v16 = swift_getKeyPath(&unk_100EAC890);
    swift_retain(v14);
    static Published.subscript.getter(v40, v17, KeyPath, v16);
    swift_release(v14);
    swift_release(KeyPath);
    swift_release(v16);
    v13 = v40[1];
  }
  swift_bridgeObjectRetain();
  v18 = String.trim()();
  countAndFlagsBits = v18._countAndFlagsBits;
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v18._object);
  v19 = a3;
  if (a3)
    goto LABEL_6;
  v20 = *(_QWORD *)(v5 + qword_1011A3290);
  v21 = swift_getKeyPath(&unk_100EACA18);
  v22 = swift_getKeyPath(&unk_100EACA40);
  swift_retain(v20);
  static Published.subscript.getter(v40, v23, v21, v22);
  swift_release(v20);
  swift_release(v21);
  v24 = swift_release(v22);
  v19 = (void *)v40[0];
  if (v40[0])
  {
LABEL_6:
    v25 = a3;

    v26 = 1;
    if (a4 == 2)
    {
LABEL_7:
      v27 = *(_QWORD *)(v5 + qword_1011A3290);
      v28 = swift_getKeyPath(&unk_100EAC8F8);
      v29 = swift_getKeyPath(&unk_100EAC920);
      swift_retain(v27);
      static Published.subscript.getter(v40, v30, v28, v29);
      swift_release(v27);
      swift_release(v28);
      v24 = swift_release(v29);
      v31 = LOBYTE(v40[0]);
      goto LABEL_10;
    }
  }
  else
  {
    v26 = 0;
    if (a4 == 2)
      goto LABEL_7;
  }
  v31 = a4 & 1;
LABEL_10:
  if (((uint64_t)v18._object & 0x2000000000000000) != 0)
    v32 = ((unint64_t)v18._object >> 56) & 0xF;
  else
    v32 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v33 = *(unsigned __int8 *)(v5 + qword_1011A32B0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v5 + qword_1011A3288, v9, v24);
  v34 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v9);
  dispatch thunk of Collection.endIndex.getter(&v39, v9, v34);
  v35 = dispatch thunk of Collection.distance(from:to:)(v40, &v39, v9, v34);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v32)
    v36 = 1;
  else
    v36 = v26;
  return (v36 | v31 ^ v33) & 1 | (v35 > 0);
}

void sub_100162620()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, __n128);
  uint64_t v9;
  __n128 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100162338(0, 0, 0, 2) & 1) == 0)
    goto LABEL_3;
  v4 = *(_QWORD *)&v0[qword_1011A3290];
  KeyPath = swift_getKeyPath(&unk_100EAC940);
  v6 = swift_getKeyPath(&unk_100EAC968);
  swift_retain(v4);
  static Published.subscript.getter(&v14, v7, KeyPath, v6);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v4);
  if ((v14 & 1) == 0)
  {
    sub_100162784();
    v12 = v11;
    objc_msgSend(v0, "presentViewController:animated:completion:", v11, 1, 0);

  }
  else
  {
LABEL_3:
    v8 = *(void (**)(char *, __n128))&v0[qword_1011A3280];
    if (v8)
    {
      v9 = *(_QWORD *)&v0[qword_1011A3280 + 8];
      swift_storeEnumTagMultiPayload(v3, v1, 2);
      v10 = swift_retain(v9);
      v8(v3, v10);
      sub_10004BA30((uint64_t)v8, v9);
      sub_10005B748((uint64_t)v3, type metadata accessor for PlaylistCreation.FlowResult);
    }
  }
}

void sub_100162784()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v45;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String.LocalizationValue.init(stringLiteral:)(0x79616C502077654ELL, 0xEC0000007473696CLL);
  static Locale.current.getter(v8);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v10 = v9;
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000033, 0x8000000100E2F9D0);
  static Locale.current.getter(v11);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 0);

  v17 = String.LocalizationValue.init(stringLiteral:)(0x2064726163736944, 0xEF7365676E616843);
  static Locale.current.getter(v17);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Alert action to discard playlist edits", 38, 2);
  v19 = v18;
  v20 = swift_allocObject(&unk_1010B3950, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v1);
  swift_retain(v20);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  aBlock[4] = sub_100166CB0;
  v45 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  aBlock[3] = &unk_1010B3A80;
  v22 = _Block_copy(aBlock);
  swift_release(v45);
  v23 = (void *)objc_opt_self(UIAlertAction);
  v24 = objc_msgSend(v23, "actionWithTitle:style:handler:", v21, 2, v22);
  _Block_release(v22);

  swift_release(v20);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x696445207065654BLL, 0xEC000000676E6974);
  static Locale.current.getter(v25);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Alert action to continue editing playlist", 41, 2);
  v27 = v26;
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v23, "actionWithTitle:style:handler:", v28, 1, 0, swift_bridgeObjectRelease(v27).n128_f64[0]);

  objc_msgSend(v16, "addAction:", v24);
  objc_msgSend(v16, "addAction:", v29);
  v30 = objc_msgSend(v1, "navigationItem");
  v31 = objc_msgSend(v30, "leadingItemGroups");

  v32 = sub_10004A07C(0, &qword_1011A3468, UIBarButtonItemGroup_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v41 = v33;
    else
      v41 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v34 = (void *)_CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v33);
    if (!v34)
      goto LABEL_12;
  }
  else
  {
    v34 = *(void **)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v34)
      goto LABEL_12;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
    v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
  }
  else
  {
    if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_20;
    }
    v35 = *(id *)(v33 + 32);
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "barButtonItems", swift_bridgeObjectRelease(v33).n128_f64[0]);

  v38 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
  v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

  if (!((unint64_t)v33 >> 62))
  {
    v34 = *(void **)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v34)
      goto LABEL_8;
LABEL_12:
    v40 = objc_msgSend(v16, "popoverPresentationController", swift_bridgeObjectRelease(v33).n128_f64[0]);
    objc_msgSend(v40, "setBarButtonItem:", v34);

    return;
  }
LABEL_20:
  if (v33 < 0)
    v42 = v33;
  else
    v42 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v34 = (void *)_CocoaArrayWrapper.endIndex.getter(v42);
  swift_bridgeObjectRelease(v33);
  if (!v34)
    goto LABEL_12;
LABEL_8:
  if ((v33 & 0xC000000000000001) != 0)
  {
    v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    goto LABEL_11;
  }
  if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v39 = *(id *)(v33 + 32);
LABEL_11:
    v34 = v39;
    goto LABEL_12;
  }
  __break(1u);
}

void sub_100162D20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void (*v9)(_BYTE *);
  uint64_t v10;
  void *v11;
  void *v12;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a2 + 16;
  swift_beginAccess(v6, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(void (**)(_BYTE *))(Strong + qword_1011A3280);
    v10 = *(_QWORD *)(Strong + qword_1011A3280 + 8);
    sub_100048AAC((uint64_t)v9, v10);

    if (v9)
    {
      swift_storeEnumTagMultiPayload(v5, v3, 2);
      v9(v5);
      sub_10004BA30((uint64_t)v9, v10);
      sub_10005B748((uint64_t)v5, type metadata accessor for PlaylistCreation.FlowResult);
    }
  }
  swift_beginAccess(v6, v13, 0, 0);
  v11 = (void *)swift_unknownObjectWeakLoadStrong(v6);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

id sub_100162E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  id v26;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E2F940);
  static Locale.current.getter(v7);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, "Alert title for playlist creation error", 39, 2);
  v9 = v8;
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x8000000100E2F990);
  static Locale.current.getter(v10);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v13, v14, 1);

  v16 = String.cancelButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = (void *)objc_opt_self(UIAlertAction);
  v19 = objc_msgSend(v18, "actionWithTitle:style:handler:", v17, 1, 0);

  objc_msgSend(v15, "addAction:", v19);
  v20 = String.LocalizationValue.init(stringLiteral:)(0x6961674120797254, 0xE90000000000006ELL);
  static Locale.current.getter(v20);
  String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v3, 0, 0, 256);
  v22 = v21;
  v23 = swift_allocObject(&unk_1010B3950, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v0);
  swift_retain(v23);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  aBlock[4] = sub_100166BF8;
  v30 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100223938;
  aBlock[3] = &unk_1010B3A30;
  v25 = _Block_copy(aBlock);
  v26 = objc_msgSend(v18, "actionWithTitle:style:handler:", v24, 0, v25, swift_release(v30).n128_f64[0]);
  _Block_release(v25);

  objc_msgSend(v15, "addAction:", v26, swift_release(v23).n128_f64[0]);
  objc_msgSend(v15, "setPreferredAction:", v26);

  return v15;
}

uint64_t sub_1001631C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v7;
  v4[9] = v8;
  return swift_task_switch(sub_100163234, v7, v8);
}

uint64_t sub_100163234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011A32DC);
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_1001632D8;
    return sub_100163EA8();
  }
  else
  {
    v5 = swift_release(*(_QWORD *)(v0 + 56));
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
  }
}

uint64_t sub_1001632D8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));

  return swift_task_switch(sub_100163328, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_100163328()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10016336C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v23;
  id v24;
  CGRect v25;

  v7 = objc_msgSend(v3, "navigationItem");
  v8 = objc_msgSend(v7, "navigationBar");

  if (v8)
  {
    objc_msgSend(v8, "frame");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v25.origin.x = v10;
    v25.origin.y = v12;
    v25.size.width = v14;
    v25.size.height = v16;
    CGRectGetHeight(v25);
    v17 = static HI.Modal.modalSize(modalType:sceneSize:navigationBarHeight:)(0, a1, a2, a3 & 1);
    v19 = v18;
    objc_msgSend(v3, "preferredContentSize");
    if (v17 != v21 || v19 != v20)
    {
      objc_msgSend(v3, "setPreferredContentSize:", v17, v19);
      v23 = objc_msgSend(v3, "navigationController");
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, "setPreferredContentSize:", v17, v19);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

objc_class *sub_1001634E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  UIBarButtonItem v6;
  void *v7;
  id v8;
  UIAction_optional v10;
  UIMenu_optional v11;

  v1 = qword_1011A32B8;
  v2 = *(void **)(v0 + qword_1011A32B8);
  if (v2)
  {
    v3 = *(objc_class **)(v0 + qword_1011A32B8);
  }
  else
  {
    v4 = v0;
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
    v5 = swift_allocObject(&unk_1010B3950, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v0);
    v10.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100166BF0, v5);
    v10.is_nil = 0;
    v6.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v10, v11).super.super.isa;
    v7 = *(void **)(v0 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v6;
    v3 = v6.super.super.isa;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1001635F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100162620();

  }
}

objc_class *sub_100163644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  Swift::String_optional v16;
  Class isa;
  void *v18;
  id v19;
  _BYTE v21[16];
  UIImage_optional v22;
  UIAction_optional v23;
  UIMenu_optional v24;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = qword_1011A32C0;
  v9 = *(void **)(v1 + qword_1011A32C0);
  if (v9)
  {
    v10 = *(objc_class **)(v1 + qword_1011A32C0);
  }
  else
  {
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    v11 = String.LocalizationValue.init(stringLiteral:)(0x657461657243, 0xE600000000000000);
    static Locale.current.getter(v11);
    v12 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v14 = v13;
    sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
    v15 = swift_allocObject(&unk_1010B3950, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16, v1);
    v22.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100166B50, v15);
    v16.value._countAndFlagsBits = v12;
    v16.value._object = v14;
    v22.value.super.isa = 0;
    v23.value.super.super.isa = 0;
    isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v16, v22, v23, v24).super.super.isa;
    -[objc_class setStyle:](isa, "setStyle:", 2);
    v18 = *(void **)(v1 + v8);
    *(_QWORD *)(v1 + v8) = isa;
    v10 = isa;

    v9 = 0;
  }
  v19 = v9;
  return v10;
}

double sub_100163834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, _QWORD *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  type metadata accessor for MainActor(0);
  v13 = swift_retain(a2);
  v14 = static MainActor.shared.getter(v13);
  v15 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = a2;
  v16 = a5(v11, a4, v15);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_10016391C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[8] = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E460);
  v4[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricsEvent.Click(0);
  v4[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[12] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[13] = v10;
  v4[14] = v11;
  return swift_task_switch(sub_1001639F0, v10, v11);
}

uint64_t sub_1001639F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 120) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1011A32DC);
    *(_QWORD *)(v0 + 128) = v3;
    *v3 = v0;
    v3[1] = sub_100163C5C;
    return sub_100163EA8();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = (void *)*MetricsReportingController.shared.unsafeMutableAddressor();
    v9 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = v8;
    v11 = MetricsEvent.Page.playlistCreation.unsafeMutableAddressor();
    sub_100166414(v11, v7);
    v12 = type metadata accessor for MetricsEvent.Page(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(1701736292, 0xE400000000000000, 5, 9, v5, 0, 0, 9, v6, 0, 0, 0xFF00u, v7, 0);
    sub_100540B34();
    v14 = v13;
    v16 = v15;
    if (qword_10119B8B8 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v17 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 72);
    v18 = qword_10124C790;
    swift_retain(qword_10124C790);
    v19 = GroupActivitiesManager.hasJoined.getter();
    v20 = GroupActivitiesManager.participantsCount.getter();
    v21 = (uint64_t *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v0 + 40, 0, 0);
    v22 = *v21;
    v23 = swift_release(v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v10) + 0xB8))(v17, v14, v16, v19 & 1, v20, v22, v23);

    swift_bridgeObjectRelease(v16);
    sub_10005B748(v17, type metadata accessor for MetricsEvent.Click);
    swift_task_dealloc(v17);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100163C5C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));

  return swift_task_switch(sub_100163CAC, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_100163CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (void *)*MetricsReportingController.shared.unsafeMutableAddressor();
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 1, 1, v5);
  v6 = v4;
  v7 = MetricsEvent.Page.playlistCreation.unsafeMutableAddressor();
  sub_100166414(v7, v3);
  v8 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 0, 1, v8);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(1701736292, 0xE400000000000000, 5, 9, v1, 0, 0, 9, v2, 0, 0, 0xFF00u, v3, 0);
  sub_100540B34();
  v10 = v9;
  v12 = v11;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v13 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 72);
  v14 = qword_10124C790;
  swift_retain(qword_10124C790);
  v15 = GroupActivitiesManager.hasJoined.getter();
  v16 = GroupActivitiesManager.participantsCount.getter();
  v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v0 + 40, 0, 0);
  v18 = *v17;
  v19 = swift_release(v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v6) + 0xB8))(v13, v10, v12, v15 & 1, v16, v18, v19);

  swift_bridgeObjectRelease(v12);
  sub_10005B748(v13, type metadata accessor for MetricsEvent.Click);
  swift_task_dealloc(v13);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100163EA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v1[91] = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  v1[92] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B5660) - 8);
  v1[93] = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v1[94] = v4;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[95] = swift_task_alloc(v5);
  v1[96] = swift_task_alloc(v5);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v1[97] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[98] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v1[99] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[100] = swift_task_alloc(v9);
  v1[101] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v1[102] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v1[103] = v12;
  v1[104] = v13;
  return swift_task_switch(sub_100163FB8, v12, v13);
}

uint64_t sub_100163FB8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(char **)(v0 + 728);
  v2 = qword_1011A3290;
  *(_QWORD *)(v0 + 840) = qword_1011A3290;
  v3 = *(_QWORD *)&v1[v2];
  *(_QWORD *)(v0 + 848) = v3;
  *(_QWORD *)(v0 + 680) = 0;
  *(_OWORD *)(v0 + 648) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  *(_BYTE *)(v0 + 688) = -1;
  swift_retain(v3);
  PresentationSource.init(viewController:position:)(v1, v0 + 648, v0 + 520);
  v4 = (_QWORD *)swift_task_alloc(dword_1011B83D4);
  *(_QWORD *)(v0 + 856) = v4;
  *v4 = v0;
  v4[1] = sub_10016405C;
  return sub_1004F4E6C(v0 + 520, 1);
}

uint64_t sub_10016405C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 856);
  v4 = *(_QWORD *)(*v1 + 848);
  *(_BYTE *)(*v1 + 691) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  sub_100064B4C(v2 + 520);
  return swift_task_switch(sub_1001640D8, *(_QWORD *)(v2 + 824), *(_QWORD *)(v2 + 832));
}

uint64_t sub_1001640D8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  objc_class *v9;
  objc_class *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v87;
  void *v88;
  void *object;
  NSObject *loga;
  os_log_t log;
  uint64_t countAndFlagsBits;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  char v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  uint64_t v117;
  void *v118;
  void *v119;
  _QWORD *v120;
  void *v121;
  void *v122;

  v1 = *(unsigned __int8 *)(v0 + 691);
  swift_release(*(_QWORD *)(v0 + 816));
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 840);
    v3 = *(_QWORD *)(v0 + 808);
    v4 = *(_QWORD *)(v0 + 784);
    v117 = *(_QWORD *)(v0 + 776);
    v120 = *(_QWORD **)(v0 + 768);
    v5 = *(_QWORD *)(v0 + 728);
    v6 = *(_QWORD *)(v5 + v2);
    KeyPath = swift_getKeyPath(&unk_100EAC940);
    v8 = swift_getKeyPath(&unk_100EAC968);
    *(_BYTE *)(v0 + 690) = 1;
    swift_retain(v6);
    static Published.subscript.setter(v0 + 690, v6, KeyPath, v8);
    v9 = sub_100163644();
    -[objc_class setEnabled:](v9, "setEnabled:", 0);

    v10 = sub_1001634E0();
    -[objc_class setEnabled:](v10, "setEnabled:", 0);

    v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v105(v3, v5 + qword_1011A3288, v117);
    v11 = *(_QWORD *)(v5 + v2);
    v12 = swift_getKeyPath(&unk_100EAC868);
    v13 = swift_getKeyPath(&unk_100EAC890);
    swift_retain(v11);
    static Published.subscript.getter((_QWORD *)(v0 + 696), v14, v12, v13);
    swift_release(v11);
    swift_release(v12);
    swift_release(v13);
    v106 = *(_QWORD *)(v0 + 704);
    v107 = *(_QWORD *)(v0 + 696);
    v15 = *(_QWORD *)(v5 + v2);
    v16 = swift_getKeyPath(&unk_100EAC8F8);
    v17 = swift_getKeyPath(&unk_100EAC920);
    swift_retain(v15);
    static Published.subscript.getter((_QWORD *)(v0 + 689), v18, v16, v17);
    swift_release(v15);
    swift_release(v16);
    swift_release(v17);
    v104 = *(_BYTE *)(v0 + 689);
    v19 = *(_QWORD *)(v5 + v2);
    v20 = swift_getKeyPath(&unk_100EAC820);
    v21 = swift_getKeyPath(&unk_100EAC848);
    swift_retain(v19);
    static Published.subscript.getter(v120, v22, v20, v21);
    swift_release(v19);
    swift_release(v20);
    swift_release(v21);
    v23 = *(_QWORD *)(v5 + v2);
    v24 = swift_getKeyPath(&unk_100EAC9D0);
    v25 = swift_getKeyPath(&unk_100EAC9F8);
    swift_retain(v23);
    static Published.subscript.getter((_QWORD *)(v0 + 16), v26, v24, v25);
    swift_release(v23);
    swift_release(v24);
    swift_release(v25);
    v28 = *(void **)(v0 + 16);
    v27 = *(_QWORD *)(v0 + 24);
    v121 = *(void **)(v0 + 40);
    v122 = *(void **)(v0 + 32);
    v118 = *(void **)(v0 + 56);
    v119 = *(void **)(v0 + 48);
    v115 = *(void **)(v0 + 72);
    v116 = *(void **)(v0 + 64);
    v113 = *(_QWORD *)(v0 + 88);
    v114 = *(_QWORD *)(v0 + 80);
    v111 = *(_QWORD *)(v0 + 104);
    v112 = *(_QWORD *)(v0 + 96);
    v109 = *(_QWORD *)(v0 + 120);
    v110 = *(_QWORD *)(v0 + 112);
    v108 = *(_QWORD *)(v0 + 128);
    v102 = v27;
    v103 = v28;
    if (v28 == (void *)1)
      goto LABEL_10;
    *(_QWORD *)(v0 + 136) = v28;
    *(_QWORD *)(v0 + 144) = v27;
    *(_QWORD *)(v0 + 152) = v122;
    *(_QWORD *)(v0 + 160) = v121;
    *(_QWORD *)(v0 + 168) = v119;
    *(_QWORD *)(v0 + 176) = v118;
    *(_QWORD *)(v0 + 184) = v116;
    *(_QWORD *)(v0 + 192) = v115;
    *(_QWORD *)(v0 + 200) = v114;
    *(_QWORD *)(v0 + 208) = v113;
    *(_QWORD *)(v0 + 216) = v112;
    *(_QWORD *)(v0 + 224) = v111;
    *(_QWORD *)(v0 + 232) = v110;
    *(_QWORD *)(v0 + 240) = v109;
    *(_QWORD *)(v0 + 248) = v108;
    PlaylistCovers.CarouselItem.cover.getter((_QWORD *)(v0 + 440));
    sub_100065228(v0 + 440, v0 + 360, &qword_1011A33D8);
    if (!*(_QWORD *)(v0 + 360))
      goto LABEL_10;
    v30 = *(_QWORD *)(v0 + 368);
    v29 = *(void **)(v0 + 376);
    v32 = *(void **)(v0 + 384);
    v31 = *(void **)(v0 + 392);
    v33 = *(void **)(v0 + 400);
    v34 = *(void **)(v0 + 408);
    v35 = *(void **)(v0 + 416);
    sub_1001667D4(v30, v29, v32, v31, v33, v34, v35);
    sub_100166830(v0 + 440);
    if (v29)
    {
      v93 = v29;
      *(_BYTE *)(v0 + 592) = v30;
      *(_QWORD *)(v0 + 600) = v29;
      *(_QWORD *)(v0 + 608) = v32;
      *(_QWORD *)(v0 + 616) = v31;
      *(_QWORD *)(v0 + 624) = v33;
      *(_QWORD *)(v0 + 632) = v34;
      *(_QWORD *)(v0 + 640) = v35;
      v36 = v29;
      v37 = v32;
      v96 = v31;
      v38 = v31;
      v39 = v33;
      v40 = v34;
      v100 = v35;
      v41 = v35;
      PlaylistCovers.Recipe.init(from:)((unsigned __int8 *)(v0 + 592), (_QWORD *)(v0 + 256));
      v43 = PlaylistCovers.Recipe.rawJSONRepresentation()();
      if (v42)
      {
        sub_1001668F8((_QWORD *)(v0 + 256));
        if (qword_10119BA00 != -1)
          swift_once(&qword_10119BA00, sub_100165EE4);
        v44 = type metadata accessor for Logger(0);
        sub_100048B14(v44, (uint64_t)qword_10124C900);
        swift_errorRetain(v42);
        v45 = swift_errorRetain(v42);
        v46 = Logger.logObject.getter(v45);
        v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          loga = v46;
          v48 = (uint8_t *)swift_slowAlloc(12, -1);
          v49 = (uint64_t *)swift_slowAlloc(8, -1);
          *(_DWORD *)v48 = 138543362;
          swift_errorRetain(v42);
          v50 = _swift_stdlib_bridgeErrorToNSError(v42);
          *(_QWORD *)(v0 + 720) = v50;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 720, v0 + 728);
          *v49 = v50;
          swift_errorRelease(v42);
          swift_errorRelease(v42);
          _os_log_impl((void *)&_mh_execute_header, loga, v47, "Failed to encode recipe with error=%{public}@", v48, 0xCu);
          v51 = sub_100007E8C((uint64_t *)&unk_1011A33E0);
          swift_arrayDestroy(v49, 1, v51);
          swift_slowDealloc(v49, -1, -1);
          swift_slowDealloc(v48, -1, -1);

          swift_errorRelease(v42);
          sub_100166720(v30, v93, v32, v96, v33, v34, v100);
        }
        else
        {
          sub_100166720(v30, v93, v32, v31, v33, v34, v100);
          swift_errorRelease(v42);
          swift_errorRelease(v42);
          swift_errorRelease(v42);

        }
        log = 0;
        countAndFlagsBits = 0;
        v88 = 0;
        object = 0;
      }
      else
      {
        countAndFlagsBits = v43._countAndFlagsBits;
        object = v43._object;
        sub_1001668F8((_QWORD *)(v0 + 256));
        v87 = objc_allocWithZone((Class)type metadata accessor for PlaylistCovers.ArtworkToken());
        swift_bridgeObjectRetain();
        log = (os_log_t)PlaylistCovers.ArtworkToken.init(coverRepresentation:playlistTitle:)(v0 + 592, v107, v106);
        v88 = 0;
      }
    }
    else
    {
LABEL_10:
      v53 = *(_QWORD *)(*(_QWORD *)(v0 + 728) + *(_QWORD *)(v0 + 840));
      v54 = swift_getKeyPath(&unk_100EACA18);
      v55 = swift_getKeyPath(&unk_100EACA40);
      swift_retain(v53);
      static Published.subscript.getter((_QWORD *)(v0 + 712), v56, v54, v55);
      swift_release(v53);
      swift_release(v54);
      v52 = swift_release(v55);
      log = 0;
      countAndFlagsBits = 0;
      v88 = *(void **)(v0 + 712);
      object = 0;
    }
    v57 = *(_QWORD *)(v0 + 808);
    v58 = *(_QWORD *)(v0 + 800);
    v95 = v58;
    v97 = *(_QWORD *)(v0 + 792);
    v59 = *(_QWORD *)(v0 + 784);
    v60 = *(_QWORD *)(v0 + 776);
    v61 = *(_QWORD *)(v0 + 768);
    v99 = v61;
    v101 = v57;
    v62 = *(_QWORD *)(v0 + 760);
    v94 = v62;
    v63 = *(_QWORD *)(v0 + 752);
    v64 = *(_QWORD *)(v0 + 744);
    v65 = *(_QWORD *)(v0 + 736);
    v98 = *(void **)(v0 + 728);
    static TaskPriority.userInitiated.getter(v52);
    v66 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 0, 1, v66);
    v67 = v58;
    v68 = v60;
    v105(v67, v57, v60);
    sub_10004A160(v61, v62, (uint64_t *)&unk_1011B5660);
    v69 = *(unsigned __int8 *)(v59 + 80);
    v70 = (v69 + 73) & ~v69;
    v71 = *(unsigned __int8 *)(v64 + 80);
    v72 = (v97 + v71 + v70) & ~v71;
    v73 = (v63 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
    v75 = swift_allocObject(&unk_1010B39A0, v74 + 8, v69 | v71 | 7);
    *(_QWORD *)(v75 + 16) = 0;
    *(_QWORD *)(v75 + 24) = 0;
    *(_QWORD *)(v75 + 32) = v107;
    *(_QWORD *)(v75 + 40) = v106;
    *(_QWORD *)(v75 + 48) = v88;
    *(_QWORD *)(v75 + 56) = countAndFlagsBits;
    *(_QWORD *)(v75 + 64) = object;
    *(_BYTE *)(v75 + 72) = v104;
    v76 = v75 + v70;
    v77 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v76, v95, v68);
    sub_100065228(v94, v75 + v72, (uint64_t *)&unk_1011B5660);
    *(_QWORD *)(v75 + v73) = v98;
    *(_QWORD *)(v75 + v74) = log;
    v78 = log;
    v79 = v98;
    v80 = v88;
    v81 = sub_1000E8908(v65, (uint64_t)&unk_1011A33D0, v75);
    swift_release(v81);
    sub_1001666B8(v103, v102, v122, v121, v119, v118, v116, v115, v114, v113, v112, v111, v110, v109, v108);

    sub_10004FF60(v65, (uint64_t *)&unk_1011A13B0);
    sub_10004FF60(v99, (uint64_t *)&unk_1011B5660);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v101, v68);
  }
  v82 = *(_QWORD *)(v0 + 800);
  v83 = *(_QWORD *)(v0 + 768);
  v84 = *(_QWORD *)(v0 + 760);
  v85 = *(_QWORD *)(v0 + 736);
  swift_task_dealloc(*(_QWORD *)(v0 + 808));
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001649A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v8 + 136) = v26;
  *(_QWORD *)(v8 + 144) = v27;
  *(_OWORD *)(v8 + 120) = v25;
  *(_BYTE *)(v8 + 344) = v24;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 80) = a4;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  *(_QWORD *)(v8 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibraryPlaylistResponse(0);
  *(_QWORD *)(v8 + 160) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 168) = v11;
  *(_QWORD *)(v8 + 176) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v8 + 184) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 192) = v13;
  v14 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v8 + 200) = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 208) = swift_task_alloc(v15);
  *(_QWORD *)(v8 + 216) = swift_task_alloc(v15);
  *(_QWORD *)(v8 + 224) = swift_task_alloc(v15);
  v16 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  *(_QWORD *)(v8 + 232) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v8 + 240) = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 248) = swift_task_alloc(v18);
  *(_QWORD *)(v8 + 256) = swift_task_alloc(v18);
  v19 = sub_100007E8C(&qword_1011B1F10);
  *(_QWORD *)(v8 + 264) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A33F0);
  *(_QWORD *)(v8 + 272) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicLibraryPlaylistRequest(0);
  *(_QWORD *)(v8 + 280) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v8 + 288) = v22;
  *(_QWORD *)(v8 + 296) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100164B40, 0, 0);
}

uint64_t sub_100164B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  void (*v37)(uint64_t, uint64_t, __n128);
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  os_log_t log;
  NSObject *loga;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;

  v46 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v48 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(unsigned __int8 *)(v0 + 344);
  v44 = *(_QWORD *)(v0 + 112);
  v41 = *(_QWORD *)(v0 + 128);
  log = *(os_log_t *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 88);
  v7 = objc_msgSend(*(id *)(v0 + 96), "CGImage");
  v8 = type metadata accessor for Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(_QWORD *)(v0 + 304) = v9;
  v9(v2, v5, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  v10 = sub_100049F28((unint64_t *)&unk_1011B5730, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  static MusicLibraryPlaylistRequest.creatingPlaylist<A>(name:description:userImage:coverArtworkRecipe:isPublic:isVisible:curator:tracks:folder:)(v46, v40, 0, 0, v7, log, v44, v6, (_BYTE)v6, v1, v2, v41, v3, v10);

  sub_10004FF60(v2, &qword_1011B1F10);
  sub_10004FF60(v1, &qword_1011A33F0);
  v11 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  v20 = swift_allocObject(&unk_1010B3950, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v48);
  OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_10016696C, v20, 0.5);

  swift_release(v20);
  if (qword_10119BA00 != -1)
    swift_once(&qword_10119BA00, sub_100165EE4);
  v21 = *(_QWORD *)(v0 + 256);
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 120);
  v24 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 312) = sub_100048B14(v24, (uint64_t)qword_10124C900);
  v25 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v21, v23, v22);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  v28 = os_log_type_enabled(v26, v27);
  v29 = *(_QWORD *)(v0 + 256);
  v30 = *(_QWORD *)(v0 + 232);
  if (v28)
  {
    v49 = v27;
    v45 = *(_QWORD *)(v0 + 240);
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v47 = swift_slowAlloc(32, -1);
    v50 = v47;
    *(_DWORD *)v31 = 136446210;
    loga = v26;
    v32 = sub_100049F28((unint64_t *)&qword_1011A9760, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v30);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 56), v30, v32);
    *(_QWORD *)(v0 + 64) = dispatch thunk of Collection.distance(from:to:)(v0 + 48, v0 + 56, v30, v32);
    v33 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v35 = v34;
    *(_QWORD *)(v0 + 72) = sub_100322200(v33, v34, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    v36 = swift_bridgeObjectRelease(v35);
    v37 = *(void (**)(uint64_t, uint64_t, __n128))(v45 + 8);
    v37(v29, v30, v36);
    v26 = loga;
    _os_log_impl((void *)&_mh_execute_header, loga, v49, "Sending playlist creation request with %{public}s song(s)", v31, 0xCu);
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    v37 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 240) + 8);
    ((void (*)(_QWORD, _QWORD))v37)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));
  }

  *(_QWORD *)(v0 + 320) = v37;
  v38 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryPlaylistRequest.response()[1]);
  *(_QWORD *)(v0 + 328) = v38;
  *v38 = v0;
  v38[1] = sub_100164F60;
  return MusicLibraryPlaylistRequest.response()(*(_QWORD *)(v0 + 176));
}

uint64_t sub_100164F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 328);
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001652EC;
  else
    v3 = sub_100164FC4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100164FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  MusicLibraryPlaylistResponse.playlist.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8 = v52(v2, v1, v3);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 192);
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v54 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = Playlist.description.getter(v14);
    v17 = v16;
    *(_QWORD *)(v0 + 40) = sub_100322200(v15, v16, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    v18 = swift_bridgeObjectRelease(v17);
    v51 = *(void (**)(uint64_t, uint64_t, __n128))(v50 + 8);
    v51(v11, v12, v18);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received playlist response, playlist=%{public}s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v51 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 192) + 8);
    ((void (*)(_QWORD, _QWORD))v51)(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 184));
  }

  v19 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 208);
  v22 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 192);
  v25 = *(void **)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 152);
  v48 = v24;
  v49 = v19;
  v26 = *(void **)(v0 + 136);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 1, 1, v27);
  v52(v20, v19, v22);
  type metadata accessor for MainActor(0);
  v28 = v26;
  v30 = static MainActor.shared.getter(v29);
  v31 = *(unsigned __int8 *)(v23 + 80);
  v32 = (v31 + 40) & ~v31;
  v33 = (v21 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (char *)swift_allocObject(&unk_1010B39F0, v33 + 8, v31 | 7);
  *((_QWORD *)v34 + 2) = v30;
  *((_QWORD *)v34 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v34 + 4) = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v34[v32], v20, v22);
  *(_QWORD *)&v34[v33] = v25;
  v35 = v25;
  v36 = sub_100166D14(v48, (uint64_t)&unk_1011A3420, (uint64_t)v34);
  v37 = swift_release(v36);
  v51(v49, v22, v37);
  v38 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 272);
  v41 = *(_QWORD *)(v0 + 256);
  v40 = *(_QWORD *)(v0 + 264);
  v42 = *(_QWORD *)(v0 + 248);
  v44 = *(_QWORD *)(v0 + 216);
  v43 = *(_QWORD *)(v0 + 224);
  v45 = *(_QWORD *)(v0 + 208);
  v46 = *(_QWORD *)(v0 + 176);
  v53 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(v38, *(_QWORD *)(v0 + 280));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001652EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 304))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 232));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 336);
    v38 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 320);
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 232);
    v8 = swift_slowAlloc(22, -1);
    v39 = swift_slowAlloc(64, -1);
    v41 = v39;
    *(_DWORD *)v8 = 136446466;
    v9 = sub_100049F28((unint64_t *)&unk_1011A3408, (uint64_t *)&unk_1011A96F0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    v10 = dispatch thunk of CustomStringConvertible.description.getter(v7, v9);
    v12 = v11;
    *(_QWORD *)(v0 + 16) = sub_100322200(v10, v11, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    v13 = swift_bridgeObjectRelease(v12);
    v38(v6, v7, v13);
    *(_WORD *)(v8 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v5;
    swift_errorRetain(v5);
    v14 = sub_100007E8C(&qword_1011A14B0);
    v15 = String.init<A>(describing:)(v0 + 24, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 32) = sub_100322200(v15, v16, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Didn't receive a playlist response with tracks=%{public}s. Error=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    swift_errorRelease(v18);
    swift_errorRelease(v18);
  }

  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 152);
  v21 = *(void **)(v0 + 136);
  v22 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 1, 1, v22);
  type metadata accessor for MainActor(0);
  v23 = v21;
  v25 = static MainActor.shared.getter(v24);
  v26 = (_QWORD *)swift_allocObject(&unk_1010B39C8, 40, 7);
  v26[2] = v25;
  v26[3] = &protocol witness table for MainActor;
  v26[4] = v23;
  v27 = sub_100166D14(v20, (uint64_t)&unk_1011A3400, (uint64_t)v26);
  swift_release(v27);
  swift_errorRelease(v19);
  v28 = *(_QWORD *)(v0 + 296);
  v29 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 256);
  v30 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 248);
  v34 = *(_QWORD *)(v0 + 216);
  v33 = *(_QWORD *)(v0 + 224);
  v35 = *(_QWORD *)(v0 + 208);
  v36 = *(_QWORD *)(v0 + 176);
  v40 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(v28, *(_QWORD *)(v0 + 280));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100165638(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
    objc_msgSend(v4, "startAnimating");
    v5 = objc_msgSend(v3, "navigationItem");
    v6 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v4);
    objc_msgSend(v5, "setRightBarButtonItem:", v6);

  }
}

uint64_t sub_100165714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for PlaylistCreation.FlowResult(0);
  v6[5] = v7;
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v6[7] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001657A8, v10, v11);
}

uint64_t sub_1001657A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 56));
  v2 = v1 + qword_1011A3280;
  v3 = *(void (**)(uint64_t))(v1 + qword_1011A3280);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 24);
    v7 = *(void **)(v0 + 32);
    v8 = *(_QWORD *)(v2 + 8);
    v9 = *(int *)(sub_100007E8C((uint64_t *)&unk_1011A3430) + 48);
    v10 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
    *(_QWORD *)(v5 + v9) = v7;
    swift_storeEnumTagMultiPayload(v5, v4, 0);
    sub_100048AAC((uint64_t)v3, v8);
    v11 = v7;
    v3(v5);
    sub_10004BA30((uint64_t)v3, v8);
    sub_10005B748(v5, type metadata accessor for PlaylistCreation.FlowResult);
  }
  if (qword_10119BA00 != -1)
    swift_once(&qword_10119BA00, sub_100165EE4);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048B14(v12, (uint64_t)qword_10124C900);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Dismissing playlist creation sheet", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }
  v17 = *(_QWORD *)(v0 + 48);
  v18 = *(void **)(v0 + 16);

  objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, 0);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100165964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 32) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 40) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001659D0, v7, v8);
}

uint64_t sub_1001659D0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  objc_class *v6;
  id v7;
  objc_class *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  double v16;
  unint64_t v17;
  id v18;

  v1 = *(char **)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 40));
  v2 = qword_1011A3290;
  v3 = *(_QWORD *)&v1[qword_1011A3290];
  KeyPath = swift_getKeyPath(&unk_100EAC940);
  v5 = swift_getKeyPath(&unk_100EAC968);
  *(_BYTE *)(v0 + 16) = 0;
  swift_retain(v3);
  static Published.subscript.setter(v0 + 16, v3, KeyPath, v5);
  v6 = sub_1001634E0();
  -[objc_class setEnabled:](v6, "setEnabled:", 1);

  v7 = objc_msgSend(v1, "navigationItem");
  v8 = sub_100163644();
  objc_msgSend(v7, "setRightBarButtonItem:", v8);

  v9 = sub_100163644();
  v10 = *(_QWORD *)&v1[v2];
  v11 = swift_getKeyPath(&unk_100EAC868);
  v12 = swift_getKeyPath(&unk_100EAC890);
  swift_retain(v10);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v13, v11, v12);
  swift_release(v10);
  swift_release(v11);
  swift_release(v12);
  v14 = *(_QWORD *)(v0 + 24);
  v15 = String.trim()();
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&v16 = swift_bridgeObjectRelease(v15._object).n128_u64[0];
  v17 = ((unint64_t)v15._object >> 56) & 0xF;
  if (((uint64_t)v15._object & 0x2000000000000000) == 0)
    v17 = v15._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  -[objc_class setEnabled:](v9, "setEnabled:", v17 != 0, v16);

  v18 = sub_100162E4C();
  objc_msgSend(v1, "presentViewController:animated:completion:", v18, 1, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100165B98(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v5 = a3;
  v4 = a1;
  sub_100162620();

}

void sub_100165BD8(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *);
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;

  v5 = type metadata accessor for PlaylistCreation.FlowResult(0);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))&a1[qword_1011A3280];
  if (v9)
  {
    v10 = *(_QWORD *)&a1[qword_1011A3280 + 8];
    swift_storeEnumTagMultiPayload(v8, v6, 2);
    v11 = a3;
    v12 = a1;
    sub_100048AAC((uint64_t)v9, v10);
    v9(v8);
    sub_10004BA30((uint64_t)v9, v10);
    sub_10005B748((uint64_t)v8, type metadata accessor for PlaylistCreation.FlowResult);

  }
}

void sub_100165CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_10004BA30(*(_QWORD *)(v0 + qword_1011A3280), *(_QWORD *)(v0 + qword_1011A3280 + 8));
  v1 = v0 + qword_1011A3288;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + qword_1011A3290));
  swift_release(*(_QWORD *)(v0 + qword_1011A3298));
  v3 = *(_QWORD *)(v0 + qword_1011A32A0 + 8);
  swift_release(*(_QWORD *)(v0 + qword_1011A32A0));
  swift_release(v3);
  v4 = *(_QWORD *)(v0 + qword_1011A32A8 + 8);
  swift_release(*(_QWORD *)(v0 + qword_1011A32A8));
  swift_release(v4);

}

id sub_100165D80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100165DB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_10004BA30(*(_QWORD *)(a1 + qword_1011A3280), *(_QWORD *)(a1 + qword_1011A3280 + 8));
  v2 = a1 + qword_1011A3288;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release(*(_QWORD *)(a1 + qword_1011A3290));
  swift_release(*(_QWORD *)(a1 + qword_1011A3298));
  v4 = *(_QWORD *)(a1 + qword_1011A32A0 + 8);
  swift_release(*(_QWORD *)(a1 + qword_1011A32A0));
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + qword_1011A32A8 + 8);
  swift_release(*(_QWORD *)(a1 + qword_1011A32A8));
  swift_release(v5);

}

void sub_100165E84()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.MusicX_ViewController", 27, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_100165EB0()
{
  _swift_stdlib_reportUnimplementedInitializer("Music.MusicX_ViewController", 27, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_100165EDC()
{
  return _s14descr1010B3B01O21MusicX_ViewControllerCMa(0);
}

uint64_t sub_100165EE4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_10124C900);
  sub_100048B14(v0, (uint64_t)qword_10124C900);
  return static Logger.music(_:)(0xD000000000000010, 0x8000000100E2FA70);
}

uint64_t sub_100165F44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAC820);
  v5 = swift_getKeyPath(&unk_100EAC848);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_100165FAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C((uint64_t *)&unk_1011B5660);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, (uint64_t *)&unk_1011B5660);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAC820);
  v12 = swift_getKeyPath(&unk_100EAC848);
  sub_10004A160((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1011B5660);
  swift_retain(v10);
  static Published.subscript.setter(v7, v10, KeyPath, v12);
  return sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011B5660);
}

uint64_t sub_1001660C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1001660E8(uint64_t a1)
{
  uint64_t v1;

  sub_100161424(a1, v1);
}

void sub_100166110()
{
  _BYTE *v0;
  _BYTE *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v1 = v0;
  v2 = &v0[qword_1011A3280];
  *v2 = 0;
  v2[1] = 0;
  v3 = qword_1011A3290;
  v4 = _s8MetadataO5ModelCMa(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  *(_QWORD *)&v0[v3] = sub_1004F619C();
  *(_QWORD *)&v0[qword_1011A3298] = 0;
  v5 = qword_1011A32A0;
  v9 = 0;
  v6 = sub_100007E8C(&qword_1011A3358);
  State.init(wrappedValue:)(&v9, v6);
  *(_OWORD *)&v1[v5] = v10;
  v7 = qword_1011A32A8;
  v9 = 0;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3360);
  State.init(wrappedValue:)(&v9, v8);
  *(_OWORD *)&v1[v7] = v10;
  v1[qword_1011A32B0] = 1;
  *(_QWORD *)&v1[qword_1011A32B8] = 0;
  *(_QWORD *)&v1[qword_1011A32C0] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/MusicX_PlaylistCreationViewController.swift", 49, 2, 58, 0);
  __break(1u);
}

uint64_t sub_100166244()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100007E8C(&qword_1011A2290);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_100007E8C(&qword_1011C8D50);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119B918 != -1)
    swift_once(&qword_10119B918, sub_1000FE7D4);
  v6 = qword_10124C870;
  KeyPath = swift_getKeyPath(&unk_100EAC8B0);
  v8 = swift_getKeyPath(&unk_100EAC8D8);
  static Published.subscript.getter(v2, v6, KeyPath, v8);
  swift_release();
  swift_release();
  v9 = type metadata accessor for UserProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9) == 1)
  {
    sub_10004FF60((uint64_t)v2, &qword_1011A2290);
    v11 = type metadata accessor for SocialProfile(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
LABEL_6:
    v13 = 0;
    goto LABEL_7;
  }
  UserProfile.socialProfile.getter();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v2, v9);
  v12 = type metadata accessor for SocialProfile(0);
  v13 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12) == 1)
    goto LABEL_6;
LABEL_7:
  sub_10004FF60((uint64_t)v5, &qword_1011C8D50);
  return v13;
}

uint64_t sub_100166414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100166458()
{
  uint64_t v0;

  sub_100161B08(*(char **)(v0 + 16));
}

uint64_t sub_100166478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = sub_100007E8C((uint64_t *)&unk_1011A96F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 73) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(sub_100007E8C((uint64_t *)&unk_1011B5660) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v5 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  v10 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v10);
  v11 = type metadata accessor for Playlist.Folder(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  v13 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;

  return swift_deallocObject(v0, v14 + 8, v3 | v7 | 7);
}

uint64_t sub_100166598(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_100007E8C((uint64_t *)&unk_1011A96F0);
  sub_100007E8C((uint64_t *)&unk_1011B5660);
  v11 = v1[2];
  v10 = v1[3];
  v3 = v1[5];
  v9 = v1[4];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = (_QWORD *)swift_task_alloc(dword_1011A33CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  return sub_1001649A8(a1, v11, v10, v9, v3, v4, v5, v6);
}

void *sub_1001666B8(void *result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (result != (void *)1)
  {
    sub_100166878(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    return (void *)sub_10016677C(a11, a12, a13, a14, a15);
  }
  return result;
}

void sub_100166720(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  if (a2)
  {

  }
}

uint64_t sub_10016677C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    swift_release(a3);
    swift_release(a4);
    return swift_release(a5);
  }
  return result;
}

id sub_1001667D4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;

  if (a2)
  {
    v11 = a2;
    v12 = a3;
    v13 = a4;
    v14 = a5;
    v15 = a6;
    return a7;
  }
  return result;
}

uint64_t sub_100166830(uint64_t a1)
{
  sub_100166878(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

double sub_100166878(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  double result;

  if (a1)
  {

    sub_100166720(a2, a3, a4, a5, a6, a7, a8);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a10).n128_u64[0];
  }
  return result;
}

_QWORD *sub_1001668F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  swift_bridgeObjectRelease(a1[12]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

void sub_10016696C()
{
  uint64_t v0;

  sub_100165638(v0);
}

uint64_t sub_100166974()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001669A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011A33FC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100165964(a1, v4, v5, v6);
}

uint64_t sub_100166A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100166AA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1011A341C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10006AEE4;
  return sub_100165714(a1, v6, v7, v8, v9, v10);
}

double sub_100166B50(uint64_t a1)
{
  uint64_t v1;

  return sub_100163834(a1, v1, (uint64_t)&unk_1010B3A18, (uint64_t)&unk_1011A3450, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_100166D14);
}

uint64_t sub_100166B84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011A344C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_10016391C(a1, v4, v5, v6);
}

void sub_100166BF0(uint64_t a1)
{
  uint64_t v1;

  sub_1001635F4(a1, v1);
}

double sub_100166BF8(uint64_t a1)
{
  uint64_t v1;

  return sub_100163834(a1, v1, (uint64_t)&unk_1010B3A68, (uint64_t)&unk_1011A3460, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_100166D34);
}

uint64_t sub_100166C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100166C38(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100166C44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011A345C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1001631C8(a1, v4, v5, v6);
}

void sub_100166CB0(uint64_t a1)
{
  uint64_t v1;

  sub_100162D20(a1, v1);
}

uint64_t sub_100166CC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100166CE4()
{
  return sub_10016211C();
}

uint64_t sub_100166D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166DC0(a1, a2, a3, (uint64_t)&unk_1010B3E18, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1011E89A0);
}

uint64_t sub_100166D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166F24(a1, a2, a3, (uint64_t)&unk_1010B3D00, &qword_1011A09A0, (uint64_t)&unk_1011A3610);
}

uint64_t sub_100166D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166F24(a1, a2, a3, (uint64_t)&unk_1010B3CD8, &qword_1011A3600, (uint64_t)&unk_1011A35F8);
}

uint64_t sub_100166D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166F24(a1, a2, a3, (uint64_t)&unk_1010B3DA0, &qword_1011A3670, (uint64_t)&unk_1011A3668);
}

uint64_t sub_100166D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166F24(a1, a2, a3, (uint64_t)&unk_1010B3D78, &qword_1011A3658, (uint64_t)&unk_1011A3650);
}

uint64_t sub_100166DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166DC0(a1, a2, a3, (uint64_t)&unk_1010B3D28, (uint64_t)&type metadata for Bool, (uint64_t)&unk_1011A3628);
}

uint64_t sub_100166DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10016A8A0(a1);
    v14 = 7168;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15, v18);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v21 = v20;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v14 = v22 | 0x1C00;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  if (v21 | v19)
  {
    v26[0] = 0;
    v26[1] = 0;
    v24 = v26;
    v26[2] = v19;
    v26[3] = v21;
  }
  else
  {
    v24 = 0;
  }
  return swift_task_create(v14, v24, a5, a6, v23);
}

uint64_t sub_100166F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100166F24(a1, a2, a3, (uint64_t)&unk_1010B3E40, (uint64_t *)&unk_1011A36A0, (uint64_t)&unk_1011A3698);
}

uint64_t sub_100166F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_10016A8A0(a1);
    v14 = 7168;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
    {
LABEL_3:
      v16 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15, v18);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v21 = v20;
      swift_unknownObjectRelease(v15);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v14 = v22 | 0x1C00;
    v15 = *(_QWORD *)(a3 + 16);
    if (v15)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = sub_100007E8C(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v14, v25, v24, a6, v23);
}

uint64_t sub_100167078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10016A8A0(a1);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10, v13);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v16 = v15;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v17 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v14 = 0;
  v16 = 0;
LABEL_6:
  v18 = swift_allocObject(&unk_1010B3D50, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  v19 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v14;
    v22[3] = v16;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v9, v20, v19, &unk_1011A3638, v18);
}

uint64_t UnifiedMessages.Placement.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AA740, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static UnifiedMessages.Placement.allCases.getter()
{
  return &off_1010AA790;
}

uint64_t UnifiedMessages.Placement.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F4E6E657473696CLL;
  else
    return 0x487972617262696CLL;
}

uint64_t sub_10016726C(char *a1, char *a2)
{
  return sub_1005D0408(*a1, *a2);
}

Swift::Int sub_100167278()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x6F4E6E657473696CLL;
  else
    v2 = 0x487972617262696CLL;
  if (v1)
    v3 = 0xEF72656461654877;
  else
    v3 = 0xED00007265646165;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100167310(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6F4E6E657473696CLL;
  else
    v2 = 0x487972617262696CLL;
  if (*v1)
    v3 = 0xEF72656461654877;
  else
    v3 = 0xED00007265646165;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100167384(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x6F4E6E657473696CLL;
  else
    v3 = 0x487972617262696CLL;
  if (v2)
    v4 = 0xEF72656461654877;
  else
    v4 = 0xED00007265646165;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100167418@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AA740, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100167474(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x487972617262696CLL;
  if (*v1)
    v2 = 0x6F4E6E657473696CLL;
  v3 = 0xED00007265646165;
  if (*v1)
    v3 = 0xEF72656461654877;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1001674CC(_QWORD *a1@<X8>)
{
  *a1 = &off_1010AA7B8;
}

id sub_1001674DC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UnifiedMessages.Coordinator(0)), "init");
  static UnifiedMessages.Coordinator.shared = (uint64_t)result;
  return result;
}

uint64_t *UnifiedMessages.Coordinator.shared.unsafeMutableAddressor()
{
  if (qword_10119BA08 != -1)
    swift_once(&qword_10119BA08, sub_1001674DC);
  return &static UnifiedMessages.Coordinator.shared;
}

id static UnifiedMessages.Coordinator.shared.getter()
{
  if (qword_10119BA08 != -1)
    swift_once(&qword_10119BA08, sub_1001674DC);
  return (id)static UnifiedMessages.Coordinator.shared;
}

id UnifiedMessages.Coordinator.engagement.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_engagement);
}

uint64_t UnifiedMessages.Coordinator.isEnabled.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1011A34C8 + dword_1011A34C8);
  v1 = (_QWORD *)swift_task_alloc(unk_1011A34CC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000FDE04;
  return v3();
}

uint64_t property wrapper backing initializer of UnifiedMessages.Coordinator.inlineBubbleTipRequests(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_100007E8C((uint64_t *)&unk_1011A34D0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_100167638()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EACCF8);
  v2 = swift_getKeyPath(&unk_100EACD20);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001676A8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10016771C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)&loc_100167774
                                                                     + *((int *)qword_100167DF0 + a2)))(0x6E776F6E6B6E75, a1, 0xD00000000000001ELL);
}

uint64_t sub_10016778C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  if (a1 == 0x6E776F6E6B6E75 && v2 == 0xE700000000000000)
    return swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v2);
  result = swift_bridgeObjectRelease(0xE700000000000000);
  if ((v5 & 1) == 0)
    __asm { BR              X10 }
  return result;
}

void sub_100167880(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t oslog, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;

  swift_bridgeObjectRelease(v26 | 0x8000000000000000);
  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_100048B14(v27, (uint64_t)qword_1011A34A0);
  v31 = Logger.logObject.getter(v28);
  v29 = ((uint64_t (*)(void))static os_log_type_t.info.getter)();
  if (os_log_type_enabled(v31, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v29, "💬 GDPR acceptance required before retrieving mliState.", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

}

void UnifiedMessages.Coordinator.publishEngagementEvent(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = sub_100007E68(a1, v2);
  sub_10016A008((uint64_t)v4, v1, v2, v3);
}

char *sub_100167E68()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  id v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_class *ObjectType;
  objc_super v46;
  unint64_t v47;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = sub_100007E8C((uint64_t *)&unk_1011A3680);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_serviceType];
  *(_QWORD *)v5 = 0x636973756DLL;
  *((_QWORD *)v5 + 1) = 0xE500000000000000;
  v6 = OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_bag;
  v7 = objc_allocWithZone((Class)AMSProcessInfo);
  v8 = v0;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "initWithBundleIdentifier:", v9);

  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(AMSBag), "bagForProfile:profileVersion:processInfo:", v11, v12, v10);

  *(_QWORD *)&v0[v6] = v13;
  v14 = OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_observedPlacements;
  *(_QWORD *)&v8[v14] = sub_100047E68((uint64_t)&off_1010AA888);
  *(_QWORD *)&v8[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_privacyAcknowledgementObserver] = 0;
  v15 = OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_userDefaults;
  v16 = *((_QWORD *)UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor() + 1);
  v17 = objc_allocWithZone((Class)NSUserDefaults);
  swift_bridgeObjectRetain();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "initWithSuiteName:", v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

  *(_QWORD *)&v8[v15] = v19;
  *(_QWORD *)&v8[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_accountDidChangeObserver] = 0;
  v20 = &v8[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator__inlineBubbleTipRequests];
  v47 = sub_10004298C((uint64_t)_swiftEmptyArrayStorage);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A34D0);
  Published.init(initialValue:)(&v47, v21);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v20, v4, v1);
  v22 = objc_msgSend(objc_allocWithZone((Class)AMSEngagement), "initWithBag:", *(_QWORD *)&v0[v6]);
  *(_QWORD *)&v8[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_engagement] = v22;
  v8[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState] = 0;

  v46.receiver = v8;
  v46.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v46, "init");
  v24 = (void *)objc_opt_self(ICPrivacyInfo);
  v25 = (char *)v23;
  v26 = objc_msgSend(v24, "sharedPrivacyInfo");
  LODWORD(v1) = objc_msgSend(v26, "privacyAcknowledgementRequiredForMusic");

  if ((_DWORD)v1)
  {
    if (qword_10119BA10 != -1)
      swift_once(&qword_10119BA10, sub_100169C7C);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100048B14(v27, (uint64_t)qword_1011A34A0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "💬 GDPR has not been accepted; prevent setup and observing for messages.",
        v31,
        2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = swift_allocObject(&unk_1010B3DF0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v25);
    v33 = type metadata accessor for PrivacyAcknowledgementObserver();
    swift_allocObject(v33, 56, 7);
    swift_retain(v32);
    v34 = PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(1, (uint64_t)sub_10016AE0C, v32);

    swift_release(v32);
    v35 = *(_QWORD *)&v25[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_privacyAcknowledgementObserver];
    *(_QWORD *)&v25[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_privacyAcknowledgementObserver] = v34;
    swift_release(v35);
  }
  else
  {
    v36 = (void *)ICActiveUserIdentityDidChangeNotification;
    v37 = (void *)objc_opt_self(ICUserIdentityStore);
    v38 = v36;
    v39 = objc_msgSend(v37, "defaultIdentityStore");
    v40 = swift_allocObject(&unk_1010B3DF0, 24, 7);
    swift_unknownObjectWeakInit(v40 + 16, v25);
    v41 = type metadata accessor for NotificationObserver();
    swift_allocObject(v41, 64, 7);
    v42 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v38, (uint64_t)v39, 1, 1, (uint64_t)sub_10016AE04, v40);
    v43 = *(_QWORD *)&v25[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_accountDidChangeObserver];
    *(_QWORD *)&v25[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_accountDidChangeObserver] = v42;
    swift_release(v43);
    sub_100168580();
    sub_1001687D0();

  }
  return v25;
}

double sub_100168354(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  if ((a1 & 1) == 0)
  {
    v2 = a2 + 16;
    if (qword_10119BA10 != -1)
      swift_once(&qword_10119BA10, sub_100169C7C);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100048B14(v3, (uint64_t)qword_1011A34A0);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "💬 GDPR has been acknowledged, start setup.", v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    swift_beginAccess(v2, v22, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2);
    if (Strong)
    {
      v9 = (char *)Strong;
      v10 = (void *)ICActiveUserIdentityDidChangeNotification;
      v11 = (void *)objc_opt_self(ICUserIdentityStore);
      v12 = v10;
      v13 = objc_msgSend(v11, "defaultIdentityStore");
      v14 = swift_allocObject(&unk_1010B3DF0, 24, 7);
      swift_unknownObjectWeakInit(v14 + 16, v9);
      v15 = type metadata accessor for NotificationObserver();
      swift_allocObject(v15, 64, 7);
      v16 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v12, (uint64_t)v13, 1, 1, (uint64_t)sub_10016AE04, v14);
      v17 = *(_QWORD *)&v9[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_accountDidChangeObserver];
      *(_QWORD *)&v9[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_accountDidChangeObserver] = v16;
      swift_release(v17);
      sub_100168580();
      sub_1001687D0();

    }
    swift_beginAccess(v2, &v21, 0, 0);
    v18 = (char *)swift_unknownObjectWeakLoadStrong(v2);
    if (v18)
    {
      v20 = *(_QWORD *)&v18[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_privacyAcknowledgementObserver];
      *(_QWORD *)&v18[OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_privacyAcknowledgementObserver] = 0;

      *(_QWORD *)&result = swift_release(v20).n128_u64[0];
    }
  }
  return result;
}

void sub_100168580()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  Class isa;
  void *v20;
  uint64_t v21;
  char *v22;
  id v23;

  v1 = *(void **)(v0 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_engagement);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_observedPlacements);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_10035C6F8(0, v3, 0);
    v4 = sub_100837CE0(v2);
    v6 = v5;
    v8 = v7 & 1;
    v22 = (char *)(v2 + 56);
    v9 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v9 + 32))
    {
      if (((*(_QWORD *)&v22[((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8] >> v4) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v9 + 36) != (_DWORD)v6)
        goto LABEL_20;
      if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + v4))
        v10 = 0x6F4E6E657473696CLL;
      else
        v10 = 0x487972617262696CLL;
      if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + v4))
        v11 = 0xEF72656461654877;
      else
        v11 = 0xED00007265646165;
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_10035C6F8(v12 > 1, v13 + 1, 1);
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v10;
      v14[5] = v11;
      v15 = sub_100837D84(v4, v6, v8 & 1, v9);
      v4 = v15;
      v6 = v16;
      v8 = v17 & 1;
      if (!--v3)
      {
        sub_10016AE14(v15, v16, v17 & 1);
        swift_bridgeObjectRelease(v9);
        v1 = v20;
        v0 = v21;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    v18 = sub_1006A14E8((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v18);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "addObserver:placements:serviceType:", v0, isa, v23);

  }
}

double sub_1001687D0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  const char *v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  double result;
  char v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  char v53;
  char v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(NSUbiquitousKeyValueStore), "defaultStore");
  v3 = UnifiedMessages.MLI.userDefaultsKey.unsafeMutableAddressor();
  v4 = *((_QWORD *)v3 + 1);
  swift_bridgeObjectRetain();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "stringForKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  if (v6)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_userDefaults);
  if (v10)
  {
    v11 = *((_QWORD *)v3 + 1);
    swift_bridgeObjectRetain();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend((id)v10, "stringForKey:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

    if (v13)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v10 = v15;

    }
    else
    {
      v14 = 0;
      v10 = 0;
    }
  }
  else
  {
    v14 = 0;
  }
  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v16 = type metadata accessor for Logger(0);
  sub_100048B14(v16, (uint64_t)qword_1011A34A0);
  swift_bridgeObjectRetain_n(v9, 2);
  v17 = swift_bridgeObjectRetain_n(v10, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v59 = v14;
  if (os_log_type_enabled(v18, v19))
  {
    v58 = v1;
    v20 = swift_slowAlloc(22, -1);
    v57 = swift_slowAlloc(64, -1);
    v61 = v57;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain();
    v21 = Optional<A>.description.getter(v14, v10);
    v23 = v22;
    swift_bridgeObjectRelease(v10);
    v60 = sub_100322200(v21, v23, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    v24 = Optional<A>.description.getter(v7, v9);
    v25 = v7;
    v27 = v26;
    swift_bridgeObjectRelease(v9);
    v60 = sub_100322200(v24, v27, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    swift_bridgeObjectRelease_n(v9, 2);
    v28 = v27;
    v7 = v25;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "💬 mliState UserDefaults: %s, NSUbiquitousKeyValueStore: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    v29 = v20;
    v1 = v58;
    swift_slowDealloc(v29, -1, -1);

    if (!v10)
      goto LABEL_13;
  }
  else
  {

    swift_bridgeObjectRelease_n(v9, 2);
    swift_bridgeObjectRelease_n(v10, 2);
    if (!v10)
    {
LABEL_13:
      if (!v9)
        goto LABEL_32;
LABEL_23:
      v42 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0)
        v42 = v7 & 0xFFFFFFFFFFFFLL;
      if (v42)
      {
        swift_bridgeObjectRetain_n(v9, 2);
        v63._countAndFlagsBits = v7;
        v63._object = (void *)v9;
        v43 = sub_10016ABA4(v63);
        if (v43 != 4)
        {
          v54 = v43;
          swift_bridgeObjectRelease(v9);
          v55 = *(_BYTE *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState);
          *(_BYTE *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState) = v54;
          sub_1001676A8(v55);
          *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
          return result;
        }
        v44 = swift_bridgeObjectRetain();
        v34 = Logger.logObject.getter(v44);
        v45 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v34, v45))
        {
          v46 = (uint8_t *)swift_slowAlloc(12, -1);
          v47 = swift_slowAlloc(32, -1);
          v61 = v47;
          *(_DWORD *)v46 = 136315138;
          swift_bridgeObjectRetain();
          v60 = sub_100322200(v7, v9, &v61);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
          swift_bridgeObjectRelease_n(v9, 3);
          _os_log_impl((void *)&_mh_execute_header, v34, v45, "💬 NSUbiquitousKeyValueStore mliState=%s is not a valid mliState value", v46, 0xCu);
          swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v47, -1, -1);
          swift_slowDealloc(v46, -1, -1);
          v41 = v9;
          goto LABEL_29;
        }

        v56 = v9;
        goto LABEL_38;
      }
      swift_bridgeObjectRelease(v9);
      goto LABEL_32;
    }
  }
  v31 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v31 = v59 & 0xFFFFFFFFFFFFLL;
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v9);
    v62._countAndFlagsBits = v59;
    v62._object = (void *)v10;
    v32 = sub_10016ABA4(v62);
    if (v32 != 4)
    {
      v49 = *(_BYTE *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState);
      *(_BYTE *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState) = v32;
      sub_1001676A8(v49);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
      return result;
    }
    v33 = swift_bridgeObjectRetain_n(v10, 2);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v61 = v37;
      *(_DWORD *)v36 = 136315138;
      swift_bridgeObjectRetain();
      v38 = Optional<A>.description.getter(v59, v10);
      v40 = v39;
      swift_bridgeObjectRelease(v10);
      v60 = sub_100322200(v38, v40, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      swift_bridgeObjectRelease_n(v10, 2);
      swift_bridgeObjectRelease(v40);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "💬 UserDefaults mliState=%s is not a valid mliState value", v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);
      v41 = v10;
LABEL_29:
      swift_bridgeObjectRelease(v41);

      return result;
    }

    v56 = v10;
LABEL_38:
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v56, 3).n128_u64[0];
    return result;
  }
  swift_bridgeObjectRelease(v10);
  if (v9)
    goto LABEL_23;
LABEL_32:
  v50 = Logger.logObject.getter(v30);
  v51 = static os_log_type_t.default.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "💬 Setting mliState=unknown", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
  }

  v53 = *(_BYTE *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState);
  *(_BYTE *)(v1 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_mliState) = 1;
  sub_1001676A8(v53);
  return result;
}

void sub_100168F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSString v13;
  _BYTE v14[24];

  v2 = a2 + 16;
  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100048B14(v3, (uint64_t)qword_1011A34A0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "💬 Active user changed, resetting mliState", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(void **)(Strong + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_userDefaults);
    v11 = v10;

    if (v10)
    {
      v12 = *((_QWORD *)UnifiedMessages.MLI.userDefaultsKey.unsafeMutableAddressor() + 1);
      swift_bridgeObjectRetain();
      v13 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "removeObjectForKey:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

    }
  }
}

double UnifiedMessages.Coordinator.engagement(_:didUpdate:placement:serviceType:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_1010B3B90, 64, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v4;
  v12[5] = a3;
  v12[6] = a4;
  v12[7] = a2;
  v13 = a2;
  v14 = v4;
  swift_bridgeObjectRetain();
  v15 = sub_100166DC0((uint64_t)v10, (uint64_t)&unk_1011A34E8, (uint64_t)v12, (uint64_t)&unk_1010B3E18, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1011E89A0);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_100169194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (__cdecl *v10)();

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v10 = (uint64_t (__cdecl *)())((char *)&dword_1011A34C8 + dword_1011A34C8);
  v8 = (_QWORD *)swift_task_alloc(unk_1011A34CC);
  v7[13] = v8;
  *v8 = v7;
  v8[1] = sub_1001691F4;
  return v10();
}

uint64_t sub_1001691F4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_BYTE *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100169250, 0, 0);
}

uint64_t sub_100169250()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::Int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  unint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  id v42;
  uint64_t *v43;
  void (*v44)(uint64_t, _QWORD, __n128);
  uint64_t *v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  __n128 v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  if (*(_BYTE *)(v0 + 112) != 1)
  {
    if (qword_10119BA10 != -1)
      swift_once(&qword_10119BA10, sub_100169C7C);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048B14(v6, (uint64_t)qword_1011A34A0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_20;
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "💬 Unified Messages are disabled; preventing the engagement request from displaying.",
      v10,
      2u);
LABEL_19:
    swift_slowDealloc(v10, -1, -1);
LABEL_20:

    return (*(uint64_t (**)(__n128))(v0 + 8))(v30);
  }
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(void **)(v0 + 88);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  v4 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AA740, v3);
  swift_bridgeObjectRelease(v2);
  if (v4)
  {
    if (v4 == 1)
    {
      v5 = 1;
      goto LABEL_10;
    }
    if (qword_10119BA10 != -1)
      swift_once(&qword_10119BA10, sub_100169C7C);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = type metadata accessor for Logger(0);
    sub_100048B14(v23, (uint64_t)qword_1011A34A0);
    v24 = swift_bridgeObjectRetain_n(v22, 2);
    v8 = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.default.getter(v8);
    v26 = os_log_type_enabled(v8, v25);
    v27 = *(_QWORD *)(v0 + 88);
    if (!v26)
    {

      v30 = swift_bridgeObjectRelease_n(v27, 2);
      return (*(uint64_t (**)(__n128))(v0 + 8))(v30);
    }
    v28 = *(_QWORD *)(v0 + 80);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v53 = v29;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_100322200(v28, v27, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease_n(v27, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v25, "💬 Could not create Placement enum for placement string %s", v10, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    goto LABEL_19;
  }
  v5 = 0;
LABEL_10:
  v51 = v0 + 64;
  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = type metadata accessor for Logger(0);
  sub_100048B14(v12, (uint64_t)qword_1011A34A0);
  v13 = swift_bridgeObjectRetain_n(v11, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(_QWORD *)(v0 + 88);
  v52 = v0 + 16;
  if (v16)
  {
    v18 = *(_QWORD *)(v0 + 80);
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v53 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_100322200(v18, v17, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v51, v0 + 72);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "💬 Received pushed message for %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    v21 = *(_QWORD *)(v0 + 96);
    if (v21)
      goto LABEL_26;
  }
  else
  {

    swift_bridgeObjectRelease_n(v17, 2);
    v21 = *(_QWORD *)(v0 + 96);
    if (v21)
      goto LABEL_26;
  }
  v31 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 88), 2);
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.default.getter(v32);
  v34 = os_log_type_enabled(v32, v33);
  v35 = *(_QWORD *)(v0 + 88);
  if (v34)
  {
    v50 = *(_QWORD *)(v0 + 80);
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = swift_slowAlloc(32, -1);
    v53 = v37;
    *(_DWORD *)v36 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_100322200(v50, v35, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v51);
    swift_bridgeObjectRelease_n(v35, 3);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "💬 Request is nil so removing %s", v36, 0xCu);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v35, 2);
  }
LABEL_26:
  v38 = *(void **)(v0 + 96);
  v39 = *(_QWORD *)(v0 + 72);
  KeyPath = swift_getKeyPath(&unk_100EACCF8);
  v41 = swift_getKeyPath(&unk_100EACD20);
  v42 = v38;
  v44 = (void (*)(uint64_t, _QWORD, __n128))static Published.subscript.modify(v52, v39, KeyPath, v41);
  v45 = v43;
  if (v21)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v43);
    v53 = *v45;
    *v45 = 0x8000000000000000;
    sub_1005ED3F8((uint64_t)v42, v5, isUniquelyReferenced_nonNull_native);
    v47 = *v45;
    *v45 = v53;
    v48 = swift_bridgeObjectRelease(v47);
  }
  else
  {

  }
  v44(v52, 0, v48);
  swift_release(KeyPath);
  v30 = swift_release(v41);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v30);
}

uint64_t UnifiedMessages.Coordinator.engagement(_:handle:completion:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, uint64_t), uint64_t a4)
{
  return sub_1001699DC(a1, a2, a3, a4, "💬 Dialogs without a specified placement are not supported.");
}

{
  return sub_1001699DC(a1, a2, a3, a4, "💬 Full sheets are not supported.");
}

uint64_t sub_1001699DC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, uint64_t), uint64_t a4, const char *a5)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unint64_t v12;
  uint64_t v13;

  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100048B14(v7, (uint64_t)qword_1011A34A0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a5, v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = sub_10016A4CC();
  v13 = swift_allocError(&_s11CoordinatorC12MessageErrorON, v12, 0, 0);
  a3(0, v13);
  return swift_errorRelease(v13);
}

void sub_100169AF8(void *a1, int a2, void *a3, void *a4, void *aBlock, const char *a6)
{
  void *v10;
  id v11;
  id v12;
  id v13;

  v10 = _Block_copy(aBlock);
  _Block_copy(v10);
  v13 = a3;
  v11 = a4;
  v12 = a1;
  sub_10016ABEC((uint64_t)v10, a6);
  _Block_release(v10);
  _Block_release(v10);

}

uint64_t sub_100169C40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType(v1);
  result = ObservableObject<>.objectWillChange.getter(ObjectType);
  *a1 = result;
  return result;
}

uint64_t sub_100169C7C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10004FACC(v0, qword_1011A34A0);
  sub_100048B14(v0, (uint64_t)qword_1011A34A0);
  return static Logger.music(_:)(0x4D64656966696E55, 0xEF73656761737365);
}

uint64_t sub_100169CE4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EACCF8);
  v5 = swift_getKeyPath(&unk_100EACD20);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_100169D60(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EACCF8);
  v5 = swift_getKeyPath(&unk_100EACD20);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100169DD4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10016AE9C;
  return v6(a1);
}

uint64_t sub_100169E38(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100169E9C;
  return v6(a1);
}

uint64_t sub_100169E9C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100169EE8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_100169F50;
  return v5(v2 + 32);
}

uint64_t sub_100169F50()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_100169FA0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_10016AE98;
  return v5(v2 + 16);
}

void sub_10016A008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;

  v4 = *(void **)(a2 + OBJC_IVAR____TtCE5MusicO9MusicCore15UnifiedMessages11Coordinator_engagement);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  sub_10032832C(v5);
  v7 = v6;
  swift_bridgeObjectRelease(v5);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;

}

uint64_t sub_10016A0B8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_10016A120;
  return v5(v2 + 16);
}

uint64_t sub_10016A120()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10016A170()
{
  return swift_task_switch(sub_10016A184, 0, 0);
}

uint64_t sub_10016A184()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v1 = JSBridge.shared.unsafeMutableAddressor();
  v2 = (_QWORD *)*v1;
  *(_QWORD *)(v0 + 280) = *v1;
  v3 = *(int **)((swift_isaMask & *v2) + 0xE0);
  v4 = v3[1];
  v7 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 288) = v5;
  *v5 = v0;
  v5[1] = sub_10016A21C;
  return v7(v0 + 136);
}

uint64_t sub_10016A21C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 280);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 288));

  return swift_task_switch(sub_10016A274, 0, 0);
}

uint64_t sub_10016A274()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + 152)
                         + OBJC_IVAR____TtC11MusicJSCore24JSCapabilitiesController_isUnifiedMessagesEnabled);
  swift_beginAccess(v1, v0 + 256, 0, 0);
  v2 = *v1;
  static ApplicationCapabilities.shared.getter(v0 + 16);
  v3 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_100065184((_QWORD *)(v0 + 16));
  v4 = sub_10075BDAC(0xAu, v3);
  swift_bridgeObjectRelease(v3);
  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048B14(v5, (uint64_t)qword_1011A34A0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(14, -1);
    *(_DWORD *)v9 = 67109376;
    *(_DWORD *)(v0 + 296) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 296, v0 + 300);
    *(_WORD *)(v9 + 8) = 1024;
    *(_DWORD *)(v0 + 300) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 300, v0 + 304);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "💬 Are Unified Messages enabled?: %{BOOL}d, %{BOOL}d", (uint8_t *)v9, 0xEu);
    swift_slowDealloc(v9, -1, -1);

    sub_1000A543C(v0 + 136);
  }
  else
  {
    sub_1000A543C(v0 + 136);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v2 & v4);
}

uint64_t sub_10016A434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v7;

  v7 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1011A34E4);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10006AEE4;
  *(_QWORD *)(v4 + 88) = v2;
  *(_QWORD *)(v4 + 96) = v3;
  *(_OWORD *)(v4 + 72) = v7;
  *(_QWORD *)&v7 = (char *)&dword_1011A34C8 + dword_1011A34C8;
  v5 = (uint64_t *)swift_task_alloc(unk_1011A34CC);
  *(_QWORD *)(v4 + 104) = v5;
  *v5 = v4;
  v5[1] = (uint64_t)sub_1001691F4;
  return ((uint64_t (__cdecl *)())v7)();
}

unint64_t sub_10016A4CC()
{
  unint64_t result;

  result = qword_1011A34F0;
  if (!qword_1011A34F0)
  {
    result = swift_getWitnessTable(&unk_100EACCB8, &_s11CoordinatorC12MessageErrorON);
    atomic_store(result, (unint64_t *)&qword_1011A34F0);
  }
  return result;
}

unint64_t sub_10016A514()
{
  unint64_t result;

  result = qword_1011A34F8;
  if (!qword_1011A34F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.Placement, &type metadata for UnifiedMessages.Placement);
    atomic_store(result, (unint64_t *)&qword_1011A34F8);
  }
  return result;
}

unint64_t sub_10016A55C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3500;
  if (!qword_1011A3500)
  {
    v1 = sub_100044B54(&qword_1011A3508);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1011A3500);
  }
  return result;
}

uint64_t _s9PlacementOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10016A5F4 + 4 * byte_100EACAB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10016A628 + 4 * byte_100EACAB0[v4]))();
}

uint64_t sub_10016A628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016A630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10016A638);
  return result;
}

uint64_t sub_10016A644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10016A64CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10016A650(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016A658(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages.Placement()
{
  return &type metadata for UnifiedMessages.Placement;
}

uint64_t sub_10016A674()
{
  return type metadata accessor for UnifiedMessages.Coordinator(0);
}

uint64_t type metadata accessor for UnifiedMessages.Coordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1011A35D0;
  if (!qword_1011A35D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UnifiedMessages.Coordinator);
  return result;
}

void sub_10016A6B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_100EACBF8;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[4] = &unk_100EACC10;
  v4[5] = &unk_100EACC10;
  v4[6] = &unk_100EACC10;
  sub_10016A764(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100EACC28;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_10016A764(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A35E0)
  {
    v2 = sub_100044B54((uint64_t *)&unk_1011A34D0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A35E0);
  }
}

uint64_t _s11CoordinatorC12MessageErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10016A7FC + 4 * byte_100EACABA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10016A81C + 4 * byte_100EACABF[v4]))();
}

_BYTE *sub_10016A7FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10016A81C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10016A824(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10016A82C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10016A834(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10016A83C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11CoordinatorC12MessageErrorOMa()
{
  return &_s11CoordinatorC12MessageErrorON;
}

unint64_t sub_10016A85C()
{
  unint64_t result;

  result = qword_1011A35E8;
  if (!qword_1011A35E8)
  {
    result = swift_getWitnessTable(&unk_100EACC90, &_s11CoordinatorC12MessageErrorON);
    atomic_store(result, (unint64_t *)&qword_1011A35E8);
  }
  return result;
}

uint64_t sub_10016A8A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10016A8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A35F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A35F0 + dword_1011A35F0))(a1, v4);
}

uint64_t sub_10016A950()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016A974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A360C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A3608 + dword_1011A3608))(a1, v4);
}

uint64_t sub_10016A9E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A3624);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A3620 + dword_1011A3620))(a1, v4);
}

uint64_t sub_10016AA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A3634);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A3630 + dword_1011A3630))(a1, v4);
}

uint64_t sub_10016AAC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A364C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A3648 + dword_1011A3648))(a1, v4);
}

uint64_t sub_10016AB34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A3664);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10006AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A3660 + dword_1011A3660))(a1, v4);
}

unint64_t sub_10016ABA4(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1010AA808, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_10016ABEC(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;

  if (qword_10119BA10 != -1)
    swift_once(&qword_10119BA10, sub_100169C7C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011A34A0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a2, v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = sub_10016A4CC();
  v10 = swift_allocError(&_s11CoordinatorC12MessageErrorON, v9, 0, 0);
  v11 = (void *)_convertErrorToNSError(_:)(v10);
  (*(void (**)(uint64_t, _QWORD, void *))(a1 + 16))(a1, 0, v11);

  return swift_errorRelease(v10);
}

uint64_t sub_10016AD0C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10016AD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v7;

  v7 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1011A34E4);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10005AEE4;
  *(_QWORD *)(v4 + 88) = v2;
  *(_QWORD *)(v4 + 96) = v3;
  *(_OWORD *)(v4 + 72) = v7;
  *(_QWORD *)&v7 = (char *)&dword_1011A34C8 + dword_1011A34C8;
  v5 = (uint64_t *)swift_task_alloc(unk_1011A34CC);
  *(_QWORD *)(v4 + 104) = v5;
  *v5 = v4;
  v5[1] = (uint64_t)sub_1001691F4;
  return ((uint64_t (__cdecl *)())v7)();
}

uint64_t sub_10016ADE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10016AE04(uint64_t a1)
{
  uint64_t v1;

  sub_100168F3C(a1, v1);
}

double sub_10016AE0C(char a1)
{
  uint64_t v1;

  return sub_100168354(a1, v1);
}

uint64_t sub_10016AE14(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10016AE28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011A3694);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011A3690 + dword_1011A3690))(a1, v4);
}

uint64_t sub_10016AEBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;
  _QWORD *v6;
  _UNKNOWN **v7;
  int v8;

  type metadata accessor for MusicLibrary(0);
  v1 = *v0;
  v2 = static MusicLibrary.shared.getter();
  v3 = static MusicLibrary.== infix(_:_:)(v1, v2);
  swift_release(v2);
  v4 = &off_1010A9B38;
  if ((v3 & 1) != 0)
    v5 = &off_1010A9B10;
  else
    v5 = &off_1010A9B38;
  v6 = &unk_1010A9B20;
  if ((v3 & 1) == 0)
    v6 = &unk_1010A9B48;
  if (*v6)
  {
    if ((v3 & 1) != 0)
      v4 = &off_1010A9B10;
    v7 = v4 + 4;
    swift_bridgeObjectRetain(v5);
    __asm { BR              X9 }
  }
  if (*((_BYTE *)v0 + 35))
    v8 = 256;
  else
    v8 = 0;
  return v8 & 0xFFFFFF00 | *((unsigned __int8 *)v0 + 34);
}

uint64_t sub_10016B228()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _UNKNOWN **v5;
  _QWORD *v6;
  _UNKNOWN **v7;
  unsigned __int8 *v8;
  int v9;

  v1 = type metadata accessor for MusicLibrary(0);
  v2 = *v0;
  v3 = static MusicLibrary.shared.getter(v1);
  v4 = static MusicLibrary.== infix(_:_:)(v2, v3);
  swift_release();
  v5 = &off_1010A9B88;
  v6 = &unk_1010A9B70;
  if ((v4 & 1) == 0)
    v6 = &unk_1010A9B98;
  if (*v6)
  {
    if ((v4 & 1) != 0)
      v5 = &off_1010A9B60;
    v7 = v5 + 4;
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v8 = (unsigned __int8 *)v0 + *(int *)(_s9PlaylistsVMa(0) + 40);
  if (v8[1])
    v9 = 256;
  else
    v9 = 0;
  return v9 & 0xFFFFFF00 | *v8;
}

uint64_t sub_10016B5A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _UNKNOWN **v6;
  _UNKNOWN **v7;
  uint64_t v8;
  unsigned int EnumCaseMultiPayload;
  unsigned __int8 v10;
  _QWORD v12[6];

  v3 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100236B74();
  if (v6[2])
  {
    v7 = v6;
    v12[1] = v1;
    v12[2] = v3;
    v12[3] = v5;
    swift_bridgeObjectRetain();
    v12[4] = a1;
    v12[5] = "howLocal";
    __asm { BR              X9 }
  }
  v8 = _s6AlbumsVMa(0);
  sub_10005B704(v1 + *(int *)(v8 + 24), (uint64_t)v5, _s6AlbumsV5ScopeOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
  if (EnumCaseMultiPayload < 3)
  {
    sub_10005B748((uint64_t)v5, _s6AlbumsV5ScopeOMa);
LABEL_7:
    v10 = 3;
    return v10 | 0x100u;
  }
  if (EnumCaseMultiPayload != 3)
    goto LABEL_7;
  v10 = 0;
  return v10 | 0x100u;
}

uint64_t sub_10016B910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _UNKNOWN **v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  _QWORD v11[4];

  v3 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10075FD14();
  if (v6[2])
  {
    v11[0] = v1;
    v11[1] = v5;
    v11[2] = a1;
    v11[3] = "howLocal";
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v6);
  v7 = _s11MusicVideosVMa(0);
  sub_10005B704(v1 + *(int *)(v7 + 24), (uint64_t)v5, _s11MusicVideosV5ScopeOMa);
  v8 = type metadata accessor for Artist(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) == 1)
  {
    v9 = 0;
  }
  else
  {
    sub_10005B748((uint64_t)v5, _s11MusicVideosV5ScopeOMa);
    v9 = 3;
  }
  return v9 | 0x100u;
}

uint64_t sub_10016BC84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _UNKNOWN **v4;
  _UNKNOWN **v5;
  _QWORD *v6;
  _UNKNOWN **v7;
  int v8;

  type metadata accessor for MusicLibrary(0);
  v1 = *v0;
  v2 = static MusicLibrary.shared.getter();
  v3 = static MusicLibrary.== infix(_:_:)(v1, v2);
  swift_release(v2);
  v4 = &off_1010A9D18;
  if ((v3 & 1) != 0)
    v5 = &off_1010A9CF0;
  else
    v5 = &off_1010A9D18;
  v6 = &unk_1010A9D00;
  if ((v3 & 1) == 0)
    v6 = &unk_1010A9D28;
  if (*v6)
  {
    if ((v3 & 1) != 0)
      v4 = &off_1010A9CF0;
    v7 = v4 + 4;
    swift_bridgeObjectRetain(v5);
    __asm { BR              X9 }
  }
  if (*((_BYTE *)v0 + 43))
    v8 = 256;
  else
    v8 = 0;
  return v8 & 0xFFFFFF00 | *((unsigned __int8 *)v0 + 42);
}

void *sub_10016BFF0(_QWORD *(*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  return sub_10016C004(a1, a2, a3);
}

void *sub_10016C004(_QWORD *(*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *result;
  uint64_t v6;
  uint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;

  result = &_swiftEmptyArrayStorage;
  v16 = (unint64_t)&_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(a3);
    for (i = 0; i != v6; ++i)
    {
      v15 = *(_BYTE *)(a3 + i + 32);
      v10 = a1(&v14, &v15);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (void *)swift_bridgeObjectRelease(v16);
      }
      v11 = v14;
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v13 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v9);
      }
    }
    swift_bridgeObjectRelease(a3);
    return (void *)v16;
  }
  return result;
}

_QWORD *sub_10016C128(void (*a1)(_QWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  _QWORD v20[2];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  char v25;

  v16 = *(_QWORD *)(a3 + 16);
  if (!v16)
    return _swiftEmptyArrayStorage;
  v4 = a3;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = _swiftEmptyArrayStorage;
  v15 = v4;
  do
  {
    v25 = *(_BYTE *)(v4 + v5 + 32);
    a1(v20, &v25);
    if (v3)
    {
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v4);
      return v6;
    }
    v8 = v21;
    if (v21)
    {
      v10 = v20[0];
      v9 = v20[1];
      v11 = v23;
      v18 = v24;
      v19 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_100431D74(0, v6[2] + 1, 1, v6);
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
        v6 = sub_100431D74((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
      v6[2] = v13 + 1;
      v7 = &v6[8 * v13];
      *((_BYTE *)v7 + 32) = v10;
      v7[5] = v9;
      v7[6] = v8;
      *(_OWORD *)(v7 + 7) = v19;
      v7[9] = v11;
      *((_OWORD *)v7 + 5) = v18;
      v4 = v15;
    }
    ++v5;
  }
  while (v16 != v5);
  swift_bridgeObjectRelease(v4);
  return v6;
}

_QWORD *sub_10016C2A4(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3D40);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011A63B0);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v36 = (uint64_t)&v32 - v11;
  v44 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v40 = v8;
    v19 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v38 = *(_QWORD *)(v12 + 72);
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v33 = a3;
    swift_bridgeObjectRetain();
    v46 = _swiftEmptyArrayStorage;
    v34 = a1;
    v35 = a2;
    v20 = v44;
    v39 = v14;
    do
    {
      v43(v17, v19, v20);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v37(v17, 0, 1, v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v20) == 1)
      {
        a3 = v33;
        goto LABEL_17;
      }
      v47 = v19;
      v22 = v17;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v20);
      v23 = (uint64_t)v40;
      v24 = v48;
      a1(v14);
      if (v24)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
        swift_bridgeObjectRelease(v46);
        swift_bridgeObjectRelease(v33);
        return v46;
      }
      v48 = 0;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v23, 1, v42) == 1)
      {
        sub_10004FF60(v23, (uint64_t *)&unk_1011A3D40);
        v17 = v22;
        v20 = v44;
        v21 = v47;
      }
      else
      {
        v25 = v36;
        sub_100065228(v23, v36, &qword_1011A63B0);
        sub_100065228(v25, v41, &qword_1011A63B0);
        if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
          v46 = (_QWORD *)sub_1004321FC(0, v46[2] + 1, 1, (unint64_t)v46);
        v17 = v22;
        v21 = v47;
        v27 = v46[2];
        v26 = v46[3];
        if (v27 >= v26 >> 1)
          v46 = (_QWORD *)sub_1004321FC(v26 > 1, v27 + 1, 1, (unint64_t)v46);
        v20 = v44;
        v28 = v45;
        v29 = v46;
        v46[2] = v27 + 1;
        sub_100065228(v41, (uint64_t)v29+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v27, &qword_1011A63B0);
        a1 = v34;
      }
      v14 = v39;
      v19 = v21 + v38;
      --v18;
    }
    while (v18);
    a3 = v33;
    v37(v17, 1, 1, v20);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    v46 = _swiftEmptyArrayStorage;
    v30(v17, 1, 1, v44);
  }
LABEL_17:
  swift_bridgeObjectRelease(a3);
  return v46;
}

_QWORD *sub_10016C6A8(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_10016CA2C(a1, a2, a3, &qword_1011A3958, type metadata accessor for VerticalLockupGridCell, (uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD *))sub_100432534);
}

_QWORD *sub_10016C6D4(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_10016CA2C(a1, a2, a3, &qword_1011A40C8, type metadata accessor for PosterView.TextStack, (uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD *))sub_100432930);
}

_QWORD *sub_10016C700(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_10016CA2C(a1, a2, a3, &qword_1011A40B8, type metadata accessor for BrickView.TextContentView, (uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD *))sub_1004329A8);
}

_QWORD *sub_10016C72C(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(id *);
  uint64_t v30;
  id v31;

  v4 = v3;
  v29 = a1;
  v6 = sub_100007E8C(&qword_1011A3CF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for NavigationDestinationItem(0);
  v30 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v27 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v25 = (uint64_t)&v23 - v11;
  if ((unint64_t)a3 >> 62)
    goto LABEL_20;
  v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    v13 = _swiftEmptyArrayStorage;
    v26 = a3 & 0xC000000000000001;
    v14 = 4;
    v24 = a3;
    while (1)
    {
      v15 = v26 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, a3) : *(id *)(a3 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v31 = v15;
      v29(&v31);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v13;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v8, 1, v28) == 1)
      {
        sub_10004FF60((uint64_t)v8, &qword_1011A3CF0);
      }
      else
      {
        v18 = v25;
        sub_10005B6C0((uint64_t)v8, v25, type metadata accessor for NavigationDestinationItem);
        sub_10005B6C0(v18, v27, type metadata accessor for NavigationDestinationItem);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (_QWORD *)sub_100431A00(0, v13[2] + 1, 1, (unint64_t)v13);
        v20 = v13[2];
        v19 = v13[3];
        if (v20 >= v19 >> 1)
          v13 = (_QWORD *)sub_100431A00(v19 > 1, v20 + 1, 1, (unint64_t)v13);
        v13[2] = v20 + 1;
        sub_10005B6C0(v27, (uint64_t)v13+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v20, type metadata accessor for NavigationDestinationItem);
        a3 = v24;
      }
      ++v14;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_20:
    if (a3 < 0)
      v21 = a3;
    else
      v21 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10016CA00(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_10016CA2C(a1, a2, a3, &qword_1011A40C0, type metadata accessor for FeaturedView.TextContentView, (uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD *))sub_10043363C);
}

_QWORD *sub_10016CA2C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(BOOL, uint64_t, uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t (*v29)(BOOL, uint64_t, uint64_t, _QWORD *);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  _QWORD v36[2];
  void (*v37)(_QWORD *);

  v37 = a1;
  v32 = a4;
  v10 = sub_100007E8C(a4);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a5;
  v34 = ((uint64_t (*)(_QWORD, __n128))a5)(0, v11);
  v14 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (uint64_t)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v31 = (uint64_t)&v28 - v17;
  v18 = *(_QWORD *)(a3 + 16);
  if (!v18)
    return _swiftEmptyArrayStorage;
  v29 = a6;
  swift_bridgeObjectRetain();
  v30 = a3;
  v19 = (uint64_t *)(a3 + 40);
  v20 = _swiftEmptyArrayStorage;
  do
  {
    v21 = *v19;
    v36[0] = *(v19 - 1);
    v36[1] = v21;
    swift_bridgeObjectRetain();
    v37(v36);
    if (v6)
    {
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v21);
      return v20;
    }
    v22 = swift_bridgeObjectRelease(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v13, 1, v34, v22) == 1)
    {
      sub_10004FF60((uint64_t)v13, v32);
    }
    else
    {
      v23 = v31;
      v24 = v35;
      sub_10005B6C0((uint64_t)v13, v31, v35);
      sub_10005B6C0(v23, v33, v24);
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
        v20 = (_QWORD *)v29(0, v20[2] + 1, 1, v20);
      v26 = v20[2];
      v25 = v20[3];
      if (v26 >= v25 >> 1)
        v20 = (_QWORD *)v29(v25 > 1, v26 + 1, 1, v20);
      v20[2] = v26 + 1;
      sub_10005B6C0(v33, (uint64_t)v20+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v26, v35);
    }
    v19 += 2;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease(v30);
  return v20;
}

uint64_t sub_10016CC9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TitledSection.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10016CCC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryArtistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10016CD08(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  _QWORD v29[9];

  if (result != a2)
  {
    v3 = result;
    if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v4 = 0;
    v26 = result + 56;
    v5 = 1 << *(_BYTE *)(result + 32);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(result + 56);
    v27 = (unint64_t)(v5 + 63) >> 6;
    v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      return result;
    }
    if (v11 < v27)
    {
      v12 = *(_QWORD *)(v26 + 8 * v11);
      ++v4;
      if (v12)
        goto LABEL_22;
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v26 + 8 * v4);
      if (v12)
        goto LABEL_22;
      v4 = v11 + 2;
      if (v11 + 2 >= v27)
        return 1;
      v12 = *(_QWORD *)(v26 + 8 * v4);
      if (v12)
      {
LABEL_22:
        v7 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v29, *(_QWORD *)(a2 + 40));
        if (v14)
        {
          if (v14 == 1)
            v15 = 0x657469726F766166;
          else
            v15 = 0x64616F6C6E776F64;
          v16 = 0xE900000000000073;
        }
        else
        {
          v16 = 0xE300000000000000;
          v15 = 7105633;
        }
        String.hash(into:)(v29, v15, v16);
        swift_bridgeObjectRelease(v16);
        v17 = Hasher._finalize()();
        v18 = -1 << *(_BYTE *)(a2 + 32);
        v19 = v17 & ~v18;
        if (((*(_QWORD *)(v8 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
        {
          v28 = v4;
          v20 = ~v18;
          while (1)
          {
            if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v19))
            {
              if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v19) == 1)
                v21 = 0x657469726F766166;
              else
                v21 = 0x64616F6C6E776F64;
              v22 = 0xE900000000000073;
              if (v14)
              {
LABEL_39:
                if (v14 == 1)
                  v24 = 0x657469726F766166;
                else
                  v24 = 0x64616F6C6E776F64;
                v23 = 0xE900000000000073;
                if (v21 != v24)
                  goto LABEL_44;
                goto LABEL_43;
              }
            }
            else
            {
              v22 = 0xE300000000000000;
              v21 = 7105633;
              if (v14)
                goto LABEL_39;
            }
            v23 = 0xE300000000000000;
            v24 = 7105633;
            if (v21 != 7105633)
              goto LABEL_44;
LABEL_43:
            if (v22 == v23)
            {
              result = swift_bridgeObjectRelease_n(v22, 2);
              v4 = v28;
              goto LABEL_7;
            }
LABEL_44:
            v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v24, v23, 0);
            swift_bridgeObjectRelease(v22);
            result = swift_bridgeObjectRelease(v23);
            if ((v25 & 1) != 0)
            {
              v4 = v28;
              goto LABEL_7;
            }
            v19 = (v19 + 1) & v20;
            if (((*(_QWORD *)(v8 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
              return 0;
          }
        }
        return 0;
      }
      v13 = v11 + 3;
      if (v13 < v27)
      {
        v12 = *(_QWORD *)(v26 + 8 * v13);
        if (v12)
        {
          v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          v4 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_53;
          if (v4 >= v27)
            return 1;
          v12 = *(_QWORD *)(v26 + 8 * v4);
          ++v13;
          if (v12)
            goto LABEL_22;
        }
      }
    }
  }
  return 1;
}

void sub_10016D044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = type metadata accessor for Playlist.Variant(0);
  v43 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  v12 = __chkstk_darwin(v10);
  v13 = (char *)&v36 - v11;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v37 = a1;
  v38 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v39 = (unint64_t)(v16 + 63) >> 6;
  v42 = a2 + 56;
  v36 = (char *)&v36 - v11;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v40 = (v18 - 1) & v18;
  v41 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v43;
    v25 = *(_QWORD *)(v43 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v43 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4, v12);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v9, v13, v4);
    v27 = *(_QWORD *)(a2 + 40);
    v28 = sub_100048748((unint64_t *)&unk_1011A3930, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(a2 + 32);
    v31 = v29 & ~v30;
    if (((*(_QWORD *)(v42 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v4);
      return;
    }
    v32 = ~v30;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v26)(v6, *(_QWORD *)(a2 + 48) + v31 * v25, v4);
      v33 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v4, v33);
      v35 = *(void (**)(char *, uint64_t))(v43 + 8);
      v35(v6, v4);
      if ((v34 & 1) != 0)
        break;
      v31 = (v31 + 1) & v32;
      if (((*(_QWORD *)(v42 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
      {
        v35(v9, v4);
        return;
      }
    }
    v35(v9, v4);
    v13 = v36;
    a1 = v37;
    v18 = v40;
    v14 = v41;
    if (v40)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= v39)
      return;
    v21 = *(_QWORD *)(v38 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v39)
        return;
      v21 = *(_QWORD *)(v38 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v39)
          return;
        v21 = *(_QWORD *)(v38 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v39)
            return;
          v21 = *(_QWORD *)(v38 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v40 = (v21 - 1) & v21;
    v41 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v39)
    return;
  v21 = *(_QWORD *)(v38 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v39)
      return;
    v21 = *(_QWORD *)(v38 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
}

Swift::Int sub_10016D3B4(Swift::Int result, uint64_t a2)
{
  int64_t v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD v12[9];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 >= v8)
        return 1;
      v7 = *(_QWORD *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        v3 = v10 + 1;
        if (v10 + 1 >= v8)
          return 1;
        v7 = *(_QWORD *)(v4 + 8 * v3);
        if (!v7)
        {
          v3 = v10 + 2;
          if (v10 + 2 >= v8)
            return 1;
          v7 = *(_QWORD *)(v4 + 8 * v3);
          if (!v7)
          {
            v3 = v10 + 3;
            if (v10 + 3 >= v8)
              return 1;
            v7 = *(_QWORD *)(v4 + 8 * v3);
            if (!v7)
              break;
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    Hasher.init(_seed:)(v12, *(_QWORD *)(a2 + 40));
    Hasher._combine(_:)(0);
    result = Hasher._finalize()();
    v9 = result & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      return 0;
  }
  v11 = v10 + 4;
  if (v11 >= v8)
    return 1;
  v7 = *(_QWORD *)(v4 + 8 * v11);
  if (v7)
  {
    v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v8)
      return 1;
    v7 = *(_QWORD *)(v4 + 8 * v3);
    ++v11;
    if (v7)
      goto LABEL_8;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10016D534(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 & 0xC000000000000001;
  if ((result & 0xC000000000000001) != 0)
  {
    if (result < 0)
      v5 = result;
    else
      v5 = result & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      if (a2 < 0)
        v6 = a2;
      else
        v6 = a2 & 0xFFFFFFFFFFFFFF8;
      return __CocoaSet.isEqual(to:)(v6, v5);
    }
    v7 = v5;
    v8 = a2;
    return sub_100193B78(v7, v8);
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v8 = v3;
    return sub_100193B78(v7, v8);
  }
  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) == *(_QWORD *)(a2 + 16))
  {
    v9 = 0;
    v10 = result + 56;
    v11 = 1 << *(_BYTE *)(result + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(result + 56);
    v26 = (unint64_t)(v11 + 63) >> 6;
    v14 = a2 + 56;
    if (!v13)
      goto LABEL_25;
LABEL_23:
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * i);
      Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
      v21 = sub_10047E924();
      Hasher._combine(_:)(v21);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(a2 + 32);
      v24 = v22 & ~v23;
      if (((*(_QWORD *)(v14 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        return 0;
      v25 = ~v23;
      while (1)
      {
        result = sub_10047E924();
        if (result == *(_QWORD *)(v20 + 56))
          break;
        v24 = (v24 + 1) & v25;
        if (((*(_QWORD *)(v14 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          return 0;
      }
      if (v13)
        goto LABEL_23;
LABEL_25:
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      if (v17 >= v26)
        return 1;
      v18 = *(_QWORD *)(v10 + 8 * v17);
      ++v9;
      if (!v18)
      {
        v9 = v17 + 1;
        if (v17 + 1 >= v26)
          return 1;
        v18 = *(_QWORD *)(v10 + 8 * v9);
        if (!v18)
        {
          v9 = v17 + 2;
          if (v17 + 2 >= v26)
            return 1;
          v18 = *(_QWORD *)(v10 + 8 * v9);
          if (!v18)
          {
            v9 = v17 + 3;
            if (v17 + 3 >= v26)
              return 1;
            v18 = *(_QWORD *)(v10 + 8 * v9);
            if (!v18)
            {
              v19 = v17 + 4;
              if (v19 >= v26)
                return 1;
              v18 = *(_QWORD *)(v10 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v9 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_49;
                  if (v9 >= v26)
                    return 1;
                  v18 = *(_QWORD *)(v10 + 8 * v9);
                  ++v19;
                  if (v18)
                    goto LABEL_40;
                }
              }
              v9 = v19;
            }
          }
        }
      }
LABEL_40:
      v13 = (v18 - 1) & v18;
    }
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_10016D7D0(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t i;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  _QWORD v34[9];

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v31 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v32 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v33 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v32)
      return 1;
    v11 = *(_QWORD *)(v31 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v32)
        return 1;
      v11 = *(_QWORD *)(v31 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v32)
          return 1;
        v11 = *(_QWORD *)(v31 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v32)
            return 1;
          v11 = *(_QWORD *)(v31 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v33 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    Hasher.init(_seed:)(v34, *(_QWORD *)(a2 + 40));
    swift_bridgeObjectRetain_n(v16, 2);
    String.hash(into:)(v34, v17, v16);
    swift_bridgeObjectRelease(v16);
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = v22[1];
    v24 = *v22 == v17 && v23 == v16;
    if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v22, v23, v17, v16, 0) & 1) == 0)
    {
      v25 = ~v19;
      for (i = v20 + 1; ; i = v27 + 1)
      {
        v27 = i & v25;
        if (((*(_QWORD *)(v7 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v21 + 16 * v27);
        v29 = v28[1];
        v30 = *v28 == v17 && v29 == v16;
        if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v17, v16, 0) & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease(v16);
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease(v16);
    result = v14;
    v3 = v33;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v32)
    return 1;
  v11 = *(_QWORD *)(v31 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v32)
      return 1;
    v11 = *(_QWORD *)(v31 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

id sub_10016DA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "systemImageNamed:", v4);

  return v5;
}

int64x2_t sub_10016DADC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4050000000000000uLL);
  xmmword_1011A36B0 = (__int128)result;
  return result;
}

double sub_10016DAF4()
{
  double result;

  result = 85.3333333;
  xmmword_1011A36C0 = xmmword_100EACF70;
  return result;
}

void sub_10016DB0C(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t ObjectType;

  v3 = v2;
  v50 = a2;
  ObjectType = swift_getObjectType();
  v5 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v5);
  v52 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v7);
  v51 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = _s6AlbumsV5ScopeOMa(0);
  v9 = __chkstk_darwin(v48);
  v49 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v48 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v48 - v14;
  v16 = _s6AlbumsVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___globalHeaderRegistration];
  v20 = sub_100007E8C(&qword_1011A37B0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  v21(&v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___headerRegistration], 1, 1, v20);
  v22 = &v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumGridCellRegistration];
  v23 = sub_100007E8C(&qword_1011A37C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = &v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumListCellRegistration];
  v25 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = &v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoGridCellRegistration];
  v27 = sub_100007E8C((uint64_t *)&unk_1011A37E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = &v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoListCellRegistration];
  v29 = sub_100007E8C((uint64_t *)&unk_1011A37F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponse] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponseSubscription] = 0;
  v30 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController;
  v31 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  v32 = v3;
  *(_QWORD *)&v3[v30] = sub_1001EA3C8(0xD000000000000023, 0x8000000100E2FEC0);
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistHeader] = 0;
  v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_dragDropController] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___searchController] = 0;
  v33 = &v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___actionMetricsReportingContext];
  v34 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_sortBinding] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___favoriteButton] = 0;
  v35 = &v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
  v36 = type metadata accessor for Artist(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v38(v35, a1, v36);
  v38(v15, a1, v36);
  v39 = v48;
  swift_storeEnumTagMultiPayload(v15, v48, 2);
  v40 = (uint64_t)v15;
  LOBYTE(v15) = v50;
  sub_1002334EC(v40, v50, (uint64_t)v18);
  v41 = sub_100007E8C(&qword_1011A3800);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController] = sub_10018BFC8((uint64_t)v18);
  v42 = (uint64_t)v52;
  v38(v52, a1, v36);
  v53 = v37;
  v43 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56);
  v44 = (uint64_t)v49;
  v43(v42, 0, 1, v36);
  v45 = v51;
  sub_10075D504(v42, (char)v15, v51);
  v46 = sub_100007E8C(&qword_1011A3808);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController] = sub_10018D00C(v45);
  v38(v13, a1, v36);
  swift_storeEnumTagMultiPayload(v13, v39, 2);
  sub_10005B704((uint64_t)v13, v44, _s6AlbumsV5ScopeOMa);
  v47 = (char *)&loc_10016DFE0 + dword_10016E244[swift_getEnumCaseMultiPayload(v44, v39)];
  __asm { BR              X10 }
}

id sub_10016DFF0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  sub_10005B748(v2, _s6AlbumsV5ScopeOMa);
  sub_10005B748(v4, _s6AlbumsV5ScopeOMa);
  v6 = _s23LayoutVariantControllerCMa();
  swift_allocObject(v6, 56, 7);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController] = sub_1005AE0DC(0x477972617262694CLL, 0xED00007365726E65, 0);

  v7 = *(_QWORD *)(v5 - 104);
  *(_QWORD *)(v5 - 96) = v0;
  *(_QWORD *)(v5 - 88) = v7;
  v8 = objc_msgSendSuper2((objc_super *)(v5 - 96), "initWithNibName:bundle:", 0, 0);
  v9 = objc_msgSend(v8, "navigationItem");
  objc_msgSend(v9, "setLargeTitleDisplayMode:", 2);

  v10 = v8;
  UIViewController.playActivityFeatureIdentifier.setter(1u);

  v11 = sub_100007E8C(&qword_1011A1750);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v5 - 128) = xmmword_100EA7AA0;
  *(_OWORD *)(v12 + 16) = xmmword_100EA7AA0;
  v13 = sub_10018D478();
  *(_QWORD *)(v12 + 32) = &type metadata for LibraryFilterTrait;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v10;
  v15 = UIViewController.registerForTraitChanges<A>(_:handler:)(v12, sub_1001A6900, 0, v7);
  swift_unknownObjectRelease(v15);

  swift_bridgeObjectRelease(v12);
  v16 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v5 - 128);
  v17 = sub_10013ADBC();
  *(_QWORD *)(v16 + 32) = &type metadata for MusicLibraryTrait;
  *(_QWORD *)(v16 + 40) = v17;
  v18 = v14;
  v19 = UIViewController.registerForTraitChanges<A>(_:handler:)(v16, sub_1001A6904, 0, v7);
  swift_unknownObjectRelease(v19);
  swift_bridgeObjectRelease(v16);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 112) + 8))(v3, v1);
  return v18;
}

void sub_10016E258()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  id v9;
  unsigned __int8 *v10;
  int v11;
  id v12;
  char v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double (**v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t (**v25)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  Class isa;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  Class v60;
  char *v61;
  uint64_t v62;
  void (**v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  id v113;
  _QWORD v114[4];
  _QWORD v115[4];
  _QWORD v116[4];
  _QWORD v117[4];
  _QWORD v118[4];
  _QWORD v119[4];
  uint64_t v120;
  _QWORD v121[5];
  uint64_t v122;
  objc_super v123;
  void **aBlock;
  uint64_t v125;
  id (*v126)(uint64_t, uint64_t, uint64_t);
  void *v127;
  Class (*v128)(uint64_t, uint64_t);
  uint64_t v129;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = _s6AlbumsVMa(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  v123.receiver = v0;
  v123.super_class = ObjectType;
  objc_msgSendSuper2(&v123, "viewDidLoad", v4);
  v7 = sub_10016ED00();
  v8 = *(unsigned __int8 *)(v7 + 48);
  *(_BYTE *)(v7 + 48) = 0;
  if (v8 == 1)
    sub_100409F58();
  swift_release(v7);
  v9 = sub_10016ED98();
  v10 = (unsigned __int8 *)sub_10016ED98();
  v11 = v10[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if (v11 == 1)
  {
    v12 = sub_10016ED98();
LABEL_6:
    v15 = sub_1005AEDD4((uint64_t)v12, 1, 0, 0, 0, 0);
    goto LABEL_8;
  }
  v13 = *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController]
                 + 32);
  v14 = sub_10016ED98();
  v12 = v14;
  if ((v13 & 1) != 0)
    goto LABEL_6;
  v15 = sub_1005AEAE0((uint64_t)v14, 1);
LABEL_8:
  v16 = v15;

  objc_msgSend(v9, "setCollectionViewLayout:", v16);
  v17 = sub_10016ED98();
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController];
  objc_msgSend(v17, "setPrefetchDataSource:", v18);

  v19 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  v20 = swift_allocObject(&unk_1010B48D0, 32, 7);
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = ObjectType;
  v21 = (double (**)(uint64_t, uint64_t, uint64_t))(v18
                                                          + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkMetricsProvider);
  v23 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkMetricsProvider);
  v22 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkMetricsProvider + 8);
  *v21 = sub_1001AA860;
  v21[1] = (double (*)(uint64_t, uint64_t, uint64_t))v20;
  sub_10004BA30(v23, v22);
  v24 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16, v1);
  v25 = (unint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))(v18
                                                                                        + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v26 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider);
  v27 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_artworkProvider + 8);
  *v25 = sub_1001AA868;
  v25[1] = (unint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>))v24;
  sub_10004BA30(v26, v27);
  v122 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  v28 = static UIButton.contextBarButton()();
  v29 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16, v1);
  v128 = sub_1001AA870;
  v129 = v29;
  aBlock = _NSConcreteStackBlock;
  v125 = 1107296256;
  v126 = sub_100170D48;
  v127 = &unk_1010B48E8;
  v30 = _Block_copy(&aBlock);
  objc_msgSend(v28, "_setMenuProvider:", v30, swift_release(v129).n128_f64[0]);
  _Block_release(v30);
  v31 = objc_allocWithZone((Class)UIBarButtonItem);
  v113 = v28;
  v32 = objc_msgSend(v31, "initWithCustomView:", v28);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  v34 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v33 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v34 >= v33 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
  specialized Array._endMutation()(v35);
  static ApplicationCapabilities.shared.getter((uint64_t)&aBlock);
  sub_100065184(&aBlock);
  if ((v125 & 1) != 0)
  {
    type metadata accessor for MusicLibrary(0);
    v37 = objc_msgSend(v1, "traitCollection");
    v38 = sub_10013ADBC();
    UITraitCollection.subscript.getter(v121, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v38);

    v39 = v121[0];
    v41 = static MusicLibrary.shared.getter(v40);
    LOBYTE(v37) = static MusicLibrary.== infix(_:_:)(v39, v41);
    swift_release(v41);
    *(_QWORD *)&v36 = swift_release(v39).n128_u64[0];
    if ((v37 & 1) != 0)
    {
      v42 = sub_100170E10();
      v43 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v42);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v46 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v45 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v46 >= v45 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
      v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v43);
      specialized Array._endMutation()(v47);
      v36 = sub_100170E70();
    }
  }
  v48 = objc_msgSend(v1, "traitCollection", v36);
  v49 = objc_msgSend(v48, "userInterfaceIdiom");

  v50 = objc_msgSend(v1, "navigationItem");
  v51 = v122;
  if (v49 == (id)6)
  {
    sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v50, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v51).n128_f64[0]);

  }
  else
  {
    if (!sub_1008EC8F4(v122))
    {
      v53 = objc_msgSend(v50, "rightBarButtonItems");
      if (!v53)
        goto LABEL_20;
      v54 = v53;
      v55 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
      v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

      v57 = sub_1008EC9EC(v56);
      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v56) = sub_1002EC758((uint64_t)v57, v51);
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease_n(v57, 2);
      if ((v56 & 1) == 0)
      {
LABEL_20:
        v58 = sub_10004A07C(0, &qword_1011A3F70, UIBarButtonItem_ptr);
        v59 = Array.inserting(separator:)((uint64_t)sub_1008ECB38, 0, v51, v58);
        v60 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v50, "setRightBarButtonItems:animated:", v60, 0, swift_bridgeObjectRelease(v59).n128_f64[0]);

      }
    }
    swift_bridgeObjectRelease(v51);
  }

  v61 = (char *)sub_10016ED98();
  v62 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v62 + 16, v1);
  v63 = (void (**)(uint64_t, uint64_t))&v61[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v64 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  v65 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate + 8];
  *v63 = sub_1001AA878;
  v63[1] = (void (*)(uint64_t, uint64_t))v62;
  sub_10004BA30(v64, v65);

  v66 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController];
  v67 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v67 + 16, v1);
  v68 = *(_QWORD *)(v66 + 16);
  v69 = *(_QWORD *)(v66 + 24);
  *(_QWORD *)(v66 + 16) = sub_1001AA880;
  *(_QWORD *)(v66 + 24) = v67;
  sub_10004BA30(v68, v69);
  v70 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
  v71 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v71 + 16, v1);
  v72 = (uint64_t *)(v70 + *(_QWORD *)(*(_QWORD *)v70 + 104));
  v73 = *v72;
  v74 = v72[1];
  *v72 = (uint64_t)sub_1001AA88C;
  v72[1] = v71;
  sub_10004BA30(v73, v74);
  v75 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
  v76 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v76 + 16, v1);
  v77 = (uint64_t *)(v75 + *(_QWORD *)(*(_QWORD *)v75 + 104));
  v78 = *v77;
  v79 = v77[1];
  *v77 = (uint64_t)sub_1001AA894;
  v77[1] = v76;
  sub_10004BA30(v78, v79);
  v80 = sub_10016ED00();
  v81 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v81 + 16, v1);
  v82 = *(_QWORD *)(v80 + 72);
  v83 = *(_QWORD *)(v80 + 80);
  *(_QWORD *)(v80 + 72) = sub_1001AA89C;
  *(_QWORD *)(v80 + 80) = v81;
  sub_10004BA30(v82, v83);
  swift_release(v80);
  type metadata accessor for Whitetail.Binding();
  v84 = v70 + *(_QWORD *)(*(_QWORD *)v70 + 96);
  swift_beginAccess(v84, &v120, 0, 0);
  sub_10005B704(v84, (uint64_t)v6, _s6AlbumsVMa);
  sub_100233980();
  sub_10005B748((uint64_t)v6, _s6AlbumsVMa);
  UIScreen.Dimensions.size.getter(0);
  v86 = v85;
  v88 = v87;
  v90 = v89;
  v92 = v91;
  v121[3] = &type metadata for UserDefaultsKeyValueTrigger;
  v121[4] = &protocol witness table for UserDefaultsKeyValueTrigger;
  v93 = (_QWORD *)swift_allocObject(&unk_1010B4920, 48, 7);
  v121[0] = v93;
  v93[2] = v86;
  v93[3] = v88;
  v93[4] = v90;
  v93[5] = v92;
  v94 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v94 + 16, v1);
  v95 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(v121, 0, (uint64_t)sub_1001AA8D0, v94);
  v96 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_sortBinding];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_sortBinding] = v95;
  swift_release(v96);
  v97 = sub_100007E8C(&qword_1011A37B0);
  v114[3] = v97;
  v98 = sub_100049F68(v114);
  sub_100172074((uint64_t)v98);
  v115[3] = v97;
  v99 = sub_100049F68(v115);
  sub_100172264((uint64_t)v99);
  v116[3] = sub_100007E8C(&qword_1011A37C0);
  v100 = sub_100049F68(v116);
  sub_100172458((uint64_t)v100);
  v117[3] = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  v101 = sub_100049F68(v117);
  sub_100172634((uint64_t)v101);
  v118[3] = sub_100007E8C((uint64_t *)&unk_1011A37E0);
  v102 = sub_100049F68(v118);
  sub_100172844((uint64_t)v102);
  v119[3] = sub_100007E8C((uint64_t *)&unk_1011A37F0);
  v103 = sub_100049F68(v119);
  sub_100172A20((uint64_t)v103);
  swift_arrayDestroy(v114, 6, (char *)&type metadata for Any + 8);
  v104 = sub_10016ED98();
  v105 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v105 + 16, v1);
  v106 = type metadata accessor for CollectionViewDragDropController(0);
  swift_allocObject(v106, *(unsigned int *)(v106 + 48), *(unsigned __int16 *)(v106 + 52));
  v107 = sub_1002E3B4C(v104, (uint64_t)sub_1001AA8D8, v105, 0, 0, 0, 0, 0, 0);
  swift_release(v105);

  v108 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_dragDropController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_dragDropController] = v107;
  swift_release(v108);
  v109 = *(_QWORD *)(*(_QWORD *)v70 + 128);
  v110 = *(_BYTE *)(v70 + v109);
  *(_BYTE *)(v70 + v109) = 1;
  sub_1008E34F0(v110);
  v111 = *(_QWORD *)(*(_QWORD *)v75 + 128);
  v112 = *(_BYTE *)(v75 + v111);
  *(_BYTE *)(v75 + v111) = 1;
  sub_1008E3210(v112);

}

uint64_t sub_10016ED00()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___searchController;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___searchController];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___searchController];
  }
  else
  {
    v4 = v0;
    v5 = type metadata accessor for LibrarySearchController();
    swift_allocObject(v5, 121, 7);
    v6 = v0;
    v3 = sub_10040A500(0, 0, 1, (uint64_t)v6);

    v7 = *(_QWORD *)&v4[v1];
    *(_QWORD *)&v4[v1] = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

id sub_10016ED98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  id result;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double Width;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  _BYTE v45[16];
  objc_super v46;
  objc_super v47;
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___collectionView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___collectionView];
  if (v11)
  {
    v12 = *(id *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___collectionView];
LABEL_8:
    v44 = v11;
    return v12;
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A3DA0, UICollectionViewCompositionalLayout_ptr);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)(v5);
  v13 = (void *)static UICollectionViewCompositionalLayout.list(using:)(v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v14 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  objc_allocWithZone(v14);
  v15 = v13;
  v16 = sub_1001089FC(v15, 1, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v18 = result;
    objc_msgSend(result, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v48.receiver = v16;
    v48.super_class = v14;
    objc_msgSendSuper2(&v48, "frame");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v47.receiver = v16;
    v47.super_class = v14;
    objc_msgSendSuper2(&v47, "setFrame:", v20, v22, v24, v26);
    v49.origin.x = v28;
    v49.origin.y = v30;
    v49.size.width = v32;
    v49.size.height = v34;
    Width = CGRectGetWidth(v49);
    v46.receiver = v16;
    v46.super_class = v14;
    objc_msgSendSuper2(&v46, "frame");
    if (Width != CGRectGetWidth(v50))
      sub_100108B5C();
    objc_msgSend(v16, "setAutoresizingMask:", 18);
    result = objc_msgSend(v1, "view");
    if (result)
    {
      v36 = result;
      objc_msgSend(result, "addSubview:", v16);

      objc_msgSend(v16, "_setShouldPrefetchCellsWhenPerformingReloadData:", 1);
      objc_msgSend(v16, "setDataSource:", v1);
      objc_msgSend(v16, "setDelegate:", v1);
      objc_msgSend(v16, "setAlwaysBounceVertical:", 1);
      objc_msgSend(v16, "setKeyboardDismissMode:", 1);
      objc_msgSend(v16, "setAllowsFocus:", 1);
      objc_msgSend(v16, "setRemembersLastFocusedIndexPath:", 1);
      v45[15] = 0;
      v37 = sub_10004D63C();
      v38 = v16;
      objc_msgSend(v38, "setAllowsMultipleSelection:", FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v37) & 1);

      v39 = AccessibilityIdentifier.libraryArtistsDetailView.unsafeMutableAddressor();
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain();
      v42 = UIView.withAccessibilityIdentifier(_:)(v40, v41);

      swift_bridgeObjectRelease(v41);
      v43 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v42;
      v12 = v42;

      v11 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_10016F144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BYTE *v16;
  char v17;
  id v18;
  id v19;
  id v20;
  double (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE v26[24];

  v7 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  v11 = 0.0;
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = IndexPath.section.getter(Strong);
    v14 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
    v15 = sub_10016F3BC(v13, (uint64_t)v9);
    sub_10004FF60((uint64_t)v9, &qword_1011A3D88);
    if (v15 == 2)
    {

    }
    else
    {
      v16 = sub_10016ED98();
      v17 = v16[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

      if ((v17 & 1) != 0
        || *(_BYTE *)(*(_QWORD *)&v12[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController]
                    + 32) == 1)
      {
        if ((v15 & 1) != 0)
        {
          if (qword_10119BA20 != -1)
            swift_once(&qword_10119BA20, sub_10016DAF4);
          v11 = *(double *)&xmmword_1011A36C0;
          v18 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
        }
        else
        {
          if (qword_10119BA18 != -1)
            swift_once(&qword_10119BA18, sub_10016DADC);
          v11 = *(double *)&xmmword_1011A36B0;
          v18 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
        }
        v19 = v18;
        objc_msgSend(v19, "displayScale");

      }
      else
      {
        v20 = sub_10016ED98();
        v21 = sub_1001091D0();
        v23 = v22;

        v11 = v21(a1, a2);
        swift_release(v23);
      }
    }
  }
  return v11;
}

uint64_t sub_10016F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  unsigned int v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  char v45[24];

  v39 = a1;
  v43 = a2;
  v2 = sub_100007E8C(&qword_1011A3890);
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3910);
  v42 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3880);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(v43, (uint64_t)v16, &qword_1011A3D88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011A3D88);
    v21 = v38;
    v22 = *(_QWORD *)(v38 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
        + *(_QWORD *)(**(_QWORD **)(v38
                                  + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
                    + 112);
    v23 = swift_beginAccess(v22, v45, 0, 0);
    v24 = v42;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v42 + 48))(v22, 1, v5, v23))
    {
      v25 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v7, v22, v5);
      v31 = MusicLibrarySectionedResponse.isEmpty.getter();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
      v25 = !v31;
    }
    v33 = v40;
    v32 = v41;
    v34 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController)
        + *(_QWORD *)(**(_QWORD **)(v21
                                  + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController)
                    + 112);
    v35 = swift_beginAccess(v34, v44, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v33 + 48))(v34, 1, v32, v35))
    {
      if (!v25)
        return 2;
      return 2 * (v39 != 0);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v4, v34, v32);
    v30 = MusicLibrarySectionedResponse.isEmpty.getter();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v32);
  }
  else
  {
    sub_10005B6C0((uint64_t)v16, (uint64_t)v20, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
    sub_10004A160((uint64_t)v20, (uint64_t)v13, (uint64_t *)&unk_1011A3900);
    v26 = v42;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v13, 1, v5) == 1)
    {
      sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A3900);
      v25 = 0;
    }
    else
    {
      v27 = MusicLibrarySectionedResponse.isEmpty.getter();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v5);
      v25 = !v27;
    }
    v29 = v40;
    v28 = v41;
    sub_10004A160((uint64_t)&v20[*(int *)(v17 + 20)], (uint64_t)v10, (uint64_t *)&unk_1011A3880);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 1, v28) == 1)
    {
      sub_10005B748((uint64_t)v20, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
      sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3880);
      if (v25)
        return 2 * (v39 != 0);
      return 2;
    }
    v30 = MusicLibrarySectionedResponse.isEmpty.getter();
    sub_10005B748((uint64_t)v20, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v28);
  }
  if (!v25)
  {
    if (!v30)
    {
      if (v39)
        return 2;
      else
        return 1;
    }
    return 2;
  }
  if (v30)
    return 2 * (v39 != 0);
  if (v39 == 1)
    v36 = 1;
  else
    v36 = 2;
  if (v39)
    return v36;
  else
    return 0;
}

unint64_t sub_10016F81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t Strong;
  void *v38;
  int v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  double (*v66)(char *, unint64_t, uint64_t);
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  double (*v76)(char *, unint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __n128 v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  __n128 v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  _QWORD v107[4];
  char v108[32];

  v103 = a2;
  v105 = (char *)a1;
  v106 = a4;
  v5 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v5);
  v97 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011ADFC0);
  v95 = *(_QWORD *)(v7 - 8);
  v96 = v7;
  __chkstk_darwin(v7);
  v94 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3880);
  __chkstk_darwin(v9);
  v100 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011B59B0);
  v12 = __chkstk_darwin(v11);
  v99 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v102 = (char *)&v91 - v14;
  v15 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v15);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011ADFD0);
  v93 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v21);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100007E8C(&qword_1011A8FA0);
  v25 = __chkstk_darwin(v24);
  v98 = (uint64_t)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v101 = (char *)&v91 - v27;
  v28 = sub_100007E8C(&qword_1011A3D88);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v91 - v32;
  v34 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v104 = (uint64_t)&v91 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v108, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    goto LABEL_9;
  v38 = (void *)Strong;
  sub_10004A160((uint64_t)v105, (uint64_t)v107, &qword_10119DCC0);
  if (!v107[3])
  {
    sub_10004FF60((uint64_t)v107, &qword_10119DCC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v33, 1, 1, v34);
    goto LABEL_7;
  }
  v39 = swift_dynamicCast(v33, v107, (char *)&type metadata for Any + 8, v34, 6);
  v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
  v40(v33, v39 ^ 1u, 1, v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
LABEL_7:

    v46 = &qword_1011A3D88;
    v47 = (uint64_t)v33;
LABEL_8:
    sub_10004FF60(v47, v46);
    goto LABEL_9;
  }
  v105 = v17;
  v41 = v38;
  v42 = v104;
  v43 = sub_10005B6C0((uint64_t)v33, v104, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
  v44 = IndexPath.section.getter(v43);
  sub_10005B704(v42, (uint64_t)v31, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
  v40(v31, 0, 1, v34);
  v45 = sub_10016F3BC(v44, (uint64_t)v31);
  sub_10004FF60((uint64_t)v31, &qword_1011A3D88);
  if (v45 != 2)
  {
    v92 = v41;
    if ((v45 & 1) == 0)
    {
      v50 = v104;
      sub_10004A160(v104, (uint64_t)v23, (uint64_t *)&unk_1011A3900);
      v51 = sub_100007E8C(&qword_1011A3910);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v23, 1, v51) == 1)
      {
        sub_10004FF60((uint64_t)v23, (uint64_t *)&unk_1011A3900);
        v53 = type metadata accessor for Album(0);
        v54 = *(_QWORD *)(v53 - 8);
        v55 = (uint64_t)v101;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v101, 1, 1, v53);
LABEL_28:
        v84 = v98;
        sub_10004A160(v55, v98, &qword_1011A8FA0);
        type metadata accessor for Album(0);
        v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v84, 1, v53);
        if ((_DWORD)v85 == 1)
        {

          v86 = &qword_1011A8FA0;
          sub_10004FF60(v55, &qword_1011A8FA0);
          v87 = v50;
LABEL_37:
          sub_10005B748(v87, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
          v47 = v84;
          v46 = v86;
          goto LABEL_8;
        }
        Album.artwork.getter(v85);

        sub_10004FF60(v55, &qword_1011A8FA0);
        v88 = v50;
        goto LABEL_39;
      }
      v61 = MusicLibrarySectionedResponse.sections.getter(v51);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v51);
      v107[0] = _swiftEmptyArrayStorage;
      v62 = *(_QWORD *)(v61 + 16);
      if (v62)
      {
        v63 = v93;
        v64 = v61 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
        v65 = *(_QWORD *)(v93 + 72);
        v66 = *(double (**)(char *, unint64_t, uint64_t))(v93 + 16);
        swift_bridgeObjectRetain();
        v67 = (uint64_t)v105;
        do
        {
          v68.n128_f64[0] = v66(v20, v64, v18);
          MusicLibrarySection.items.getter(v18, v68);
          (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v18);
          sub_1008057C4(v67);
          v64 += v65;
          --v62;
        }
        while (v62);
        swift_bridgeObjectRelease_n(v61, 2);
        v70 = (_QWORD *)v107[0];
      }
      else
      {
        swift_bridgeObjectRelease(v61);
        v70 = _swiftEmptyArrayStorage;
      }
      result = IndexPath.item.getter(v69);
      v55 = (uint64_t)v101;
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v83 = result;
        v50 = v104;
        if (result < v70[2])
        {
          v53 = type metadata accessor for Album(0);
          v54 = *(_QWORD *)(v53 - 8);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v54 + 16))(v55, (unint64_t)v70+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v83, v53);
          swift_bridgeObjectRelease(v70);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v53);
          goto LABEL_28;
        }
      }
      __break(1u);
      goto LABEL_42;
    }
    v56 = v104;
    v57 = v100;
    sub_10004A160(v104 + *(int *)(v34 + 20), v100, (uint64_t *)&unk_1011A3880);
    v58 = sub_100007E8C(&qword_1011A3890);
    v59 = *(_QWORD *)(v58 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58) == 1)
    {
      sub_10004FF60(v57, (uint64_t *)&unk_1011A3880);
      v53 = type metadata accessor for MusicVideo(0);
      v54 = *(_QWORD *)(v53 - 8);
      v60 = (uint64_t)v102;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v102, 1, 1, v53);
    }
    else
    {
      v71 = MusicLibrarySectionedResponse.sections.getter(v58);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
      v107[0] = _swiftEmptyArrayStorage;
      v72 = *(_QWORD *)(v71 + 16);
      if (v72)
      {
        v73 = v95;
        v74 = v71 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
        v75 = *(_QWORD *)(v95 + 72);
        v76 = *(double (**)(char *, unint64_t, uint64_t))(v95 + 16);
        swift_bridgeObjectRetain();
        v78 = v96;
        v77 = (uint64_t)v97;
        v79 = v94;
        do
        {
          v80.n128_f64[0] = v76(v79, v74, v78);
          MusicLibrarySection.items.getter(v78, v80);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v79, v78);
          sub_1008050D0(v77);
          v74 += v75;
          --v72;
        }
        while (v72);
        swift_bridgeObjectRelease_n(v71, 2);
        v82 = (_QWORD *)v107[0];
      }
      else
      {
        swift_bridgeObjectRelease(v71);
        v82 = _swiftEmptyArrayStorage;
      }
      result = IndexPath.item.getter(v81);
      v60 = (uint64_t)v102;
      if ((result & 0x8000000000000000) != 0)
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v89 = result;
      if (result >= v82[2])
      {
LABEL_43:
        __break(1u);
        return result;
      }
      v53 = type metadata accessor for MusicVideo(0);
      v54 = *(_QWORD *)(v53 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v54 + 16))(v60, (unint64_t)v82+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v89, v53);
      v90 = swift_bridgeObjectRelease(v82);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v54 + 56))(v60, 0, 1, v53, v90);
      v56 = v104;
    }
    v84 = v99;
    sub_10004A160(v60, v99, &qword_1011B59B0);
    type metadata accessor for MusicVideo(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v84, 1, v53) == 1)
    {

      v86 = &qword_1011B59B0;
      sub_10004FF60(v60, &qword_1011B59B0);
      v87 = v56;
      goto LABEL_37;
    }
    MusicVideo.artwork.getter();

    sub_10004FF60(v60, &qword_1011B59B0);
    v88 = v56;
LABEL_39:
    sub_10005B748(v88, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v84, v53);
  }
  sub_10005B748(v42, type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext);

LABEL_9:
  v48 = type metadata accessor for Artwork(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v106, 1, 1, v48);
}

Class sub_1001701BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  char *v20;
  _BYTE *v21;
  char v22;
  uint64_t v23;
  UIMenuElementSize v24;
  UIMenuElementSize preferredElementSize;
  Swift::String v26;
  UIMenu v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  UIMenu v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  NSString v39;
  objc_class *v40;
  id v41;
  uint64_t v42;
  UIMenuElementSize v43;
  Swift::String v44;
  objc_class *v45;
  Swift::String v46;
  void *object;
  NSString v48;
  objc_class *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t inited;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  id v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  Class isa;
  id v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrena;
  _QWORD v77[2];
  _BYTE v78[48];
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  UIMenuElementSize v84;
  uint64_t v85;
  _QWORD v86[10];
  _OWORD v87[10];
  _QWORD v88[12];
  UIImage_optional v89;
  UIImage_optional v90;
  UIImage_optional v91;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v7);
  v9 = (char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s6AlbumsVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, &v85, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return 0;
  v20 = (char *)Strong;
  v84 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v21 = sub_10016ED98();
  v22 = v21[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

  if ((v22 & 1) == 0)
  {
    v23 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController];
    sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
    swift_retain(v23);
    sub_1008E95AC((uint64_t)&off_1010AA8B0, v23);
    preferredElementSize = v24;
    swift_release(v23);
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v89.value.super.isa = 0;
    v89.is_nil = 0;
    v27.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v89, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27.super.super.isa);
    v29 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27.super.super.isa);
    specialized Array._endMutation()(v30);
  }
  v77[0] = v9;
  v31 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
  v32 = v31 + *(_QWORD *)(*(_QWORD *)v31 + 96);
  swift_beginAccess(v32, &v83, 0, 0);
  sub_10005B704(v32, (uint64_t)v18, _s6AlbumsVMa);
  v33 = swift_allocObject(&unk_1010B3FE8, 24, 7);
  swift_weakInit(v33 + 16, v31);
  swift_retain(v33);
  v34.super.super.isa = sub_1008BA5D0((uint64_t)sub_1001AAB50, v33).super.super.isa;
  swift_release(v33);
  sub_10005B748((uint64_t)v18, _s6AlbumsVMa);
  swift_release(v33);
  if (v34.super.super.isa)
  {
    sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
    v35 = String.LocalizationValue.init(stringLiteral:)(0x79422074726F53, 0xE700000000000000);
    static Locale.current.getter(v35);
    v36 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v12, 0, 0, 256);
    v38 = v37;
    v39 = String._bridgeToObjectiveC()();
    v40 = (objc_class *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v39);

    v41 = -[objc_class children](v34.super.super.isa, "children");
    v42 = sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
    v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);

    v44._countAndFlagsBits = v36;
    v44._object = v38;
    v90.value.super.isa = v40;
    v90.is_nil = 0;
    v45 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v90, 0, 0xFFFFFFFFFFFFFFFFLL, v43, children).super.super.isa;
    v46._countAndFlagsBits = 0xD00000000000001ELL;
    v46._object = (void *)0x8000000100E30850;
    object = AccessibilityIdentifier.init(name:)(v46).rawValue._object;
    v48 = String._bridgeToObjectiveC()();
    -[objc_class setAccessibilityIdentifier:](v45, "setAccessibilityIdentifier:", v48, swift_bridgeObjectRelease(object).n128_f64[0]);

    v49 = v45;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v50 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
    specialized Array._endMutation()(v52);

  }
  v53 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v53, &v82);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  v55 = &v20[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
  swift_beginAccess(&v20[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist], &v81, 0, 0);
  v56 = type metadata accessor for Artist(0);
  *(_QWORD *)(inited + 56) = v56;
  *(_QWORD *)(inited + 64) = &protocol witness table for Artist;
  v57 = sub_100049F68((_QWORD *)(inited + 32));
  (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v57, v55, v56);
  v58 = type metadata accessor for PlaylistContext(0);
  v59 = v77[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v77[0], 1, 1, v58);
  v60 = v20;
  v61 = objc_msgSend(v60, "traitCollection");
  v62 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v88, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v62);

  v63 = v88[0];
  sub_100170A4C(v6);
  v64 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v6, 0, 1, v64);
  memset(v88, 0, 80);
  v79 = 0;
  memset(v78, 0, sizeof(v78));
  v80 = xmmword_100EA93A0;
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v65 = qword_10119B8C8;
  v66 = (id)qword_10124C798;
  if (v65 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v67 = qword_10124C7A0;
  swift_retain(qword_10124C7A0);
  sub_100495120(inited, 0, v59, v63, v66, v67, (unint64_t)v6, (uint64_t)v88, v86, (uint64_t)v78, 1);
  sub_100065228((uint64_t)v86, (uint64_t)v87, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v87[0] + 1))
  {
    v87[7] = v87[2];
    v87[8] = v87[3];
    v87[9] = v87[4];
    v87[5] = v87[0];
    v87[6] = v87[1];
    sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v68 = (void *)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_1000E411C((uint64_t)v86);
  }
  else
  {
    v68 = 0;
  }

  swift_release(v67);
  swift_bridgeObjectRelease(inited);
  swift_release(v63);
  sub_10004FF60((uint64_t)v78, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60((uint64_t)v6, (uint64_t *)&unk_1011A9990);
  sub_10004FF60(v59, (uint64_t *)&unk_1011A20C0);
  if (v68)
  {
    v70 = objc_msgSend(v68, "children");
    v71 = sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
    v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

    sub_100805EB8(v72);
  }
  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v73._countAndFlagsBits = 0;
  v73._object = (void *)0xE000000000000000;
  v91.value.super.isa = 0;
  v91.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v73, (Swift::String_optional)0, v91, 0, 0xFFFFFFFFFFFFFFFFLL, v84, childrena).super.super.isa;

  return isa;
}

uint64_t sub_100170A4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[24];
  _BYTE v39[24];
  _BYTE v40[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v33 - v7;
  v9 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v33 - v13;
  v15 = v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___actionMetricsReportingContext;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___actionMetricsReportingContext, v40, 0, 0);
  sub_10004A160(v15, (uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
    return sub_10005B6C0((uint64_t)v14, (uint64_t)a1, type metadata accessor for Actions.MetricsReportingContext);
  v36 = v17;
  v37 = a1;
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A9990);
  v18 = MetricsEvent.Page.libraryArtistDetail.unsafeMutableAddressor();
  sub_10005B704(v18, (uint64_t)v8, type metadata accessor for MetricsEvent.Page);
  v19 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
  sub_10004A160((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_1011A8780);
  v20 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v34 = v22;
  v35 = v21;
  v23 = qword_10119B8B8;
  v24 = (id)*v20;
  if (v23 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v25 = qword_10124C790;
  swift_retain(qword_10124C790);
  v26 = GroupActivitiesManager.hasJoined.getter();
  v27 = GroupActivitiesManager.participantsCount.getter();
  v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v25 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v39, 0, 0);
  v29 = *v28;

  swift_release(v25);
  v30 = v26 & 1;
  v31 = v37;
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 5, (uint64_t)v6, v35, v34, 0, 0, v30, v37, v27, v29);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A8780);
  sub_10005B704((uint64_t)v31, (uint64_t)v12, type metadata accessor for Actions.MetricsReportingContext);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v12, 0, 1, v16);
  swift_beginAccess(v15, v38, 33, 0);
  sub_1000A5508((uint64_t)v12, v15, (uint64_t *)&unk_1011A9990);
  return swift_endAccess(v38);
}

id sub_100170D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(__int128 *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v11;
  __int128 v12;

  v3 = a3;
  v6 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (!a2)
  {
    v11 = 0u;
    v12 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v12 + 1) = swift_getObjectType();
  *(_QWORD *)&v11 = a2;
  if (v3)
  {
LABEL_3:
    v7 = sub_10004A07C(0, &qword_1011D10A0, UIMenuElement_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v7);
  }
LABEL_4:
  swift_retain(v5);
  swift_unknownObjectRetain(a2, v8);
  v9 = (void *)v6(&v11, v3);
  swift_release(v5);
  swift_bridgeObjectRelease(v3);
  sub_10004FF60((uint64_t)&v11, &qword_10119DCC0);
  return v9;
}

id sub_100170E10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___favoriteButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___favoriteButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___favoriteButton);
  }
  else
  {
    v4 = sub_1001780DC(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

double sub_100170E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  double result;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[3];
  char v61[24];
  char v62[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v54 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100007E8C(&qword_1011A3F78);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v52 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3F80);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  __chkstk_darwin(v5);
  v56 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_10119FCF8);
  v59 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MusicLibraryRequest.init()(v7, &protocol witness table for Artist);
  KeyPath = swift_getKeyPath(&unk_100EACF28);
  v15 = sub_100007E8C(&qword_1011A3F90);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EA7AA0;
  v17 = v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
  v18 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist, v62, 0, 0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v17, v7, v18);
  v20 = Artist.id.getter(v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v16 + 32) = v20;
  *(_QWORD *)(v16 + 40) = v22;
  MusicLibraryRequest.filter<A>(matching:memberOf:)(KeyPath, v16, v11, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease(v16);
  swift_release(KeyPath);
  v23 = sub_100049F28(&qword_1011A3F98, &qword_10119FCF8, (uint64_t)&protocol conformance descriptor for MusicLibraryRequest<A>);
  v24 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v11, v23);
  v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponse);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponse, v61, 1, 0);
  v26 = *v25;
  *v25 = v24;
  swift_release(v26);
  v27 = swift_beginAccess(v25, v60, 32, 0);
  v28 = *v25;
  if (*v25)
  {
    swift_endAccess(v60);
    v29 = swift_retain(v28);
    v30 = v52;
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v29);
    swift_release(v28);
    v31 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
    v60[0] = (id)static OS_dispatch_queue.main.getter(v31, v32, v33, v34, v35, v36, v37, v38);
    v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v40 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v54, 1, 1, v39);
    v41 = sub_100049F28(&qword_1011A3FA0, &qword_1011A3F78, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v42 = sub_10006A92C();
    v43 = v55;
    v44 = v56;
    Publisher.receive<A>(on:options:)(v60, v40, v55, v31, v41, v42);
    sub_10004FF60(v40, &qword_1011A08F0);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v43);
    v45 = swift_allocObject(&unk_1010B4628, 24, 7);
    swift_unknownObjectWeakInit(v45 + 16, v1);
    v46 = sub_100049F28(&qword_1011A3FA8, (uint64_t *)&unk_1011A3F80, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v47 = v58;
    v28 = Publisher<>.sink(receiveValue:)(sub_1001AA924, v45, v58, v46);
    v48 = swift_release(v45);
    (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v44, v47, v48);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v13, v11, v27);
    swift_endAccess(v60);
  }
  v49 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponseSubscription);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponseSubscription) = v28;
  *(_QWORD *)&result = swift_release(v49).n128_u64[0];
  return result;
}

void sub_1001712DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  id v8;
  unsigned __int8 *v9;
  int v10;
  id v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  _BYTE v16[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    if ((*(_BYTE *)(a1 + 56) & 1) == (*(_BYTE *)(a2 + 56) & 1))
    {
LABEL_9:

      return;
    }
    v8 = sub_10016ED98();
    v9 = (unsigned __int8 *)sub_10016ED98();
    v10 = v9[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

    if (v10 == 1)
    {
      v11 = sub_10016ED98();
    }
    else
    {
      v12 = *(_BYTE *)(*(_QWORD *)&v7[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController]
                     + 32);
      v13 = sub_10016ED98();
      v11 = v13;
      if ((v12 & 1) == 0)
      {
        v14 = sub_1005AEAE0((uint64_t)v13, 1);
        goto LABEL_8;
      }
    }
    v14 = sub_1005AEDD4((uint64_t)v11, 1, 0, 0, 0, 0);
LABEL_8:
    v15 = v14;

    sub_100108F1C(v15);
    goto LABEL_9;
  }
}

void sub_1001713F8(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10016ED98();
    v7 = sub_10016ED98();
    v8 = v7;
    if ((a1 & 1) != 0)
      v9 = sub_1005AEDD4((uint64_t)v7, 1, 0, 0, 0, 0);
    else
      v9 = sub_1005AEAE0((uint64_t)v7, 1);
    v10 = v9;

    sub_100108F1C(v10);
  }
}

void sub_1001714A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  _BYTE *v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  __n128 v21;
  BOOL v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  char *v26;
  BOOL v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  char v33[24];
  _QWORD v34[4];
  char v35[24];

  v4 = sub_100007E8C(&qword_1011A3890);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A3910);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (_BYTE *)Strong;
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v14)(a1, 1, v8) != 1)
    {
      v29 = v7;
      v31 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController];
      v15 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
      v34[3] = v15;
      v16 = sub_100049F68(v34);
      sub_10004A160(a1, (uint64_t)v16, (uint64_t *)&unk_1011A3900);
      v30 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController;
      v17 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
          + *(_QWORD *)(**(_QWORD **)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                      + 112);
      swift_beginAccess(v17, v33, 0, 0);
      sub_10004A160(v17, (uint64_t)v16 + *(int *)(v15 + 20), (uint64_t *)&unk_1011A3880);
      v18 = v31 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
      swift_beginAccess(v31 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context, v32, 33, 0);
      sub_1000A5508((uint64_t)v34, v18, &qword_10119DCC0);
      swift_endAccess(v32);
      v19 = sub_10016ED98();
      objc_msgSend(v19, "reloadData");

      v20 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
          + *(_QWORD *)(**(_QWORD **)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
                      + 112);
      v21 = swift_beginAccess(v20, v34, 0, 0);
      if (v14(v20, 1, v8, v21)
        || ((*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8),
            v22 = MusicLibrarySectionedResponse.isEmpty.getter(),
            (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
            v22))
      {
        v23 = *(_QWORD *)&v13[v30] + *(_QWORD *)(**(_QWORD **)&v13[v30] + 112);
        v24 = swift_beginAccess(v23, v32, 0, 0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v23, 1, v4, v24))
        {
          v25 = 0;
        }
        else
        {
          v26 = v29;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v29, v23, v4);
          v27 = MusicLibrarySectionedResponse.isEmpty.getter();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
          v25 = !v27;
        }
      }
      else
      {
        v25 = 1;
      }
      v28 = v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent];
      v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent] = v25 & 1;
      sub_100177C0C(v28);
    }

  }
}

void sub_1001717B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  _BYTE *v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  __n128 v21;
  BOOL v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  char *v26;
  BOOL v27;
  int v28;
  uint64_t v29;
  char *v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  char v35[24];
  _QWORD v36[4];
  char v37[24];

  v4 = sub_100007E8C(&qword_1011A3890);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A3910);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (_BYTE *)Strong;
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v14)(a1, 1, v4) != 1)
    {
      v30 = v7;
      v31 = v14;
      v32 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController];
      v33 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController;
      v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
          + *(_QWORD *)(**(_QWORD **)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
                      + 112);
      swift_beginAccess(v15, v35, 0, 0);
      v16 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
      v36[3] = v16;
      v17 = sub_100049F68(v36);
      sub_10004A160(v15, (uint64_t)v17, (uint64_t *)&unk_1011A3900);
      sub_10004A160(a1, (uint64_t)v17 + *(int *)(v16 + 20), (uint64_t *)&unk_1011A3880);
      v18 = v32 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context;
      swift_beginAccess(v32 + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_context, v34, 33, 0);
      sub_1000A5508((uint64_t)v36, v18, &qword_10119DCC0);
      swift_endAccess(v34);
      v19 = sub_10016ED98();
      objc_msgSend(v19, "reloadData");

      v20 = *(_QWORD *)&v13[v33] + *(_QWORD *)(**(_QWORD **)&v13[v33] + 112);
      v21 = swift_beginAccess(v20, v36, 0, 0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48))(v20, 1, v8, v21)
        || ((*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8),
            v22 = MusicLibrarySectionedResponse.isEmpty.getter(),
            (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
            v22))
      {
        v23 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
            + *(_QWORD *)(**(_QWORD **)&v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                        + 112);
        v24 = swift_beginAccess(v23, v34, 0, 0);
        if (v31(v23, 1, v4, v24))
        {
          v25 = 0;
        }
        else
        {
          v26 = v30;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v30, v23, v4);
          v27 = MusicLibrarySectionedResponse.isEmpty.getter();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
          v25 = !v27;
        }
      }
      else
      {
        v25 = 1;
      }
      v28 = v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent];
      v13[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent] = v25 & 1;
      sub_100177C0C(v28);
    }

  }
}

double sub_100171ACC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  double result;
  void *v30;
  uint64_t v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _BYTE v45[24];
  char v46[24];
  _BYTE v47[24];
  char v48[24];
  char v49[32];

  v6 = _s11MusicVideosVMa(0);
  v7 = __chkstk_darwin(v6);
  v44 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v43 = (uint64_t)&v41 - v9;
  v10 = _s6AlbumsVMa(0);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v15 = (char *)&v41 - v14;
  v16 = a3 + 16;
  swift_beginAccess(a3 + 16, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (Strong)
  {
    v18 = (void *)Strong;
    v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController);
    swift_retain(v19);

    if (a2)
      v20 = a1;
    else
      v20 = 0;
    v21 = 0xE000000000000000;
    if (a2)
      v21 = a2;
    v41 = v21;
    v42 = v20;
    v22 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 96);
    swift_beginAccess(v22, v48, 0, 0);
    sub_10005B704(v22, (uint64_t)v15, _s6AlbumsVMa);
    v23 = a1;
    v24 = v6;
    v25 = &v15[*(int *)(v10 + 28)];
    v26 = *((_QWORD *)v25 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v26);
    v27 = v41;
    *(_QWORD *)v25 = v42;
    *((_QWORD *)v25 + 1) = v27;
    v6 = v24;
    a1 = v23;
    sub_10005B704(v22, (uint64_t)v13, _s6AlbumsVMa);
    swift_beginAccess(v22, v47, 33, 0);
    sub_1001A81D8((uint64_t)v15, v22, _s6AlbumsVMa);
    swift_endAccess(v47);
    sub_10018168C(v13);
    sub_10005B748((uint64_t)v15, _s6AlbumsVMa);
    sub_10005B748((uint64_t)v13, _s6AlbumsVMa);
    swift_release(v19);
  }
  swift_beginAccess(v16, v47, 0, 0);
  v28 = swift_unknownObjectWeakLoadStrong(v16);
  if (v28)
  {
    v30 = (void *)v28;
    v31 = *(_QWORD *)(v28 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController);
    swift_retain(v31);

    v32 = a2 == 0;
    v33 = a2;
    if (a2)
      v34 = a1;
    else
      v34 = 0;
    if (v32)
      v35 = 0xE000000000000000;
    else
      v35 = v33;
    v36 = v31 + *(_QWORD *)(*(_QWORD *)v31 + 96);
    swift_beginAccess(v36, v46, 0, 0);
    v37 = v43;
    sub_10005B704(v36, v43, _s11MusicVideosVMa);
    v38 = (_QWORD *)(v37 + *(int *)(v6 + 28));
    v39 = v38[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v39);
    *v38 = v34;
    v38[1] = v35;
    v40 = v44;
    sub_10005B704(v36, (uint64_t)v44, _s11MusicVideosVMa);
    swift_beginAccess(v36, v45, 33, 0);
    sub_1001A81D8(v37, v36, _s11MusicVideosVMa);
    swift_endAccess(v45);
    sub_100183244(v40);
    sub_10005B748(v37, _s11MusicVideosVMa);
    sub_10005B748((uint64_t)v40, _s11MusicVideosVMa);
    *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  }
  return result;
}

void sub_100171E08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int16 v18;
  uint64_t v19;
  _BYTE v20[24];
  _QWORD v21[3];
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = _s11MusicVideosVMa(0);
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t *)&v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v20[-v6];
  v8 = _s6AlbumsVMa(0);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
        + *(_QWORD *)(**(_QWORD **)&v12[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
                    + 96);
    swift_beginAccess(v14, v22, 0, 0);
    sub_10005B704(v14, (uint64_t)v10, _s6AlbumsVMa);
    sub_100233980();
    v16 = v15;
    sub_10005B748((uint64_t)v10, _s6AlbumsVMa);
    v17 = sub_100049FE4();
    sub_10004A028();
    NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&_s11ContentSortVN, v17, v21);
    swift_bridgeObjectRelease(v16);

    v18 = v21[0];
    if ((v21[0] & 0xFF00) != 0x200)
    {
      v19 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
          + *(_QWORD *)(**(_QWORD **)&v12[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                      + 96);
      swift_beginAccess(v19, v21, 0, 0);
      sub_10005B704(v19, (uint64_t)v7, _s11MusicVideosVMa);
      sub_10075DA44(v18 & 0x1FF);
      sub_10005B704(v19, (uint64_t)v5, _s11MusicVideosVMa);
      swift_beginAccess(v19, v20, 33, 0);
      sub_1001A81D8((uint64_t)v7, v19, _s11MusicVideosVMa);
      swift_endAccess(v20);
      sub_100183244(v5);
      sub_10005B748((uint64_t)v7, _s11MusicVideosVMa);
      sub_10005B748((uint64_t)v5, _s11MusicVideosVMa);
    }

  }
}

uint64_t sub_100172074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  v4 = __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___globalHeaderRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___globalHeaderRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = (uint64_t *)UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v13 = *v12;
  v14 = v12[1];
  v15 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  swift_bridgeObjectRetain();
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v13, v14, sub_1001AA55C, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v6, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100172264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011ACE50);
  v4 = __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v18[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___headerRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___headerRegistration, v19, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v10 = sub_100007E8C(&qword_1011A37B0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011ACE50);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v14 = v13;
  v15 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v1);
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v12, v14, sub_1001AA850, v15, v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v18, 33, 0);
  sub_1000A5508((uint64_t)v6, v9, (uint64_t *)&unk_1011ACE50);
  return swift_endAccess(v18);
}

uint64_t sub_100172458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3DE0);
  v4 = __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumGridCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumGridCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011A3DE0);
  v10 = sub_100007E8C(&qword_1011A37C0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3DE0);
  v12 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v14 = type metadata accessor for Album(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1001AA46C, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v6, v9, (uint64_t *)&unk_1011A3DE0);
  return swift_endAccess(v16);
}

uint64_t sub_100172634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3E40);
  v6 = __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumListCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumListCellRegistration, v20, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, (uint64_t *)&unk_1011A3E40);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011A3E40);
  v14 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v2);
  v15 = swift_allocObject(&unk_1010B4808, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for Album(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1001AA504, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v8, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_1000A5508((uint64_t)v8, v11, (uint64_t *)&unk_1011A3E40);
  return swift_endAccess(v19);
}

uint64_t sub_100172844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];

  v3 = sub_100007E8C((uint64_t *)&unk_1011A3E70);
  v4 = __chkstk_darwin(v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v16[-v7];
  v9 = v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoGridCellRegistration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoGridCellRegistration, v17, 0, 0);
  sub_10004A160(v9, (uint64_t)v8, (uint64_t *)&unk_1011A3E70);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A37E0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011A3E70);
  v12 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  v13 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v14 = type metadata accessor for MusicVideo(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1001AA518, v12, v13, v14);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v16, 33, 0);
  sub_1000A5508((uint64_t)v6, v9, (uint64_t *)&unk_1011A3E70);
  return swift_endAccess(v16);
}

uint64_t sub_100172A20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C((uint64_t *)&unk_1011B8C00);
  v6 = __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v19[-v9];
  v11 = v2 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoListCellRegistration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoListCellRegistration, v20, 0, 0);
  sub_10004A160(v11, (uint64_t)v10, (uint64_t *)&unk_1011B8C00);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A37F0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v13 + 32))(a1, v10, v12);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011B8C00);
  v14 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v2);
  v15 = swift_allocObject(&unk_1010B4830, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = ObjectType;
  v16 = sub_10004A07C(0, (unint64_t *)&unk_1011AE8C0, UICollectionViewListCell_ptr);
  v17 = type metadata accessor for MusicVideo(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1001AA540, v15, v16, v17);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v8, a1, v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  swift_beginAccess(v11, v19, 33, 0);
  sub_1000A5508((uint64_t)v8, v11, (uint64_t *)&unk_1011B8C00);
  return swift_endAccess(v19);
}

void sub_100172C30(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t Strong;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  double (*v58)(char *, unint64_t, uint64_t);
  __n128 v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  double (*v74)(char *, unint64_t, uint64_t);
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD v149[3];
  _BYTE v150[24];
  char v151[16];

  v148 = a3;
  v5 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v5);
  v131 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011ADFC0);
  v130 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v10);
  v136 = (uint64_t)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A3890);
  v146 = *(_QWORD *)(v12 - 8);
  v147 = v12;
  __chkstk_darwin(v12);
  v138 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicVideo(0);
  v144 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v135 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v143 = (char *)&v126 - v17;
  v18 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v18);
  v20 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011ADFD0);
  v129 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = _s6AlbumsVMa(0);
  __chkstk_darwin(v24);
  v133 = (uint64_t)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  v27 = __chkstk_darwin(v26);
  v139 = (char *)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v134 = (uint64_t)&v126 - v29;
  v30 = sub_100007E8C(&qword_1011A3910);
  v145 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v137 = (char *)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for Album(0);
  v141 = *(_QWORD *)(v32 - 8);
  v142 = v32;
  v33 = __chkstk_darwin(v32);
  v132 = (char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v140 = (char *)&v126 - v35;
  v36 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v36);
  v38 = (char *)&v126 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v151, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
  {
    v45 = type metadata accessor for DragItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v148, 1, 1, v45);
    return;
  }
  v126 = v14;
  v40 = (char *)Strong;
  v128 = a1;
  v41 = IndexPath.section.getter(Strong);
  v42 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v38, 1, 1, v42);
  v43 = sub_10016F3BC(v41, (uint64_t)v38);
  sub_10004FF60((uint64_t)v38, &qword_1011A3D88);
  if (v43 == 2)
  {
    v44 = type metadata accessor for DragItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v148, 1, 1, v44);

    return;
  }
  v127 = v40;
  v46 = v148;
  if ((v43 & 1) == 0)
  {
    v47 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController;
    v48 = v127;
    v49 = *(_QWORD *)&v127[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
        + *(_QWORD *)(**(_QWORD **)&v127[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
                    + 112);
    v50 = swift_beginAccess(v49, v150, 0, 0);
    v51 = v145;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v145 + 48))(v49, 1, v30, v50))
    {
      v52 = v137;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v137, v49, v30);
      v53 = MusicLibrarySectionedResponse.sections.getter(v30);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v30);
      v149[0] = _swiftEmptyArrayStorage;
      v54 = *(_QWORD *)(v53 + 16);
      if (v54)
      {
        v147 = v47;
        v55 = v129;
        v56 = v53 + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
        v57 = *(_QWORD *)(v129 + 72);
        v58 = *(double (**)(char *, unint64_t, uint64_t))(v129 + 16);
        swift_bridgeObjectRetain();
        do
        {
          v59.n128_f64[0] = v58(v23, v56, v21);
          MusicLibrarySection.items.getter(v21, v59);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v21);
          sub_1008057C4((uint64_t)v20);
          v56 += v57;
          --v54;
        }
        while (v54);
        swift_bridgeObjectRelease_n(v53, 2);
        v61 = (char *)v149[0];
        v47 = v147;
        v46 = v148;
      }
      else
      {
        swift_bridgeObjectRelease(v53);
        v61 = (char *)_swiftEmptyArrayStorage;
      }
      v79 = IndexPath.item.getter(v60);
      v81 = v141;
      v80 = v142;
      v82 = v140;
      if ((v79 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v83 = v127;
        if (v79 < *((_QWORD *)v61 + 2))
        {
          v84 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
          v85 = v132;
          v84(v132, &v61[((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80))+ *(_QWORD *)(v141 + 72) * v79], v142);
          v86 = swift_bridgeObjectRelease(v61);
          (*(void (**)(char *, char *, uint64_t, __n128))(v81 + 32))(v82, v85, v80, v86);
          v87 = *(_QWORD *)&v83[v47] + *(_QWORD *)(**(_QWORD **)&v83[v47] + 96);
          swift_beginAccess(v87, v149, 0, 0);
          v88 = v133;
          sub_10005B704(v87, v133, _s6AlbumsVMa);
          v89 = v134;
          sub_1002339A0(v134);
          sub_10005B748(v88, _s6AlbumsVMa);
          v90 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
          v91 = *(_QWORD *)(v90 - 8);
          v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90);
          if ((_DWORD)v92 == 1)
          {
            sub_10004FF60(v89, (uint64_t *)&unk_1011A3D60);
            v93 = 0;
          }
          else
          {
            v93 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v92);
            (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
          }
          v94 = sub_100868984(v93);
          v95 = sub_100869D18(v94, (uint64_t)&off_1010AA8D8);
          swift_bridgeObjectRelease(v94);
          v96 = sub_10047D540((uint64_t)v95);
          swift_bridgeObjectRelease(v95);
          v97 = type metadata accessor for DragItem(0);
          v98 = (char *)v46 + *(int *)(v97 + 20);
          v84(v98, v82, v80);
          v99 = enum case for GenericMusicItem.album(_:);
          v100 = type metadata accessor for GenericMusicItem(0);
          (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 104))(v98, v99, v100);
          v101 = type metadata accessor for DragItem.Source(0);
          swift_storeEnumTagMultiPayload(v98, v101, 1);
          *v46 = v96;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v46, 0, 1, v97);

          (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
          return;
        }
      }
      __break(1u);
      goto LABEL_34;
    }
LABEL_12:

    v67 = type metadata accessor for DragItem(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v46, 1, 1, v67);
    return;
  }
  v62 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController;
  v48 = v127;
  v63 = *(_QWORD *)&v127[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
      + *(_QWORD *)(**(_QWORD **)&v127[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                  + 112);
  v64 = swift_beginAccess(v63, v150, 0, 0);
  v66 = v146;
  v65 = v147;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v146 + 48))(v63, 1, v147, v64))
    goto LABEL_12;
  v145 = v62;
  v68 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v138, v63, v65);
  v69 = MusicLibrarySectionedResponse.sections.getter(v65);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v65);
  v149[0] = _swiftEmptyArrayStorage;
  v70 = *(_QWORD *)(v69 + 16);
  if (v70)
  {
    v71 = v130;
    v72 = v69 + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
    v73 = *(_QWORD *)(v130 + 72);
    v74 = *(double (**)(char *, unint64_t, uint64_t))(v130 + 16);
    swift_bridgeObjectRetain();
    v75 = (uint64_t)v131;
    do
    {
      v76.n128_f64[0] = v74(v9, v72, v7);
      MusicLibrarySection.items.getter(v7, v76);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v7);
      sub_1008050D0(v75);
      v72 += v73;
      --v70;
    }
    while (v70);
    swift_bridgeObjectRelease_n(v69, 2);
    v78 = (char *)v149[0];
  }
  else
  {
    swift_bridgeObjectRelease(v69);
    v78 = (char *)_swiftEmptyArrayStorage;
  }
  v102 = v126;
  v103 = IndexPath.item.getter(v77);
  v105 = v143;
  v104 = v144;
  v106 = (uint64_t)v139;
  if ((v103 & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v107 = v127;
  if (v103 >= *((_QWORD *)v78 + 2))
  {
LABEL_35:
    __break(1u);
    return;
  }
  v108 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  v109 = v135;
  v108(v135, &v78[((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80))+ *(_QWORD *)(v144 + 72) * v103], v102);
  v110 = swift_bridgeObjectRelease(v78);
  (*(void (**)(char *, char *, uint64_t, __n128))(v104 + 32))(v105, v109, v102, v110);
  v111 = *(_QWORD *)&v107[v145] + *(_QWORD *)(**(_QWORD **)&v107[v145] + 96);
  swift_beginAccess(v111, v149, 0, 0);
  v112 = v136;
  sub_10005B704(v111, v136, _s11MusicVideosVMa);
  sub_10075DC18(v106);
  sub_10005B748(v112, _s11MusicVideosVMa);
  v113 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v114 = *(_QWORD *)(v113 - 8);
  v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v106, 1, v113);
  if ((_DWORD)v115 == 1)
  {
    sub_10004FF60(v106, (uint64_t *)&unk_1011A3D60);
    v116 = 0;
  }
  else
  {
    v116 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v115);
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v106, v113);
  }
  v117 = sub_100868D08(v116);
  v118 = sub_100869D18(v117, (uint64_t)&off_1010AA900);
  swift_bridgeObjectRelease(v117);
  v119 = sub_10047D540((uint64_t)v118);
  swift_bridgeObjectRelease(v118);
  v120 = type metadata accessor for DragItem(0);
  v121 = v148;
  v122 = (char *)v148 + *(int *)(v120 + 20);
  v108(v122, v105, v102);
  v123 = enum case for GenericMusicItem.musicVideo(_:);
  v124 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 104))(v122, v123, v124);
  v125 = type metadata accessor for DragItem.Source(0);
  swift_storeEnumTagMultiPayload(v122, v125, 1);
  *v121 = v119;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v121, 0, 1, v120);

  (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v102);
}

void sub_100173804(int a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v16[5];
  uint64_t v17;
  objc_super v18;

  v2 = v1;
  v18.receiver = v1;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, "viewWillAppear:", a1 & 1);
  v4 = sub_10016ED98();
  v5 = objc_msgSend(v2, "transitionCoordinator");
  UICollectionView.clearSelection(using:animated:)(v5, a1);
  swift_unknownObjectRelease(v5);

  v6 = objc_msgSend(v2, "transitionCoordinator");
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject(&unk_1010B4628, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16, v2);
    v16[4] = sub_1001AA858;
    v17 = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1005CE710;
    v16[3] = &unk_1010B4898;
    v9 = _Block_copy(v16);
    objc_msgSend(v7, "animateAlongsideTransition:completion:", 0, v9, swift_release(v17).n128_f64[0]);
    _Block_release(v9);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
    v11 = *(_QWORD *)(*(_QWORD *)v10 + 128);
    v12 = *(_BYTE *)(v10 + v11);
    *(_BYTE *)(v10 + v11) = 1;
    sub_1008E34F0(v12);
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
    v14 = *(_QWORD *)(*(_QWORD *)v13 + 128);
    v15 = *(_BYTE *)(v13 + v14);
    *(_BYTE *)(v13 + v14) = 1;
    sub_1008E3210(v15);
  }
}

void sub_100173990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController);
    v6 = *(_QWORD *)(*(_QWORD *)v5 + 128);
    v7 = *(_BYTE *)(v5 + v6);
    *(_BYTE *)(v5 + v6) = 1;
    sub_1008E34F0(v7);
    v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
    v9 = *(_QWORD *)(*(_QWORD *)v8 + 128);
    v10 = *(_BYTE *)(v8 + v9);
    *(_BYTE *)(v8 + v9) = 1;
    sub_1008E3210(v10);

  }
}

uint64_t sub_100173A68(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  __n128 v19;
  _BYTE v22[24];
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = type metadata accessor for MetricsEvent.Page(0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23.receiver = v1;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1, v5);
  v8 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  v9 = MetricsEvent.Page.libraryArtistDetail.unsafeMutableAddressor();
  sub_10005B704(v9, (uint64_t)v7, type metadata accessor for MetricsEvent.Page);
  sub_100540B34();
  v11 = v10;
  v13 = v12;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v14 = qword_10124C790;
  swift_retain(qword_10124C790);
  v15 = GroupActivitiesManager.hasJoined.getter();
  v16 = GroupActivitiesManager.participantsCount.getter();
  v17 = (uint64_t *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v22, 0, 0);
  v18 = *v17;
  v19 = swift_release(v14);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v8) + 0xA0))(v7, v11, v13, v15 & 1, v16, v18, v19);

  swift_bridgeObjectRelease(v13);
  return sub_10005B748((uint64_t)v7, type metadata accessor for MetricsEvent.Page);
}

void sub_100173C3C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  objc_super v10;

  v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "viewDidDisappear:", a1 & 1);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 128);
  v6 = *(_BYTE *)(v4 + v5);
  *(_BYTE *)(v4 + v5) = 0;
  sub_1008E34F0(v6);
  v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
  v8 = *(_QWORD *)(*(_QWORD *)v7 + 128);
  v9 = *(_BYTE *)(v7 + v8);
  *(_BYTE *)(v7 + v8) = 0;
  sub_1008E3210(v9);
}

void sub_100173D04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v7 = sub_100007E8C(&qword_1011A3EE0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *(void **)(Strong + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistHeader);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistHeader) = a1;

    __chkstk_darwin(v14);
    v19[-2] = v12;
    a1;
    v15 = sub_100007E8C(&qword_1011A3EE8);
    v16 = sub_1001AA56C();
    v17 = UIHostingConfiguration<>.init(content:)(sub_1001AA564, &v19[-4], v15, v16);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v7;
    v19[4] = sub_100049F28(&qword_1011A3F08, &qword_1011A3EE0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v7, 0.0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

uint64_t sub_100173E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_100007E8C(&qword_1011A3F00);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v5);
  *((_QWORD *)v7 + 1) = 0x4031000000000000;
  v7[16] = 0;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3F10);
  v9 = sub_100173F88(a1, (uint64_t)&v7[*(int *)(v8 + 44)]);
  LOBYTE(a1) = static Edge.Set.bottom.getter(v9);
  v10 = EdgeInsets.init(_all:)(8.0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_10004A160((uint64_t)v7, a2, &qword_1011A3F00);
  v17 = a2 + *(int *)(sub_100007E8C(&qword_1011A3EE8) + 36);
  *(_BYTE *)v17 = a1;
  *(double *)(v17 + 8) = v10;
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v16;
  *(_BYTE *)(v17 + 40) = 0;
  return sub_10004FF60((uint64_t)v7, &qword_1011A3F00);
}

uint64_t sub_100173F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::Int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  __n128 v66;
  uint64_t (*v67)(_BYTE *, uint64_t, uint64_t, __n128);
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_BYTE *, uint64_t);
  _BYTE *v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  Swift::String v79;
  Swift::String v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  _BYTE *v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  Swift::String v91;
  Swift::String v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BOOL8 v97;
  CGFloat bottom;
  CGFloat right;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  _BYTE v116[12];
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  __int128 v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;
  _QWORD v129[3];
  __int128 v130;
  CGFloat v131;
  CGFloat v132;
  char *(*v133)();
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  _BYTE *v138;
  uint64_t v139;
  _BYTE v140[24];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  unsigned __int8 v144;
  char v145[24];
  _QWORD v146[11];
  unsigned __int8 v147;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  *(_QWORD *)&v124 = &v116[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v123 = &v116[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v8);
  v122 = &v116[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_100007E8C(&qword_1011A9A10);
  __chkstk_darwin(v10);
  v12 = &v116[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v13);
  v15 = &v116[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for Artist(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v121 = &v116[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v21 = &v116[-v20];
  v22 = sub_100007E8C(&qword_1011A3F20);
  v23 = __chkstk_darwin(v22);
  v25 = &v116[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v127 = &v116[-v26];
  v27 = sub_10016ED00();
  v28 = (uint64_t *)(*(_QWORD *)(v27 + 104)
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
  v29 = v28[1];
  v125 = a2;
  v126 = v25;
  if (v29)
  {
    v30 = *v28;
    swift_release(v27);
    v31 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v31 = v30 & 0xFFFFFFFFFFFFLL;
    if (v31)
    {
      v32 = type metadata accessor for LibraryArtistHeaderView(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v127, 1, 1, v32);
      goto LABEL_8;
    }
  }
  else
  {
    swift_release(v27);
  }
  v33 = a1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
  v34 = swift_beginAccess(a1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist, &v128, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v17 + 16))(v21, v33, v16, v34);
  v35 = type metadata accessor for IndexPath(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
  sub_1008DC548((uint64_t)v15, (uint64_t)v146);
  sub_10004FF60((uint64_t)v15, (uint64_t *)&unk_1011A3D50);
  v36 = v127;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v127, v21, v16);
  v37 = type metadata accessor for LibraryArtistHeaderView(0);
  sub_100064EF0((uint64_t)v146, (uint64_t)&v36[*(int *)(v37 + 20)]);
  v38 = &v36[*(int *)(v37 + 24)];
  LOBYTE(v129[0]) = 0;
  GestureState.init(wrappedValue:)(&v138, v129, &type metadata for Bool);
  v39 = v139;
  v40 = *(_OWORD *)v140;
  *v38 = (_BYTE)v138;
  *((_QWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 1) = v40;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
LABEL_8:
  v41 = type metadata accessor for PlaybackIntentDescriptor(0);
  v42 = swift_allocBox(v41);
  v44 = v43;
  sub_1001748B8((uint64_t)v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v12, 1, v41) != 1)
  {
    sub_10005B6C0((uint64_t)v12, v44, type metadata accessor for PlaybackIntentDescriptor);
    swift_retain(v42);
    v50 = static PlayIntentButtonStack.playShuffle(_:)((uint64_t)sub_1001AA758, v42);
    v52 = v51;
    v54 = v53;
    swift_release(v42);
    v138 = (_BYTE *)v50;
    v139 = v52;
    *(_QWORD *)v140 = v54;
    v55 = sub_1001AA6D0();
    v56 = sub_1001AA714();
    *(_OWORD *)&v140[8] = 0u;
    v141 = 0u;
    v142 = 0u;
    v143 = 0u;
    v144 = 0;
    _ConditionalContent<>.init(storage:)(&v138, &type metadata for PlayIntentButtonStack, &type metadata for StartStationView, v55, v56);
    swift_release(v42);
    v57 = v146[1];
    v58 = (_BYTE *)v146[2];
    v59 = (_BYTE *)v146[3];
    v61 = v146[4];
    v60 = v146[5];
    v62 = v146[6];
    v63 = v146[7];
    v120 = v146[8];
    v121 = (_BYTE *)v146[0];
    v118 = v146[10];
    v119 = v146[9];
    v64 = v147;
    goto LABEL_22;
  }
  sub_10004FF60((uint64_t)v12, &qword_1011A9A10);
  swift_deallocBox(v42);
  v45 = sub_10016ED00();
  v46 = (uint64_t *)(*(_QWORD *)(v45 + 104)
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
  v47 = v46[1];
  if (v47)
  {
    v48 = *v46;
    swift_release(v45);
    v49 = HIBYTE(v47) & 0xF;
    if ((v47 & 0x2000000000000000) == 0)
      v49 = v48 & 0xFFFFFFFFFFFFLL;
    if (v49)
      goto LABEL_19;
  }
  else
  {
    swift_release(v45);
  }
  if ((sub_100175170() & 1) == 0)
  {
LABEL_19:
    v120 = 0;
    v121 = 0;
    v57 = 0;
    v58 = 0;
    v59 = 0;
    v61 = 0;
    v60 = 0;
    v62 = 0;
    v63 = 0;
    v118 = 0;
    v119 = 0;
    v64 = 255;
    goto LABEL_22;
  }
  v65 = a1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
  v66 = swift_beginAccess(a1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist, v145, 0, 0);
  v67 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v17 + 16);
  v68 = v121;
  v69 = v67(v121, v65, v16, v66);
  Artist.catalogID.getter(v69);
  v71 = v70;
  v72 = *(void (**)(_BYTE *, uint64_t))(v17 + 8);
  v72(v68, v16);
  if (v71)
  {
    swift_bridgeObjectRelease(v71);
    v73 = v122;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(72, 1);
    v74._countAndFlagsBits = 0x6973756D20646441;
    v74._object = (void *)0xED00002079622063;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v74);
    v75 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v67)(v21, v65, v16);
    v76 = Artist.name.getter(v75);
    v78 = v77;
    v72(v21, v16);
    v79._countAndFlagsBits = v76;
    v79._object = v78;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v79);
    swift_bridgeObjectRelease(v78);
    v80._countAndFlagsBits = 0xD00000000000003BLL;
    v80._object = (void *)0x8000000100E307A0;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v80);
    v81 = v123;
    v82 = String.LocalizationValue.init(stringInterpolation:)(v73);
    v83 = v124;
    static Locale.current.getter(v82);
    v84 = "Empty message for a store artist in the library, variable is artist name.";
  }
  else
  {
    v85 = v122;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1);
    v86._countAndFlagsBits = 0x6973756D20646441;
    v86._object = (void *)0xED00002079622063;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v86);
    v87 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v67)(v21, v65, v16);
    v88 = Artist.name.getter(v87);
    v90 = v89;
    v72(v21, v16);
    v91._countAndFlagsBits = v88;
    v91._object = v90;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v91);
    swift_bridgeObjectRelease(v90);
    v92._object = (void *)0x8000000100E30730;
    v92._countAndFlagsBits = 0xD000000000000011;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v92);
    v81 = v123;
    v93 = String.LocalizationValue.init(stringInterpolation:)(v85);
    v83 = v124;
    static Locale.current.getter(v93);
    v84 = "Empty message for a local artist in the library, variable is artist name.";
  }
  v94 = String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, 0, v83, v84, 73, 2);
  v96 = v95;
  v97 = v71 != 0;
  v124 = *(_OWORD *)&UIEdgeInsetsZero.top;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v100 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v100 + 16, a1);
  swift_retain(v100);
  static ApplicationCapabilities.shared.getter((uint64_t)v146);
  sub_100065184(v146);
  LOBYTE(v129[0]) = BYTE1(v146[0]);
  State.init(wrappedValue:)(v129, &type metadata for Bool);
  swift_release(v100);
  v129[0] = v94;
  v129[1] = v96;
  v129[2] = v97;
  v130 = v124;
  v131 = bottom;
  v132 = right;
  v133 = sub_1001AA6C8;
  v134 = v100;
  v135 = v138;
  v136 = v139;
  v137 = 1;
  v101 = sub_1001AA6D0();
  v102 = sub_1001AA714();
  _ConditionalContent<>.init(storage:)(v129, &type metadata for PlayIntentButtonStack, &type metadata for StartStationView, v101, v102);
  v57 = v139;
  v58 = *(_BYTE **)v140;
  v59 = *(_BYTE **)&v140[8];
  v61 = *(_QWORD *)&v140[16];
  v62 = *((_QWORD *)&v141 + 1);
  v60 = v141;
  v120 = *((_QWORD *)&v142 + 1);
  v63 = v142;
  v121 = v138;
  v118 = *((_QWORD *)&v143 + 1);
  v119 = v143;
  v64 = v144;
LABEL_22:
  v117 = v64;
  v103 = (uint64_t)v126;
  sub_10004A160((uint64_t)v127, (uint64_t)v126, &qword_1011A3F20);
  v104 = v103;
  v105 = v125;
  sub_10004A160(v104, v125, &qword_1011A3F20);
  v106 = v105 + *(int *)(sub_100007E8C(&qword_1011A3F28) + 48);
  v108 = v120;
  v107 = (uint64_t)v121;
  *(_QWORD *)v106 = v121;
  *(_QWORD *)(v106 + 8) = v57;
  v109 = v57;
  v123 = v58;
  *(_QWORD *)&v124 = v57;
  *(_QWORD *)(v106 + 16) = v58;
  *(_QWORD *)(v106 + 24) = v59;
  v110 = (uint64_t)v58;
  v111 = (uint64_t)v59;
  v122 = v59;
  *(_QWORD *)(v106 + 32) = v61;
  *(_QWORD *)(v106 + 40) = v60;
  *(_QWORD *)(v106 + 48) = v62;
  *(_QWORD *)(v106 + 56) = v63;
  v113 = v118;
  v112 = v119;
  *(_QWORD *)(v106 + 64) = v108;
  *(_QWORD *)(v106 + 72) = v112;
  *(_QWORD *)(v106 + 80) = v113;
  v114 = v117;
  *(_BYTE *)(v106 + 88) = v117;
  sub_1001AA5F0(v107, v109, v110, v111, v61, v60, v62, v63, v108, v112, v113, v114);
  sub_10004FF60((uint64_t)v127, &qword_1011A3F20);
  sub_1001AA65C(v107, v124, (uint64_t)v123, (uint64_t)v122, v61, v60, v62, v63, v108, v112, v113, v114);
  return sub_10004FF60((uint64_t)v126, &qword_1011A3F20);
}

uint64_t sub_1001748B8@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  BOOL v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72[24];
  _OWORD v73[2];
  uint64_t v74;
  _BYTE v75[24];
  char v76[32];

  v70 = a1;
  v65 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v65);
  v67 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v66 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v6);
  v60 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A3890);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v63 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v13);
  v62 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s6AlbumsVMa(0);
  __chkstk_darwin(v15);
  v61 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A3910);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v64 = (uint64_t)&v59 - v26;
  __chkstk_darwin(v25);
  v28 = (char *)&v59 - v27;
  v71 = v4;
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v68 = v3;
  v29((char *)&v59 - v27, 1, 1, v3);
  v69 = v1;
  v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
  v31 = v30 + *(_QWORD *)(*(_QWORD *)v30 + 112);
  v32 = swift_beginAccess(v31, v76, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 48))(v31, 1, v17, v32)
    || ((*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v31, v17),
        v33 = MusicLibrarySectionedResponse.isEmpty.getter(),
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17),
        v33))
  {
    v34 = v69;
    v35 = *(_QWORD *)&v69[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
    v36 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 112);
    v37 = swift_beginAccess(v36, v75, 0, 0);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 48))(v36, 1, v10, v37);
    v39 = v70;
    v40 = v68;
    if (v38)
      goto LABEL_8;
    v41 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v63, v36, v10);
    v42 = MusicLibrarySectionedResponse.isEmpty.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v41, v10);
    if (v42)
      goto LABEL_8;
    v43 = v35 + *(_QWORD *)(*(_QWORD *)v35 + 96);
    swift_beginAccess(v43, v72, 0, 0);
    v44 = v59;
    sub_10005B704(v43, v59, _s11MusicVideosVMa);
    v45 = type metadata accessor for MusicVideo(0);
    v46 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v60, 1, 1, v45);
    v47 = v64;
    sub_10075E1D4(v46, v64);
    sub_10004FF60(v46, &qword_1011B59B0);
    sub_10005B748(v44, _s11MusicVideosVMa);
  }
  else
  {
    v48 = v30 + *(_QWORD *)(*(_QWORD *)v30 + 96);
    swift_beginAccess(v48, v75, 0, 0);
    v49 = v61;
    sub_10005B704(v48, v61, _s6AlbumsVMa);
    v50 = type metadata accessor for Album(0);
    v51 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v62, 1, 1, v50);
    v47 = v64;
    sub_100233F64(v51, v64);
    sub_10004FF60(v51, &qword_1011A8FA0);
    sub_10005B748(v49, _s6AlbumsVMa);
    v34 = v69;
    v39 = v70;
    v40 = v68;
  }
  sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A3D60);
  sub_100065228(v47, (uint64_t)v28, (uint64_t *)&unk_1011A3D60);
LABEL_8:
  sub_10004A160((uint64_t)v28, (uint64_t)v24, (uint64_t *)&unk_1011A3D60);
  v52 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v24, 1, v40) == 1)
  {
    sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A3D60);
    sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011A3D60);
    v53 = type metadata accessor for PlaybackIntentDescriptor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v39, 1, 1, v53);
  }
  else
  {
    v55 = v66;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v66, v24, v40);
    v56 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v67, v55, v40);
    swift_storeEnumTagMultiPayload(v56, v65, 1);
    v74 = 0;
    memset(v73, 0, sizeof(v73));
    v57 = v34;
    PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v56, (uint64_t)v73, 3, 0, 0, 1, 0, 1, v39, (objc_class *)v34);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v40);
    sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011A3D60);
    v58 = type metadata accessor for PlaybackIntentDescriptor(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v39, 0, 1, v58);
  }
}

uint64_t sub_100174F30(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _BYTE v29[24];

  v3 = a1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v13 = &v29[-v12 - 8];
  v14 = swift_projectBox(a2);
  swift_beginAccess(v14, v29, 33, 0);
  v15 = (void *)PlaybackIntentDescriptor.intent.getter();
  objc_msgSend(v15, "setShuffleMode:", v3 == 1);

  v16 = (void *)PlaybackIntentDescriptor.intent.getter();
  objc_msgSend(v16, "setRepeatMode:", 0);
  *(_BYTE *)(v14 + *(int *)(v7 + 32)) = v3 == 2;
  swift_endAccess(v29);

  swift_beginAccess(v14, v29, 0, 0);
  sub_10005B704(v14, (uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  sub_10005B704((uint64_t)v13, (uint64_t)v11, type metadata accessor for PlaybackIntentDescriptor);
  type metadata accessor for MainActor(0);
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v8 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_1010B4858, v23 + 16, v20 | 7);
  *(_QWORD *)(v24 + 16) = v19;
  *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v11, v24 + v21, type metadata accessor for PlaybackIntentDescriptor);
  *(_QWORD *)(v24 + v22) = 0;
  v25 = (_QWORD *)(v24 + v23);
  *v25 = 0;
  v25[1] = 0;
  v26 = sub_100166D14((uint64_t)v6, (uint64_t)&unk_1011A3F40, v24);
  swift_release(v26);
  return sub_10005B748((uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
}

uint64_t sub_100175170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController);
  v3 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  if (!v3)
    return 0;
  v4 = swift_retain(*(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)));
  v5 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v4);
  swift_release(v3);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController);
  v7 = *(_QWORD *)(*(_QWORD *)v6 + 144);
  v8 = *(_QWORD *)(v6 + v7);
  if (!v8)
    return 0;
  v9 = swift_retain(*(_QWORD *)(v6 + v7));
  v10 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v9);
  swift_release(v8);
  return v10 & 1;
}

char *sub_10017520C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *result;
  char *v38;
  __n128 v39;
  uint64_t (*v40)(char *, char *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  objc_class *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  void *v89;
  char v90[24];
  char v91[32];

  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v77);
  v78 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor(0);
  v79 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v80 = v8;
  v81 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v82 = (uint64_t)&v70 - v9;
  v10 = (_QWORD *)type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v11 = *(v10 - 1);
  v85 = v10;
  v86 = v11;
  __chkstk_darwin(v10);
  v84 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Station(0);
  v73 = *(_QWORD *)(v74 - 8);
  v13 = __chkstk_darwin(v74);
  v72 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v71 = (char *)&v70 - v15;
  v16 = sub_100007E8C(&qword_1011A3F48);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v70 - v20;
  v22 = type metadata accessor for Artist(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v70 - v31;
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v70 - v34;
  __chkstk_darwin(v33);
  v83 = (uint64_t)&v70 - v36;
  a1 += 16;
  swift_beginAccess(a1, v91, 0, 0);
  result = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (!result)
    return result;
  v76 = v4;
  v75 = result;
  v38 = &result[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
  v39 = swift_beginAccess(&result[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist], v90, 0, 0);
  v40 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v23 + 16);
  v41 = v40(v25, v38, v22, v39);
  Artist.defaultPlayableItem.getter(v41);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v42 = type metadata accessor for Artist.PlayableItem(0);
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v21, 1, v42) == 1)
    goto LABEL_6;
  sub_10004A160((uint64_t)v21, (uint64_t)v19, &qword_1011A3F48);
  if ((*(unsigned int (**)(char *, uint64_t))(v43 + 88))(v19, v42) != enum case for Artist.PlayableItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v42);
LABEL_6:
    *((_QWORD *)&v88 + 1) = v22;
    v89 = &protocol witness table for Artist;
    v51 = sub_100049F68(&v87);
    ((void (*)(_QWORD *, char *, uint64_t))v40)(v51, v38, v22);
    MusicPlaybackIntentDescriptor.init(stationSeed:)(&v87);
    v50 = (uint64_t)v76;
    v49 = v85;
    v48 = v86;
    (*(void (**)(char *, _QWORD, uint64_t, id))(v86 + 56))(v32, 0, 1, v85);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v43 + 96))(v19, v42);
  v44 = v73;
  v45 = v71;
  v46 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v71, v19, v74);
  v47 = v72;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v72, v45, v46);
  MusicPlaybackIntentDescriptor.init(station:)(v47);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  v49 = v85;
  v48 = v86;
  (*(void (**)(char *, _QWORD, uint64_t, id))(v86 + 56))(v35, 0, 1, v85);
  v32 = v35;
  v50 = (uint64_t)v76;
LABEL_7:
  v52 = (uint64_t)v32;
  v53 = v83;
  sub_100065228(v52, v83, (uint64_t *)&unk_1011A3D60);
  sub_10004FF60((uint64_t)v21, &qword_1011A3F48);
  sub_10004A160(v53, (uint64_t)v29, (uint64_t *)&unk_1011A3D60);
  if ((*(unsigned int (**)(char *, uint64_t, id))(v48 + 48))(v29, 1, v49) == 1)
  {
    sub_10004FF60(v53, (uint64_t *)&unk_1011A3D60);

  }
  else
  {
    v54 = v84;
    (*(void (**)(char *, char *, id))(v48 + 32))(v84, v29, v49);
    v55 = (uint64_t)v78;
    (*(void (**)(char *, char *, id))(v48 + 16))(v78, v54, v49);
    swift_storeEnumTagMultiPayload(v55, v77, 1);
    v89 = 0;
    v87 = 0u;
    v88 = 0u;
    v56 = (objc_class *)v75;
    v85 = v75;
    v57 = v82;
    PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v55, (uint64_t)&v87, 3, 0, 0, 1, 0, 1, v82, v56);
    v58 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v50, 1, 1, v58);
    v59 = v81;
    sub_10005B704(v57, v81, type metadata accessor for PlaybackIntentDescriptor);
    type metadata accessor for MainActor(0);
    v61 = static MainActor.shared.getter(v60);
    v62 = *(unsigned __int8 *)(v79 + 80);
    v63 = (v62 + 32) & ~v62;
    v64 = (v80 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    v66 = (char *)v53;
    v67 = swift_allocObject(&unk_1010B4880, v65 + 16, v62 | 7);
    *(_QWORD *)(v67 + 16) = v61;
    *(_QWORD *)(v67 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v59, v67 + v63, type metadata accessor for PlaybackIntentDescriptor);
    *(_QWORD *)(v67 + v64) = 0;
    v68 = (_QWORD *)(v67 + v65);
    *v68 = 0;
    v68[1] = 0;
    v69 = sub_100166D14(v50, (uint64_t)&unk_1011A3F50, v67);

    swift_release(v69);
    sub_10005B748(v57, type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(char *, id))(v86 + 8))(v84, v49);
    v29 = v66;
  }
  return (char *)sub_10004FF60((uint64_t)v29, (uint64_t *)&unk_1011A3D60);
}

void sub_100175914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t Strong;
  char *v25;
  uint64_t v26;
  __n128 v27;
  BOOL v28;
  uint64_t v29;
  __n128 v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _BYTE v60[24];
  uint64_t v61;
  _QWORD v62[5];
  _BYTE v63[24];
  _BYTE v64[32];

  v56 = a4;
  v7 = sub_100007E8C(&qword_1011A3F58);
  v58 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v59 = (char *)&v53 - v11;
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v55 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v54 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A3890);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A3910);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  swift_beginAccess(a5, v64, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    v25 = (char *)Strong;
    v57 = a1;
    v26 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
        + *(_QWORD *)(**(_QWORD **)(Strong
                                  + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
                    + 112);
    v27 = swift_beginAccess(v26, v63, 0, 0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v21 + 48))(v26, 1, v20, v27))
      goto LABEL_6;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v26, v20);
    v28 = MusicLibrarySectionedResponse.isEmpty.getter();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    if (v28
      || (v29 = *(_QWORD *)&v25[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
              + *(_QWORD *)(**(_QWORD **)&v25[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                          + 112),
          v30 = swift_beginAccess(v29, v60, 0, 0),
          (*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v17 + 48))(v29, 1, v16, v30))
      || ((*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v29, v16),
          v31 = MusicLibrarySectionedResponse.isEmpty.getter(),
          v32 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16),
          v31))
    {
LABEL_6:
      v33 = UIHostingConfiguration<>.init(content:)(UIScreen.Dimensions.size.getter, 0, &type metadata for EmptyView, &protocol witness table for EmptyView);
      v34 = static Edge.Set.all.getter(v33);
      v35 = v59;
      UIHostingConfiguration.margins(_:_:)(v34, v7, 0.0);
      v36 = *(uint64_t (**)(char *, uint64_t))(v58 + 8);
      v37 = v36(v10, v7);
      v38 = static Color.clear.getter(v37);
      v61 = v38;
      v62[3] = sub_100007E8C(&qword_1011A3F60);
      v62[4] = sub_100049F28(&qword_1011A3F68, &qword_1011A3F60, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_100049F68(v62);
      UIHostingConfiguration.background<A>(_:)(&v61, v7, &type metadata for Color, &protocol witness table for Color);
      v39 = swift_release(v38);
      ((void (*)(char *, uint64_t, __n128))v36)(v35, v7, v39);
    }
    else
    {
      v40 = IndexPath.section.getter(v32);
      if (v40 == 1)
      {
        v47 = v54;
        v48 = String.LocalizationValue.init(stringLiteral:)(0x695620636973754DLL, 0xEC000000736F6564);
        v49 = v55;
        static Locale.current.getter(v48);
        v50 = String.init(localized:table:bundle:locale:comment:)(v47, 0, 0, 0, v49, 0, 0, 256);
        v52 = v51;
        sub_10061170C(v50, v51, v62);
        swift_bridgeObjectRelease(v52);
      }
      else
      {
        if (v40)
          goto LABEL_8;
        v41 = v54;
        v42 = String.LocalizationValue.init(stringLiteral:)(0x736D75626C41, 0xE600000000000000);
        v43 = v55;
        static Locale.current.getter(v42);
        v44 = String.init(localized:table:bundle:locale:comment:)(v41, 0, 0, 0, v43, 0, 0, 256);
        v46 = v45;
        sub_10061170C(v44, v45, v62);
        swift_bridgeObjectRelease(v46);
      }
    }
    UICollectionViewCell.contentConfiguration.setter(v62);
LABEL_8:

  }
}

uint64_t sub_100175DA4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[48];

  v50 = a1;
  v53 = a2;
  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  v3 = __chkstk_darwin(v2);
  v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v46 - v5;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v15;
  v16 = (int *)_s8GridCellVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Album(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v19, (uint64_t)&protocol witness table for Album, (char *)v12);
  v20 = (char *)sub_10016ED98();
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];

  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v21, 0, 0, 1, 0x3FF0000000000000, 0, 2, (uint64_t)v54);
  v22 = Corner.medium.unsafeMutableAddressor();
  v23 = *v22;
  v24 = v22[1];
  v25 = *((_BYTE *)v22 + 16);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 10, v26);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)(v12, (uint64_t)v9, 0, 1, (uint64_t)v54, v23, v24, v25, (uint64_t)v15);
  v27 = sub_10031E71C();
  v46 = v28;
  v47 = v27;
  v29 = sub_100176180();
  v31 = v30;
  v32 = v6;
  Album.favoriteStatus.getter();
  v33 = v51;
  v34 = v52;
  v35 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v49, enum case for MusicFavoriteStatus.favorited(_:), v52);
  LOBYTE(v12) = static MusicFavoriteStatus.== infix(_:_:)(v32, v35);
  v36 = *(void (**)(char *, uint64_t))(v33 + 8);
  v36(v35, v34);
  v37 = ((uint64_t (*)(char *, uint64_t))v36)(v32, v34);
  Album.contentRating.getter(v37);
  sub_10005B6C0((uint64_t)v48, (uint64_t)v18, type metadata accessor for ArtworkImage.Info);
  *(_QWORD *)&v18[v16[5]] = 0x3FF0000000000000;
  v38 = &v18[v16[6]];
  v39 = v46;
  *(_QWORD *)v38 = v47;
  *((_QWORD *)v38 + 1) = v39;
  v40 = (uint64_t *)&v18[v16[7]];
  *v40 = v29;
  v40[1] = v31;
  v18[v16[8]] = v12 & 1;
  v41 = &v18[v16[10]];
  *(_QWORD *)v41 = swift_getKeyPath(&unk_100EACEC8);
  v42 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v41, v42, 0);
  v43 = *(_QWORD *)(*(_QWORD *)(v50 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController)
                  + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
  v44 = swift_retain(v43);
  View.artworkCaching(owner:)(v44);
  swift_release(v43);
  return sub_10005B748((uint64_t)v18, _s8GridCellVMa);
}

uint64_t sub_100176180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;

  v0 = type metadata accessor for NumberFormatStyleConfiguration.Grouping(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A3E28);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)v24 - v13;
  v15 = Album.releaseYear.getter(v12);
  v17 = 0;
  if ((v18 & 1) == 0)
  {
    v24[1] = v15;
    static Locale.autoupdatingCurrent.getter(v16);
    v19 = sub_1001AA49C();
    v20 = IntegerFormatStyle.init(locale:)(v6);
    static NumberFormatStyleConfiguration.Grouping.never.getter(v20);
    IntegerFormatStyle.grouping(_:)(v3, v7);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v11, v7);
    v22 = sub_100049F28(&qword_1011A3E38, &qword_1011A3E28, (uint64_t)&protocol conformance descriptor for IntegerFormatStyle<A>);
    BinaryInteger.formatted<A>(_:)(&v25, v14, &type metadata for Int, v7, v19, v22);
    v21(v14, v7);
    return v25;
  }
  return v17;
}

void sub_100176354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  uint64_t (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  _BYTE v30[24];

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3E50);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v29 - v13;
  a4 += 16;
  swift_beginAccess(a4, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v16 = (void *)Strong;
    v17 = __chkstk_darwin(Strong);
    v29[-4] = a3;
    v29[-3] = v17;
    v29[-2] = a5;
    v18 = sub_100007E8C((uint64_t *)&unk_1011BEB30);
    v19 = _s8ListCellVMa(255);
    v20 = sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
    v29[0] = v19;
    v29[1] = v20;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v29, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v22 = UIHostingConfiguration<>.init(content:)(sub_1001AA50C, &v29[-6], v18, OpaqueTypeConformance2);
    v23 = static Edge.Set.horizontal.getter(v22);
    v24 = (char *)sub_10016ED98();
    v25 = *(double *)&v24[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v23, v8, v25);
    v26 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    v27 = v26(v12, v8);
    v28 = static Edge.Set.vertical.getter(v27);
    v29[3] = v8;
    v29[4] = sub_100049F28((unint64_t *)&unk_1011AD850, (uint64_t *)&unk_1011A3E50, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v29);
    UIHostingConfiguration.margins(_:_:)(v28, v8, 8.0);
    v26(v14, v8);
    UICollectionViewCell.contentConfiguration.setter(v29);

  }
}

uint64_t sub_10017657C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  NSString *v35;
  __n128 v36;
  int v37;
  char *v38;
  NSString *v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[48];

  v55 = a1;
  v56 = a2;
  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v50 - v6;
  v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v14);
  v57 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)_s8ListCellVMa(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Album(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v19, (uint64_t)&protocol witness table for Album, v13);
  if (qword_10119BA18 != -1)
    swift_once(&qword_10119BA18, sub_10016DADC);
  ArtworkImage.Size.init(cgSize:)(xmmword_1011A36B0, *((uint64_t *)&xmmword_1011A36B0 + 1), 0, (uint64_t)v58);
  v20 = Corner.small.unsafeMutableAddressor();
  v21 = *v20;
  v22 = v20[1];
  v23 = *((_BYTE *)v20 + 16);
  v24 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 10, v24);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v13, (uint64_t)v10, 0, 1, (uint64_t)v58, v21, v22, v23, v57);
  v25 = sub_10031E71C();
  v51 = v26;
  v52 = v25;
  v27 = sub_100176180();
  v29 = v28;
  Album.favoriteStatus.getter();
  v30 = v53;
  v31 = v54;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v5, enum case for MusicFavoriteStatus.favorited(_:), v54);
  v32 = static MusicFavoriteStatus.== infix(_:_:)(v7, v5);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v5, v31);
  v34 = ((uint64_t (*)(char *, uint64_t))v33)(v7, v31);
  Album.contentRating.getter(v34);
  v35 = UIFontTextStyleBody;
  v37 = static HierarchicalShapeStyle.primary.getter(v36);
  v38 = &v18[v16[9]];
  *((_QWORD *)v38 + 4) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v38 + 5) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v38 + 2) = v37;
  v39 = UIFontTextStyleSubheadline;
  v40 = static HierarchicalShapeStyle.secondary.getter(v39);
  *((_QWORD *)v38 + 10) = &type metadata for HierarchicalShapeStyle;
  *((_QWORD *)v38 + 11) = &protocol witness table for HierarchicalShapeStyle;
  *((_DWORD *)v38 + 14) = v40;
  *(_QWORD *)v38 = v35;
  *((_QWORD *)v38 + 6) = v39;
  v38[96] = 0;
  sub_10005B6C0(v57, (uint64_t)v18, type metadata accessor for ArtworkImage.Info);
  v41 = &v18[v16[5]];
  v42 = v51;
  *(_QWORD *)v41 = v52;
  *((_QWORD *)v41 + 1) = v42;
  v43 = (uint64_t *)&v18[v16[6]];
  *v43 = v27;
  v43[1] = v29;
  v18[v16[7]] = v32 & 1;
  v44 = &v18[v16[10]];
  *(_QWORD *)v44 = 0;
  *((_QWORD *)v44 + 1) = 0;
  v45 = &v18[v16[11]];
  *(_QWORD *)v45 = swift_getKeyPath(&unk_100EACEC8);
  v46 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v45, v46, 0);
  v47 = *(_QWORD *)(*(_QWORD *)(v55 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController)
                  + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E60, _s8ListCellVMa, (uint64_t)&unk_100EC564C);
  v48 = swift_retain(v47);
  View.artworkCaching(owner:)(v48);
  swift_release(v47);
  return sub_10005B748((uint64_t)v18, _s8ListCellVMa);
}

void sub_100176998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  _BYTE v22[24];

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3DF0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = __chkstk_darwin(Strong);
    v21[-2] = a3;
    v21[-1] = v14;
    v15 = sub_100007E8C(&qword_1011C6B50);
    v16 = _s8GridCellVMa(255);
    v17 = sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
    v21[0] = v16;
    v21[1] = v17;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v21, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v19 = UIHostingConfiguration<>.init(content:)(a5, &v21[-4], v15, OpaqueTypeConformance2);
    v20 = static Edge.Set.all.getter(v19);
    v21[3] = v8;
    v21[4] = sub_100049F28((unint64_t *)&unk_1011AD800, (uint64_t *)&unk_1011A3DF0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v21);
    UIHostingConfiguration.margins(_:_:)(v20, v8, 0.0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    UICollectionViewCell.contentConfiguration.setter(v21);

  }
}

uint64_t sub_100176B44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char *v66;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  _BYTE v88[56];

  v85 = a2;
  v3 = type metadata accessor for MusicFavoriteStatus(0);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  v4 = __chkstk_darwin(v3);
  v77 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v76 = (char *)&v68 - v6;
  v73 = type metadata accessor for NumberFormatStyleConfiguration.Grouping(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v71 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v69 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A3E28);
  v70 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v68 = (char *)&v68 - v14;
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)_s8GridCellVMa(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011C6B50);
  v80 = *(_QWORD *)(v27 - 8);
  v81 = v27;
  __chkstk_darwin(v27);
  v79 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for MusicVideo(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v29, (uint64_t)&protocol witness table for MusicVideo, v20);
  v30 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 4, 10, v30);
  v84 = a1;
  v31 = (char *)sub_10016ED98();
  v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 48];

  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v32, 0, 0, 1, 0x3FFC71C71C71C71CLL, 0, 2, (uint64_t)v88);
  v33 = Corner.medium.unsafeMutableAddressor();
  v34 = *v33;
  v35 = v33[1];
  v36 = *((_BYTE *)v33 + 16);
  v78 = v23;
  v37 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v20, (uint64_t)v17, 0, 1, (uint64_t)v88, v34, v35, v36, (uint64_t)v23);
  v38 = MusicVideo.title.getter(v37);
  v74 = v39;
  v75 = v38;
  v40 = MusicVideo.releaseYear.getter();
  v42 = 0;
  v43 = 0;
  if ((v44 & 1) == 0)
  {
    v86 = v40;
    v45 = v69;
    static Locale.autoupdatingCurrent.getter(v41);
    v46 = sub_1001AA49C();
    v47 = IntegerFormatStyle.init(locale:)(v45);
    v48 = v71;
    static NumberFormatStyleConfiguration.Grouping.never.getter(v47);
    v49 = v68;
    IntegerFormatStyle.grouping(_:)(v48, v10);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v73);
    v50 = *(void (**)(char *, uint64_t))(v70 + 8);
    v50(v13, v10);
    v51 = sub_100049F28(&qword_1011A3E38, &qword_1011A3E28, (uint64_t)&protocol conformance descriptor for IntegerFormatStyle<A>);
    BinaryInteger.formatted<A>(_:)(v87, v49, &type metadata for Int, v10, v46, v51);
    v40 = ((uint64_t (*)(char *, uint64_t))v50)(v49, v10);
    v42 = v87[0];
    v43 = v87[1];
  }
  v52 = v76;
  MusicVideo.favoriteStatus.getter(v40);
  v53 = v82;
  v54 = v83;
  v55 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v77, enum case for MusicFavoriteStatus.favorited(_:), v83);
  v56 = static MusicFavoriteStatus.== infix(_:_:)(v52, v55);
  v57 = *(void (**)(char *, uint64_t))(v53 + 8);
  v57(v55, v54);
  v58 = ((uint64_t (*)(char *, uint64_t))v57)(v52, v54);
  MusicVideo.contentRating.getter(v58);
  sub_10005B6C0((uint64_t)v78, (uint64_t)v26, type metadata accessor for ArtworkImage.Info);
  *(_QWORD *)&v26[v24[5]] = 0x3FFC71C71C71C71CLL;
  v59 = &v26[v24[6]];
  v60 = v74;
  *(_QWORD *)v59 = v75;
  *((_QWORD *)v59 + 1) = v60;
  v61 = &v26[v24[7]];
  *(_QWORD *)v61 = v42;
  *((_QWORD *)v61 + 1) = v43;
  v26[v24[8]] = v56 & 1;
  v62 = &v26[v24[10]];
  *(_QWORD *)v62 = swift_getKeyPath(&unk_100EACEC8);
  v63 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v62, v63, 0);
  v64 = *(_QWORD *)(*(_QWORD *)(v84 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController)
                  + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100048748((unint64_t *)&unk_1011A3E00, _s8GridCellVMa, (uint64_t)&unk_100EC569C);
  v65 = swift_retain(v64);
  v66 = v79;
  View.artworkCaching(owner:)(v65);
  swift_release(v64);
  sub_10005B748((uint64_t)v26, _s8GridCellVMa);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v80 + 32))(v85, v66, v81);
}

void sub_100177164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  double v32;
  _QWORD v33[2];
  _QWORD v34[5];
  _BYTE v35[24];

  v9 = sub_100007E8C(&qword_1011A3E80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v33 - v14;
  a4 += 16;
  swift_beginAccess(a4, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v17 = (void *)Strong;
    v33[1] = a1;
    v18 = __chkstk_darwin(Strong);
    v33[-4] = a3;
    v33[-3] = v18;
    v33[-2] = a5;
    v19 = sub_100007E8C(&qword_1011A3E88);
    v20 = sub_100044B54(&qword_1011A3E90);
    v21 = sub_100049F28(&qword_1011A3E98, &qword_1011A3E90, (uint64_t)&unk_100EC55AC);
    v34[0] = v20;
    v34[1] = v21;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v34, &opaque type descriptor for <<opaque return type of View.artworkCaching(owner:)>>, 1);
    v23 = UIHostingConfiguration<>.init(content:)(sub_1001AA548, &v33[-6], v19, OpaqueTypeConformance2);
    v24 = static Edge.Set.horizontal.getter(v23);
    v25 = (char *)sub_10016ED98();
    v26 = *(double *)&v25[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

    UIHostingConfiguration.margins(_:_:)(v24, v9, v26);
    v27 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v28 = v27(v13, v9);
    v29 = static Edge.Set.vertical.getter(v28);
    v30 = objc_msgSend(v17, "traitCollection");
    v31 = objc_msgSend(v30, "preferredContentSizeCategory");

    LOBYTE(v30) = UIContentSizeCategory.isAccessibilityCategory.getter(v31);
    if ((v30 & 1) != 0)
      v32 = 14.0;
    else
      v32 = 8.0;
    v34[3] = v9;
    v34[4] = sub_100049F28((unint64_t *)&unk_1011A3EA0, &qword_1011A3E80, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    sub_100049F68(v34);
    UIHostingConfiguration.margins(_:_:)(v29, v9, v32);
    v27(v15, v9);
    UICollectionViewCell.contentConfiguration.setter(v34);

  }
}

uint64_t sub_1001773EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  char *v89;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[2];
  _BYTE v113[56];

  v109 = a2;
  v110 = a3;
  v4 = type metadata accessor for MusicFavoriteStatus(0);
  v104 = *(_QWORD *)(v4 - 8);
  v105 = v4;
  v5 = __chkstk_darwin(v4);
  v103 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v102 = (char *)&v91 - v7;
  v97 = type metadata accessor for NumberFormatStyleConfiguration.Grouping(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v91 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A3E28);
  v93 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v92 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v94 = (char *)&v91 - v14;
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v18);
  v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ArtworkImage.Info(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)sub_100007E8C(&qword_1011A3E90);
  __chkstk_darwin(v24);
  v26 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011A3E88);
  v107 = *(_QWORD *)(v27 - 8);
  v108 = v27;
  __chkstk_darwin(v27);
  v106 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for MusicVideo(0);
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v100, (uint64_t)&protocol witness table for MusicVideo, v20);
  if (qword_10119BA20 != -1)
    swift_once(&qword_10119BA20, sub_10016DAF4);
  ArtworkImage.Size.init(cgSize:)(xmmword_1011A36C0, *((uint64_t *)&xmmword_1011A36C0 + 1), 0, (uint64_t)v113);
  v29 = Corner.small.unsafeMutableAddressor();
  v31 = *v29;
  v30 = v29[1];
  v32 = *((_BYTE *)v29 + 16);
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 10, v33);
  v101 = v23;
  v34 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v20, (uint64_t)v17, 0, 1, (uint64_t)v113, v31, v30, v32, (uint64_t)v23);
  v99 = MusicVideo.title.getter(v34);
  v98 = v35;
  v36 = MusicVideo.releaseYear.getter();
  v38 = 0;
  v39 = 0;
  if ((v40 & 1) == 0)
  {
    v111 = v36;
    v41 = v91;
    static Locale.autoupdatingCurrent.getter(v37);
    v42 = sub_1001AA49C();
    v43 = v92;
    v44 = IntegerFormatStyle.init(locale:)(v41);
    v45 = v95;
    static NumberFormatStyleConfiguration.Grouping.never.getter(v44);
    v46 = v94;
    IntegerFormatStyle.grouping(_:)(v45, v11);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v45, v97);
    v47 = *(void (**)(char *, uint64_t))(v93 + 8);
    v47(v43, v11);
    v48 = sub_100049F28(&qword_1011A3E38, &qword_1011A3E28, (uint64_t)&protocol conformance descriptor for IntegerFormatStyle<A>);
    BinaryInteger.formatted<A>(_:)(v112, v46, &type metadata for Int, v11, v42, v48);
    v36 = ((uint64_t (*)(char *, uint64_t))v47)(v46, v11);
    v38 = v112[0];
    v39 = v112[1];
  }
  v97 = MusicVideo.albumTitle.getter(v36);
  v96 = v49;
  v50 = MusicVideo.duration.getter();
  v52 = *(double *)&v50;
  if ((v51 & 1) != 0)
    v52 = 0.0;
  v95 = (char *)static Duration.seconds(_:)(v50, v51, v52);
  v94 = v53;
  v54 = v102;
  MusicVideo.favoriteStatus.getter(v95);
  v56 = v103;
  v55 = v104;
  v57 = v105;
  (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v103, enum case for MusicFavoriteStatus.favorited(_:), v105);
  v58 = static MusicFavoriteStatus.== infix(_:_:)(v54, v56);
  v59 = *(void (**)(char *, uint64_t))(v55 + 8);
  v59(v56, v57);
  v60 = ((uint64_t (*)(char *, uint64_t))v59)(v54, v57);
  MusicVideo.contentRating.getter(v60);
  v61 = v109;
  v62 = sub_1005262B4(a1);
  if (qword_10119B8B0 != -1)
    swift_once(&qword_10119B8B0, sub_1000E948C);
  v63 = sub_100048748((unint64_t *)&unk_1011B8C10, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
  v64 = Player.state<A>(for:)(a1, v100, v63);
  v65 = (char *)sub_10016ED98();
  v66 = *(_QWORD *)&v65[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 32];

  sub_10005B6C0((uint64_t)v101, (uint64_t)v26, type metadata accessor for ArtworkImage.Info);
  v67 = (uint64_t *)&v26[v24[11]];
  v68 = v98;
  *v67 = v99;
  v67[1] = v68;
  v69 = &v26[v24[12]];
  *(_QWORD *)v69 = v38;
  *((_QWORD *)v69 + 1) = v39;
  v70 = (uint64_t *)&v26[v24[13]];
  v71 = v96;
  *v70 = v97;
  v70[1] = v71;
  v72 = &v26[v24[14]];
  v73 = v94;
  *(_QWORD *)v72 = v95;
  *((_QWORD *)v72 + 1) = v73;
  v26[v24[15]] = v58 & 1;
  v74 = &v26[v24[17]];
  v75 = sub_100007E8C((uint64_t *)&unk_1011A3EB0);
  v76 = sub_100049F28((unint64_t *)&unk_1011B8C20, (uint64_t *)&unk_1011A3EB0, (uint64_t)&protocol conformance descriptor for MusicLibrary.ItemState<A>);
  *(_QWORD *)v74 = ObservedObject.init(wrappedValue:)(v62, v75, v76);
  *((_QWORD *)v74 + 1) = v77;
  v78 = &v26[v24[18]];
  v79 = sub_100007E8C((uint64_t *)&unk_1011A3EC0);
  v80 = sub_100049F28((unint64_t *)&unk_1011B8C30, (uint64_t *)&unk_1011A3EC0, (uint64_t)&protocol conformance descriptor for MusicItemState<A>);
  *(_QWORD *)v78 = ObservedObject.init(wrappedValue:)(v64, v79, v80);
  *((_QWORD *)v78 + 1) = v81;
  *(_QWORD *)&v26[v24[19]] = 0;
  v82 = &v26[v24[20]];
  *(_QWORD *)v82 = 0;
  *((_QWORD *)v82 + 1) = 0;
  *(_QWORD *)&v26[v24[21]] = v66;
  v83 = &v26[v24[22]];
  *(_QWORD *)v83 = swift_getKeyPath(&unk_100EACEC8);
  v84 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v83, v84, 0);
  v85 = &v26[v24[23]];
  *(_QWORD *)v85 = swift_getKeyPath(&unk_100EACEF8);
  v86 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  swift_storeEnumTagMultiPayload(v85, v86, 0);
  v87 = *(_QWORD *)(*(_QWORD *)(v61 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController)
                  + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
  sub_100048748((unint64_t *)&qword_1011A3E20, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkPrefetchingController.CacheReference, (uint64_t)&unk_100EAE5B0);
  sub_100049F28(&qword_1011A3E98, &qword_1011A3E90, (uint64_t)&unk_100EC55AC);
  v88 = swift_retain(v87);
  v89 = v106;
  View.artworkCaching(owner:)(v88);
  swift_release(v87);
  sub_10004FF60((uint64_t)v26, &qword_1011A3E90);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v107 + 32))(v110, v89, v108);
}

void sub_100177C0C(int a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  BOOL v22;
  uint64_t v23;
  __n128 v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  char v33;
  uint64_t v34;
  unsigned __int8 *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  char v54[24];
  char v55[24];
  char v56[24];

  v2 = v1;
  v53 = a1;
  v3 = a1 & 1;
  v4 = type metadata accessor for MusicFavoriteStatus(0);
  v52 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v50 = (char *)&v47 - v7;
  v8 = type metadata accessor for Artist(0);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A3890);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A3910);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent] == v3)
    return;
  v47 = v4;
  objc_msgSend(v2, "setNeedsUpdateContentUnavailableConfiguration");
  v19 = sub_10016ED00();
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
      + *(_QWORD *)(**(_QWORD **)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
                  + 112);
  v21 = swift_beginAccess(v20, v56, 0, 0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 48))(v20, 1, v15, v21))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v20, v15);
    v22 = MusicLibrarySectionedResponse.isEmpty.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (!v22)
      goto LABEL_15;
  }
  v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
      + *(_QWORD *)(**(_QWORD **)&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                  + 112);
  v24 = swift_beginAccess(v23, v55, 0, 0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48))(v23, 1, v11, v24))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v23, v11);
    v25 = MusicLibrarySectionedResponse.isEmpty.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (!v25)
    {
LABEL_15:
      v45 = *(_BYTE *)(v19 + 48);
      *(_BYTE *)(v19 + 48) = 1;
      v33 = v53;
      if ((v45 & 1) != 0)
        goto LABEL_11;
LABEL_10:
      sub_100409F58();
      goto LABEL_11;
    }
  }
  v26 = sub_10016ED00();
  v27 = (uint64_t *)(*(_QWORD *)(v26 + 104)
                  + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
  v28 = v27[1];
  if (v28)
  {
    v29 = *v27;
    swift_release(v26);
    v30 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0)
      v30 = v29 & 0xFFFFFFFFFFFFLL;
    v31 = v30 != 0;
    v32 = *(unsigned __int8 *)(v19 + 48);
    *(_BYTE *)(v19 + 48) = v31;
    v33 = v53;
    if (v32 == v31)
      goto LABEL_11;
    goto LABEL_10;
  }
  swift_release(v26);
  v46 = *(_BYTE *)(v19 + 48);
  *(_BYTE *)(v19 + 48) = 0;
  v33 = v53;
  if ((v46 & 1) != 0)
    goto LABEL_10;
LABEL_11:
  swift_release(v19);
  v34 = v47;
  if ((v33 & 1) != 0)
  {
    v35 = &v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
    v36 = swift_beginAccess(&v2[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist], v54, 0, 0);
    v38 = v48;
    v37 = v49;
    v39 = (*(uint64_t (**)(char *, unsigned __int8 *, uint64_t, __n128))(v48 + 16))(v10, v35, v49, v36);
    v40 = v50;
    Artist.favoriteStatus.getter(v39);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v37);
    v42 = v51;
    v41 = v52;
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for MusicFavoriteStatus.favorited(_:), v34);
    v43 = sub_100048748(&qword_1011A4008, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    LOBYTE(v35) = dispatch thunk of static Equatable.== infix(_:_:)(v40, v42, v34, v43);
    v44 = *(void (**)(char *, uint64_t))(v41 + 8);
    v44(v42, v34);
    v44(v40, v34);
    if ((v35 & 1) == 0)
      sub_100178008();
  }
}

void sub_100178008()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent) & 1) == 0)
  {
    v1 = sub_10016ED00();
    v2 = (uint64_t *)(*(_QWORD *)(v1 + 104)
                   + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
    v3 = v2[1];
    if (!v3)
    {
      *(_QWORD *)&v5 = swift_release(v1).n128_u64[0];
LABEL_8:
      v7 = objc_msgSend(v0, "navigationController", v5);
      if (v7)
      {
        v8 = v7;
        v9 = objc_msgSend(v7, "removeViewController:animated:", v0, 1);

      }
      return;
    }
    v4 = *v2;
    *(_QWORD *)&v5 = swift_release(v1).n128_u64[0];
    v6 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v6 = v4 & 0xFFFFFFFFFFFFLL;
    if (!v6)
      goto LABEL_8;
  }
}

id sub_1001780DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  void *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  NSString v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59[24];

  v2 = type metadata accessor for MusicFavoriteStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100007E8C(&qword_1011A3FD8);
  v13 = __chkstk_darwin(v55);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v58 = (char *)&v50 - v16;
  v56 = a1;
  v17 = a1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
  v18 = swift_beginAccess(a1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist, v59, 0, 0);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v17, v9, v18);
  Artist.favoriteStatus.getter(v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for MusicFavoriteStatus.favorited(_:), v2);
  LOBYTE(v12) = static MusicFavoriteStatus.== infix(_:_:)(v8, v6);
  v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v6, v2);
  v20(v8, v2);
  if ((v12 & 1) != 0)
  {
    static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v21 = AccessibilityString.undoFavoriteButtonLabel.unsafeMutableAddressor();
    v22 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain();
    v24 = AccessibilityIdentifier.artistUndoFavorite.unsafeMutableAddressor();
  }
  else
  {
    static UIButton.Configuration.barButtonConfiguration(imageName:)(1918989427, 0xE400000000000000);
    v25 = AccessibilityString.favoriteButtonLabel.unsafeMutableAddressor();
    v22 = *v25;
    v23 = v25[1];
    swift_bridgeObjectRetain();
    v24 = AccessibilityIdentifier.artistFavorite.unsafeMutableAddressor();
  }
  v51 = v22;
  v27 = v24[1];
  v57 = *v24;
  v26 = v57;
  v28 = v55;
  v29 = v58;
  v30 = &v58[*(int *)(v55 + 48)];
  v31 = &v58[*(int *)(v55 + 64)];
  *(_QWORD *)v30 = v22;
  *((_QWORD *)v30 + 1) = v23;
  *(_QWORD *)v31 = v26;
  *((_QWORD *)v31 + 1) = v27;
  v54 = sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  v32 = type metadata accessor for UIButton.Configuration(0);
  v53 = *(_QWORD *)(v32 - 8);
  v33 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v33(v15, v29, v32);
  v52 = v33;
  swift_bridgeObjectRetain_n(v27, 2);
  swift_bridgeObjectRetain();
  v34 = (void *)UIButton.init(configuration:primaryAction:)(v15, 0);
  v35 = &v15[*(int *)(v28 + 48)];
  v36 = &v15[*(int *)(v28 + 64)];
  v33(v15, v29, v32);
  v37 = v51;
  *(_QWORD *)v35 = v51;
  *((_QWORD *)v35 + 1) = v23;
  *(_QWORD *)v36 = v57;
  *((_QWORD *)v36 + 1) = v27;
  swift_bridgeObjectRetain();
  v38 = v34;
  v39 = v37;
  v40 = String._bridgeToObjectiveC()();
  v41 = swift_bridgeObjectRelease(v23);
  v42 = *(void (**)(char *, uint64_t, __n128))(v53 + 8);
  v42(v15, v32, v41);
  objc_msgSend(v38, "setAccessibilityLabel:", v40);

  v43 = &v15[*(int *)(v28 + 48)];
  v44 = &v15[*(int *)(v28 + 64)];
  v45 = (uint64_t)v58;
  v52(v15, v58, v32);
  swift_bridgeObjectRelease(v23);
  *(_QWORD *)v43 = v39;
  *((_QWORD *)v43 + 1) = v23;
  v46 = v57;
  *(_QWORD *)v44 = v57;
  *((_QWORD *)v44 + 1) = v27;
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v46, v27);
  ((void (*)(char *, uint64_t))v42)(v15, v32);
  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v47 = swift_allocObject(&unk_1010B4628, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16, v56);
  v48 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1001AAAA0, v47);
  objc_msgSend(v38, "addAction:forControlEvents:", v48, 64);

  sub_10004FF60(v45, &qword_1011A3FD8);
  return v38;
}

void sub_100178538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100178588();

  }
}

uint64_t sub_100178588()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  __n128 v62;
  uint64_t (*v64)(char *, char *, uint64_t, __n128);
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t *v71;
  char v72[24];
  char v73[24];

  v1 = v0;
  v2 = type metadata accessor for MetricsPageProperties(0);
  __chkstk_darwin(v2);
  v71 = (uint64_t *)((char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_10119E460);
  v5 = __chkstk_darwin(v4);
  v70 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v69 = (char *)&v64 - v7;
  v8 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v8);
  v68 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v10);
  v67 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicFavoriteStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v64 - v17;
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v66 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v64 - v23;
  v25 = &v0[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
  v65 = v25;
  v26 = swift_beginAccess(v25, v73, 0, 0);
  v64 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v20 + 16);
  v27 = v64(v24, v25, v19, v26);
  Artist.favoriteStatus.getter(v27);
  v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v24, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, enum case for MusicFavoriteStatus.favorited(_:), v12);
  LOBYTE(v20) = static MusicFavoriteStatus.== infix(_:_:)(v18, v16);
  v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v16, v12);
  v29(v18, v12);
  sub_100178AC4((v20 & 1) == 0);
  v30 = type metadata accessor for TaskPriority(0);
  v31 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v67, 1, 1, v30);
  type metadata accessor for MainActor(0);
  v32 = v1;
  v34 = static MainActor.shared.getter(v33);
  v35 = swift_allocObject(&unk_1010B49C0, 48, 7);
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = &protocol witness table for MainActor;
  *(_BYTE *)(v35 + 32) = v20 & 1;
  *(_QWORD *)(v35 + 40) = v32;
  if ((v20 & 1) != 0)
    v36 = 18;
  else
    v36 = 17;
  v37 = sub_100166D14(v31, (uint64_t)&unk_1011A4000, v35);
  v38 = swift_release(v37);
  v39 = v66;
  v40 = v64(v66, v65, v19, v38);
  v41 = Artist.catalogID.getter(v40);
  v43 = v42;
  v44 = v19;
  v45 = (uint64_t)v68;
  v28(v39, v44);
  if (!v43)
  {
    v41 = 0;
    v43 = 0xE000000000000000;
  }
  v46 = type metadata accessor for URL(0);
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v48 = (uint64_t)v69;
  v47(v69, 1, 1, v46);
  v49 = sub_100041F44((uint64_t)&off_1010AA928);
  v50 = (uint64_t)v70;
  v47(v70, 1, 1, v46);
  swift_bridgeObjectRetain();
  v51 = v71;
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v41, v43, 0x747369747241, 0xE600000000000000, v50, 0, 0, 0, v71);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v41, v43, 5, v36, v48, 0, 0, 9, v45, v49, 0, 0x300u, v51, 0);
  v52 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v54 = v53;
  v56 = v55;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v57 = qword_10124C790;
  swift_retain(qword_10124C790);
  v58 = GroupActivitiesManager.hasJoined.getter();
  v59 = GroupActivitiesManager.participantsCount.getter();
  v60 = (uint64_t *)(v57 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v57 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v72, 0, 0);
  v61 = *v60;
  v62 = swift_release(v57);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v52) + 0xB8))(v45, v54, v56, v58 & 1, v59, v61, v62);

  swift_bridgeObjectRelease(v56);
  return sub_10005B748(v45, type metadata accessor for MetricsEvent.Click);
}

void sub_100178AC4(char a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  id v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, id);
  uint64_t v41;
  void (*v42)(char *, char *, id);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, id);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, id);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  void *v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  NSString v71;
  __n128 v72;
  void (*v73)(uint64_t, id, __n128);
  uint64_t v74;
  void *v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void (*v91)(char *, uint64_t, id);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  _QWORD aBlock[5];
  uint64_t v98;

  v2 = (_QWORD *)type metadata accessor for UIButton.Configuration(0);
  v94 = *(v2 - 1);
  v95 = v2;
  __chkstk_darwin(v2);
  v80 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011A3FD0);
  __chkstk_darwin(v85);
  v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  v7 = __chkstk_darwin(v6);
  v81 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v80 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v80 - v12;
  v89 = sub_100007E8C(&qword_1011A3FD8);
  v82 = *(_QWORD *)(v89 - 8);
  v14 = __chkstk_darwin(v89);
  v84 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v80 - v17;
  v83 = v19;
  __chkstk_darwin(v16);
  v21 = (char *)&v80 - v20;
  v86 = v11;
  v87 = v5;
  v22 = v13;
  if ((a1 & 1) != 0)
  {
    static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v23 = AccessibilityString.undoFavoriteButtonLabel.unsafeMutableAddressor();
    v25 = *v23;
    v24 = v23[1];
    swift_bridgeObjectRetain();
    v26 = AccessibilityIdentifier.artistUndoFavorite.unsafeMutableAddressor();
  }
  else
  {
    static UIButton.Configuration.barButtonConfiguration(imageName:)(1918989427, 0xE400000000000000);
    v27 = AccessibilityString.favoriteButtonLabel.unsafeMutableAddressor();
    v25 = *v27;
    v24 = v27[1];
    swift_bridgeObjectRetain();
    v26 = AccessibilityIdentifier.artistFavorite.unsafeMutableAddressor();
  }
  v28 = *v26;
  v29 = v26[1];
  v30 = v89;
  v31 = &v21[*(int *)(v89 + 48)];
  v32 = &v21[*(int *)(v89 + 64)];
  *(_QWORD *)v31 = v25;
  *((_QWORD *)v31 + 1) = v24;
  *(_QWORD *)v32 = v28;
  *((_QWORD *)v32 + 1) = v29;
  swift_bridgeObjectRetain_n(v29, 2);
  v33 = swift_bridgeObjectRetain();
  v34 = (void *)sub_100170E10(v33);
  UIButton.configuration.getter(v34);

  v35 = &v18[*(int *)(v30 + 48)];
  v36 = (uint64_t)v21;
  v37 = &v18[*(int *)(v30 + 64)];
  v39 = v94;
  v38 = v95;
  v40 = *(void (**)(char *, uint64_t, id))(v94 + 16);
  v96 = v36;
  v91 = v40;
  ((void (*)(char *))v40)(v18);
  v92 = v28;
  v93 = v25;
  *(_QWORD *)v35 = v25;
  *((_QWORD *)v35 + 1) = v24;
  *(_QWORD *)v37 = v28;
  *((_QWORD *)v37 + 1) = v29;
  v88 = v29;
  v41 = (uint64_t)v22;
  v42 = *(void (**)(char *, char *, id))(v39 + 32);
  v43 = (uint64_t)v86;
  v42(v86, v18, v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, id))(v39 + 56))(v43, 0, 1, v38);
  v44 = (uint64_t)v87;
  v45 = (uint64_t)&v87[*(int *)(v85 + 48)];
  sub_10004A160(v41, (uint64_t)v87, (uint64_t *)&unk_1011A2250);
  sub_10004A160(v43, v45, (uint64_t *)&unk_1011A2250);
  v46 = *(unsigned int (**)(uint64_t, uint64_t, id))(v39 + 48);
  if (v46(v44, 1, v38) == 1)
  {
    sub_10004FF60(v43, (uint64_t *)&unk_1011A2250);
    sub_10004FF60(v41, (uint64_t *)&unk_1011A2250);
    if (v46(v45, 1, v38) == 1)
    {
      sub_10004FF60(v44, (uint64_t *)&unk_1011A2250);
LABEL_11:
      sub_10004FF60(v96, &qword_1011A3FD8);
      swift_bridgeObjectRelease(v88);
      swift_bridgeObjectRelease(v24);
      return;
    }
    goto LABEL_9;
  }
  v47 = v81;
  sub_10004A160(v44, v81, (uint64_t *)&unk_1011A2250);
  if (v46(v45, 1, v38) == 1)
  {
    sub_10004FF60(v43, (uint64_t *)&unk_1011A2250);
    sub_10004FF60(v41, (uint64_t *)&unk_1011A2250);
    (*(void (**)(uint64_t, id))(v94 + 8))(v47, v38);
LABEL_9:
    sub_10004FF60(v44, &qword_1011A3FD0);
    goto LABEL_12;
  }
  v48 = v41;
  v49 = v80;
  v42(v80, (char *)v45, v95);
  v50 = sub_100048748(&qword_1011A3FE0, (uint64_t (*)(uint64_t))&type metadata accessor for UIButton.Configuration, (uint64_t)&protocol conformance descriptor for UIButton.Configuration);
  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v49, v95, v50);
  v52 = *(void (**)(char *, id))(v94 + 8);
  v52(v49, v95);
  sub_10004FF60(v43, (uint64_t *)&unk_1011A2250);
  v53 = v48;
  v38 = v95;
  sub_10004FF60(v53, (uint64_t *)&unk_1011A2250);
  v52((char *)v47, v38);
  sub_10004FF60(v44, (uint64_t *)&unk_1011A2250);
  if ((v51 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  v95 = (id)objc_opt_self(UIView);
  v54 = v89;
  v55 = (uint64_t)v84;
  v56 = &v84[*(int *)(v89 + 48)];
  v57 = &v84[*(int *)(v89 + 64)];
  v91(v84, v96, v38);
  *(_QWORD *)v56 = v93;
  *((_QWORD *)v56 + 1) = v24;
  v58 = v88;
  *(_QWORD *)v57 = v92;
  *((_QWORD *)v57 + 1) = v58;
  v59 = *(unsigned __int8 *)(v82 + 80);
  v60 = (v59 + 24) & ~v59;
  v61 = swift_allocObject(&unk_1010B4948, v60 + v83, v59 | 7);
  v62 = v90;
  *(_QWORD *)(v61 + 16) = v90;
  sub_100065228(v55, v61 + v60, &qword_1011A3FD8);
  aBlock[4] = sub_1001AA9D4;
  v98 = v61;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DBD98;
  aBlock[3] = &unk_1010B4960;
  v63 = _Block_copy(aBlock);
  v64 = v98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65 = v62;
  swift_release(v64);
  objc_msgSend(v95, "animateWithDuration:animations:", v63, 0.25);
  _Block_release(v63);
  v67 = (void *)sub_100170E10(v66);
  v68 = (uint64_t *)(v55 + *(int *)(v54 + 48));
  v69 = (uint64_t *)(v55 + *(int *)(v54 + 64));
  v91((char *)v55, v96, v38);
  v70 = v92;
  *v68 = v93;
  v68[1] = v24;
  *v69 = v70;
  v69[1] = v58;
  swift_bridgeObjectRetain();
  v71 = String._bridgeToObjectiveC()();
  v72 = swift_bridgeObjectRelease(v24);
  v73 = *(void (**)(uint64_t, id, __n128))(v94 + 8);
  v73(v55, v38, v72);
  objc_msgSend(v67, "setAccessibilityLabel:", v71);

  v75 = (void *)sub_100170E10(v74);
  v76 = (uint64_t *)(v55 + *(int *)(v54 + 48));
  v77 = (uint64_t *)(v55 + *(int *)(v54 + 64));
  v78 = v96;
  v91((char *)v55, v96, v38);
  swift_bridgeObjectRelease(v24);
  *v76 = v93;
  v76[1] = v24;
  v79 = v92;
  *v77 = v92;
  v77[1] = v58;
  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v79, v58);

  sub_10004FF60(v78, &qword_1011A3FD8);
  ((void (*)(uint64_t, id))v73)(v55, v38);
}

void sub_1001791C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_100007E8C(&qword_1011A3FD8);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_100170E10(v7);
  v11 = type metadata accessor for UIButton.Configuration(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v5, a2, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  UIButton.configuration.setter(v9);

}

uint64_t sub_1001792CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v5 + 80) = a5;
  *(_BYTE *)(v5 + 184) = a4;
  v6 = type metadata accessor for Artist(0);
  *(_QWORD *)(v5 + 88) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 96) = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 104) = swift_task_alloc(v8);
  *(_QWORD *)(v5 + 112) = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 120) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 128) = v11;
  *(_QWORD *)(v5 + 136) = v12;
  return swift_task_switch(sub_100179374, v11, v12);
}

uint64_t sub_100179374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  _QWORD *v9;
  uint64_t v11;
  __n128 v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 184);
  v4 = type metadata accessor for MusicLibrary(0);
  *(_QWORD *)(v0 + 144) = static MusicLibrary.shared.getter(v4);
  v5 = v2 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
  v6 = *(_QWORD *)(v0 + 88);
  if (v3 == 1)
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = swift_beginAccess(v5, v0 + 40, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 16))(v7, v5, v6, v8);
    v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.undoFavorite<A>(_:)[1]);
    *(_QWORD *)(v0 + 152) = v9;
    *v9 = v0;
    v9[1] = sub_1001794C4;
    return MusicLibrary.undoFavorite<A>(_:)(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88), &protocol witness table for Artist);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 104);
    v12 = swift_beginAccess(v5, v0 + 16, 0, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 16))(v11, v5, v6, v12);
    v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.favorite<A>(_:)[1]);
    *(_QWORD *)(v0 + 168) = v13;
    *v13 = v0;
    v13[1] = sub_100179594;
    return MusicLibrary.favorite<A>(_:)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88), &protocol witness table for Artist);
  }
}

uint64_t sub_1001794C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 144);
  v3 = *(_QWORD *)(*v1 + 152);
  v5 = *(_QWORD *)(*v1 + 112);
  v6 = *(_QWORD *)(*v1 + 88);
  v7 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_release(v4);
  if (v0)
    v8 = sub_100179628;
  else
    v8 = sub_100179554;
  return swift_task_switch(v8, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_100179554()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100179594()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  v4 = *(_QWORD *)(*v1 + 144);
  v6 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(*v1 + 104);
  v7 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_release(v4);
  if (v0)
    v8 = sub_100179828;
  else
    v8 = sub_1001AB678;
  return swift_task_switch(v8, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_100179628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 120));
  if (qword_10119C500 != -1)
    swift_once(&qword_10119C500, sub_10066DEA4);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D560);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 64) = v1;
    swift_errorRetain(v1);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 64, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 72) = sub_100322200(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Artist Favorite Action failed with error=%s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100178AC4(*(_BYTE *)(v0 + 184));
  swift_errorRelease(v1);
  v12 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100179828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 120));
  if (qword_10119C500 != -1)
    swift_once(&qword_10119C500, sub_10066DEA4);
  v2 = type metadata accessor for Logger(0);
  sub_100048B14(v2, (uint64_t)qword_10124D560);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 64) = v1;
    swift_errorRetain(v1);
    v8 = sub_100007E8C(&qword_1011A14B0);
    v9 = String.init<A>(describing:)(v0 + 64, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 72) = sub_100322200(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Artist Favorite Action failed with error=%s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  sub_100178AC4(*(_BYTE *)(v0 + 184));
  swift_errorRelease(v1);
  v12 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_100179AC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v24;
  char v25;
  Swift::String v26;
  uint64_t v27;
  _BYTE v29[24];
  _QWORD v30[5];

  v8 = sub_100007E8C(&qword_1011A37B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v13 = (void *)v12[1];
  v14 = *v12 == a2 && v13 == a3;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) == 0)
  {
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    if (v21 != a2 || v22 != a3)
    {
      v24 = v22;
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, a2, a3, 0);
      swift_bridgeObjectRelease(v24);
      if ((v25 & 1) != 0)
      {
LABEL_14:
        sub_100172264((uint64_t)v11);
        v27 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
        v20 = (void *)UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v11, a4, v27);
        (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
        return v20;
      }
      strcpy((char *)v30, "Unknown kind=");
      HIWORD(v30[1]) = -4864;
      v26._countAndFlagsBits = a2;
      v26._object = a3;
      String.append(_:)(v26);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v30[0], v30[1], "Music/LibraryArtistDetailViewController.swift", 45, 2, 595, 0);
      __break(1u);
    }
    swift_bridgeObjectRelease(a3);
    goto LABEL_14;
  }
  sub_100172074((uint64_t)v11);
  v15 = sub_10004A07C(0, (unint64_t *)&unk_1011A9B70, UICollectionViewCell_ptr);
  v16 = (void *)UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v11, a4, v15);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  v17 = v4 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist;
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist, v29, 0, 0);
  v18 = type metadata accessor for Artist(0);
  v30[3] = v18;
  v30[4] = &protocol witness table for Artist;
  v19 = sub_100049F68(v30);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
  v20 = sub_1004E5AEC((uint64_t)v30);

  sub_10004FF60((uint64_t)v30, (uint64_t *)&unk_1011A3DD0);
  return v20;
}

uint64_t sub_100179E3C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  double (*v71)(char *, unint64_t, uint64_t);
  __n128 v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  double (*v82)(char *, unint64_t, uint64_t);
  __n128 v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  _BYTE *v91;
  char v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  id v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  _BYTE *v126;
  char v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t *v142;
  _QWORD *v143;
  uint64_t result;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  __int128 v181;
  __int128 v182;
  void *v183;
  char v184[8];
  uint64_t v185;

  v3 = v2;
  v178 = a1;
  v171 = sub_100007E8C((uint64_t *)&unk_1011A37F0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_100007E8C((uint64_t *)&unk_1011A37E0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v151 = (uint64_t)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011ADFC0);
  v146 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A3890);
  v174 = *(_QWORD *)(v13 - 8);
  v175 = v13;
  __chkstk_darwin(v13);
  v156 = (char *)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v15);
  v168 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v152 = (char *)&v145 - v18;
  __chkstk_darwin(v19);
  v177 = (char *)&v145 - v20;
  v21 = sub_100007E8C((uint64_t *)&unk_1011A1760);
  v22 = __chkstk_darwin(v21);
  v164 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, v22);
  v165 = *(_QWORD *)(v166 - 8);
  v24 = __chkstk_darwin(v166);
  v163 = (char *)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for UICellAccessory.DisplayedState(0, v24);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  v158 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v157 = (uint64_t)&v145 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_100007E8C(&qword_1011A37C0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v147 = (uint64_t)&v145 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v29);
  v31 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011ADFD0);
  v33 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v35 = (char *)&v145 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100007E8C(&qword_1011A3910);
  v172 = *(_QWORD *)(v36 - 8);
  v173 = v36;
  __chkstk_darwin(v36);
  v155 = (char *)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011A8FA0);
  __chkstk_darwin(v38);
  v167 = (uint64_t)&v145 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v148 = (uint64_t)&v145 - v41;
  __chkstk_darwin(v42);
  v176 = (char *)&v145 - v43;
  v44 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v44);
  v46 = (char *)&v145 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = a2;
  v48 = IndexPath.section.getter(v47);
  v49 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v46, 1, 1, v49);
  v180 = v3;
  v50 = sub_10016F3BC(v48, (uint64_t)v46);
  sub_10004FF60((uint64_t)v46, &qword_1011A3D88);
  if (v50 == 2)
    goto LABEL_49;
  if ((v50 & 1) == 0)
  {
    v51 = v180;
    v52 = *(_QWORD *)&v180[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
        + *(_QWORD *)(**(_QWORD **)&v180[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController]
                    + 112);
    v53 = swift_beginAccess(v52, v184, 0, 0);
    v55 = v172;
    v54 = v173;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v172 + 48))(v52, 1, v173, v53))
    {
      v56 = type metadata accessor for Album(0);
      v57 = (uint64_t)v176;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v176, 1, 1, v56);
      v58 = v179;
      goto LABEL_19;
    }
    v66 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v155, v52, v54);
    v67 = MusicLibrarySectionedResponse.sections.getter(v54);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v66, v54);
    *(_QWORD *)&v181 = _swiftEmptyArrayStorage;
    v68 = *(_QWORD *)(v67 + 16);
    if (v68)
    {
      v69 = v67 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      v70 = *(_QWORD *)(v33 + 72);
      v71 = *(double (**)(char *, unint64_t, uint64_t))(v33 + 16);
      swift_bridgeObjectRetain();
      do
      {
        v72.n128_f64[0] = v71(v35, v69, v32);
        MusicLibrarySection.items.getter(v32, v72);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
        sub_1008057C4((uint64_t)v31);
        v69 += v70;
        --v68;
      }
      while (v68);
      swift_bridgeObjectRelease_n(v67, 2);
      v51 = v180;
      v74 = (_QWORD *)v181;
    }
    else
    {
      swift_bridgeObjectRelease(v67);
      v74 = _swiftEmptyArrayStorage;
    }
    v58 = v179;
    v86 = IndexPath.item.getter(v73);
    v57 = (uint64_t)v176;
    if ((v86 & 0x8000000000000000) == 0)
    {
      v87 = v86;
      if (v86 < v74[2])
      {
        v88 = type metadata accessor for Album(0);
        v89 = *(_QWORD *)(v88 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v89 + 16))(v57, (unint64_t)v74+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v87, v88);
        v90 = swift_bridgeObjectRelease(v74);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v89 + 56))(v57, 0, 1, v88, v90);
LABEL_19:
        v91 = sub_10016ED98();
        v92 = v91[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

        if ((v92 & 1) != 0
          || (*(_BYTE *)(*(_QWORD *)&v51[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController]
                       + 32) & 1) != 0)
        {
          v93 = v157;
          sub_100172634(v157);
          v94 = (void *)sub_100923C70(v93, v58, v57);
          (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v93, v159);
          v95 = sub_100007E8C((uint64_t *)&unk_1011AD790);
          v96 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
          v97 = swift_allocObject(v95, ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(_QWORD *)(v96 + 72), *(unsigned __int8 *)(v96 + 80) | 7);
          *(_OWORD *)(v97 + 16) = xmmword_100EA7AA0;
          v98 = v161;
          v99 = v160;
          v100 = v162;
          (*(void (**)(char *, _QWORD, uint64_t))(v161 + 104))(v160, enum case for UICellAccessory.DisplayedState.always(_:), v162);
          v101 = type metadata accessor for UICellAccessory.LayoutDimension(0);
          v102 = v164;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v164, 1, 1, v101);
          v103 = v163;
          UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v102, 0);
          static UICellAccessory.disclosureIndicator(displayed:options:)(v99, v103);
          (*(void (**)(char *, uint64_t))(v165 + 8))(v103, v166);
          (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
          UICollectionViewListCell.accessories.setter(v97);
          v104 = objc_msgSend(v51, "traitCollection");
          v105 = objc_msgSend(v104, "userInterfaceIdiom");

          if (v105 != (id)6)
          {
            v106 = v94;

            objc_msgSend(v106, "directionalLayoutMargins");
            objc_msgSend(v106, "setDirectionalLayoutMargins:");

          }
          v107 = v167;
          sub_10004A160(v57, v167, &qword_1011A8FA0);
          v108 = type metadata accessor for Album(0);
          v109 = *(_QWORD *)(v108 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108) == 1)
          {
            sub_10004FF60(v107, &qword_1011A8FA0);
            v181 = 0u;
            v182 = 0u;
            v183 = 0;
          }
          else
          {
            *((_QWORD *)&v182 + 1) = v108;
            v183 = &protocol witness table for Album;
            v110 = sub_100049F68(&v181);
            (*(void (**)(_QWORD *, uint64_t, uint64_t))(v109 + 32))(v110, v107, v108);
          }

        }
        else
        {
          v111 = v147;
          sub_100172458(v147);
          v112 = sub_100923C5C(v111, v58, v57);
          (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v111, v150);
          v113 = Corner.medium.unsafeMutableAddressor();
          v114 = *v113;
          v115 = v113[1];
          v116 = *((_BYTE *)v113 + 16);
          v117 = swift_allocObject(&unk_1010B47E0, 33, 7);
          *(_QWORD *)(v117 + 16) = v114;
          *(_QWORD *)(v117 + 24) = v115;
          *(_BYTE *)(v117 + 32) = v116;
          UICollectionViewCell.configurationUpdateHandler.setter(sub_1001AB590, v117);
          v118 = v148;
          sub_10004A160(v57, v148, &qword_1011A8FA0);
          v119 = type metadata accessor for Album(0);
          v120 = *(_QWORD *)(v119 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119) == 1)
          {
            sub_10004FF60(v118, &qword_1011A8FA0);
            v181 = 0u;
            v182 = 0u;
            v183 = 0;
          }
          else
          {
            *((_QWORD *)&v182 + 1) = v119;
            v183 = &protocol witness table for Album;
            v143 = sub_100049F68(&v181);
            (*(void (**)(_QWORD *, uint64_t, uint64_t))(v120 + 32))(v143, v118, v119);
          }
          v94 = sub_1004E5AEC((uint64_t)&v181);

        }
        v142 = &qword_1011A8FA0;
        goto LABEL_44;
      }
      goto LABEL_47;
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v59 = v180;
  v60 = *(_QWORD *)&v180[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
      + *(_QWORD *)(**(_QWORD **)&v180[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController]
                  + 112);
  v61 = swift_beginAccess(v60, v184, 0, 0);
  v63 = v174;
  v62 = v175;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v174 + 48))(v60, 1, v175, v61))
  {
    v64 = type metadata accessor for MusicVideo(0);
    v57 = (uint64_t)v177;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v177, 1, 1, v64);
    v65 = v179;
    goto LABEL_33;
  }
  v75 = v156;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v156, v60, v62);
  v76 = MusicLibrarySectionedResponse.sections.getter(v62);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v75, v62);
  *(_QWORD *)&v181 = _swiftEmptyArrayStorage;
  v77 = *(_QWORD *)(v76 + 16);
  if (v77)
  {
    v78 = v146;
    v79 = v76 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
    v80 = (char *)v76;
    v81 = *(_QWORD *)(v146 + 72);
    v82 = *(double (**)(char *, unint64_t, uint64_t))(v146 + 16);
    v176 = v80;
    swift_bridgeObjectRetain();
    do
    {
      v83.n128_f64[0] = v82(v12, v79, v10);
      MusicLibrarySection.items.getter(v10, v83);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v12, v10);
      sub_1008050D0((uint64_t)v9);
      v79 += v81;
      --v77;
    }
    while (v77);
    swift_bridgeObjectRelease_n(v176, 2);
    v85 = (_QWORD *)v181;
  }
  else
  {
    swift_bridgeObjectRelease(v76);
    v85 = _swiftEmptyArrayStorage;
  }
  v65 = v179;
  v121 = IndexPath.item.getter(v84);
  v57 = (uint64_t)v177;
  if ((v121 & 0x8000000000000000) != 0)
    goto LABEL_46;
  v122 = v121;
  if (v121 < v85[2])
  {
    v123 = type metadata accessor for MusicVideo(0);
    v124 = *(_QWORD *)(v123 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v124 + 16))(v57, (unint64_t)v85+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(_QWORD *)(v124 + 72) * v122, v123);
    v125 = swift_bridgeObjectRelease(v85);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v124 + 56))(v57, 0, 1, v123, v125);
LABEL_33:
    v126 = sub_10016ED98();
    v127 = v126[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 56];

    if ((v127 & 1) != 0
      || (*(_BYTE *)(*(_QWORD *)&v59[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_layoutVariantController]
                   + 32) & 1) != 0)
    {
      v128 = v169;
      sub_100172A20(v169);
      v129 = (void *)sub_100923E58(v128, v65, v57);
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v128, v171);
      v130 = v57;
      v131 = (char *)&v185;
    }
    else
    {
      v132 = v151;
      sub_100172844(v151);
      v129 = sub_100923C84(v132, v65, v57);
      (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v132, v154);
      v133 = Corner.medium.unsafeMutableAddressor();
      v134 = *v133;
      v135 = v133[1];
      v136 = *((_BYTE *)v133 + 16);
      v137 = swift_allocObject(&unk_1010B47B8, 33, 7);
      *(_QWORD *)(v137 + 16) = v134;
      *(_QWORD *)(v137 + 24) = v135;
      *(_BYTE *)(v137 + 32) = v136;
      UICollectionViewCell.configurationUpdateHandler.setter(sub_1001AA450, v137);
      v130 = v57;
      v131 = (char *)&v182 + 8;
    }
    v138 = *((_QWORD *)v131 - 32);
    sub_10004A160(v130, v138, &qword_1011B59B0);
    v139 = type metadata accessor for MusicVideo(0);
    v140 = *(_QWORD *)(v139 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139) == 1)
    {
      sub_10004FF60(v138, &qword_1011B59B0);
      v181 = 0u;
      v182 = 0u;
      v183 = 0;
    }
    else
    {
      *((_QWORD *)&v182 + 1) = v139;
      v183 = &protocol witness table for MusicVideo;
      v141 = sub_100049F68(&v181);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v140 + 32))(v141, v138, v139);
    }
    v94 = sub_1004E5AEC((uint64_t)&v181);

    v142 = &qword_1011B59B0;
LABEL_44:
    sub_10004FF60(v57, v142);
    sub_10004FF60((uint64_t)&v181, (uint64_t *)&unk_1011A3DD0);
    return (uint64_t)v94;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000027, 0x8000000100E30700, "Music/LibraryArtistDetailViewController.swift", 45, 2, 632, 0);
  __break(1u);
  return result;
}

unint64_t sub_10017AF04(char *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  unint64_t result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  double (*v84)(char *, unint64_t, uint64_t);
  __n128 v85;
  uint64_t v86;
  char *v87;
  Class isa;
  char *v89;
  id v90;
  id v91;
  id v92;
  char *v93;
  char *v94;
  __n128 v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  double (*v103)(char *, unint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  __n128 v107;
  uint64_t v108;
  char *v109;
  id v110;
  uint64_t v111;
  char *v112;
  _QWORD *v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  __n128 v116;
  id v117;
  unint64_t v118;
  uint64_t v119;
  __n128 v120;
  char v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  void (*v142)(char *, uint64_t);
  _BYTE *v143;
  char *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  void (*v156)(uint64_t, char *, uint64_t);
  void *v157;
  uint64_t v158;
  char *v159;
  id v160;
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint8_t *v166;
  char *v167;
  void (*v168)(char *, char *, uint64_t);
  char *v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  void (*v177)(char *, uint64_t);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint8_t *v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t);
  char *v187;
  uint64_t v188;
  objc_class *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __n128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint8_t *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint8_t *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  _QWORD *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char v262[8];
  __int128 aBlock;
  __int128 v264;
  id (*v265)();
  uint64_t v266;
  char v267[8];

  v3 = v2;
  v259 = a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v5);
  v218 = (char *)&v205 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v211 = (char *)&v205 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v205);
  v206 = (char *)&v205 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor(0);
  v207 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v209 = (uint64_t)&v205 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = v11;
  __chkstk_darwin(v12);
  v210 = (uint64_t)&v205 - v13;
  v14 = sub_100007E8C(&qword_1011B59B0);
  __chkstk_darwin(v14);
  v216 = (char *)&v205 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v16);
  v215 = (uint64_t)&v205 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v18);
  v217 = (uint64_t)&v205 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v225 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v219 = (char *)&v205 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v21);
  v224 = (char *)&v205 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_100007E8C(&qword_1011ADFC0);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v221 = (char *)&v205 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for GenericMusicItem(0);
  v241 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v239 = (char *)&v205 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v243 = *(_QWORD *)(v248 - 8);
  __chkstk_darwin(v248);
  v240 = (char *)&v205 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v250 = (uint8_t *)&v205 - v27;
  v257 = sub_100007E8C(&qword_1011A3890);
  v261 = *(_QWORD *)(v257 - 8);
  __chkstk_darwin(v257);
  v247 = (char *)&v205 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = type metadata accessor for MusicVideo(0);
  v249 = *(_QWORD *)(v251 - 8);
  __chkstk_darwin(v251);
  v212 = (uint8_t *)&v205 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v231 = (char *)&v205 - v31;
  __chkstk_darwin(v32);
  v253 = (char *)&v205 - v33;
  v245 = type metadata accessor for IndexPath(0);
  v244 = *(_QWORD *)(v245 - 8);
  __chkstk_darwin(v245);
  v213 = v34;
  v214 = (char *)&v205 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3D70);
  __chkstk_darwin(v35);
  v237 = (char *)&v205 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v37);
  v235 = (uint64_t)&v205 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v234 = (uint64_t)&v205 - v40;
  __chkstk_darwin(v41);
  v238 = (char *)&v205 - v42;
  v230 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v230);
  v232 = (uint64_t)&v205 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v233 = (uint64_t)&v205 - v45;
  __chkstk_darwin(v46);
  v236 = (char *)&v205 - v47;
  v48 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v48);
  v50 = (char *)&v205 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100007E8C(&qword_1011ADFD0);
  v220 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v53 = (char *)&v205 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011A3910);
  v55 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v246 = (char *)&v205 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = type metadata accessor for Album(0);
  v254 = *(_QWORD **)(v252 - 8);
  __chkstk_darwin(v252);
  v228 = (char *)&v205 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  v229 = (char *)&v205 - v59;
  __chkstk_darwin(v60);
  v255 = (char *)&v205 - v61;
  __chkstk_darwin(v62);
  v227 = (char *)&v205 - v63;
  __chkstk_darwin(v64);
  v256 = (char *)&v205 - v65;
  v66 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v66);
  v68 = (char *)&v205 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v260 = a2;
  v70 = IndexPath.section.getter(v69);
  v71 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v68, 1, 1, v71);
  v72 = sub_10016F3BC(v70, (uint64_t)v68);
  result = sub_10004FF60((uint64_t)v68, &qword_1011A3D88);
  if (v72 == 2)
    return result;
  v74 = v261;
  v258 = v3;
  if ((v72 & 1) == 0)
  {
    v75 = *(_QWORD *)&v258[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
    v76 = v75 + *(_QWORD *)(*(_QWORD *)v75 + 112);
    v77 = swift_beginAccess(v76, v267, 0, 0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v55 + 48))(v76, 1, v54, v77);
    if ((_DWORD)result)
      return result;
    v261 = v75;
    v78 = v246;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v246, v76, v54);
    v79 = MusicLibrarySectionedResponse.sections.getter(v54);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v78, v54);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v80 = *(_QWORD *)(v79 + 16);
    if (v80)
    {
      v81 = v220;
      v82 = v79 + ((*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80));
      v83 = *(_QWORD *)(v220 + 72);
      v84 = *(double (**)(char *, unint64_t, uint64_t))(v220 + 16);
      swift_bridgeObjectRetain();
      do
      {
        v85.n128_f64[0] = v84(v53, v82, v51);
        MusicLibrarySection.items.getter(v51, v85);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v53, v51);
        sub_1008057C4((uint64_t)v50);
        v82 += v83;
        --v80;
      }
      while (v80);
      swift_bridgeObjectRelease_n(v79, 2);
      v87 = (char *)aBlock;
    }
    else
    {
      swift_bridgeObjectRelease(v79);
      v87 = (char *)_swiftEmptyArrayStorage;
    }
    result = IndexPath.item.getter(v86);
    v110 = v258;
    v111 = v252;
    v112 = v256;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *((_QWORD *)v87 + 2))
    {
      v113 = v254;
      v114 = (void (*)(char *, char *, uint64_t))v254[2];
      v115 = v227;
      v114(v227, &v87[((*((unsigned __int8 *)v113 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v113 + 80))+ v254[9] * result], v252);
      v116 = swift_bridgeObjectRelease(v87);
      ((void (*)(char *, char *, uint64_t, __n128))v113[4])(v112, v115, v111, v116);
      v117 = objc_msgSend(v110, "traitCollection");
      v118 = sub_10018D478();
      UITraitCollection.subscript.getter(&aBlock, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v118);

      v119 = aBlock;
      LOBYTE(v117) = sub_1007607C4(aBlock);
      v120 = swift_bridgeObjectRelease(v119);
      if ((v117 & 1) != 0)
      {
        v121 = 1;
      }
      else
      {
        v122 = v261 + *(_QWORD *)(*(_QWORD *)v261 + 96);
        v120 = swift_beginAccess(v122, v262, 0, 0);
        v121 = *(_BYTE *)(v122 + 8);
      }
      v123 = v255;
      ((void (*)(char *, char *, uint64_t, __n128))v114)(v255, v112, v111, v120);
      v124 = sub_100007E8C((uint64_t *)&unk_1011AD760);
      v125 = *(int *)(v124 + 48);
      v126 = *(int *)(v124 + 64);
      v127 = _s6AlbumsV5ScopeOMa(0);
      v128 = (uint64_t)v236;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v236, 1, 1, v127);
      *(_BYTE *)(v128 + v125) = v121;
      *(_BYTE *)(v128 + v126) = 0;
      swift_storeEnumTagMultiPayload(v128, v230, 0);
      v129 = type metadata accessor for URL(0);
      v130 = (uint64_t)v238;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v238, 1, 1, v129);
      v131 = v229;
      v114(v229, v123, v111);
      v132 = v233;
      sub_10005B704(v128, v233, type metadata accessor for ContainerDetail.Source);
      v133 = v234;
      sub_10004A160(v130, v234, &qword_10119E460);
      v134 = (uint64_t)v228;
      v114(v228, v131, v111);
      v135 = v232;
      sub_10005B704(v132, v232, type metadata accessor for ContainerDetail.Source);
      v136 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
      v137 = (uint64_t)v237;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v237, 1, 1, v136);
      v138 = v235;
      sub_10004A160(v133, v235, &qword_10119E460);
      v139 = sub_1004C539C(v134, v135, v137, v138);
      sub_10004FF60(v133, &qword_10119E460);
      v140 = v132;
      v141 = v256;
      sub_10005B748(v140, type metadata accessor for ContainerDetail.Source);
      v142 = (void (*)(char *, uint64_t))v254[1];
      v142(v131, v111);
      v143 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
      v144 = sub_1003723A0(v139, 0, v143);
      sub_10004FF60(v130, &qword_10119E460);
      sub_10005B748(v128, type metadata accessor for ContainerDetail.Source);
      v142(v255, v111);
      v145 = v258;
      v146 = *(_QWORD *)(*(_QWORD *)&v258[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController]
                       + OBJC_IVAR____TtC5Music28ArtworkPrefetchingController_cachingReference);
      v147 = *(_QWORD *)&v144[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference];
      *(_QWORD *)&v144[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference] = v146;
      swift_retain(v146);
      swift_release(v147);
      if ((Feature.UIP.isEnabled.getter(1) & 1) != 0)
      {
        v148 = (void *)objc_opt_self(_UIViewControllerTransition);
        v149 = v244;
        v150 = v214;
        v151 = v245;
        (*(void (**)(char *, uint64_t, uint64_t))(v244 + 16))(v214, v260, v245);
        v152 = *(unsigned __int8 *)(v149 + 80);
        v153 = (v152 + 24) & ~v152;
        v154 = swift_allocObject(&unk_1010B46C8, v153 + v213, v152 | 7);
        v155 = v259;
        *(_QWORD *)(v154 + 16) = v259;
        v156 = *(void (**)(uint64_t, char *, uint64_t))(v149 + 32);
        v141 = v256;
        v156(v154 + v153, v150, v151);
        v265 = sub_1001AA174;
        v266 = v154;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v264 = sub_100264780;
        *((_QWORD *)&v264 + 1) = &unk_1010B46E0;
        v157 = _Block_copy(&aBlock);
        v158 = v266;
        v159 = v144;
        v160 = v155;
        v161 = v158;
        v111 = v252;
        v162 = objc_msgSend(v148, "zoomWithSourceViewProvider:", v157, swift_release(v161).n128_f64[0]);
        _Block_release(v157);
        objc_msgSend(v159, "_setPreferredTransition:", v162);

      }
      objc_msgSend(v145, "showViewController:sender:", v144, v145);

      return ((uint64_t (*)(char *, uint64_t))v142)(v141, v111);
    }
    __break(1u);
    goto LABEL_35;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v259, "deselectItemAtIndexPath:animated:", isa, 1);

  v89 = v258;
  v90 = objc_msgSend(v258, "navigationItem");
  v91 = objc_msgSend(v90, "searchController");

  if (v91)
  {
    v92 = objc_msgSend(v91, "searchBar");

    objc_msgSend(v92, "resignFirstResponder");
  }
  v93 = *(char **)&v89[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
  v94 = &v93[*(_QWORD *)(*(_QWORD *)v93 + 112)];
  v95 = swift_beginAccess(v94, v267, 0, 0);
  v96 = v257;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v74 + 48))(v94, 1, v257, v95);
  if (!(_DWORD)result)
  {
    v259 = v93;
    v97 = v247;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v247, v94, v96);
    v98 = MusicLibrarySectionedResponse.sections.getter(v96);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v97, v96);
    *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
    v99 = *(_QWORD *)(v98 + 16);
    if (v99)
    {
      v100 = v222;
      v101 = v98 + ((*(unsigned __int8 *)(v222 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v222 + 80));
      v102 = *(_QWORD *)(v222 + 72);
      v103 = *(double (**)(char *, unint64_t, uint64_t))(v222 + 16);
      swift_bridgeObjectRetain();
      v104 = (uint64_t)v224;
      v105 = v223;
      v106 = v221;
      do
      {
        v107.n128_f64[0] = v103(v106, v101, v105);
        MusicLibrarySection.items.getter(v105, v107);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v106, v105);
        sub_1008050D0(v104);
        v101 += v102;
        --v99;
      }
      while (v99);
      swift_bridgeObjectRelease_n(v98, 2);
      v109 = (char *)aBlock;
    }
    else
    {
      swift_bridgeObjectRelease(v98);
      v109 = (char *)_swiftEmptyArrayStorage;
    }
    v163 = v249;
    result = IndexPath.item.getter(v108);
    v164 = v248;
    v165 = v251;
    v166 = v250;
    v167 = v253;
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *((_QWORD *)v109 + 2))
      {
        v168 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
        v169 = v231;
        v168(v231, &v109[((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80))+ *(_QWORD *)(v163 + 72) * result], v251);
        v170 = swift_bridgeObjectRelease(v109);
        (*(void (**)(char *, char *, uint64_t, __n128))(v163 + 32))(v167, v169, v165, v170);
        v171 = (uint64_t)v239;
        v168(v239, v167, v165);
        v172 = v241;
        v173 = v242;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v241 + 104))(v171, enum case for GenericMusicItem.musicVideo(_:), v242);
        sub_100545C34(v171, (uint64_t)v166);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v171, v173);
        v174 = v243;
        v175 = v240;
        (*(void (**)(char *, _QWORD, uint64_t))(v243 + 104))(v240, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v164);
        LOBYTE(v173) = static MusicPlayer.PlayabilityStatus.== infix(_:_:)(v166, v175);
        v176 = v175;
        v177 = *(void (**)(char *, uint64_t))(v174 + 8);
        v177(v176, v164);
        if ((v173 & 1) != 0)
        {
          v178 = &v259[*(_QWORD *)(*(_QWORD *)v259 + 96)];
          swift_beginAccess(v178, v262, 0, 0);
          v179 = v215;
          sub_10005B704((uint64_t)v178, v215, _s11MusicVideosVMa);
          v180 = (uint64_t)v216;
          v168(v216, v167, v165);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v163 + 56))(v180, 0, 1, v165);
          v181 = v217;
          sub_10075E1D4(v180, v217);
          sub_10004FF60(v180, &qword_1011B59B0);
          sub_10005B748(v179, _s11MusicVideosVMa);
          v182 = v225;
          v183 = v226;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48))(v181, 1, v226) == 1)
          {
            v177((char *)v166, v164);
            (*(void (**)(char *, uint64_t))(v163 + 8))(v253, v165);
            return sub_10004FF60(v181, (uint64_t *)&unk_1011A3D60);
          }
          else
          {
            v187 = v219;
            (*(void (**)(char *, uint64_t, uint64_t))(v182 + 32))(v219, v181, v183);
            v188 = (uint64_t)v206;
            (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v206, v187, v183);
            swift_storeEnumTagMultiPayload(v188, v205, 1);
            v265 = 0;
            aBlock = 0u;
            v264 = 0u;
            v189 = (objc_class *)v258;
            v190 = v258;
            v191 = v210;
            PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)(v188, (uint64_t)&aBlock, 3, 0, 0, 1, 0, 1, v210, v189);
            v192 = type metadata accessor for TaskPriority(0);
            v193 = (uint64_t)v211;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 56))(v211, 1, 1, v192);
            v194 = v209;
            sub_10005B704(v191, v209, type metadata accessor for PlaybackIntentDescriptor);
            type metadata accessor for MainActor(0);
            v196 = static MainActor.shared.getter(v195);
            v197 = *(unsigned __int8 *)(v207 + 80);
            v198 = (v197 + 32) & ~v197;
            v199 = (v208 + v198 + 7) & 0xFFFFFFFFFFFFFFF8;
            v200 = v164;
            v201 = (v199 + 15) & 0xFFFFFFFFFFFFFFF8;
            v202 = swift_allocObject(&unk_1010B46A0, v201 + 16, v197 | 7);
            *(_QWORD *)(v202 + 16) = v196;
            *(_QWORD *)(v202 + 24) = &protocol witness table for MainActor;
            sub_10005B6C0(v194, v202 + v198, type metadata accessor for PlaybackIntentDescriptor);
            *(_QWORD *)(v202 + v199) = 0;
            v203 = (_QWORD *)(v202 + v201);
            *v203 = 0;
            v203[1] = 0;
            v204 = sub_100166D14(v193, (uint64_t)&unk_1011A3D90, v202);
            swift_release(v204);
            sub_10005B748(v191, type metadata accessor for PlaybackIntentDescriptor);
            (*(void (**)(char *, uint64_t))(v225 + 8))(v219, v226);
            v177((char *)v250, v200);
            return (*(uint64_t (**)(char *, uint64_t))(v249 + 8))(v253, v251);
          }
        }
        else
        {
          v184 = v212;
          v168((char *)v212, v167, v165);
          v185 = (uint64_t)v218;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v244 + 56))(v218, 1, 1, v245);
          sub_1008DC548(v185, (uint64_t)&aBlock);
          sub_10004FF60(v185, (uint64_t *)&unk_1011A3D50);
          sub_100968C5C(v166, v184, (uint64_t)&aBlock);
          sub_100064B4C((uint64_t)&aBlock);
          v177((char *)v166, v164);
          v186 = *(void (**)(char *, uint64_t))(v163 + 8);
          v186(v167, v165);
          return ((uint64_t (*)(uint8_t *, uint64_t))v186)(v184, v165);
        }
      }
LABEL_36:
      __break(1u);
      return result;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  return result;
}

void sub_10017C50C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  id v6;
  uint64_t v7;

  v2 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v4, v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for ContextualPreview.ViewController(0));
  sub_1001CFEF0((uint64_t)v4);
}

unint64_t sub_10017C590(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  id v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE v38[72];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[10];
  _OWORD v42[10];
  _QWORD v43[12];

  v9 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, &v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v19 = (void *)Strong;
  v37 = a4;
  v20 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
  inited = swift_initStackObject(v20, &v39);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  sub_100064C78(a3, inited + 32);
  v22 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 1, 1, v22);
  v23 = v19;
  v24 = objc_msgSend(v23, "traitCollection");
  v25 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v43, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v25);

  v36 = v43[0];
  sub_100170A4C(v14);
  v26 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v14, 0, 1, v26);
  memset(v43, 0, 80);
  v27 = type metadata accessor for IndexPath(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v11, a5, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v27);
  sub_1008DC548((uint64_t)v11, (uint64_t)v38);
  sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011A3D50);
  if (qword_10119B8C0 != -1)
    swift_once(&qword_10119B8C0, sub_1000E9774);
  v29 = qword_10119B8C8;
  v30 = (id)qword_10124C798;
  if (v29 != -1)
    swift_once(&qword_10119B8C8, sub_1000E97E8);
  v31 = qword_10124C7A0;
  swift_retain(qword_10124C7A0);
  v32 = v36;
  sub_100495120(inited, v37, (unint64_t)v17, v36, v30, v31, (unint64_t)v14, (uint64_t)v43, v41, (uint64_t)v38, 1);
  sub_100065228((uint64_t)v41, (uint64_t)v42, (uint64_t *)&unk_1011A3DC0);
  if (*((_QWORD *)&v42[0] + 1))
  {
    v42[7] = v42[2];
    v42[8] = v42[3];
    v42[9] = v42[4];
    v42[5] = v42[0];
    v42[6] = v42[1];
    sub_100007E8C((uint64_t *)&unk_1011A20B0);
    v33 = (unint64_t)ActionMenu.uiMenu(excluding:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
    sub_1000E411C((uint64_t)v41);
  }
  else
  {
    v33 = 0;
  }

  swift_release(v31);
  swift_bridgeObjectRelease(inited);
  swift_release(v32);
  sub_10004FF60((uint64_t)v38, (uint64_t *)&unk_1011A20F0);
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A9990);
  sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A20C0);
  return v33;
}

id sub_10017CA90(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  double v30;
  uint64_t v32;
  id v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v7 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v32 - v16;
  aBlock[0] = objc_msgSend(a2, "identifier", v15);
  v18 = sub_100007E8C(&qword_1011A9960);
  v19 = swift_dynamicCast(v9, aBlock, v18, v10, 6);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v19)
  {
    v20(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v21(v17, v9, v10);
      v22 = swift_allocObject(&unk_1010B4628, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16, v3);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v17, v10);
      v23 = *(unsigned __int8 *)(v11 + 80);
      v33 = a3;
      v24 = a1;
      v25 = (v23 + 32) & ~v23;
      v26 = swift_allocObject(&unk_1010B4650, v25 + v12, v23 | 7);
      *(_QWORD *)(v26 + 16) = v22;
      *(_QWORD *)(v26 + 24) = v24;
      v21((char *)(v26 + v25), v13, v10);
      aBlock[4] = sub_1001A9FF4;
      v35 = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001DBD98;
      aBlock[3] = &unk_1010B4668;
      v27 = _Block_copy(aBlock);
      v28 = v35;
      v29 = v24;
      *(_QWORD *)&v30 = swift_release(v28).n128_u64[0];
      objc_msgSend(v33, "addAnimations:", v27, v30);
      _Block_release(v27);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }
  }
  else
  {
    v20(v9, 1, 1, v10);
  }
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A3D50);
  return objc_msgSend(a3, "setPreferredCommitStyle:", 0);
}

void sub_10017CD28(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_10017AF04(a2, a3);

  }
}

uint64_t sub_10017CF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  void *v9;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent) & 1) != 0)
    goto LABEL_8;
  v1 = sub_10016ED00();
  v2 = (uint64_t *)(*(_QWORD *)(v1 + 104)
                 + OBJC_IVAR____TtCC5Music23LibrarySearchControllerP33_D5FA0BEF708D1E9261BCB607AD690C3E11BarDelegate_text);
  v3 = v2[1];
  if (!v3)
  {
    swift_release(v1);
LABEL_8:
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
    return UIViewController.contentUnavailableConfiguration.setter(&v7);
  }
  v4 = *v2;
  swift_release(v1);
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    goto LABEL_8;
  *((_QWORD *)&v8 + 1) = type metadata accessor for UIContentUnavailableConfiguration(0);
  v9 = &protocol witness table for UIContentUnavailableConfiguration;
  sub_100049F68(&v7);
  static UIContentUnavailableConfiguration.search()();
  return UIViewController.contentUnavailableConfiguration.setter(&v7);
}

void sub_10017D08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  char *v48;
  __n128 v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  unsigned int v57;
  void (*v58)(char *, _QWORD, uint64_t);
  void (*v59)(char *, uint64_t);
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _BYTE v72[24];
  char v73[24];
  char v74[32];

  v71 = a1;
  v3 = sub_100007E8C((uint64_t *)&unk_1011A3FB0);
  __chkstk_darwin(v3);
  v68 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011B6950);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicFavoriteStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v54 - v13;
  v69 = type metadata accessor for Artist(0);
  v67 = *(_QWORD *)(v69 - 8);
  v15 = __chkstk_darwin(v69);
  v64 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v70 = (char *)&v54 - v17;
  v18 = sub_100007E8C((uint64_t *)&unk_1011A3FC0);
  __chkstk_darwin(v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_10119FCF0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v74, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v26 = (char *)Strong;
    sub_10004A160(v71, (uint64_t)v20, (uint64_t *)&unk_1011A3FC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    {

      sub_10004FF60((uint64_t)v20, (uint64_t *)&unk_1011A3FC0);
      return;
    }
    v62 = v22;
    v27 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v28 = v24;
    v27(v24, v20, v21);
    v61 = v26;
    v29 = &v26[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
    v30 = swift_beginAccess(v29, v73, 0, 0);
    v31 = v67;
    v32 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v33 = v70;
    v56 = v29;
    v34 = v29;
    v35 = v69;
    v55 = v32;
    v36 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v32)(v70, v34, v69, v30);
    Artist.favoriteStatus.getter(v36);
    v59 = *(void (**)(char *, uint64_t))(v31 + 8);
    v59(v33, v35);
    v37 = *(void (**)(_QWORD))(v9 + 104);
    v57 = enum case for MusicFavoriteStatus.favorited(_:);
    v58 = (void (*)(char *, _QWORD, uint64_t))v37;
    v37(v12);
    LODWORD(v71) = static MusicFavoriteStatus.== infix(_:_:)(v14, v12);
    v38 = *(void (**)(char *, uint64_t))(v9 + 8);
    v38(v12, v8);
    v38(v14, v8);
    v63 = v21;
    v60 = v28;
    MusicLibraryResponse.items.getter(v21);
    v39 = v68;
    sub_10031E1B8(v68);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v7, v66);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v39, 1, v35) == 1)
    {
      sub_10004FF60(v39, (uint64_t *)&unk_1011A3FB0);
      if ((v71 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v63);

        return;
      }
      v40 = v69;
      v41 = (uint64_t)v70;
      v55(v70, v56, v69);
      v42 = v61;
      sub_1001A6748(v41, v61);
      v59((char *)v41, v40);
      sub_100178008();

    }
    else
    {
      v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 32);
      v44 = v31;
      v45 = v64;
      v46 = v43(v64, v39, v35);
      Artist.favoriteStatus.getter(v46);
      v58(v12, v57, v8);
      v47 = static MusicFavoriteStatus.== infix(_:_:)(v14, v12);
      v38(v12, v8);
      v38(v14, v8);
      if ((v71 & 1) == (v47 & 1))
      {

        v59(v45, v35);
      }
      else
      {
        v48 = v56;
        v49 = swift_beginAccess(v56, v72, 33, 0);
        (*(void (**)(char *, char *, uint64_t, __n128))(v44 + 24))(v48, v45, v35, v49);
        swift_endAccess(v72);
        v50 = v61;
        sub_100178AC4(v47 & 1);
        v51 = (uint64_t)v70;
        v55(v70, v48, v35);
        sub_1001A6748(v51, v50);
        v52 = v51;
        v53 = v59;
        v59((char *)v52, v35);
        if ((v47 & 1) == 0)
          sub_100178008();

        v53(v45, v35);
      }
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v63);
  }
}

uint64_t sub_10017D7F0()
{
  return type metadata accessor for LibraryArtistDetailViewController(0);
}

uint64_t type metadata accessor for LibraryArtistDetailViewController(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A3798, (uint64_t)&nominal type descriptor for LibraryArtistDetailViewController);
}

void sub_10017D80C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[21];

  sub_1001AB544(319, (unint64_t *)&unk_1011ACDB0, &qword_1011A37B0);
  if (v3 <= 0x3F)
  {
    v16[0] = *(_QWORD *)(v2 - 8) + 64;
    v16[1] = v16[0];
    sub_1001AB544(319, &qword_1011A37B8, &qword_1011A37C0);
    if (v5 <= 0x3F)
    {
      v16[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001AB544(319, &qword_1011A37C8, (uint64_t *)&unk_1011A37D0);
      if (v7 <= 0x3F)
      {
        v16[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001AB544(319, (unint64_t *)&unk_1011B8BC0, (uint64_t *)&unk_1011A37E0);
        if (v9 <= 0x3F)
        {
          v16[4] = *(_QWORD *)(v8 - 8) + 64;
          sub_1001AB544(319, (unint64_t *)&unk_1011B8BD0, (uint64_t *)&unk_1011A37F0);
          if (v11 <= 0x3F)
          {
            v16[5] = *(_QWORD *)(v10 - 8) + 64;
            v12 = type metadata accessor for Artist(319);
            if (v13 <= 0x3F)
            {
              v16[6] = *(_QWORD *)(v12 - 8) + 64;
              v16[7] = "\b";
              v16[8] = (char *)&value witness table for Builtin.NativeObject + 64;
              v16[9] = (char *)&value witness table for Builtin.NativeObject + 64;
              v16[10] = (char *)&value witness table for Builtin.NativeObject + 64;
              v16[11] = "\b";
              v16[12] = "\b";
              v16[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
              v16[14] = "\b";
              v16[15] = &unk_100EACDF0;
              v16[16] = "\b";
              v16[17] = "\b";
              sub_10017D9AC(319);
              if (v15 <= 0x3F)
              {
                v16[18] = *(_QWORD *)(v14 - 8) + 64;
                v16[19] = "\b";
                v16[20] = "\b";
                swift_updateClassMetadata2(a1, 256, 21, v16, a1 + 80);
              }
            }
          }
        }
      }
    }
  }
}

void sub_10017D9AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011B8BE0)
  {
    v2 = type metadata accessor for Actions.MetricsReportingContext(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, &qword_1011B8BE0);
  }
}

_QWORD *sub_10017DA00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;

  v2 = sub_100007E8C(&qword_1011A3A38);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v12 = _swiftEmptyArrayStorage;
  sub_10035C4F8(0, v5, 0);
  if (v5)
  {
    v6 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v4, a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
    sub_10004FF60((uint64_t)v4, &qword_1011A3A38);
    swift_release();
    return 0;
  }
  else
  {
    v8 = v12;
    v9 = sub_100007E8C((uint64_t *)&unk_1011A3A40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  return v8;
}

_QWORD *sub_10017DB28(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
    specialized ContiguousArray.reserveCapacity(_:)(v14);
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v13);
    result = (_QWORD *)swift_bridgeObjectRelease(a1);
    if (!v3)
      return _swiftEmptyArrayStorage;
  }
  else
  {
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return _swiftEmptyArrayStorage;
  }
  if (v3 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4++, a1);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v6 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
        v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v5);
        specialized ContiguousArray._endMutation()(v7);
      }
      while (v3 != v4);
    }
    else
    {
      v8 = (void **)(a1 + 32);
      do
      {
        v9 = *v8++;
        v10 = v9;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v11 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
        specialized ContiguousArray._endMutation()(v12);
        --v3;
      }
      while (v3);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10017DC9C(uint64_t a1, uint64_t *a2, void (*a3)(BOOL, unint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  void (*v19)(BOOL, unint64_t, uint64_t);
  unint64_t v20;
  _QWORD *v21;

  v5 = sub_100007E8C(a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v21 = _swiftEmptyArrayStorage;
  a3(0, v9, 0);
  v10 = v21;
  if (v9)
  {
    v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v19 = a3;
    v20 = v11;
    v12 = a1 + v11;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v8, v12, v5);
      v21 = v10;
      v16 = v10[2];
      v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        v19(v15 > 1, v16 + 1, 1);
        v10 = v21;
      }
      v10[2] = v16 + 1;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v10 + v20 + v16 * v13, v8, v5);
      v12 += v13;
      --v9;
    }
    while (v9);
  }
  return v10;
}

_QWORD *sub_10017DDE4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return _swiftEmptyArrayStorage;
  v3 = (_QWORD *)(a1 + 32);
  v4 = type metadata accessor for ImpressionTracker();
  while (1)
  {
    v5 = *v3;
    v6 = swift_dynamicCastClass(*v3, v4);
    if (!v6)
      break;
    v8 = v6;
    v9 = swift_unknownObjectRetain(v5, v7);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
    v10 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
    v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
    specialized ContiguousArray._endMutation()(v11);
    v3 += 2;
    if (!--v2)
      return _swiftEmptyArrayStorage;
  }
  swift_release();
  return 0;
}

void sub_10017DEBC()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1002D8F14()[2];
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
}

void sub_10017DFA0()
{
  uint64_t v0;

  if (sub_1008AABBC()[2])
  {
    if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
}

Class sub_10017E074(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  NSString v17;
  id v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  void *object;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::OpaquePointer v36;
  uint64_t v37;
  UIMenuElementSize v38;
  UIImage_optional v39;
  UIImage_optional v40;

  v3 = v2;
  v6 = _s10TVEpisodesVMa(0);
  v7 = *(int *)(v6 + 56);
  if (!*(_QWORD *)(*(_QWORD *)(v2 + v7) + 16))
    return 0;
  v8 = v6;
  v9 = *(int *)(v6 + 48);
  v10 = *(unsigned __int8 *)(v2 + v9);
  if (v10 == 7)
    return 0;
  v37 = sub_100464288(*(_BYTE *)(v2 + v9), 0);
  v13 = v12;
  v15 = v14;
  v16 = *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v8 + 44)) + 16) == 0;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v19 = swift_allocObject(&unk_1010B4178, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  swift_retain();
  v20 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v37, v13, 0, 0, v18, 0, 0, 0, 0, 0, v16, sub_1001AB674, v19);
  v21._object = (void *)0x8000000100E30070;
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  object = AccessibilityIdentifier.init(name:)(v21).rawValue._object;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setAccessibilityIdentifier:", v23, swift_bridgeObjectRelease(object).n128_f64[0]);

  v24 = sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v25 = *(_QWORD *)(v3 + v7);
  __chkstk_darwin(v24);
  LOBYTE(v33) = v10;
  v34 = v3;
  v35 = a1;
  v36._rawValue = a2;
  swift_bridgeObjectRetain();
  v26 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A7654, (uint64_t)&v32, v25);
  swift_bridgeObjectRelease(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v39.value.super.isa = 0;
  v39.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v27, (Swift::String_optional)0, v39, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v26, v36).super.super.isa;
  v29 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v30 + 32) = v20;
  *(_QWORD *)(v30 + 40) = isa;
  v38 = v30;
  specialized Array._endMutation()(v30);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v40.value.super.isa = 0;
  v40.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, v38, v36).super.super.isa;
}

Class sub_10017E350(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  Class result;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  NSString v21;
  id v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  void *object;
  NSString v27;
  _QWORD *v28;
  void *v29;
  Swift::String v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  Swift::OpaquePointer v36;
  UIMenuElementSize v37;
  UIImage_optional v38;
  UIImage_optional v39;

  v3 = v2;
  v6 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100235664();
  v10 = v9[2];
  swift_bridgeObjectRelease(v9);
  result = 0;
  if (v10)
  {
    v12 = _s6AlbumsVMa(0);
    sub_10005B704(v3 + *(int *)(v12 + 24), (uint64_t)v8, _s6AlbumsV5ScopeOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
    if (EnumCaseMultiPayload >= 3)
    {
      if (EnumCaseMultiPayload != 3)
      {
        v14 = 2;
LABEL_7:
        v15 = sub_100464288(v14, 0);
        v17 = v16;
        v19 = v18;
        v20 = *(_QWORD *)(*(_QWORD *)(v3 + *(int *)(v12 + 32)) + 16) == 0;
        v21 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v19);
        v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v21);

        sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
        v23 = swift_allocObject(&unk_1010B4038, 32, 7);
        *(_QWORD *)(v23 + 16) = a1;
        *(_QWORD *)(v23 + 24) = a2;
        swift_retain(a2);
        v24 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15, v17, 0, 0, v22, 0, 0, 0, 0, 0, v20, sub_1001AB674, v23);
        v25._object = (void *)0x8000000100E30070;
        v25._countAndFlagsBits = 0xD00000000000001CLL;
        object = AccessibilityIdentifier.init(name:)(v25).rawValue._object;
        v27 = String._bridgeToObjectiveC()();
        objc_msgSend(v24, "setAccessibilityIdentifier:", v27, swift_bridgeObjectRelease(object).n128_f64[0]);

        sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
        v28 = sub_100235664();
        __chkstk_darwin(v28);
        v36._rawValue = a2;
        v29 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A72B4, (uint64_t)&v35, (uint64_t)v28);
        swift_bridgeObjectRelease(v28);
        v30._countAndFlagsBits = 0;
        v30._object = (void *)0xE000000000000000;
        v38.value.super.isa = 0;
        v38.is_nil = 0;
        isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v30, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v29, v36).super.super.isa;
        v32 = sub_100007E8C((uint64_t *)&unk_1011A1470);
        v33 = swift_allocObject(v32, 48, 7);
        *(_OWORD *)(v33 + 16) = xmmword_100EA7DB0;
        *(_QWORD *)(v33 + 32) = v24;
        *(_QWORD *)(v33 + 40) = isa;
        v37 = v33;
        specialized Array._endMutation()(v33);
        v34._countAndFlagsBits = 0;
        v34._object = (void *)0xE000000000000000;
        v39.value.super.isa = 0;
        v39.is_nil = 0;
        return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v39, 0, 0xFFFFFFFFFFFFFFFFLL, v37, v36).super.super.isa;
      }
    }
    else
    {
      sub_10005B748((uint64_t)v8, _s6AlbumsV5ScopeOMa);
    }
    v14 = 0;
    goto LABEL_7;
  }
  return result;
}

UIMenu sub_10017E698(uint64_t a1, void *a2)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  NSString v24;
  _UNKNOWN **v25;
  void *v26;
  Swift::String v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  Swift::OpaquePointer v36;
  uint64_t v37;
  UIMenuElementSize v38;
  __int128 v39;
  _OWORD v40[3];
  _OWORD v41[2];
  UIImage_optional v42;
  UIImage_optional v43;

  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[1];
  v39 = *v2;
  v40[0] = v11;
  *(_OWORD *)((char *)v40 + 12) = *(__int128 *)((char *)v2 + 28);
  v12 = sub_1002D8F14()[2];
  swift_bridgeObjectRelease();
  if (!v12)
    return 0;
  v13 = *((_QWORD *)v2 + 4);
  v14 = String.LocalizationValue.init(stringLiteral:)(0x69747241206C6C41, 0xEB00000000737473);
  static Locale.current.getter(v14);
  v15 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, 0, 0, 256);
  v17 = v16;
  v18 = *(_QWORD *)(v13 + 16) == 0;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v19);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v21 = swift_allocObject(&unk_1010B4358, 32, 7);
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  swift_retain();
  v22 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15, v17, 0, 0, v20, 0, 0, 0, 0, 0, v18, sub_1001AB674, v21);
  v23._object = (void *)0x8000000100E30070;
  v23._countAndFlagsBits = 0xD00000000000001CLL;
  AccessibilityIdentifier.init(name:)(v23);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityIdentifier:", v24, swift_bridgeObjectRelease().n128_f64[0]);

  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v40[2] = v39;
  v41[0] = v40[0];
  *(_OWORD *)((char *)v41 + 12) = *(_OWORD *)((char *)v40 + 12);
  v25 = sub_1002D8F14();
  __chkstk_darwin(v25);
  LOBYTE(v34) = 1;
  v35 = &v39;
  v36._rawValue = a2;
  v26 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A7C14, (uint64_t)&v33, (uint64_t)v25);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v42.value.super.isa = 0;
  v42.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v27, (Swift::String_optional)0, v42, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v26, v36).super.super.isa;
  v29 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v30 + 32) = v22;
  *(_QWORD *)(v30 + 40) = isa;
  v38 = v30;
  specialized Array._endMutation()(v30);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v43.value.super.isa = 0;
  v43.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v43, 0, 0xFFFFFFFFFFFFFFFFLL, v38, v36);
}

UIMenu sub_10017EA1C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  UIMenuElementSize *v8;
  id v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  NSString v21;
  id v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  void *object;
  NSString v27;
  _UNKNOWN **v28;
  void *v29;
  Swift::String v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::OpaquePointer v43;
  uint64_t v44;
  uint64_t v45;
  UIMenuElementSize v46;
  UIImage_optional v47;
  UIImage_optional v48;

  v3 = v2;
  v6 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v6);
  v8 = (UIMenuElementSize *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    sub_10005B704(v2, (uint64_t)v8, _s9PlaylistsVMa);
LABEL_4:
    sub_10005B748((uint64_t)v8, _s9PlaylistsVMa);
    goto LABEL_5;
  }
  v9 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  sub_10005B704(v3, (uint64_t)v8, _s9PlaylistsVMa);
  if (v10 == (id)6)
    goto LABEL_4;
  v46 = *v8;
  v36 = type metadata accessor for MusicLibrary(0);
  swift_retain();
  v45 = static MusicLibrary.shared.getter(v37);
  v38 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  LOBYTE(v36) = dispatch thunk of static Equatable.== infix(_:_:)(&v46, &v45, v36, v38);
  swift_release();
  swift_release();
  sub_10005B748((uint64_t)v8, _s9PlaylistsVMa);
  v39 = &off_1010AA0D0;
  if ((v36 & 1) != 0)
    v39 = &off_1010AA0F8;
  if (!v39[2])
    return 0;
LABEL_5:
  v11 = (uint64_t *)(v3 + *(int *)(v6 + 24));
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v12 = _s9PlaylistsV5ScopeVMa(0);
  v13 = (uint64_t *)sub_100048B14(v12, (uint64_t)qword_10124C8A8);
  if (sub_10010DC18(v11, v13))
    v14 = 3;
  else
    v14 = 5;
  v15 = sub_100464288(v14, 0);
  v17 = v16;
  v19 = v18;
  v20 = *(_QWORD *)(*(_QWORD *)(v3 + *(int *)(v6 + 32)) + 16) == 0;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v21);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v23 = swift_allocObject(&unk_1010B4538, 32, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  swift_retain();
  v24 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15, v17, 0, 0, v22, 0, 0, 0, 0, 0, v20, sub_1001AB674, v23);
  v25._object = (void *)0x8000000100E30070;
  v25._countAndFlagsBits = 0xD00000000000001CLL;
  object = AccessibilityIdentifier.init(name:)(v25).rawValue._object;
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setAccessibilityIdentifier:", v27, swift_bridgeObjectRelease(object).n128_f64[0]);

  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v28 = sub_10010E2B0();
  __chkstk_darwin(v28);
  LOBYTE(v41) = v14;
  v42 = v3;
  v43._rawValue = a2;
  swift_bridgeObjectRetain();
  v29 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A809C, (uint64_t)&v40, (uint64_t)v28);
  swift_bridgeObjectRelease(v28);
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v47.value.super.isa = 0;
  v47.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v30, (Swift::String_optional)0, v47, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v29, v43).super.super.isa;
  v32 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v33 = swift_allocObject(v32, 48, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v33 + 32) = v24;
  *(_QWORD *)(v33 + 40) = isa;
  v46 = v33;
  specialized Array._endMutation()(v33);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v48.value.super.isa = 0;
  v48.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v48, 0, 0xFFFFFFFFFFFFFFFFLL, v46, v43);
}

Class sub_10017EE9C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  NSString v16;
  id v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  NSString v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  Swift::OpaquePointer v34;
  UIMenuElementSize v35;
  _OWORD v36[5];
  __int128 v37;
  char v38;
  char v39;
  UIImage_optional v40;
  UIImage_optional v41;

  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(_OWORD *)(v2 + 80);
  v36[4] = *(_OWORD *)(v2 + 64);
  v37 = v4;
  v5 = *(_OWORD *)(v2 + 48);
  v36[2] = *(_OWORD *)(v2 + 32);
  v36[3] = v5;
  v6 = *(_OWORD *)(v2 + 16);
  v36[0] = *(_OWORD *)v2;
  v36[1] = v6;
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  sub_100065228(v2 + 64, (uint64_t)&v38, &qword_1011A39D0);
  sub_100065228((uint64_t)&v38, (uint64_t)&v39, &qword_1011A39D0);
  v9 = v39;
  if (v39 == 7)
    return 0;
  v11 = *(_QWORD *)(v2 + 56);
  v12 = sub_100464288(v39, 0);
  v14 = v13;
  v15 = *(_QWORD *)(v11 + 16) == 0;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v16);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v18 = swift_allocObject(&unk_1010B42B8, 32, 7);
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  swift_retain();
  v19 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v12, v14, 0, 0, v17, 0, 0, 0, 0, 0, v15, sub_1001AB674, v18);
  v20._object = (void *)0x8000000100E30070;
  v20._countAndFlagsBits = 0xD00000000000001CLL;
  AccessibilityIdentifier.init(name:)(v20);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setAccessibilityIdentifier:", v21, swift_bridgeObjectRelease().n128_f64[0]);

  v22 = sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v23 = *((_QWORD *)&v37 + 1);
  __chkstk_darwin(v22);
  LOBYTE(v31) = v9;
  v32 = v36;
  v33 = a1;
  v34._rawValue = a2;
  swift_bridgeObjectRetain();
  v24 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A79F8, (uint64_t)&v30, v23);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v40.value.super.isa = 0;
  v40.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v40, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v24, v34).super.super.isa;
  v27 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v28 + 32) = v19;
  *(_QWORD *)(v28 + 40) = isa;
  v35 = v28;
  specialized Array._endMutation()(v28);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v41.value.super.isa = 0;
  v41.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v29, (Swift::String_optional)0, v41, 0, 0xFFFFFFFFFFFFFFFFLL, v35, v34).super.super.isa;
}

Class sub_10017F1A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _QWORD *(*a5)(uint64_t *__return_ptr, char *))
{
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  NSString v23;
  id v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  void *object;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  Swift::OpaquePointer v42;
  _QWORD *(*v43)(uint64_t *__return_ptr, char *);
  UIMenuElementSize v44;
  _OWORD v45[5];
  uint64_t v46;
  char v47;
  char v48;
  UIImage_optional v49;
  UIImage_optional v50;

  v46 = *((_QWORD *)v5 + 10);
  v6 = v5[4];
  v7 = v5[2];
  v45[3] = v5[3];
  v45[4] = v6;
  v8 = *v5;
  v45[1] = v5[1];
  v45[2] = v7;
  v45[0] = v8;
  if (!*(_QWORD *)(v46 + 16))
    return 0;
  sub_100065228((uint64_t)v5 + 56, (uint64_t)&v47, &qword_1011A39D0);
  sub_100065228((uint64_t)&v47, (uint64_t)&v48, &qword_1011A39D0);
  v14 = v48;
  if (v48 == 7)
    return 0;
  v43 = a5;
  v16 = *((_QWORD *)v5 + 6);
  v17 = sub_100464288(v48, 0);
  v19 = v18;
  v21 = v20;
  v22 = *(_QWORD *)(v16 + 16) == 0;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v25 = swift_allocObject(a3, 32, 7);
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = a2;
  swift_retain();
  v26 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v17, v19, 0, 0, v24, 0, 0, 0, 0, 0, v22, a4, v25);
  v27._object = (void *)0x8000000100E30070;
  v27._countAndFlagsBits = 0xD00000000000001CLL;
  object = AccessibilityIdentifier.init(name:)(v27).rawValue._object;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setAccessibilityIdentifier:", v29, swift_bridgeObjectRelease(object).n128_f64[0]);

  v30 = sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v31 = v46;
  __chkstk_darwin(v30);
  LOBYTE(v39) = v14;
  v40 = v45;
  v41 = a1;
  v42._rawValue = a2;
  swift_bridgeObjectRetain();
  v32 = sub_10016C004(v43, (uint64_t)&v38, v31);
  swift_bridgeObjectRelease(v31);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v49.value.super.isa = 0;
  v49.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v33, (Swift::String_optional)0, v49, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v32, v42).super.super.isa;
  v35 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v36 = swift_allocObject(v35, 48, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v36 + 32) = v26;
  *(_QWORD *)(v36 + 40) = isa;
  v44 = v36;
  specialized Array._endMutation()(v36);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v50.value.super.isa = 0;
  v50.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v50, 0, 0xFFFFFFFFFFFFFFFFLL, v44, v42).super.super.isa;
}

UIMenu sub_10017F4A8(uint64_t a1, void *a2)
{
  __int128 *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  __int128 v13;
  id v14;
  id v15;
  _UNKNOWN **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  NSString v26;
  id v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  NSString v31;
  _UNKNOWN **v32;
  void *v33;
  Swift::String v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  Swift::OpaquePointer v43;
  _BYTE v44[24];
  UIMenuElementSize v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[5];
  UIImage_optional v51;
  UIImage_optional v52;

  v3 = v2;
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v2[1];
  v46 = *v2;
  v47 = v12;
  v13 = v2[3];
  v48 = v2[2];
  v49 = v13;
  if ((*((_BYTE *)v2 + 8) & 1) == 0)
  {
    v14 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v15 = objc_msgSend(v14, "userInterfaceIdiom");

    v16 = &off_1010AA120;
    if (v15 != (id)6)
    {
      *(_QWORD *)&v50[0] = *v3;
      v17 = type metadata accessor for MusicLibrary(0);
      swift_retain();
      v45 = static MusicLibrary.shared.getter(v18);
      v19 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
      LOBYTE(v17) = dispatch thunk of static Equatable.== infix(_:_:)(v50, &v45, v17, v19);
      swift_release();
      swift_release();
      if ((v17 & 1) != 0)
        v16 = &off_1010AA148;
    }
    if (!v16[2])
      return 0;
  }
  v20 = v3[4];
  v21 = String.LocalizationValue.init(stringLiteral:)(0x676E6F53206C6C41, 0xE900000000000073);
  static Locale.current.getter(v21);
  v22 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, 0, 0, 256);
  v24 = v23;
  v25 = *(_QWORD *)(v20 + 16) == 0;
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v26);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v28 = swift_allocObject(&unk_1010B45D8, 32, 7);
  *(_QWORD *)(v28 + 16) = a1;
  *(_QWORD *)(v28 + 24) = a2;
  swift_retain();
  v29 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, v24, 0, 0, v27, 0, 0, 0, 0, 0, v25, sub_1001AB674, v28);
  v30._object = (void *)0x8000000100E30070;
  v30._countAndFlagsBits = 0xD00000000000001CLL;
  AccessibilityIdentifier.init(name:)(v30);
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setAccessibilityIdentifier:", v31, swift_bridgeObjectRelease().n128_f64[0]);

  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v50[0] = v46;
  v50[1] = v47;
  v50[2] = v48;
  v50[3] = v49;
  v32 = sub_1008AABBC();
  __chkstk_darwin(v32);
  LOBYTE(v41) = 6;
  v42 = &v46;
  v43._rawValue = a2;
  swift_bridgeObjectRetain();
  v33 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A841C, (uint64_t)&v40, (uint64_t)v32);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v51.value.super.isa = 0;
  v51.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v51, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v33, v43).super.super.isa;
  v36 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v37 = swift_allocObject(v36, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v37 + 32) = v29;
  *(_QWORD *)(v37 + 40) = isa;
  v45 = v37;
  specialized Array._endMutation()(v37);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v52.value.super.isa = 0;
  v52.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, (Swift::String_optional)0, v52, 0, 0xFFFFFFFFFFFFFFFFLL, v45, v43);
}

UIMenu sub_10017F914(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  void *object;
  NSString v25;
  _QWORD *v26;
  void *v27;
  Swift::String v28;
  Class isa;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::OpaquePointer v37;
  uint64_t v38;
  UIMenuElementSize v39;
  UIImage_optional v40;
  UIImage_optional v41;

  v3 = v2;
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10075F4EC();
  v13 = v12[2];
  swift_bridgeObjectRelease(v12);
  if (!v13)
    return 0;
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E30050);
  static Locale.current.getter(v14);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, 0, v8, 0, 0, 256);
  v17 = v16;
  v18 = *(_QWORD *)(*(_QWORD *)(v3 + *(int *)(_s11MusicVideosVMa(0) + 32)) + 16) == 0;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v19);

  sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
  v21 = swift_allocObject(&unk_1010B3F98, 32, 7);
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  swift_retain(a2);
  v22 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15, v17, 0, 0, v20, 0, 0, 0, 0, 0, v18, sub_1001A70D0, v21);
  v23._countAndFlagsBits = 0xD00000000000001CLL;
  v23._object = (void *)0x8000000100E30070;
  object = AccessibilityIdentifier.init(name:)(v23).rawValue._object;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityIdentifier:", v25, swift_bridgeObjectRelease(object).n128_f64[0]);

  sub_10004A07C(0, (unint64_t *)&unk_1011A8FC0, UIMenu_ptr);
  v26 = sub_10075F4EC();
  __chkstk_darwin(v26);
  LOBYTE(v35) = 4;
  v36 = v3;
  v37._rawValue = a2;
  v27 = sub_10016C004((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A70D8, (uint64_t)&v34, (uint64_t)v26);
  swift_bridgeObjectRelease(v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v40.value.super.isa = 0;
  v40.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v40, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v27, v37).super.super.isa;
  v30 = sub_100007E8C((uint64_t *)&unk_1011A1470);
  v31 = swift_allocObject(v30, 48, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(v31 + 32) = v22;
  *(_QWORD *)(v31 + 40) = isa;
  v39 = v31;
  specialized Array._endMutation()(v31);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v41.value.super.isa = 0;
  v41.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v41, 0, 0xFFFFFFFFFFFFFFFFLL, v39, v37);
}

id sub_10017FC94(unsigned __int8 a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void *object;
  NSString v36;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;

  v45 = a4;
  v10 = _s10TVEpisodesVMa(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v47 = v5;
    if (a1 == 1)
      v14 = 0x657469726F766166;
    else
      v14 = 0x64616F6C6E776F64;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, 0xE900000000000073, 7105633, 0xE300000000000000, 0);
    swift_bridgeObjectRelease(0xE900000000000073);
    if ((v15 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v17 = sub_100464288(a2, a1);
      v42 = v18;
      v43 = v17;
      v41 = a5;
      v20 = v19;
      v44 = a1;
      v21 = *(_QWORD *)(a3 + *(int *)(v10 + 44));
      swift_bridgeObjectRetain();
      v22 = sub_10075C178(a1, v21);
      swift_bridgeObjectRelease(v21);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      v40 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

      v39 = v22 & 1;
      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      sub_10005B704(a3, (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), _s10TVEpisodesVMa);
      v24 = *(unsigned __int8 *)(v11 + 80);
      v25 = (v24 + 16) & ~v24;
      v26 = v25 + v12;
      v27 = (v26 + 9) & 0xFFFFFFFFFFFFFFF8;
      v28 = swift_allocObject(&unk_1010B41A0, v27 + 16, v24 | 7);
      sub_10005B6C0((uint64_t)v13, v28 + v25, _s10TVEpisodesVMa);
      v29 = (_BYTE *)(v28 + v26);
      *v29 = v22 & 1;
      v29[1] = a1;
      v30 = (_QWORD *)(v28 + v27);
      v31 = v41;
      *v30 = v45;
      v30[1] = v31;
      swift_retain();
      v32 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v43, v42, 0, 0, v40, 0, 0, 0, 0, 0, v39, sub_1001A77A4, v28);
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      v16 = v32;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease(v46._object);
      v46._countAndFlagsBits = 0xD000000000000019;
      v46._object = (void *)0x8000000100E30090;
      if (v44 == 2)
        v33 = 0x64616F6C6E776F64;
      else
        v33 = 0x657469726F766166;
      v34 = 0xE900000000000073;
      String.append(_:)(*(Swift::String *)&v33);
      swift_bridgeObjectRelease(0xE900000000000073);
      object = AccessibilityIdentifier.init(name:)(v46).rawValue._object;
      v36 = String._bridgeToObjectiveC()();
      objc_msgSend(v16, "setAccessibilityIdentifier:", v36, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 0;
  }
  return v16;
}

id sub_10017FFD8(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  NSString v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  Swift::String v22;
  NSString v23;
  id v25;
  uint64_t v26;
  uint64_t v27;

  if (a1)
  {
    if (a1 == 1)
      v6 = 0x657469726F766166;
    else
      v6 = 0x64616F6C6E776F64;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, 0xE900000000000073, 7105633, 0xE300000000000000, 0);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v13 = sub_100464288(a2, a1);
      v26 = v14;
      v27 = v13;
      v15 = *(_QWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      v16 = sub_10075C178(a1, v15);
      swift_bridgeObjectRelease();
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v18 = swift_allocObject(&unk_1010B4380, 80, 7);
      v19 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v18 + 16) = *(_OWORD *)a3;
      *(_OWORD *)(v18 + 32) = v19;
      *(_OWORD *)(v18 + 44) = *(_OWORD *)(a3 + 28);
      *(_BYTE *)(v18 + 60) = v16 & 1;
      *(_BYTE *)(v18 + 61) = a1;
      *(_QWORD *)(v18 + 64) = a4;
      *(_QWORD *)(v18 + 72) = a5;
      swift_retain();
      sub_1001A7ACC((_QWORD *)a3);
      v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v27, v26, 0, 0, v25, 0, 0, 0, 0, 0, v16 & 1, sub_1001A7CA4, v18);
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      if (a1 == 2)
        v20 = 0x64616F6C6E776F64;
      else
        v20 = 0x657469726F766166;
      v21 = 0xE900000000000073;
      String.append(_:)(*(Swift::String *)&v20);
      swift_bridgeObjectRelease();
      v22._countAndFlagsBits = 0xD000000000000019;
      v22._object = (void *)0x8000000100E30090;
      AccessibilityIdentifier.init(name:)(v22);
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setAccessibilityIdentifier:", v23, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_1001802A0(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  NSString v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  Swift::String v24;
  NSString v25;
  id v27;
  uint64_t v28;
  uint64_t v29;

  if (a1)
  {
    if (a1 == 1)
      v6 = 0x657469726F766166;
    else
      v6 = 0x64616F6C6E776F64;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, 0xE900000000000073, 7105633, 0xE300000000000000, 0);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v13 = sub_100464288(a2, a1);
      v28 = v14;
      v29 = v13;
      v15 = *(_QWORD *)(a3 + 56);
      swift_bridgeObjectRetain();
      v16 = sub_10075C178(a1, v15);
      swift_bridgeObjectRelease();
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v27 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v18 = swift_allocObject(&unk_1010B42E0, 136, 7);
      v19 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v18 + 48) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v18 + 64) = v19;
      v20 = *(_OWORD *)(a3 + 80);
      *(_OWORD *)(v18 + 80) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(v18 + 96) = v20;
      v21 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v18 + 16) = *(_OWORD *)a3;
      *(_OWORD *)(v18 + 32) = v21;
      *(_BYTE *)(v18 + 112) = v16 & 1;
      *(_BYTE *)(v18 + 113) = a1;
      *(_QWORD *)(v18 + 120) = a4;
      *(_QWORD *)(v18 + 128) = a5;
      swift_retain();
      sub_100048B2C((_QWORD *)a3);
      v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v29, v28, 0, 0, v27, 0, 0, 0, 0, 0, v16 & 1, sub_1001A7AA8, v18);
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      if (a1 == 2)
        v22 = 0x64616F6C6E776F64;
      else
        v22 = 0x657469726F766166;
      v23 = 0xE900000000000073;
      String.append(_:)(*(Swift::String *)&v22);
      swift_bridgeObjectRelease();
      v24._countAndFlagsBits = 0xD000000000000019;
      v24._object = (void *)0x8000000100E30090;
      AccessibilityIdentifier.init(name:)(v24);
      v25 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setAccessibilityIdentifier:", v25, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_100180570(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  NSString v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  Swift::String v29;
  void *object;
  NSString v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a1)
  {
    if (a1 == 1)
      v8 = 0x657469726F766166;
    else
      v8 = 0x64616F6C6E776F64;
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, 0xE900000000000073, 7105633, 0xE300000000000000, 0);
    swift_bridgeObjectRelease(0xE900000000000073);
    if ((v15 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v17 = sub_100464288(a2, a1);
      v35 = v18;
      v36 = v17;
      v20 = v19;
      v34 = a7;
      v21 = *(_QWORD *)(a3 + 48);
      swift_bridgeObjectRetain();
      v22 = sub_10075C178(a1, v21);
      swift_bridgeObjectRelease(v21);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      v33 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v24 = swift_allocObject(a6, 128, 7);
      v25 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v24 + 48) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v24 + 64) = v25;
      *(_OWORD *)(v24 + 80) = *(_OWORD *)(a3 + 64);
      *(_QWORD *)(v24 + 96) = *(_QWORD *)(a3 + 80);
      v26 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v24 + 16) = *(_OWORD *)a3;
      *(_OWORD *)(v24 + 32) = v26;
      *(_BYTE *)(v24 + 104) = v22 & 1;
      *(_BYTE *)(v24 + 105) = a1;
      *(_QWORD *)(v24 + 112) = a4;
      *(_QWORD *)(v24 + 120) = a5;
      swift_retain();
      sub_1001A7DE4((_QWORD *)a3);
      v16 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v36, v35, 0, 0, v33, 0, 0, 0, 0, 0, v22 & 1, v34, v24);
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease(0xE000000000000000);
      if (a1 == 2)
        v27 = 0x64616F6C6E776F64;
      else
        v27 = 0x657469726F766166;
      v28 = 0xE900000000000073;
      String.append(_:)(*(Swift::String *)&v27);
      swift_bridgeObjectRelease(0xE900000000000073);
      v29._countAndFlagsBits = 0xD000000000000019;
      v29._object = (void *)0x8000000100E30090;
      object = AccessibilityIdentifier.init(name:)(v29).rawValue._object;
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v16, "setAccessibilityIdentifier:", v31, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 0;
  }
  return v16;
}

id sub_100180848(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  NSString v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  Swift::String v23;
  NSString v24;
  id v26;
  uint64_t v27;
  uint64_t v28;

  if (a1)
  {
    if (a1 == 1)
      v6 = 0x657469726F766166;
    else
      v6 = 0x64616F6C6E776F64;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, 0xE900000000000073, 7105633, 0xE300000000000000, 0);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v13 = sub_100464288(a2, a1);
      v27 = v14;
      v28 = v13;
      v15 = *(_QWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      v16 = sub_10075C178(a1, v15);
      swift_bridgeObjectRelease();
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v17);

      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v18 = swift_allocObject(&unk_1010B4600, 104, 7);
      v19 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v18 + 16) = *(_OWORD *)a3;
      *(_OWORD *)(v18 + 32) = v19;
      v20 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v18 + 48) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v18 + 64) = v20;
      *(_BYTE *)(v18 + 80) = v16 & 1;
      *(_BYTE *)(v18 + 81) = a1;
      *(_QWORD *)(v18 + 88) = a4;
      *(_QWORD *)(v18 + 96) = a5;
      swift_retain();
      sub_1001A829C((_QWORD *)a3);
      v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v28, v27, 0, 0, v26, 0, 0, 0, 0, 0, v16 & 1, sub_1001A84B4, v18);
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      if (a1 == 2)
        v21 = 0x64616F6C6E776F64;
      else
        v21 = 0x657469726F766166;
      v22 = 0xE900000000000073;
      String.append(_:)(*(Swift::String *)&v21);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = 0xD000000000000019;
      v23._object = (void *)0x8000000100E30090;
      AccessibilityIdentifier.init(name:)(v23);
      v24 = String._bridgeToObjectiveC()();
      objc_msgSend(v12, "setAccessibilityIdentifier:", v24, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_100180B10(unsigned __int8 a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  NSString v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  void *object;
  NSString v43;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  uint64_t v56;

  v53 = a7;
  v54 = a4;
  v56 = a5;
  v52 = a6;
  v13 = a6(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v45 - v16;
  if (a1)
  {
    v51 = a8;
    if (a1 == 1)
      v18 = 0x657469726F766166;
    else
      v18 = 0x64616F6C6E776F64;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, 0xE900000000000073, 7105633, 0xE300000000000000, 0);
    swift_bridgeObjectRelease(0xE900000000000073);
    if ((v19 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v21 = sub_100464288(a2, a1);
      v47 = v22;
      v48 = v21;
      v24 = v23;
      v49 = a1;
      v25 = *(int *)(v13 + 32);
      v50 = v8;
      v26 = *(_QWORD *)(a3 + v25);
      swift_bridgeObjectRetain();
      v27 = sub_10075C178(a1, v26);
      swift_bridgeObjectRelease(v26);
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
      v46 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v28);

      v45 = v27 & 1;
      sub_10004A07C(0, &qword_1011A3440, UIAction_ptr);
      v29 = a3;
      v30 = v52;
      sub_10005B704(v29, (uint64_t)v17, v52);
      v31 = *(unsigned __int8 *)(v14 + 80);
      v32 = (v31 + 16) & ~v31;
      v33 = v32 + v15;
      v34 = (v32 + v15 + 9) & 0xFFFFFFFFFFFFFFF8;
      v35 = swift_allocObject(v53, v34 + 16, v31 | 7);
      sub_10005B6C0((uint64_t)v17, v35 + v32, v30);
      v36 = (_BYTE *)(v35 + v33);
      *v36 = v27 & 1;
      v36[1] = a1;
      v37 = (_QWORD *)(v35 + v34);
      v38 = v56;
      *v37 = v54;
      v37[1] = v38;
      swift_retain(v38);
      v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v48, v47, 0, 0, v46, 0, 0, 0, 0, 0, v45, v51, v35);
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      v20 = v39;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease(v55._object);
      v55._countAndFlagsBits = 0xD000000000000019;
      v55._object = (void *)0x8000000100E30090;
      if (v49 == 2)
        v40 = 0x64616F6C6E776F64;
      else
        v40 = 0x657469726F766166;
      v41 = 0xE900000000000073;
      String.append(_:)(*(Swift::String *)&v40);
      swift_bridgeObjectRelease(0xE900000000000073);
      object = AccessibilityIdentifier.init(name:)(v55).rawValue._object;
      v43 = String._bridgeToObjectiveC()();
      objc_msgSend(v20, "setAccessibilityIdentifier:", v43, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 0;
  }
  return v20;
}

double sub_100180E54(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  double result;
  unsigned __int8 v10;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + *(int *)(_s10TVEpisodesVMa(0) + 44));
  swift_bridgeObjectRetain();
  if ((a3 & 1) != 0)
    sub_1001A2F00(a4);
  else
    sub_100193F28(&v10, a4);
  v8 = v11;
  a5(v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

double sub_100180EEC(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, void (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v10;
  double result;
  unsigned __int8 v12;
  uint64_t v13;

  v13 = *(_QWORD *)(a2 + *(int *)(a7(0) + 32));
  swift_bridgeObjectRetain();
  if ((a3 & 1) != 0)
    sub_1001A2F00(a4);
  else
    sub_100193F28(&v12, a4);
  v10 = v13;
  a5(v13);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_100180F84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryMusicVideoFilter.artists.getter(v1, v2);
}

void sub_100180FC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  char v31[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)&v29[-1] - v11);
  v13 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v13, v31, 0, 0);
  sub_10005B704((uint64_t)v13, (uint64_t)v12, _s10TVEpisodesVMa);
  v14 = sub_1006695F4(v12, a1);
  sub_10005B748((uint64_t)v12, _s10TVEpisodesVMa);
  if ((v14 & 1) == 0)
  {
    if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
      sub_1001835D4();
    else
      *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = 1;
    sub_10005B704((uint64_t)v13, (uint64_t)v12, _s10TVEpisodesVMa);
    v15 = *(_QWORD *)((char *)v12 + *(int *)(v7 + 56));
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v12, _s10TVEpisodesVMa);
    v16 = *(_QWORD *)(v15 + 16);
    swift_bridgeObjectRelease(v15);
    if (v16)
    {
      v17 = *(int *)(v7 + 44);
      v18 = *(_QWORD *)((char *)v13 + v17);
      v19 = *(uint64_t *)((char *)a1 + v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_10016CD08(v18, v19);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) == 0)
      {
        v21 = sub_1001887F4(sub_10018FDE4);
        sub_10005B704((uint64_t)v13, (uint64_t)v9, _s10TVEpisodesVMa);
        if (!*(_QWORD *)(*(_QWORD *)&v9[*(int *)(v7 + 56)] + 16))
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        if (*(_QWORD *)(*(_QWORD *)&v9[*(int *)(v7 + 44)] + 16))
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        sub_10005B748((uint64_t)v9, _s10TVEpisodesVMa);
        v22 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
        UIButton.configuration.setter(v6);

      }
    }
    v29[0] = *v13;
    v30 = *a1;
    v23 = type metadata accessor for MusicLibrary(0);
    v24 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v29, &v30, v23, v24) & 1) == 0)
    {
      v25 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v26 = (unint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176));
      swift_beginAccess(v26, v29, 1, 0);
      v27 = *v26;
      *v26 = v25;
      swift_bridgeObjectRelease(v27);
    }
  }
}

void sub_100181354(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  _QWORD v27[2];
  id v28;
  _QWORD v29[3];
  uint64_t v30;
  char v31[24];
  _OWORD v32[5];
  uint64_t v33;

  v2 = (_QWORD *)v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v31, 0, 0);
  v8 = *(_OWORD *)(v1 + 64);
  v32[2] = *(_OWORD *)(v1 + 48);
  v32[3] = v8;
  v32[4] = *(_OWORD *)(v1 + 80);
  v33 = *(_QWORD *)(v1 + 96);
  v9 = *(_OWORD *)(v1 + 32);
  v32[0] = *(_OWORD *)(v1 + 16);
  v32[1] = v9;
  sub_1001A7DE4(v32);
  v10 = sub_10045018C((uint64_t)v32, (uint64_t)a1);
  sub_1001A7E50((uint64_t *)v32);
  if ((v10 & 1) == 0)
  {
    if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
      sub_100183CA4();
    else
      *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
    if (*(_QWORD *)(v2[12] + 16))
    {
      v11 = v2[8];
      v12 = a1[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_10016CD08(v11, v12);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v12);
      if ((v13 & 1) == 0)
      {
        v28 = sub_100188770((uint64_t)&unk_1010B4088, (uint64_t)sub_1001A7548, (uint64_t)&unk_1010B40A0);
        v14 = v2[12];
        if (!*(_QWORD *)(v14 + 16))
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        v15 = v2[5];
        v16 = v2[7];
        v17 = v2[8];
        v18 = v2[11];
        v19 = *(_QWORD *)(v17 + 16);
        v27[1] = v2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v15);
        swift_release();
        v20 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
        v21 = v28;
        UIButton.configuration.setter(v6);

      }
    }
    v29[0] = *v7;
    v30 = *a1;
    v22 = type metadata accessor for MusicLibrary(0);
    v23 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v29, &v30, v22, v23) & 1) == 0)
    {
      v24 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v25 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
      swift_beginAccess(v25, v29, 1, 0);
      v26 = *v25;
      *v25 = v24;
      swift_bridgeObjectRelease(v26);
    }
  }
}

void sub_10018168C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  char v33[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)&v31[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s6AlbumsVMa(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v31[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v31[-1] - v11;
  v13 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v13, v33, 0, 0);
  sub_10005B704((uint64_t)v13, (uint64_t)v12, _s6AlbumsVMa);
  v14 = sub_1002370AC((uint64_t)v12, (uint64_t)a1);
  sub_10005B748((uint64_t)v12, _s6AlbumsVMa);
  if ((v14 & 1) == 0)
  {
    if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
      sub_100184574();
    else
      *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = 1;
    sub_10005B704((uint64_t)v13, (uint64_t)v12, _s6AlbumsVMa);
    v15 = sub_100235664();
    sub_10005B748((uint64_t)v12, _s6AlbumsVMa);
    v16 = v15[2];
    swift_bridgeObjectRelease(v15);
    if (v16)
    {
      v17 = *(int *)(v7 + 32);
      v18 = *(_QWORD *)((char *)v13 + v17);
      v19 = *(uint64_t *)((char *)a1 + v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_10016CD08(v18, v19);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) == 0)
      {
        v21 = sub_1001887F4(sub_1001901C8);
        sub_10005B704((uint64_t)v13, (uint64_t)v10, _s6AlbumsVMa);
        v22 = sub_100235664();
        v23 = v22[2];
        swift_bridgeObjectRelease(v22);
        if (!v23)
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        if (*(_QWORD *)(*(_QWORD *)&v10[*(int *)(v7 + 32)] + 16))
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        sub_10005B748((uint64_t)v10, _s6AlbumsVMa);
        v24 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 0, 1, v24);
        UIButton.configuration.setter(v6);

      }
    }
    v31[0] = *v13;
    v32 = *a1;
    v25 = type metadata accessor for MusicLibrary(0);
    v26 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v31, &v32, v25, v26) & 1) == 0)
    {
      v27 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v28 = (unint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176));
      swift_beginAccess(v28, v31, 1, 0);
      v29 = *v28;
      *v28 = v27;
      swift_bridgeObjectRelease(v29);
    }
  }
}

double sub_100181A1C(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  __int128 v18;
  _UNKNOWN **v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  unint64_t v30;
  unint64_t *v31;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  char v44[24];
  __int128 v45;
  _OWORD v46[2];
  __int128 v47;
  _OWORD v48[3];

  v2 = (_QWORD *)v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (__int128 *)(v1 + 16);
  swift_beginAccess(v1 + 16, v44, 0, 0);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(unsigned __int8 *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v39 = *(unsigned __int8 *)(v1 + 56);
  v38 = *(unsigned __int8 *)(v1 + 57);
  v37 = *(unsigned __int8 *)(v1 + 58);
  v36 = *(unsigned __int8 *)(v1 + 59);
  v12 = type metadata accessor for MusicLibrary(0);
  v13 = *a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = v13;
  if ((static MusicLibrary.== infix(_:_:)(v7, v13) & 1) != 0
    && ((v8 ^ *((unsigned __int8 *)a1 + 8)) & 1) == 0
    && ((v14 = a1[2], v15 = a1[3], v9 == v14) && v10 == v15
     || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v14, v15, 0) & 1) != 0)
    && (sub_10016CD08(v11, a1[4]) & 1) != 0
    && (v16 = *((unsigned __int8 *)a1 + 41), sub_1005CFF5C(v39), (v17 & 1) != 0)
    && ((v38 ^ v16) & 1) == 0)
  {
    v32 = *((unsigned __int8 *)a1 + 43);
    sub_1005CFF5C(v37);
    v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release().n128_u64[0];
    if ((v34 & 1) != 0 && ((v36 ^ v32) & 1) == 0)
      return result;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
    sub_100184C14();
  else
    *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
  v18 = v6[1];
  v47 = *v6;
  v48[0] = v18;
  *(_OWORD *)((char *)v48 + 12) = *(__int128 *)((char *)v6 + 28);
  sub_1001A7ACC(&v47);
  v19 = sub_1002D8F14();
  sub_1001A7B10((uint64_t *)&v47);
  v20 = v19[2];
  swift_bridgeObjectRelease();
  if (v20)
  {
    v21 = v2[6];
    v22 = a1[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_10016CD08(v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      v24 = sub_1001887F4((uint64_t (*)(uint64_t))sub_1001905AC);
      v25 = v6[1];
      v45 = *v6;
      v46[0] = v25;
      *(_OWORD *)((char *)v46 + 12) = *(__int128 *)((char *)v6 + 28);
      sub_1001A7ACC(&v45);
      v26 = v40;
      sub_10017DEBC();
      sub_1001A7B10((uint64_t *)&v45);
      v27 = type metadata accessor for UIButton.Configuration(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
      UIButton.configuration.setter(v26);

    }
  }
  v42[0] = *(_QWORD *)v6;
  v43 = v41;
  v28 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v42, &v43, v12, v28) & 1) == 0)
  {
    v30 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
    v31 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
    swift_beginAccess(v31, v42, 1, 0);
    *v31 = v30;
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_100181DAC(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  _QWORD v27[2];
  id v28;
  _QWORD v29[3];
  uint64_t v30;
  char v31[24];
  _OWORD v32[5];
  uint64_t v33;

  v2 = (_QWORD *)v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v31, 0, 0);
  v8 = *(_OWORD *)(v1 + 64);
  v32[2] = *(_OWORD *)(v1 + 48);
  v32[3] = v8;
  v32[4] = *(_OWORD *)(v1 + 80);
  v33 = *(_QWORD *)(v1 + 96);
  v9 = *(_OWORD *)(v1 + 32);
  v32[0] = *(_OWORD *)(v1 + 16);
  v32[1] = v9;
  sub_1001A7DE4(v32);
  v10 = sub_10045018C((uint64_t)v32, (uint64_t)a1);
  sub_1001A7E50((uint64_t *)v32);
  if ((v10 & 1) == 0)
  {
    if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
      sub_1001852D0();
    else
      *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
    if (*(_QWORD *)(v2[12] + 16))
    {
      v11 = v2[8];
      v12 = a1[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_10016CD08(v11, v12);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v12);
      if ((v13 & 1) == 0)
      {
        v28 = sub_100188770((uint64_t)&unk_1010B43A8, (uint64_t)sub_1001A7D74, (uint64_t)&unk_1010B43C0);
        v14 = v2[12];
        if (!*(_QWORD *)(v14 + 16))
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        v15 = v2[5];
        v16 = v2[7];
        v17 = v2[8];
        v18 = v2[11];
        v19 = *(_QWORD *)(v17 + 16);
        v27[1] = v2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v15);
        swift_release();
        v20 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
        v21 = v28;
        UIButton.configuration.setter(v6);

      }
    }
    v29[0] = *v7;
    v30 = *a1;
    v22 = type metadata accessor for MusicLibrary(0);
    v23 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v29, &v30, v22, v23) & 1) == 0)
    {
      v24 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v25 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
      swift_beginAccess(v25, v29, 1, 0);
      v26 = *v25;
      *v25 = v24;
      swift_bridgeObjectRelease(v26);
    }
  }
}

void sub_1001820E4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  _QWORD v27[2];
  id v28;
  _QWORD v29[3];
  uint64_t v30;
  char v31[24];
  _OWORD v32[5];
  uint64_t v33;

  v2 = (_QWORD *)v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v31, 0, 0);
  v8 = *(_OWORD *)(v1 + 64);
  v32[2] = *(_OWORD *)(v1 + 48);
  v32[3] = v8;
  v32[4] = *(_OWORD *)(v1 + 80);
  v33 = *(_QWORD *)(v1 + 96);
  v9 = *(_OWORD *)(v1 + 32);
  v32[0] = *(_OWORD *)(v1 + 16);
  v32[1] = v9;
  sub_1001A7DE4(v32);
  v10 = sub_10045018C((uint64_t)v32, (uint64_t)a1);
  sub_1001A7E50((uint64_t *)v32);
  if ((v10 & 1) == 0)
  {
    if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
      sub_100185AA0();
    else
      *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
    if (*(_QWORD *)(v2[12] + 16))
    {
      v11 = v2[8];
      v12 = a1[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_10016CD08(v11, v12);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v12);
      if ((v13 & 1) == 0)
      {
        v28 = sub_100188770((uint64_t)&unk_1010B4448, (uint64_t)sub_1001A7F70, (uint64_t)&unk_1010B4460);
        v14 = v2[12];
        if (!*(_QWORD *)(v14 + 16))
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        v15 = v2[5];
        v16 = v2[7];
        v17 = v2[8];
        v18 = v2[11];
        v19 = *(_QWORD *)(v17 + 16);
        v27[1] = v2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v15);
        swift_release();
        v20 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
        v21 = v28;
        UIButton.configuration.setter(v6);

      }
    }
    v29[0] = *v7;
    v30 = *a1;
    v22 = type metadata accessor for MusicLibrary(0);
    v23 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v29, &v30, v22, v23) & 1) == 0)
    {
      v24 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v25 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
      swift_beginAccess(v25, v29, 1, 0);
      v26 = *v25;
      *v25 = v24;
      swift_bridgeObjectRelease(v26);
    }
  }
}

void sub_10018241C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  _UNKNOWN **v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  char v31[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v29[-1] - v11;
  v13 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v13, v31, 0, 0);
  sub_10005B704((uint64_t)v13, (uint64_t)v12, _s9PlaylistsVMa);
  v14 = sub_10010DF38((uint64_t)v12, (uint64_t)a1);
  sub_10005B748((uint64_t)v12, _s9PlaylistsVMa);
  if ((v14 & 1) == 0)
  {
    if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
      sub_10018624C();
    else
      *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = 1;
    sub_10005B704((uint64_t)v13, (uint64_t)v12, _s9PlaylistsVMa);
    v15 = sub_10010E2B0();
    swift_bridgeObjectRetain();
    sub_10005B748((uint64_t)v12, _s9PlaylistsVMa);
    v16 = v15[2];
    swift_bridgeObjectRelease(v15);
    if (v16)
    {
      v17 = *(int *)(v7 + 32);
      v18 = *(_QWORD *)((char *)v13 + v17);
      v19 = *(uint64_t *)((char *)a1 + v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_10016CD08(v18, v19);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) == 0)
      {
        v21 = sub_1001887F4((uint64_t (*)(uint64_t))sub_100190C58);
        sub_10005B704((uint64_t)v13, (uint64_t)v9, _s9PlaylistsVMa);
        if (!sub_10010E2B0()[2])
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        if (*(_QWORD *)(*(_QWORD *)&v9[*(int *)(v7 + 32)] + 16))
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        sub_10005B748((uint64_t)v9, _s9PlaylistsVMa);
        v22 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
        UIButton.configuration.setter(v6);

      }
    }
    v29[0] = *v13;
    v30 = *a1;
    v23 = type metadata accessor for MusicLibrary(0);
    v24 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v29, &v30, v23, v24) & 1) == 0)
    {
      v25 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v26 = (unint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176));
      swift_beginAccess(v26, v29, 1, 0);
      v27 = *v26;
      *v26 = v25;
      swift_bridgeObjectRelease(v27);
    }
  }
}

void sub_1001827AC(uint64_t *a1)
{
  _OWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  _QWORD v22[2];
  id v23;
  _QWORD v24[3];
  uint64_t v25;
  _BYTE v26[24];
  _OWORD v27[7];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + 1;
  swift_beginAccess(v1 + 1, v26, 0, 0);
  v8 = v1[4];
  v27[2] = v1[3];
  v27[3] = v8;
  v9 = v1[6];
  v27[4] = v1[5];
  v27[5] = v9;
  v10 = v1[2];
  v27[0] = v1[1];
  v27[1] = v10;
  sub_100048B2C(v27);
  v11 = sub_1000466AC((uint64_t)v27, (uint64_t)a1);
  sub_100048B98((uint64_t *)v27);
  if ((v11 & 1) == 0)
  {
    if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
      sub_100186914();
    else
      *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
    if (*(_QWORD *)(v2[13] + 16))
    {
      v12 = v2[9];
      v13 = a1[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_10016CD08(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        v23 = sub_1001887F4(sub_100191038);
        if (!*(_QWORD *)(v2[13] + 16))
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        v15 = *(_QWORD *)(v2[9] + 16);
        v22[1] = v2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15)
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v16 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
        v17 = v23;
        UIButton.configuration.setter(v6);

      }
    }
    v24[0] = *v7;
    v25 = *a1;
    v18 = type metadata accessor for MusicLibrary(0);
    v19 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v24, &v25, v18, v19) & 1) == 0)
    {
      v20 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v21 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
      swift_beginAccess(v21, v24, 1, 0);
      *v21 = v20;
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100182AD4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  _QWORD v21[2];
  id v22;
  _QWORD v23[3];
  uint64_t v24;
  _BYTE v25[24];
  _OWORD v26[5];
  uint64_t v27;

  v2 = (_QWORD *)v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v25, 0, 0);
  v8 = *(_OWORD *)(v1 + 64);
  v26[2] = *(_OWORD *)(v1 + 48);
  v26[3] = v8;
  v26[4] = *(_OWORD *)(v1 + 80);
  v27 = *(_QWORD *)(v1 + 96);
  v9 = *(_OWORD *)(v1 + 32);
  v26[0] = *(_OWORD *)(v1 + 16);
  v26[1] = v9;
  sub_1001A7DE4(v26);
  v10 = sub_10045018C((uint64_t)v26, (uint64_t)a1);
  sub_1001A7E50((uint64_t *)v26);
  if ((v10 & 1) == 0)
  {
    if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
      sub_100187088();
    else
      *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
    if (*(_QWORD *)(v2[12] + 16))
    {
      v11 = v2[8];
      v12 = a1[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_10016CD08(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v22 = sub_100188770((uint64_t)&unk_1010B41C8, (uint64_t)sub_1001A78C0, (uint64_t)&unk_1010B41E0);
        if (!*(_QWORD *)(v2[12] + 16))
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        v14 = *(_QWORD *)(v2[8] + 16);
        v21[1] = v2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v14)
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v15 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
        v16 = v22;
        UIButton.configuration.setter(v6);

      }
    }
    v23[0] = *v7;
    v24 = *a1;
    v17 = type metadata accessor for MusicLibrary(0);
    v18 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v23, &v24, v17, v18) & 1) == 0)
    {
      v19 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v20 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
      swift_beginAccess(v20, v23, 1, 0);
      *v20 = v19;
      swift_bridgeObjectRelease();
    }
  }
}

double sub_100182E0C(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  int v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _UNKNOWN **v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  unint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  char v51[24];
  _OWORD v52[4];
  _OWORD v53[5];

  v2 = (_QWORD *)v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_OWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v51, 0, 0);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(unsigned __int8 *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + 40);
  v46 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 48);
  v44 = *(unsigned __int8 *)(v1 + 56);
  v43 = *(unsigned __int8 *)(v1 + 57);
  v42 = *(unsigned __int8 *)(v1 + 58);
  v41 = *(unsigned __int8 *)(v1 + 59);
  v11 = *(_QWORD *)(v1 + 72);
  v40 = *(_QWORD *)(v1 + 64);
  v12 = type metadata accessor for MusicLibrary(0);
  v13 = *a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = v13;
  v48 = v12;
  if ((static MusicLibrary.== infix(_:_:)(v7, v13) & 1) == 0
    || ((v8 ^ *((unsigned __int8 *)a1 + 8)) & 1) != 0
    || ((v14 = a1[2], v15 = a1[3], v46 != v14) || v9 != v15)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v46, v9, v14, v15, 0) & 1) == 0
    || (sub_10016CD08(v10, a1[4]) & 1) == 0
    || (v16 = *((unsigned __int8 *)a1 + 41), sub_1005CFF5C(v44), (v17 & 1) == 0)
    || ((v43 ^ v16) & 1) != 0
    || (v18 = *((unsigned __int8 *)a1 + 43), sub_1005CFF5C(v42), (v19 & 1) == 0)
    || ((v41 ^ v18) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_12:
    if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 128)) == 1)
      sub_100187858();
    else
      *((_BYTE *)v2 + *(_QWORD *)(*v2 + 184)) = 1;
    v20 = v6[1];
    v53[0] = *v6;
    v21 = v6[2];
    v22 = v6[3];
    v53[1] = v20;
    v53[2] = v21;
    v53[3] = v22;
    sub_1001A829C(v53);
    v23 = sub_1008AABBC();
    swift_bridgeObjectRetain();
    sub_1001A82EC((uint64_t *)v53);
    v24 = v23[2];
    swift_bridgeObjectRelease();
    if (v24)
    {
      v25 = v2[6];
      v26 = a1[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = sub_10016CD08(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        v28 = sub_1001887F4((uint64_t (*)(uint64_t))sub_100191408);
        v29 = v6[1];
        v52[0] = *v6;
        v52[1] = v29;
        v30 = v6[3];
        v52[2] = v6[2];
        v52[3] = v30;
        sub_1001A829C(v52);
        v31 = v45;
        sub_10017DFA0();
        sub_1001A82EC((uint64_t *)v52);
        v32 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
        UIButton.configuration.setter(v31);

      }
    }
    v49[0] = *(_QWORD *)v6;
    v50 = v47;
    v33 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v49, &v50, v48, v33) & 1) == 0)
    {
      v35 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v36 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 176));
      swift_beginAccess(v36, v49, 1, 0);
      *v36 = v35;
      *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
    }
    return result;
  }
  v37 = a1[6];
  v38 = a1[7];
  if (v40 == v37 && v11 == v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v11, v37, v38, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if ((v39 & 1) == 0)
    goto LABEL_12;
  return result;
}

void sub_100183244(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  char v33[24];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A2250);
  __chkstk_darwin(v4);
  v6 = (char *)&v31[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s11MusicVideosVMa(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v31[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v31[-1] - v11;
  v13 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v13, v33, 0, 0);
  sub_10005B704((uint64_t)v13, (uint64_t)v12, _s11MusicVideosVMa);
  v14 = sub_1007606D4((uint64_t)v12, (uint64_t)a1);
  sub_10005B748((uint64_t)v12, _s11MusicVideosVMa);
  if ((v14 & 1) == 0)
  {
    if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
      sub_100187F3C();
    else
      *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = 1;
    sub_10005B704((uint64_t)v13, (uint64_t)v12, _s11MusicVideosVMa);
    v15 = sub_10075F4EC();
    sub_10005B748((uint64_t)v12, _s11MusicVideosVMa);
    v16 = v15[2];
    swift_bridgeObjectRelease(v15);
    if (v16)
    {
      v17 = *(int *)(v7 + 32);
      v18 = *(_QWORD *)((char *)v13 + v17);
      v19 = *(uint64_t *)((char *)a1 + v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_10016CD08(v18, v19);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
      if ((v20 & 1) == 0)
      {
        v21 = sub_1001887F4(sub_1001916E8);
        sub_10005B704((uint64_t)v13, (uint64_t)v10, _s11MusicVideosVMa);
        v22 = sub_10075F4EC();
        v23 = v22[2];
        swift_bridgeObjectRelease(v22);
        if (!v23)
        {
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
          __break(1u);
          return;
        }
        if (*(_QWORD *)(*(_QWORD *)&v10[*(int *)(v7 + 32)] + 16))
          static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        else
          static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
        sub_10005B748((uint64_t)v10, _s11MusicVideosVMa);
        v24 = type metadata accessor for UIButton.Configuration(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 0, 1, v24);
        UIButton.configuration.setter(v6);

      }
    }
    v31[0] = *v13;
    v32 = *a1;
    v25 = type metadata accessor for MusicLibrary(0);
    v26 = sub_100048748((unint64_t *)&qword_1011A3820, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v31, &v32, v25, v26) & 1) == 0)
    {
      v27 = sub_100042190((uint64_t)_swiftEmptyArrayStorage);
      v28 = (unint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176));
      swift_beginAccess(v28, v31, 1, 0);
      v29 = *v28;
      *v28 = v27;
      swift_bridgeObjectRelease(v29);
    }
  }
}

void sub_1001835D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  _BYTE v71[24];
  __int128 v72;
  __int128 v73;
  void *v74;
  char v75[24];
  uint64_t v76;
  uint64_t v77;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v68 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007E8C(&qword_1011A39D8);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A39E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v70 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A03B0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v12);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v63 = v13;
    v64 = v9;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048B14(v16, (uint64_t)qword_1011C9DF8);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v65 = v6;
    if (v20)
    {
      v21 = swift_slowAlloc(12, -1);
      v62 = v5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v72 = v23;
      *(_DWORD *)v22 = 136315138;
      v76 = sub_100322200(0xD000000000000031, 0x8000000100E301F0, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "🔄 Reloading Request=%s", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      v24 = v22;
      v5 = v62;
      swift_slowDealloc(v24, -1, -1);
    }

    v25 = *v1;
    v26 = *(_QWORD *)(*v1 + 144);
    if (*(uint64_t *)((char *)v1 + v26))
    {
      v27 = (uint64_t)v1 + *(_QWORD *)(v25 + 96);
      swift_beginAccess(v27, &v76, 0, 0);
      v28 = sub_10005B704(v27, (uint64_t)v15, _s10TVEpisodesVMa);
      __chkstk_darwin(v28);
      *(&v62 - 2) = (uint64_t)v15;
      v29 = swift_retain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A75DC, &v62 - 4, v29);
      swift_release();
      sub_10005B748((uint64_t)v15, _s10TVEpisodesVMa);
    }
    else
    {
      v30 = (uint64_t)v1 + *(_QWORD *)(v25 + 96);
      swift_beginAccess(v30, &v76, 0, 0);
      sub_10005B704(v30, (uint64_t)v15, _s10TVEpisodesVMa);
      v31 = type metadata accessor for TVSeason(0);
      v32 = type metadata accessor for TVEpisode(0);
      v33 = sub_100048748((unint64_t *)&unk_1011A39F0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      v34 = sub_100048748(&qword_10119FE68, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      MusicLibrarySectionedRequest.init()(v31, v32, v33, v34);
      sub_100668938((uint64_t)v11);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v35, v8);
      v36 = v63;
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v15[*(int *)(v63 + 24)], v8);
      MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)&v15[*(int *)(v36 + 28)]);
      sub_10005B748((uint64_t)v15, _s10TVEpisodesVMa);
      v37 = sub_100049F28(&qword_1011A3A00, &qword_1011A03B0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v38 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v8, v37);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v11, v8);
      *(uint64_t *)((char *)v1 + v26) = v38;
      swift_release();
    }
    v39 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
    swift_beginAccess(v39, v75, 0, 0);
    sub_10004A160(v39, (uint64_t)&v72, (uint64_t *)&unk_1011A3850);
    v40 = *((_QWORD *)&v73 + 1);
    sub_10004FF60((uint64_t)&v72, (uint64_t *)&unk_1011A3850);
    v41 = v65;
    if (!v40)
    {
      if (*(uint64_t *)((char *)v1 + v26))
      {
        v42 = swift_retain();
        v43 = v66;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v42);
        swift_release();
        v44 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v72 = static OS_dispatch_queue.main.getter(v44, v45, v46, v47, v48, v49, v50, v51);
        v52 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v53 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v68, 1, 1, v52);
        v54 = sub_100049F28(&qword_1011A3A08, &qword_1011A39D8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v55 = sub_10006A92C();
        v57 = v69;
        v56 = v70;
        Publisher.receive<A>(on:options:)(&v72, v53, v69, v44, v54, v55);
        sub_10004FF60(v53, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v57);
        v58 = swift_allocObject(&unk_1010B4128, 24, 7);
        swift_weakInit(v58 + 16, v1);
        v59 = sub_100049F28((unint64_t *)&unk_1011A3A10, (uint64_t *)&unk_1011A39E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v60 = Publisher<>.sink(receiveValue:)(sub_1001A759C, v58, v5, v59);
        v61 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v56, v5, v61);
        *((_QWORD *)&v73 + 1) = type metadata accessor for AnyCancellable(0);
        v74 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v72 = v60;
      }
      else
      {
        v74 = 0;
        v72 = 0u;
        v73 = 0u;
      }
      swift_beginAccess(v39, v71, 33, 0);
      sub_1000A5508((uint64_t)&v72, v39, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v71);
    }
  }
}

void sub_100183CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t KeyPath;
  __n128 v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE v111[16];
  char v112[8];
  uint64_t v113;
  char v114[8];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v100 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C(&qword_1011A3980);
  v99 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v98 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3988);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3990);
  __chkstk_darwin(v9);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v84 - v14;
  if (*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128)) == 1)
  {
    v93 = v13;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048B14(v16, (uint64_t)qword_1011C9DF8);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v97 = v5;
    v96 = v6;
    v95 = v8;
    if (v20)
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v102 = v22;
      *(_DWORD *)v21 = 136315138;
      v113 = sub_100322200(0xD000000000000043, 0x8000000100E30150, (uint64_t *)&v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, v114);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "🔄 Reloading Request=%s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }

    v94 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v94))
    {
      swift_beginAccess(v1 + 16, &v113, 0, 0);
      v23 = *(_QWORD *)(v1 + 16);
      v24 = *(_QWORD *)(v1 + 32);
      v25 = *(_QWORD *)(v1 + 40);
      v26 = *(_BYTE *)(v1 + 48);
      v27 = *(_BYTE *)(v1 + 49);
      v28 = *(_BYTE *)(v1 + 50);
      v29 = *(_BYTE *)(v1 + 51);
      v30 = *(_QWORD *)(v1 + 56);
      v31 = *(_QWORD *)(v1 + 64);
      v32 = *(_BYTE *)(v1 + 72);
      v33 = *(_QWORD *)(v1 + 80);
      v34 = *(_QWORD *)(v1 + 88);
      BYTE8(v102) = *(_BYTE *)(v1 + 24);
      v35 = *(_QWORD *)(v1 + 96);
      *(_QWORD *)&v102 = v23;
      *(_QWORD *)&v103 = v24;
      *((_QWORD *)&v103 + 1) = v25;
      LOBYTE(v104) = v26;
      BYTE1(v104) = v27;
      BYTE2(v104) = v28;
      BYTE3(v104) = v29;
      v105 = v30;
      v106 = v31;
      v107 = v32;
      v108 = v33;
      v109 = v34;
      v110 = v35;
      __chkstk_darwin(v36);
      *(&v84 - 2) = (char *)&v102;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A7504, &v84 - 4, v37);
      swift_release();
      v38 = *((_QWORD *)&v103 + 1);
      v39 = v105;
      v40 = v106;
      v41 = v109;
      swift_bridgeObjectRelease(v110);
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v38);
      swift_release();
      v42 = v97;
      v43 = v96;
      v44 = v95;
    }
    else
    {
      v84 = v15;
      swift_beginAccess(v1 + 16, &v113, 0, 0);
      v87 = *(unsigned __int8 *)(v1 + 24);
      v45 = *(void **)(v1 + 40);
      v92 = *(_QWORD *)(v1 + 32);
      v47 = *(_QWORD *)(v1 + 56);
      v46 = *(_QWORD *)(v1 + 64);
      v48 = *(_QWORD *)(v1 + 88);
      v49 = *(_QWORD *)(v1 + 96);
      v86 = type metadata accessor for TitledSection(0);
      v85 = type metadata accessor for RecentlyAddedMusicItem(0);
      v50 = sub_100048748(&qword_1011A3998, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
      swift_retain();
      swift_bridgeObjectRetain();
      v91 = v47;
      swift_bridgeObjectRetain();
      v90 = v46;
      swift_bridgeObjectRetain();
      v89 = v48;
      swift_bridgeObjectRetain();
      v88 = v49;
      swift_bridgeObjectRetain();
      MusicLibrarySectionedRequest.init()(v86, v85, &protocol witness table for TitledSection, v50);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v51, v9);
      LODWORD(v47) = v87;
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v87, v9);
      v52._countAndFlagsBits = v92;
      v92 = (uint64_t)v45;
      v52._object = v45;
      MusicLibrarySectionedRequest.filterItems(text:)(v52);
      MusicLibrarySectionedRequest.limit.setter(60, v9);
      if ((_DWORD)v47 == 1)
      {
        KeyPath = swift_getKeyPath(&unk_100EACE98);
        MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 0, v9);
        v54 = swift_release();
        MusicLibrarySectionedRequest.excludeNonPinnedPlaylists.setter(1, v9, v54);
      }
      else
      {
        v56 = swift_getKeyPath(&unk_100EACE70);
        MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v56, 0, v9);
        v55 = swift_release();
      }
      v57 = v97;
      v58 = v96;
      v44 = v95;
      v59 = v84;
      v60 = v93;
      (*(void (**)(char *, char *, uint64_t, __n128))(v93 + 32))(v84, v11, v9, v55);
      swift_bridgeObjectRelease(v88);
      swift_bridgeObjectRelease(v89);
      swift_bridgeObjectRelease(v90);
      swift_bridgeObjectRelease(v91);
      swift_bridgeObjectRelease(v92);
      swift_release();
      v61 = sub_100049F28(&qword_1011A39A0, &qword_1011A3990, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v62 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v9, v61);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v9);
      *(_QWORD *)(v1 + v94) = v62;
      swift_release();
      v43 = v58;
      v42 = v57;
    }
    v63 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v63, v112, 0, 0);
    sub_10004A160(v63, (uint64_t)&v102, (uint64_t *)&unk_1011A3850);
    v64 = *((_QWORD *)&v103 + 1);
    sub_10004FF60((uint64_t)&v102, (uint64_t *)&unk_1011A3850);
    if (!v64)
    {
      if (*(_QWORD *)(v1 + v94))
      {
        v65 = swift_retain();
        v66 = v98;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v65);
        swift_release();
        v67 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v102 = static OS_dispatch_queue.main.getter(v67, v68, v69, v70, v71, v72, v73, v74);
        v75 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v76 = (uint64_t)v100;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v100, 1, 1, v75);
        v77 = sub_100049F28(&qword_1011A39A8, &qword_1011A3980, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v78 = sub_10006A92C();
        v79 = v101;
        Publisher.receive<A>(on:options:)(&v102, v76, v101, v67, v77, v78);
        sub_10004FF60(v76, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v79);
        v80 = swift_allocObject(&unk_1010B4088, 24, 7);
        swift_weakInit(v80 + 16, v1);
        v81 = sub_100049F28((unint64_t *)&unk_1011A39B0, &qword_1011A3988, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v82 = Publisher<>.sink(receiveValue:)(sub_1001A74C0, v80, v42, v81);
        v83 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v44, v42, v83);
        *((_QWORD *)&v103 + 1) = type metadata accessor for AnyCancellable(0);
        v104 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v102 = v82;
      }
      else
      {
        v104 = 0;
        v102 = 0u;
        v103 = 0u;
      }
      swift_beginAccess(v63, v111, 33, 0);
      sub_1000A5508((uint64_t)&v102, v63, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v111);
    }
  }
}

uint64_t sub_100184574()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  _BYTE v73[24];
  __int128 v74;
  __int128 v75;
  void *v76;
  char v77[24];
  uint64_t v78;
  uint64_t v79;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v70 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011A38C8);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v68 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A38D0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v72 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A38D8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s6AlbumsVMa(0);
  result = __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + *(_QWORD *)(*v0 + 128)) == 1)
  {
    v66 = result;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048B14(v16, (uint64_t)qword_1011C9DF8);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v67 = v6;
    if (v20)
    {
      v21 = swift_slowAlloc(12, -1);
      v65 = v5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc(32, -1);
      v64 = v9;
      v24 = v23;
      *(_QWORD *)&v74 = v23;
      *(_DWORD *)v22 = 136315138;
      v78 = sub_100322200(0xD000000000000032, 0x8000000100E300D0, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "🔄 Reloading Request=%s", v22, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      v25 = v24;
      v9 = v64;
      swift_slowDealloc(v25, -1, -1);
      v26 = v22;
      v5 = v65;
      swift_slowDealloc(v26, -1, -1);
    }

    v27 = *v1;
    v28 = *(_QWORD *)(*v1 + 144);
    v29 = *(uint64_t *)((char *)v1 + v28);
    if (v29)
    {
      v30 = (uint64_t)v1 + *(_QWORD *)(v27 + 96);
      swift_beginAccess(v30, &v78, 0, 0);
      v31 = sub_10005B704(v30, (uint64_t)v15, _s6AlbumsVMa);
      __chkstk_darwin(v31);
      *(&v64 - 2) = (uint64_t)v15;
      v32 = swift_retain(v29);
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A723C, &v64 - 4, v32);
      swift_release(v29);
      sub_10005B748((uint64_t)v15, _s6AlbumsVMa);
    }
    else
    {
      v33 = (uint64_t)v1 + *(_QWORD *)(v27 + 96);
      swift_beginAccess(v33, &v78, 0, 0);
      sub_10005B704(v33, (uint64_t)v15, _s6AlbumsVMa);
      v34 = type metadata accessor for TitledSection(0);
      v35 = type metadata accessor for Album(0);
      MusicLibrarySectionedRequest.init()(v34, v35, &protocol witness table for TitledSection, &protocol witness table for Album);
      swift_retain(*(_QWORD *)v15);
      MusicLibrarySectionedRequest.library.setter(v36, v8);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v15[8], v8);
      MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)&v15[*(int *)(v66 + 28)]);
      sub_100234580((uint64_t)v11);
      sub_1002348F8();
      sub_100234C2C((uint64_t)v11);
      sub_10005B748((uint64_t)v15, _s6AlbumsVMa);
      v37 = sub_100049F28(&qword_1011A38E0, &qword_1011A38D8, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v38 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v8, v37);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v39 = *(uint64_t *)((char *)v1 + v28);
      *(uint64_t *)((char *)v1 + v28) = v38;
      swift_release(v39);
    }
    v40 = v67;
    v41 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
    swift_beginAccess(v41, v77, 0, 0);
    sub_10004A160(v41, (uint64_t)&v74, (uint64_t *)&unk_1011A3850);
    v42 = *((_QWORD *)&v75 + 1);
    result = sub_10004FF60((uint64_t)&v74, (uint64_t *)&unk_1011A3850);
    if (!v42)
    {
      v43 = *(uint64_t *)((char *)v1 + v28);
      if (v43)
      {
        v44 = swift_retain(*(uint64_t *)((char *)v1 + v28));
        v45 = v68;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v44);
        swift_release(v43);
        v46 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v74 = static OS_dispatch_queue.main.getter(v46, v47, v48, v49, v50, v51, v52, v53);
        v54 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v55 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v70, 1, 1, v54);
        v56 = sub_100049F28(&qword_1011A38E8, &qword_1011A38C8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v57 = sub_10006A92C();
        v59 = v71;
        v58 = v72;
        Publisher.receive<A>(on:options:)(&v74, v55, v71, v46, v56, v57);
        sub_10004FF60(v55, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v59);
        v60 = swift_allocObject(&unk_1010B3FE8, 24, 7);
        swift_weakInit(v60 + 16, v1);
        v61 = sub_100049F28(&qword_1011A38F0, &qword_1011A38D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v62 = Publisher<>.sink(receiveValue:)(sub_1001A71FC, v60, v5, v61);
        v63 = swift_release(v60);
        (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v58, v5, v63);
        *((_QWORD *)&v75 + 1) = type metadata accessor for AnyCancellable(0);
        v76 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v74 = v62;
      }
      else
      {
        v76 = 0;
        v74 = 0u;
        v75 = 0u;
      }
      swift_beginAccess(v41, v73, 33, 0);
      sub_1000A5508((uint64_t)&v74, v41, (uint64_t *)&unk_1011A3850);
      return swift_endAccess(v73);
    }
  }
  return result;
}

void sub_100184C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  _BYTE v68[24];
  __int128 v69;
  __int128 v70;
  void *v71;
  char v72[24];
  _BYTE v73[24];
  __int128 v74;
  _BYTE v75[28];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v66 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011A3B10);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v64 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3B18);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3B20);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128)) == 1)
  {
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048B14(v13, (uint64_t)qword_1011C9DF8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    v17 = os_log_type_enabled(v15, v16);
    v63 = v5;
    v62 = v6;
    v61 = v8;
    if (v17)
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v74 = v19;
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)&v69 = sub_100322200(0xD000000000000033, 0x8000000100E30370, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, (char *)&v69 + 8);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "🔄 Reloading Request=%s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    v20 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v20))
    {
      swift_beginAccess(v1 + 16, v73, 0, 0);
      v21 = *(_QWORD *)(v1 + 16);
      v22 = *(_QWORD *)(v1 + 32);
      v23 = *(_QWORD *)(v1 + 40);
      v24 = *(_QWORD *)(v1 + 48);
      v25 = *(_BYTE *)(v1 + 56);
      v26 = *(_BYTE *)(v1 + 57);
      v27 = *(_BYTE *)(v1 + 58);
      BYTE8(v74) = *(_BYTE *)(v1 + 24);
      v28 = *(_BYTE *)(v1 + 59);
      *(_QWORD *)&v74 = v21;
      *(_QWORD *)v75 = v22;
      *(_QWORD *)&v75[8] = v23;
      *(_QWORD *)&v75[16] = v24;
      v75[24] = v25;
      v75[25] = v26;
      v75[26] = v27;
      v75[27] = v28;
      __chkstk_darwin(v29);
      *(&v61 - 2) = (char *)&v74;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A7B94, &v61 - 4, v30);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess(v1 + 16, v73, 0, 0);
      v31 = *(_OWORD *)(v1 + 32);
      v74 = *(_OWORD *)(v1 + 16);
      *(_OWORD *)v75 = v31;
      *(_OWORD *)&v75[12] = *(_OWORD *)(v1 + 44);
      sub_1001A7ACC(&v74);
      v32 = type metadata accessor for TitledSection(0);
      v33 = type metadata accessor for Artist(0);
      MusicLibrarySectionedRequest.init()(v32, v33, &protocol witness table for TitledSection, &protocol witness table for Artist);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v34, v9);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v74), v9);
      MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)v75);
      sub_1002D8960();
      sub_1002D8BE4();
      sub_1001A7B10((uint64_t *)&v74);
      v35 = sub_100049F28(&qword_1011A3B28, &qword_1011A3B20, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v36 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v9, v35);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(_QWORD *)(v1 + v20) = v36;
    }
    swift_release();
    v37 = v63;
    v38 = v62;
    v39 = v61;
    v40 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v40, v72, 0, 0);
    sub_10004A160(v40, (uint64_t)&v69, (uint64_t *)&unk_1011A3850);
    v41 = *((_QWORD *)&v70 + 1);
    sub_10004FF60((uint64_t)&v69, (uint64_t *)&unk_1011A3850);
    if (!v41)
    {
      if (*(_QWORD *)(v1 + v20))
      {
        v42 = swift_retain();
        v43 = v64;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v42);
        swift_release();
        v44 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v69 = static OS_dispatch_queue.main.getter(v44, v45, v46, v47, v48, v49, v50, v51);
        v52 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v53 = (uint64_t)v66;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v66, 1, 1, v52);
        v54 = sub_100049F28(&qword_1011A3B30, &qword_1011A3B10, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v55 = sub_10006A92C();
        v56 = v67;
        Publisher.receive<A>(on:options:)(&v69, v53, v67, v44, v54, v55);
        sub_10004FF60(v53, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v56);
        v57 = swift_allocObject(&unk_1010B4308, 24, 7);
        swift_weakInit(v57 + 16, v1);
        v58 = sub_100049F28(&qword_1011A3B38, &qword_1011A3B18, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v59 = Publisher<>.sink(receiveValue:)(sub_1001A7B54, v57, v37, v58);
        v60 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v39, v37, v60);
        *((_QWORD *)&v70 + 1) = type metadata accessor for AnyCancellable(0);
        v71 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v69 = v59;
      }
      else
      {
        v71 = 0;
        v69 = 0u;
        v70 = 0u;
      }
      swift_beginAccess(v40, v68, 33, 0);
      sub_1000A5508((uint64_t)&v69, v40, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v68);
    }
  }
}

void sub_1001852D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[24];
  char v99[24];
  uint64_t v100;
  char v101[8];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3B68);
  v88 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v87 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A3B70);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A3B78);
  __chkstk_darwin(v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v80 = v12;
    v86 = v7;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048B14(v15, (uint64_t)qword_1011C9DF8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v85 = v8;
    v84 = v10;
    v83 = v5;
    if (v19)
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v89 = v21;
      *(_DWORD *)v20 = 136315138;
      v100 = sub_100322200(0xD000000000000035, 0x8000000100E30410, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "🔄 Reloading Request=%s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }

    v82 = v4;
    v81 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v81))
    {
      swift_beginAccess(v1 + 16, &v100, 0, 0);
      v22 = *(_QWORD *)(v1 + 16);
      v23 = *(_QWORD *)(v1 + 32);
      v24 = *(_QWORD *)(v1 + 40);
      v25 = *(_BYTE *)(v1 + 48);
      v26 = *(_BYTE *)(v1 + 49);
      v27 = *(_BYTE *)(v1 + 50);
      v28 = *(_BYTE *)(v1 + 51);
      v29 = *(_QWORD *)(v1 + 56);
      v30 = *(_QWORD *)(v1 + 64);
      v31 = *(_BYTE *)(v1 + 72);
      v32 = *(_QWORD *)(v1 + 80);
      v33 = *(_QWORD *)(v1 + 88);
      BYTE8(v89) = *(_BYTE *)(v1 + 24);
      v34 = *(_QWORD *)(v1 + 96);
      *(_QWORD *)&v89 = v22;
      *(_QWORD *)&v90 = v23;
      *((_QWORD *)&v90 + 1) = v24;
      LOBYTE(v91) = v25;
      BYTE1(v91) = v26;
      BYTE2(v91) = v27;
      BYTE3(v91) = v28;
      v92 = v29;
      v93 = v30;
      v94 = v31;
      v95 = v32;
      v96 = v33;
      v97 = v34;
      __chkstk_darwin(v35);
      *(&v75 - 2) = (uint64_t)&v89;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A7D00, &v75 - 4, v36);
      swift_release();
      v37 = *((_QWORD *)&v90 + 1);
      v38 = v92;
      v39 = v93;
      v40 = v96;
      swift_bridgeObjectRelease(v97);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v37);
      swift_release();
      v41 = v81;
    }
    else
    {
      swift_beginAccess(v1 + 16, &v100, 0, 0);
      v78 = *(unsigned __int8 *)(v1 + 24);
      v42 = *(void **)(v1 + 40);
      v79 = *(_QWORD *)(v1 + 32);
      v43 = *(_QWORD *)(v1 + 64);
      v77 = *(_QWORD *)(v1 + 56);
      v44 = *(_QWORD *)(v1 + 88);
      v45 = *(_QWORD *)(v1 + 96);
      v76 = type metadata accessor for TitledSection(0);
      v75 = type metadata accessor for Composer(0);
      v46 = sub_100048748(&qword_1011A3B80, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MusicLibrarySectionedRequest.init()(v76, v75, &protocol witness table for TitledSection, v46);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v47, v11);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v78, v11);
      v48._countAndFlagsBits = v79;
      v48._object = v42;
      MusicLibrarySectionedRequest.filterItems(text:)(v48);
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v77);
      swift_bridgeObjectRelease(v42);
      swift_release();
      v49 = sub_100049F28(&qword_1011A3B88, &qword_1011A3B78, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v50 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v11, v49);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v14, v11);
      v41 = v81;
      *(_QWORD *)(v1 + v81) = v50;
      swift_release();
    }
    v51 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v51, v99, 0, 0);
    sub_10004A160(v51, (uint64_t)&v89, (uint64_t *)&unk_1011A3850);
    v52 = *((_QWORD *)&v90 + 1);
    sub_10004FF60((uint64_t)&v89, (uint64_t *)&unk_1011A3850);
    v53 = v86;
    v54 = v85;
    v55 = v84;
    v56 = v83;
    v57 = (uint64_t)v82;
    if (!v52)
    {
      if (*(_QWORD *)(v1 + v41))
      {
        v58 = swift_retain();
        v59 = v87;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v58);
        swift_release();
        v60 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v89 = static OS_dispatch_queue.main.getter(v60, v61, v62, v63, v64, v65, v66, v67);
        v68 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v57, 1, 1, v68);
        v69 = sub_100049F28(&qword_1011A3B90, &qword_1011A3B68, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v70 = sub_10006A92C();
        Publisher.receive<A>(on:options:)(&v89, v57, v56, v60, v69, v70);
        sub_10004FF60(v57, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v56);
        v71 = swift_allocObject(&unk_1010B43A8, 24, 7);
        swift_weakInit(v71 + 16, v1);
        v72 = sub_100049F28(&qword_1011A3B98, &qword_1011A3B70, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v73 = Publisher<>.sink(receiveValue:)(sub_1001A7CC0, v71, v53, v72);
        v74 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v55, v53, v74);
        *((_QWORD *)&v90 + 1) = type metadata accessor for AnyCancellable(0);
        v91 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v89 = v73;
      }
      else
      {
        v91 = 0;
        v89 = 0u;
        v90 = 0u;
      }
      swift_beginAccess(v51, v98, 33, 0);
      sub_1000A5508((uint64_t)&v89, v51, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v98);
    }
  }
}

void sub_100185AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[24];
  char v99[24];
  uint64_t v100;
  char v101[8];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3BC0);
  v88 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v87 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A3BC8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A3BD0);
  __chkstk_darwin(v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v80 = v12;
    v86 = v7;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048B14(v15, (uint64_t)qword_1011C9DF8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v85 = v8;
    v84 = v10;
    v83 = v5;
    if (v19)
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v89 = v21;
      *(_DWORD *)v20 = 136315138;
      v100 = sub_100322200(0xD000000000000032, 0x8000000100E30490, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "🔄 Reloading Request=%s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }

    v82 = v4;
    v81 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v81))
    {
      swift_beginAccess(v1 + 16, &v100, 0, 0);
      v22 = *(_QWORD *)(v1 + 16);
      v23 = *(_QWORD *)(v1 + 32);
      v24 = *(_QWORD *)(v1 + 40);
      v25 = *(_BYTE *)(v1 + 48);
      v26 = *(_BYTE *)(v1 + 49);
      v27 = *(_BYTE *)(v1 + 50);
      v28 = *(_BYTE *)(v1 + 51);
      v29 = *(_QWORD *)(v1 + 56);
      v30 = *(_QWORD *)(v1 + 64);
      v31 = *(_BYTE *)(v1 + 72);
      v32 = *(_QWORD *)(v1 + 80);
      v33 = *(_QWORD *)(v1 + 88);
      BYTE8(v89) = *(_BYTE *)(v1 + 24);
      v34 = *(_QWORD *)(v1 + 96);
      *(_QWORD *)&v89 = v22;
      *(_QWORD *)&v90 = v23;
      *((_QWORD *)&v90 + 1) = v24;
      LOBYTE(v91) = v25;
      BYTE1(v91) = v26;
      BYTE2(v91) = v27;
      BYTE3(v91) = v28;
      v92 = v29;
      v93 = v30;
      v94 = v31;
      v95 = v32;
      v96 = v33;
      v97 = v34;
      __chkstk_darwin(v35);
      *(&v75 - 2) = (uint64_t)&v89;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A7EFC, &v75 - 4, v36);
      swift_release();
      v37 = *((_QWORD *)&v90 + 1);
      v38 = v92;
      v39 = v93;
      v40 = v96;
      swift_bridgeObjectRelease(v97);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v37);
      swift_release();
      v41 = v81;
    }
    else
    {
      swift_beginAccess(v1 + 16, &v100, 0, 0);
      v78 = *(unsigned __int8 *)(v1 + 24);
      v42 = *(void **)(v1 + 40);
      v79 = *(_QWORD *)(v1 + 32);
      v43 = *(_QWORD *)(v1 + 64);
      v77 = *(_QWORD *)(v1 + 56);
      v45 = *(_QWORD *)(v1 + 88);
      v44 = *(_QWORD *)(v1 + 96);
      v76 = type metadata accessor for TitledSection(0);
      v46 = type metadata accessor for Genre(0);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MusicLibrarySectionedRequest.init()(v76, v46, &protocol witness table for TitledSection, &protocol witness table for Genre);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v47, v11);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v78, v11);
      v48._countAndFlagsBits = v79;
      v48._object = v42;
      MusicLibrarySectionedRequest.filterItems(text:)(v48);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v77);
      swift_bridgeObjectRelease(v42);
      swift_release();
      v49 = sub_100049F28(&qword_1011A3BD8, &qword_1011A3BD0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v50 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v11, v49);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v14, v11);
      v41 = v81;
      *(_QWORD *)(v1 + v81) = v50;
      swift_release();
    }
    v51 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v51, v99, 0, 0);
    sub_10004A160(v51, (uint64_t)&v89, (uint64_t *)&unk_1011A3850);
    v52 = *((_QWORD *)&v90 + 1);
    sub_10004FF60((uint64_t)&v89, (uint64_t *)&unk_1011A3850);
    v53 = v86;
    v54 = v85;
    v55 = v84;
    v56 = v83;
    v57 = (uint64_t)v82;
    if (!v52)
    {
      if (*(_QWORD *)(v1 + v41))
      {
        v58 = swift_retain();
        v59 = v87;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v58);
        swift_release();
        v60 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v89 = static OS_dispatch_queue.main.getter(v60, v61, v62, v63, v64, v65, v66, v67);
        v68 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v57, 1, 1, v68);
        v69 = sub_100049F28(&qword_1011A3BE0, &qword_1011A3BC0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v70 = sub_10006A92C();
        Publisher.receive<A>(on:options:)(&v89, v57, v56, v60, v69, v70);
        sub_10004FF60(v57, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v56);
        v71 = swift_allocObject(&unk_1010B4448, 24, 7);
        swift_weakInit(v71 + 16, v1);
        v72 = sub_100049F28(&qword_1011A3BE8, &qword_1011A3BC8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v73 = Publisher<>.sink(receiveValue:)(sub_1001A7EBC, v71, v53, v72);
        v74 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v55, v53, v74);
        *((_QWORD *)&v90 + 1) = type metadata accessor for AnyCancellable(0);
        v91 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v89 = v73;
      }
      else
      {
        v91 = 0;
        v89 = 0u;
        v90 = 0u;
      }
      swift_beginAccess(v51, v98, 33, 0);
      sub_1000A5508((uint64_t)&v89, v51, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v98);
    }
  }
}

void sub_10018624C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  _BYTE v71[24];
  __int128 v72;
  __int128 v73;
  void *v74;
  char v75[24];
  uint64_t v76;
  uint64_t v77;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v68 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100007E8C(&qword_1011A3C10);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3C18);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v70 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011A3C20);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v12);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + *(_QWORD *)(*v0 + 128)) == 1)
  {
    v64 = v13;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048B14(v16, (uint64_t)qword_1011C9DF8);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v65 = v6;
    if (v20)
    {
      v21 = swift_slowAlloc(12, -1);
      v63 = v5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc(32, -1);
      v62 = v9;
      v24 = v23;
      *(_QWORD *)&v72 = v23;
      *(_DWORD *)v22 = 136315138;
      v76 = sub_100322200(0xD000000000000031, 0x8000000100E30510, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "🔄 Reloading Request=%s", v22, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      v25 = v24;
      v9 = v62;
      swift_slowDealloc(v25, -1, -1);
      v26 = v22;
      v5 = v63;
      swift_slowDealloc(v26, -1, -1);
    }

    v27 = *v1;
    v28 = *(_QWORD *)(*v1 + 144);
    if (*(uint64_t *)((char *)v1 + v28))
    {
      v29 = (uint64_t)v1 + *(_QWORD *)(v27 + 96);
      swift_beginAccess(v29, &v76, 0, 0);
      v30 = sub_10005B704(v29, (uint64_t)v15, _s9PlaylistsVMa);
      __chkstk_darwin(v30);
      *(&v62 - 2) = (uint64_t)v15;
      v31 = swift_retain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A825C, &v62 - 4, v31);
      swift_release();
      sub_10005B748((uint64_t)v15, _s9PlaylistsVMa);
    }
    else
    {
      v32 = (uint64_t)v1 + *(_QWORD *)(v27 + 96);
      swift_beginAccess(v32, &v76, 0, 0);
      sub_10005B704(v32, (uint64_t)v15, _s9PlaylistsVMa);
      v33 = type metadata accessor for TitledSection(0);
      v34 = type metadata accessor for Playlist.Folder.Item(0);
      v35 = sub_100048748(&qword_1011A18B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item, (uint64_t)&protocol conformance descriptor for Playlist.Folder.Item);
      MusicLibrarySectionedRequest.init()(v33, v34, &protocol witness table for TitledSection, v35);
      MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v8);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v36, v8);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v15[8], v8);
      sub_10010A708((uint64_t)v11);
      sub_10010AA98();
      sub_10010ADA8();
      MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)&v15[*(int *)(v64 + 28)]);
      sub_10005B748((uint64_t)v15, _s9PlaylistsVMa);
      v37 = sub_100049F28(&qword_1011A3C30, (uint64_t *)&unk_1011A3C20, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v38 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v8, v37);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      *(uint64_t *)((char *)v1 + v28) = v38;
      swift_release();
    }
    v39 = v65;
    v40 = (uint64_t)v1 + *(_QWORD *)(*v1 + 152);
    swift_beginAccess(v40, v75, 0, 0);
    sub_10004A160(v40, (uint64_t)&v72, (uint64_t *)&unk_1011A3850);
    v41 = *((_QWORD *)&v73 + 1);
    sub_10004FF60((uint64_t)&v72, (uint64_t *)&unk_1011A3850);
    if (!v41)
    {
      if (*(uint64_t *)((char *)v1 + v28))
      {
        v42 = swift_retain();
        v43 = v66;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v42);
        swift_release();
        v44 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v72 = static OS_dispatch_queue.main.getter(v44, v45, v46, v47, v48, v49, v50, v51);
        v52 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v53 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v68, 1, 1, v52);
        v54 = sub_100049F28(&qword_1011A3C38, &qword_1011A3C10, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v55 = sub_10006A92C();
        v57 = v69;
        v56 = v70;
        Publisher.receive<A>(on:options:)(&v72, v53, v69, v44, v54, v55);
        sub_10004FF60(v53, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v57);
        v58 = swift_allocObject(&unk_1010B44E8, 24, 7);
        swift_weakInit(v58 + 16, v1);
        v59 = sub_100049F28(&qword_1011A3C40, &qword_1011A3C18, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v60 = Publisher<>.sink(receiveValue:)(sub_1001A821C, v58, v5, v59);
        v61 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v56, v5, v61);
        *((_QWORD *)&v73 + 1) = type metadata accessor for AnyCancellable(0);
        v74 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v72 = v60;
      }
      else
      {
        v74 = 0;
        v72 = 0u;
        v73 = 0u;
      }
      swift_beginAccess(v40, v71, 33, 0);
      sub_1000A5508((uint64_t)&v72, v40, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v71);
    }
  }
}

void sub_100186914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  _BYTE v81[24];
  __int128 v82;
  __int128 v83;
  void *v84;
  char v85[24];
  _BYTE v86[24];
  __int128 v87;
  Swift::String v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v80 = (char *)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011A3AA8);
  v79 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v78 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3AB0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_10119D2D0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128)) == 1)
  {
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048B14(v14, (uint64_t)qword_1011C9DF8);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    v18 = os_log_type_enabled(v16, v17);
    v77 = v6;
    v76 = v7;
    v75 = v9;
    v74 = v4;
    if (v18)
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v87 = v20;
      *(_DWORD *)v19 = 136315138;
      *(_QWORD *)&v82 = sub_100322200(0xD000000000000037, 0x8000000100E302F0, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, (char *)&v82 + 8);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "🔄 Reloading Request=%s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    v21 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v21))
    {
      swift_beginAccess(v1 + 16, v86, 0, 0);
      v73[1] = v73;
      v22 = *(_QWORD *)(v1 + 16);
      v23 = *(_QWORD *)(v1 + 32);
      v24 = *(void **)(v1 + 40);
      v25 = *(_BYTE *)(v1 + 48);
      v26 = *(_BYTE *)(v1 + 49);
      v27 = *(_BYTE *)(v1 + 50);
      v28 = *(_BYTE *)(v1 + 51);
      v29 = *(_QWORD *)(v1 + 56);
      v30 = *(_QWORD *)(v1 + 64);
      v31 = *(_QWORD *)(v1 + 72);
      v32 = *(_BYTE *)(v1 + 80);
      v33 = *(_QWORD *)(v1 + 88);
      v34 = *(_QWORD *)(v1 + 96);
      BYTE8(v87) = *(_BYTE *)(v1 + 24);
      v35 = *(_QWORD *)(v1 + 104);
      *(_QWORD *)&v87 = v22;
      v88._countAndFlagsBits = v23;
      v88._object = v24;
      LOBYTE(v89) = v25;
      BYTE1(v89) = v26;
      BYTE2(v89) = v27;
      BYTE3(v89) = v28;
      *((_QWORD *)&v89 + 1) = v29;
      *(_QWORD *)&v90 = v30;
      *((_QWORD *)&v90 + 1) = v31;
      LOBYTE(v91) = v32;
      *((_QWORD *)&v91 + 1) = v33;
      *(_QWORD *)&v92 = v34;
      *((_QWORD *)&v92 + 1) = v35;
      __chkstk_darwin(v36);
      v73[-2] = &v87;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A79E0, &v73[-4], v37);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess(v1 + 16, v86, 0, 0);
      v38 = *(_OWORD *)(v1 + 48);
      v39 = *(_OWORD *)(v1 + 80);
      v40 = *(_OWORD *)(v1 + 96);
      v90 = *(_OWORD *)(v1 + 64);
      v91 = v39;
      v92 = v40;
      v41 = *(Swift::String *)(v1 + 32);
      v87 = *(_OWORD *)(v1 + 16);
      v88 = v41;
      v89 = v38;
      sub_100048B2C(&v87);
      v42 = type metadata accessor for TitledSection(0);
      v43 = type metadata accessor for MusicMovie(0);
      v44 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      MusicLibrarySectionedRequest.init()(v42, v43, &protocol witness table for TitledSection, v44);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v45, v10);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v87), v10);
      MusicLibrarySectionedRequest.filterItems(text:)(v88);
      sub_100040470();
      sub_100048B98((uint64_t *)&v87);
      v46 = sub_100049F28(&qword_1011A3AC8, &qword_10119D2D0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v47 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v10, v46);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(_QWORD *)(v1 + v21) = v47;
    }
    swift_release();
    v48 = v77;
    v49 = v76;
    v50 = v75;
    v51 = v74;
    v52 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v52, v85, 0, 0);
    sub_10004A160(v52, (uint64_t)&v82, (uint64_t *)&unk_1011A3850);
    v53 = *((_QWORD *)&v83 + 1);
    sub_10004FF60((uint64_t)&v82, (uint64_t *)&unk_1011A3850);
    if (!v53)
    {
      if (*(_QWORD *)(v1 + v21))
      {
        v54 = swift_retain();
        v55 = v78;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v54);
        swift_release();
        v56 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v82 = static OS_dispatch_queue.main.getter(v56, v57, v58, v59, v60, v61, v62, v63);
        v64 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v65 = (uint64_t)v80;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v80, 1, 1, v64);
        v66 = sub_100049F28(&qword_1011A3AD0, &qword_1011A3AA8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v67 = sub_10006A92C();
        Publisher.receive<A>(on:options:)(&v82, v65, v51, v56, v66, v67);
        sub_10004FF60(v65, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v79 + 8))(v55, v51);
        v68 = swift_allocObject(&unk_1010B4268, 24, 7);
        swift_weakInit(v68 + 16, v1);
        v69 = sub_100049F28(&qword_1011A3AD8, (uint64_t *)&unk_1011A3AB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v70 = Publisher<>.sink(receiveValue:)(sub_1001A79A0, v68, v48, v69);
        v71 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v50, v48, v71);
        v72 = type metadata accessor for AnyCancellable(0);
        v84 = &protocol witness table for AnyCancellable;
        *((_QWORD *)&v83 + 1) = v72;
        *(_QWORD *)&v82 = v70;
      }
      else
      {
        v84 = 0;
        v83 = 0u;
        v82 = 0u;
      }
      swift_beginAccess(v52, v81, 33, 0);
      sub_1000A5508((uint64_t)&v82, v52, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v81);
    }
  }
}

void sub_100187088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE v91[24];
  char v92[24];
  uint64_t v93;
  char v94[8];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3A50);
  v81 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v80 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011A3A58);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C((uint64_t *)&unk_1011A3A60);
  __chkstk_darwin(v11);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v73 = v12;
    v79 = v7;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048B14(v15, (uint64_t)qword_1011C9DF8);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v78 = v8;
    v77 = v10;
    v76 = v5;
    if (v19)
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v82 = v21;
      *(_DWORD *)v20 = 136315138;
      v93 = sub_100322200(0xD000000000000033, 0x8000000100E30270, (uint64_t *)&v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "🔄 Reloading Request=%s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }

    v75 = v4;
    v74 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v74))
    {
      swift_beginAccess(v1 + 16, &v93, 0, 0);
      v22 = *(_QWORD *)(v1 + 16);
      v23 = *(_QWORD *)(v1 + 32);
      v24 = *(_QWORD *)(v1 + 40);
      v25 = *(_BYTE *)(v1 + 48);
      v26 = *(_BYTE *)(v1 + 49);
      v27 = *(_BYTE *)(v1 + 50);
      v28 = *(_BYTE *)(v1 + 51);
      v29 = *(_QWORD *)(v1 + 56);
      v30 = *(_QWORD *)(v1 + 64);
      v31 = *(_BYTE *)(v1 + 72);
      v32 = *(_QWORD *)(v1 + 80);
      v33 = *(_QWORD *)(v1 + 88);
      BYTE8(v82) = *(_BYTE *)(v1 + 24);
      v34 = *(_QWORD *)(v1 + 96);
      *(_QWORD *)&v82 = v22;
      *(_QWORD *)&v83 = v23;
      *((_QWORD *)&v83 + 1) = v24;
      LOBYTE(v84) = v25;
      BYTE1(v84) = v26;
      BYTE2(v84) = v27;
      BYTE3(v84) = v28;
      v85 = v29;
      v86 = v30;
      v87 = v31;
      v88 = v32;
      v89 = v33;
      v90 = v34;
      __chkstk_darwin(v35);
      *(&v68 - 2) = (uint64_t)&v82;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A784C, &v68 - 4, v36);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v37 = v74;
    }
    else
    {
      swift_beginAccess(v1 + 16, &v93, 0, 0);
      v71 = *(unsigned __int8 *)(v1 + 24);
      v38 = *(void **)(v1 + 40);
      v72 = *(_QWORD *)(v1 + 32);
      v70 = *(_QWORD *)(v1 + 56);
      v69 = type metadata accessor for TitledSection(0);
      v68 = type metadata accessor for TVShow(0);
      v39 = sub_100048748(&qword_10119FE58, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MusicLibrarySectionedRequest.init()(v69, v68, &protocol witness table for TitledSection, v39);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v40, v11);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v71, v11);
      v41._countAndFlagsBits = v72;
      v41._object = v38;
      MusicLibrarySectionedRequest.filterItems(text:)(v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v42 = sub_100049F28(&qword_1011A3A70, (uint64_t *)&unk_1011A3A60, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v43 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v11, v42);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v11);
      v37 = v74;
      *(_QWORD *)(v1 + v74) = v43;
      swift_release();
    }
    v44 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v44, v92, 0, 0);
    sub_10004A160(v44, (uint64_t)&v82, (uint64_t *)&unk_1011A3850);
    v45 = *((_QWORD *)&v83 + 1);
    sub_10004FF60((uint64_t)&v82, (uint64_t *)&unk_1011A3850);
    v46 = v79;
    v47 = v78;
    v48 = v77;
    v49 = v76;
    v50 = (uint64_t)v75;
    if (!v45)
    {
      if (*(_QWORD *)(v1 + v37))
      {
        v51 = swift_retain();
        v52 = v80;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v51);
        swift_release();
        v53 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v82 = static OS_dispatch_queue.main.getter(v53, v54, v55, v56, v57, v58, v59, v60);
        v61 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v50, 1, 1, v61);
        v62 = sub_100049F28(&qword_1011A3A78, &qword_1011A3A50, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v63 = sub_10006A92C();
        Publisher.receive<A>(on:options:)(&v82, v50, v49, v53, v62, v63);
        sub_10004FF60(v50, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v49);
        v64 = swift_allocObject(&unk_1010B41C8, 24, 7);
        swift_weakInit(v64 + 16, v1);
        v65 = sub_100049F28(&qword_1011A3A80, &qword_1011A3A58, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v66 = Publisher<>.sink(receiveValue:)(sub_1001A780C, v64, v46, v65);
        v67 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v48, v46, v67);
        *((_QWORD *)&v83 + 1) = type metadata accessor for AnyCancellable(0);
        v84 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v82 = v66;
      }
      else
      {
        v84 = 0;
        v82 = 0u;
        v83 = 0u;
      }
      swift_beginAccess(v44, v91, 33, 0);
      sub_1000A5508((uint64_t)&v82, v44, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v91);
    }
  }
}

void sub_100187858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _BYTE v72[24];
  __int128 v73;
  __int128 v74;
  void *v75;
  char v76[24];
  _BYTE v77[24];
  __int128 v78;
  Swift::String v79;
  __int128 v80;
  __int128 v81;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v70 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011A3C68);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v68 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3C70);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3C78);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128)) == 1)
  {
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100048B14(v13, (uint64_t)qword_1011C9DF8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    v17 = os_log_type_enabled(v15, v16);
    v67 = v5;
    v66 = v6;
    v65 = v8;
    if (v17)
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v78 = v19;
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)&v73 = sub_100322200(0xD000000000000031, 0x8000000100E30590, (uint64_t *)&v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, (char *)&v73 + 8);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "🔄 Reloading Request=%s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

    v20 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    if (*(_QWORD *)(v1 + v20))
    {
      swift_beginAccess(v1 + 16, v77, 0, 0);
      v21 = *(_QWORD *)(v1 + 16);
      v22 = *(_QWORD *)(v1 + 32);
      v23 = *(void **)(v1 + 40);
      v24 = *(_QWORD *)(v1 + 48);
      v25 = *(_BYTE *)(v1 + 56);
      v26 = *(_BYTE *)(v1 + 57);
      v27 = *(_BYTE *)(v1 + 58);
      v28 = *(_BYTE *)(v1 + 59);
      BYTE8(v78) = *(_BYTE *)(v1 + 24);
      v29 = *(_QWORD *)(v1 + 64);
      v30 = *(_QWORD *)(v1 + 72);
      *(_QWORD *)&v78 = v21;
      v79._countAndFlagsBits = v22;
      v79._object = v23;
      *(_QWORD *)&v80 = v24;
      BYTE8(v80) = v25;
      BYTE9(v80) = v26;
      BYTE10(v80) = v27;
      BYTE11(v80) = v28;
      *(_QWORD *)&v81 = v29;
      *((_QWORD *)&v81 + 1) = v30;
      __chkstk_darwin(v31);
      *(&v65 - 2) = (char *)&v78;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A837C, &v65 - 4, v32);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess(v1 + 16, v77, 0, 0);
      v33 = *(Swift::String *)(v1 + 32);
      v78 = *(_OWORD *)(v1 + 16);
      v34 = *(_OWORD *)(v1 + 48);
      v35 = *(_OWORD *)(v1 + 64);
      v79 = v33;
      v80 = v34;
      v81 = v35;
      sub_1001A829C(&v78);
      v36 = type metadata accessor for TitledSection(0);
      v37 = type metadata accessor for Song(0);
      MusicLibrarySectionedRequest.init()(v36, v37, &protocol witness table for TitledSection, &protocol witness table for Song);
      MusicLibrarySectionedRequest.deferIdentifierResolution.setter(1, v9);
      swift_retain();
      MusicLibrarySectionedRequest.library.setter(v38, v9);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v78), v9);
      MusicLibrarySectionedRequest.filterItems(text:)(v79);
      sub_1008A9B7C();
      sub_1008A9E7C();
      sub_1001A82EC((uint64_t *)&v78);
      v39 = sub_100049F28(&qword_1011A3C80, &qword_1011A3C78, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v40 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v9, v39);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(_QWORD *)(v1 + v20) = v40;
    }
    swift_release();
    v41 = v67;
    v42 = v66;
    v43 = v65;
    v44 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v44, v76, 0, 0);
    sub_10004A160(v44, (uint64_t)&v73, (uint64_t *)&unk_1011A3850);
    v45 = *((_QWORD *)&v74 + 1);
    sub_10004FF60((uint64_t)&v73, (uint64_t *)&unk_1011A3850);
    if (!v45)
    {
      if (*(_QWORD *)(v1 + v20))
      {
        v46 = swift_retain();
        v47 = v68;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v46);
        swift_release();
        v48 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v73 = static OS_dispatch_queue.main.getter(v48, v49, v50, v51, v52, v53, v54, v55);
        v56 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v57 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v70, 1, 1, v56);
        v58 = sub_100049F28(&qword_1011A3C88, &qword_1011A3C68, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v59 = sub_10006A92C();
        v60 = v71;
        Publisher.receive<A>(on:options:)(&v73, v57, v71, v48, v58, v59);
        sub_10004FF60(v57, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v60);
        v61 = swift_allocObject(&unk_1010B4588, 24, 7);
        swift_weakInit(v61 + 16, v1);
        v62 = sub_100049F28((unint64_t *)&unk_1011A3C90, &qword_1011A3C70, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v63 = Publisher<>.sink(receiveValue:)(sub_1001A833C, v61, v41, v62);
        v64 = swift_release();
        (*(void (**)(char *, uint64_t, __n128))(v42 + 8))(v43, v41, v64);
        *((_QWORD *)&v74 + 1) = type metadata accessor for AnyCancellable(0);
        v75 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v73 = v63;
      }
      else
      {
        v75 = 0;
        v73 = 0u;
        v74 = 0u;
      }
      swift_beginAccess(v44, v72, 33, 0);
      sub_1000A5508((uint64_t)&v73, v44, (uint64_t *)&unk_1011A3850);
      swift_endAccess(v72);
    }
  }
}

uint64_t sub_100187F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[24];
  __int128 v97;
  __int128 v98;
  void *v99;
  char v100[24];
  uint64_t v101;
  uint64_t v102;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A08F0);
  __chkstk_darwin(v2);
  v90 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100007E8C(&qword_1011A3830);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v88 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_100007E8C(&qword_1011A3838);
  v5 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v92 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v11);
  v94 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3840);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s11MusicVideosVMa(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v18);
  v23 = (char *)&v81 - v22;
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v85 = result;
    v86 = v8;
    v95 = v5;
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_100048B14(v24, (uint64_t)qword_1011C9DF8);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    v28 = os_log_type_enabled(v26, v27);
    v87 = v16;
    v84 = v10;
    if (v28)
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v83 = v13;
      v31 = v30;
      *(_QWORD *)&v97 = v30;
      v82 = v7;
      *(_DWORD *)v29 = 136315138;
      v101 = sub_100322200(0xD000000000000037, 0x8000000100E2FFB0, (uint64_t *)&v97);
      v7 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "🔄 Reloading Request=%s", v29, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      v32 = v31;
      v13 = v83;
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }

    v33 = *(_QWORD *)v1;
    v34 = *(_QWORD *)(*(_QWORD *)v1 + 144);
    v35 = *(_QWORD *)(v1 + v34);
    v36 = v95;
    if (v35)
    {
      v37 = v1 + *(_QWORD *)(v33 + 96);
      swift_beginAccess(v37, &v101, 0, 0);
      v38 = sub_10005B704(v37, (uint64_t)v23, _s11MusicVideosVMa);
      __chkstk_darwin(v38);
      *(&v81 - 2) = (uint64_t)v23;
      v39 = swift_retain(v35);
      dispatch thunk of MusicAutoupdatingResponse.update(_:)(sub_1001A7018, &v81 - 4, v39);
      swift_release(v35);
      sub_10005B748((uint64_t)v23, _s11MusicVideosVMa);
    }
    else
    {
      v40 = v1 + *(_QWORD *)(v33 + 96);
      swift_beginAccess(v40, &v101, 0, 0);
      sub_10005B704(v40, (uint64_t)v20, _s11MusicVideosVMa);
      v41 = type metadata accessor for TitledSection(0);
      v42 = type metadata accessor for MusicVideo(0);
      v43 = (uint64_t)v87;
      MusicLibrarySectionedRequest.init()(v41, v42, &protocol witness table for TitledSection, &protocol witness table for MusicVideo);
      swift_retain(*(_QWORD *)v20);
      MusicLibrarySectionedRequest.library.setter(v44, v13);
      MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(v20[8], v13);
      v45 = v85;
      MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)&v20[*(int *)(v85 + 28)]);
      v46 = v94;
      sub_10005B704((uint64_t)&v20[*(int *)(v45 + 24)], v94, _s11MusicVideosV5ScopeOMa);
      v47 = v86;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v46, 1, v7) != 1)
      {
        v48 = v84;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v84, v46, v7);
        KeyPath = swift_getKeyPath(&unk_100EACE18);
        v94 = v1;
        v50 = v14;
        v51 = KeyPath;
        MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)(KeyPath, v48, v13);
        v52 = v51;
        v14 = v50;
        v1 = v94;
        v53 = swift_release(v52);
        (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v48, v7, v53);
      }
      sub_10075EB84();
      sub_10075EF18(v43);
      sub_10005B748((uint64_t)v20, _s11MusicVideosVMa);
      v54 = sub_100049F28(&qword_10119F640, (uint64_t *)&unk_1011A3840, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
      v55 = MusicAutoupdatableRequest.autoupdatingResponse.getter(v13, v54);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
      v56 = *(_QWORD *)(v1 + v34);
      *(_QWORD *)(v1 + v34) = v55;
      swift_release(v56);
      v36 = v95;
    }
    v57 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
    swift_beginAccess(v57, v100, 0, 0);
    sub_10004A160(v57, (uint64_t)&v97, (uint64_t *)&unk_1011A3850);
    v58 = *((_QWORD *)&v98 + 1);
    result = sub_10004FF60((uint64_t)&v97, (uint64_t *)&unk_1011A3850);
    if (!v58)
    {
      v59 = *(_QWORD *)(v1 + v34);
      if (v59)
      {
        v60 = swift_retain(*(_QWORD *)(v1 + v34));
        v61 = v88;
        dispatch thunk of MusicAutoupdatingResponse.$response.getter(v60);
        swift_release(v59);
        v62 = sub_10004A07C(0, (unint64_t *)&qword_1011A2110, OS_dispatch_queue_ptr);
        *(_QWORD *)&v97 = static OS_dispatch_queue.main.getter(v62, v63, v64, v65, v66, v67, v68, v69);
        v70 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        v71 = (uint64_t)v90;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v90, 1, 1, v70);
        v72 = sub_100049F28((unint64_t *)&unk_1011A3860, &qword_1011A3830, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        v73 = sub_10006A92C();
        v75 = v91;
        v74 = v92;
        Publisher.receive<A>(on:options:)(&v97, v71, v91, v62, v72, v73);
        sub_10004FF60(v71, &qword_1011A08F0);

        (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v75);
        v76 = swift_allocObject(&unk_1010B3F48, 24, 7);
        swift_weakInit(v76 + 16, v1);
        v77 = sub_100049F28(&qword_1011A3870, &qword_1011A3838, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v78 = v93;
        v79 = Publisher<>.sink(receiveValue:)(sub_1001A6FD8, v76, v93, v77);
        v80 = swift_release(v76);
        (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v74, v78, v80);
        *((_QWORD *)&v98 + 1) = type metadata accessor for AnyCancellable(0);
        v99 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v97 = v79;
      }
      else
      {
        v99 = 0;
        v97 = 0u;
        v98 = 0u;
      }
      swift_beginAccess(v57, v96, 33, 0);
      sub_1000A5508((uint64_t)&v97, v57, (uint64_t *)&unk_1011A3850);
      return swift_endAccess(v96);
    }
  }
  return result;
}

id sub_10018874C()
{
  return sub_1001887F4(sub_1001901C8);
}

id sub_100188758()
{
  return sub_1001887F4((uint64_t (*)(uint64_t))sub_1001905AC);
}

id sub_100188764()
{
  return sub_1001887F4(sub_100190C58);
}

id sub_100188770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(_QWORD *)(*v3 + 136);
  v5 = *(void **)((char *)v3 + v4);
  if (v5)
  {
    v6 = *(id *)((char *)v3 + v4);
  }
  else
  {
    v7 = (void *)sub_10019088C(v3, a1, a2, a3);
    v8 = *(void **)((char *)v3 + v4);
    *(_QWORD *)((char *)v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

id sub_1001887DC()
{
  return sub_1001887F4((uint64_t (*)(uint64_t))sub_100191408);
}

id sub_1001887E8()
{
  return sub_1001887F4(sub_1001916E8);
}

id sub_1001887F4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v3 = *(void **)(v1 + v2);
  if (v3)
  {
    v4 = *(id *)(v1 + v2);
  }
  else
  {
    v5 = (void *)a1(v1);
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

void sub_100188858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, __n128);
  uint64_t v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE v54[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3A20);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A3A28);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3A30);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
    v14 = swift_beginAccess(v13, v54, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v48 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v48, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DA00(v16);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v46 = v1;
          v47 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v50 = v20;
          v45 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v49(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v51;
            v23 = v52;
            swift_bridgeObjectRelease(v52);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v51;
              v28 = v52;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v50;
            --v18;
          }
          while (v18);
          v17 = v45;
          swift_bridgeObjectRelease(v45);
          v1 = v46;
          v4 = v47;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*(_QWORD *)v1 + 120);
        v34 = *(_QWORD *)(v1 + v33);
        *(_QWORD *)(v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v51 = v40;
      *(_DWORD *)v39 = 136315138;
      v53 = sub_100322200(0xD000000000000032, 0x8000000100E30230, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    v42 = *(void (**)(char *, __n128))v41;
    if (*(_QWORD *)v41)
    {
      v43 = *(_QWORD *)(v41 + 8);
      sub_10004A160(v48, (uint64_t)v4, &qword_1011A3A20);
      v44 = swift_retain();
      v42(v4, v44);
      sub_10004BA30((uint64_t)v42, v43);
      sub_10004FF60((uint64_t)v4, &qword_1011A3A20);
    }
  }
}

void sub_100188D1C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(char *, __n128);
  uint64_t v42;
  __n128 v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011CF2E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A39C0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011BCA10);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v53, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v47 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v47, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, (uint64_t *)&unk_1011A39C0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C540);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v45 = v1;
          v46 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v48 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v49 = v20;
          v44 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v48(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v50;
            v23 = v51;
            swift_bridgeObjectRelease(v51);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v50;
              v28 = v51;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v49;
            --v18;
          }
          while (v18);
          v17 = v44;
          swift_bridgeObjectRelease(v44);
          v1 = v45;
          v4 = v46;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*v1 + 120);
        v34 = *(_QWORD *)((char *)v1 + v33);
        *(_QWORD *)((char *)v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v50 = v40;
      *(_DWORD *)v39 = 136315138;
      v52 = sub_100322200(0xD000000000000044, 0x8000000100E301A0, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = (void (*)(char *, __n128))v1[13];
    if (v41)
    {
      v42 = v1[14];
      sub_10004A160(v47, (uint64_t)v4, (uint64_t *)&unk_1011CF2E0);
      v43 = swift_retain();
      v41(v4, v43);
      sub_10004BA30((uint64_t)v41, v42);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011CF2E0);
    }
  }
}

void sub_1001891E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, __n128);
  uint64_t v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE v54[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011ADFD0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3910);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
    v14 = swift_beginAccess(v13, v54, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v48 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v48, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, &qword_1011ADFD0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C56C);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v46 = v1;
          v47 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v50 = v20;
          v45 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v49(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release(KeyPath);
            v24 = v51;
            v23 = v52;
            swift_bridgeObjectRelease(v52);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release(v26);
              v29 = v51;
              v28 = v52;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v50;
            --v18;
          }
          while (v18);
          v17 = v45;
          swift_bridgeObjectRelease(v45);
          v1 = v46;
          v4 = v47;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*(_QWORD *)v1 + 120);
        v34 = *(_QWORD *)(v1 + v33);
        *(_QWORD *)(v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v51 = v40;
      *(_DWORD *)v39 = 136315138;
      v53 = sub_100322200(0xD000000000000033, 0x8000000100E30110, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    v42 = *(void (**)(char *, __n128))v41;
    if (*(_QWORD *)v41)
    {
      v43 = *(_QWORD *)(v41 + 8);
      sub_10004A160(v48, (uint64_t)v4, (uint64_t *)&unk_1011A3900);
      v44 = swift_retain(v43);
      v42(v4, v44);
      sub_10004BA30((uint64_t)v42, v43);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3900);
    }
  }
}

void sub_1001896B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  void (*v39)(char *, __n128);
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v51[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3B48);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3B50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v51, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v45 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v45, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, (uint64_t *)&unk_1011A3B50, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C598);
      swift_bridgeObjectRelease();
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v43 = v1;
          v44 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v46 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v47 = v20;
          v42 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v46(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v48;
            v23 = v49;
            swift_bridgeObjectRelease();
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v48;
              v28 = v49;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v47;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v1 = v43;
          v4 = v44;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 120)) = v21;
        swift_bridgeObjectRelease();
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048B14(v33, (uint64_t)qword_1011C9DF8);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v48 = v38;
      *(_DWORD *)v37 = 136315138;
      v50 = sub_100322200(0xD000000000000034, 0x8000000100E303B0, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "✅ Applied Response=%s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    v39 = (void (*)(char *, __n128))v1[8];
    if (v39)
    {
      v40 = v1[9];
      sub_10004A160(v45, (uint64_t)v4, &qword_1011A3B48);
      v41 = swift_retain();
      v39(v4, v41);
      sub_10004BA30((uint64_t)v39, v40);
      sub_10004FF60((uint64_t)v4, &qword_1011A3B48);
    }
  }
}

void sub_100189B80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(char *, __n128);
  uint64_t v42;
  __n128 v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011ACDF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3BB0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011CF3F0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v53, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v47 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v47, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, (uint64_t *)&unk_1011A3BB0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C5C4);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v45 = v1;
          v46 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v48 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v49 = v20;
          v44 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v48(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v50;
            v23 = v51;
            swift_bridgeObjectRelease(v51);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v50;
              v28 = v51;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v49;
            --v18;
          }
          while (v18);
          v17 = v44;
          swift_bridgeObjectRelease(v44);
          v1 = v45;
          v4 = v46;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*v1 + 120);
        v34 = *(_QWORD *)((char *)v1 + v33);
        *(_QWORD *)((char *)v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v50 = v40;
      *(_DWORD *)v39 = 136315138;
      v52 = sub_100322200(0xD000000000000036, 0x8000000100E30450, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = (void (*)(char *, __n128))v1[13];
    if (v41)
    {
      v42 = v1[14];
      sub_10004A160(v47, (uint64_t)v4, (uint64_t *)&unk_1011ACDF0);
      v43 = swift_retain();
      v41(v4, v43);
      sub_10004BA30((uint64_t)v41, v42);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011ACDF0);
    }
  }
}

void sub_10018A048()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(char *, __n128);
  uint64_t v42;
  __n128 v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011AE8B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3C00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011CF3E0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v53, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v47 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v47, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, (uint64_t *)&unk_1011A3C00, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C5F0);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v45 = v1;
          v46 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v48 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v49 = v20;
          v44 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v48(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v50;
            v23 = v51;
            swift_bridgeObjectRelease(v51);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v50;
              v28 = v51;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v49;
            --v18;
          }
          while (v18);
          v17 = v44;
          swift_bridgeObjectRelease(v44);
          v1 = v45;
          v4 = v46;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*v1 + 120);
        v34 = *(_QWORD *)((char *)v1 + v33);
        *(_QWORD *)((char *)v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v50 = v40;
      *(_DWORD *)v39 = 136315138;
      v52 = sub_100322200(0xD000000000000033, 0x8000000100E304D0, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = (void (*)(char *, __n128))v1[13];
    if (v41)
    {
      v42 = v1[14];
      sub_10004A160(v47, (uint64_t)v4, &qword_1011AE8B0);
      v43 = swift_retain();
      v41(v4, v43);
      sub_10004BA30((uint64_t)v41, v42);
      sub_10004FF60((uint64_t)v4, &qword_1011AE8B0);
    }
  }
}

void sub_10018A510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, __n128);
  uint64_t v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE v54[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3C50);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011B56A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3C60);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
    v14 = swift_beginAccess(v13, v54, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v48 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v48, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, (uint64_t *)&unk_1011B56A0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C61C);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v46 = v1;
          v47 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v50 = v20;
          v45 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v49(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v51;
            v23 = v52;
            swift_bridgeObjectRelease(v52);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v51;
              v28 = v52;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v50;
            --v18;
          }
          while (v18);
          v17 = v45;
          swift_bridgeObjectRelease(v45);
          v1 = v46;
          v4 = v47;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*(_QWORD *)v1 + 120);
        v34 = *(_QWORD *)(v1 + v33);
        *(_QWORD *)(v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v51 = v40;
      *(_DWORD *)v39 = 136315138;
      v53 = sub_100322200(0xD000000000000032, 0x8000000100E30550, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    v42 = *(void (**)(char *, __n128))v41;
    if (*(_QWORD *)v41)
    {
      v43 = *(_QWORD *)(v41 + 8);
      sub_10004A160(v48, (uint64_t)v4, (uint64_t *)&unk_1011A3C50);
      v44 = swift_retain();
      v42(v4, v44);
      sub_10004BA30((uint64_t)v42, v43);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3C50);
    }
  }
}

void sub_10018A9E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  void (*v39)(char *, __n128);
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v51[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3AE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011AE0B0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3AF0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v51, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v45 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v45, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, &qword_1011AE0B0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C648);
      swift_bridgeObjectRelease();
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v43 = v1;
          v44 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v46 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v47 = v20;
          v42 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v46(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v48;
            v23 = v49;
            swift_bridgeObjectRelease();
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v48;
              v28 = v49;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v47;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v1 = v43;
          v4 = v44;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 120)) = v21;
        swift_bridgeObjectRelease();
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048B14(v33, (uint64_t)qword_1011C9DF8);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v48 = v38;
      *(_DWORD *)v37 = 136315138;
      v50 = sub_100322200(0xD000000000000038, 0x8000000100E30330, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "✅ Applied Response=%s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    v39 = (void (*)(char *, __n128))v1[14];
    if (v39)
    {
      v40 = v1[15];
      sub_10004A160(v45, (uint64_t)v4, (uint64_t *)&unk_1011A3AE0);
      v41 = swift_retain();
      v39(v4, v41);
      sub_10004BA30((uint64_t)v39, v40);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3AE0);
    }
  }
}

void sub_10018AEAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  void (*v39)(char *, __n128);
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v51[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3A90);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011AE0A0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3AA0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v51, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v45 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v45, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, &qword_1011AE0A0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C674);
      swift_bridgeObjectRelease();
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v43 = v1;
          v44 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v46 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v47 = v20;
          v42 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v46(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v48;
            v23 = v49;
            swift_bridgeObjectRelease();
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v48;
              v28 = v49;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v47;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v1 = v43;
          v4 = v44;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 120)) = v21;
        swift_bridgeObjectRelease();
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048B14(v33, (uint64_t)qword_1011C9DF8);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v48 = v38;
      *(_DWORD *)v37 = 136315138;
      v50 = sub_100322200(0xD000000000000034, 0x8000000100E302B0, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "✅ Applied Response=%s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    v39 = (void (*)(char *, __n128))v1[13];
    if (v39)
    {
      v40 = v1[14];
      sub_10004A160(v45, (uint64_t)v4, (uint64_t *)&unk_1011A3A90);
      v41 = swift_retain();
      v39(v4, v41);
      sub_10004BA30((uint64_t)v39, v40);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3A90);
    }
  }
}

void sub_10018B374()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  void (*v39)(char *, __n128);
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v51[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3CA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C71F0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011A3CB0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 128)) == 1)
  {
    v13 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
    v14 = swift_beginAccess(v13, v51, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v45 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v45, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, (uint64_t *)&unk_1011C71F0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C6A0);
      swift_bridgeObjectRelease();
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v43 = v1;
          v44 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v46 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v47 = v20;
          v42 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v46(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release();
            v24 = v48;
            v23 = v49;
            swift_bridgeObjectRelease();
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release();
              v29 = v48;
              v28 = v49;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v47;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v1 = v43;
          v4 = v44;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 120)) = v21;
        swift_bridgeObjectRelease();
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_100048B14(v33, (uint64_t)qword_1011C9DF8);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v48 = v38;
      *(_DWORD *)v37 = 136315138;
      v50 = sub_100322200(0xD000000000000032, 0x8000000100E305D0, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "✅ Applied Response=%s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }

    v39 = (void (*)(char *, __n128))v1[10];
    if (v39)
    {
      v40 = v1[11];
      sub_10004A160(v45, (uint64_t)v4, (uint64_t *)&unk_1011A3CA0);
      v41 = swift_retain();
      v39(v4, v41);
      sub_10004BA30((uint64_t)v39, v40);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3CA0);
    }
  }
}

void sub_10018B83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, __n128);
  uint64_t v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE v54[24];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A3880);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011ADFC0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3890);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)) == 1)
  {
    v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
    v14 = swift_beginAccess(v13, v54, 0, 0);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48);
    v48 = v13;
    if (!v15(v13, 1, v9, v14))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v48, v9);
      v16 = MusicLibrarySectionedResponse.sections.getter(v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v17 = sub_10017DC9C(v16, &qword_1011ADFC0, (void (*)(BOOL, unint64_t, uint64_t))sub_10035C6CC);
      swift_bridgeObjectRelease(v16);
      if (v17)
      {
        v18 = v17[2];
        if (v18)
        {
          v46 = v1;
          v47 = v4;
          v19 = (char *)v17
              + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          v20 = *(_QWORD *)(v6 + 72);
          v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
          v50 = v20;
          v45 = v17;
          swift_bridgeObjectRetain();
          v21 = _swiftEmptyArrayStorage;
          do
          {
            v49(v8, v19, v5);
            KeyPath = swift_getKeyPath(&unk_100EACE40);
            MusicLibrarySection.subscript.getter(KeyPath, v5);
            swift_release(KeyPath);
            v24 = v51;
            v23 = v52;
            swift_bridgeObjectRelease(v52);
            v25 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v25 = v24 & 0xFFFFFFFFFFFFLL;
            if (v25)
            {
              v26 = swift_getKeyPath(&unk_100EACE40);
              MusicLibrarySection.subscript.getter(v26, v5);
              v27 = swift_release(v26);
              v29 = v51;
              v28 = v52;
              (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
              if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                v21 = sub_100431480(0, v21[2] + 1, 1, v21);
              v31 = v21[2];
              v30 = v21[3];
              if (v31 >= v30 >> 1)
                v21 = sub_100431480((_QWORD *)(v30 > 1), v31 + 1, 1, v21);
              v21[2] = v31 + 1;
              v32 = &v21[2 * v31];
              v32[4] = v29;
              v32[5] = v28;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            v19 += v50;
            --v18;
          }
          while (v18);
          v17 = v45;
          swift_bridgeObjectRelease(v45);
          v1 = v46;
          v4 = v47;
        }
        else
        {
          v21 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease(v17);
        v33 = *(_QWORD *)(*(_QWORD *)v1 + 120);
        v34 = *(_QWORD *)(v1 + v33);
        *(_QWORD *)(v1 + v33) = v21;
        swift_bridgeObjectRelease(v34);
      }
    }
    if (qword_10119C820 != -1)
      swift_once(&qword_10119C820, sub_1007E0480);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100048B14(v35, (uint64_t)qword_1011C9DF8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v51 = v40;
      *(_DWORD *)v39 = 136315138;
      v53 = sub_100322200(0xD000000000000038, 0x8000000100E2FFF0, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "✅ Applied Response=%s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }

    v41 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
    v42 = *(void (**)(char *, __n128))v41;
    if (*(_QWORD *)v41)
    {
      v43 = *(_QWORD *)(v41 + 8);
      sub_10004A160(v48, (uint64_t)v4, (uint64_t *)&unk_1011A3880);
      v44 = swift_retain(v43);
      v42(v4, v44);
      sub_10004BA30((uint64_t)v42, v43);
      sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A3880);
    }
  }
}

uint64_t sub_10018BD10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;

  v2 = v1;
  v4 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  *v4 = 0;
  v4[1] = 0;
  v5 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  v6 = sub_100007E8C(&qword_1011A3A30);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_QWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(v2 + v9) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v10 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_BYTE *)(v2 + v10) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v7(v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v6);
  sub_10005B704(a1, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), _s10TVEpisodesVMa);
  v11 = (uint64_t *)(a1 + *(int *)(_s10TVEpisodesVMa(0) + 52));
  v13 = *v11;
  v12 = v11[1];
  v14 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v14 = v13 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v20 = v13;
    v21 = v12;
    v15 = swift_allocObject(&unk_1010B4128, 24, 7);
    swift_weakInit(v15 + 16, v2);
    v16 = sub_100055B68();
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)&v20, 0, 0, (uint64_t)sub_1001A7804, v15, (uint64_t)&type metadata for String, v16);
    swift_release();
    sub_10005B748(a1, _s10TVEpisodesVMa);
    v18 = v21;
    swift_release();
    swift_bridgeObjectRelease(v18);
    *(_QWORD *)(v2 + v9) = v17;
    swift_release();
  }
  else
  {
    sub_10005B748(a1, _s10TVEpisodesVMa);
  }
  *(_BYTE *)(v2 + v10) = 1;
  return v2;
}

_QWORD *sub_10018BFAC(uint64_t a1)
{
  return sub_10018C4DC(a1, (uint64_t *)&unk_1011BCA10, (uint64_t)&unk_1010B4088, (uint64_t)sub_1001A84D0);
}

uint64_t sub_10018BFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  *v4 = 0;
  v4[1] = 0;
  v5 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_QWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(v2 + v9) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v10 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_BYTE *)(v2 + v10) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v7(v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v6);
  sub_10005B704(a1, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), _s6AlbumsVMa);
  sub_10023513C();
  v12 = v11;
  v14 = v13;
  swift_bridgeObjectRelease(v13);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    sub_10023513C();
    v24 = v16;
    v25 = v17;
    v18 = swift_allocObject(&unk_1010B3FE8, 24, 7);
    swift_weakInit(v18 + 16, v2);
    v19 = sub_100055B68();
    swift_retain(v18);
    v20 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)&v24, 0, 0, (uint64_t)sub_1001A74B4, v18, (uint64_t)&type metadata for String, v19);
    swift_release(v18);
    sub_10005B748(a1, _s6AlbumsVMa);
    v21 = v25;
    swift_release(v18);
    swift_bridgeObjectRelease(v21);
    v22 = *(_QWORD *)(v2 + v9);
    *(_QWORD *)(v2 + v9) = v20;
    swift_release(v22);
  }
  else
  {
    sub_10005B748(a1, _s6AlbumsVMa);
  }
  *(_BYTE *)(v2 + v10) = 1;
  return v2;
}

_OWORD *sub_10018C268(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v2 = v1;
  v1[8] = 0;
  v1[9] = 0;
  v4 = (char *)v1 + *(_QWORD *)(*v1 + 112);
  v5 = sub_100007E8C((uint64_t *)&unk_1011C9970);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v7 = (char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v8 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)((char *)v2 + v8) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *((_BYTE *)v2 + v9) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v6((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v5);
  v10 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v10;
  *(_OWORD *)((char *)v2 + 44) = *(_OWORD *)(a1 + 28);
  if (((unint64_t)"tledSection, Artist>" & 0x2000000000000000) == 0
    || (((unint64_t)"tledSection, Artist>" >> 56) & 0xF) != 0)
  {
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v15[0] = 0xD000000000000013;
    v15[1] = 0x8000000100E303F0;
    v11 = swift_allocObject(&unk_1010B4308, 24, 7);
    swift_weakInit(v11 + 16, v2);
    sub_1001A7ACC((_QWORD *)a1);
    v12 = sub_100055B68();
    swift_retain();
    v13 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)v15, 0, 0, (uint64_t)sub_1001A7CB8, v11, (uint64_t)&type metadata for String, v12);
    swift_release();
    sub_1001A7B10((uint64_t *)a1);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v2 + v8) = v13;
    swift_release();
  }
  *((_BYTE *)v2 + v9) = 1;
  return v2;
}

_QWORD *sub_10018C4C0(uint64_t a1)
{
  return sub_10018C4DC(a1, (uint64_t *)&unk_1011CF3F0, (uint64_t)&unk_1010B43A8, (uint64_t)sub_1001A7DC4);
}

_QWORD *sub_10018C4DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;

  v7 = v4;
  v4[13] = 0;
  v4[14] = 0;
  v9 = (char *)v4 + *(_QWORD *)(*v4 + 112);
  v10 = sub_100007E8C(a2);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 120)) = _swiftEmptyArrayStorage;
  *((_BYTE *)v7 + *(_QWORD *)(*v7 + 128)) = 0;
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 136)) = 0;
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 144)) = 0;
  v12 = (char *)v7 + *(_QWORD *)(*v7 + 152);
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  *((_BYTE *)v7 + *(_QWORD *)(*v7 + 160)) = 0;
  v13 = *(_QWORD *)(*v7 + 168);
  *(_QWORD *)((char *)v7 + v13) = 0;
  *(_QWORD *)((char *)v7 + *(_QWORD *)(*v7 + 176)) = &_swiftEmptyDictionarySingleton;
  v14 = *(_QWORD *)(*v7 + 184);
  *((_BYTE *)v7 + v14) = 0;
  *((_BYTE *)v7 + *(_QWORD *)(*v7 + 192)) = 0;
  v11((char *)v7 + *(_QWORD *)(*v7 + 200), 1, 1, v10);
  v15 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v7 + 3) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v7 + 4) = v15;
  v16 = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v7 + 5) = v16;
  v7[12] = *(_QWORD *)(a1 + 80);
  v17 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v7 + 1) = *(_OWORD *)a1;
  *((_OWORD *)v7 + 2) = v17;
  v25 = v16;
  if ((*((_QWORD *)&v16 + 1) & 0x2000000000000000) != 0)
    v18 = HIBYTE(*((_QWORD *)&v16 + 1)) & 0xFLL;
  else
    v18 = v16 & 0xFFFFFFFFFFFFLL;
  if (v18)
  {
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v24 = *(_OWORD *)(a1 + 64);
    v19 = swift_allocObject(a3, 24, 7);
    swift_weakInit(v19 + 16, v7);
    sub_1001A7DE4((_QWORD *)a1);
    sub_100055CE4((uint64_t)&v25);
    v20 = sub_100055B68();
    swift_retain();
    v21 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)&v24, 0, 0, a4, v19, (uint64_t)&type metadata for String, v20);
    swift_release();
    sub_1001A7E50((uint64_t *)a1);
    v22 = *((_QWORD *)&v24 + 1);
    swift_release();
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)((char *)v7 + v13) = v21;
    swift_release();
  }
  *((_BYTE *)v7 + v14) = 1;
  return v7;
}

_QWORD *sub_10018C750(uint64_t a1)
{
  return sub_10018C4DC(a1, (uint64_t *)&unk_1011CF3E0, (uint64_t)&unk_1010B4448, (uint64_t)sub_1001A8014);
}

uint64_t sub_10018C76C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v2 = v1;
  v4 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  *v4 = 0;
  v4[1] = 0;
  v5 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  v6 = sub_100007E8C(&qword_1011A3C60);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_QWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(v2 + v9) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v28 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_BYTE *)(v2 + v28) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v7(v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v6);
  sub_10005B704(a1, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), _s9PlaylistsVMa);
  v10 = (uint64_t *)(a1 + *(int *)(_s9PlaylistsVMa(0) + 24));
  if (qword_10119B938 != -1)
    swift_once(&qword_10119B938, sub_10010BB4C);
  v11 = _s9PlaylistsV5ScopeVMa(0);
  v12 = (uint64_t *)sub_100048B14(v11, (uint64_t)qword_10124C8A8);
  v13 = sub_10010DC18(v10, v12);
  v14 = 0xD000000000000011;
  if (v13)
  {
    v15 = 0x8000000100E2D170;
  }
  else
  {
    v14 = 0xD000000000000010;
    v15 = 0x8000000100E2D150;
  }
  v29 = v14;
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = 0x704F7265746C6946;
  v16._object = (void *)0xEC0000006E6F6974;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v15);
  v17 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v17 = v29 & 0xFFFFFFFFFFFFLL;
  if (v17)
  {
    v18 = sub_10010DC18(v10, v12);
    if (v18)
      v19 = 0xD000000000000011;
    else
      v19 = 0xD000000000000010;
    if (v18)
      v20 = 0x8000000100E2D170;
    else
      v20 = 0x8000000100E2D150;
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v29 = v19;
    v30 = v20;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = 0x704F7265746C6946;
    v21._object = (void *)0xEC0000006E6F6974;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v20);
    v22 = swift_allocObject(&unk_1010B44E8, 24, 7);
    swift_weakInit(v22 + 16, v2);
    v23 = sub_100055B68();
    swift_retain();
    v24 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)&v29, 0, 0, (uint64_t)sub_1001A8294, v22, (uint64_t)&type metadata for String, v23);
    swift_release();
    sub_10005B748(a1, _s9PlaylistsVMa);
    v25 = v30;
    swift_release();
    swift_bridgeObjectRelease(v25);
    v26 = v28;
    *(_QWORD *)(v2 + v9) = v24;
    swift_release();
  }
  else
  {
    sub_10005B748(a1, _s9PlaylistsVMa);
    v26 = v28;
  }
  *(_BYTE *)(v2 + v26) = 1;
  return v2;
}

_OWORD *sub_10018CB2C(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;

  v2 = v1;
  v1[14] = 0;
  v1[15] = 0;
  v4 = (char *)v1 + *(_QWORD *)(*v1 + 112);
  v5 = sub_100007E8C(&qword_1011A3AF0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v7 = (char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v8 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)((char *)v2 + v8) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *((_BYTE *)v2 + v9) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v6((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v5);
  v10 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v10;
  v11 = *(_OWORD *)(a1 + 80);
  v2[5] = *(_OWORD *)(a1 + 64);
  v2[6] = v11;
  v12 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v12;
  v19 = *(_OWORD *)(a1 + 72);
  if ((*((_QWORD *)&v19 + 1) & 0x2000000000000000) != 0)
    v13 = HIBYTE(*((_QWORD *)&v19 + 1)) & 0xFLL;
  else
    v13 = v19 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v18 = *(_OWORD *)(a1 + 72);
    v14 = swift_allocObject(&unk_1010B4268, 24, 7);
    swift_weakInit(v14 + 16, v2);
    sub_100048B2C((_QWORD *)a1);
    sub_100055CE4((uint64_t)&v19);
    v15 = sub_100055B68();
    swift_retain();
    v16 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)&v18, 0, 0, (uint64_t)sub_1001A8034, v14, (uint64_t)&type metadata for String, v15);
    swift_release();
    sub_100048B98((uint64_t *)a1);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v2 + v8) = v16;
    swift_release();
  }
  *((_BYTE *)v2 + v9) = 1;
  return v2;
}

_QWORD *sub_10018CD98(uint64_t a1)
{
  return sub_10018C4DC(a1, &qword_1011A3AA0, (uint64_t)&unk_1010B41C8, (uint64_t)sub_1001A803C);
}

_OWORD *sub_10018CDB4(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v2 = v1;
  v1[10] = 0;
  v1[11] = 0;
  v4 = (char *)v1 + *(_QWORD *)(*v1 + 112);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A3CB0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v7 = (char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v8 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)((char *)v2 + v8) = 0;
  *(_QWORD *)((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v9 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *((_BYTE *)v2 + v9) = 0;
  *((_BYTE *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v6((char *)v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v5);
  v10 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v10;
  v11 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v11;
  if (((unint64_t)"tledSection, Song>" & 0x2000000000000000) == 0
    || (((unint64_t)"tledSection, Song>" >> 56) & 0xF) != 0)
  {
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v16[0] = 0xD000000000000011;
    v16[1] = 0x8000000100E30610;
    v12 = swift_allocObject(&unk_1010B4588, 24, 7);
    swift_weakInit(v12 + 16, v2);
    sub_1001A829C((_QWORD *)a1);
    v13 = sub_100055B68();
    swift_retain();
    v14 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)v16, 0, 0, (uint64_t)sub_1001A84C8, v12, (uint64_t)&type metadata for String, v13);
    swift_release();
    sub_1001A82EC((uint64_t *)a1);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v2 + v8) = v14;
    swift_release();
  }
  *((_BYTE *)v2 + v9) = 1;
  return v2;
}

uint64_t sub_10018D00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  Swift::String v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  unint64_t v36;
  unint64_t v37;

  v2 = v1;
  v4 = _s11MusicVideosV5ScopeOMa(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v35 - v8;
  v10 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  *v10 = 0;
  v10[1] = 0;
  v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  v12 = sub_100007E8C(&qword_1011A3890);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 136)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)) = 0;
  v14 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_QWORD *)(v14 + 32) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160)) = 0;
  v35[0] = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(v2 + v35[0]) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176)) = &_swiftEmptyDictionarySingleton;
  v15 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_BYTE *)(v2 + v15) = 0;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 192)) = 0;
  v13(v2 + *(_QWORD *)(*(_QWORD *)v2 + 200), 1, 1, v12);
  sub_10005B704(a1, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), _s11MusicVideosVMa);
  v16 = a1 + *(int *)(_s11MusicVideosVMa(0) + 24);
  sub_10005B704(v16, (uint64_t)v9, _s11MusicVideosV5ScopeOMa);
  v17 = type metadata accessor for Artist(0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  if (v18(v9, 1, v17) == 1)
  {
    v19 = 0x8000000100E300B0;
    v20 = 0xD000000000000012;
  }
  else
  {
    sub_10005B748((uint64_t)v9, _s11MusicVideosV5ScopeOMa);
    v20 = 0xD000000000000013;
    v19 = 0x8000000100E2FEF0;
  }
  v36 = v20;
  v37 = v19;
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = 0x704F7265746C6946;
  v21._object = (void *)0xEC0000006E6F6974;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v19);
  v23 = v36;
  v22 = v37;
  swift_bridgeObjectRelease(v37);
  v24 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v24 = v23 & 0xFFFFFFFFFFFFLL;
  if (v24)
  {
    sub_10005B704(v16, (uint64_t)v7, _s11MusicVideosV5ScopeOMa);
    if (v18(v7, 1, v17) == 1)
    {
      v25 = 0x8000000100E300B0;
      v26 = v35[0];
      v27 = 0xD000000000000012;
    }
    else
    {
      sub_10005B748((uint64_t)v7, _s11MusicVideosV5ScopeOMa);
      v27 = 0xD000000000000013;
      v25 = 0x8000000100E2FEF0;
      v26 = v35[0];
    }
    sub_10004A07C(0, &qword_1011A3918, NSUserDefaults_ptr);
    v36 = v27;
    v37 = v25;
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = 0x704F7265746C6946;
    v28._object = (void *)0xEC0000006E6F6974;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v25);
    v29 = swift_allocObject(&unk_1010B3F48, 24, 7);
    swift_weakInit(v29 + 16, v2);
    v30 = sub_100055B68();
    swift_retain(v29);
    v31 = static NSUserDefaults.observe<A>(_:in:valueChanged:)((uint64_t)&v36, 0, 0, (uint64_t)sub_1001A74AC, v29, (uint64_t)&type metadata for String, v30);
    swift_release(v29);
    sub_10005B748(a1, _s11MusicVideosVMa);
    v32 = v37;
    swift_release(v29);
    swift_bridgeObjectRelease(v32);
    v33 = *(_QWORD *)(v2 + v26);
    *(_QWORD *)(v2 + v26) = v31;
    swift_release(v33);
  }
  else
  {
    sub_10005B748(a1, _s11MusicVideosVMa);
  }
  *(_BYTE *)(v2 + v15) = 1;
  return v2;
}

unint64_t sub_10018D478()
{
  unint64_t result;

  result = qword_1011ACDE0;
  if (!qword_1011ACDE0)
  {
    result = swift_getWitnessTable(&unk_100EC3A64, &type metadata for LibraryFilterTrait);
    atomic_store(result, (unint64_t *)&qword_1011ACDE0);
  }
  return result;
}

double sub_10018D4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  _QWORD v27[4];
  _BYTE v28[24];

  v4 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - v8;
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)v27, &qword_10119DCC0);
      if (!v27[3])
      {
        swift_release();
        sub_10004FF60((uint64_t)v27, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(v26, v27, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v14 = v26[0];
        v13 = v26[1];
        v15 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
        JSONDecoder.init()();
        v16 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v17 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v27, v16, v14, v13, v16, v17);
        swift_release();
        v25 = v14;
        v18 = v27[0];
        v19 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 96);
        swift_beginAccess(v19, v27, 0, 0);
        sub_10005B704(v19, (uint64_t)v9, _s10TVEpisodesVMa);
        v20 = *(_QWORD *)&v9[*(int *)(v4 + 56)];
        swift_bridgeObjectRetain();
        sub_10005B748((uint64_t)v9, _s10TVEpisodesVMa);
        v21 = sub_1001A53A0(v20, v18);
        swift_bridgeObjectRelease(v20);
        sub_10005B704(v19, (uint64_t)v9, _s10TVEpisodesVMa);
        v22 = v13;
        v23 = *(int *)(v4 + 44);
        swift_bridgeObjectRelease(*(_QWORD *)&v9[v23]);
        *(_QWORD *)&v9[v23] = v21;
        sub_10005B704(v19, (uint64_t)v6, _s10TVEpisodesVMa);
        swift_beginAccess(v19, v26, 33, 0);
        sub_1001A81D8((uint64_t)v9, v19, _s10TVEpisodesVMa);
        swift_endAccess(v26);
        sub_100180FC8(v6);
        sub_10005B748((uint64_t)v9, _s10TVEpisodesVMa);
        sub_10005B748((uint64_t)v6, _s10TVEpisodesVMa);
        sub_1000652DC(v25, v22);
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018D938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[4];
  _BYTE v36[24];

  v4 = _s6AlbumsVMa(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v28 - v8);
  a2 += 16;
  swift_beginAccess(a2, v36, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)v31, &qword_10119DCC0);
      if (!v32)
      {
        swift_release(v12);
        sub_10004FF60((uint64_t)v31, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(v35, v31, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v14 = v35[0];
        v13 = v35[1];
        v15 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
        v16 = JSONDecoder.init()();
        v17 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v18 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v31, v17, v14, v13, v17, v18);
        v29 = v14;
        v30 = v13;
        swift_release(v16);
        v28 = v31[0];
        v19 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 96);
        swift_beginAccess(v19, v35, 0, 0);
        sub_10005B704(v19, (uint64_t)v9, _s6AlbumsVMa);
        v20 = sub_100235664();
        sub_10005B748((uint64_t)v9, _s6AlbumsVMa);
        v21 = sub_1001A53A0((uint64_t)v20, v28);
        swift_bridgeObjectRelease(v20);
        sub_10005B704(v19, (uint64_t)v7, _s6AlbumsVMa);
        v22 = *(int *)(v4 + 32);
        v23 = *(_QWORD *)&v7[v22];
        *(_QWORD *)&v7[v22] = v21;
        v24 = sub_10016CD08(v21, v23);
        if ((v24 & 1) == 0)
        {
          v25 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          v32 = v17;
          v33 = v18;
          v34 = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
          v31[0] = v21;
          swift_retain(v21);
          sub_10023513C();
          v27 = v26;
          NSUserDefaults.encodeValue(_:forKey:)(v31);
          swift_bridgeObjectRelease(v27);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v31);
        }
        swift_bridgeObjectRelease(v23);
        sub_10005B704(v19, (uint64_t)v9, _s6AlbumsVMa);
        swift_beginAccess(v19, v31, 33, 0);
        sub_1001A81D8((uint64_t)v7, v19, _s6AlbumsVMa);
        swift_endAccess(v31);
        sub_10018168C(v9);
        sub_10005B748((uint64_t)v7, _s6AlbumsVMa);
        sub_10005B748((uint64_t)v9, _s6AlbumsVMa);
        sub_1000652DC(v29, v30);
      }
    }
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_10018DE64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _UNKNOWN **v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  _BYTE v29[32];
  _BYTE v30[32];
  _BYTE v31[24];
  __int128 v32;
  _OWORD v33[3];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v31, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)&v28, &qword_10119DCC0);
      if (!*(_QWORD *)&v29[8])
      {
        swift_release();
        sub_10004FF60((uint64_t)&v28, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(&v32, &v28, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v7 = v32;
        v8 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
        JSONDecoder.init()();
        v9 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v10 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v28, v9, v7, *((_QWORD *)&v7 + 1), v9, v10);
        swift_release();
        v11 = v28;
        swift_beginAccess(v6 + 16, v30, 1, 0);
        v12 = *(_OWORD *)(v6 + 32);
        v32 = *(_OWORD *)(v6 + 16);
        v33[0] = v12;
        *(_OWORD *)((char *)v33 + 12) = *(_OWORD *)(v6 + 44);
        sub_1001A7ACC(&v32);
        v13 = sub_1002D8F14();
        sub_1001A7B10((uint64_t *)&v32);
        v14 = sub_1001A53A0((uint64_t)v13, v11);
        swift_bridgeObjectRelease();
        v15 = *(_QWORD *)(v6 + 16);
        v27 = *(_BYTE *)(v6 + 24);
        v16 = *(_QWORD *)(v6 + 40);
        v26 = *(_QWORD *)(v6 + 32);
        v17 = *(_QWORD *)(v6 + 48);
        v18 = *(_BYTE *)(v6 + 56);
        v24 = *(_BYTE *)(v6 + 58);
        v25 = *(_BYTE *)(v6 + 57);
        v23 = *(_BYTE *)(v6 + 59);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_10016CD08(v14, v17);
        if ((v19 & 1) == 0)
        {
          v20 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          *(_QWORD *)&v29[8] = v9;
          *(_QWORD *)&v29[16] = v10;
          *(_QWORD *)&v29[24] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
          *(_QWORD *)&v28 = v14;
          swift_retain();
          NSUserDefaults.encodeValue(_:forKey:)(&v28);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v28);
        }
        swift_bridgeObjectRelease();
        v21 = *(_OWORD *)(v6 + 32);
        v22 = *(_OWORD *)(v6 + 44);
        v28 = *(_OWORD *)(v6 + 16);
        *(_OWORD *)v29 = v21;
        *(_OWORD *)&v29[12] = v22;
        *(_QWORD *)(v6 + 16) = v15;
        *(_BYTE *)(v6 + 24) = v27;
        *(_QWORD *)(v6 + 32) = v26;
        *(_QWORD *)(v6 + 40) = v16;
        *(_QWORD *)(v6 + 48) = v14;
        *(_BYTE *)(v6 + 56) = v18;
        *(_BYTE *)(v6 + 57) = v25;
        *(_BYTE *)(v6 + 58) = v24;
        *(_BYTE *)(v6 + 59) = v23;
        sub_1001A7ACC(&v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_100181A1C((uint64_t *)&v28);
        sub_1001A7B10((uint64_t *)&v28);
        sub_1000652DC(v7, *((unint64_t *)&v7 + 1));
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018E35C(uint64_t a1, uint64_t a2, void (*a3)(__int128 *, __n128))
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  Swift::Int v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD v43[4];
  _BYTE v44[24];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v44, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)&v45, &qword_10119DCC0);
      if (!*((_QWORD *)&v46 + 1))
      {
        swift_release();
        sub_10004FF60((uint64_t)&v45, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(v43, &v45, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v10 = v43[0];
        v9 = v43[1];
        v11 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
        JSONDecoder.init()();
        v12 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v13 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v45, v12, v10, v9, v12, v13);
        swift_release();
        v14 = v45;
        swift_beginAccess(v8 + 16, v43, 1, 0);
        v15 = *(_QWORD *)(v8 + 96);
        v16 = swift_bridgeObjectRetain();
        v40 = sub_1001A53A0(v16, v14);
        swift_bridgeObjectRelease(v15);
        v17 = *(_QWORD *)(v8 + 16);
        v39 = *(_BYTE *)(v8 + 24);
        v18 = *(_QWORD *)(v8 + 40);
        v38 = *(_QWORD *)(v8 + 32);
        v36 = *(_BYTE *)(v8 + 49);
        v37 = *(_BYTE *)(v8 + 48);
        v32 = *(_BYTE *)(v8 + 51);
        v19 = *(_QWORD *)(v8 + 56);
        v34 = *(_BYTE *)(v8 + 72);
        v35 = *(_BYTE *)(v8 + 50);
        v20 = *(_QWORD *)(v8 + 88);
        v33 = *(_QWORD *)(v8 + 80);
        v21 = *(_QWORD *)(v8 + 96);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = *(_OWORD *)(v8 + 16);
        v23 = *(_OWORD *)(v8 + 32);
        v24 = *(_OWORD *)(v8 + 48);
        v25 = *(_OWORD *)(v8 + 80);
        v48 = *(_OWORD *)(v8 + 64);
        v49 = v25;
        v41 = v9;
        v42 = v10;
        v27 = *(_QWORD *)(v8 + 88);
        v50 = *(_QWORD *)(v8 + 96);
        v26 = v50;
        v46 = v23;
        v47 = v24;
        v45 = v22;
        v28 = *(_QWORD *)(v8 + 64);
        v30 = *(_QWORD *)(v8 + 56);
        v31 = *(_QWORD *)(v8 + 40);
        *(_QWORD *)(v8 + 16) = v17;
        *(_BYTE *)(v8 + 24) = v39;
        *(_QWORD *)(v8 + 32) = v38;
        *(_QWORD *)(v8 + 40) = v18;
        *(_BYTE *)(v8 + 48) = v37;
        *(_BYTE *)(v8 + 49) = v36;
        *(_BYTE *)(v8 + 50) = v35;
        *(_BYTE *)(v8 + 51) = v32;
        *(_QWORD *)(v8 + 56) = v19;
        *(_QWORD *)(v8 + 64) = v40;
        *(_BYTE *)(v8 + 72) = v34;
        *(_QWORD *)(v8 + 80) = v33;
        *(_QWORD *)(v8 + 88) = v20;
        *(_QWORD *)(v8 + 96) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001A7DE4(&v45);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v28);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v31);
        v29 = swift_release();
        a3(&v45, v29);
        sub_1001A7E50((uint64_t *)&v45);
        sub_1000652DC(v42, v41);
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018E804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  Swift::String v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[4];
  char v46[24];

  v4 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v36 - v8);
  a2 += 16;
  swift_beginAccess(a2, v46, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)v41, &qword_10119DCC0);
      if (!v42)
      {
        swift_release();
        sub_10004FF60((uint64_t)v41, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(v45, v41, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v14 = v45[0];
        v13 = v45[1];
        v15 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
        JSONDecoder.init()();
        v16 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v17 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v41, v16, v14, v13, v16, v17);
        v37 = v14;
        v38 = v13;
        swift_release();
        v36 = v41[0];
        v18 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 96);
        swift_beginAccess(v18, v45, 0, 0);
        sub_10005B704(v18, (uint64_t)v9, _s9PlaylistsVMa);
        v19 = sub_10010E2B0();
        swift_bridgeObjectRetain();
        sub_10005B748((uint64_t)v9, _s9PlaylistsVMa);
        v20 = sub_1001A53A0((uint64_t)v19, v36);
        swift_bridgeObjectRelease(v19);
        v36 = v18;
        sub_10005B704(v18, (uint64_t)v6, _s9PlaylistsVMa);
        v21 = *(int *)(v4 + 32);
        v22 = *(_QWORD *)&v6[v21];
        *(_QWORD *)&v6[v21] = v20;
        v23 = sub_10016CD08(v20, v22);
        if ((v23 & 1) == 0)
        {
          v24 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          v42 = v16;
          v43 = v17;
          v44 = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
          v41[0] = v20;
          v25 = (uint64_t *)&v6[*(int *)(v4 + 24)];
          v26 = qword_10119B938;
          swift_retain();
          if (v26 != -1)
            swift_once(&qword_10119B938, sub_10010BB4C);
          v27 = _s9PlaylistsV5ScopeVMa(0);
          v28 = (uint64_t *)sub_100048B14(v27, (uint64_t)qword_10124C8A8);
          v29 = sub_10010DC18(v25, v28);
          v30 = 0xD000000000000010;
          if (v29)
          {
            v30 = 0xD000000000000011;
            v31 = 0x8000000100E2D170;
          }
          else
          {
            v31 = 0x8000000100E2D150;
          }
          v39 = v30;
          v40 = v31;
          swift_bridgeObjectRetain();
          v32._countAndFlagsBits = 0x704F7265746C6946;
          v32._object = (void *)0xEC0000006E6F6974;
          String.append(_:)(v32);
          swift_bridgeObjectRelease(v31);
          v33 = v40;
          NSUserDefaults.encodeValue(_:forKey:)(v41);
          swift_bridgeObjectRelease(v33);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v41);
        }
        swift_bridgeObjectRelease(v22);
        v34 = v38;
        v35 = v36;
        sub_10005B704(v36, (uint64_t)v9, _s9PlaylistsVMa);
        swift_beginAccess(v35, v41, 33, 0);
        sub_1001A81D8((uint64_t)v6, v35, _s9PlaylistsVMa);
        swift_endAccess(v41);
        sub_10018241C(v9);
        sub_10005B748((uint64_t)v6, _s9PlaylistsVMa);
        sub_10005B748((uint64_t)v9, _s9PlaylistsVMa);
        sub_1000652DC(v37, v34);
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018EDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  Swift::Int v32;
  uint64_t v33;
  _QWORD v34[4];
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v35, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)&v36, &qword_10119DCC0);
      if (!*((_QWORD *)&v37 + 1))
      {
        swift_release();
        sub_10004FF60((uint64_t)&v36, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(v34, &v36, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v8 = v34[0];
        v7 = v34[1];
        v9 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
        JSONDecoder.init()();
        v10 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v11 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v36, v10, v8, v7, v10, v11);
        swift_release();
        v12 = v36;
        swift_beginAccess(v6 + 16, v34, 1, 0);
        v13 = swift_bridgeObjectRetain();
        v32 = sub_1001A53A0(v13, v12);
        swift_bridgeObjectRelease();
        v14 = *(_QWORD *)(v6 + 16);
        v33 = v8;
        LOBYTE(v8) = *(_BYTE *)(v6 + 24);
        v15 = *(_QWORD *)(v6 + 40);
        v29 = *(_QWORD *)(v6 + 32);
        v27 = *(_BYTE *)(v6 + 49);
        v28 = *(_BYTE *)(v6 + 48);
        v25 = *(_BYTE *)(v6 + 51);
        v26 = *(_BYTE *)(v6 + 50);
        v16 = *(_QWORD *)(v6 + 64);
        v24 = *(_QWORD *)(v6 + 56);
        v31 = *(_BYTE *)(v6 + 80);
        v17 = *(_QWORD *)(v6 + 96);
        v30 = *(_QWORD *)(v6 + 88);
        v18 = *(_QWORD *)(v6 + 104);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = *(_OWORD *)(v6 + 16);
        v20 = *(_OWORD *)(v6 + 32);
        v21 = *(_OWORD *)(v6 + 48);
        v22 = *(_OWORD *)(v6 + 64);
        v23 = *(_OWORD *)(v6 + 96);
        v40 = *(_OWORD *)(v6 + 80);
        v41 = v23;
        v38 = v21;
        v39 = v22;
        v36 = v19;
        v37 = v20;
        *(_QWORD *)(v6 + 16) = v14;
        *(_BYTE *)(v6 + 24) = v8;
        *(_QWORD *)(v6 + 32) = v29;
        *(_QWORD *)(v6 + 40) = v15;
        *(_BYTE *)(v6 + 48) = v28;
        *(_BYTE *)(v6 + 49) = v27;
        *(_BYTE *)(v6 + 50) = v26;
        *(_BYTE *)(v6 + 51) = v25;
        *(_QWORD *)(v6 + 56) = v24;
        *(_QWORD *)(v6 + 64) = v16;
        *(_QWORD *)(v6 + 72) = v32;
        *(_BYTE *)(v6 + 80) = v31;
        *(_QWORD *)(v6 + 88) = v30;
        *(_QWORD *)(v6 + 96) = v17;
        *(_QWORD *)(v6 + 104) = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100048B2C(&v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1001827AC((uint64_t *)&v36);
        sub_100048B98((uint64_t *)&v36);
        sub_1000652DC(v33, v7);
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018F2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _UNKNOWN **v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  _BYTE v33[32];
  _BYTE v34[24];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v34, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)&v39, &qword_10119DCC0);
      if (!*((_QWORD *)&v40 + 1))
      {
        swift_release();
        sub_10004FF60((uint64_t)&v39, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(&v35, &v39, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v7 = v35;
        v8 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
        JSONDecoder.init()();
        v9 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v10 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v39, v9, v7, *((_QWORD *)&v7 + 1), v9, v10);
        swift_release();
        v11 = v39;
        swift_beginAccess(v6 + 16, v33, 1, 0);
        v12 = *(_OWORD *)(v6 + 32);
        v39 = *(_OWORD *)(v6 + 16);
        v13 = *(_OWORD *)(v6 + 48);
        v14 = *(_OWORD *)(v6 + 64);
        v40 = v12;
        v41 = v13;
        v42 = v14;
        sub_1001A829C(&v39);
        v15 = sub_1008AABBC();
        swift_bridgeObjectRetain();
        sub_1001A82EC((uint64_t *)&v39);
        v16 = sub_1001A53A0((uint64_t)v15, v11);
        swift_bridgeObjectRelease();
        v17 = *(_QWORD *)(v6 + 16);
        v32 = *(_BYTE *)(v6 + 24);
        v18 = *(_QWORD *)(v6 + 40);
        v31 = *(_QWORD *)(v6 + 32);
        v19 = *(_QWORD *)(v6 + 48);
        v29 = *(_BYTE *)(v6 + 57);
        v30 = *(_BYTE *)(v6 + 56);
        v27 = *(_BYTE *)(v6 + 59);
        v28 = *(_BYTE *)(v6 + 58);
        v20 = *(_QWORD *)(v6 + 72);
        v26 = *(_QWORD *)(v6 + 64);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_10016CD08(v16, v19);
        if ((v21 & 1) == 0)
        {
          v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          *((_QWORD *)&v36 + 1) = v9;
          *(_QWORD *)&v37 = v10;
          *((_QWORD *)&v37 + 1) = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
          *(_QWORD *)&v35 = v16;
          swift_retain();
          NSUserDefaults.encodeValue(_:forKey:)(&v35);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v35);
        }
        swift_bridgeObjectRelease();
        v23 = *(_OWORD *)(v6 + 16);
        v24 = *(_OWORD *)(v6 + 32);
        v25 = *(_OWORD *)(v6 + 64);
        v37 = *(_OWORD *)(v6 + 48);
        v38 = v25;
        v35 = v23;
        v36 = v24;
        *(_QWORD *)(v6 + 16) = v17;
        *(_BYTE *)(v6 + 24) = v32;
        *(_QWORD *)(v6 + 32) = v31;
        *(_QWORD *)(v6 + 40) = v18;
        *(_QWORD *)(v6 + 48) = v16;
        *(_BYTE *)(v6 + 56) = v30;
        *(_BYTE *)(v6 + 57) = v29;
        *(_BYTE *)(v6 + 58) = v28;
        *(_BYTE *)(v6 + 59) = v27;
        *(_QWORD *)(v6 + 64) = v26;
        *(_QWORD *)(v6 + 72) = v20;
        sub_1001A829C(&v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_100182E0C((uint64_t *)&v35);
        sub_1001A82EC((uint64_t *)&v35);
        sub_1000652DC(v7, *((unint64_t *)&v7 + 1));
      }
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10018F7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  const char *v32;
  unint64_t v33;
  Swift::String v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[4];
  char v51[32];

  v4 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s11MusicVideosVMa(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v38 - v11);
  a2 += 16;
  swift_beginAccess(a2, v51, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    if ((*(_BYTE *)(Strong + *(_QWORD *)(*(_QWORD *)Strong + 160)) & 1) == 0)
    {
      sub_10004A160(a1, (uint64_t)v46, &qword_10119DCC0);
      if (!v47)
      {
        swift_release(v15);
        sub_10004FF60((uint64_t)v46, &qword_10119DCC0);
        return result;
      }
      if ((swift_dynamicCast(v50, v46, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
      {
        v17 = v50[0];
        v16 = v50[1];
        v18 = type metadata accessor for JSONDecoder(0);
        swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
        v19 = JSONDecoder.init()();
        v20 = sub_100007E8C((uint64_t *)&unk_1011A38A0);
        v21 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
        v42 = v17;
        v43 = v16;
        dispatch thunk of JSONDecoder.decode<A>(_:from:)(v46, v20, v17, v16, v20, v21);
        swift_release(v19);
        v41 = v46[0];
        v22 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
        swift_beginAccess(v22, v50, 0, 0);
        sub_10005B704(v22, (uint64_t)v12, _s11MusicVideosVMa);
        v23 = sub_10075F4EC();
        sub_10005B748((uint64_t)v12, _s11MusicVideosVMa);
        v24 = sub_1001A53A0((uint64_t)v23, v41);
        swift_bridgeObjectRelease(v23);
        v41 = v22;
        sub_10005B704(v22, (uint64_t)v10, _s11MusicVideosVMa);
        v25 = *(int *)(v7 + 32);
        v26 = *(_QWORD *)&v10[v25];
        *(_QWORD *)&v10[v25] = v24;
        v27 = sub_10016CD08(v24, v26);
        if ((v27 & 1) != 0)
        {
          v28 = v26;
        }
        else
        {
          v39 = v26;
          v29 = 0xD000000000000012;
          v40 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          v47 = v20;
          v48 = v21;
          v49 = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
          v46[0] = v24;
          sub_10005B704((uint64_t)&v10[*(int *)(v7 + 24)], (uint64_t)v6, _s11MusicVideosV5ScopeOMa);
          v30 = type metadata accessor for Artist(0);
          v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v6, 1, v30);
          swift_retain(v24);
          if (v31 == 1)
          {
            v32 = "LibraryMusicVideos";
          }
          else
          {
            sub_10005B748((uint64_t)v6, _s11MusicVideosV5ScopeOMa);
            v29 = 0xD000000000000013;
            v32 = "LibraryArtistAlbums";
          }
          v33 = (unint64_t)(v32 - 32) | 0x8000000000000000;
          v44 = v29;
          v45 = v33;
          swift_bridgeObjectRetain();
          v34._countAndFlagsBits = 0x704F7265746C6946;
          v34._object = (void *)0xEC0000006E6F6974;
          String.append(_:)(v34);
          swift_bridgeObjectRelease(v33);
          v35 = v45;
          v36 = v40;
          NSUserDefaults.encodeValue(_:forKey:)(v46);
          swift_bridgeObjectRelease(v35);

          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v46);
          v28 = v39;
        }
        swift_bridgeObjectRelease(v28);
        v37 = v41;
        sub_10005B704(v41, (uint64_t)v12, _s11MusicVideosVMa);
        swift_beginAccess(v37, v46, 33, 0);
        sub_1001A81D8((uint64_t)v10, v37, _s11MusicVideosVMa);
        swift_endAccess(v46);
        sub_100183244(v12);
        sub_10005B748((uint64_t)v10, _s11MusicVideosVMa);
        sub_10005B748((uint64_t)v12, _s11MusicVideosVMa);
        sub_1000652DC(v42, v43);
      }
    }
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_10018FDE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  NSString v27;
  uint64_t result;
  _QWORD aBlock[6];
  _BYTE v31[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess(v14, v31, 0, 0);
  sub_10005B704(v14, (uint64_t)v13, _s10TVEpisodesVMa);
  if (*(_QWORD *)(*(_QWORD *)&v13[*(int *)(v11 + 56)] + 16))
  {
    if (*(_QWORD *)(*(_QWORD *)&v13[*(int *)(v11 + 44)] + 16))
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    sub_10005B748((uint64_t)v13, _s10TVEpisodesVMa);
    v15 = (void *)UIButton.init(configuration:primaryAction:)(v10, 0);
    v16 = swift_allocObject(&unk_1010B4128, 24, 7);
    swift_weakInit(v16 + 16, a1);
    aBlock[4] = sub_1001A7614;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100170D48;
    aBlock[3] = &unk_1010B4140;
    v17 = _Block_copy(aBlock);
    objc_msgSend(v15, "_setMenuProvider:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    objc_msgSend(v15, "setShowsMenuAsPrimaryAction:", 1);
    v18 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v19, v20);
    v21 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
    static Locale.current.getter(v21);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v23 = v22;
    v24 = v15;
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setAccessibilityLabel:", v25);

    v26 = v24;
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setLargeContentTitle:", v27, swift_bridgeObjectRelease(v23).n128_f64[0]);

    objc_msgSend(v26, "setShowsLargeContentViewer:", 1);
    return (uint64_t)v26;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001901C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  NSString v29;
  uint64_t result;
  _QWORD aBlock[5];
  uint64_t v33;
  _BYTE v34[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s6AlbumsVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess(v14, v34, 0, 0);
  sub_10005B704(v14, (uint64_t)v13, _s6AlbumsVMa);
  v15 = sub_100235664();
  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    if (*(_QWORD *)(*(_QWORD *)&v13[*(int *)(v11 + 32)] + 16))
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    sub_10005B748((uint64_t)v13, _s6AlbumsVMa);
    v17 = (void *)UIButton.init(configuration:primaryAction:)(v10, 0);
    v18 = swift_allocObject(&unk_1010B3FE8, 24, 7);
    swift_weakInit(v18 + 16, a1);
    aBlock[4] = sub_1001A7274;
    v33 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100170D48;
    aBlock[3] = &unk_1010B4000;
    v19 = _Block_copy(aBlock);
    objc_msgSend(v17, "_setMenuProvider:", v19, swift_release(v33).n128_f64[0]);
    _Block_release(v19);
    objc_msgSend(v17, "setShowsMenuAsPrimaryAction:", 1);
    v20 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v21, v22);
    v23 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
    static Locale.current.getter(v23);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v25 = v24;
    v26 = v17;
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setAccessibilityLabel:", v27);

    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setLargeContentTitle:", v29, swift_bridgeObjectRelease(v25).n128_f64[0]);

    objc_msgSend(v28, "setShowsLargeContentViewer:", 1);
    return (uint64_t)v28;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
  return result;
}

id sub_1001905AC(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  NSString v22;
  _QWORD aBlock[6];
  _BYTE v26[24];
  __int128 v27;
  _OWORD v28[2];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  swift_beginAccess(a1 + 1, v26, 0, 0);
  v11 = a1[2];
  v27 = a1[1];
  v28[0] = v11;
  *(_OWORD *)((char *)v28 + 12) = *(_OWORD *)((char *)a1 + 44);
  sub_1001A7ACC(&v27);
  sub_10017DEBC();
  sub_1001A7B10((uint64_t *)&v27);
  v12 = (void *)UIButton.init(configuration:primaryAction:)(v10, 0);
  v13 = swift_allocObject(&unk_1010B4308, 24, 7);
  swift_weakInit(v13 + 16, a1);
  aBlock[4] = sub_1001A7BE0;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010B4320;
  v14 = _Block_copy(aBlock);
  objc_msgSend(v12, "_setMenuProvider:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  objc_msgSend(v12, "setShowsMenuAsPrimaryAction:", 1);
  v15 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
  v16 = *v15;
  v17 = v15[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v16, v17);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
  static Locale.current.getter(v18);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v19 = v12;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setAccessibilityLabel:", v20);

  v21 = v19;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setLargeContentTitle:", v22, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v21, "setShowsLargeContentViewer:", 1);
  return v21;
}

uint64_t sub_10019088C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  id v31;
  NSString v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD aBlock[6];
  _BYTE v39[24];

  v35 = a3;
  v36 = a4;
  v34 = a2;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 2, v39, 0, 0);
  v13 = a1[12];
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = a1[5];
    v16 = a1[7];
    v15 = a1[8];
    v17 = a1[11];
    v18 = *(_QWORD *)(v15 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18)
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    swift_release();
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    v19 = (void *)UIButton.init(configuration:primaryAction:)(v12, 0);
    v20 = swift_allocObject(v34, 24, 7);
    swift_weakInit(v20 + 16, a1);
    aBlock[4] = v35;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100170D48;
    aBlock[3] = v36;
    v21 = _Block_copy(aBlock);
    objc_msgSend(v19, "_setMenuProvider:", v21, swift_release().n128_f64[0]);
    _Block_release(v21);
    objc_msgSend(v19, "setShowsMenuAsPrimaryAction:", 1);
    v22 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v23, v24);
    v25 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
    v26 = v37;
    static Locale.current.getter(v25);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v26, 0, 0, 256);
    v28 = v27;
    v29 = v19;
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setAccessibilityLabel:", v30);

    v31 = v29;
    v32 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setLargeContentTitle:", v32, swift_bridgeObjectRelease(v28).n128_f64[0]);

    objc_msgSend(v31, "setShowsLargeContentViewer:", 1);
    return (uint64_t)v31;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100190C58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  NSString v27;
  uint64_t result;
  _QWORD aBlock[6];
  _BYTE v31[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess(v14, v31, 0, 0);
  sub_10005B704(v14, (uint64_t)v13, _s9PlaylistsVMa);
  if (sub_10010E2B0()[2])
  {
    if (*(_QWORD *)(*(_QWORD *)&v13[*(int *)(v11 + 32)] + 16))
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    sub_10005B748((uint64_t)v13, _s9PlaylistsVMa);
    v15 = (void *)UIButton.init(configuration:primaryAction:)(v10, 0);
    v16 = swift_allocObject(&unk_1010B44E8, 24, 7);
    swift_weakInit(v16 + 16, a1);
    aBlock[4] = sub_1001A805C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100170D48;
    aBlock[3] = &unk_1010B4500;
    v17 = _Block_copy(aBlock);
    objc_msgSend(v15, "_setMenuProvider:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    objc_msgSend(v15, "setShowsMenuAsPrimaryAction:", 1);
    v18 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v19, v20);
    v21 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
    static Locale.current.getter(v21);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v23 = v22;
    v24 = v15;
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setAccessibilityLabel:", v25);

    v26 = v24;
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setLargeContentTitle:", v27, swift_bridgeObjectRelease(v23).n128_f64[0]);

    objc_msgSend(v26, "setShowsLargeContentViewer:", 1);
    return (uint64_t)v26;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100191038(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  NSString v20;
  id v21;
  NSString v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  _QWORD aBlock[6];
  _BYTE v27[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v27, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 104) + 16))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    v11 = (void *)UIButton.init(configuration:primaryAction:)(v9, 0);
    v12 = swift_allocObject(&unk_1010B4268, 24, 7);
    swift_weakInit(v12 + 16, a1);
    aBlock[4] = sub_1001A79E8;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100170D48;
    aBlock[3] = &unk_1010B4280;
    v13 = _Block_copy(aBlock);
    objc_msgSend(v11, "_setMenuProvider:", v13, swift_release().n128_f64[0]);
    _Block_release(v13);
    objc_msgSend(v11, "setShowsMenuAsPrimaryAction:", 1);
    v14 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v15, v16);
    v17 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
    v18 = v25;
    static Locale.current.getter(v17);
    String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, 0, v18, 0, 0, 256);
    v19 = v11;
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v19, "setAccessibilityLabel:", v20);

    v21 = v19;
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v21, "setLargeContentTitle:", v22, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v21, "setShowsLargeContentViewer:", 1);
    return (uint64_t)v21;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
  return result;
}

id sub_100191408(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  id v22;
  NSString v23;
  _QWORD aBlock[6];
  _BYTE v27[24];
  _OWORD v28[4];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
  swift_beginAccess(a1 + 1, v27, 0, 0);
  v11 = a1[2];
  v28[0] = a1[1];
  v28[1] = v11;
  v12 = a1[4];
  v28[2] = a1[3];
  v28[3] = v12;
  sub_1001A829C(v28);
  sub_10017DFA0();
  sub_1001A82EC((uint64_t *)v28);
  v13 = (void *)UIButton.init(configuration:primaryAction:)(v10, 0);
  v14 = swift_allocObject(&unk_1010B4588, 24, 7);
  swift_weakInit(v14 + 16, a1);
  aBlock[4] = sub_1001A840C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100170D48;
  aBlock[3] = &unk_1010B45A0;
  v15 = _Block_copy(aBlock);
  objc_msgSend(v13, "_setMenuProvider:", v15, swift_release().n128_f64[0]);
  _Block_release(v15);
  objc_msgSend(v13, "setShowsMenuAsPrimaryAction:", 1);
  v16 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
  v17 = *v16;
  v18 = v16[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v17, v18);
  v19 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
  static Locale.current.getter(v19);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v20 = v13;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setAccessibilityLabel:", v21);

  v22 = v20;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setLargeContentTitle:", v23, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v22, "setShowsLargeContentViewer:", 1);
  return v22;
}

uint64_t sub_1001916E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  NSString v29;
  uint64_t result;
  _QWORD aBlock[5];
  uint64_t v33;
  _BYTE v34[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v8);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v11);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess(v14, v34, 0, 0);
  sub_10005B704(v14, (uint64_t)v13, _s11MusicVideosVMa);
  v15 = sub_10075F4EC();
  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    if (*(_QWORD *)(*(_QWORD *)&v13[*(int *)(v11 + 32)] + 16))
      static UIButton.Configuration.selectedBarButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    else
      static UIButton.Configuration.barButtonConfiguration(imageName:)(0xD00000000000001ALL, 0x8000000100E2FF50);
    sub_10004A07C(0, (unint64_t *)&unk_1011AD710, UIButton_ptr);
    sub_10005B748((uint64_t)v13, _s11MusicVideosVMa);
    v17 = (void *)UIButton.init(configuration:primaryAction:)(v10, 0);
    v18 = swift_allocObject(&unk_1010B3F48, 24, 7);
    swift_weakInit(v18 + 16, a1);
    aBlock[4] = sub_1001A7078;
    v33 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100170D48;
    aBlock[3] = &unk_1010B3F60;
    v19 = _Block_copy(aBlock);
    objc_msgSend(v17, "_setMenuProvider:", v19, swift_release(v33).n128_f64[0]);
    _Block_release(v19);
    objc_msgSend(v17, "setShowsMenuAsPrimaryAction:", 1);
    v20 = AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor();
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v21, v22);
    v23 = String.LocalizationValue.init(stringLiteral:)(0x4D207265746C6946, 0xEB00000000756E65);
    static Locale.current.getter(v23);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v25 = v24;
    v26 = v17;
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setAccessibilityLabel:", v27);

    v28 = v26;
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setLargeContentTitle:", v29, swift_bridgeObjectRelease(v25).n128_f64[0]);

    objc_msgSend(v28, "setShowsLargeContentViewer:", 1);
    return (uint64_t)v28;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x8000000100E2FF90, "Music/LibraryViewType.swift", 27, 2, 232, 0);
    __break(1u);
  }
  return result;
}

Class sub_100191ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  Class v9;
  uint64_t v11;
  _BYTE v12[24];
  _OWORD v13[5];
  uint64_t v14;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  swift_beginAccess(Strong + 16, &v11, 0, 0);
  v6 = *(_OWORD *)(v5 + 64);
  v13[2] = *(_OWORD *)(v5 + 48);
  v13[3] = v6;
  v13[4] = *(_OWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 96);
  v7 = *(_OWORD *)(v5 + 32);
  v13[0] = *(_OWORD *)(v5 + 16);
  v13[1] = v7;
  v8 = (char *)swift_allocObject(&unk_1010B4088, 24, 7);
  swift_weakInit(v8 + 16, v5);
  sub_1001A7DE4(v13);
  swift_retain();
  v9 = sub_10017F1A0((uint64_t)sub_1001A7550, v8, (uint64_t)&unk_1010B40D8, (uint64_t)sub_1001AB674, (_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A7570);
  swift_release();
  sub_1001A7E50((uint64_t *)v13);
  swift_release();
  swift_release();
  return v9;
}

Class sub_100191BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  _OWORD *v5;
  __int128 v6;
  char *v7;
  UIMenu v8;
  uint64_t v10;
  _BYTE v11[24];
  __int128 v12;
  _OWORD v13[2];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = (_OWORD *)Strong;
  swift_beginAccess(Strong + 16, &v10, 0, 0);
  v6 = v5[2];
  v12 = v5[1];
  v13[0] = v6;
  *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)v5 + 44);
  v7 = (char *)swift_allocObject(&unk_1010B4308, 24, 7);
  swift_weakInit(v7 + 16, v5);
  sub_1001A7ACC(&v12);
  swift_retain();
  v8.super.super.isa = sub_10017E698((uint64_t)sub_1001A7BE8, v7).super.super.isa;
  swift_release();
  sub_1001A7B10((uint64_t *)&v12);
  swift_release();
  swift_release();
  return v8.super.super.isa;
}

Class sub_100191CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  Class v9;
  uint64_t v11;
  _BYTE v12[24];
  _OWORD v13[5];
  uint64_t v14;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  swift_beginAccess(Strong + 16, &v11, 0, 0);
  v6 = *(_OWORD *)(v5 + 64);
  v13[2] = *(_OWORD *)(v5 + 48);
  v13[3] = v6;
  v13[4] = *(_OWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 96);
  v7 = *(_OWORD *)(v5 + 32);
  v13[0] = *(_OWORD *)(v5 + 16);
  v13[1] = v7;
  v8 = (char *)swift_allocObject(&unk_1010B43A8, 24, 7);
  swift_weakInit(v8 + 16, v5);
  sub_1001A7DE4(v13);
  swift_retain();
  v9 = sub_10017F1A0((uint64_t)sub_1001A7D7C, v8, (uint64_t)&unk_1010B43F8, (uint64_t)sub_1001AB674, (_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A7D9C);
  swift_release();
  sub_1001A7E50((uint64_t *)v13);
  swift_release();
  swift_release();
  return v9;
}

Class sub_100191DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  Class v9;
  uint64_t v11;
  _BYTE v12[24];
  _OWORD v13[5];
  uint64_t v14;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  swift_beginAccess(Strong + 16, &v11, 0, 0);
  v6 = *(_OWORD *)(v5 + 64);
  v13[2] = *(_OWORD *)(v5 + 48);
  v13[3] = v6;
  v13[4] = *(_OWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 96);
  v7 = *(_OWORD *)(v5 + 32);
  v13[0] = *(_OWORD *)(v5 + 16);
  v13[1] = v7;
  v8 = (char *)swift_allocObject(&unk_1010B4448, 24, 7);
  swift_weakInit(v8 + 16, v5);
  sub_1001A7DE4(v13);
  swift_retain();
  v9 = sub_10017F1A0((uint64_t)sub_1001A7F78, v8, (uint64_t)&unk_1010B4498, (uint64_t)sub_1001AB674, (_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A7F98);
  swift_release();
  sub_1001A7E50((uint64_t *)v13);
  swift_release();
  swift_release();
  return v9;
}

Class sub_100191EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char *v9;
  Class v10;
  uint64_t v12;
  _BYTE v13[24];
  _OWORD v14[6];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = (_OWORD *)Strong;
  swift_beginAccess(Strong + 16, &v12, 0, 0);
  v6 = v5[4];
  v14[2] = v5[3];
  v14[3] = v6;
  v7 = v5[6];
  v14[4] = v5[5];
  v14[5] = v7;
  v8 = v5[2];
  v14[0] = v5[1];
  v14[1] = v8;
  v9 = (char *)swift_allocObject(&unk_1010B4268, 24, 7);
  swift_weakInit(v9 + 16, v5);
  sub_100048B2C(v14);
  swift_retain();
  v10 = sub_10017EE9C((uint64_t)sub_1001A79F0, v9);
  swift_release();
  sub_100048B98((uint64_t *)v14);
  swift_release();
  swift_release();
  return v10;
}

Class sub_100191FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  Class v9;
  uint64_t v11;
  _BYTE v12[24];
  _OWORD v13[5];
  uint64_t v14;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = Strong;
  swift_beginAccess(Strong + 16, &v11, 0, 0);
  v6 = *(_OWORD *)(v5 + 64);
  v13[2] = *(_OWORD *)(v5 + 48);
  v13[3] = v6;
  v13[4] = *(_OWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v5 + 96);
  v7 = *(_OWORD *)(v5 + 32);
  v13[0] = *(_OWORD *)(v5 + 16);
  v13[1] = v7;
  v8 = (char *)swift_allocObject(&unk_1010B41C8, 24, 7);
  swift_weakInit(v8 + 16, v5);
  sub_1001A7DE4(v13);
  swift_retain();
  v9 = sub_10017F1A0((uint64_t)sub_1001A78C8, v8, (uint64_t)&unk_1010B4218, (uint64_t)sub_1001AB674, (_QWORD *(*)(uint64_t *__return_ptr, char *))sub_1001A78E8);
  swift_release();
  sub_1001A7E50((uint64_t *)v13);
  swift_release();
  swift_release();
  return v9;
}

Class sub_1001920FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  UIMenu v9;
  uint64_t v11;
  _BYTE v12[24];
  _OWORD v13[4];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (!Strong)
    return 0;
  v5 = (_OWORD *)Strong;
  swift_beginAccess(Strong + 16, &v11, 0, 0);
  v6 = v5[2];
  v13[0] = v5[1];
  v13[1] = v6;
  v7 = v5[4];
  v13[2] = v5[3];
  v13[3] = v7;
  v8 = (char *)swift_allocObject(&unk_1010B4588, 24, 7);
  swift_weakInit(v8 + 16, v5);
  sub_1001A829C(v13);
  swift_retain();
  v9.super.super.isa = sub_10017F4A8((uint64_t)sub_1001A8414, v8).super.super.isa;
  swift_release();
  sub_1001A82EC((uint64_t *)v13);
  swift_release();
  swift_release();
  return v9.super.super.isa;
}

uint64_t sub_1001921E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, __n128))
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];

  v12 = a4(0);
  __chkstk_darwin(v12);
  v14 = &v22[-v13];
  a3 += 16;
  swift_beginAccess(a3, v23, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (!Strong)
    return 0;
  v16 = Strong;
  v17 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
  swift_beginAccess(v17, v22, 0, 0);
  sub_10005B704(v17, (uint64_t)v14, a4);
  v18 = swift_allocObject(a5, 24, 7);
  swift_weakInit(v18 + 16, v16);
  v19 = swift_retain(v18);
  v20 = a7(a6, v18, v19);
  swift_release(v18);
  sub_10005B748((uint64_t)v14, a4);
  swift_release(v16);
  swift_release(v18);
  return v20;
}

double sub_100192328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v4 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v18[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v20, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v13) = 1;
    v14 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
    swift_beginAccess(v14, v19, 0, 0);
    sub_10005B704(v14, (uint64_t)v9, _s10TVEpisodesVMa);
    v15 = *(int *)(v4 + 44);
    v16 = *(_QWORD *)&v9[v15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v16);
    *(_QWORD *)&v9[v15] = a1;
    sub_10005B704(v14, (uint64_t)v6, _s10TVEpisodesVMa);
    swift_beginAccess(v14, v18, 33, 0);
    sub_1001A81D8((uint64_t)v9, v14, _s10TVEpisodesVMa);
    swift_endAccess(v18);
    sub_100180FC8(v6);
    sub_10005B748((uint64_t)v9, _s10TVEpisodesVMa);
    sub_10005B748((uint64_t)v6, _s10TVEpisodesVMa);
    *(_BYTE *)(v12 + v13) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1001924B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[6];
  _BYTE v22[24];
  _BYTE v23[24];

  v4 = _s6AlbumsVMa(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v21 - v8;
  a2 += 16;
  swift_beginAccess(a2, v23, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v13) = 1;
    v14 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
    swift_beginAccess(v14, v22, 0, 0);
    sub_10005B704(v14, (uint64_t)v9, _s6AlbumsVMa);
    v15 = *(int *)(v4 + 32);
    v16 = *(_QWORD *)&v9[v15];
    *(_QWORD *)&v9[v15] = a1;
    v17 = swift_bridgeObjectRetain();
    if ((sub_10016CD08(v17, v16) & 1) == 0)
    {
      v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v21[3] = sub_100007E8C((uint64_t *)&unk_1011A38A0);
      v21[4] = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      v21[5] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      v21[0] = a1;
      swift_bridgeObjectRetain();
      sub_10023513C();
      v20 = v19;
      NSUserDefaults.encodeValue(_:forKey:)(v21);
      swift_bridgeObjectRelease(v20);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v21);
    }
    swift_bridgeObjectRelease(v16);
    sub_10005B704(v14, (uint64_t)v7, _s6AlbumsVMa);
    swift_beginAccess(v14, v21, 33, 0);
    sub_1001A81D8((uint64_t)v9, v14, _s6AlbumsVMa);
    swift_endAccess(v21);
    sub_10018168C(v7);
    sub_10005B748((uint64_t)v9, _s6AlbumsVMa);
    sub_10005B748((uint64_t)v7, _s6AlbumsVMa);
    *(_BYTE *)(v12 + v13) = 0;
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_100192714(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __n128 v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  _BYTE v23[32];
  _BYTE v24[24];
  _BYTE v25[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v7) = 1;
    v8 = (__int128 *)(Strong + 16);
    swift_beginAccess(Strong + 16, v24, 1, 0);
    v9 = *(_QWORD *)(v6 + 16);
    v21 = *(_BYTE *)(v6 + 24);
    v10 = *(_QWORD *)(v6 + 40);
    v20 = *(_QWORD *)(v6 + 32);
    v11 = *(_QWORD *)(v6 + 48);
    v12 = *(_BYTE *)(v6 + 56);
    v13 = *(_BYTE *)(v6 + 57);
    v18 = *(_BYTE *)(v6 + 59);
    v19 = *(_BYTE *)(v6 + 58);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_10016CD08(a1, v11) & 1) == 0)
    {
      v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      *(_QWORD *)&v23[8] = sub_100007E8C((uint64_t *)&unk_1011A38A0);
      *(_QWORD *)&v23[16] = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      *(_QWORD *)&v23[24] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      *(_QWORD *)&v22 = a1;
      swift_bridgeObjectRetain();
      NSUserDefaults.encodeValue(_:forKey:)(&v22);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v22);
    }
    swift_bridgeObjectRelease();
    v15 = v8[1];
    v16 = *(__int128 *)((char *)v8 + 28);
    v22 = *v8;
    *(_OWORD *)v23 = v15;
    *(_OWORD *)&v23[12] = v16;
    *(_QWORD *)(v6 + 16) = v9;
    *(_BYTE *)(v6 + 24) = v21;
    *(_QWORD *)(v6 + 32) = v20;
    *(_QWORD *)(v6 + 40) = v10;
    *(_QWORD *)(v6 + 48) = a1;
    *(_BYTE *)(v6 + 56) = v12;
    *(_BYTE *)(v6 + 57) = v13;
    *(_BYTE *)(v6 + 58) = v19;
    *(_BYTE *)(v6 + 59) = v18;
    sub_1001A7ACC(&v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = swift_release();
    sub_100181A1C(&v22, v17);
    sub_1001A7B10((uint64_t *)&v22);
    *(_BYTE *)(v6 + v7) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100192940(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *, __n128))
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  void (*v33)(_OWORD *, __n128);
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  _OWORD v37[5];
  uint64_t v38;

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v36, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v34 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v34) = 1;
    swift_beginAccess(Strong + 16, v35, 1, 0);
    v9 = *(_QWORD *)(v8 + 16);
    v32 = *(_BYTE *)(v8 + 24);
    v10 = *(_QWORD *)(v8 + 40);
    v31 = *(_QWORD *)(v8 + 32);
    v29 = *(_BYTE *)(v8 + 49);
    v30 = *(_BYTE *)(v8 + 48);
    v25 = *(_BYTE *)(v8 + 51);
    v11 = *(_QWORD *)(v8 + 56);
    v27 = *(_BYTE *)(v8 + 72);
    v28 = *(_BYTE *)(v8 + 50);
    v12 = *(_QWORD *)(v8 + 88);
    v26 = *(_QWORD *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = *(_OWORD *)(v8 + 16);
    v15 = *(_OWORD *)(v8 + 32);
    v16 = *(_OWORD *)(v8 + 48);
    v17 = *(_OWORD *)(v8 + 80);
    v37[3] = *(_OWORD *)(v8 + 64);
    v37[4] = v17;
    v19 = *(_QWORD *)(v8 + 88);
    v38 = *(_QWORD *)(v8 + 96);
    v18 = v38;
    v37[1] = v15;
    v37[2] = v16;
    v37[0] = v14;
    v24 = *(_QWORD *)(v8 + 40);
    v33 = a3;
    v20 = a1;
    v21 = *(_QWORD *)(v8 + 56);
    v22 = *(_QWORD *)(v8 + 64);
    *(_QWORD *)(v8 + 16) = v9;
    *(_BYTE *)(v8 + 24) = v32;
    *(_QWORD *)(v8 + 32) = v31;
    *(_QWORD *)(v8 + 40) = v10;
    *(_BYTE *)(v8 + 48) = v30;
    *(_BYTE *)(v8 + 49) = v29;
    *(_BYTE *)(v8 + 50) = v28;
    *(_BYTE *)(v8 + 51) = v25;
    *(_QWORD *)(v8 + 56) = v11;
    *(_QWORD *)(v8 + 64) = v20;
    *(_BYTE *)(v8 + 72) = v27;
    *(_QWORD *)(v8 + 80) = v26;
    *(_QWORD *)(v8 + 88) = v12;
    *(_QWORD *)(v8 + 96) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A7DE4(v37);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v24);
    v23 = swift_release();
    v33(v37, v23);
    sub_1001A7E50((uint64_t *)v37);
    *(_BYTE *)(v8 + v34) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100192B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  BOOL v23;
  unint64_t v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v30[6];
  char v31[24];
  char v32[24];

  v4 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v13) = 1;
    v14 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
    swift_beginAccess(v14, v31, 0, 0);
    sub_10005B704(v14, (uint64_t)v9, _s9PlaylistsVMa);
    v15 = *(int *)(v4 + 32);
    v16 = *(_QWORD *)&v9[v15];
    *(_QWORD *)&v9[v15] = a1;
    v17 = swift_bridgeObjectRetain();
    if ((sub_10016CD08(v17, v16) & 1) == 0)
    {
      v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v30[3] = sub_100007E8C((uint64_t *)&unk_1011A38A0);
      v30[4] = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      v30[5] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      v30[0] = a1;
      v19 = (uint64_t *)&v9[*(int *)(v4 + 24)];
      v20 = qword_10119B938;
      swift_bridgeObjectRetain();
      if (v20 != -1)
        swift_once(&qword_10119B938, sub_10010BB4C);
      v21 = _s9PlaylistsV5ScopeVMa(0);
      v22 = (uint64_t *)sub_100048B14(v21, (uint64_t)qword_10124C8A8);
      v23 = sub_10010DC18(v19, v22);
      v24 = 0xD000000000000010;
      if (v23)
      {
        v24 = 0xD000000000000011;
        v25 = 0x8000000100E2D170;
      }
      else
      {
        v25 = 0x8000000100E2D150;
      }
      v28 = v24;
      v29 = v25;
      swift_bridgeObjectRetain();
      v26._countAndFlagsBits = 0x704F7265746C6946;
      v26._object = (void *)0xEC0000006E6F6974;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v25);
      v27 = v29;
      NSUserDefaults.encodeValue(_:forKey:)(v30);
      swift_bridgeObjectRelease(v27);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v30);
    }
    swift_bridgeObjectRelease(v16);
    sub_10005B704(v14, (uint64_t)v6, _s9PlaylistsVMa);
    swift_beginAccess(v14, v30, 33, 0);
    sub_1001A81D8((uint64_t)v9, v14, _s9PlaylistsVMa);
    swift_endAccess(v30);
    sub_10018241C(v6);
    sub_10005B748((uint64_t)v9, _s9PlaylistsVMa);
    sub_10005B748((uint64_t)v6, _s9PlaylistsVMa);
    *(_BYTE *)(v12 + v13) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100192E38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __n128 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[24];
  _OWORD v30[7];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v27 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v27) = 1;
    swift_beginAccess(Strong + 16, v28, 1, 0);
    v7 = *(_QWORD *)(v6 + 16);
    v24 = *(_BYTE *)(v6 + 24);
    v8 = *(_QWORD *)(v6 + 40);
    v23 = *(_QWORD *)(v6 + 32);
    v21 = *(_BYTE *)(v6 + 49);
    v22 = *(_BYTE *)(v6 + 48);
    v19 = *(_BYTE *)(v6 + 51);
    v20 = *(_BYTE *)(v6 + 50);
    v9 = *(_QWORD *)(v6 + 64);
    v18 = *(_QWORD *)(v6 + 56);
    v26 = *(_BYTE *)(v6 + 80);
    v10 = *(_QWORD *)(v6 + 96);
    v25 = *(_QWORD *)(v6 + 88);
    v11 = *(_QWORD *)(v6 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = *(_OWORD *)(v6 + 16);
    v13 = *(_OWORD *)(v6 + 32);
    v14 = *(_OWORD *)(v6 + 48);
    v15 = *(_OWORD *)(v6 + 64);
    v16 = *(_OWORD *)(v6 + 96);
    v30[4] = *(_OWORD *)(v6 + 80);
    v30[5] = v16;
    v30[2] = v14;
    v30[3] = v15;
    v30[0] = v12;
    v30[1] = v13;
    *(_QWORD *)(v6 + 16) = v7;
    *(_BYTE *)(v6 + 24) = v24;
    *(_QWORD *)(v6 + 32) = v23;
    *(_QWORD *)(v6 + 40) = v8;
    *(_BYTE *)(v6 + 48) = v22;
    *(_BYTE *)(v6 + 49) = v21;
    *(_BYTE *)(v6 + 50) = v20;
    *(_BYTE *)(v6 + 51) = v19;
    *(_QWORD *)(v6 + 56) = v18;
    *(_QWORD *)(v6 + 64) = v9;
    *(_QWORD *)(v6 + 72) = a1;
    *(_BYTE *)(v6 + 80) = v26;
    *(_QWORD *)(v6 + 88) = v25;
    *(_QWORD *)(v6 + 96) = v10;
    *(_QWORD *)(v6 + 104) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100048B2C(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = swift_release();
    sub_1001827AC(v30, v17);
    sub_100048B98((uint64_t *)v30);
    *(_BYTE *)(v6 + v27) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100193020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  _BYTE v24[24];
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v7) = 1;
    v8 = (__int128 *)(Strong + 16);
    swift_beginAccess(Strong + 16, v24, 1, 0);
    v9 = *(_QWORD *)(v6 + 16);
    v23 = *(_BYTE *)(v6 + 24);
    v10 = *(_QWORD *)(v6 + 40);
    v22 = *(_QWORD *)(v6 + 32);
    v11 = *(_QWORD *)(v6 + 48);
    v20 = *(_BYTE *)(v6 + 57);
    v21 = *(_BYTE *)(v6 + 56);
    v18 = *(_BYTE *)(v6 + 59);
    v19 = *(_BYTE *)(v6 + 58);
    v12 = *(_QWORD *)(v6 + 72);
    v17 = *(_QWORD *)(v6 + 64);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_10016CD08(a1, v11) & 1) == 0)
    {
      v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      *((_QWORD *)&v27 + 1) = sub_100007E8C((uint64_t *)&unk_1011A38A0);
      *(_QWORD *)&v28 = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      *((_QWORD *)&v28 + 1) = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      *(_QWORD *)&v26 = a1;
      swift_bridgeObjectRetain();
      NSUserDefaults.encodeValue(_:forKey:)(&v26);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v26);
    }
    swift_bridgeObjectRelease();
    v14 = *v8;
    v15 = v8[1];
    v16 = v8[3];
    v28 = v8[2];
    v29 = v16;
    v26 = v14;
    v27 = v15;
    *(_QWORD *)(v6 + 16) = v9;
    *(_BYTE *)(v6 + 24) = v23;
    *(_QWORD *)(v6 + 32) = v22;
    *(_QWORD *)(v6 + 40) = v10;
    *(_QWORD *)(v6 + 48) = a1;
    *(_BYTE *)(v6 + 56) = v21;
    *(_BYTE *)(v6 + 57) = v20;
    *(_BYTE *)(v6 + 58) = v19;
    *(_BYTE *)(v6 + 59) = v18;
    *(_QWORD *)(v6 + 64) = v17;
    *(_QWORD *)(v6 + 72) = v12;
    sub_1001A829C(&v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100182E0C((uint64_t *)&v26);
    sub_1001A82EC((uint64_t *)&v26);
    *(_BYTE *)(v6 + v7) = 0;
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_10019327C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  const char *v24;
  unint64_t v25;
  Swift::String v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v33[6];
  char v34[24];
  char v35[24];

  v4 = _s11MusicVideosV5ScopeOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = _s11MusicVideosVMa(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v29 - v11;
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(*(_QWORD *)Strong + 160);
    *(_BYTE *)(Strong + v16) = 1;
    v17 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 96);
    swift_beginAccess(v17, v34, 0, 0);
    sub_10005B704(v17, (uint64_t)v12, _s11MusicVideosVMa);
    v18 = *(int *)(v7 + 32);
    v19 = *(_QWORD *)&v12[v18];
    *(_QWORD *)&v12[v18] = a1;
    v20 = swift_bridgeObjectRetain();
    if ((sub_10016CD08(v20, v19) & 1) == 0)
    {
      v21 = 0xD000000000000012;
      v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v33[3] = sub_100007E8C((uint64_t *)&unk_1011A38A0);
      v33[4] = sub_10010E204(&qword_1011A19E0, (void (*)(void))sub_10010E1C0, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      v33[5] = sub_10010E204(&qword_1011A19E8, (void (*)(void))sub_10010E26C, (uint64_t)&protocol conformance descriptor for <> Set<A>);
      v33[0] = a1;
      sub_10005B704((uint64_t)&v12[*(int *)(v7 + 24)], (uint64_t)v6, _s11MusicVideosV5ScopeOMa);
      v22 = type metadata accessor for Artist(0);
      v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v6, 1, v22);
      swift_bridgeObjectRetain();
      if (v23 == 1)
      {
        v24 = "LibraryMusicVideos";
      }
      else
      {
        sub_10005B748((uint64_t)v6, _s11MusicVideosV5ScopeOMa);
        v21 = 0xD000000000000013;
        v24 = "LibraryArtistAlbums";
      }
      v25 = (unint64_t)(v24 - 32) | 0x8000000000000000;
      v31 = v21;
      v32 = v25;
      swift_bridgeObjectRetain();
      v26._countAndFlagsBits = 0x704F7265746C6946;
      v26._object = (void *)0xEC0000006E6F6974;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v25);
      v27 = v32;
      v28 = v30;
      NSUserDefaults.encodeValue(_:forKey:)(v33);
      swift_bridgeObjectRelease(v27);

      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v33);
    }
    swift_bridgeObjectRelease(v19);
    sub_10005B704(v17, (uint64_t)v10, _s11MusicVideosVMa);
    swift_beginAccess(v17, v33, 33, 0);
    sub_1001A81D8((uint64_t)v12, v17, _s11MusicVideosVMa);
    swift_endAccess(v33);
    sub_100183244(v10);
    sub_10005B748((uint64_t)v12, _s11MusicVideosVMa);
    sub_10005B748((uint64_t)v10, _s11MusicVideosVMa);
    *(_BYTE *)(v15 + v16) = 0;
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001935B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v18;

  v4 = sub_100007E8C(&qword_1011A3990);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(a1, v4, v6);
  v9 = type metadata accessor for TitledSection(0);
  v10 = type metadata accessor for RecentlyAddedMusicItem(0);
  v11 = sub_100048748(&qword_1011A3998, (uint64_t (*)(uint64_t))&type metadata accessor for RecentlyAddedMusicItem, (uint64_t)&protocol conformance descriptor for RecentlyAddedMusicItem);
  MusicLibrarySectionedRequest.init()(v9, v10, &protocol witness table for TitledSection, v11);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v12, v4);
  LODWORD(v9) = *(unsigned __int8 *)(a2 + 8);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(*(unsigned __int8 *)(a2 + 8), v4);
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(a2 + 16));
  MusicLibrarySectionedRequest.limit.setter(60, v4);
  if ((_DWORD)v9 == 1)
  {
    KeyPath = swift_getKeyPath(&unk_100EACE98);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(KeyPath, 0, v4);
    v14 = swift_release();
    MusicLibrarySectionedRequest.excludeNonPinnedPlaylists.setter(1, v4, v14);
  }
  else
  {
    v16 = swift_getKeyPath(&unk_100EACE70);
    MusicLibrarySectionedRequest.sortItems<A>(by:ascending:)(v16, 0, v4);
    v15 = swift_release();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v5 + 32))(a1, v8, v4, v15);
}

uint64_t sub_100193734(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  v10 = sub_100007E8C(a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  v11 = sub_100048748(a4, a5, a6);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  v13 = a5(0);
  return v12(v13, v11);
}

double sub_1001937BC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD))
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t Strong;
  double result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v12 = sub_100007E8C(a3);
  __chkstk_darwin(v12);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v24, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v17 = Strong;
    v18 = *(_QWORD *)(*(_QWORD *)Strong + 144);
    v19 = *(_QWORD *)(Strong + v18);
    if (v19)
    {
      swift_retain(*(_QWORD *)(Strong + v18));
      v21 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v20);
      swift_release(v19);
      if ((v21 & 1) != 0)
      {
        sub_10004A160(a1, (uint64_t)v14, a3);
        v22 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 200);
        swift_beginAccess(v22, v23, 33, 0);
        sub_1001A83C8((uint64_t)v14, v22, a3);
        swift_endAccess(v23);
        sub_100193910(a3, a4, a5, a6);
        sub_10004FF60((uint64_t)v14, a3);
      }
    }
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

void sub_100193910(uint64_t *a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v9 = v4;
  v10 = sub_100007E8C(a1);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C820 != -1)
    swift_once(&qword_10119C820, sub_1007E0480);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100048B14(v13, (uint64_t)qword_1011C9DF8);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v25 = v12;
    v17 = swift_slowAlloc(12, -1);
    v26 = a4;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v29[0] = v19;
    *(_DWORD *)v18 = 136315138;
    v12 = v25;
    v27 = sub_100322200(a2, a3, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "➡️ Received Response=%s", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    v20 = v18;
    a4 = v26;
    swift_slowDealloc(v20, -1, -1);
  }

  v21 = *v9;
  if (*((_BYTE *)v9 + *(_QWORD *)(*v9 + 128)) == 1)
  {
    v22 = (uint64_t)v9 + *(_QWORD *)(v21 + 200);
    swift_beginAccess(v22, v29, 0, 0);
    sub_10004A160(v22, (uint64_t)v12, a1);
    v23 = (uint64_t)v9 + *(_QWORD *)(*v9 + 112);
    swift_beginAccess(v23, &v27, 33, 0);
    sub_1001A83C8((uint64_t)v12, v23, a1);
    v24 = swift_endAccess(&v27);
    a4(v24);
    sub_10004FF60((uint64_t)v12, a1);
  }
  else
  {
    *((_BYTE *)v9 + *(_QWORD *)(v21 + 192)) = 1;
  }
}

uint64_t sub_100193B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = *(_QWORD *)(a2 + 16);
  result = __CocoaSet.count.getter();
  if (v4 != result)
    return 0;
  v6 = 0;
  v7 = a2 + 56;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v6 << 6);
LABEL_6:
    v14 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v13);
    v15 = swift_retain(v14);
    v16 = __CocoaSet.contains(_:)(v15, a1);
    result = swift_release(v14);
    if ((v16 & 1) == 0)
      return 0;
  }
  v17 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v17 >= v11)
    return 1;
  v18 = *(_QWORD *)(v7 + 8 * v17);
  ++v6;
  if (v18)
    goto LABEL_19;
  v6 = v17 + 1;
  if (v17 + 1 >= v11)
    return 1;
  v18 = *(_QWORD *)(v7 + 8 * v6);
  if (v18)
  {
LABEL_19:
    v10 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v6 << 6);
    goto LABEL_6;
  }
  v19 = v17 + 2;
  if (v19 >= v11)
    return 1;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v6 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v6 >= v11)
      return 1;
    v18 = *(_QWORD *)(v7 + 8 * v6);
    ++v19;
    if (v18)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_100193CCC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748(&qword_1011A3CF8, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10019B1D8((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_100193F28(unsigned __int8 *a1, unsigned __int8 a2)
{
  unint64_t *v2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t result;
  unint64_t *v21;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  v21 = v2;
  if (a2)
  {
    if (a2 == 1)
      v6 = 0x657469726F766166;
    else
      v6 = 0x64616F6C6E776F64;
    v7 = 0xE900000000000073;
  }
  else
  {
    v7 = 0xE300000000000000;
    v6 = 7105633;
  }
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v21);
    v22[0] = *v21;
    *v21 = 0x8000000000000000;
    sub_10019B42C(a2, v10, isUniquelyReferenced_nonNull_native);
    v19 = *v21;
    *v21 = v22[0];
    swift_bridgeObjectRelease(v19);
    result = 1;
    goto LABEL_28;
  }
  v11 = ~v9;
  while (1)
  {
    if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v10))
    {
      if (*(_BYTE *)(*(_QWORD *)(v5 + 48) + v10) == 1)
        v12 = 0x657469726F766166;
      else
        v12 = 0x64616F6C6E776F64;
      v13 = 0xE900000000000073;
      v14 = a2;
      if (a2)
      {
LABEL_17:
        if (v14 == 1)
          v16 = 0x657469726F766166;
        else
          v16 = 0x64616F6C6E776F64;
        v15 = 0xE900000000000073;
        if (v12 != v16)
          goto LABEL_22;
        goto LABEL_21;
      }
    }
    else
    {
      v13 = 0xE300000000000000;
      v12 = 7105633;
      v14 = a2;
      if (a2)
        goto LABEL_17;
    }
    v15 = 0xE300000000000000;
    v16 = 7105633;
    if (v12 != 7105633)
      goto LABEL_22;
LABEL_21:
    if (v13 == v15)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v13);
      goto LABEL_27;
    }
LABEL_22:
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v16, v15, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
    if ((v17 & 1) != 0)
      break;
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_24;
  }
  v13 = v5;
LABEL_27:
  swift_bridgeObjectRelease(v13);
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v21 + 48) + v10);
LABEL_28:
  *a1 = a2;
  return result;
}

void sub_1001941A4(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, *(_QWORD *)(*(_QWORD *)v2 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100194210()
{
  char *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  swift_bridgeObjectRetain();
  String.hash(into:)(&v8, 0x6F4E6E657473696CLL, 0xE900000000000077);
  swift_bridgeObjectRelease(0xE900000000000077);
  v4 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v8 = *v1;
  *v1 = 0x8000000000000000;
  sub_10019B6AC(v2, v4, isUniquelyReferenced_nonNull_native);
  v6 = *v1;
  *v1 = v8;
  swift_bridgeObjectRelease(v6);
  result = 1;
  *v0 = v2;
  return result;
}

uint64_t sub_100194530(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[9];

  v3 = v2;
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain();
  sub_1002FA294();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v22 = v2;
    v23 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_10005B704(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for SidebarMenu.Item);
      sub_100300E0C((uint64_t)v9, a2);
      v17 = v16;
      sub_10005B748((uint64_t)v9, type metadata accessor for SidebarMenu.Item);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease(v10);
        v3 = v22;
        a1 = v23;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v10);
    sub_10005B748(a2, type metadata accessor for SidebarMenu.Item);
    sub_10005B704(*(_QWORD *)(*v22 + 48) + v15 * v13, v23, type metadata accessor for SidebarMenu.Item);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_10005B704(a2, (uint64_t)v9, type metadata accessor for SidebarMenu.Item);
    v24[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_10019BA84((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    v19 = *v3;
    *v3 = v24[0];
    swift_bridgeObjectRelease(v19);
    sub_10005B6C0(a2, a1, type metadata accessor for SidebarMenu.Item);
    return 1;
  }
}

BOOL sub_10019472C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, *(_QWORD *)(*v0 + 40));
  Hasher._combine(_:)(0);
  v2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v1 + 32));
  v3 = (1 << v2) & *(_QWORD *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56);
  if (!v3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v0);
    v7[0] = *v0;
    *v0 = 0x8000000000000000;
    sub_10019BC60(v2, isUniquelyReferenced_nonNull_native);
    v5 = *v0;
    *v0 = v7[0];
    swift_bridgeObjectRelease(v5);
  }
  return v3 == 0;
}

uint64_t sub_1001947EC(_BYTE *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v15[9];

  v3 = v2;
  v6 = a2 & 1;
  v7 = *v3;
  Hasher.init(_seed:)(v15, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(a2 & 1);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_10019BD5C(v6, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v15[0];
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(v7 + 48);
  if ((((v6 == 0) ^ *(unsigned __int8 *)(v11 + v10)) & 1) == 0)
  {
    v12 = ~v9;
    do
    {
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_7;
    }
    while ((((v6 == 0) ^ *(unsigned __int8 *)(v11 + v10)) & 1) == 0);
  }
  result = 0;
  LOBYTE(v6) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = v6;
  return result;
}

uint64_t sub_100194924(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v28[15];

  v3 = v2;
  v6 = *v3;
  Hasher.init(_seed:)(v28, *(_QWORD *)(*v3 + 40));
  v26 = a2;
  v7 = 0x8000000100E2B610;
  v8 = 0xD000000000000029;
  if (*a2 == 1)
    v8 = 0xD00000000000001CLL;
  else
    v7 = 0x8000000100E2B630;
  if (*a2)
    v9 = v8;
  else
    v9 = 0xD00000000000002CLL;
  if (*a2)
    v10 = v7;
  else
    v10 = 0x8000000100E2B5E0;
  swift_bridgeObjectRetain();
  String.hash(into:)(v28, v9, v10);
  swift_bridgeObjectRelease(v10);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v25 = a1;
    v14 = ~v12;
    while (1)
    {
      sub_1001A84F0(*(_QWORD *)(v6 + 48) + 112 * v13, (uint64_t)v28);
      if (LOBYTE(v28[0]))
      {
        v15 = LOBYTE(v28[0]) == 1 ? 0xD00000000000001CLL : 0xD000000000000029;
        v16 = LOBYTE(v28[0]) == 1 ? 0x8000000100E2B610 : 0x8000000100E2B630;
      }
      else
      {
        v15 = 0xD00000000000002CLL;
        v16 = 0x8000000100E2B5E0;
      }
      v17 = 0xD000000000000029;
      if (*(_BYTE *)v26 == 1)
      {
        v17 = 0xD00000000000001CLL;
        v18 = 0x8000000100E2B610;
      }
      else
      {
        v18 = 0x8000000100E2B630;
      }
      v19 = *(_BYTE *)v26 ? v17 : 0xD00000000000002CLL;
      v20 = *(_BYTE *)v26 ? v18 : 0x8000000100E2B5E0;
      if (v15 == v19 && v16 == v20)
        break;
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v19, v20, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v20);
      sub_10013B3F0(v28);
      if ((v21 & 1) != 0)
        goto LABEL_37;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease(v6);
        a1 = v25;
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRelease_n(v16, 2);
    sub_10013B3F0(v28);
LABEL_37:
    swift_bridgeObjectRelease(v6);
    sub_10013B3F0(v26);
    sub_1001A84F0(*(_QWORD *)(*v3 + 48) + 112 * v13, v25);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v6);
LABEL_35:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_1001A84F0((uint64_t)v26, (uint64_t)v28);
    v27 = *v3;
    *v3 = 0x8000000000000000;
    sub_10019BED0(v28, v13, isUniquelyReferenced_nonNull_native);
    v23 = *v3;
    *v3 = v27;
    swift_bridgeObjectRelease(v23);
    sub_1001A852C((uint64_t)v26, a1);
    return 1;
  }
}

uint64_t sub_100194BDC(unsigned __int8 *a1, unsigned __int8 a2)
{
  return sub_1001953B0(a1, a2, &qword_1011A3CE0, (uint64_t)&type metadata for Tooltip.AcknowledgmentOption);
}

uint64_t sub_100194BF0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10019C158(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100194D9C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v34 = a2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8);
    v10 = swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(a2);
      v32 = v9;
      v11 = type metadata accessor for AnyCancellable(0);
      swift_unknownObjectRetain(v9, v12);
      swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v33;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1006A0704(v7, result + 1);
    v33 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v30 = v27 + 1;
      swift_retain(a2);
      sub_100198B44(v30);
      v28 = v33;
    }
    else
    {
      v28 = v26;
      swift_retain(a2);
    }
    sub_1006A0FD0(a2, v28);
    v31 = *v3;
    *v3 = v28;
    swift_bridgeObjectRelease(v31);
    *a1 = a2;
    return 1;
  }
  v14 = *(_QWORD *)(v6 + 40);
  v15 = type metadata accessor for AnyCancellable(0);
  v16 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_bridgeObjectRetain();
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v15, v16);
  v18 = -1 << *(_BYTE *)(v6 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v6 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v23 = v34;
    v33 = *v2;
    *v2 = 0x8000000000000000;
    swift_retain(v23);
    sub_10019C2F0(v24, v19, isUniquelyReferenced_nonNull_native);
    v25 = *v2;
    *v2 = v33;
    swift_bridgeObjectRelease(v25);
    *a1 = v23;
    return 1;
  }
  v20 = ~v18;
  v21 = sub_100048748(&qword_10119D3E0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  while (1)
  {
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v19);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v33, &v34, v15, v21) & 1) != 0)
      break;
    v19 = (v19 + 1) & v20;
    if (((*(_QWORD *)(v6 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_11;
  }
  swift_release(a2);
  swift_bridgeObjectRelease(v6);
  v29 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v19);
  *a1 = v29;
  swift_retain(v29);
  return 0;
}

uint64_t sub_100195064(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t (*v46)(__n128);
  __int128 v47;
  _QWORD v48[10];

  v5 = *v2;
  Hasher.init(_seed:)(v48, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain();
  Lyrics.TextLine.hash(into:)((uint64_t)v48);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v39 = v2;
  v40 = a1;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
    v48[0] = *v39;
    *v39 = 0x8000000000000000;
    sub_1001A8568((_QWORD *)a2);
    sub_10019C4A8(a2, v8, isUniquelyReferenced_nonNull_native);
    v26 = *v39;
    *v39 = v48[0];
    swift_bridgeObjectRelease(v26);
    v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v40 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v40 + 80) = v27;
    *(_QWORD *)(v40 + 96) = *(_QWORD *)(a2 + 96);
    v28 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v40 = *(_OWORD *)a2;
    *(_OWORD *)(v40 + 16) = v28;
    v29 = *(_OWORD *)(a2 + 48);
    result = 1;
    *(_OWORD *)(v40 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v40 + 48) = v29;
    return result;
  }
  v9 = ~v7;
  v10 = *(_QWORD *)(a2 + 16);
  while (1)
  {
    v11 = *(_QWORD *)(v5 + 48);
    v12 = v11 + 104 * v8;
    if (*(_QWORD *)(v12 + 16) != v10
      || *(double *)(v11 + 104 * v8) != *(double *)a2
      || *(double *)(v12 + 8) != *(double *)(a2 + 8)
      || *(double *)(v12 + 40) != *(double *)(a2 + 40)
      || *(double *)(v12 + 48) != *(double *)(a2 + 48))
    {
      goto LABEL_3;
    }
    v13 = *(_QWORD *)(v12 + 64);
    v46 = *(uint64_t (**)(__n128))(v12 + 56);
    v14 = *(_QWORD *)(v12 + 80);
    v15 = *(_QWORD *)(v12 + 96);
    v44 = *(_QWORD *)(v12 + 32);
    swift_bridgeObjectRetain();
    swift_retain(v13);
    v42 = v14;
    swift_retain(v14);
    v41 = v15;
    v16 = swift_retain(v15);
    v43 = v13;
    v17 = v46(v16);
    v19 = v18;
    v20 = (*(uint64_t (**)(void))(a2 + 56))();
    if (v17 == v20 && v19 == v21)
      break;
    v23 = v21;
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v20, v21, 0);
    swift_release(v41);
    swift_release(v42);
    swift_release(v43);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v23);
    if ((v24 & 1) != 0)
    {
      swift_bridgeObjectRelease(v5);
      goto LABEL_18;
    }
LABEL_3:
    v8 = (v8 + 1) & v9;
    if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_15;
  }
  swift_bridgeObjectRelease(v5);
  swift_release(v41);
  swift_release(v42);
  swift_release(v13);
  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease_n(v19, 2);
LABEL_18:
  sub_1001A85BC((_QWORD *)a2);
  v31 = *(_QWORD *)(*v39 + 48) + 104 * v8;
  v32 = *(_QWORD *)(v31 + 16);
  v33 = *(_BYTE *)(v31 + 24);
  v34 = *(_BYTE *)(v31 + 25);
  v35 = *(_BYTE *)(v31 + 26);
  v36 = *(_QWORD *)(v31 + 32);
  v37 = *(_QWORD *)(v31 + 56);
  v38 = *(_QWORD *)(v31 + 96);
  *(_OWORD *)v40 = *(_OWORD *)v31;
  *(_QWORD *)(v40 + 16) = v32;
  *(_BYTE *)(v40 + 24) = v33;
  *(_BYTE *)(v40 + 25) = v34;
  *(_BYTE *)(v40 + 26) = v35;
  *(_QWORD *)(v40 + 32) = v36;
  *(_OWORD *)(v40 + 40) = *(_OWORD *)(v31 + 40);
  *(_QWORD *)(v40 + 56) = v37;
  v45 = *(_OWORD *)(v31 + 64);
  v47 = *(_OWORD *)(v31 + 80);
  *(_OWORD *)(v40 + 64) = v45;
  *(_OWORD *)(v40 + 80) = v47;
  *(_QWORD *)(v40 + 96) = v38;
  swift_bridgeObjectRetain();
  swift_retain(v45);
  swift_retain(v47);
  swift_retain(v38);
  return 0;
}

uint64_t sub_10019539C(unsigned __int8 *a1, unsigned __int8 a2)
{
  return sub_1001953B0(a1, a2, &qword_1011A3B60, (uint64_t)&type metadata for PlaylistEditing.Field);
}

uint64_t sub_1001953B0(unsigned __int8 *a1, unsigned __int8 a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  _QWORD v18[9];

  v9 = *v4;
  Hasher.init(_seed:)(v18, *(_QWORD *)(*v4 + 40));
  Hasher._combine(_:)(a2);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v18[0] = *v4;
    *v4 = 0x8000000000000000;
    sub_10019C758(a2, v12, isUniquelyReferenced_nonNull_native, a3, a4);
    v17 = *v4;
    *v4 = v18[0];
    swift_bridgeObjectRelease(v17);
    result = 1;
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(v9 + 48);
  if (*(unsigned __int8 *)(v13 + v12) != a2)
  {
    v14 = ~v11;
    do
    {
      v12 = (v12 + 1) & v14;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v13 + v12) != a2);
  }
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v4 + 48) + v12);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1001954E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748(&qword_1011A3960, v12, (uint64_t)&protocol conformance descriptor for Song);
  swift_bridgeObjectRetain();
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100048748(&qword_1011A3968, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10019C8B0((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_100195740(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_10019CB04(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100195838(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v23[9];

  v7 = *v3;
  Hasher.init(_seed:)(v23, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v23, a2, a3);
  swift_bridgeObjectRelease();
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v23[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10019CC24(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1001959F4(char *a1, char a2)
{
  unint64_t *v2;
  unint64_t *v3;
  unint64_t v5;
  char v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  uint64_t result;
  _QWORD v18[9];

  v3 = v2;
  v5 = *v3;
  Hasher.init(_seed:)(v18, *(_QWORD *)(*v3 + 40));
  v6 = a2 & 1;
  if ((a2 & 1) != 0)
    v7 = 0x7972617262696CLL;
  else
    v7 = 0x676F6C61746163;
  swift_bridgeObjectRetain();
  String.hash(into:)(v18, v7, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v10) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v12 == v7)
        break;
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, 0xE700000000000000, v7, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v13 & 1) != 0)
        goto LABEL_14;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease(v5);
    v5 = 0xE700000000000000;
    swift_bridgeObjectRelease(0xE700000000000000);
LABEL_14:
    swift_bridgeObjectRelease(v5);
    result = 0;
    v6 = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v10);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_10019CDCC(v6, v10, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v18[0];
    swift_bridgeObjectRelease(v15);
    result = 1;
  }
  *a1 = v6;
  return result;
}

uint64_t sub_100195BA8(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  Swift::Int v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  Swift::Int v35;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease(v6);

      v34 = v10;
      v12 = sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
      swift_unknownObjectRetain(v10, v13);
      swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
      *a1 = v35;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v11);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1006A0924(v7, result + 1);
    v35 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v8;
      sub_10019AF40(v32, &qword_1011A3CE8);
      v28 = v35;
    }
    else
    {
      v28 = v26;
      v29 = v8;
    }
    sub_1006A109C((uint64_t)v8, v28);
    v31 = *v3;
    *v3 = v28;
  }
  else
  {
    v15 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v16 = NSObject._rawHashValue(seed:)(v15);
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_10004A07C(0, &qword_1011A4630, UIScene_ptr);
      v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
      v20 = static NSObject.== infix(_:_:)(v19, a2);

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v24 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v18);
        *a1 = (Swift::Int)v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, a2);

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v35 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10019D108((uint64_t)v8, v18, isUniquelyReferenced_nonNull_native, &qword_1011A3CE8, &qword_1011A4630, UIScene_ptr);
    v31 = *v3;
    *v3 = v35;
  }
  swift_bridgeObjectRelease(v31);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_100195E64(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  Swift::UInt v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];
  uint64_t v27;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = __CocoaSet.member(for:)(v8);
    v10 = swift_release();
    if (v9)
    {
      swift_bridgeObjectRelease(v6);
      swift_release();
      v27 = v9;
      v11 = type metadata accessor for ImpressionTracker();
      swift_unknownObjectRetain(v9, v12);
      swift_dynamicCast(v26, &v27, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v26[0];
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v22 = sub_1006A0948(v7, result + 1);
    v26[0] = v22;
    v23 = *(_QWORD *)(v22 + 16);
    if (*(_QWORD *)(v22 + 24) <= v23)
    {
      v25 = v23 + 1;
      swift_retain();
      sub_100199FD0(v25);
      v24 = v26[0];
    }
    else
    {
      v24 = v22;
      swift_retain();
    }
    sub_1006A10A0(a2, v24);
    v21 = *v3;
    *v3 = v24;
    goto LABEL_18;
  }
  Hasher.init(_seed:)(v26, *(_QWORD *)(v6 + 40));
  v14 = sub_10047E924();
  Hasher._combine(_:)(v14);
  v15 = Hasher._finalize()();
  v16 = -1 << *(_BYTE *)(v6 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v26[0] = *v2;
    *v2 = 0x8000000000000000;
    swift_retain();
    sub_10019CF9C(v20, v17, isUniquelyReferenced_nonNull_native);
    v21 = *v2;
    *v2 = v26[0];
LABEL_18:
    swift_bridgeObjectRelease(v21);
    *a1 = a2;
    return 1;
  }
  v18 = ~v16;
  while (sub_10047E924() != *(_QWORD *)(a2 + 56))
  {
    v17 = (v17 + 1) & v18;
    if (((*(_QWORD *)(v6 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v17);
  swift_retain();
  return 0;
}

uint64_t sub_1001960B0(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  Swift::Int v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Swift::Int v34;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease();

      v33 = v10;
      v12 = sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      swift_unknownObjectRetain(v10, v13);
      swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
      *a1 = v34;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v11);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1006A0B50(v7, result + 1);
    v34 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v31 = v27 + 1;
      v32 = v8;
      sub_10019AF40(v31, &qword_1011A3CD0);
      v28 = v34;
    }
    else
    {
      v28 = v26;
      v29 = v8;
    }
    sub_1006A109C((uint64_t)v8, v28);
    *v3 = v28;
  }
  else
  {
    v15 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v16 = NSObject._rawHashValue(seed:)(v15);
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_10004A07C(0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
      v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
      v20 = static NSObject.== infix(_:_:)(v19, a2);

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v18);
        *a1 = (Swift::Int)v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, a2);

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v34 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10019D108((uint64_t)v8, v18, isUniquelyReferenced_nonNull_native, &qword_1011A3CD0, (unint64_t *)&qword_10119D470, UIViewController_ptr);
    *v3 = v34;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_10019636C(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[10];

  v4 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  v5 = Library.Menu.Identifier.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_10019D298(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_100196748(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t result;
  Swift::Int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  _QWORD v41[9];
  uint64_t v42;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    v38 = v2;
    Hasher.init(_seed:)(v41, *(_QWORD *)(v6 + 40));
    v13 = *(void **)(a2 + 16);
    swift_bridgeObjectRetain();
    v14 = objc_msgSend(v13, "_identifier");
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    String.hash(into:)(v41, v15, v17);
    swift_bridgeObjectRelease();
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(v6 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v6 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
    {
      v40 = ~v19;
      while (1)
      {
        v21 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v20) + 16), "_identifier", swift_retain().n128_f64[0]);
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v25 = objc_msgSend(*(id *)(a2 + 16), "_identifier");
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        if (v22 == v26 && v24 == v28)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n(v24, 2);
          goto LABEL_24;
        }
        v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v28, 0);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
          break;
        v20 = (v20 + 1) & v40;
        if (((*(_QWORD *)(v6 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          goto LABEL_15;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_24:
      *a1 = *(_QWORD *)(*(_QWORD *)(*v38 + 48) + 8 * v20);
      swift_retain();
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v38);
    v41[0] = *v38;
    *v38 = 0x8000000000000000;
    swift_retain();
    sub_10019D6E8(v32, v20, isUniquelyReferenced_nonNull_native);
    *v38 = v41[0];
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = swift_retain();
  v9 = __CocoaSet.member(for:)(v8);
  v10 = swift_release();
  if (!v9)
  {
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v34 = sub_1006A0D70(v7, result + 1);
    v41[0] = v34;
    v35 = *(_QWORD *)(v34 + 16);
    if (*(_QWORD *)(v34 + 24) <= v35)
    {
      v37 = v35 + 1;
      swift_retain();
      sub_10019A720(v37);
      v36 = v41[0];
    }
    else
    {
      v36 = v34;
      swift_retain();
    }
    sub_1006A1144(a2, v36);
    *v3 = v36;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v42 = v9;
  v11 = type metadata accessor for TabNavigationController.TabElementStack();
  swift_unknownObjectRetain(v9, v12);
  swift_dynamicCast(v41, &v42, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
  *a1 = v41[0];
  swift_unknownObjectRelease(v9);
  return 0;
}

uint64_t sub_100196AC4(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  _QWORD v25[10];

  v3 = v2;
  v6 = *v2;
  Hasher.init(_seed:)(v25, *(_QWORD *)(*v2 + 40));
  if (a2 < 0)
  {
    Hasher._combine(_:)(1uLL);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_10004A06C(a2);
    String.hash(into:)(v25, v10, v11);
    sub_1001A7ABC(a2);
  }
  else
  {
    Hasher._combine(_:)(0);
    v7 = Library.Menu.Identifier.rawValue.getter(a2);
    v9 = v8;
    swift_bridgeObjectRetain();
    String.hash(into:)(v25, v7, v9);
    swift_bridgeObjectRelease();
  }
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v25[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_10004A06C(a2);
    sub_10019D938(a2, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v25[0];
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v15 = ~v13;
  while (1)
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14);
    if (v16 < 0)
      break;
    if ((a2 & 0x8000000000000000) == 0)
      __asm { BR              X9 }
LABEL_6:
    v14 = (v14 + 1) & v15;
    if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_17;
  }
  if ((a2 & 0x8000000000000000) == 0)
    goto LABEL_6;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  v19 = *(_QWORD *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  v20 = *(_QWORD *)((a2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  v21 = v17 == v19 && v18 == v20;
  if (!v21 && (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v19, v20, 0) & 1) == 0)
    goto LABEL_6;
  swift_bridgeObjectRelease();
  sub_1001A7ABC(a2);
  v24 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v14);
  *a1 = v24;
  sub_10004A06C(v24);
  return 0;
}

uint64_t sub_100196F5C(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  Swift::Int v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Swift::Int v34;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease();

      v33 = v10;
      v12 = sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
      swift_unknownObjectRetain(v10, v13);
      swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
      *a1 = v34;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v11);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_1006A0FAC(v7, result + 1);
    v34 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v31 = v27 + 1;
      v32 = v8;
      sub_10019AF40(v31, &qword_1011A3B00);
      v28 = v34;
    }
    else
    {
      v28 = v26;
      v29 = v8;
    }
    sub_1006A109C((uint64_t)v8, v28);
    *v3 = v28;
  }
  else
  {
    v15 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v16 = NSObject._rawHashValue(seed:)(v15);
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_10004A07C(0, &qword_1011A3AF8, MPCPlayerPath_ptr);
      v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
      v20 = static NSObject.== infix(_:_:)(v19, a2);

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v18);
        *a1 = (Swift::Int)v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, a2);

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v34 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10019D108((uint64_t)v8, v18, isUniquelyReferenced_nonNull_native, &qword_1011A3B00, &qword_1011A3AF8, MPCPlayerPath_ptr);
    *v3 = v34;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

void sub_100197218(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3898);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v32 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_42;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_42;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_42;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_42:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_48;
                  if (v13 >= v11)
                    goto LABEL_42;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
      if (v20)
      {
        if (v20 == 1)
          v21 = 0x657469726F766166;
        else
          v21 = 0x64616F6C6E776F64;
        v22 = 0xE900000000000073;
      }
      else
      {
        v22 = 0xE300000000000000;
        v21 = 7105633;
      }
      String.hash(into:)(v33, v21, v22);
      swift_bridgeObjectRelease(v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100197520(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_1011A3D20);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x100197874);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release();
  v2 = v17;
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release();
  *v2 = v5;
}

void sub_10019788C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[13];
  uint64_t *v28;
  const char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39[9];

  v2 = v1;
  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  __chkstk_darwin(v4);
  v31 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SidebarMenu.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v34 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v27 - v10;
  v12 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3D10);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  if (*(_QWORD *)(v12 + 16))
  {
    v28 = v1;
    v14 = 1 << *(_BYTE *)(v12 + 32);
    v15 = *(_QWORD *)(v12 + 56);
    v37 = (_QWORD *)(v12 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v36 = (unint64_t)(v14 + 63) >> 6;
    swift_retain();
    v29 = "account";
    v27[12] = "LibraryView.RecentlyAdded";
    v27[11] = "LibraryView.Playlists";
    v27[10] = "LibraryView.Artists";
    v27[9] = "LibraryView.Albums";
    v27[8] = "LibraryView.Songs";
    v27[7] = "LibraryView.MadeForYou";
    v27[6] = "LibraryView.MusicVideos";
    v27[5] = "LibraryView.Genres";
    v27[4] = "LibraryView.Compilations";
    v27[3] = "LibraryView.Composers";
    v27[2] = "LibraryView.Shows";
    v27[1] = "LibraryView.Downloaded";
    v38 = v18;
    v19 = (uint64_t)v34;
    v35 = v11;
    v30 = v7;
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      goto LABEL_22;
    }
    if (v36 > 1)
    {
      v21 = v37[1];
      v22 = 1;
      if (v21)
        goto LABEL_21;
      v22 = 2;
      if (v36 > 2)
      {
        v21 = v37[2];
        if (v21)
          goto LABEL_21;
        v22 = 3;
        if (v36 > 3)
        {
          v21 = v37[3];
          if (!v21)
          {
            v23 = 4;
            if (v36 > 4)
            {
              v21 = v37[4];
              if (v21)
              {
                v22 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                {
                  __break(1u);
                  JUMPOUT(0x100197F94);
                }
                if (v22 >= v36)
                  break;
                v21 = v37[v22];
                ++v23;
                if (v21)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v20 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
          sub_10005B6C0(*(_QWORD *)(v38 + 48) + *(_QWORD *)(v7 + 72) * v20, (uint64_t)v11, type metadata accessor for SidebarMenu.Item);
          Hasher.init(_seed:)(v39, *(_QWORD *)(v13 + 40));
          sub_10005B704((uint64_t)v11, v19, type metadata accessor for SidebarMenu.Item);
          v24 = (char *)&loc_100197C60 + dword_100197F94[swift_getEnumCaseMultiPayload(v19, v6)];
          __asm { BR              X9 }
        }
      }
    }
LABEL_23:
    v25 = v38;
    swift_release();
    v2 = v28;
    v26 = 1 << *(_BYTE *)(v25 + 32);
    if (v26 > 63)
      bzero(v37, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v37 = -1 << v26;
    *(_QWORD *)(v25 + 16) = 0;
  }
  swift_release();
  *v2 = v13;
}

void sub_100197FE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D400);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v26 = v2;
    v27 = v3;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (!v11)
      {
        v15 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return;
        }
        if (v15 >= v12)
          goto LABEL_34;
        v11 = v8[v15];
        ++v7;
        if (!v11)
        {
          v7 = v15 + 1;
          if (v15 + 1 >= v12)
            goto LABEL_34;
          v11 = v8[v7];
          if (!v11)
          {
            v7 = v15 + 2;
            if (v15 + 2 >= v12)
              goto LABEL_34;
            v11 = v8[v7];
            if (!v11)
            {
              v16 = v15 + 3;
              if (v16 >= v12)
              {
LABEL_34:
                v25 = 1 << *(_BYTE *)(v27 + 32);
                if (v25 > 63)
                  bzero(v8, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v25;
                v2 = v26;
                *(_QWORD *)(v27 + 16) = 0;
                break;
              }
              v11 = v8[v16];
              if (!v11)
              {
                while (1)
                {
                  v7 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_40;
                  if (v7 >= v12)
                    goto LABEL_34;
                  v11 = v8[v7];
                  ++v16;
                  if (v11)
                    goto LABEL_25;
                }
              }
              v7 = v16;
            }
          }
        }
      }
LABEL_25:
      Hasher.init(_seed:)(v28, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(0);
      v17 = Hasher._finalize()();
      v18 = -1 << *(_BYTE *)(v6 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v13 + 8 * (v19 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v13 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = 0;
        v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v23 = v20 == v22;
          if (v20 == v22)
            v20 = 0;
          v21 |= v23;
          v24 = *(_QWORD *)(v13 + 8 * v20);
        }
        while (v24 == -1);
        v14 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      v11 &= v11 - 1;
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100198254(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3950);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_1001984FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  _QWORD v31[9];
  _BYTE v32[120];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3CD8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v30 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v29 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          return;
        }
        if (v15 >= v29)
          goto LABEL_44;
        v16 = v30[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v29)
            goto LABEL_44;
          v16 = v30[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v29)
              goto LABEL_44;
            v16 = v30[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v29)
              {
LABEL_44:
                swift_release(v3);
                v28 = 1 << *(_BYTE *)(v3 + 32);
                if (v28 > 63)
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v28;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_50;
                  if (v11 >= v29)
                    goto LABEL_44;
                  v16 = v30[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      sub_1001A852C(*(_QWORD *)(v3 + 48) + 112 * v14, (uint64_t)v32);
      Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
      if (v32[0])
      {
        if (v32[0] == 1)
          v18 = 0xD00000000000001CLL;
        else
          v18 = 0xD000000000000029;
        if (v32[0] == 1)
          v19 = 0x8000000100E2B610;
        else
          v19 = 0x8000000100E2B630;
      }
      else
      {
        v18 = 0xD00000000000002CLL;
        v19 = 0x8000000100E2B5E0;
      }
      String.hash(into:)(v31, v18, v19);
      swift_bridgeObjectRelease(v19);
      v20 = Hasher._finalize()();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = v20 & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_49;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v12 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      sub_1001A852C((uint64_t)v32, *(_QWORD *)(v6 + 48) + 112 * v12);
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100198868(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_1011A3CC0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100198B44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D3D0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v31 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v31)
          goto LABEL_36;
        v16 = v32[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_36;
          v16 = v32[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_36;
            v16 = v32[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release(v3);
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v31)
                    goto LABEL_36;
                  v16 = v32[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = *(_QWORD *)(v6 + 40);
      v20 = type metadata accessor for AnyCancellable(0);
      v21 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100198E54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3D38);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v36 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v18 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v19 = v18 | (v12 << 6);
      }
      else
      {
        v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v20 >= v10)
          goto LABEL_36;
        v21 = v36[v20];
        ++v12;
        if (!v21)
        {
          v12 = v20 + 1;
          if (v20 + 1 >= v10)
            goto LABEL_36;
          v21 = v36[v12];
          if (!v21)
          {
            v12 = v20 + 2;
            if (v20 + 2 >= v10)
              goto LABEL_36;
            v21 = v36[v12];
            if (!v21)
            {
              v22 = v20 + 3;
              if (v22 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v35 = 1 << *(_BYTE *)(v3 + 32);
                if (v35 > 63)
                  bzero(v36, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v35;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v21 = v36[v22];
              if (!v21)
              {
                while (1)
                {
                  v12 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v21 = v36[v12];
                  ++v22;
                  if (v21)
                    goto LABEL_26;
                }
              }
              v12 = v22;
            }
          }
        }
LABEL_26:
        v9 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v12 << 6);
      }
      v23 = *(_QWORD *)(v3 + 48) + 104 * v19;
      v24 = *(_OWORD *)(v23 + 80);
      v42 = *(_OWORD *)(v23 + 64);
      v43 = v24;
      v44 = *(_QWORD *)(v23 + 96);
      v25 = *(_OWORD *)(v23 + 16);
      v38 = *(_OWORD *)v23;
      v39 = v25;
      v26 = *(_OWORD *)(v23 + 48);
      v40 = *(_OWORD *)(v23 + 32);
      v41 = v26;
      Hasher.init(_seed:)(v37, *(_QWORD *)(v6 + 40));
      Lyrics.TextLine.hash(into:)((uint64_t)v37);
      v27 = Hasher._finalize()();
      v28 = -1 << *(_BYTE *)(v6 + 32);
      v29 = v27 & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v11 + 8 * v30);
        }
        while (v34 == -1);
        v13 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v6 + 48) + 104 * v13;
      v15 = v43;
      *(_OWORD *)(v14 + 64) = v42;
      *(_OWORD *)(v14 + 80) = v15;
      *(_QWORD *)(v14 + 96) = v44;
      v16 = v39;
      *(_OWORD *)v14 = v38;
      *(_OWORD *)(v14 + 16) = v16;
      v17 = v41;
      *(_OWORD *)(v14 + 32) = v40;
      *(_OWORD *)(v14 + 48) = v17;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_10019916C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32[9];

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v4 + 56);
    v10 = 1 << *(_BYTE *)(v4 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v4 + 56);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v6 + 56;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_36;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_36;
          v19 = v9[v8];
          if (!v19)
          {
            v8 = v18 + 2;
            if (v18 + 2 >= v13)
              goto LABEL_36;
            v19 = v9[v8];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v13)
              {
LABEL_36:
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                v3 = v31;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v8 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v8 >= v13)
                    goto LABEL_36;
                  v19 = v9[v8];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v8 = v20;
            }
          }
        }
LABEL_26:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v17);
      Hasher.init(_seed:)(v32, *(_QWORD *)(v7 + 40));
      Hasher._combine(_:)(v21);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_100199410(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  unint64_t *v49;
  uint64_t v50;

  v49 = a4;
  v50 = a5;
  v7 = v5;
  v48 = a2;
  v9 = a2(0);
  v47 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_100007E8C(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v46 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v44 = v7;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  v20 = swift_retain(v12);
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v25 >= v45)
      goto LABEL_35;
    v26 = v46[v25];
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_35;
      v26 = v46[v21];
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v45)
          goto LABEL_35;
        v26 = v46[v21];
        if (!v26)
          break;
      }
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = v12;
    v29 = *(_QWORD *)(v12 + 48);
    v30 = *(_QWORD *)(v47 + 72);
    v31 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v47 + 32);
    v31(v11, v29 + v30 * v24, v9, v20);
    v32 = *(_QWORD *)(v14 + 40);
    v33 = sub_100048748(v49, v48, v50);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v9, v33);
    v35 = -1 << *(_BYTE *)(v14 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    ((void (*)(unint64_t, char *, uint64_t))v31)(*(_QWORD *)(v14 + 48) + v22 * v30, v11, v9);
    ++*(_QWORD *)(v14 + 16);
    v12 = v28;
  }
  v27 = v25 + 3;
  if (v27 < v45)
  {
    v26 = v46[v27];
    if (!v26)
    {
      while (1)
      {
        v21 = v27 + 1;
        if (__OFADD__(v27, 1))
          goto LABEL_41;
        if (v21 >= v45)
          goto LABEL_35;
        v26 = v46[v21];
        ++v27;
        if (v26)
          goto LABEL_25;
      }
    }
    v21 = v27;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v12);
  v7 = v44;
  v42 = 1 << *(_BYTE *)(v12 + 32);
  if (v42 > 63)
    bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v46 = -1 << v42;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  swift_release(v12);
  *v7 = v14;
}

void sub_100199770(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3978);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1001999F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3928);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release();
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      swift_bridgeObjectRetain();
      String.hash(into:)(v34, v21, v22);
      swift_bridgeObjectRelease();
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100199CDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3D30);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_39;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_39;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_39;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_39:
                swift_release();
                v2 = v31;
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_45;
                  if (v13 >= v11)
                    goto LABEL_39;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v32, *(_QWORD *)(v6 + 40));
      if (v20)
        v21 = 0x7972617262696CLL;
      else
        v21 = 0x676F6C61746163;
      String.hash(into:)(v32, v21, 0xE700000000000000);
      swift_bridgeObjectRelease(0xE700000000000000);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v25);
        }
        while (v29 == -1);
        v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_100199FC4(uint64_t a1)
{
  sub_10019AF40(a1, &qword_1011A3CE8);
}

void sub_100199FD0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_10119D430);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v30;
                v2 = v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      Hasher.init(_seed:)(v32, *(_QWORD *)(v6 + 40));
      v21 = sub_10047E924();
      Hasher._combine(_:)(v21);
      v22 = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_10019A27C(uint64_t a1)
{
  sub_10019AF40(a1, &qword_1011A3CD0);
}

void sub_10019A288(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D2E0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v16 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v15 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v15 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v15 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x10019A6ECLL);
              }
              if (v11 >= v15)
                break;
              v10 = v16[v11];
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v17, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release();
  v14 = 1 << *(_BYTE *)(v3 + 32);
  if (v14 > 63)
    bzero(v16, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v14;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release();
  *v2 = v5;
}

void sub_10019A720(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_10119D420);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v34 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v32 = v2;
    v33 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain();
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v33)
          goto LABEL_36;
        v16 = v34[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v33)
            goto LABEL_36;
          v16 = v34[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v33)
              goto LABEL_36;
            v16 = v34[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v33)
              {
LABEL_36:
                swift_release();
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v34[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v33)
                    goto LABEL_36;
                  v16 = v34[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      Hasher.init(_seed:)(v35, *(_QWORD *)(v6 + 40));
      v19 = objc_msgSend(*(id *)(v18 + 16), "_identifier");
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      String.hash(into:)(v35, v20, v22);
      swift_bridgeObjectRelease();
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v10 + 8 * v26);
        }
        while (v30 == -1);
        v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_10019AA40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  _QWORD v32[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3B08);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_42;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = (_QWORD *)(v3 + 56);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v30 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_43;
    if (v15 >= v30)
      break;
    v16 = v31[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v30)
        break;
      v16 = v31[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v30)
          break;
        v16 = v31[v11];
        if (!v16)
        {
          v17 = v15 + 3;
          if (v17 >= v30)
            break;
          v16 = v31[v17];
          if (!v16)
          {
            while (1)
            {
              v11 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_44;
              if (v11 >= v30)
                goto LABEL_38;
              v16 = v31[v11];
              ++v17;
              if (v16)
                goto LABEL_26;
            }
          }
          v11 = v17;
        }
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    Hasher.init(_seed:)(v32, *(_QWORD *)(v6 + 40));
    if ((v18 & 0x8000000000000000) == 0)
    {
      Hasher._combine(_:)(0);
      __asm { BR              X9 }
    }
    Hasher._combine(_:)(1uLL);
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v18 + 24);
    swift_retain();
    String.hash(into:)(v32, v19, v20);
    sub_1001A7ABC(v18);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    v25 = 0;
    v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        JUMPOUT(0x10019AF00);
      }
      v27 = v24 == v26;
      if (v24 == v26)
        v24 = 0;
      v25 |= v27;
      v28 = *(_QWORD *)(v10 + 8 * v24);
    }
    while (v28 == -1);
    v12 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_10:
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v6 + 16);
  }
LABEL_38:
  swift_release();
  v29 = 1 << *(_BYTE *)(v3 + 32);
  if (v29 > 63)
    bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v31 = -1 << v29;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_42:
  swift_release();
  *v2 = v6;
}

void sub_10019AF34(uint64_t a1)
{
  sub_10019AF40(a1, &qword_1011A3B00);
}

void sub_10019AF40(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v12)
          goto LABEL_36;
        v19 = v9[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_36;
          v19 = v9[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v12)
              goto LABEL_36;
            v19 = v9[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v12)
              {
LABEL_36:
                swift_release();
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v12)
                    goto LABEL_36;
                  v19 = v9[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release();
  *v3 = v7;
}

uint64_t sub_10019B1D8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100199410(v12, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, &qword_1011A3D08, &qword_1011A3CF8, (uint64_t)&protocol conformance descriptor for AudioVariant);
  }
  else
  {
    if (v11 > v10)
    {
      sub_10019E740((uint64_t (*)(_QWORD))&type metadata accessor for AudioVariant, &qword_1011A3D08);
      goto LABEL_12;
    }
    sub_1001A1310(v12, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, &qword_1011A3D08, &qword_1011A3CF8, (uint64_t)&protocol conformance descriptor for AudioVariant);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100048748(&qword_1011A3CF8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_10019B42C(unsigned __int8 a1, unint64_t a2, char a3)
{
  _QWORD *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD v25[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100197218(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10019ECA8(&qword_1011A3898);
        goto LABEL_31;
      }
      sub_10019F324(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v25, *(_QWORD *)(*v3 + 40));
    if (a1)
    {
      if (a1 == 1)
        v10 = 0x657469726F766166;
      else
        v10 = 0x64616F6C6E776F64;
      v11 = 0xE900000000000073;
    }
    else
    {
      v11 = 0xE300000000000000;
      v10 = 7105633;
    }
    String.hash(into:)(v25, v10, v11);
    swift_bridgeObjectRelease(v11);
    v3 = v25;
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v12 & ~v13;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v14 = ~v13;
      do
      {
        if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2))
        {
          if (*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) == 1)
            v15 = 0x657469726F766166;
          else
            v15 = 0x64616F6C6E776F64;
          v3 = (_QWORD *)0xE900000000000073;
          v16 = a1;
          if (!a1)
          {
LABEL_20:
            v17 = 0xE300000000000000;
            v18 = 7105633;
            if (v15 == 7105633)
              goto LABEL_28;
            goto LABEL_29;
          }
        }
        else
        {
          v3 = (_QWORD *)0xE300000000000000;
          v15 = 7105633;
          v16 = a1;
          if (!a1)
            goto LABEL_20;
        }
        if (v16 == 1)
          v18 = 0x657469726F766166;
        else
          v18 = 0x64616F6C6E776F64;
        v17 = 0xE900000000000073;
        if (v15 == v18)
        {
LABEL_28:
          if (v3 == (_QWORD *)v17)
            goto LABEL_34;
        }
LABEL_29:
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v3, v18, v17, 0);
        swift_bridgeObjectRelease(v3);
        swift_bridgeObjectRelease(v17);
        if ((v19 & 1) != 0)
          goto LABEL_35;
        a2 = (a2 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_31:
  v20 = *v24;
  *(_QWORD *)(*v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v20 + 48) + a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n(v3, 2);
LABEL_35:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Library.ContentFilterOption);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
  }
}

void sub_10019B6AC(char a1, unint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _QWORD v15[9];

  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100197520(v8);
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_10019F5F8(v8);
LABEL_8:
      Hasher.init(_seed:)(v15, *(_QWORD *)(*(_QWORD *)v3 + 40));
      __asm { BR              X10 }
    }
    sub_10019ECA8((uint64_t *)&unk_1011A3D20);
  }
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x10019BA20);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

uint64_t sub_10019BA84(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[9];

  v4 = v3;
  v8 = type metadata accessor for SidebarMenu.Item(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v29 = v9;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10019788C(v14);
  }
  else
  {
    if (v13 > v12)
    {
      sub_10019DE24();
      goto LABEL_12;
    }
    sub_10019F930(v14);
  }
  v15 = *v4;
  Hasher.init(_seed:)(v30, *(_QWORD *)(*v4 + 40));
  sub_1002FA294();
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v28 = v8;
    v18 = ~v17;
    v19 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_10005B704(*(_QWORD *)(v15 + 48) + v19 * a2, (uint64_t)v11, type metadata accessor for SidebarMenu.Item);
      sub_100300E0C((uint64_t)v11, a1);
      v21 = v20;
      sub_10005B748((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
      if ((v21 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v22 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_10005B6C0(a1, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v29 + 72) * a2, type metadata accessor for SidebarMenu.Item);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v28);
  __break(1u);
  return result;
}

void sub_10019BC60(unint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD v12[9];

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *(_QWORD *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    v6 = v4 + 1;
    if ((a2 & 1) != 0)
    {
      sub_100197FE0(v6);
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_1001A0028(v6);
LABEL_8:
      v7 = *v2;
      Hasher.init(_seed:)(v12, *(_QWORD *)(*v2 + 40));
      Hasher._combine(_:)(0);
      a1 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v7 + 32));
      if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
        goto LABEL_12;
      goto LABEL_9;
    }
    sub_10019E044();
  }
LABEL_9:
  v8 = *v2;
  *(_QWORD *)(*v2 + 8 * (a1 >> 6) + 56) |= 1 << a1;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (!v10)
  {
    *(_QWORD *)(v8 + 16) = v11;
    return;
  }
  __break(1u);
LABEL_12:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&_s6FilterON);
  __break(1u);
}

void sub_10019BD5C(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v5 = a1 & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100198254(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_10019ECA8(&qword_1011A3950);
      goto LABEL_14;
    }
    sub_1001A0268(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v18, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(v5);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (((((_DWORD)v5 == 0) ^ *(unsigned __int8 *)(v12 + a2)) & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaybackMode);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (((((_DWORD)v5 == 0) ^ *(unsigned __int8 *)(v12 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

uint64_t sub_10019BED0(_BYTE *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD v30[15];

  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    v9 = v7 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1001984FC(v9);
    }
    else
    {
      if (v8 > v7)
      {
        sub_10019E1A0();
        goto LABEL_40;
      }
      sub_1001A04E0(v9);
    }
    v10 = *v3;
    Hasher.init(_seed:)(v30, *(_QWORD *)(*v3 + 40));
    v11 = *a1;
    v12 = 0x8000000100E2B610;
    v13 = 0xD000000000000029;
    if (v11 == 1)
      v13 = 0xD00000000000001CLL;
    else
      v12 = 0x8000000100E2B630;
    if (*a1)
      v14 = v13;
    else
      v14 = 0xD00000000000002CLL;
    if (*a1)
      v15 = v12;
    else
      v15 = 0x8000000100E2B5E0;
    String.hash(into:)(v30, v14, v15);
    swift_bridgeObjectRelease(v15);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    a2 = v16 & ~v17;
    if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v18 = ~v17;
      while (1)
      {
        sub_1001A84F0(*(_QWORD *)(v10 + 48) + 112 * a2, (uint64_t)v30);
        v19 = 0xD00000000000002CLL;
        v20 = 0x8000000100E2B5E0;
        if (LOBYTE(v30[0]))
          break;
        v21 = 0xD00000000000002CLL;
        v4 = 0x8000000100E2B5E0;
        if (v11)
          goto LABEL_27;
LABEL_33:
        if (v21 == v19 && v4 == v20)
          goto LABEL_43;
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v4, v19, v20, 0);
        swift_bridgeObjectRelease(v4);
        swift_bridgeObjectRelease(v20);
        sub_10013B3F0(v30);
        if ((v22 & 1) != 0)
          goto LABEL_44;
        a2 = (a2 + 1) & v18;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_40;
      }
      if (LOBYTE(v30[0]) == 1)
        v21 = 0xD00000000000001CLL;
      else
        v21 = 0xD000000000000029;
      if (LOBYTE(v30[0]) == 1)
        v4 = 0x8000000100E2B610;
      else
        v4 = 0x8000000100E2B630;
      if (!v11)
        goto LABEL_33;
LABEL_27:
      if (v11 == 1)
        v19 = 0xD00000000000001CLL;
      else
        v19 = 0xD000000000000029;
      if (v11 == 1)
        v20 = 0x8000000100E2B610;
      else
        v20 = 0x8000000100E2B630;
      goto LABEL_33;
    }
  }
LABEL_40:
  v23 = *v28;
  *(_QWORD *)(*v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1001A852C((uint64_t)a1, *(_QWORD *)(v23 + 48) + 112 * a2);
  v25 = *(_QWORD *)(v23 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
LABEL_43:
    swift_bridgeObjectRelease_n(v4, 2);
    sub_10013B3F0(v30);
LABEL_44:
    result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Tooltip.Presentation);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v23 + 16) = v27;
  }
  return result;
}

void sub_10019C158(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100198868(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10019E360();
      goto LABEL_22;
    }
    sub_1001A0814(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_10019C2F0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100198B44(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10019EE3C((uint64_t *)&unk_10119D3D0);
      goto LABEL_12;
    }
    sub_1001A0AC0(v9);
  }
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v4 = type metadata accessor for AnyCancellable(0);
  v12 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v4, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = sub_100048748(&qword_10119D3E0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v22, v4, v16) & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_10019C4A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(__n128);
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[9];

  v5 = v3;
  v8 = *(_QWORD *)(*v3 + 16);
  v9 = *(_QWORD *)(*v3 + 24);
  if (v9 <= v8 || (a3 & 1) == 0)
  {
    v10 = v8 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100198E54(v10);
    }
    else
    {
      if (v9 > v8)
      {
        sub_10019E510();
        goto LABEL_22;
      }
      sub_1001A0DA4(v10);
    }
    v11 = *v3;
    Hasher.init(_seed:)(v41, *(_QWORD *)(*v3 + 40));
    Lyrics.TextLine.hash(into:)((uint64_t)v41);
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(v11 + 32);
    a2 = v12 & ~v13;
    if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v14 = ~v13;
      v15 = *(_QWORD *)(a1 + 16);
      v37 = v3;
      do
      {
        v16 = *(_QWORD *)(v11 + 48);
        v17 = v16 + 104 * a2;
        if (*(_QWORD *)(v17 + 16) == v15
          && *(double *)(v16 + 104 * a2) == *(double *)a1
          && *(double *)(v17 + 8) == *(double *)(a1 + 8)
          && *(double *)(v17 + 40) == *(double *)(a1 + 40)
          && *(double *)(v17 + 48) == *(double *)(a1 + 48))
        {
          v19 = *(uint64_t (**)(__n128))(v17 + 56);
          v18 = *(_QWORD *)(v17 + 64);
          v20 = *(_QWORD *)(v17 + 80);
          v4 = *(_QWORD *)(v17 + 96);
          v40 = *(_QWORD *)(v17 + 32);
          swift_bridgeObjectRetain();
          swift_retain(v18);
          v38 = v20;
          swift_retain(v20);
          v21 = swift_retain(v4);
          v39 = v18;
          v22 = v19(v21);
          v5 = v23;
          v24 = (*(uint64_t (**)(void))(a1 + 56))();
          if (v22 == v24 && v5 == v25)
            goto LABEL_25;
          v27 = v25;
          v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v5, v24, v25, 0);
          swift_release(v4);
          swift_release(v38);
          swift_release(v39);
          swift_bridgeObjectRelease(v40);
          swift_bridgeObjectRelease(v5);
          swift_bridgeObjectRelease(v27);
          v5 = v37;
          if ((v28 & 1) != 0)
            goto LABEL_26;
        }
        a2 = (a2 + 1) & v14;
      }
      while (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_22:
  v29 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v30 = *(_QWORD *)(v29 + 48) + 104 * a2;
  v31 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v30 = *(_OWORD *)a1;
  *(_OWORD *)(v30 + 16) = v31;
  *(_QWORD *)(v30 + 96) = *(_QWORD *)(a1 + 96);
  v32 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v30 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v30 + 80) = v32;
  v33 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v30 + 48) = v33;
  v34 = *(_QWORD *)(v29 + 16);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
  {
    __break(1u);
LABEL_25:
    swift_release(v4);
    swift_release(v38);
    swift_release(v39);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease_n(v5, 2);
LABEL_26:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Lyrics.TextLine);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v29 + 16) = v36;
  }
}

void sub_10019C758(unsigned __int8 a1, unint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  Swift::UInt v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v8 = a1;
  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10019916C(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10019ECA8(a4);
      goto LABEL_14;
    }
    sub_1001A109C(v11, a4);
  }
  v12 = *v5;
  Hasher.init(_seed:)(v21, *(_QWORD *)(*v5 + 40));
  Hasher._combine(_:)(v8);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = *(_QWORD *)(v12 + 48);
    if (*(unsigned __int8 *)(v15 + a2) == (_DWORD)v8)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a5);
      __break(1u);
    }
    else
    {
      v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v15 + a2) == (_DWORD)v8)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v17 + 48) + a2) = v8;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_10019C8B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100199410(v13, (uint64_t (*)(uint64_t))&type metadata accessor for Song, &qword_1011A3970, &qword_1011A3960, (uint64_t)&protocol conformance descriptor for Song);
  }
  else
  {
    if (v12 > v11)
    {
      sub_10019E740((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_1011A3970);
      goto LABEL_12;
    }
    sub_1001A1310(v13, (uint64_t (*)(uint64_t))&type metadata accessor for Song, &qword_1011A3970, &qword_1011A3960, (uint64_t)&protocol conformance descriptor for Song);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100048748(&qword_1011A3960, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100048748(&qword_1011A3968, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_10019CB04(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100199770(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_10019E964();
      goto LABEL_14;
    }
    sub_1001A162C(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_10019CC24(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_1001999F0(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10019EAF8();
      goto LABEL_22;
    }
    sub_1001A188C(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  swift_bridgeObjectRetain();
  String.hash(into:)(v29, a1, a2);
  swift_bridgeObjectRelease();
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_10019CDCC(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v4 = v3;
  v6 = a1 & 1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_19;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100199CDC(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10019ECA8(&qword_1011A3D30);
      goto LABEL_19;
    }
    sub_1001A1B44(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v21, *(_QWORD *)(*v3 + 40));
  if (v6)
    v11 = 0x7972617262696CLL;
  else
    v11 = 0x676F6C61746163;
  String.hash(into:)(v21, v11, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = *(_BYTE *)(*(_QWORD *)(v10 + 48) + a2) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v15 == v11)
        goto LABEL_22;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, 0xE700000000000000, v11, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v16 & 1) != 0)
        goto LABEL_23;
      a2 = (a2 + 1) & v14;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_19:
  v17 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v17 + 48) + a2) = v6;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_22:
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
LABEL_23:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&_s6SourceON);
  __break(1u);
}

void sub_10019CF9C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100199FD0(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10019EE3C(&qword_10119D430);
      goto LABEL_12;
    }
    sub_1001A1DF8(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v19, *(_QWORD *)(*v3 + 40));
  v11 = sub_10047E924();
  Hasher._combine(_:)(v11);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = ~v13;
    v4 = type metadata accessor for ImpressionTracker();
    while (sub_10047E924() != *(_QWORD *)(a1 + 56))
    {
      a2 = (a2 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_12:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = a1;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (!v17)
  {
    *(_QWORD *)(v15 + 16) = v18;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_10019D108(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5, _QWORD *a6)
{
  uint64_t *v6;
  uint64_t *v9;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v9 = v6;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_14;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10019AF40(v14, a4);
  }
  else
  {
    if (v13 > v12)
    {
      sub_10019F184(a4);
      goto LABEL_14;
    }
    sub_1001A2C8C(v14, a4);
  }
  v15 = *v6;
  v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v6 + 40));
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = sub_10004A07C(0, a5, a6);
    v19 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
    v20 = static NSObject.== infix(_:_:)(v19, a1);

    if ((v20 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v18);
      __break(1u);
    }
    else
    {
      v21 = ~v17;
      while (1)
      {
        a2 = (a2 + 1) & v21;
        if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * a2);
        v23 = static NSObject.== infix(_:_:)(v22, a1);

        if ((v23 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v24 = *v9;
  *(_QWORD *)(*v9 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * a2) = a1;
  v25 = *(_QWORD *)(v24 + 16);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v27;
}

void sub_10019D298(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[10];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_10019A288(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10019ECA8((uint64_t *)&unk_10119D2E0);
        goto LABEL_10;
      }
      sub_1001A2078(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19, *(_QWORD *)(*v3 + 40));
    v10 = Library.Menu.Identifier.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x10019D664);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

void sub_10019D6E8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v33[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_16;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10019A720(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_10019EE3C(&qword_10119D420);
      goto LABEL_16;
    }
    sub_1001A24D8(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v33, *(_QWORD *)(*v3 + 40));
  v10 = objc_msgSend(*(id *)(a1 + 16), "_identifier");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  String.hash(into:)(v33, v11, v13);
  swift_bridgeObjectRelease();
  v14 = Hasher._finalize()();
  v15 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v30 = type metadata accessor for TabNavigationController.TabElementStack();
    do
    {
      v17 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * a2) + 16), "_identifier", swift_retain().n128_f64[0]);
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v4 = v19;

      v20 = objc_msgSend(*(id *)(a1 + 16), "_identifier");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      if (v18 == v21 && v4 == v23)
        goto LABEL_19;
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v4, v21, v23, 0);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  v26 = *v31;
  *(_QWORD *)(*v31 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v26 + 48) + 8 * a2) = a1;
  v27 = *(_QWORD *)(v26 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v26 + 16) = v29;
    return;
  }
  __break(1u);
LABEL_19:
  swift_release();
  swift_bridgeObjectRelease_n(v4, 2);
LABEL_20:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v30);
  __break(1u);
}

void sub_10019D938(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD v28[10];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_10019AA40(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10019EFDC();
        goto LABEL_24;
      }
      sub_1001A27CC(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v28, *(_QWORD *)(*v3 + 40));
    if (a1 < 0)
    {
      Hasher._combine(_:)(1uLL);
      v12 = *(_QWORD *)(a1 + 16);
      v13 = *(_QWORD *)(a1 + 24);
      swift_retain();
      String.hash(into:)(v28, v12, v13);
      sub_1001A7ABC(a1);
    }
    else
    {
      Hasher._combine(_:)(0);
      v10 = Library.Menu.Identifier.rawValue.getter(a1);
      String.hash(into:)(v28, v10, v11);
      swift_bridgeObjectRelease();
    }
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v14 & ~v15;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v16 = ~v15;
      do
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        if (v17 < 0)
        {
          if (a1 < 0)
          {
            v18 = *(_QWORD *)(v17 + 16);
            v19 = *(_QWORD *)(v17 + 24);
            v20 = *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
            v21 = *(_QWORD *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
            v22 = v18 == v20 && v19 == v21;
            if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v20, v21, 0) & 1) != 0)
            {
              ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MenuDataSource.Item);
              __break(1u);
              JUMPOUT(0x10019DDBCLL);
            }
          }
        }
        else if ((a1 & 0x8000000000000000) == 0)
        {
          __asm { BR              X9 }
        }
        a2 = (a2 + 1) & v16;
      }
      while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_24:
  v23 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * a2) = a1;
  v24 = *(_QWORD *)(v23 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
    JUMPOUT(0x10019DDA0);
  }
  *(_QWORD *)(v23 + 16) = v26;
}

void sub_10019DE24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for SidebarMenu.Item(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011A3D10);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_10005B704(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5, type metadata accessor for SidebarMenu.Item);
    sub_10005B6C0((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20, type metadata accessor for SidebarMenu.Item);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_10019E044()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_10119D400);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_27:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13)
        goto LABEL_27;
      v12 = *(_QWORD *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        v9 = v14 + 1;
        if (v14 + 1 >= v13)
          goto LABEL_27;
        v12 = *(_QWORD *)(v6 + 8 * v9);
        if (!v12)
        {
          v9 = v14 + 2;
          if (v14 + 2 >= v13)
            goto LABEL_27;
          v12 = *(_QWORD *)(v6 + 8 * v9);
          if (!v12)
            break;
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  v15 = v14 + 3;
  if (v15 >= v13)
    goto LABEL_27;
  v12 = *(_QWORD *)(v6 + 8 * v15);
  if (v12)
  {
    v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v12 = *(_QWORD *)(v6 + 8 * v9);
    ++v15;
    if (v12)
      goto LABEL_12;
  }
LABEL_29:
  __break(1u);
}

void sub_10019E1A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _BYTE v20[112];

  v1 = v0;
  sub_100007E8C(&qword_1011A3CD8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v13)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v13)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = 112 * v15;
    sub_1001A84F0(*(_QWORD *)(v2 + 48) + 112 * v15, (uint64_t)v20);
    sub_1001A852C((uint64_t)v20, *(_QWORD *)(v4 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019E360()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100007E8C((uint64_t *)&unk_1011A3CC0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019E510()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  sub_100007E8C(&qword_1011A3D38);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_28;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
      {
        v9 = v25 + 2;
        if (v25 + 2 >= v13)
          goto LABEL_28;
        v26 = *(_QWORD *)(v6 + 8 * v9);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 104 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_BYTE *)(v17 + 24);
    v20 = *(_BYTE *)(v17 + 25);
    v21 = *(_BYTE *)(v17 + 26);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v28 = *(_OWORD *)(v17 + 56);
    v29 = *(_OWORD *)(v17 + 72);
    v30 = *(_OWORD *)(v17 + 88);
    v24 = *(_OWORD *)(v17 + 40);
    *(_OWORD *)v23 = *(_OWORD *)v17;
    *(_QWORD *)(v23 + 16) = v18;
    *(_BYTE *)(v23 + 24) = v19;
    *(_BYTE *)(v23 + 25) = v20;
    *(_BYTE *)(v23 + 26) = v21;
    *(_QWORD *)(v23 + 32) = v22;
    *(_OWORD *)(v23 + 40) = v24;
    *(_OWORD *)(v23 + 56) = v28;
    *(_OWORD *)(v23 + 72) = v29;
    *(_OWORD *)(v23 + 88) = v30;
    swift_bridgeObjectRetain();
    swift_retain(*((_QWORD *)&v28 + 1));
    swift_retain(*((_QWORD *)&v29 + 1));
    swift_retain(*((_QWORD *)&v30 + 1));
  }
  v27 = v25 + 3;
  if (v27 >= v13)
    goto LABEL_28;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019E740(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - v7;
  sub_100007E8C(a2);
  v9 = *v2;
  v10 = static _SetStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_30:
    *v4 = v11;
    return;
  }
  v28 = v4;
  v12 = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 56 + 8 * v14)
    memmove(v12, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    swift_release(v9);
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_10019E964()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_100007E8C(&qword_1011A3978);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019EAF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100007E8C(&qword_1011A3928);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019ECA8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019EE30()
{
  sub_10019EE3C(&qword_10119D430);
}

void sub_10019EE3C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    swift_retain(v18);
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019EFDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100007E8C(&qword_1011A3B08);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10004A06C(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019F184(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  sub_100007E8C(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release();
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_28;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
      {
        v10 = v20 + 2;
        if (v20 + 2 >= v14)
          goto LABEL_28;
        v21 = *(_QWORD *)(v7 + 8 * v10);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v14)
    goto LABEL_28;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10019F324(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  __n128 v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3898);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_44:
    *v2 = v6;
    return;
  }
  v32 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  v13 = swift_retain(v3);
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v18 >= v11)
      goto LABEL_42;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_42;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_42;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v17);
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    if (v21)
    {
      if (v21 == 1)
        v22 = 0x657469726F766166;
      else
        v22 = 0x64616F6C6E776F64;
      v23 = 0xE900000000000073;
    }
    else
    {
      v23 = 0xE300000000000000;
      v22 = 7105633;
    }
    String.hash(into:)(v33, v22, v23);
    swift_bridgeObjectRelease(v23);
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_42:
    swift_release_n(v3, 2, v13);
    v2 = v32;
    goto LABEL_44;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_42;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_46:
  __break(1u);
}

void sub_10019F5F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  __n128 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_1011A3D20);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_26;
  }
  v16 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = swift_retain();
  if (v8)
  {
    v11 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v9 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v9 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v9 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x10019F918);
              }
              if (v13 >= v9)
                break;
              v12 = *(_QWORD *)(v3 + 56 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v17, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2, v10);
  v2 = v16;
LABEL_26:
  *v2 = v5;
}

void sub_10019F930(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[13];
  uint64_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[9];

  v2 = v1;
  v4 = type metadata accessor for Playlist.Folder.Item(0);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  __chkstk_darwin(v4);
  v29 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for SidebarMenu.Item(0);
  v6 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v34 = (uint64_t)v24 - v10;
  v11 = *v1;
  if (*(_QWORD *)(*v1 + 24) > a1)
    a1 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3D10);
  v12 = static _SetStorage.resize(original:capacity:move:)(v11, a1, 0);
  if (!*(_QWORD *)(v11 + 16))
  {
    swift_release();
    goto LABEL_25;
  }
  v25 = v1;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 56);
  v32 = (_QWORD *)(v11 + 56);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v33 = (unint64_t)(v13 + 63) >> 6;
  v17 = swift_retain();
  v26 = "account";
  v24[12] = "LibraryView.RecentlyAdded";
  v24[11] = "LibraryView.Playlists";
  v24[10] = "LibraryView.Artists";
  v24[9] = "LibraryView.Albums";
  v24[8] = "LibraryView.Songs";
  v24[7] = "LibraryView.MadeForYou";
  v24[6] = "LibraryView.MusicVideos";
  v24[5] = "LibraryView.Genres";
  v24[4] = "LibraryView.Compilations";
  v24[3] = "LibraryView.Composers";
  v24[2] = "LibraryView.Shows";
  v24[1] = "LibraryView.Downloaded";
  v18 = v34;
  v27 = v11;
  v28 = v6;
  if (v16)
  {
    v19 = __clz(__rbit64(v16));
    goto LABEL_22;
  }
  if (v33 > 1)
  {
    v20 = v32[1];
    v21 = 1;
    if (v20)
      goto LABEL_21;
    v21 = 2;
    if (v33 > 2)
    {
      v20 = v32[2];
      if (v20)
        goto LABEL_21;
      v21 = 3;
      if (v33 > 3)
      {
        v20 = v32[3];
        if (!v20)
        {
          v22 = 4;
          if (v33 > 4)
          {
            v20 = v32[4];
            if (v20)
            {
              v21 = 4;
              goto LABEL_21;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
              {
                __break(1u);
                JUMPOUT(0x10019FFDCLL);
              }
              if (v21 >= v33)
                break;
              v20 = v32[v21];
              ++v22;
              if (v20)
                goto LABEL_21;
            }
          }
          goto LABEL_23;
        }
LABEL_21:
        v19 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
        sub_10005B704(*(_QWORD *)(v11 + 48) + *(_QWORD *)(v6 + 72) * v19, v34, type metadata accessor for SidebarMenu.Item);
        Hasher.init(_seed:)(v36, *(_QWORD *)(v12 + 40));
        sub_10005B704(v18, (uint64_t)v8, type metadata accessor for SidebarMenu.Item);
        v23 = (char *)&loc_10019FCF8 + dword_10019FFDC[swift_getEnumCaseMultiPayload(v8, v35)];
        __asm { BR              X9 }
      }
    }
  }
LABEL_23:
  swift_release_n(v11, 2, v17);
  v2 = v25;
LABEL_25:
  *v2 = v12;
}

void sub_1001A0028(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D400);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_36:
    *v2 = v6;
    return;
  }
  v25 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (!v11)
    {
      v15 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v15 >= v12)
        goto LABEL_34;
      v11 = *(_QWORD *)(v8 + 8 * v15);
      ++v7;
      if (!v11)
      {
        v7 = v15 + 1;
        if (v15 + 1 >= v12)
          goto LABEL_34;
        v11 = *(_QWORD *)(v8 + 8 * v7);
        if (!v11)
        {
          v7 = v15 + 2;
          if (v15 + 2 >= v12)
            goto LABEL_34;
          v11 = *(_QWORD *)(v8 + 8 * v7);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    Hasher.init(_seed:)(v26, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(0);
    v17 = Hasher._finalize()();
    v18 = -1 << *(_BYTE *)(v6 + 32);
    v19 = v17 & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v13 + 8 * (v19 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v13 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v13 + 8 * v20);
      }
      while (v24 == -1);
      v14 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    v11 &= v11 - 1;
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    ++*(_QWORD *)(v6 + 16);
  }
  v16 = v15 + 3;
  if (v16 >= v12)
  {
LABEL_34:
    swift_release();
    v2 = v25;
    goto LABEL_36;
  }
  v11 = *(_QWORD *)(v8 + 8 * v16);
  if (v11)
  {
    v7 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v12)
      goto LABEL_34;
    v11 = *(_QWORD *)(v8 + 8 * v7);
    ++v16;
    if (v11)
      goto LABEL_25;
  }
LABEL_38:
  __break(1u);
}

void sub_1001A0268(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3950);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release();
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A04E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD v31[9];
  _BYTE v32[120];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3CD8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_46:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v29 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v30 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v16 >= v30)
      goto LABEL_44;
    v17 = *(_QWORD *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v30)
        goto LABEL_44;
      v17 = *(_QWORD *)(v29 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v30)
          goto LABEL_44;
        v17 = *(_QWORD *)(v29 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    sub_1001A84F0(*(_QWORD *)(v3 + 48) + 112 * v15, (uint64_t)v32);
    Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
    if (v32[0])
    {
      if (v32[0] == 1)
        v19 = 0xD00000000000001CLL;
      else
        v19 = 0xD000000000000029;
      if (v32[0] == 1)
        v20 = 0x8000000100E2B610;
      else
        v20 = 0x8000000100E2B630;
    }
    else
    {
      v19 = 0xD00000000000002CLL;
      v20 = 0x8000000100E2B5E0;
    }
    String.hash(into:)(v31, v19, v20);
    swift_bridgeObjectRelease(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_47;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    sub_1001A852C((uint64_t)v32, *(_QWORD *)(v6 + 48) + 112 * v13);
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v30)
  {
LABEL_44:
    swift_release_n(v3, 2, v11);
    goto LABEL_46;
  }
  v17 = *(_QWORD *)(v29 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v30)
      goto LABEL_44;
    v17 = *(_QWORD *)(v29 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_48:
  __break(1u);
}

void sub_1001A0814(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_1011A3CC0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v32 = v2;
  v33 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  v12 = swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v33)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain();
    String.hash(into:)(v34, v22, v23);
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v12);
    v2 = v32;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A0AC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D3D0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = v2;
  v32 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v33 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v33)
      goto LABEL_36;
    v17 = *(_QWORD *)(v32 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v33)
        goto LABEL_36;
      v17 = *(_QWORD *)(v32 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v33)
          goto LABEL_36;
        v17 = *(_QWORD *)(v32 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    v20 = *(_QWORD *)(v6 + 40);
    v21 = type metadata accessor for AnyCancellable(0);
    v22 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    swift_retain(v19);
    v23 = dispatch thunk of Hashable._rawHashValue(seed:)(v20, v21, v22);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v11);
    v2 = v31;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v32 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v33)
      goto LABEL_36;
    v17 = *(_QWORD *)(v32 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A0DA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __n128 v28;
  __int128 v29;
  __int128 v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  int64_t v39;
  _QWORD v40[9];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3D38);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v39 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  v12 = swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_27;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v22 >= v39)
      goto LABEL_36;
    v23 = *(_QWORD *)(v8 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_36;
      v23 = *(_QWORD *)(v8 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v39)
          goto LABEL_36;
        v23 = *(_QWORD *)(v8 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_26:
    v10 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_27:
    v25 = *(_QWORD *)(v3 + 48) + 104 * v21;
    v27 = *(_OWORD *)v25;
    v26 = *(_OWORD *)(v25 + 16);
    v43 = *(_OWORD *)(v25 + 32);
    v28 = *(__n128 *)(v25 + 48);
    v29 = *(_OWORD *)(v25 + 64);
    v30 = *(_OWORD *)(v25 + 80);
    v47 = *(_QWORD *)(v25 + 96);
    v45 = v29;
    v46 = v30;
    v44 = v28;
    v41 = v27;
    v42 = v26;
    Hasher.init(_seed:)(v40, *(_QWORD *)(v6 + 40));
    sub_1001A8568(&v41);
    Lyrics.TextLine.hash(into:)((uint64_t)v40);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v6 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v11 + 8 * v34);
      }
      while (v38 == -1);
      v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v6 + 48) + 104 * v14;
    v16 = v43;
    v17 = v41;
    *(_OWORD *)(v15 + 16) = v42;
    *(_OWORD *)(v15 + 32) = v16;
    v12 = v44;
    v18 = v45;
    v19 = v46;
    *(_QWORD *)(v15 + 96) = v47;
    *(_OWORD *)(v15 + 64) = v18;
    *(_OWORD *)(v15 + 80) = v19;
    *(__n128 *)(v15 + 48) = v12;
    *(_OWORD *)v15 = v17;
    ++*(_QWORD *)(v6 + 16);
  }
  v24 = v22 + 3;
  if (v24 >= v39)
  {
LABEL_36:
    swift_release_n(v3, 2, v12);
    goto LABEL_38;
  }
  v23 = *(_QWORD *)(v8 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v39)
      goto LABEL_36;
    v23 = *(_QWORD *)(v8 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A109C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v30 = v3;
  v8 = 0;
  v9 = v4 + 56;
  v10 = 1 << *(_BYTE *)(v4 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v4 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v6 + 56;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v8 << 6);
      goto LABEL_27;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_27:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v17);
    Hasher.init(_seed:)(v31, *(_QWORD *)(v7 + 40));
    Hasher._combine(_:)(v21);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v14 + 8 * v25);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_36:
    swift_release(v4);
    v3 = v30;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A1310(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t (*v43)(uint64_t);
  unint64_t *v44;
  uint64_t v45;

  v44 = a4;
  v45 = a5;
  v7 = v5;
  v43 = a2;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_100007E8C(a3);
  v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release(v13);
LABEL_37:
    *v7 = v15;
    return;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v40 = v7;
  v41 = v13 + 56;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v42 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 56;
  v21 = swift_retain(v13);
  v22 = 0;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v22 << 6);
      goto LABEL_26;
    }
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v42)
      goto LABEL_35;
    v27 = *(_QWORD *)(v41 + 8 * v26);
    ++v22;
    if (!v27)
    {
      v22 = v26 + 1;
      if (v26 + 1 >= v42)
        goto LABEL_35;
      v27 = *(_QWORD *)(v41 + 8 * v22);
      if (!v27)
      {
        v22 = v26 + 2;
        if (v26 + 2 >= v42)
          goto LABEL_35;
        v27 = *(_QWORD *)(v41 + 8 * v22);
        if (!v27)
          break;
      }
    }
LABEL_25:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_26:
    v29 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v29 * v25, v9, v21);
    v30 = *(_QWORD *)(v15 + 40);
    v31 = sub_100048748(v44, v43, v45);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v9, v31);
    v33 = -1 << *(_BYTE *)(v15 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v23 * v29, v12, v9);
    ++*(_QWORD *)(v15 + 16);
  }
  v28 = v26 + 3;
  if (v28 >= v42)
  {
LABEL_35:
    swift_release_n(v13, 2, v21);
    v7 = v40;
    goto LABEL_37;
  }
  v27 = *(_QWORD *)(v41 + 8 * v28);
  if (v27)
  {
    v22 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v22 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v22 >= v42)
      goto LABEL_35;
    v27 = *(_QWORD *)(v41 + 8 * v22);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_1001A162C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3978);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A188C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3928);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v32 = v2;
  v33 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  v12 = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v33)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain_n(v23, 2);
    String.hash(into:)(v34, v22, v23);
    swift_bridgeObjectRelease();
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2, v12);
    v2 = v32;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v33)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A1B44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  __n128 v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD v32[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3D30);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_41:
    *v2 = v6;
    return;
  }
  v31 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  v13 = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v18 >= v11)
      goto LABEL_39;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_39;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_39;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v17);
    Hasher.init(_seed:)(v32, *(_QWORD *)(v6 + 40));
    if (v21)
      v22 = 0x7972617262696CLL;
    else
      v22 = 0x676F6C61746163;
    String.hash(into:)(v32, v22, 0xE700000000000000);
    swift_bridgeObjectRelease(0xE700000000000000);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_39:
    swift_release_n(v3, 2, v13);
    v2 = v31;
    goto LABEL_41;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_39;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_43:
  __break(1u);
}

void sub_1001A1DF8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::UInt v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_10119D430);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_37:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_26;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v17 >= v12)
      goto LABEL_35;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_35;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_35;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
        {
          v19 = v17 + 3;
          if (v19 >= v12)
          {
LABEL_35:
            swift_release();
            v2 = v30;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v8 + 8 * v19);
          v7 = v19;
          if (!v18)
            break;
        }
      }
    }
LABEL_25:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_26:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    Hasher.init(_seed:)(v31, *(_QWORD *)(v6 + 40));
    v21 = sub_10047E924();
    Hasher._combine(_:)(v21);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
    swift_retain();
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_35;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_1001A2078(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C((uint64_t *)&unk_10119D2E0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  v9 = swift_retain();
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v15 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v15 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v15 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x1001A24A4);
              }
              if (v12 >= v15)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2, v9);
LABEL_26:
  *v2 = v5;
}

void sub_1001A24D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  _QWORD v35[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_10119D420);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v32 = v2;
  v33 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v34 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v34)
      goto LABEL_36;
    v17 = *(_QWORD *)(v33 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v34)
        goto LABEL_36;
      v17 = *(_QWORD *)(v33 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v34)
          goto LABEL_36;
        v17 = *(_QWORD *)(v33 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    Hasher.init(_seed:)(v35, *(_QWORD *)(v6 + 40));
    v20 = objc_msgSend(*(id *)(v19 + 16), "_identifier", swift_retain().n128_f64[0]);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    String.hash(into:)(v35, v21, v23);
    swift_bridgeObjectRelease();
    v24 = Hasher._finalize()();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v10 + 8 * v27);
      }
      while (v31 == -1);
      v13 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v34)
  {
LABEL_36:
    swift_release_n(v3, 2, v11);
    v2 = v32;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v33 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v34)
      goto LABEL_36;
    v17 = *(_QWORD *)(v33 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001A27CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD v32[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100007E8C(&qword_1011A3B08);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_40;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v30 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v31 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  v11 = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_27;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_41;
    if (v16 >= v31)
      break;
    v17 = *(_QWORD *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v31)
        break;
      v17 = *(_QWORD *)(v30 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v31)
          break;
        v17 = *(_QWORD *)(v30 + 8 * v12);
        if (!v17)
        {
          v18 = v16 + 3;
          if (v18 >= v31)
            break;
          v17 = *(_QWORD *)(v30 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v12 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v12 >= v31)
                goto LABEL_38;
              v17 = *(_QWORD *)(v30 + 8 * v12);
              ++v18;
              if (v17)
                goto LABEL_26;
            }
          }
          v12 = v18;
        }
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_27:
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    Hasher.init(_seed:)(v32, *(_QWORD *)(v6 + 40));
    if ((v19 & 0x8000000000000000) == 0)
    {
      Hasher._combine(_:)(0);
      __asm { BR              X9 }
    }
    Hasher._combine(_:)(1uLL);
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 24);
    swift_retain_n(v19 & 0x7FFFFFFFFFFFFFFFLL, 2);
    String.hash(into:)(v32, v20, v21);
    sub_1001A7ABC(v19);
    v22 = Hasher._finalize()();
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    v26 = 0;
    v27 = (unint64_t)(63 - v23) >> 6;
    do
    {
      if (++v25 == v27 && (v26 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1001A2C58);
      }
      v28 = v25 == v27;
      if (v25 == v27)
        v25 = 0;
      v26 |= v28;
      v29 = *(_QWORD *)(v10 + 8 * v25);
    }
    while (v29 == -1);
    v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_10:
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v6 + 16);
  }
LABEL_38:
  swift_release_n(v3, 2, v11);
LABEL_40:
  *v2 = v6;
}

void sub_1001A2C8C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  __n128 v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  Swift::Int v22;
  id v23;
  Swift::Int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release();
LABEL_38:
    *v3 = v7;
    return;
  }
  v32 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  v14 = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_27;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v19 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_36;
      v20 = *(_QWORD *)(v9 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v12)
          goto LABEL_36;
        v20 = *(_QWORD *)(v9 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_26:
    v11 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_27:
    v22 = *(_QWORD *)(v7 + 40);
    v23 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v24 = NSObject._rawHashValue(seed:)(v22);
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v27);
      }
      while (v31 == -1);
      v16 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v23;
    ++*(_QWORD *)(v7 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v12)
  {
LABEL_36:
    swift_release_n(v4, 2, v14);
    v3 = v32;
    goto LABEL_38;
  }
  v20 = *(_QWORD *)(v9 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v12)
      goto LABEL_36;
    v20 = *(_QWORD *)(v9 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1001A2F00(unsigned __int8 a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[9];

  v2 = v1;
  v4 = *v1;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x657469726F766166;
    else
      v5 = 0x64616F6C6E776F64;
    v6 = 0xE900000000000073;
  }
  else
  {
    v6 = 0xE300000000000000;
    v5 = 7105633;
  }
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v4 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease(v4);
    return 3;
  }
  v10 = ~v8;
  while (1)
  {
    if (*(_BYTE *)(*(_QWORD *)(v4 + 48) + v9))
    {
      if (*(_BYTE *)(*(_QWORD *)(v4 + 48) + v9) == 1)
        v11 = 0x657469726F766166;
      else
        v11 = 0x64616F6C6E776F64;
      v12 = 0xE900000000000073;
      v13 = a1;
      if (a1)
      {
LABEL_17:
        if (v13 == 1)
          v15 = 0x657469726F766166;
        else
          v15 = 0x64616F6C6E776F64;
        v14 = 0xE900000000000073;
        if (v11 != v15)
          goto LABEL_22;
        goto LABEL_21;
      }
    }
    else
    {
      v12 = 0xE300000000000000;
      v11 = 7105633;
      v13 = a1;
      if (a1)
        goto LABEL_17;
    }
    v14 = 0xE300000000000000;
    v15 = 7105633;
    if (v11 != 7105633)
      goto LABEL_22;
LABEL_21:
    if (v12 == v14)
    {
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(v12);
      goto LABEL_27;
    }
LABEL_22:
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v15, v14, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) != 0)
      break;
    v9 = (v9 + 1) & v10;
    if (((*(_QWORD *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_24;
  }
  v12 = v4;
LABEL_27:
  swift_bridgeObjectRelease(v12);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v19 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10019ECA8(&qword_1011A3898);
    v19 = v22[0];
  }
  v17 = *(unsigned __int8 *)(*(_QWORD *)(v19 + 48) + v9);
  sub_1001A444C(v9);
  v20 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v20);
  return v17;
}

uint64_t sub_1001A3180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Variant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748((unint64_t *)&unk_1011A3930, v12, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  swift_bridgeObjectRetain();
  v34 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v35 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_100048748(&qword_10119D380, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v34, v6, v21);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease(v10);
        v24 = 1;
        a2 = v33;
        v7 = v35;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease(v10);
    v25 = v32;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
    v27 = *v25;
    v36 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10019E740((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Variant, (uint64_t *)&unk_1011A3940);
      v27 = v36;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v35;
    a2 = v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 32))(v33, v28, v6);
    sub_1001A4F78(v16, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (unint64_t *)&unk_1011A3930, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v29 = *v25;
    *v25 = v36;
    v23 = swift_bridgeObjectRelease(v29);
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease(v10);
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

double sub_1001A33E4@<D0>(_BYTE *a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  double result;
  _QWORD *v25;
  uint64_t v26;
  unsigned __int8 v27[120];

  v3 = v2;
  v6 = *v3;
  Hasher.init(_seed:)(v27, *(_QWORD *)(*v3 + 40));
  v7 = *a1;
  v8 = 0x8000000100E2B610;
  v9 = 0xD000000000000029;
  if (v7 == 1)
    v9 = 0xD00000000000001CLL;
  else
    v8 = 0x8000000100E2B630;
  if (*a1)
    v10 = v9;
  else
    v10 = 0xD00000000000002CLL;
  if (*a1)
    v11 = v8;
  else
    v11 = 0x8000000100E2B5E0;
  swift_bridgeObjectRetain();
  String.hash(into:)(v27, v10, v11);
  swift_bridgeObjectRelease(v11);
  v12 = Hasher._finalize()();
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
    swift_bridgeObjectRelease(v6);
LABEL_38:
    result = 0.0;
    a2[5] = 0u;
    a2[6] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
    return result;
  }
  v25 = v3;
  v26 = (uint64_t)a2;
  v15 = ~v13;
  while (1)
  {
    sub_1001A84F0(*(_QWORD *)(v6 + 48) + 112 * v14, (uint64_t)v27);
    v16 = 0xD00000000000002CLL;
    v17 = 0x8000000100E2B5E0;
    if (!v27[0])
    {
      v18 = 0xD00000000000002CLL;
      v19 = 0x8000000100E2B5E0;
      if (!v7)
        goto LABEL_26;
LABEL_20:
      if (v7 == 1)
        v16 = 0xD00000000000001CLL;
      else
        v16 = 0xD000000000000029;
      if (v7 == 1)
        v17 = 0x8000000100E2B610;
      else
        v17 = 0x8000000100E2B630;
      goto LABEL_26;
    }
    if (v27[0] == 1)
      v18 = 0xD00000000000001CLL;
    else
      v18 = 0xD000000000000029;
    if (v27[0] == 1)
      v19 = 0x8000000100E2B610;
    else
      v19 = 0x8000000100E2B630;
    if (v7)
      goto LABEL_20;
LABEL_26:
    if (v18 == v16 && v19 == v17)
      break;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v16, v17, 0);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v17);
    sub_10013B3F0(v27);
    if ((v20 & 1) != 0)
      goto LABEL_35;
    v14 = (v14 + 1) & v15;
    if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    {
      swift_bridgeObjectRelease(v6);
      a2 = (_OWORD *)v26;
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease_n(v19, 2);
  sub_10013B3F0(v27);
LABEL_35:
  swift_bridgeObjectRelease(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
  v22 = *v25;
  *(_QWORD *)v27 = *v25;
  *v25 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10019E1A0();
    v22 = *(_QWORD *)v27;
  }
  sub_1001A852C(*(_QWORD *)(v22 + 48) + 112 * v14, v26);
  sub_1001A4650(v14);
  v23 = *v25;
  *v25 = *(_QWORD *)v27;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  return result;
}

uint64_t sub_1001A3684(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v4 = v2;
    else
      v4 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain(a1);
    v6 = __CocoaSet.contains(_:)(v5, v4);
    swift_release(a1);
    if ((v6 & 1) != 0)
    {
      sub_1001A4100(v4, a1);
      v8 = v7;
      swift_bridgeObjectRelease(v2);
      return v8;
    }
LABEL_11:
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  v9 = *(_QWORD *)(v2 + 40);
  v10 = type metadata accessor for AnyCancellable(0);
  v11 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_bridgeObjectRetain();
  v12 = dispatch thunk of Hashable._rawHashValue(seed:)(v9, v10, v11);
  v13 = -1 << *(_BYTE *)(v2 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    goto LABEL_11;
  v15 = ~v13;
  v16 = sub_100048748(&qword_10119D3E0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  while (1)
  {
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v22, v10, v16) & 1) != 0)
      break;
    v14 = (v14 + 1) & v15;
    if (((*(_QWORD *)(v2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(v2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v19 = *v1;
  v21 = *v1;
  *v1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10019EE3C((uint64_t *)&unk_10119D3D0);
    v19 = v21;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v14);
  sub_1001A48B4(v14);
  v20 = *v1;
  *v1 = v21;
  swift_bridgeObjectRelease(v20);
  return v8;
}

uint64_t sub_1001A3878(unsigned __int8 a1)
{
  _QWORD *v1;
  uint64_t v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[9];

  v3 = *v1;
  Hasher.init(_seed:)(v13, *(_QWORD *)(*v1 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 4;
  v7 = *(_QWORD *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return 4;
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v10 = *v1;
  v13[0] = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10019ECA8(&qword_1011A3B60);
    v10 = v13[0];
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 48) + v6);
  sub_1001A4A88(v6);
  *v1 = v13[0];
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1001A39A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = *v2;
  v5 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v2 + 40), a1);
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v11 = *v2;
  v15 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10019E964();
    v11 = v15;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1001A4C30(v7);
  v13 = *v2;
  *v2 = v15;
  swift_bridgeObjectRelease(v13);
  return v12;
}

uint64_t sub_1001A3AA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, a1, a2);
  swift_bridgeObjectRelease(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10019EAF8();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_1001A4DB4(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

uint64_t sub_1001A3C44(void *a1)
{
  return sub_1001A3F14(a1, &qword_1011A4630, UIScene_ptr, &qword_1011A3CE8, sub_1006A0924);
}

uint64_t sub_1001A3C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748(&qword_1011A3CF8, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_100048748(&qword_1011A3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33, v6, v21);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease();
        v24 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease();
    v25 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v27 = *v25;
    v35 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10019E740((uint64_t (*)(_QWORD))&type metadata accessor for AudioVariant, &qword_1011A3D08);
      v27 = v35;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v28, v6);
    sub_1001A4F78(v16, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, &qword_1011A3CF8, (uint64_t)&protocol conformance descriptor for AudioVariant);
    *v25 = v35;
    v23 = swift_bridgeObjectRelease();
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease();
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

uint64_t sub_1001A3ECC(void *a1)
{
  return sub_1001A3F14(a1, (unint64_t *)&qword_10119D470, UIViewController_ptr, &qword_1011A3CD0, sub_1006A0B50);
}

uint64_t sub_1001A3EF0(void *a1)
{
  return sub_1001A3F14(a1, &qword_1011A3AF8, MPCPlayerPath_ptr, &qword_1011A3B00, sub_1006A0FAC);
}

uint64_t sub_1001A3F14(void *a1, unint64_t *a2, _QWORD *a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v8 = v5;
  v10 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v12 = *v5;
    else
      v12 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a1;
    v14 = __CocoaSet.contains(_:)(v13, v12);

    if ((v14 & 1) != 0)
    {
      sub_1001A42B0(v12, (uint64_t)v13, a5, a2, a3);
      v16 = v15;
      swift_bridgeObjectRelease(v10);
      return v16;
    }
LABEL_15:
    swift_bridgeObjectRelease(v10);
    return 0;
  }
  v18 = *(_QWORD *)(v10 + 40);
  swift_bridgeObjectRetain();
  v19 = NSObject._rawHashValue(seed:)(v18);
  v20 = -1 << *(_BYTE *)(v10 + 32);
  v21 = v19 & ~v20;
  if (((*(_QWORD *)(v10 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    goto LABEL_15;
  sub_10004A07C(0, a2, a3);
  v22 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v21);
  v23 = static NSObject.== infix(_:_:)(v22, a1);

  if ((v23 & 1) == 0)
  {
    v24 = ~v20;
    do
    {
      v21 = (v21 + 1) & v24;
      if (((*(_QWORD *)(v10 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_15;
      v25 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v21);
      v26 = static NSObject.== infix(_:_:)(v25, a1);

    }
    while ((v26 & 1) == 0);
  }
  swift_bridgeObjectRelease(v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
  v28 = *v8;
  v31 = *v8;
  *v8 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10019F184(a4);
    v28 = v31;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v28 + 48) + 8 * v21);
  sub_1001A5200(v21);
  v29 = *v8;
  *v8 = v31;
  swift_bridgeObjectRelease(v29);
  return v16;
}

void sub_1001A4100(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v20 = a2;
  v5 = swift_bridgeObjectRelease(*v3);
  v6 = __CocoaSet.count.getter(a1, v5);
  v8 = swift_unknownObjectRetain(a1, v7);
  v9 = sub_1006A0704(v8, v6);
  v19 = v9;
  v10 = *(_QWORD *)(v9 + 40);
  v11 = type metadata accessor for AnyCancellable(0);
  v12 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_retain(v9);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v11, v12);
  v14 = -1 << *(_BYTE *)(v9 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v9 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v16 = ~v14;
    v17 = sub_100048748(&qword_10119D3E0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    while (1)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v15);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v18, &v20, v11, v17) & 1) != 0)
        break;
      v15 = (v15 + 1) & v16;
      if (((*(_QWORD *)(v9 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_release(v9);
        __break(1u);
        break;
      }
    }
    swift_release(v9);
    v9 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v15);
    v18 = v9;
    sub_1001A48B4(v15);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v20, &v18, v11, v17) & 1) != 0)
    {
      *v3 = v19;
      return;
    }
    __break(1u);
  }
  swift_release(v9);
  __break(1u);
}

void sub_1001A42B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), unint64_t *a4, _QWORD *a5)
{
  uint64_t *v5;
  uint64_t *v9;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v9 = v5;
  v12 = swift_bridgeObjectRelease(*v9);
  v13 = __CocoaSet.count.getter(a1, v12);
  v15 = swift_unknownObjectRetain(a1, v14);
  v16 = a3(v15, v13);
  v27 = v16;
  v17 = *(_QWORD *)(v16 + 40);
  swift_retain();
  v18 = NSObject._rawHashValue(seed:)(v17);
  v19 = -1 << *(_BYTE *)(v16 + 32);
  v20 = v18 & ~v19;
  if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
  {
    sub_10004A07C(0, a4, a5);
    v21 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v20);
    v22 = static NSObject.== infix(_:_:)(v21, a2);

    if ((v22 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v26 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v20);
      sub_1001A5200(v20);
      if ((static NSObject.== infix(_:_:)(a2, v26) & 1) != 0)
      {
        *v9 = v27;
        return;
      }
      __break(1u);
    }
    else
    {
      v23 = ~v19;
      while (1)
      {
        v20 = (v20 + 1) & v23;
        if (((*(_QWORD *)(v16 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(v16 + 48) + 8 * v20);
        v25 = static NSObject.== infix(_:_:)(v24, a2);

        if ((v25 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  swift_release();
  __break(1u);
}

unint64_t sub_1001A444C(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain_n(*v1, 2);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
        Hasher.init(_seed:)(v20, *(_QWORD *)(v3 + 40));
        if (v10)
        {
          if (v10 == 1)
            v11 = 0x657469726F766166;
          else
            v11 = 0x64616F6C6E776F64;
          v12 = 0xE900000000000073;
        }
        else
        {
          v12 = 0xE300000000000000;
          v11 = 7105633;
        }
        String.hash(into:)(v20, v11, v12);
        swift_bridgeObjectRelease(v12);
        v13 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9)
            goto LABEL_5;
        }
        else if (v13 >= v9)
        {
          goto LABEL_17;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_17:
          v14 = *(_QWORD *)(v3 + 48);
          v15 = (_BYTE *)(v14 + v2);
          v16 = (_BYTE *)(v14 + v6);
          if (v2 != v6 || (v2 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    swift_release(v3);
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1001A4650(unint64_t a1)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD v22[9];
  _QWORD v23[15];

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v21 = v1;
    v7 = ~v5;
    swift_retain(v3);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      while (1)
      {
        sub_1001A84F0(*(_QWORD *)(v3 + 48) + 112 * v6, (uint64_t)v23);
        Hasher.init(_seed:)(v22, *(_QWORD *)(v3 + 40));
        if (LOBYTE(v23[0]))
        {
          v10 = LOBYTE(v23[0]) == 1 ? 0xD00000000000001CLL : 0xD000000000000029;
          v11 = LOBYTE(v23[0]) == 1 ? 0x8000000100E2B610 : 0x8000000100E2B630;
        }
        else
        {
          v10 = 0xD00000000000002CLL;
          v11 = 0x8000000100E2B5E0;
        }
        String.hash(into:)(v22, v10, v11);
        swift_bridgeObjectRelease(v11);
        v12 = Hasher._finalize()();
        sub_10013B3F0(v23);
        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
          break;
        if (v13 < v9)
          goto LABEL_19;
LABEL_20:
        v14 = *(_QWORD *)(v3 + 48);
        v15 = v14 + 112 * v2;
        if (v2 < (uint64_t)v6 || v15 >= v14 + 112 * v6 + 112)
        {
          swift_arrayInitWithTakeFrontToBack(v15);
        }
        else
        {
          v16 = v2 == v6;
          v2 = v6;
          if (v16)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v15);
        }
        v2 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_24;
      }
      if (v13 < v9)
        goto LABEL_6;
LABEL_19:
      if (v2 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_20;
    }
LABEL_24:
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
    v1 = v21;
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v17 = *v1;
  v18 = *(_QWORD *)(*v1 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v17 + 16) = v20;
    ++*(_DWORD *)(v17 + 36);
  }
}

void sub_1001A48B4(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v10 = type metadata accessor for AnyCancellable(0);
      v11 = sub_100048748(&qword_1011A4010, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v12 = dispatch thunk of Hashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40), v10, v11) & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
}

unint64_t sub_1001A4A88(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::UInt v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v6);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v3 + 40));
        Hasher._combine(_:)(v10);
        v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_BYTE *)(v12 + v2);
          v14 = (_BYTE *)(v12 + v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1001A4C30(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(v3);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = static Hasher._hash(seed:_:)(*(_QWORD *)(v3 + 40), *v11) & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1001A4DB4(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v21, *(_QWORD *)(v3 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v21, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1001A4F78(int64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t (*v36)(uint64_t);
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a3;
  v38 = a4;
  v36 = a2;
  v6 = a2(0);
  v39 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - v7;
  v9 = *v4;
  v10 = *v4 + 56;
  v11 = -1 << *(_BYTE *)(*v4 + 32);
  v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(_QWORD *)(v10 + 8 * (v12 >> 6))) != 0)
  {
    v33 = v4;
    v13 = ~v11;
    swift_retain(v9);
    v14 = _HashTable.previousHole(before:)(a1, v10, v13);
    if ((*(_QWORD *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      v35 = (v14 + 1) & v13;
      v15 = *(_QWORD *)(v39 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      do
      {
        v16 = v10;
        v17 = v15;
        v18 = v15 * v12;
        v34(v8, *(_QWORD *)(v9 + 48) + v15 * v12, v6);
        v19 = *(_QWORD *)(v9 + 40);
        v20 = sub_100048748(v37, v36, v38);
        v21 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v6, v20);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v6);
        v22 = v21 & v13;
        if (a1 >= (uint64_t)v35)
        {
          if (v22 >= v35 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            v25 = *(_QWORD *)(v9 + 48);
            v15 = v17;
            v26 = v17 * a1;
            v27 = v25 + v17 * a1;
            if (v17 * a1 < v18 || v27 >= v25 + v18 + v17)
            {
              swift_arrayInitWithTakeFrontToBack(v27);
              a1 = v12;
            }
            else
            {
              a1 = v12;
              if (v26 != v18)
              {
                swift_arrayInitWithTakeBackToFront(v27);
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v35 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        v15 = v17;
LABEL_5:
        v12 = (v12 + 1) & v13;
        v10 = v16;
      }
      while (((*(_QWORD *)(v16 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    *(_QWORD *)(v10 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v9);
    v4 = v33;
  }
  else
  {
    *(_QWORD *)(v10 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v28 = *v4;
  v29 = *(_QWORD *)(*v4 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v28 + 16) = v31;
    ++*(_DWORD *)(v28 + 36);
  }
}

unint64_t sub_1001A5200(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

Swift::Int sub_1001A53A0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  size_t v8;
  Swift::Int v9;
  void *v10;
  uint64_t v12;

  v3 = isStackAllocationSafe;
  v4 = *(_BYTE *)(a2 + 32);
  v5 = v4 & 0x3F;
  v6 = (1 << v4) + 63;
  v7 = v6 >> 6;
  v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_1001A5520((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, v3, a2);
    swift_release(a2);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v8, -1);
    bzero(v10, v8);
    v9 = sub_1001A5520((unint64_t *)v10, v7, v3, a2);
    swift_release(a2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v9;
}

Swift::Int sub_1001A5520(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v28;
  uint64_t v30;
  _QWORD v31[9];
  uint64_t v32;

  v5 = a2;
  v32 = *(_QWORD *)(a3 + 16);
  if (!v32)
  {
    v24 = 0;
    goto LABEL_37;
  }
  v6 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  v7 = 0;
  while (2)
  {
    v8 = *(unsigned __int8 *)(v30 + v7++);
    Hasher.init(_seed:)(v31, *(_QWORD *)(a4 + 40));
    v9 = 0x657469726F766166;
    if (v8 != 1)
      v9 = 0x64616F6C6E776F64;
    if (v8)
      v10 = v9;
    else
      v10 = 7105633;
    if (v8)
      v11 = 0xE900000000000073;
    else
      v11 = 0xE300000000000000;
    String.hash(into:)(v31, v10, v11);
    swift_bridgeObjectRelease(v11);
    v12 = Hasher._finalize()();
    v13 = -1 << *(_BYTE *)(a4 + 32);
    v14 = v12 & ~v13;
    if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_3;
    v15 = ~v13;
    while (!*(_BYTE *)(*(_QWORD *)(a4 + 48) + v14))
    {
      v17 = 0xE300000000000000;
      v16 = 7105633;
      if (v8)
        goto LABEL_22;
LABEL_18:
      v18 = 0xE300000000000000;
      v19 = 7105633;
      if (v16 == 7105633)
        goto LABEL_26;
LABEL_27:
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v19, v18, 0);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) != 0)
        goto LABEL_31;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_3;
    }
    if (*(_BYTE *)(*(_QWORD *)(a4 + 48) + v14) == 1)
      v16 = 0x657469726F766166;
    else
      v16 = 0x64616F6C6E776F64;
    v17 = 0xE900000000000073;
    if (!v8)
      goto LABEL_18;
LABEL_22:
    if (v8 == 1)
      v19 = 0x657469726F766166;
    else
      v19 = 0x64616F6C6E776F64;
    v18 = 0xE900000000000073;
    if (v16 != v19)
      goto LABEL_27;
LABEL_26:
    if (v17 != v18)
      goto LABEL_27;
    swift_bridgeObjectRelease_n(v17, 2);
LABEL_31:
    v21 = (v14 >> 3) & 0x1FFFFFFFFFFFFFF8;
    v22 = *(unint64_t *)((char *)a1 + v21);
    *(unint64_t *)((char *)a1 + v21) = v22 | (1 << v14);
    if ((v22 & (1 << v14)) != 0 || (v23 = __OFADD__(v28, 1), ++v28, !v23))
    {
LABEL_3:
      if (v7 == v32)
        goto LABEL_35;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_35:
  swift_bridgeObjectRelease(a3);
  v5 = a2;
  v24 = v28;
LABEL_37:
  swift_retain(a4);
  return sub_1001A5AB4(a1, v5, v24, a4);
}

uint64_t sub_1001A57C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release(a4);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v40 = v9;
  sub_100007E8C(&qword_1011A3D08);
  result = static _SetStorage.allocate(capacity:)(a3);
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v40;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_38;
      if (v20 >= v39)
      {
LABEL_35:
        swift_release(a4);
        return v12;
      }
      v21 = v38[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v39)
          goto LABEL_35;
        v21 = v38[v15];
        if (!v21)
        {
          v22 = v20 + 2;
          if (v22 >= v39)
            goto LABEL_35;
          v21 = v38[v22];
          if (!v21)
          {
            while (1)
            {
              v15 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_39;
              if (v15 >= v39)
                goto LABEL_35;
              v21 = v38[v15];
              ++v22;
              if (v21)
                goto LABEL_22;
            }
          }
          v15 = v22;
        }
      }
LABEL_22:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    v26 = *(_QWORD *)(v12 + 40);
    v27 = sub_100048748(&qword_1011A3CF8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v8, v27);
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      v17 = v40;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      v17 = v40;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v31 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_35;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

Swift::Int sub_1001A5AB4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t *v30;
  _QWORD v31[9];

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_40:
    swift_release(v4);
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100007E8C(&qword_1011A3898);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v30 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_22;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_43;
    if (v15 >= a2)
      goto LABEL_40;
    v16 = v30[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_40;
      v16 = v30[v11];
      if (!v16)
        break;
    }
LABEL_21:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_22:
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v14);
    Hasher.init(_seed:)(v31, v9[5]);
    if (v18)
    {
      if (v18 == 1)
        v19 = 0x657469726F766166;
      else
        v19 = 0x64616F6C6E776F64;
      v20 = 0xE900000000000073;
    }
    else
    {
      v20 = 0xE300000000000000;
      v19 = 7105633;
    }
    String.hash(into:)(v31, v19, v20);
    swift_bridgeObjectRelease(v20);
    result = Hasher._finalize()();
    v21 = -1 << *((_BYTE *)v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(_BYTE *)(v9[6] + v24) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (!v5)
      goto LABEL_40;
  }
  v17 = v15 + 2;
  if (v17 >= a2)
    goto LABEL_40;
  v16 = v30[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_40;
    v16 = v30[v11];
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_44:
  __break(1u);
  return result;
}

Swift::Int sub_1001A5D58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100007E8C(&qword_1011A3928);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain_n(v19, 2);
    String.hash(into:)(v32, v18, v19);
    swift_bridgeObjectRelease(v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1001A5FF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_100007E8C(&qword_1011A3CE8);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

double sub_1001A6254(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, void (*a5)(uint64_t))
{
  double result;
  unsigned __int8 v8;
  uint64_t v9;

  v9 = *(_QWORD *)(a2 + 32);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1001A2F00(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100193F28(&v8, a4);
  }
  a5(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1001A62D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = sub_100007E8C(&qword_1011A3B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = sub_1001A7B9C();
  return (*(uint64_t (**)(ValueMetadata *, unint64_t))(v3 + 48))(&_s7ArtistsVN, v3);
}

double sub_1001A6398(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, void (*a5)(uint64_t))
{
  double result;
  unsigned __int8 v8;
  uint64_t v9;

  v9 = *(_QWORD *)(a2 + 56);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1001A2F00(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100193F28(&v8, a4);
  }
  a5(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1001A6414(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  Swift::String v9;

  v8 = *a2;
  v9 = (Swift::String)a2[1];
  v3 = sub_100007E8C(&qword_10119D2D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  v4 = type metadata accessor for TitledSection(0);
  v5 = type metadata accessor for MusicMovie(0);
  v6 = sub_100048748((unint64_t *)&qword_1011A3AC0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  MusicLibrarySectionedRequest.init()(v4, v5, &protocol witness table for TitledSection, v6);
  swift_retain();
  MusicLibrarySectionedRequest.library.setter(v7, v3);
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter(BYTE8(v8), v3);
  MusicLibrarySectionedRequest.filterItems(text:)(v9);
  sub_100040470();
}

double sub_1001A6504(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, void (*a5)(uint64_t))
{
  uint64_t v7;
  double result;
  unsigned __int8 v9;
  uint64_t v10;

  v10 = *(_QWORD *)(a2 + 48);
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1001A2F00(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100193F28(&v9, a4);
  }
  v7 = v10;
  a5(v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_1001A6580(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100007E8C(a3);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  v8 = a4(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(a5, v8);
}

uint64_t sub_1001A6670(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = sub_100007E8C(&qword_1011A3C78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = sub_1001A8384();
  return (*(uint64_t (**)(ValueMetadata *, unint64_t))(v3 + 48))(&_s5SongsVN, v3);
}

uint64_t sub_1001A6748(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE v22[40];
  _QWORD v23[5];
  uint64_t v24;
  char v25;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for Artist(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23[3] = v9;
  v23[4] = &protocol witness table for Artist;
  v12 = sub_100049F68(v23);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v12, a1, v7);
  static ApplicationCapabilities.shared.getter((uint64_t)&v24);
  sub_100065184(&v24);
  if ((v25 & 1) != 0)
  {
    sub_100064C78((uint64_t)v23, (uint64_t)v22);
    v13 = sub_100007E8C(&qword_1011A3FE8);
    if (swift_dynamicCast(v11, v22, v13, v7, 6))
    {
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = a2;
      v17 = static MainActor.shared.getter(v16);
      v18 = (_QWORD *)swift_allocObject(&unk_1010B4998, 40, 7);
      v18[2] = v17;
      v18[3] = &protocol witness table for MainActor;
      v18[4] = v15;
      v19 = sub_100166D34((uint64_t)v6, (uint64_t)&unk_1011A3FF0, (uint64_t)v18);
      swift_release(v19);
    }
  }
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v23);
}

uint64_t sub_1001A6908(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v27;
  _BYTE v28[24];
  uint64_t v29[3];
  uint64_t v30[3];

  v2 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v2);
  v27 = (uint64_t *)&v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v6 = &v28[-v5 - 8];
  v7 = _s6AlbumsVMa(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)&v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = &v28[-v12 - 8];
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
  v15 = objc_msgSend(a1, "traitCollection", v11);
  v16 = sub_10018D478();
  UITraitCollection.subscript.getter(v30, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v16);

  v17 = v30[0];
  v18 = sub_1007607C4(v30[0]);
  swift_bridgeObjectRelease(v17);
  v19 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 96);
  swift_beginAccess(v19, v30, 0, 0);
  sub_10005B704(v19, (uint64_t)v13, _s6AlbumsVMa);
  v13[8] = v18 & 1;
  sub_10005B704(v19, (uint64_t)v9, _s6AlbumsVMa);
  swift_beginAccess(v19, v29, 33, 0);
  sub_1001A81D8((uint64_t)v13, v19, _s6AlbumsVMa);
  swift_endAccess(v29);
  sub_10018168C(v9);
  sub_10005B748((uint64_t)v13, _s6AlbumsVMa);
  sub_10005B748((uint64_t)v9, _s6AlbumsVMa);
  v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
  v21 = objc_msgSend(a1, "traitCollection");
  UITraitCollection.subscript.getter(v29, &type metadata for LibraryFilterTrait, &type metadata for LibraryFilterTrait, v16);

  v22 = v29[0];
  v23 = sub_1007607C4(v29[0]);
  swift_bridgeObjectRelease(v22);
  v24 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 96);
  swift_beginAccess(v24, v29, 0, 0);
  sub_10005B704(v24, (uint64_t)v6, _s11MusicVideosVMa);
  v6[8] = v23 & 1;
  v25 = v27;
  sub_10005B704(v24, (uint64_t)v27, _s11MusicVideosVMa);
  swift_beginAccess(v24, v28, 33, 0);
  sub_1001A81D8((uint64_t)v6, v24, _s11MusicVideosVMa);
  swift_endAccess(v28);
  sub_100183244(v25);
  sub_10005B748((uint64_t)v6, _s11MusicVideosVMa);
  return sub_10005B748((uint64_t)v25, _s11MusicVideosVMa);
}

uint64_t sub_1001A6BF4(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  int v20;
  __int16 v21;
  __int16 v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  int v30;
  __int16 v31;
  uint64_t *v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _BYTE v37[24];
  _QWORD v38[3];
  _QWORD v39[3];

  v35 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v35);
  v36 = (uint64_t *)((char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v34 - v4);
  v6 = _s6AlbumsVMa(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (uint64_t *)((char *)&v34 - v11);
  v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController];
  v14 = objc_msgSend(a1, "traitCollection", v10);
  v34 = sub_10013ADBC();
  UITraitCollection.subscript.getter(v39, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v34);

  v15 = v39[0];
  v16 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 96);
  swift_beginAccess(v16, v39, 0, 0);
  sub_10005B704(v16, (uint64_t)v12, _s6AlbumsVMa);
  v17 = *v12;
  swift_retain(v15);
  swift_release(v17);
  *v12 = v15;
  v18 = (unsigned __int8 *)v12 + *(int *)(v6 + 36);
  v19 = *v18;
  if (v18[1])
    v20 = 256;
  else
    v20 = 0;
  v21 = v20 | v19;
  v22 = sub_10016B5A4(v20 | v19);
  *v18 = v22;
  v18[1] = HIBYTE(v22) & 1;
  sub_10023587C(v21);
  swift_release(v15);
  sub_10005B704(v16, (uint64_t)v8, _s6AlbumsVMa);
  swift_beginAccess(v16, v38, 33, 0);
  sub_1001A81D8((uint64_t)v12, v16, _s6AlbumsVMa);
  swift_endAccess(v38);
  sub_10018168C(v8);
  sub_10005B748((uint64_t)v12, _s6AlbumsVMa);
  sub_10005B748((uint64_t)v8, _s6AlbumsVMa);
  v23 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController];
  v24 = objc_msgSend(a1, "traitCollection");
  UITraitCollection.subscript.getter(v38, &type metadata for MusicLibraryTrait, &type metadata for MusicLibraryTrait, v34);

  v25 = v38[0];
  v26 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 96);
  swift_beginAccess(v26, v38, 0, 0);
  sub_10005B704(v26, (uint64_t)v5, _s11MusicVideosVMa);
  v27 = *v5;
  swift_retain(v25);
  swift_release(v27);
  *v5 = v25;
  v28 = (unsigned __int8 *)v5 + *(int *)(v35 + 36);
  v29 = *v28;
  if (v28[1])
    v30 = 256;
  else
    v30 = 0;
  v31 = sub_10016B910(v30 | v29);
  sub_10075DA44(v31 & 0x1FF);
  swift_release(v25);
  v32 = v36;
  sub_10005B704(v26, (uint64_t)v36, _s11MusicVideosVMa);
  swift_beginAccess(v26, v37, 33, 0);
  sub_1001A81D8((uint64_t)v5, v26, _s11MusicVideosVMa);
  swift_endAccess(v37);
  sub_100183244(v32);
  sub_10005B748((uint64_t)v5, _s11MusicVideosVMa);
  return sub_10005B748((uint64_t)v32, _s11MusicVideosVMa);
}

uint64_t sub_1001A6F70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_100007E68(a1, v1);
  return dispatch thunk of LibraryMusicVideoFilter.artists.getter(v1, v2);
}

uint64_t sub_1001A6FB4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001A6FD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011A3880, 0xD000000000000038, 0x8000000100E2FFF0, (void (*)(_QWORD))sub_10018B83C);
}

uint64_t sub_1001A7018(uint64_t a1)
{
  uint64_t v1;

  return sub_100193734(a1, *(_QWORD *)(v1 + 16), (uint64_t *)&unk_1011A3840, &qword_1011A3878, _s11MusicVideosVMa, (uint64_t)&unk_100ECE358);
}

uint64_t sub_1001A7050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TitledSection.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001A7078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001921E8(a1, a2, v2, _s11MusicVideosVMa, (uint64_t)&unk_1010B3F48, (uint64_t)sub_1001A70C8, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10017F914);
}

uint64_t sub_1001A70B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001A70C0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1001A70C8(uint64_t a1)
{
  uint64_t v1;

  return sub_10019327C(a1, v1);
}

uint64_t sub_1001A70D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100464754(a1, *(uint64_t (**)(void *))(v1 + 16));
}

id sub_1001A70D8@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A72E0(a1, _s11MusicVideosVMa, (uint64_t)&unk_1010B3FC0, (uint64_t)sub_1001A71F0, a2);
}

uint64_t sub_1001A7104()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = (int *)_s11MusicVideosVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v7 = v0 + v4 + v1[6];
  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = (v5 + v4 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[8]));
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v3 | 7);
}

double sub_1001A71F0(uint64_t a1)
{
  return sub_1001A7438(a1, _s11MusicVideosVMa);
}

double sub_1001A71FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011A3900, 0xD000000000000033, 0x8000000100E30110, (void (*)(_QWORD))sub_1001891E4);
}

uint64_t sub_1001A723C(uint64_t a1)
{
  uint64_t v1;

  return sub_100193734(a1, *(_QWORD *)(v1 + 16), &qword_1011A38D8, &qword_1011A38F8, _s6AlbumsVMa, (uint64_t)&unk_100EB08D8);
}

uint64_t sub_1001A7274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001921E8(a1, a2, v2, _s6AlbumsVMa, (uint64_t)&unk_1010B3FE8, (uint64_t)sub_1001A72AC, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10017E350);
}

double sub_1001A72AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001924B8(a1, v1);
}

id sub_1001A72B4@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A72E0(a1, _s6AlbumsVMa, (uint64_t)&unk_1010B4060, (uint64_t)sub_1001A742C, a2);
}

id sub_1001A72E0@<X0>(unsigned __int8 *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  id result;

  result = sub_100180B10(*a1, *(_BYTE *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), a2, a3, a4);
  if (!v6)
    *a5 = result;
  return result;
}

uint64_t sub_1001A7324()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  unint64_t v11;

  v1 = (int *)_s6AlbumsVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v7 = v0 + v4 + v1[6];
  v8 = _s6AlbumsV5ScopeOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = type metadata accessor for Artist(0);
      goto LABEL_7;
    case 1:
      v10 = type metadata accessor for Composer(0);
      goto LABEL_7;
    case 0:
      v10 = type metadata accessor for Genre(0);
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
      break;
  }
  v11 = (v5 + v4 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[8]));
  swift_release(*(_QWORD *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v3 | 7);
}

double sub_1001A742C(uint64_t a1)
{
  return sub_1001A7438(a1, _s6AlbumsVMa);
}

double sub_1001A7438(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(a2(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100180EEC(a1, v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64) + 1), *(void (**)(uint64_t))(v2 + ((v6 + *(_QWORD *)(v5 + 64) + 9) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v6 + *(_QWORD *)(v5 + 64) + 9) & 0xFFFFFFFFFFFFFFF8) + 8), a2);
}

double sub_1001A74AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10018F7CC(a1, v1);
}

double sub_1001A74B4(uint64_t a1)
{
  uint64_t v1;

  return sub_10018D938(a1, v1);
}

double sub_1001A74C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011CF2E0, 0xD000000000000044, 0x8000000100E301A0, (void (*)(_QWORD))sub_100188D1C);
}

uint64_t sub_1001A7504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[5];
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_OWORD *)(v2 + 48);
  v6[2] = *(_OWORD *)(v2 + 32);
  v6[3] = v3;
  v6[4] = *(_OWORD *)(v2 + 64);
  v7 = *(_QWORD *)(v2 + 80);
  v4 = *(_OWORD *)(v2 + 16);
  v6[0] = *(_OWORD *)v2;
  v6[1] = v4;
  return sub_1001935B0(a1, (uint64_t)v6);
}

Class sub_1001A7548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100191ACC(a1, a2, v2);
}

double sub_1001A7550(uint64_t a1)
{
  uint64_t v1;

  return sub_100192940(a1, v1, (void (*)(_OWORD *, __n128))sub_100181354);
}

id sub_1001A7570@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A790C(a1, (uint64_t)&unk_1010B4100, (uint64_t)sub_1001A7598, a2);
}

double sub_1001A759C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, &qword_1011A3A20, 0xD000000000000032, 0x8000000100E30230, (void (*)(_QWORD))sub_100188858);
}

uint64_t sub_1001A75DC(uint64_t a1)
{
  uint64_t v1;

  return sub_100193734(a1, *(_QWORD *)(v1 + 16), &qword_1011A03B0, &qword_1011CF3B0, _s10TVEpisodesVMa, (uint64_t)&unk_100EC8028);
}

uint64_t sub_1001A7614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001921E8(a1, a2, v2, _s10TVEpisodesVMa, (uint64_t)&unk_1010B4128, (uint64_t)sub_1001A764C, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10017E074);
}

double sub_1001A764C(uint64_t a1)
{
  uint64_t v1;

  return sub_100192328(a1, v1);
}

id sub_1001A7654@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  result = sub_10017FC94(*a1, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1001A768C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = (int *)_s10TVEpisodesVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v7 = v0 + v4 + v1[5];
  v8 = _s10TVEpisodesV5ScopeOMa(0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
    v9 = type metadata accessor for TVSeason(0);
  else
    v9 = type metadata accessor for TVShow(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  v10 = (v5 + v4 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[11]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[14]));
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v3 | 7);
}

double sub_1001A77A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(_s10TVEpisodesVMa(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100180E54(a1, v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)), *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64) + 1), *(void (**)(uint64_t))(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 9) & 0xFFFFFFFFFFFFFFF8)));
}

double sub_1001A7804(uint64_t a1)
{
  uint64_t v1;

  return sub_10018D4BC(a1, v1);
}

double sub_1001A780C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011A3A90, 0xD000000000000034, 0x8000000100E302B0, (void (*)(_QWORD))sub_10018AEAC);
}

uint64_t sub_1001A784C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6580(a1, *(_QWORD *)(v1 + 16), (uint64_t *)&unk_1011A3A60, (uint64_t (*)(uint64_t))sub_1001A787C, (uint64_t)&_s7TVShowsVN);
}

unint64_t sub_1001A787C()
{
  unint64_t result;

  result = qword_1011A3A88;
  if (!qword_1011A3A88)
  {
    result = swift_getWitnessTable(&unk_100EC1F34, &_s7TVShowsVN);
    atomic_store(result, (unint64_t *)&qword_1011A3A88);
  }
  return result;
}

Class sub_1001A78C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100191FE8(a1, a2, v2);
}

double sub_1001A78C8(uint64_t a1)
{
  uint64_t v1;

  return sub_100192940(a1, v1, (void (*)(_OWORD *, __n128))sub_100182AD4);
}

id sub_1001A78E8@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A790C(a1, (uint64_t)&unk_1010B4240, (uint64_t)sub_1001A7598, a2);
}

id sub_1001A790C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  id result;
  _OWORD v15[5];
  uint64_t v16;

  v9 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(v4 + 32);
  v10 = *(_QWORD *)(v4 + 40);
  v11 = *(_BYTE *)(v4 + 16);
  v12 = *(_OWORD *)(v9 + 48);
  v15[2] = *(_OWORD *)(v9 + 32);
  v15[3] = v12;
  v15[4] = *(_OWORD *)(v9 + 64);
  v16 = *(_QWORD *)(v9 + 80);
  v13 = *(_OWORD *)(v9 + 16);
  v15[0] = *(_OWORD *)v9;
  v15[1] = v13;
  result = sub_100180570(*a1, v11, (uint64_t)v15, v8, v10, a2, a3);
  if (!v5)
    *a4 = result;
  return result;
}

double sub_1001A797C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6504(a1, v1 + 16, *(_BYTE *)(v1 + 104), *(_BYTE *)(v1 + 105), *(void (**)(uint64_t))(v1 + 112));
}

double sub_1001A79A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011A3AE0, 0xD000000000000038, 0x8000000100E30330, (void (*)(_QWORD))sub_10018A9E4);
}

void sub_1001A79E0(uint64_t a1)
{
  uint64_t v1;

  sub_1001A6414(a1, *(__int128 **)(v1 + 16));
}

Class sub_1001A79E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100191EF4(a1, a2, v2);
}

double sub_1001A79F0(uint64_t a1)
{
  uint64_t v1;

  return sub_100192E38(a1, v1);
}

id sub_1001A79F8@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id result;
  _OWORD v13[6];

  v6 = *(_OWORD **)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_BYTE *)(v2 + 16);
  v9 = v6[3];
  v13[2] = v6[2];
  v13[3] = v9;
  v10 = v6[5];
  v13[4] = v6[4];
  v13[5] = v10;
  v11 = v6[1];
  v13[0] = *v6;
  v13[1] = v11;
  result = sub_1001802A0(*a1, v8, (uint64_t)v13, v5, v7);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1001A7A54()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[12]);
  swift_bridgeObjectRelease(v0[13]);
  swift_release(v0[16]);
  return swift_deallocObject(v0, 136, 7);
}

double sub_1001A7AA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6398(a1, v1 + 16, *(_BYTE *)(v1 + 112), *(_BYTE *)(v1 + 113), *(void (**)(uint64_t))(v1 + 120));
}

uint64_t sub_1001A7ABC(uint64_t result)
{
  if (result < 0)
    return swift_release(result & 0x7FFFFFFFFFFFFFFFLL);
  return result;
}

_QWORD *sub_1001A7ACC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[4];
  swift_retain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *sub_1001A7B10(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[3];
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  return a1;
}

double sub_1001A7B54(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, &qword_1011A3B48, 0xD000000000000034, 0x8000000100E303B0, (void (*)(_QWORD))sub_1001896B8);
}

uint64_t sub_1001A7B94(uint64_t a1)
{
  return sub_1001A62D0(a1);
}

unint64_t sub_1001A7B9C()
{
  unint64_t result;

  result = qword_1011A3B40;
  if (!qword_1011A3B40)
  {
    result = swift_getWitnessTable(&unk_100EB34F4, &_s7ArtistsVN);
    atomic_store(result, (unint64_t *)&qword_1011A3B40);
  }
  return result;
}

Class sub_1001A7BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100191BE0(a1, a2, v2);
}

double sub_1001A7BE8(uint64_t a1)
{
  uint64_t v1;

  return sub_100192714(a1, v1);
}

uint64_t sub_1001A7BF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1001A7C14@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  id result;
  __int128 v11;
  _OWORD v12[2];

  v6 = *(__int128 **)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_BYTE *)(v2 + 16);
  v9 = v6[1];
  v11 = *v6;
  v12[0] = v9;
  *(_OWORD *)((char *)v12 + 12) = *(__int128 *)((char *)v6 + 28);
  result = sub_10017FFD8(*a1, v8, (uint64_t)&v11, v5, v7);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1001A7C68()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

double sub_1001A7CA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6254(a1, v1 + 16, *(_BYTE *)(v1 + 60), *(_BYTE *)(v1 + 61), *(void (**)(uint64_t))(v1 + 64));
}

double sub_1001A7CB8(uint64_t a1)
{
  uint64_t v1;

  return sub_10018DE64(a1, v1);
}

double sub_1001A7CC0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011ACDF0, 0xD000000000000036, 0x8000000100E30450, (void (*)(_QWORD))sub_100189B80);
}

uint64_t sub_1001A7D00(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6580(a1, *(_QWORD *)(v1 + 16), &qword_1011A3B78, (uint64_t (*)(uint64_t))sub_1001A7D30, (uint64_t)&_s9ComposersVN);
}

unint64_t sub_1001A7D30()
{
  unint64_t result;

  result = qword_1011A3BA0;
  if (!qword_1011A3BA0)
  {
    result = swift_getWitnessTable(&unk_100EC09F8, &_s9ComposersVN);
    atomic_store(result, (unint64_t *)&qword_1011A3BA0);
  }
  return result;
}

Class sub_1001A7D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100191CCC(a1, a2, v2);
}

double sub_1001A7D7C(uint64_t a1)
{
  uint64_t v1;

  return sub_100192940(a1, v1, (void (*)(_OWORD *, __n128))sub_100181DAC);
}

id sub_1001A7D9C@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A790C(a1, (uint64_t)&unk_1010B4420, (uint64_t)sub_1001A7598, a2);
}

double sub_1001A7DC4(uint64_t a1)
{
  uint64_t v1;

  return sub_10018E35C(a1, v1, (void (*)(__int128 *, __n128))sub_100181DAC);
}

_QWORD *sub_1001A7DE4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[6];
  v5 = a1[9];
  v6 = a1[10];
  swift_retain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t *sub_1001A7E50(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[9];
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  return a1;
}

double sub_1001A7EBC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, &qword_1011AE8B0, 0xD000000000000033, 0x8000000100E304D0, (void (*)(_QWORD))sub_10018A048);
}

uint64_t sub_1001A7EFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6580(a1, *(_QWORD *)(v1 + 16), &qword_1011A3BD0, (uint64_t (*)(uint64_t))sub_1001A7F2C, (uint64_t)&_s6GenresVN);
}

unint64_t sub_1001A7F2C()
{
  unint64_t result;

  result = qword_1011A3BF0;
  if (!qword_1011A3BF0)
  {
    result = swift_getWitnessTable(&unk_100EC88E4, &_s6GenresVN);
    atomic_store(result, (unint64_t *)&qword_1011A3BF0);
  }
  return result;
}

Class sub_1001A7F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100191DE0(a1, a2, v2);
}

double sub_1001A7F78(uint64_t a1)
{
  uint64_t v1;

  return sub_100192940(a1, v1, (void (*)(_OWORD *, __n128))sub_1001820E4);
}

id sub_1001A7F98@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A790C(a1, (uint64_t)&unk_1010B44C0, (uint64_t)sub_1001A7598, a2);
}

uint64_t sub_1001A7FC0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[12]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

double sub_1001A8014(uint64_t a1)
{
  uint64_t v1;

  return sub_10018E35C(a1, v1, (void (*)(__int128 *, __n128))sub_1001820E4);
}

double sub_1001A8034(uint64_t a1)
{
  uint64_t v1;

  return sub_10018EDF8(a1, v1);
}

double sub_1001A803C(uint64_t a1)
{
  uint64_t v1;

  return sub_10018E35C(a1, v1, (void (*)(__int128 *, __n128))sub_100182AD4);
}

uint64_t sub_1001A805C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001921E8(a1, a2, v2, _s9PlaylistsVMa, (uint64_t)&unk_1010B44E8, (uint64_t)sub_1001A8094, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10017EA1C);
}

double sub_1001A8094(uint64_t a1)
{
  uint64_t v1;

  return sub_100192B2C(a1, v1);
}

id sub_1001A809C@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1001A72E0(a1, _s9PlaylistsVMa, (uint64_t)&unk_1010B4560, (uint64_t)sub_1001A81CC, a2);
}

uint64_t sub_1001A80C8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = (int *)_s9PlaylistsVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4));
  v7 = (_QWORD *)(v0 + v4 + v1[6]);
  swift_bridgeObjectRelease(*v7);
  v8 = (char *)v7 + *(int *)(_s9PlaylistsV5ScopeVMa(0) + 20);
  v9 = type metadata accessor for Playlist.Folder(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  v11 = (v5 + v4 + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[8]));
  swift_release(*(_QWORD *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v3 | 7);
}

double sub_1001A81CC(uint64_t a1)
{
  return sub_1001A7438(a1, _s9PlaylistsVMa);
}

uint64_t sub_1001A81D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

double sub_1001A821C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011A3C50, 0xD000000000000032, 0x8000000100E30550, (void (*)(_QWORD))sub_10018A510);
}

uint64_t sub_1001A825C(uint64_t a1)
{
  uint64_t v1;

  return sub_100193734(a1, *(_QWORD *)(v1 + 16), (uint64_t *)&unk_1011A3C20, &qword_1011A3C48, _s9PlaylistsVMa, (uint64_t)&unk_100EAB5F0);
}

double sub_1001A8294(uint64_t a1)
{
  uint64_t v1;

  return sub_10018E804(a1, v1);
}

_QWORD *sub_1001A829C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[7];
  swift_retain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *sub_1001A82EC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[3];
  v4 = a1[4];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_release(v2);
  return a1;
}

double sub_1001A833C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001937BC(a1, v1, (uint64_t *)&unk_1011A3CA0, 0xD000000000000032, 0x8000000100E305D0, (void (*)(_QWORD))sub_10018B374);
}

uint64_t sub_1001A837C(uint64_t a1)
{
  return sub_1001A6670(a1);
}

unint64_t sub_1001A8384()
{
  unint64_t result;

  result = qword_1011CF3C0;
  if (!qword_1011CF3C0)
  {
    result = swift_getWitnessTable(&unk_100ED500C, &_s5SongsVN);
    atomic_store(result, (unint64_t *)&qword_1011CF3C0);
  }
  return result;
}

uint64_t sub_1001A83C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100007E8C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

Class sub_1001A840C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001920FC(a1, a2, v2);
}

double sub_1001A8414(uint64_t a1)
{
  uint64_t v1;

  return sub_100193020(a1, v1);
}

id sub_1001A841C@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  id result;
  _OWORD v12[4];

  v6 = *(_OWORD **)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(_BYTE *)(v2 + 16);
  v9 = v6[1];
  v12[0] = *v6;
  v12[1] = v9;
  v10 = v6[3];
  v12[2] = v6[2];
  v12[3] = v10;
  result = sub_100180848(*a1, v8, (uint64_t)v12, v5, v7);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1001A8470()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

double sub_1001A84B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A6254(a1, v1 + 16, *(_BYTE *)(v1 + 80), *(_BYTE *)(v1 + 81), *(void (**)(uint64_t))(v1 + 88));
}

double sub_1001A84C8(uint64_t a1)
{
  uint64_t v1;

  return sub_10018F2A0(a1, v1);
}

double sub_1001A84D0(uint64_t a1)
{
  uint64_t v1;

  return sub_10018E35C(a1, v1, (void (*)(__int128 *, __n128))sub_100181354);
}

uint64_t sub_1001A84F0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Tooltip.Presentation(a2, a1);
  return a2;
}

uint64_t sub_1001A852C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for Tooltip.Presentation(a2, a1);
  return a2;
}

_QWORD *sub_1001A8568(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[8];
  v3 = a1[10];
  v4 = a1[12];
  swift_bridgeObjectRetain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *sub_1001A85BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[10];
  swift_release(a1[12]);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001A8610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;
  __n128 v15;
  BOOL v16;
  _BYTE v18[24];
  _BYTE v19[24];

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011A3890);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
      + *(_QWORD *)(**(_QWORD **)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
                  + 112);
  v11 = swift_beginAccess(v10, v19, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v10, 1, v6, v11))
  {
    v12 = 0;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
    v13 = MusicLibrarySectionedResponse.isEmpty.getter();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    v12 = !v13;
  }
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController)
      + *(_QWORD *)(**(_QWORD **)(v1
                                + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController)
                  + 112);
  v15 = swift_beginAccess(v14, v18, 0, 0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 48))(v14, 1, v2, v15))
    return 1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  v16 = MusicLibrarySectionedResponse.isEmpty.getter();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  if (!v12 || v16)
    return 1;
  else
    return 2;
}

uint64_t sub_1001A87D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  char *v20;
  uint64_t v22;
  char *v23;
  char *v24;
  _BYTE v25[24];

  v3 = sub_100007E8C(&qword_1011A3890);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v23 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = sub_10016F3BC(a1, (uint64_t)v11);
  sub_10004FF60((uint64_t)v11, &qword_1011A3D88);
  v14 = 0;
  if (v13 != 2)
  {
    if ((v13 & 1) != 0)
    {
      v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController)
          + *(_QWORD *)(**(_QWORD **)(v1
                                    + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController)
                      + 112);
      v19 = swift_beginAccess(v18, v25, 0, 0);
      v14 = 0;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v18, 1, v3, v19))
      {
        v20 = v24;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v24, v18, v3);
        v14 = MusicLibrarySectionedResponse.totalItemCount.getter(v3);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v20, v3);
      }
    }
    else
    {
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
          + *(_QWORD *)(**(_QWORD **)(v1
                                    + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController)
                      + 112);
      v16 = swift_beginAccess(v15, v25, 0, 0);
      v14 = 0;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v15, 1, v6, v16))
      {
        v17 = v23;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v23, v15, v6);
        v14 = MusicLibrarySectionedResponse.totalItemCount.getter(v6);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
      }
    }
  }
  return v14;
}

unint64_t sub_1001A8A24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, __n128);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  double (*v69)(char *, unint64_t, uint64_t);
  __n128 v70;
  uint64_t v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char *v79;
  id v80;
  unint64_t result;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  double (*v88)(char *, unint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  void **v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  __n128 v99;
  char *v100;
  char *v101;
  int *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t *v106;
  char v107;
  __int128 v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t *v115;
  uint64_t *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  char *v132;
  __n128 v133;
  char *v134;
  char *v135;
  int *v136;
  char *v137;
  uint64_t v138;
  uint64_t *v139;
  unsigned __int8 v140;
  __n128 v141;
  __n128 *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int *v151;
  uint64_t *v152;
  uint64_t *v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  Class isa;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  void *v176;
  uint64_t v177;
  id v178;
  void *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (*v184)(char *, char *, uint64_t);
  void (*v185)(char *, char *, uint64_t);
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  void **aBlock;
  uint64_t v219;
  void *v220;
  void *v221;
  void *v222;
  uint64_t v223;
  __int128 v224;
  char v225[8];
  char v226[8];
  uint64_t v227;
  uint64_t v228;
  void *v229;

  v2 = _s11MusicVideosVMa(0);
  __chkstk_darwin(v2);
  v201 = (uint64_t)&v181 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011CF3D0);
  __chkstk_darwin(v4);
  v193 = (char *)&v181 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_100007E8C(&qword_1011ADFC0);
  v191 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v7 = (char *)&v181 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_100007E8C(&qword_1011A3890);
  v214 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v203 = (char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for MusicVideo(0);
  v206 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin(v207);
  v195 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v200 = (char *)&v181 - v11;
  v12 = _s6AlbumsVMa(0);
  __chkstk_darwin(v12);
  v197 = (uint64_t)&v181 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C((uint64_t *)&unk_1011A3D60);
  __chkstk_darwin(v14);
  v199 = (uint64_t)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v198 = (uint64_t)&v181 - v17;
  v18 = sub_100007E8C(&qword_1011A3D80);
  __chkstk_darwin(v18);
  v20 = (char *)&v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011ADFD0);
  v190 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v181 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_100007E8C(&qword_1011A3910);
  v212 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v202 = (char *)&v181 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for Album(0);
  v204 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v194 = (char *)&v181 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v196 = (char *)&v181 - v27;
  v28 = sub_100007E8C(&qword_1011A3D88);
  __chkstk_darwin(v28);
  v30 = (char *)&v181 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for ContextualPreview.Data(0);
  v208 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v210 = (uint64_t)&v181 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v181 - v33;
  v35 = sub_100007E8C((uint64_t *)&unk_1011A3D50);
  __chkstk_darwin(v35);
  v37 = (char *)&v181 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for IndexPath(0);
  v39 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v41 = (char *)&v181 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v42);
  v217 = (char *)&v181 - v46;
  if (!*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 56))(v37, 1, 1, v45);
    goto LABEL_6;
  }
  v188 = v44;
  v189 = v34;
  v187 = *(unsigned __int8 *)(v39 + 80);
  v47 = a1 + ((v187 + 32) & ~v187);
  v48 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16);
  v49 = v43;
  v48(v37, v47, v43, v45);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v37, 0, 1, v49);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v49) == 1)
  {
LABEL_6:
    sub_10004FF60((uint64_t)v37, (uint64_t *)&unk_1011A3D50);
    return 0;
  }
  v185 = (void (*)(char *, char *, uint64_t))v48;
  v186 = v41;
  v50 = v217;
  v184 = *(uint64_t (**)(char *, char *, uint64_t))(v39 + 32);
  v51 = v184(v217, v37, v49);
  v52 = IndexPath.section.getter(v51);
  v53 = type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v30, 1, 1, v53);
  v54 = sub_10016F3BC(v52, (uint64_t)v30);
  sub_10004FF60((uint64_t)v30, &qword_1011A3D88);
  if (v54 == 2)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v50, v49);
    return 0;
  }
  v182 = v39;
  v183 = v49;
  if ((v54 & 1) == 0)
  {
    v55 = v216;
    v56 = *(_QWORD *)(v216 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_albumsResponseController);
    v57 = v56 + *(_QWORD *)(*(_QWORD *)v56 + 112);
    v58 = swift_beginAccess(v57, v226, 0, 0);
    v59 = v212;
    v60 = v213;
    v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v212 + 48))(v57, 1, v213, v58);
    v62 = v189;
    if (!v61)
    {
      v63 = v202;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v202, v57, v60);
      v64 = MusicLibrarySectionedResponse.sections.getter(v60);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v60);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v65 = *(_QWORD *)(v64 + 16);
      if (v65)
      {
        v215 = v56;
        v66 = v190;
        v67 = v64 + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80));
        v68 = *(_QWORD *)(v190 + 72);
        v69 = *(double (**)(char *, unint64_t, uint64_t))(v190 + 16);
        swift_bridgeObjectRetain();
        do
        {
          v70.n128_f64[0] = v69(v23, v67, v21);
          MusicLibrarySection.items.getter(v21, v70);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v21);
          sub_1008057C4((uint64_t)v20);
          v67 += v68;
          --v65;
        }
        while (v65);
        swift_bridgeObjectRelease_n(v64, 2);
        v72 = aBlock;
        v55 = v216;
        v62 = v189;
        v56 = v215;
      }
      else
      {
        swift_bridgeObjectRelease(v64);
        v72 = (void **)_swiftEmptyArrayStorage;
      }
      v94 = v217;
      result = IndexPath.item.getter(v71);
      v95 = v205;
      v96 = v204;
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < (unint64_t)v72[2])
      {
        v97 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
        v98 = v194;
        v97(v194, (char *)v72+ ((*(unsigned __int8 *)(v204 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 80))+ *(_QWORD *)(v204 + 72) * result, v205);
        v99 = swift_bridgeObjectRelease(v72);
        v100 = v196;
        (*(void (**)(char *, char *, uint64_t, __n128))(v96 + 32))(v196, v98, v95, v99);
        v228 = v95;
        v229 = &protocol witness table for Album;
        v101 = (char *)sub_100049F68(&v227);
        v97(v101, v100, v95);
        ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v95, (uint64_t)&protocol witness table for Album, v62);
        v102 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
        v103 = &v62[v102[5]];
        v104 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
        v105 = v62;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v103, 1, 10, v104);
        v106 = Corner.large.unsafeMutableAddressor();
        v107 = *((_BYTE *)v106 + 16);
        v108 = *(_OWORD *)v106;
        *(_QWORD *)&v62[v102[6]] = 0x3FF0000000000000;
        v109 = &v62[v102[7]];
        *(_OWORD *)v109 = v108;
        v109[16] = v107;
        v110 = Album.title.getter(v106);
        v112 = v111;
        v113 = Album.artistName.getter(v110);
        v114 = (int *)v211;
        v115 = (uint64_t *)&v62[*(int *)(v211 + 20)];
        *v115 = v110;
        v115[1] = v112;
        v116 = (uint64_t *)&v62[v114[6]];
        *v116 = v113;
        v116[1] = v117;
        v118 = &v62[v114[7]];
        *(_QWORD *)v118 = 0;
        *((_QWORD *)v118 + 1) = 0;
        v62[v114[8]] = 1;
        v119 = v100;
        v105[v114[9]] = 0;
        v120 = v56 + *(_QWORD *)(*(_QWORD *)v56 + 96);
        swift_beginAccess(v120, v225, 0, 0);
        v121 = v197;
        sub_10005B704(v120, v197, _s6AlbumsVMa);
        v122 = v198;
        sub_1002339A0(v198);
        sub_10005B748(v121, _s6AlbumsVMa);
        v123 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
        v124 = *(_QWORD *)(v123 - 8);
        v125 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123);
        if ((_DWORD)v125 == 1)
        {
          (*(void (**)(char *, uint64_t))(v96 + 8))(v119, v95);
          sub_10004FF60(v122, (uint64_t *)&unk_1011A3D60);
          v126 = 0;
        }
        else
        {
          v127 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v125);
          v128 = v119;
          v126 = (void *)v127;
          (*(void (**)(char *, uint64_t))(v96 + 8))(v128, v95);
          (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v122, v123);
        }
LABEL_34:
        v164 = v187;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v166 = v210;
        sub_10005B704((uint64_t)v189, v210, type metadata accessor for ContextualPreview.Data);
        v167 = *(unsigned __int8 *)(v208 + 80);
        v168 = (v167 + 16) & ~v167;
        v169 = swift_allocObject(&unk_1010B4718, v168 + v209, v167 | 7);
        sub_10005B6C0(v166, v169 + v168, type metadata accessor for ContextualPreview.Data);
        v170 = swift_allocObject(&unk_1010B4628, 24, 7);
        swift_unknownObjectWeakInit(v170 + 16, v55);
        sub_100064C78((uint64_t)&v227, (uint64_t)&v224);
        v171 = v186;
        v172 = v183;
        v185(v186, v94, v183);
        v173 = (v164 + 72) & ~v164;
        v174 = swift_allocObject(&unk_1010B4740, v173 + v188, v164 | 7);
        *(_QWORD *)(v174 + 16) = v170;
        sub_100064C48(&v224, v174 + 24);
        *(_QWORD *)(v174 + 64) = v126;
        v184((char *)(v174 + v173), v171, v172);
        v175 = (void *)objc_opt_self(UIContextMenuConfiguration);
        v222 = sub_1001AA348;
        v223 = v169;
        aBlock = _NSConcreteStackBlock;
        v219 = 1107296256;
        v220 = sub_1000FA900;
        v221 = &unk_1010B4758;
        v176 = _Block_copy(&aBlock);
        v177 = v223;
        v178 = v126;
        swift_retain(v169);
        swift_retain(v170);
        swift_release(v177);
        v222 = sub_1001AA3F8;
        v223 = v174;
        aBlock = _NSConcreteStackBlock;
        v219 = 1107296256;
        v220 = sub_100968BE4;
        v221 = &unk_1010B4780;
        v179 = _Block_copy(&aBlock);
        v180 = v223;
        swift_retain(v174);
        v80 = objc_msgSend(v175, "configurationWithIdentifier:previewProvider:actionProvider:", isa, v176, v179, swift_release(v180).n128_f64[0]);
        swift_release(v174);
        swift_release(v169);

        _Block_release(v179);
        _Block_release(v176);

        sub_10005B748((uint64_t)v189, type metadata accessor for ContextualPreview.Data);
        _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v227);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v217, v172);
        swift_release(v170);
        return (unint64_t)v80;
      }
      __break(1u);
      goto LABEL_37;
    }
LABEL_14:
    (*(void (**)(char *, uint64_t))(v182 + 8))(v217, v183);
    return 0;
  }
  v73 = *(_QWORD *)(v216 + OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_musicVideosResponseController);
  v74 = v73 + *(_QWORD *)(*(_QWORD *)v73 + 112);
  v75 = swift_beginAccess(v74, v226, 0, 0);
  v76 = v214;
  v77 = v215;
  v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v214 + 48))(v74, 1, v215, v75);
  v79 = v189;
  if (v78)
    goto LABEL_14;
  v82 = v203;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v203, v74, v77);
  v83 = MusicLibrarySectionedResponse.sections.getter(v77);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v82, v77);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v84 = *(_QWORD *)(v83 + 16);
  if (v84)
  {
    v215 = v73;
    v85 = v191;
    v86 = v83 + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80));
    v87 = *(_QWORD *)(v191 + 72);
    v88 = *(double (**)(char *, unint64_t, uint64_t))(v191 + 16);
    swift_bridgeObjectRetain();
    v89 = (uint64_t)v193;
    v90 = v192;
    do
    {
      v91.n128_f64[0] = v88(v7, v86, v90);
      MusicLibrarySection.items.getter(v90, v91);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v7, v90);
      sub_1008050D0(v89);
      v86 += v87;
      --v84;
    }
    while (v84);
    swift_bridgeObjectRelease_n(v83, 2);
    v93 = aBlock;
    v79 = v189;
    v73 = v215;
  }
  else
  {
    swift_bridgeObjectRelease(v83);
    v93 = (void **)_swiftEmptyArrayStorage;
  }
  v129 = v207;
  result = IndexPath.item.getter(v92);
  v130 = v206;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v55 = v216;
  if (result < (unint64_t)v93[2])
  {
    v131 = *(void (**)(char *, char *, uint64_t))(v206 + 16);
    v132 = v195;
    v131(v195, (char *)v93+ ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))+ *(_QWORD *)(v206 + 72) * result, v129);
    v133 = swift_bridgeObjectRelease(v93);
    v134 = v200;
    (*(void (**)(char *, char *, uint64_t, __n128))(v130 + 32))(v200, v132, v129, v133);
    v228 = v129;
    v229 = &protocol witness table for MusicVideo;
    v135 = (char *)sub_100049F68(&v227);
    v131(v135, v134, v129);
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v129, (uint64_t)&protocol witness table for MusicVideo, v79);
    v136 = (int *)type metadata accessor for ContextualPreview.Artwork(0);
    v137 = &v79[v136[5]];
    v138 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v137, 4, 10, v138);
    v139 = Corner.large.unsafeMutableAddressor();
    v140 = *((_BYTE *)v139 + 16);
    v141 = *(__n128 *)v139;
    *(_QWORD *)&v79[v136[6]] = 0x3FFC71C71C71C71CLL;
    v142 = (__n128 *)&v79[v136[7]];
    *v142 = v141;
    v142[1].n128_u8[0] = v140;
    v143 = MusicVideo.title.getter(v141);
    v145 = v144;
    v146 = v79;
    v147 = MusicVideo.artistName.getter(v143);
    v149 = v148;
    v150 = MusicVideo.albumTitle.getter(v147);
    v151 = (int *)v211;
    v152 = (uint64_t *)&v146[*(int *)(v211 + 20)];
    *v152 = v143;
    v152[1] = v145;
    v153 = (uint64_t *)&v146[v151[6]];
    *v153 = v147;
    v153[1] = v149;
    v154 = (uint64_t *)&v146[v151[7]];
    *v154 = v150;
    v154[1] = v155;
    v146[v151[8]] = 1;
    v146[v151[9]] = 0;
    v156 = v73 + *(_QWORD *)(*(_QWORD *)v73 + 96);
    v157 = v134;
    swift_beginAccess(v156, v225, 0, 0);
    v158 = v201;
    sub_10005B704(v156, v201, _s11MusicVideosVMa);
    v159 = v129;
    v160 = v199;
    sub_10075DC18(v199);
    sub_10005B748(v158, _s11MusicVideosVMa);
    v161 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    v162 = *(_QWORD *)(v161 - 8);
    v163 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161);
    if ((_DWORD)v163 == 1)
    {
      (*(void (**)(char *, uint64_t))(v130 + 8))(v157, v159);
      sub_10004FF60(v160, (uint64_t *)&unk_1011A3D60);
      v126 = 0;
    }
    else
    {
      v126 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v163);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v157, v159);
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v160, v161);
    }
    v94 = v217;
    goto LABEL_34;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1001A9B04()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double MidY;
  id v26;
  void *v27;
  double v28;
  double v29;
  NSString v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36[24];
  CGRect v37;

  v1 = v0;
  v2 = type metadata accessor for Artist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v36[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(void **)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistHeader];
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v7, "frame");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = objc_msgSend(v1, "view");
    objc_msgSend(v7, "convertRect:toView:", v16, v9, v11, v13, v15);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v24 = v23;

    v37.origin.x = v18;
    v37.origin.y = v20;
    v37.size.width = v22;
    v37.size.height = v24;
    MidY = CGRectGetMidY(v37);
    v26 = objc_msgSend(v1, "view");
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "safeAreaInsets");
      v29 = v28;

      if (MidY <= v29)
      {
        v31 = &v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist];
        swift_beginAccess(&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artist], v36, 0, 0);
        v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v5, v31, v2);
        Artist.name.getter(v32);
        v34 = v33;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v34);
      }
      else
      {
        v30 = 0;
      }
      objc_msgSend(v1, "setTitle:", v30);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001A9CF0()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  void (*v4)(char *, uint64_t, uint64_t, uint64_t);
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___globalHeaderRegistration];
  v3 = sub_100007E8C(&qword_1011A37B0);
  v4 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v4(&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___headerRegistration], 1, 1, v3);
  v5 = &v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumGridCellRegistration];
  v6 = sub_100007E8C(&qword_1011A37C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___albumListCellRegistration];
  v8 = sub_100007E8C((uint64_t *)&unk_1011A37D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoGridCellRegistration];
  v10 = sub_100007E8C((uint64_t *)&unk_1011A37E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___musicVideoListCellRegistration];
  v12 = sub_100007E8C((uint64_t *)&unk_1011A37F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponse] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistResponseSubscription] = 0;
  v13 = OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_prefetchingController;
  v14 = objc_allocWithZone((Class)type metadata accessor for ArtworkPrefetchingController());
  *(_QWORD *)&v1[v13] = sub_1001EA3C8(0xD000000000000023, 0x8000000100E2FEC0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_artistHeader] = 0;
  v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_hasContent] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_dragDropController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___searchController] = 0;
  v15 = &v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___actionMetricsReportingContext];
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController_sortBinding] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Music33LibraryArtistDetailViewController____lazy_storage___favoriteButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "Music/LibraryArtistDetailViewController.swift", 45, 2, 847, 0);
  __break(1u);
}

uint64_t sub_1001A9F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1001A9F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001A9FF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_10017CD28(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t type metadata accessor for LibraryArtistDetailViewController.PrefetchingContext(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A4070, (uint64_t)&nominal type descriptor for LibraryArtistDetailViewController.PrefetchingContext);
}

uint64_t sub_1001AA03C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + v6);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_1011AE794);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10006AEE4;
  return sub_100364E18(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_1001AA100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

id sub_1001AA174()
{
  type metadata accessor for IndexPath(0);
  return sub_100611650();
}

uint64_t sub_1001AA1B4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for ContextualPreview.Data(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v0 + v4, 1, v7))
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
    v9 = v6 + *(int *)(v7 + 20);
    v10 = type metadata accessor for Artwork.CropStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  v12 = v6 + *(int *)(type metadata accessor for ContextualPreview.Artwork(0) + 20);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 10, v13))
  {
    v14 = type metadata accessor for Playlist.Variant(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[7] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1001AA348()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContextualPreview.Data(0) - 8) + 80);
  sub_10017C50C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1001AA374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_1001AA3F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  return sub_10017C590(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(void **)(v1 + 64), v1 + ((v3 + 72) & ~v3));
}

uint64_t sub_1001AA440()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1001AA450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100621374(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

uint64_t sub_1001AA45C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

void sub_1001AA46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100176998(a1, a2, a3, v3, (uint64_t)sub_1001AA48C);
}

uint64_t sub_1001AA48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100175DA4(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1001AA49C()
{
  unint64_t result;

  result = qword_1011A3E30;
  if (!qword_1011A3E30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1011A3E30);
  }
  return result;
}

uint64_t sub_1001AA4E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001AA504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100176354(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1001AA50C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10017657C(*(_QWORD *)(v1 + 24), a1);
}

void sub_1001AA518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100176998(a1, a2, a3, v3, (uint64_t)sub_1001AA538);
}

uint64_t sub_1001AA538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100176B44(*(_QWORD *)(v1 + 24), a1);
}

void sub_1001AA540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100177164(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_1001AA548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001773EC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1001AA55C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100173D04(a1, a2, a3, a4, v4);
}

uint64_t sub_1001AA564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100173E84(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1001AA56C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A3EF0;
  if (!qword_1011A3EF0)
  {
    v1 = sub_100044B54(&qword_1011A3EE8);
    sub_100049F28(&qword_1011A3EF8, &qword_1011A3F00, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A3EF0);
  }
  return result;
}

uint64_t sub_1001AA5F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  if (a12 != 255)
    return sub_1001AA61C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
  return result;
}

uint64_t sub_1001AA61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if ((a12 & 1) != 0)
  {
    a3 = a9;
    swift_retain(a11);
    a1 = a2;
  }
  swift_bridgeObjectRetain(a1);
  return swift_retain(a3);
}

uint64_t sub_1001AA65C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  if (a12 != 255)
    return sub_1001AA688(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
  return result;
}

uint64_t sub_1001AA688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if ((a12 & 1) != 0)
  {
    a3 = a11;
    swift_release(a9);
    a1 = a2;
  }
  swift_bridgeObjectRelease(a1);
  return swift_release(a3);
}

char *sub_1001AA6C8()
{
  uint64_t v0;

  return sub_10017520C(v0);
}

unint64_t sub_1001AA6D0()
{
  unint64_t result;

  result = qword_1011A3F30;
  if (!qword_1011A3F30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonStack, &type metadata for PlayIntentButtonStack);
    atomic_store(result, (unint64_t *)&qword_1011A3F30);
  }
  return result;
}

unint64_t sub_1001AA714()
{
  unint64_t result;

  result = qword_1011A3F38;
  if (!qword_1011A3F38)
  {
    result = swift_getWitnessTable(&unk_100EC1F64, &type metadata for StartStationView);
    atomic_store(result, (unint64_t *)&qword_1011A3F38);
  }
  return result;
}

uint64_t sub_1001AA758(unsigned __int8 a1)
{
  uint64_t v1;

  return sub_100174F30(a1, v1);
}

uint64_t sub_1001AA764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {

  }
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v10[3])
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);

  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

void sub_1001AA850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100175914(a1, a2, a3, a4, v4);
}

void sub_1001AA858(uint64_t a1)
{
  uint64_t v1;

  sub_100173990(a1, v1);
}

double sub_1001AA860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10016F144(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

unint64_t sub_1001AA868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_10016F81C(a1, a2, v3, a3);
}

Class sub_1001AA870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001701BC(a1, a2, v2);
}

void sub_1001AA878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001712DC(a1, a2, v2);
}

void sub_1001AA880(char a1)
{
  uint64_t v1;

  sub_1001713F8(a1 & 1, v1);
}

void sub_1001AA88C(uint64_t a1)
{
  uint64_t v1;

  sub_1001714A4(a1, v1);
}

void sub_1001AA894(uint64_t a1)
{
  uint64_t v1;

  sub_1001717B8(a1, v1);
}

double sub_1001AA89C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_100171ACC(a1, a2, v2);
}

uint64_t sub_1001AA8A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001AA8D0()
{
  uint64_t v0;

  sub_100171E08(v0);
}

void sub_1001AA8D8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_100172C30(a1, v2, a2);
}

uint64_t sub_1001AA8E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryArtistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_1001AA924(uint64_t a1)
{
  uint64_t v1;

  sub_10017D08C(a1, v1);
}

uint64_t sub_1001AA92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_100007E8C(&qword_1011A3FD8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = v0 + v4;
  v8 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 48) + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 64) + 8));
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001AA9D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100007E8C(&qword_1011A3FD8) - 8) + 80);
  sub_1001791C4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1001AAA08()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001AAA34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011B618C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_1004928EC(a1, v4, v5, v6);
}

void sub_1001AAAA0(uint64_t a1)
{
  uint64_t v1;

  sub_100178538(a1, v1);
}

uint64_t sub_1001AAAA8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001AAAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_1011A3FFC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_1001792CC(a1, v4, v5, v6, v7);
}

double sub_1001AAB50(__int16 a1)
{
  uint64_t v1;

  return sub_1008ABA04(a1 & 0x1FF, v1);
}

uint64_t *sub_1001AAB5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011A3910);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C((uint64_t *)&unk_1011A3900);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_100007E8C(&qword_1011A3890);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100007E8C((uint64_t *)&unk_1011A3880);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_1001AACC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_100007E8C(&qword_1011A3910);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_100007E8C(&qword_1011A3890);
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

char *sub_1001AAD78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3900);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C(&qword_1011A3890);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3880);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *sub_1001AAEB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3900);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_100007E8C(&qword_1011A3890);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3880);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *sub_1001AB080(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3900);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_100007E8C(&qword_1011A3890);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011A3880);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *sub_1001AB1BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = sub_100007E8C(&qword_1011A3910);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100007E8C((uint64_t *)&unk_1011A3900);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_100007E8C(&qword_1011A3890);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = sub_100007E8C((uint64_t *)&unk_1011A3880);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1001AB388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AB394);
}

uint64_t sub_1001AB394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011A3880);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001AB410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AB41C);
}

uint64_t sub_1001AB41C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_100007E8C((uint64_t *)&unk_1011A3900);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100007E8C((uint64_t *)&unk_1011A3880);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001AB4A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1001AB544(319, &qword_1011A4080, &qword_1011A3910);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001AB544(319, (unint64_t *)&unk_1011A4088, &qword_1011A3890);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

void sub_1001AB544(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_100044B54(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1001AB67C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, a2);
      v7 = (uint64_t)sub_1001AF97C(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = sub_1001AF610(result, a2, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1001AF97C);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1001AB8D0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAD068);
  v2 = swift_getKeyPath(&unk_100EAD090);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_1001AB944()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100EAD0B0);
  v2 = swift_getKeyPath(&unk_100EAD0D8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001AB9B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAD0F8);
  v4 = swift_getKeyPath(&unk_100EAD120);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1001ABA18()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EAD140);
  v2 = swift_getKeyPath(&unk_100EAD168);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001ABA88(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  double v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  char v73;

  v70 = a7;
  v71 = *(double *)&a8;
  v68 = a5;
  v69 = a6;
  v67 = a4;
  v65 = a2;
  v66 = *(double *)&a3;
  v64 = a1;
  v11 = sub_100007E8C(&qword_10119F098);
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  __chkstk_darwin(v11);
  v61 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C((uint64_t *)&unk_1011A4320);
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  __chkstk_darwin(v13);
  v58 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100007E8C(&qword_1011A4150);
  v15 = __chkstk_darwin(v57);
  v56 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v54 - v17;
  v19 = sub_100007E8C(&qword_10119F0C0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100007E8C(&qword_1011A4330);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v9 + 16) = 2;
  v27 = v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_releaseDate;
  v55 = v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_releaseDate;
  v28 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__trackCount;
  v72 = 0.0;
  v73 = 1;
  v30 = sub_100007E8C(&qword_10119FA78);
  Published.init(initialValue:)(&v72, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v29, v26, v23);
  v31 = v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__duration;
  v72 = 0.0;
  Published.init(initialValue:)(&v72, &type metadata for Double);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v31, v22, v19);
  v32 = (_QWORD *)(v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_copyright);
  *v32 = 0;
  v32[1] = 0;
  v33 = v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__recordLabels;
  v34 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v18, 1, 1, v34);
  v35 = v56;
  sub_10004A160((uint64_t)v18, v56, &qword_1011A4150);
  v36 = v58;
  Published.init(initialValue:)(v35, v57);
  sub_10004FF60((uint64_t)v18, &qword_1011A4150);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v33, v36, v60);
  v37 = v9 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__recordLabelLinkIdentifierMap;
  v72 = 0.0;
  v38 = sub_100007E8C((uint64_t *)&unk_1011A4160);
  v39 = v61;
  Published.init(initialValue:)(&v72, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v37, v39, v63);
  *(_BYTE *)(v9 + 16) = v64;
  v40 = v55;
  swift_beginAccess(v55, &v72, 33, 0);
  v41 = v65;
  sub_1001AF040(v65, v40);
  swift_endAccess(&v72);
  KeyPath = swift_getKeyPath(&unk_100EAD068);
  v43 = swift_getKeyPath(&unk_100EAD090);
  v72 = v66;
  v73 = v67 & 1;
  swift_retain(v9);
  static Published.subscript.setter(&v72, v9, KeyPath, v43);
  v44 = swift_getKeyPath(&unk_100EAD0B0);
  v45 = swift_getKeyPath(&unk_100EAD0D8);
  v72 = a9;
  swift_retain(v9);
  static Published.subscript.setter(&v72, v9, v44, v45);
  v46 = v32[1];
  v47 = v69;
  *v32 = v68;
  v32[1] = v47;
  swift_bridgeObjectRelease(v46);
  v48 = v70;
  sub_10004A160(v70, (uint64_t)v18, &qword_1011A4150);
  v49 = swift_getKeyPath(&unk_100EAD0F8);
  v50 = swift_getKeyPath(&unk_100EAD120);
  sub_10004A160((uint64_t)v18, v35, &qword_1011A4150);
  swift_retain(v9);
  static Published.subscript.setter(v35, v9, v49, v50);
  sub_10004FF60((uint64_t)v18, &qword_1011A4150);
  v51 = swift_getKeyPath(&unk_100EAD140);
  v52 = swift_getKeyPath(&unk_100EAD168);
  v72 = v71;
  swift_retain(v9);
  static Published.subscript.setter(&v72, v9, v51, v52);
  sub_10004FF60(v48, &qword_1011A4150);
  sub_10004FF60(v41, (uint64_t *)&unk_1011A30A0);
  return v9;
}

uint64_t sub_1001ABF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_10004FF60(v0 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_releaseDate, (uint64_t *)&unk_1011A30A0);
  v1 = v0 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__trackCount;
  v2 = sub_100007E8C(&qword_1011A4330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__duration;
  v4 = sub_100007E8C(&qword_10119F0C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_copyright + 8));
  v5 = v0 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__recordLabels;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A4320);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel__recordLabelLinkIdentifierMap;
  v8 = sub_100007E8C(&qword_10119F098);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001AC084()
{
  return type metadata accessor for TracklistFooter.ViewModel(0);
}

uint64_t type metadata accessor for TracklistFooter.ViewModel(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A4118, (uint64_t)&nominal type descriptor for TracklistFooter.ViewModel);
}

void sub_1001AC0A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[7];

  v12[0] = &unk_100EACF98;
  sub_1001AC1BC(319);
  if (v3 <= 0x3F)
  {
    v12[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000EA54C(319, (unint64_t *)&qword_1011A4130, &qword_10119FA78);
    if (v5 <= 0x3F)
    {
      v12[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001AC210();
      if (v7 <= 0x3F)
      {
        v12[3] = *(_QWORD *)(v6 - 8) + 64;
        v12[4] = &unk_100EACFB0;
        sub_1000EA54C(319, &qword_1011A4148, &qword_1011A4150);
        if (v9 <= 0x3F)
        {
          v12[5] = *(_QWORD *)(v8 - 8) + 64;
          sub_1000EA54C(319, &qword_1011A4158, (uint64_t *)&unk_1011A4160);
          if (v11 <= 0x3F)
          {
            v12[6] = *(_QWORD *)(v10 - 8) + 64;
            swift_updateClassMetadata2(a1, 256, 7, v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_1001AC1BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011A3050)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011A3050);
  }
}

void sub_1001AC210()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011A4140)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Double);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011A4140);
  }
}

uint64_t destroy for TracklistFooter(_QWORD *a1)
{
  uint64_t result;

  result = swift_release(a1[1]);
  if (a1[2])
    return swift_release(a1[3]);
  return result;
}

_QWORD *initializeWithCopy for TracklistFooter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2 + 2;
  v5 = a2[2];
  swift_retain(v4);
  if (v5)
  {
    v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain(v7);
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  return a1;
}

_QWORD *assignWithCopy for TracklistFooter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  if (!a1[2])
  {
    if (v6)
    {
      v9 = a2[3];
      a1[2] = v6;
      a1[3] = v9;
      swift_retain(v9);
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v6)
  {
    swift_release(a1[3]);
    goto LABEL_7;
  }
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

_QWORD *assignWithTake for TracklistFooter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release(v5);
  v6 = a2[2];
  if (!a1[2])
  {
    if (v6)
    {
      v9 = a2[3];
      a1[2] = v6;
      a1[3] = v9;
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v6)
  {
    swift_release(a1[3]);
    goto LABEL_7;
  }
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for TracklistFooter()
{
  return &type metadata for TracklistFooter;
}

uint64_t sub_1001AC43C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9744C, 1);
}

uint64_t sub_1001AC44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for TracklistFooter.ViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1001AC488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v64 = a1;
  v65 = a2;
  v69 = a5;
  v7 = sub_100007E8C(&qword_1011A4338);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011A4340);
  __chkstk_darwin(v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011A4348);
  __chkstk_darwin(v63);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011A4350);
  __chkstk_darwin(v66);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011A4358);
  __chkstk_darwin(v67);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100007E8C(&qword_1011A4360);
  __chkstk_darwin(v68);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static HorizontalAlignment.leading.getter(v21);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v22 = sub_100007E8C(&qword_1011A4368);
  v23 = sub_1001AC8F8(v64, v65, a3, a4, (uint64_t)&v9[*(int *)(v22 + 44)]);
  v24 = static Font.subheadline.getter(v23);
  KeyPath = swift_getKeyPath(&unk_100EAD188);
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_1011A4338);
  v26 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v26 = KeyPath;
  v26[1] = v24;
  v27 = sub_10004FF60((uint64_t)v9, &qword_1011A4338);
  LODWORD(v9) = static HierarchicalShapeStyle.secondary.getter(v27);
  sub_10004A160((uint64_t)v12, (uint64_t)v14, &qword_1011A4340);
  *(_DWORD *)&v14[*(int *)(v63 + 36)] = (_DWORD)v9;
  v28 = sub_10004FF60((uint64_t)v12, &qword_1011A4340);
  v29 = static Edge.Set.top.getter(v28);
  if (qword_10119BA28 != -1)
    swift_once(&qword_10119BA28, sub_1001AEF34);
  v30 = EdgeInsets.init(_all:)(*(double *)&qword_10124C940);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_10004A160((uint64_t)v14, (uint64_t)v16, &qword_1011A4348);
  v37 = &v16[*(int *)(v66 + 36)];
  *v37 = v29;
  *((double *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  v38 = sub_10004FF60((uint64_t)v14, &qword_1011A4348);
  v39 = static Edge.Set.bottom.getter(v38);
  if (qword_10119BA30 != -1)
    swift_once(&qword_10119BA30, sub_1001AEF54);
  v40 = EdgeInsets.init(_all:)(*(double *)&qword_10124C948);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_10004A160((uint64_t)v16, (uint64_t)v18, &qword_1011A4350);
  v47 = &v18[*(int *)(v67 + 36)];
  *v47 = v39;
  *((double *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  v48 = sub_10004FF60((uint64_t)v16, &qword_1011A4350);
  v49 = static Edge.Set.leading.getter(v48);
  if (qword_10119BA38 != -1)
    swift_once(&qword_10119BA38, sub_1001AEF74);
  v50 = EdgeInsets.init(_all:)(*(double *)&qword_10124C950);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  sub_10004A160((uint64_t)v18, (uint64_t)v20, &qword_1011A4358);
  v57 = &v20[*(int *)(v68 + 36)];
  *v57 = v49;
  *((double *)v57 + 1) = v50;
  *((_QWORD *)v57 + 2) = v52;
  *((_QWORD *)v57 + 3) = v54;
  *((_QWORD *)v57 + 4) = v56;
  v57[40] = 0;
  v58 = sub_10004FF60((uint64_t)v18, &qword_1011A4358);
  v59 = static Alignment.leading.getter(v58);
  sub_100149A98(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v69, 0.0, 1, 0.0, 1, v59, v60);
  return sub_10004FF60((uint64_t)v20, &qword_1011A4360);
}

uint64_t sub_1001AC8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  Class isa;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  double v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  void (*v138)(char *, char *, uint64_t);
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  int *v144;
  char *v145;
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  char v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  char v210;
  _BYTE v211[176];
  _QWORD v212[22];
  char v213[24];
  __int128 v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  char v229;
  double v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  unsigned __int8 v236;
  uint64_t v237;
  unsigned __int8 v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD v241[2];
  char v242;
  uint64_t v243;
  char v244;
  uint64_t v245;
  char v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  uint64_t v252;

  v181 = a1;
  v182 = a3;
  v8 = sub_100007E8C((uint64_t *)&unk_1011A4370);
  __chkstk_darwin(v8);
  v186 = (uint64_t)&v165 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v185 = (uint64_t *)((char *)&v165 - v11);
  v173 = sub_100007E8C((uint64_t *)&unk_1011C4EE0);
  __chkstk_darwin(v173);
  v176 = (uint64_t *)((char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100007E8C((uint64_t *)&unk_1011A4380);
  __chkstk_darwin(v13);
  v174 = (char *)&v165 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_100007E8C((uint64_t *)&unk_1011C4EF0);
  __chkstk_darwin(v172);
  v177 = (char *)&v165 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011A4390);
  __chkstk_darwin(v179);
  v178 = (uint64_t)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A4398);
  v188 = *(_QWORD *)(v17 - 8);
  v189 = v17;
  __chkstk_darwin(v17);
  v184 = (char *)&v165 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v175 = (char *)&v165 - v20;
  __chkstk_darwin(v21);
  v187 = (char *)&v165 - v22;
  v23 = sub_100007E8C(&qword_1011A4150);
  __chkstk_darwin(v23);
  v192 = (uint64_t *)((char *)&v165 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_100007E8C((uint64_t *)&unk_1011D0B50);
  v199 = *(_QWORD *)(v25 - 8);
  v200 = v25;
  __chkstk_darwin(v25);
  v180 = (char *)&v165 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v198 = (char *)&v165 - v28;
  v29 = sub_100007E8C(&qword_1011A43A0);
  __chkstk_darwin(v29);
  v205 = (uint64_t *)((char *)&v165 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  v204 = (uint64_t)&v165 - v32;
  v33 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  __chkstk_darwin(v33);
  v35 = (char *)&v165 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v40 = (char *)&v165 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v39) = *(_BYTE *)(a2 + 16);
  v183 = a4;
  v191 = a2;
  if ((v39 & 1) != 0)
  {
    v190 = a5;
    v208 = static VerticalAlignment.center.getter(v38);
    sub_1001AD8D8((uint64_t)v241);
    v206 = v241[1];
    v207 = v241[0];
    v41 = v242;
    v42 = v244;
    v202 = v245;
    v203 = v243;
    v43 = v246;
    v201 = v247;
    v196 = v249;
    v197 = v248;
    v194 = v252;
    v195 = v250;
    v211[0] = 0;
    LOBYTE(v235) = v242;
    v213[0] = v244;
    v210 = v246;
    v209 = v251;
    v44 = v251;
    v46 = static Edge.Set.bottom.getter(v45);
    if (qword_10119BA40 != -1)
      swift_once(&qword_10119BA40, sub_1001AEF94);
    v47 = EdgeInsets.init(_all:)(*(double *)&qword_10124C958);
    LOBYTE(v212[0]) = 0;
    v214 = v208;
    v215 = 0;
    v216 = v207;
    v217 = v206;
    v218 = v41;
    v219 = v203;
    v220 = v42;
    v221 = v202;
    v222 = v43;
    v223 = v201;
    v224 = v197;
    v225 = v196;
    v226 = v195;
    v227 = v44;
    v228 = v194;
    v229 = v46;
    v230 = v47;
    v231 = v48;
    v232 = v49;
    v233 = v50;
    v234 = 0;
    UIScreen.Dimensions.size.getter(&v214);
    sub_100065228((uint64_t)&v214, (uint64_t)v241, (uint64_t *)&unk_1011A43A8);
    a5 = v190;
    a2 = v191;
  }
  else
  {
    sub_1000F5A48(&v214);
    sub_100065228((uint64_t)&v214, (uint64_t)v241, (uint64_t *)&unk_1011A43A8);
  }
  v51 = a2 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_releaseDate;
  swift_beginAccess(a2 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_releaseDate, v213, 0, 0);
  sub_10004A160(v51, (uint64_t)v35, (uint64_t *)&unk_1011A30A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    sub_10004FF60((uint64_t)v35, (uint64_t *)&unk_1011A30A0);
    v206 = 0;
    v207 = 0;
    v203 = 0;
    v208 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v35, v36);
    v52 = (id)*NSDateFormatter.releaseDateFormatter.unsafeMutableAddressor();
    isa = Date._bridgeToObjectiveC()().super.isa;
    v54 = objc_msgSend(v52, "stringFromDate:", isa);

    v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

    *(_QWORD *)&v214 = v55;
    *((_QWORD *)&v214 + 1) = v57;
    v58 = sub_100055B68();
    v59 = Text.init<A>(_:)(&v214, &type metadata for String, v58);
    v206 = v60;
    v207 = v59;
    v208 = v61;
    v203 = v62 & 1;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v36);
  }
  v63 = v200;
  KeyPath = swift_getKeyPath(&unk_100EAD068);
  v65 = swift_getKeyPath(&unk_100EAD090);
  swift_retain(a2);
  static Published.subscript.getter(&v214, v66, KeyPath, v65);
  swift_release(a2);
  swift_release(KeyPath);
  swift_release(v65);
  v67 = v214;
  LOBYTE(v65) = BYTE8(v214);
  v68 = swift_getKeyPath(&unk_100EAD0B0);
  v69 = swift_getKeyPath(&unk_100EAD0D8);
  swift_retain(a2);
  static Published.subscript.getter(&v214, v70, v68, v69);
  swift_release(a2);
  swift_release(v68);
  swift_release(v69);
  *(_QWORD *)&v214 = static String.stringForTrackCountAndDuration(trackCount:duration:)(v67, v65, v214, 0);
  *((_QWORD *)&v214 + 1) = v71;
  v72 = sub_100055B68();
  v197 = Text.init<A>(_:)(&v214, &type metadata for String, v72);
  v201 = v73;
  v202 = v74;
  LODWORD(v76) = v75;
  v77 = *(_QWORD *)(a2 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_copyright + 8);
  if (v77)
  {
    *(_QWORD *)&v214 = *(_QWORD *)(a2 + OBJC_IVAR____TtCV5Music15TracklistFooter9ViewModel_copyright);
    *((_QWORD *)&v214 + 1) = v77;
    swift_bridgeObjectRetain();
    v78 = Text.init<A>(_:)(&v214, &type metadata for String, v72);
    v195 = v79;
    v196 = v78;
    v193 = v80 & 1;
    v194 = v81;
  }
  else
  {
    v195 = 0;
    v196 = 0;
    v193 = 0;
    v194 = 0;
  }
  v82 = v198;
  v83 = v199;
  v84 = swift_getKeyPath(&unk_100EAD0F8);
  v85 = swift_getKeyPath(&unk_100EAD120);
  swift_retain(a2);
  v86 = v192;
  static Published.subscript.getter(v192, v87, v84, v85);
  swift_release(a2);
  swift_release(v84);
  v88 = swift_release(v85);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v83 + 48))(v86, 1, v63, v88) == 1)
  {
    sub_10004FF60((uint64_t)v86, &qword_1011A4150);
    v89 = v204;
LABEL_16:
    v92 = sub_100007E8C(&qword_1011A43B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v89, 1, 1, v92);
    goto LABEL_27;
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v83 + 32))(v82, v86, v63);
  v90 = sub_100049F28((unint64_t *)&unk_1011ACB50, (uint64_t *)&unk_1011D0B50, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v63);
  v91 = dispatch thunk of Collection.endIndex.getter(v212, v63, v90);
  v89 = v204;
  if ((_QWORD)v214 == v212[0])
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v63);
    goto LABEL_16;
  }
  LODWORD(v192) = v76;
  v190 = a5;
  if (qword_10119BA48 != -1)
    v91 = (_QWORD *)swift_once(&qword_10119BA48, sub_1001AEFB4);
  v93 = qword_10124C960;
  v94 = static Alignment.center.getter(v91);
  _FrameLayout.init(width:height:alignment:)(&v235, 0, 1, v93, 0, v94, v95);
  v171 = v235;
  v170 = v236;
  v169 = v237;
  v168 = v238;
  v166 = v240;
  v167 = v239;
  dispatch thunk of Collection.startIndex.getter(v63);
  dispatch thunk of Collection.endIndex.getter(v212, v63, v90);
  if (dispatch thunk of Collection.distance(from:to:)(&v214, v212, v63, v90) <= 1)
    v96 = 0xEC0000006C656261;
  else
    v96 = 0xED0000736C656261;
  v97 = LocalizedStringKey.init(stringLiteral:)(0x4C2064726F636552, v96);
  v98 = Text.init(_:tableName:bundle:comment:)(v97);
  v100 = v99;
  v102 = v101;
  v104 = v103 & 1;
  v105 = enum case for Text.Case.uppercase(_:);
  v106 = type metadata accessor for Text.Case(0);
  v107 = *(_QWORD *)(v106 - 8);
  v108 = (uint64_t)v174;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v174, v105, v106);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v108, 0, 1, v106);
  v109 = swift_getKeyPath(&unk_100EAD1B8);
  v110 = v176;
  sub_10004A160(v108, (uint64_t)v176 + *(int *)(v173 + 28), (uint64_t *)&unk_1011A4380);
  *v110 = v109;
  v111 = (uint64_t)v177;
  sub_10004A160((uint64_t)v110, (uint64_t)&v177[*(int *)(v172 + 36)], (uint64_t *)&unk_1011C4EE0);
  *(_QWORD *)v111 = v98;
  *(_QWORD *)(v111 + 8) = v100;
  *(_BYTE *)(v111 + 16) = v104;
  *(_QWORD *)(v111 + 24) = v102;
  sub_100055BBC(v98, v100, v104);
  swift_bridgeObjectRetain();
  sub_10004FF60((uint64_t)v110, (uint64_t *)&unk_1011C4EE0);
  sub_10004FF60(v108, (uint64_t *)&unk_1011A4380);
  sub_100055BAC(v98, v100, v104);
  v112 = swift_bridgeObjectRelease(v102);
  v113 = static Font.caption2.getter(v112);
  v114 = swift_getKeyPath(&unk_100EAD188);
  v115 = v178;
  sub_10004A160(v111, v178, (uint64_t *)&unk_1011C4EF0);
  v116 = v179;
  v117 = (uint64_t *)(v115 + *(int *)(v179 + 36));
  *v117 = v114;
  v117[1] = v113;
  v118 = sub_10004FF60(v111, (uint64_t *)&unk_1011C4EF0);
  v119 = static Font.Weight.semibold.getter(v118);
  v120 = sub_1001B0160();
  v121 = v175;
  View.fontWeight(_:)(*(_QWORD *)&v119, 0, v116, v120);
  sub_10004FF60(v115, &qword_1011A4390);
  v122 = (*(uint64_t (**)(char *, char *, uint64_t))(v188 + 32))(v187, v121, v189);
  if (qword_10119BA50 != -1)
    v122 = swift_once(&qword_10119BA50, sub_1001AEFD4);
  v179 = qword_10124C968;
  v123 = v191;
  v124 = v183;
  if (qword_10119BA60 != -1)
    v122 = swift_once(&qword_10119BA60, sub_1001AF014);
  v125 = qword_10124C978;
  v126 = static VerticalAlignment.center.getter(v122);
  v127 = (uint64_t)v185;
  *v185 = v126;
  *(_QWORD *)(v127 + 8) = v125;
  *(_BYTE *)(v127 + 16) = 0;
  v178 = v127 + *(int *)(sub_100007E8C(&qword_1011A43F8) + 44);
  v128 = v180;
  v129 = v200;
  (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v180, v198, v200);
  v130 = swift_getKeyPath(&unk_100EAD1F0);
  v131 = (_QWORD *)swift_allocObject(&unk_1010B4A88, 48, 7);
  v132 = v182;
  v131[2] = v181;
  v131[3] = v123;
  v131[4] = v132;
  v131[5] = v124;
  swift_retain(v123);
  sub_100048AAC(v132, v124);
  v133 = sub_100007E8C(&qword_1011A4400);
  v134 = sub_100049F28(&qword_1011A4408, (uint64_t *)&unk_1011D0B50, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v135 = sub_100048748(&qword_1011A4410, (uint64_t (*)(uint64_t))&type metadata accessor for RecordLabel, (uint64_t)&protocol conformance descriptor for RecordLabel);
  v136 = sub_1001B02A8();
  ForEach<>.init(_:id:content:)(v128, v130, sub_1001B029C, v131, v129, v133, v134, v135, v136);
  v137 = v187;
  v76 = v188;
  v138 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
  v139 = v184;
  v140 = v189;
  v138(v184, v187, v189);
  v141 = v186;
  sub_10004A160(v127, v186, (uint64_t *)&unk_1011A4370);
  v142 = v205;
  *v205 = 0;
  *((_BYTE *)v142 + 8) = 1;
  v142[2] = v171;
  *((_BYTE *)v142 + 24) = v170;
  v142[4] = v169;
  *((_BYTE *)v142 + 40) = v168;
  v143 = v166;
  v142[6] = v167;
  v142[7] = v143;
  v144 = (int *)sub_100007E8C(&qword_1011A4430);
  v138((char *)v142 + v144[12], v139, v140);
  v145 = (char *)v142 + v144[16];
  *(_QWORD *)v145 = v179;
  v145[8] = 0;
  sub_10004A160(v141, (uint64_t)v142 + v144[20], (uint64_t *)&unk_1011A4370);
  sub_10004FF60(v127, (uint64_t *)&unk_1011A4370);
  v146 = *(void (**)(char *, uint64_t))(v76 + 8);
  v146(v137, v140);
  sub_10004FF60(v141, (uint64_t *)&unk_1011A4370);
  v146(v139, v140);
  v147 = sub_100007E8C(&qword_1011A43B8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v142, 0, 1, v147);
  v89 = v204;
  sub_100065228((uint64_t)v142, v204, &qword_1011A43A0);
  (*(void (**)(char *, uint64_t))(v199 + 8))(v198, v200);
  a5 = v190;
  LOBYTE(v76) = (_BYTE)v192;
LABEL_27:
  v148 = v76 & 1;
  LODWORD(v200) = v76 & 1;
  sub_100065228((uint64_t)v241, (uint64_t)v211, (uint64_t *)&unk_1011A43A8);
  v149 = v205;
  sub_10004A160(v89, (uint64_t)v205, &qword_1011A43A0);
  sub_100065228((uint64_t)v211, (uint64_t)v212, (uint64_t *)&unk_1011A43A8);
  sub_100065228((uint64_t)v212, a5, (uint64_t *)&unk_1011A43A8);
  v151 = v206;
  v150 = v207;
  *(_QWORD *)(a5 + 176) = v207;
  *(_QWORD *)(a5 + 184) = v151;
  v206 = v151;
  v207 = v150;
  v152 = v208;
  *(_QWORD *)(a5 + 192) = v203;
  *(_QWORD *)(a5 + 200) = v152;
  v153 = v197;
  v154 = v201;
  *(_QWORD *)(a5 + 208) = v197;
  *(_QWORD *)(a5 + 216) = v154;
  *(_BYTE *)(a5 + 224) = v148;
  v155 = v195;
  v156 = v196;
  *(_QWORD *)(a5 + 232) = v202;
  *(_QWORD *)(a5 + 240) = v156;
  v158 = v193;
  v157 = v194;
  *(_QWORD *)(a5 + 248) = v155;
  *(_QWORD *)(a5 + 256) = v158;
  *(_QWORD *)(a5 + 264) = v157;
  v159 = sub_100007E8C((uint64_t *)&unk_1011A43C0);
  sub_10004A160((uint64_t)v149, a5 + *(int *)(v159 + 96), &qword_1011A43A0);
  sub_1000F5C70((uint64_t)v212, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001B00BC);
  v160 = v151;
  LOBYTE(v151) = v203;
  sub_1000E4440(v150, v160, v203, v208);
  v161 = v201;
  v162 = v200;
  sub_100055BBC(v153, v201, v200);
  v163 = v202;
  swift_bridgeObjectRetain();
  sub_1000E4440(v156, v155, v158, v157);
  sub_10004FF60(v204, &qword_1011A43A0);
  sub_10004FF60((uint64_t)v205, &qword_1011A43A0);
  sub_1000E450C(v156, v155, v158, v157);
  sub_100055BAC(v153, v161, v162);
  swift_bridgeObjectRelease(v163);
  sub_1000E450C(v207, v206, v151, v208);
  sub_100065228((uint64_t)v211, (uint64_t)&v214, (uint64_t *)&unk_1011A43A8);
  return sub_1000F5C70((uint64_t)&v214, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1001B010C);
}

double sub_1001AD8D8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119C1E0 != -1)
    swift_once(&qword_10119C1E0, sub_100565C7C);
  v8 = qword_10124D260;
  v9 = (id)qword_10124D260;
  v10 = Image.init(_:bundle:)(0xD000000000000014, 0x8000000100E30910, v8);
  v11 = static Alignment.center.getter(v10);
  _FrameLayout.init(width:height:alignment:)(&v33, 0x4018000000000000, 0, 0, 1, v11, v12);
  v13 = v33;
  v14 = v34;
  v15 = v35;
  v16 = v36;
  v30 = v38;
  v31 = v37;
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E30930);
  static Locale.current.getter(v17);
  v32[0] = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v32[1] = v18;
  v19 = sub_100055B68();
  v20 = Text.init<A>(_:)(v32, &type metadata for String, v19);
  v22 = v21;
  v24 = v23;
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = 0;
  v26 = v25 & 1;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_BYTE *)(a1 + 32) = v14;
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = v16;
  v27 = v30;
  *(_QWORD *)(a1 + 56) = v31;
  *(_QWORD *)(a1 + 64) = v27;
  *(_QWORD *)(a1 + 72) = v20;
  *(_QWORD *)(a1 + 80) = v21;
  *(_BYTE *)(a1 + 88) = v25 & 1;
  *(_QWORD *)(a1 + 96) = v23;
  swift_retain(v10);
  sub_100055BBC(v20, v22, v26);
  swift_bridgeObjectRetain();
  sub_100055BAC(v20, v22, v26);
  swift_release(v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v24).n128_u64[0];
  return result;
}

uint64_t sub_1001ADB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  unsigned int v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];

  v63 = a4;
  v64 = a5;
  v8 = type metadata accessor for TracklistFooter.RecordLabelStack(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A4438);
  __chkstk_darwin(v11);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack(0);
  __chkstk_darwin(v14);
  v61 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EAD140);
  v17 = swift_getKeyPath(&unk_100EAD168);
  swift_retain(a2);
  static Published.subscript.getter(v65, v18, KeyPath, v17);
  swift_release(a2);
  v19 = KeyPath;
  v20 = a1;
  swift_release(v19);
  v21 = swift_release(v17);
  v22 = v65[0];
  if (!v65[0])
    goto LABEL_50;
  result = RecordLabel.id.getter(v21);
  v25 = v24;
  v26 = HIBYTE(v24) & 0xF;
  v27 = result & 0xFFFFFFFFFFFFLL;
  if ((v25 & 0x2000000000000000) != 0)
    v28 = v26;
  else
    v28 = result & 0xFFFFFFFFFFFFLL;
  if (!v28)
  {
    swift_bridgeObjectRelease(v22);
    v56 = v25;
    goto LABEL_53;
  }
  v62 = a1;
  if ((v25 & 0x1000000000000000) != 0)
  {
    v30 = sub_1001AF610(result, v25, 10, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1001AF97C);
    v32 = v60;
LABEL_45:
    swift_bridgeObjectRelease(v25);
    if ((v32 & 1) != 0 || !*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRelease(v22);
      v20 = v62;
LABEL_50:
      v51 = type metadata accessor for RecordLabel(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v10, v20, v51);
      v52 = (uint64_t *)&v10[*(int *)(v8 + 20)];
      v53 = v63;
      *v52 = a3;
      v52[1] = v53;
      v47 = type metadata accessor for TracklistFooter.RecordLabelStack;
      sub_10005B704((uint64_t)v10, (uint64_t)v13, type metadata accessor for TracklistFooter.RecordLabelStack);
      swift_storeEnumTagMultiPayload(v13, v11, 1);
      sub_100048AAC(a3, v53);
      v54 = sub_100048748(&qword_1011A4420, type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack, (uint64_t)&unk_100EAD29C);
      v55 = sub_100048748(&qword_1011A4428, type metadata accessor for TracklistFooter.RecordLabelStack, (uint64_t)&unk_100EAD24C);
      _ConditionalContent<>.init(storage:)(v13, v14, v8, v54, v55);
      v50 = (uint64_t)v10;
      return sub_10005B748(v50, v47);
    }
    v42 = sub_1007ACA10(v30);
    v20 = v62;
    if ((v43 & 1) != 0)
    {
      v44 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v42);
      swift_bridgeObjectRelease(v22);
      v45 = type metadata accessor for RecordLabel(0);
      v46 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v61, v20, v45);
      *(_QWORD *)(v46 + *(int *)(v14 + 20)) = v44;
      v47 = type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack;
      sub_10005B704(v46, (uint64_t)v13, type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack);
      swift_storeEnumTagMultiPayload(v13, v11, 0);
      v48 = sub_100048748(&qword_1011A4420, type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack, (uint64_t)&unk_100EAD29C);
      v49 = sub_100048748(&qword_1011A4428, type metadata accessor for TracklistFooter.RecordLabelStack, (uint64_t)&unk_100EAD24C);
      _ConditionalContent<>.init(storage:)(v13, v14, v8, v48, v49);
      v50 = v46;
      return sub_10005B748(v50, v47);
    }
    v56 = v22;
LABEL_53:
    swift_bridgeObjectRelease(v56);
    goto LABEL_50;
  }
  if ((v25 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v29 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v25);
    v30 = (uint64_t)sub_1001AF97C(v29, v27, 10);
    v32 = v31 & 1;
    goto LABEL_45;
  }
  v65[0] = result;
  v65[1] = v25 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v26)
      goto LABEL_64;
    if (v26 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    v30 = (BYTE1(result) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v30 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v33 = v26 - 3;
      if (v33)
      {
        v34 = (unsigned __int8 *)v65 + 3;
        while (1)
        {
          v35 = *v34 - 48;
          if (v35 > 9)
            goto LABEL_32;
          v36 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
            goto LABEL_32;
          v30 = v36 + v35;
          if (__OFADD__(v36, v35))
            goto LABEL_32;
          v32 = 0;
          ++v34;
          if (!--v33)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v32 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v26 || (result - 48) > 9u)
      goto LABEL_32;
    v30 = (result - 48);
    if (v26 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v30 = 10 * (result - 48) + (BYTE1(result) - 48);
      v37 = v26 - 2;
      if (v37)
      {
        v38 = (unsigned __int8 *)v65 + 2;
        while (1)
        {
          v39 = *v38 - 48;
          if (v39 > 9)
            goto LABEL_32;
          v40 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
            goto LABEL_32;
          v30 = v40 + v39;
          if (__OFADD__(v40, v39))
            goto LABEL_32;
          v32 = 0;
          ++v38;
          if (!--v37)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        v32 = 0;
        v30 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v30 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v41 = v26 - 3;
        if (!v41)
          goto LABEL_44;
        v57 = (unsigned __int8 *)v65 + 3;
        while (1)
        {
          v58 = *v57 - 48;
          if (v58 > 9)
            break;
          v59 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63)
            break;
          v30 = v59 - v58;
          if (__OFSUB__(v59, v58))
            break;
          v32 = 0;
          ++v57;
          if (!--v41)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v30 = 0;
    v32 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_1001AE0D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;

  v2 = v1;
  v54 = a1;
  v55 = type metadata accessor for AccessibilityTraits(0);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v52 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AccessibilityChildBehavior(0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin(v4);
  v49 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TracklistFooter.RecordLabelStack(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v44 = v7;
  v45 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A45B8);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A4600);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A4608);
  v46 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100007E8C(&qword_1011A4610);
  v47 = *(_QWORD *)(v17 - 8);
  v48 = v17;
  __chkstk_darwin(v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119BA58 != -1)
    v18 = swift_once(&qword_10119BA58, sub_1001AEFF4);
  v21 = qword_10124C970;
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v18);
  *((_QWORD *)v10 + 1) = v21;
  v10[16] = 0;
  v22 = sub_100007E8C(&qword_1011A45C8);
  sub_1001AEC84((uint64_t)&v10[*(int *)(v22 + 44)]);
  v25 = static Color.accentColor.getter(v23, v24);
  KeyPath = swift_getKeyPath(&unk_100EAD320);
  sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011A45B8);
  v27 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v27 = KeyPath;
  v27[1] = v25;
  sub_10004FF60((uint64_t)v10, &qword_1011A45B8);
  v28 = v2;
  v29 = v45;
  sub_10005B704(v28, v45, type metadata accessor for TracklistFooter.RecordLabelStack);
  v30 = *(unsigned __int8 *)(v43 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = swift_allocObject(&unk_1010B4AB0, v31 + v44, v30 | 7);
  sub_1001B0F88(v29, v32 + v31);
  v33 = sub_1001B1008();
  View.onTapGesture(count:perform:)(1, sub_1001B0FCC, v32, v11, v33);
  swift_release(v32);
  v34 = sub_10004FF60((uint64_t)v13, &qword_1011A4600);
  v35 = v49;
  static AccessibilityChildBehavior.combine.getter(v34);
  v56 = v11;
  v57 = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  View.accessibilityElement(children:)(v35, v14, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v16, v14);
  v38 = v52;
  static AccessibilityTraits.isButton.getter(v37);
  v56 = v14;
  v57 = OpaqueTypeConformance2;
  v39 = swift_getOpaqueTypeConformance2(&v56, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v40 = v48;
  View.accessibilityAddTraits(_:)(v38, v48, v39);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v40);
}

void sub_1001AE4BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v3 = type metadata accessor for RecordLabel(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v37) = 6;
  v10 = sub_10004D63C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v10) & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v12 = objc_msgSend(v11, "connectedScenes");
    v13 = sub_1001B10A4();
    v14 = sub_100048748((unint64_t *)&qword_1011A2190, (uint64_t (*)(uint64_t))sub_1001B10A4, (uint64_t)&protocol conformance descriptor for NSObject);
    v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

    sub_10079470C(v15);
    v17 = v16;
    swift_bridgeObjectRelease(v15);
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v33 = v17;
      else
        v33 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v17);
      if (v34)
      {
LABEL_4:
        if ((v17 & 0xC000000000000001) != 0)
        {
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
        }
        else
        {
          if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v18 = *(id *)(v17 + 32);
        }
        v19 = v18;

        v20 = objc_msgSend(v19, "delegate", swift_bridgeObjectRelease(v17).n128_f64[0]);
        if (v20
          && (v36 = v20,
              v21 = sub_100007E8C(&qword_1011A9300),
              v22 = sub_100007E8C(&qword_1011A3120),
              (swift_dynamicCast(&v37, &v36, v21, v22, 6) & 1) != 0))
        {
          if (*((_QWORD *)&v38 + 1))
          {
            v23 = *(_QWORD *)(*sub_100007E68(&v37, *((uint64_t *)&v38 + 1))
                            + OBJC_IVAR____TtC5Music17MainSceneDelegate_interfaceContext);
            swift_retain(v23);
            _s5Music18DragDropToPlaylistV6OriginVwxx_0(&v37);

            if (v23)
            {
              v24 = type metadata accessor for TaskPriority(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 1, 1, v24);
              (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
              type metadata accessor for MainActor(0);
              v25 = swift_retain(v23);
              v26 = static MainActor.shared.getter(v25);
              v27 = *(unsigned __int8 *)(v4 + 80);
              v28 = (v27 + 32) & ~v27;
              v29 = (v5 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
              v30 = swift_allocObject(&unk_1010B4AD8, v29 + 8, v27 | 7);
              *(_QWORD *)(v30 + 16) = v26;
              *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
              (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v30 + v28, v6, v3);
              *(_QWORD *)(v30 + v29) = v23;
              v31 = sub_100166D14((uint64_t)v9, (uint64_t)&unk_1011A4640, v30);
              swift_release(v31);
              swift_release(v23);
            }
            return;
          }
        }
        else
        {
          v39 = 0;
          v37 = 0u;
          v38 = 0u;
        }
        sub_10004FF60((uint64_t)&v37, (uint64_t *)&unk_1011A3110);

        return;
      }
    }
    else if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }

    swift_bridgeObjectRelease(v17);
    return;
  }
  v32 = (void (**)(uint64_t))(v1
                                      + *(int *)(type metadata accessor for TracklistFooter.RecordLabelStack(0) + 20));
  if (*v32)
    (*v32)(a1);
}

uint64_t sub_1001AE864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_100007E8C(&qword_1011C44D0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[7] = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v8);
  return swift_task_switch(sub_1001AE8E0, 0, 0);
}

uint64_t sub_1001AE8E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[5];
  v1 = v0[6];
  v3 = v0[4];
  v4 = v0[2];
  v5 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v4, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for MusicPageProvider.Destination.recordLabelDetail<A, B>(_:), v3);
  v6 = (_QWORD *)swift_task_alloc(dword_1011C7BB4);
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_1001AE980;
  return sub_10076ECA8(v0[3]);
}

uint64_t sub_1001AE980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001AEA14, v5, v6);
}

uint64_t sub_1001AEA14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001AEA54()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;

  v1 = v0;
  v2 = (int *)type metadata accessor for SegueContext(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_1011A45B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A45C0);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119BA58 != -1)
    v9 = swift_once(&qword_10119BA58, sub_1001AEFF4);
  v12 = qword_10124C970;
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v9);
  *((_QWORD *)v7 + 1) = v12;
  v7[16] = 0;
  v13 = sub_100007E8C(&qword_1011A45C8);
  sub_1001AEC84((uint64_t)&v7[*(int *)(v13 + 44)]);
  v14 = *(void **)(v1 + *(int *)(type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack(0) + 20));
  v15 = (char *)v4 + v2[5];
  v16 = type metadata accessor for GenericMusicItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *v4 = v14;
  *((_BYTE *)v4 + v2[6]) = 0;
  v17 = (_QWORD *)((char *)v4 + v2[7]);
  *v17 = 0;
  v17[1] = 0;
  v18 = v14;
  sub_10030EC9C((uint64_t)v4, (uint64_t)v11);
  sub_10005B748((uint64_t)v4, type metadata accessor for SegueContext);
  sub_10004FF60((uint64_t)v7, &qword_1011A45B8);
  v19 = Corner.small.unsafeMutableAddressor();
  v20 = *v19;
  v21 = v19[1];
  v22 = *((_BYTE *)v19 + 16);
  v23 = *HI.HoverOutset.text.unsafeMutableAddressor();
  v24 = sub_1001B0D98();
  View.hover(corner:outset:isRelative:namespace:isEnabled:)(v20, v21, v22, 0, 0, 1, 1, v8, *(double *)&v23, v24);
  return sub_10004FF60((uint64_t)v11, &qword_1011A45C0);
}

double sub_1001AEC84@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v33 = sub_100007E8C((uint64_t *)&unk_1011C94A0);
  __chkstk_darwin(v33);
  v3 = (uint64_t *)&v28[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100007E8C(&qword_1011A45F0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)&v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v28[-v12];
  v34[0] = RecordLabel.name.getter(v14);
  v34[1] = v15;
  v16 = sub_100055B68();
  v17 = Text.init<A>(_:)(v34, &type metadata for String, v16);
  v30 = v18;
  v31 = v17;
  v32 = v19;
  v29 = v20 & 1;
  v21 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Image.Scale.small(_:), v4);
  KeyPath = swift_getKeyPath(&unk_100EAD2F0);
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v33 + 28), v7, v4);
  *v3 = KeyPath;
  sub_10004A160((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 36), (uint64_t *)&unk_1011C94A0);
  *v10 = v21;
  swift_retain(v21);
  sub_10004FF60((uint64_t)v3, (uint64_t *)&unk_1011C94A0);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v21);
  sub_100065228((uint64_t)v10, (uint64_t)v13, &qword_1011A45F0);
  sub_10004A160((uint64_t)v13, (uint64_t)v10, &qword_1011A45F0);
  v24 = v30;
  v23 = v31;
  *(_QWORD *)a1 = v31;
  *(_QWORD *)(a1 + 8) = v24;
  LOBYTE(KeyPath) = v29;
  *(_BYTE *)(a1 + 16) = v29;
  v25 = v32;
  *(_QWORD *)(a1 + 24) = v32;
  v26 = sub_100007E8C(&qword_1011A45F8);
  sub_10004A160((uint64_t)v10, a1 + *(int *)(v26 + 48), &qword_1011A45F0);
  sub_100055BBC(v23, v24, KeyPath);
  swift_bridgeObjectRetain();
  sub_10004FF60((uint64_t)v13, &qword_1011A45F0);
  sub_10004FF60((uint64_t)v10, &qword_1011A45F0);
  sub_100055BAC(v23, v24, KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v25).n128_u64[0];
  return result;
}

void sub_1001AEF34()
{
  qword_10124C940 = Int.seconds.getter(17);
}

void sub_1001AEF54()
{
  qword_10124C948 = Int.seconds.getter(27);
}

void sub_1001AEF74()
{
  qword_10124C950 = Int.seconds.getter(0);
}

void sub_1001AEF94()
{
  qword_10124C958 = Int.seconds.getter(14);
}

void sub_1001AEFB4()
{
  qword_10124C960 = Int.seconds.getter(25);
}

void sub_1001AEFD4()
{
  qword_10124C968 = Int.seconds.getter(2);
}

void sub_1001AEFF4()
{
  qword_10124C970 = Int.seconds.getter(6);
}

void sub_1001AF014()
{
  qword_10124C978 = Int.seconds.getter(16);
}

uint64_t sub_1001AF034@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1001AC488(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_1001AF040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011A30A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AF088@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAD068);
  v5 = swift_getKeyPath(&unk_100EAD090);
  static Published.subscript.getter(&v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1001AF110(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAD068);
  v6 = swift_getKeyPath(&unk_100EAD090);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

double sub_1001AF194@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAD0B0);
  v5 = swift_getKeyPath(&unk_100EAD0D8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1001AF214(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAD0B0);
  v5 = swift_getKeyPath(&unk_100EAD0D8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1001AF290@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAD0F8);
  v5 = swift_getKeyPath(&unk_100EAD120);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1001AF2FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100007E8C(&qword_1011A4150);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_10004A160(a1, (uint64_t)&v14 - v8, &qword_1011A4150);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAD0F8);
  v12 = swift_getKeyPath(&unk_100EAD120);
  sub_10004A160((uint64_t)v9, (uint64_t)v6, &qword_1011A4150);
  swift_retain(v10);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_10004FF60((uint64_t)v9, &qword_1011A4150);
}

uint64_t sub_1001AF3F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAD140);
  v5 = swift_getKeyPath(&unk_100EAD168);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001AF478(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EAD140);
  v5 = swift_getKeyPath(&unk_100EAD168);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

_QWORD *sub_1001AF4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100007E8C(&qword_1011A4440);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_1001AF558(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

unsigned __int8 *sub_1001AF5D0(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1001AF700(a1, a2, a3);
}

unsigned __int8 *sub_1001AF5E4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AF97C(a1, a2, a3);
}

uint64_t sub_1001AF5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AF610(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1001AF700);
}

uint64_t sub_1001AF604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AF610(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_1001AF97C);
}

uint64_t sub_1001AF610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  v17 = a2;
  swift_bridgeObjectRetain();
  v6 = String.init<A>(_:)(&v16, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v8 = v6;
  v9 = v7;
  if ((v7 & 0x1000000000000000) == 0)
  {
    if ((v7 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v11 = HIBYTE(v9) & 0xF;
    v16 = v8;
    v17 = v9 & 0xFFFFFFFFFFFFFFLL;
    v10 = &v16;
    goto LABEL_7;
  }
  v8 = sub_1001AFBF8(v6, v7);
  v13 = v12;
  swift_bridgeObjectRelease(v9);
  v9 = v13;
  if ((v13 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v8 & 0x1000000000000000) != 0)
  {
    v10 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v10 = (uint64_t *)_StringObject.sharedUTF8.getter(v8, v9);
  }
LABEL_7:
  v14 = a4(v10, v11, a3);
  swift_bridgeObjectRelease(v9);
  return v14;
}

unsigned __int8 *sub_1001AF700(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1001AF97C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1001AFBF8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_1001AFC74(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_1001AFC74(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1001AFDB8(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_1001AF4F4(v12, 0);
      v5 = sub_1001AFEA4((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_1001AFDB8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1001AF558(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1001AF558(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_1001AFEA4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1001AF558(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1001AF558(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1001B00BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t result;

  if (a4)
  {
    swift_retain(a4);
    sub_100055BBC(a13, a14, a15 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1001B010C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16)
{
  double result;

  if (a4)
  {
    swift_release(a4);
    sub_100055BAC(a13, a14, a15 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a16).n128_u64[0];
  }
  return result;
}

unint64_t sub_1001B0160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A43D0;
  if (!qword_1011A43D0)
  {
    v1 = sub_100044B54(&qword_1011A4390);
    sub_1001B01E4();
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A43D0);
  }
  return result;
}

unint64_t sub_1001B01E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A43D8;
  if (!qword_1011A43D8)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011C4EF0);
    sub_100049F28((unint64_t *)&unk_1011A43E0, (uint64_t *)&unk_1011C4EE0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A43D8);
  }
  return result;
}

uint64_t sub_1001B0268()
{
  _QWORD *v0;

  swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001B029C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1001ADB08(a1, v2[3], v2[4], v2[5], a2);
}

unint64_t sub_1001B02A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4418;
  if (!qword_1011A4418)
  {
    v1 = sub_100044B54(&qword_1011A4400);
    sub_100048748(&qword_1011A4420, type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack, (uint64_t)&unk_100EAD29C);
    sub_100048748(&qword_1011A4428, type metadata accessor for TracklistFooter.RecordLabelStack, (uint64_t)&unk_100EAD24C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4418);
  }
  return result;
}

uint64_t type metadata accessor for TracklistFooter.SegueLinkRecordLabelStack(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A4530, (uint64_t)&nominal type descriptor for TracklistFooter.SegueLinkRecordLabelStack);
}

uint64_t type metadata accessor for TracklistFooter.RecordLabelStack(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A44A0, (uint64_t)&nominal type descriptor for TracklistFooter.RecordLabelStack);
}

uint64_t *sub_1001B0370(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for RecordLabel(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    if (*v10)
    {
      v11 = v10[1];
      *v9 = *v10;
      v9[1] = v11;
      swift_retain(v11);
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
  }
  return a1;
}

uint64_t sub_1001B0418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;

  v4 = type metadata accessor for RecordLabel(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  if (*v6)
    return swift_release(v6[1]);
  return result;
}

uint64_t sub_1001B0474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*v9)
  {
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t sub_1001B04F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *(_QWORD *)(a2 + v7);
  if (!v10)
  {
    if (v11)
    {
      v14 = *(_QWORD *)(v9 + 8);
      *v8 = v11;
      v8[1] = v14;
      swift_retain(v14);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release(v8[1]);
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(v9 + 8);
  v13 = v8[1];
  *v8 = v11;
  v8[1] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

uint64_t sub_1001B059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  if (*v9)
  {
    v11 = v9[1];
    *v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t sub_1001B0614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *v9;
  if (!v10)
  {
    if (v11)
    {
      v14 = v9[1];
      *v8 = v11;
      v8[1] = v14;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release(v8[1]);
    goto LABEL_7;
  }
  v12 = v9[1];
  v13 = v8[1];
  *v8 = v11;
  v8[1] = v12;
  swift_release(v13);
  return a1;
}

uint64_t sub_1001B06B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B06C0);
}

uint64_t sub_1001B06C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for RecordLabel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1001B0748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B0754);
}

uint64_t sub_1001B0754(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for RecordLabel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1001B07CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B0B4C(a1, a2, a3, (uint64_t)&unk_100EACFB0);
}

uint64_t *sub_1001B07D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for RecordLabel(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void sub_1001B0864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_1001B08A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_1001B0908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_1001B0970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001B09CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_1001B0A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B0A3C);
}

uint64_t sub_1001B0A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for RecordLabel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001B0AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B0AC4);
}

uint64_t sub_1001B0AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for RecordLabel(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1001B0B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B0B4C(a1, a2, a3, (uint64_t)&value witness table for Builtin.UnknownObject + 64);
}

uint64_t sub_1001B0B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v7;
  _QWORD v8[2];

  result = type metadata accessor for RecordLabel(319);
  if (v7 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    v8[1] = a4;
    swift_initStructMetadata(a1, 256, 2, v8, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1001B0BB8()
{
  return sub_10005610C(&qword_1011A4568, &qword_1011A4570, (void (*)(void))sub_1001B0BEC);
}

uint64_t sub_1001B0BEC()
{
  return sub_10005610C(&qword_1011A4578, &qword_1011A4360, (void (*)(void))sub_1001B0C10);
}

uint64_t sub_1001B0C10()
{
  return sub_10005610C(&qword_1011A4580, &qword_1011A4358, (void (*)(void))sub_1001B0C34);
}

uint64_t sub_1001B0C34()
{
  return sub_10005610C(&qword_1011A4588, &qword_1011A4350, (void (*)(void))sub_1001B0C58);
}

unint64_t sub_1001B0C58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4590;
  if (!qword_1011A4590)
  {
    v1 = sub_100044B54(&qword_1011A4348);
    sub_1001B0CDC();
    sub_100049F28(&qword_1011A0F40, &qword_1011A45B0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4590);
  }
  return result;
}

unint64_t sub_1001B0CDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4598;
  if (!qword_1011A4598)
  {
    v1 = sub_100044B54(&qword_1011A4340);
    sub_100049F28((unint64_t *)&unk_1011A45A0, &qword_1011A4338, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011A0FB0, &qword_1011A43F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4598);
  }
  return result;
}

uint64_t sub_1001B0D78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F9749C, 1);
}

uint64_t sub_1001B0D88(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100F97474, 1);
}

unint64_t sub_1001B0D98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A45D0;
  if (!qword_1011A45D0)
  {
    v1 = sub_100044B54(&qword_1011A45C0);
    sub_100049F28(&qword_1011A45D8, &qword_1011A45B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100048748((unint64_t *)&unk_1011A45E0, type metadata accessor for SegueLink, (uint64_t)&unk_100EC508C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A45D0);
  }
  return result;
}

uint64_t sub_1001B0E34()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1001B0E54()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1001B0E74(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Image.Scale(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.imageScale.setter(v3);
}

uint64_t sub_1001B0EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = type metadata accessor for TracklistFooter.RecordLabelStack(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for RecordLabel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
  v7 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  if (*v7)
    swift_release(v7[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001B0F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TracklistFooter.RecordLabelStack(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001B0FCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TracklistFooter.RecordLabelStack(0) - 8) + 80);
  sub_1001AE4BC(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1001B1008()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4618;
  if (!qword_1011A4618)
  {
    v1 = sub_100044B54(&qword_1011A4600);
    sub_100049F28(&qword_1011A45D8, &qword_1011A45B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28((unint64_t *)&qword_1011A4620, &qword_1011B5800, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4618);
  }
  return result;
}

unint64_t sub_1001B10A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011A4630;
  if (!qword_1011A4630)
  {
    v1 = objc_opt_self(UIScene);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1011A4630);
  }
  return result;
}

uint64_t sub_1001B10E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for RecordLabel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1001B1170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for RecordLabel(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011A463C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10005AEE4;
  return sub_1001AE864(a1, v6, v7, v8, v9);
}

uint64_t sub_1001B1214()
{
  _QWORD v1[2];

  v1[0] = sub_100044B54(&qword_1011A45C0);
  v1[1] = sub_1001B0D98();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hover(corner:outset:isRelative:namespace:isEnabled:)>>, 1);
}

unint64_t sub_1001B1264()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_1011A4650;
  if (!qword_1011A4650)
  {
    v1 = sub_100044B54(&qword_1011A4658);
    v2 = sub_100044B54(&qword_1011A4608);
    v4 = sub_100044B54(&qword_1011A4600);
    v5 = sub_1001B1008();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748((unint64_t *)&qword_1011A4660, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011A4650);
  }
  return result;
}

double sub_1001B1340@<D0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __int128 v39;
  _OWORD *v40;
  __int128 v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD v53[4];

  v50 = a4;
  v51 = a5;
  v52 = a6;
  v9 = type metadata accessor for Song(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v48 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  v47 = a2;
  v49 = MusicLibrary.state<A>(for:)(a1, v9, &protocol witness table for Song);
  v18 = 0;
  v19 = 0;
  if ((a3 & 1) == 0)
  {
    v20 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v21 = objc_msgSend(v20, "userInterfaceIdiom");

    if (v21 == (id)6)
    {
      v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v17, a1, v9);
      v18 = Song.albumTitle.getter(v22);
      v19 = v23;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    }
    else
    {
      v18 = 0;
      v19 = 0;
    }
  }
  v44 = v19;
  v46 = v18;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24(v17, (uint64_t)a1, v9);
  v24(v14, (uint64_t)a1, v9);
  v25 = *(unsigned __int8 *)(v10 + 80);
  v45 = v17;
  v26 = (v25 + 24) & ~v25;
  v27 = v25 | 7;
  v28 = v11 + 7;
  v29 = (v11 + 7 + v26) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1010B4E98, v29 + 8, v25 | 7);
  *(_QWORD *)(v30 + 16) = v47;
  v31 = v30 + v26;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v32(v31, v14, v9);
  v33 = v49;
  *(_QWORD *)(v30 + v29) = v49;
  v34 = v48;
  v32((uint64_t)v48, a1, v9);
  v35 = (v25 + 16) & ~v25;
  v36 = (v28 + v35) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject(&unk_1010B4EC0, v37 + 8, v27);
  v32(v38 + v35, v34, v9);
  *(_QWORD *)(v38 + v36) = v50;
  *(_QWORD *)(v38 + v37) = v33;
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)((uint64_t)v45, v46, v44, (uint64_t)sub_1001C75A4, v30, (uint64_t)&unk_1011A5018, v38, v51, v53, v9, (uint64_t)&protocol witness table for Song);
  v39 = v53[1];
  v40 = v52;
  *v52 = v53[0];
  v40[1] = v39;
  v41 = v53[3];
  v40[2] = v53[2];
  v40[3] = v41;
  *(_QWORD *)&result = swift_retain(v33).n128_u64[0];
  return result;
}

unint64_t sub_1001B15F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  __n128 v16;
  uint64_t v18;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary(0);
  v11 = static MusicLibrary.shared.getter(v10);
  v12 = static MusicLibrary.== infix(_:_:)(a1, v11);
  v13 = swift_release(v11);
  if ((v12 & 1) == 0)
    return 0xD00000000000001DLL;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a2, v6, v13);
  swift_retain(a3);
  v15 = Song.supportsContainerNavigation(itemState:)(v14);
  v16 = swift_release(a3);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v16);
  if ((v15 & 1) != 0)
    return 0;
  else
    return 0xD000000000000010;
}

uint64_t sub_1001B1720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MusicPropertySource(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Track(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v3[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v3[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[12] = v9;
  v3[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B17D4, 0, 0);
}

uint64_t sub_1001B17D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  char *v10;

  v1 = v0[13];
  v3 = v0[10];
  v2 = v0[11];
  v4 = v0[8];
  v5 = v0[9];
  v6 = v0[7];
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 16);
  v7(v1, v0[2], v2);
  v7(v3, v1, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for Track.song(_:), v4);
  MusicLibrary.ItemState.containerLoadingSource.getter(v6);
  v10 = (char *)&dword_10119EB40 + dword_10119EB40;
  v8 = (_QWORD *)swift_task_alloc(unk_10119EB44);
  v0[14] = v8;
  *v8 = v0;
  v8[1] = sub_1001B18B4;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v10)(v0[3], v0[10], v0[7]);
}

uint64_t sub_1001B18B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_1001B1944, 0, 0);
}

uint64_t sub_1001B1944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v1, *(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B19A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  double v113;
  uint64_t v114;

  v2 = v1;
  v101 = type metadata accessor for PlaylistSongSuggestionsView(0);
  v107 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v108 = v4;
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v6);
  v103 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v98);
  v9 = (uint64_t *)((char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100007E8C(&qword_1011A2D50);
  __chkstk_darwin(v10);
  v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011A2D58);
  __chkstk_darwin(v13);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011A4948);
  __chkstk_darwin(v16);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011A4950);
  __chkstk_darwin(v97);
  v100 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100007E8C(&qword_1011A4958);
  __chkstk_darwin(v99);
  v102 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011A4960);
  __chkstk_darwin(v105);
  v106 = (uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A4968);
  v109 = *(_QWORD *)(v22 - 8);
  v110 = v22;
  __chkstk_darwin(v22);
  v104 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(v1 + 8);
  v25 = swift_retain(v24);
  v26 = dispatch thunk of MusicSuggestedSongsViewModel.suggestedSongs.getter(v25);
  swift_release(v24);
  v27 = *(_QWORD *)(v26 + 16);
  v28 = swift_bridgeObjectRelease(v26);
  if (v27)
  {
    v96 = v5;
    v29 = *(_QWORD *)(v2 + 24);
    KeyPath = swift_getKeyPath(&unk_100EAD458);
    v31 = swift_getKeyPath(&unk_100EAD480);
    swift_retain(v29);
    static Published.subscript.getter(&v114, v32, KeyPath, v31);
    swift_release(v29);
    swift_release(KeyPath);
    v28 = swift_release(v31);
    v34 = 1;
    if ((v114 & 1) == 0)
    {
      v95 = a1;
      *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v33);
      *((_QWORD *)v12 + 1) = 0;
      v12[16] = 0;
      v35 = sub_100007E8C(&qword_1011A4970);
      sub_1001B21F4(v2, (uint64_t)&v12[*(int *)(v35 + 44)]);
      v94 = v2;
      v36 = *(_QWORD *)(v2 + 24);
      v37 = swift_getKeyPath(&unk_100EAD4A0);
      v38 = swift_getKeyPath(&unk_100EAD4C8);
      swift_retain(v36);
      static Published.subscript.getter(&v113, v39, v37, v38);
      swift_release(v36);
      swift_release(v37);
      swift_release(v38);
      v40 = v113;
      v42 = static Alignment.center.getter(v41);
      sub_100149AFC(0.0, 1, 0.0, 1, v40, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v42, v43);
      sub_10004FF60((uint64_t)v12, &qword_1011A2D50);
      if (qword_10119BA78 != -1)
        swift_once(&qword_10119BA78, sub_1001BF514);
      v44 = Color.init(_:)((id)qword_10124C9A0);
      v45 = static Edge.Set.all.getter(v44);
      sub_10004A160((uint64_t)v15, (uint64_t)v18, &qword_1011A2D58);
      v46 = &v18[*(int *)(v16 + 36)];
      *(_QWORD *)v46 = v44;
      v46[8] = v45;
      sub_10004FF60((uint64_t)v15, &qword_1011A2D58);
      v47 = (uint64_t)v96;
      v48 = (uint64_t)v102;
      if (qword_10119BA70 != -1)
        swift_once(&qword_10119BA70, sub_1001BF4F4);
      v49 = qword_10124C998;
      v50 = (char *)v9 + *(int *)(v98 + 20);
      v51 = enum case for RoundedCornerStyle.continuous(_:);
      v52 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
      *v9 = v49;
      v9[1] = v49;
      v53 = (uint64_t)v100;
      v54 = (uint64_t)&v100[*(int *)(v97 + 36)];
      sub_10005B704((uint64_t)v9, v54, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v54 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011C9530) + 36)) = 256;
      sub_10004A160((uint64_t)v18, v53, &qword_1011A4948);
      sub_10005B748((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v55 = sub_10004FF60((uint64_t)v18, &qword_1011A4948);
      v56 = static Edge.Set.top.getter(v55);
      v57 = v94;
      v58 = v103;
      sub_100824BE4(v103);
      v59 = *(_QWORD *)(v57 + 24);
      v60 = swift_getKeyPath(&unk_100EAD410);
      v61 = swift_getKeyPath(&unk_100EAD438);
      swift_retain(v59);
      static Published.subscript.getter(&v112, v62, v60, v61);
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      v63 = sub_1001C1830(v58, v112);
      sub_10004FF60(v58, (uint64_t *)&unk_1011A33B8);
      v64 = EdgeInsets.init(_all:)(v63);
      v66 = v65;
      v68 = v67;
      v70 = v69;
      sub_10004A160(v53, v48, &qword_1011A4950);
      v71 = v48 + *(int *)(v99 + 36);
      *(_BYTE *)v71 = v56;
      *(double *)(v71 + 8) = v64;
      *(_QWORD *)(v71 + 16) = v66;
      *(_QWORD *)(v71 + 24) = v68;
      *(_QWORD *)(v71 + 32) = v70;
      *(_BYTE *)(v71 + 40) = 0;
      v72 = sub_10004FF60(v53, &qword_1011A4950);
      v73 = static Edge.Set.bottom.getter(v72);
      if (qword_10119BA68 != -1)
        swift_once(&qword_10119BA68, sub_1001BF4D4);
      v74 = EdgeInsets.init(_all:)(*(double *)&qword_10124C990);
      v76 = v75;
      v78 = v77;
      v80 = v79;
      v81 = v106;
      sub_10004A160(v48, v106, &qword_1011A4958);
      v82 = v105;
      v83 = v81 + *(int *)(v105 + 36);
      *(_BYTE *)v83 = v73;
      *(double *)(v83 + 8) = v74;
      *(_QWORD *)(v83 + 16) = v76;
      *(_QWORD *)(v83 + 24) = v78;
      *(_QWORD *)(v83 + 32) = v80;
      *(_BYTE *)(v83 + 40) = 0;
      sub_10004FF60(v48, &qword_1011A4958);
      v84 = *(_QWORD *)(v57 + 8);
      v85 = swift_retain(v84);
      v86 = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v85);
      swift_release(v84);
      v111 = v86 & 1;
      sub_10005B704(v57, v47, type metadata accessor for PlaylistSongSuggestionsView);
      v87 = *(unsigned __int8 *)(v107 + 80);
      v88 = (v87 + 16) & ~v87;
      v89 = swift_allocObject(&unk_1010B4B78, v88 + v108, v87 | 7);
      sub_10005B6C0(v47, v89 + v88, type metadata accessor for PlaylistSongSuggestionsView);
      v90 = sub_10005610C(&qword_1011A4978, &qword_1011A4960, (void (*)(void))sub_1001C1C24);
      v91 = v104;
      View.onChange<A>(of:initial:_:)(&v111, 0, sub_1001C1BD8, v89, v82, &type metadata for Bool, v90, &protocol witness table for Bool);
      swift_release(v89);
      sub_10004FF60(v81, &qword_1011A4960);
      a1 = v95;
      (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v95, v91, v110);
      v34 = 0;
    }
  }
  else
  {
    v34 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v109 + 56))(a1, v34, 1, v110, v28);
}

uint64_t sub_1001B21F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  _QWORD v53[2];
  char v54;

  v50 = a2;
  v48 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  __chkstk_darwin(v48);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v47 = (char *)&v44 - v6;
  v7 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = type metadata accessor for MusicSuggestedSongsViewModel(0);
  v46 = v15;
  v16 = sub_100048748((unint64_t *)&unk_1011D1250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSuggestedSongsViewModel, (uint64_t)&protocol conformance descriptor for MusicSuggestedSongsViewModel);
  v45 = v16;
  swift_retain(v13);
  swift_retain(v14);
  *v9 = ObservedObject.init(wrappedValue:)(v13, v15, v16);
  v9[1] = v17;
  v18 = type metadata accessor for SuggestedSongsDataSource(0);
  v19 = sub_100048748(&qword_1011A49D0, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_100EAD3D4);
  v9[2] = ObservedObject.init(wrappedValue:)(v14, v18, v19);
  v9[3] = v20;
  v21 = (_QWORD *)((char *)v9 + *(int *)(v7 + 24));
  *v21 = swift_getKeyPath(&unk_100EAD590);
  v22 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  v49 = v12;
  sub_10005B6C0((uint64_t)v9, (uint64_t)v12, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  v23 = *(_QWORD *)(a1 + 8);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 40);
  v51 = *(_BYTE *)(a1 + 32);
  v52 = v25;
  swift_retain(v23);
  swift_retain(v24);
  v26 = sub_100007E8C(&qword_1011C4DD0);
  State.projectedValue.getter(v53, v26);
  v27 = v53[0];
  v28 = v53[1];
  v29 = v54;
  v30 = v23;
  v31 = (uint64_t)v47;
  *(_QWORD *)v4 = ObservedObject.init(wrappedValue:)(v30, v46, v45);
  *((_QWORD *)v4 + 1) = v32;
  *((_QWORD *)v4 + 2) = ObservedObject.init(wrappedValue:)(v24, v18, v19);
  *((_QWORD *)v4 + 3) = v33;
  *((_QWORD *)v4 + 4) = v27;
  *((_QWORD *)v4 + 5) = v28;
  v4[48] = v29;
  v34 = v48;
  v35 = &v4[*(int *)(v48 + 28)];
  *(_QWORD *)v35 = swift_getKeyPath(&unk_100EAD5C0);
  v36 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v35, v36, 0);
  v37 = &v4[*(int *)(v34 + 32)];
  *(_QWORD *)v37 = swift_getKeyPath(&unk_100EAD590);
  swift_storeEnumTagMultiPayload(v37, v22, 0);
  sub_10005B6C0((uint64_t)v4, v31, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  if (qword_10119BA80 != -1)
    swift_once(&qword_10119BA80, sub_1001BF628);
  v38 = qword_10124C9A8;
  v39 = (uint64_t)v49;
  sub_10005B704((uint64_t)v49, (uint64_t)v9, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  sub_10005B704(v31, (uint64_t)v4, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v40 = v50;
  sub_10005B704((uint64_t)v9, v50, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  v41 = sub_100007E8C(&qword_1011A49D8);
  sub_10005B704((uint64_t)v4, v40 + *(int *)(v41 + 48), type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v42 = v40 + *(int *)(v41 + 64);
  *(_QWORD *)v42 = v38;
  *(_BYTE *)(v42 + 8) = 0;
  sub_10005B748(v31, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  sub_10005B748(v39, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  sub_10005B748((uint64_t)v4, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  return sub_10005B748((uint64_t)v9, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
}

uint64_t sub_1001B25A4(uint64_t a1, char *a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[9];
  uint64_t v8;

  v3 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v7[1] = *(_BYTE *)(a3 + 32);
  v8 = v4;
  v7[0] = v3;
  v5 = sub_100007E8C(&qword_1011C4DD0);
  return State.wrappedValue.setter(v7, v5);
}

uint64_t sub_1001B25F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  double v24;
  char v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v3 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A4BB8);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A4BC0);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v13 = sub_100007E8C(&qword_1011A4BC8);
  v14 = sub_1001B283C(v1, (uint64_t)&v8[*(int *)(v13 + 44)]);
  v15 = static Edge.Set.leading.getter(v14);
  if (qword_10119BA88 != -1)
    swift_once(&qword_10119BA88, sub_1001BF648);
  v16 = EdgeInsets.init(_all:)(*(double *)&qword_10124C9B0);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  sub_10004A160((uint64_t)v8, (uint64_t)v11, &qword_1011A4BB8);
  v23 = &v11[*(int *)(v9 + 36)];
  *v23 = v15;
  *((double *)v23 + 1) = v16;
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = v20;
  *((_QWORD *)v23 + 4) = v22;
  v23[40] = 0;
  sub_10004FF60((uint64_t)v8, &qword_1011A4BB8);
  v25 = static Edge.Set.trailing.getter(v24);
  type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  sub_100824BE4((uint64_t)v5);
  v26 = sub_1001C3798((uint64_t)v5);
  sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011A33B8);
  v27 = EdgeInsets.init(_all:)(v26);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_10004A160((uint64_t)v11, a1, &qword_1011A4BC0);
  v34 = a1 + *(int *)(sub_100007E8C(&qword_1011A4BD0) + 36);
  *(_BYTE *)v34 = v25;
  *(double *)(v34 + 8) = v27;
  *(_QWORD *)(v34 + 16) = v29;
  *(_QWORD *)(v34 + 24) = v31;
  *(_QWORD *)(v34 + 32) = v33;
  *(_BYTE *)(v34 + 40) = 0;
  return sub_10004FF60((uint64_t)v11, &qword_1011A4BC0);
}

uint64_t sub_1001B283C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *refreshed;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD v125[3];
  __int128 v126;
  _OWORD v127[2];
  __int128 v128;
  __int128 v129;
  __int128 v130;
  _OWORD v131[2];
  uint64_t v132;
  char v133;
  char v134;
  char v135;
  char v136;
  __int128 v137;
  __int128 v138;
  _OWORD v139[3];
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;

  v107 = a1;
  v124 = a2;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v122 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v120 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A4BD8);
  __chkstk_darwin(v6);
  v109 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011A4BE0);
  __chkstk_darwin(v108);
  v111 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011A4BE8);
  __chkstk_darwin(v110);
  v112 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011A4BF0);
  __chkstk_darwin(v115);
  v117 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011A4BF8);
  __chkstk_darwin(v118);
  v119 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011A4C00);
  __chkstk_darwin(v12);
  v123 = (uint64_t)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v116 = (char *)&v103 - v15;
  __chkstk_darwin(v16);
  v121 = (uint64_t)&v103 - v17;
  v18 = type metadata accessor for AccessibilityChildBehavior(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100007E8C(&qword_1011A4C08);
  v22 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v24 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011A4C10);
  __chkstk_darwin(v104);
  v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100007E8C(&qword_1011A4C18);
  __chkstk_darwin(v106);
  v114 = (uint64_t)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v113 = (uint64_t)&v103 - v29;
  v31 = static HorizontalAlignment.leading.getter(v30);
  sub_1001B3234((uint64_t)&v137);
  v136 = 0;
  v135 = v138;
  v134 = BYTE8(v139[2]);
  v133 = v141;
  v126 = (unint64_t)v31;
  LOBYTE(v127[0]) = 0;
  *(_OWORD *)((char *)v127 + 8) = v137;
  BYTE8(v127[1]) = v138;
  *(_QWORD *)&v128 = *((_QWORD *)&v138 + 1);
  BYTE8(v128) = v139[0];
  v129 = *(_OWORD *)((char *)v139 + 8);
  v130 = *(_OWORD *)((char *)&v139[1] + 8);
  LOBYTE(v131[0]) = BYTE8(v139[2]);
  *(_OWORD *)((char *)v131 + 8) = v140;
  BYTE8(v131[1]) = v141;
  v132 = *((_QWORD *)&v141 + 1);
  static AccessibilityChildBehavior.combine.getter(v32);
  v33 = sub_100007E8C(&qword_1011A4C20);
  v34 = sub_100049F28(&qword_1011A4C28, &qword_1011A4C20, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v21, v33, v34);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v141 = v131[0];
  v142 = v131[1];
  v143 = v132;
  v139[0] = v127[1];
  v139[1] = v128;
  v139[2] = v129;
  v140 = v130;
  v137 = v126;
  v138 = v127[0];
  v35 = sub_1001C3A4C((uint64_t)&v137);
  v36 = static Edge.Set.top.getter(v35);
  if (qword_10119BA90 != -1)
    swift_once(&qword_10119BA90, sub_1001BF668);
  v37 = EdgeInsets.init(_all:)(*(double *)&qword_10124C9B8);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v44 = v105;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v26, v24, v105);
  v45 = &v26[*(int *)(v104 + 36)];
  *v45 = v36;
  *((double *)v45 + 1) = v37;
  *((_QWORD *)v45 + 2) = v39;
  *((_QWORD *)v45 + 3) = v41;
  *((_QWORD *)v45 + 4) = v43;
  v45[40] = 0;
  v46 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v44);
  v47 = static Edge.Set.bottom.getter(v46);
  if (qword_10119BA98 != -1)
    swift_once(&qword_10119BA98, sub_1001BF688);
  v48 = EdgeInsets.init(_all:)(*(double *)&qword_10124C9C0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = v114;
  sub_10004A160((uint64_t)v26, v114, &qword_1011A4C10);
  v56 = v55 + *(int *)(v106 + 36);
  *(_BYTE *)v56 = v47;
  *(double *)(v56 + 8) = v48;
  *(_QWORD *)(v56 + 16) = v50;
  *(_QWORD *)(v56 + 24) = v52;
  *(_QWORD *)(v56 + 32) = v54;
  *(_BYTE *)(v56 + 40) = 0;
  sub_10004FF60((uint64_t)v26, &qword_1011A4C10);
  v57 = v113;
  sub_100065228(v55, v113, &qword_1011A4C18);
  v58 = v109;
  v59 = sub_1001B3684(v107, v109);
  v61 = (uint64_t)v111;
  v60 = (uint64_t)v112;
  if (qword_10119BAC0 != -1)
    v59 = swift_once(&qword_10119BAC0, sub_1001BF71C);
  v62 = qword_10124C9E8;
  v63 = static Alignment.center.getter(v59);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v126, v62, 0, 0, 1, 0, 1, v62, 0, 0, 1, 0, 1, v63, v64);
  sub_10004A160(v58, v61, &qword_1011A4BD8);
  v65 = (_OWORD *)(v61 + *(int *)(v108 + 36));
  v66 = v130;
  v65[4] = v129;
  v65[5] = v66;
  v65[6] = v131[0];
  v67 = v127[0];
  *v65 = v126;
  v65[1] = v67;
  v68 = v128;
  v65[2] = v127[1];
  v65[3] = v68;
  v69 = sub_10004FF60(v58, &qword_1011A4BD8);
  v70 = static Edge.Set.top.getter(v69);
  if (qword_10119BAC8 != -1)
    swift_once(&qword_10119BAC8, sub_1001BF73C);
  v71 = EdgeInsets.init(_all:)(*(double *)&qword_10124C9F0);
  v73 = v72;
  v75 = v74;
  v77 = v76;
  sub_10004A160(v61, v60, &qword_1011A4BE0);
  v78 = v60 + *(int *)(v110 + 36);
  *(_BYTE *)v78 = v70;
  *(double *)(v78 + 8) = v71;
  *(_QWORD *)(v78 + 16) = v73;
  *(_QWORD *)(v78 + 24) = v75;
  *(_QWORD *)(v78 + 32) = v77;
  *(_BYTE *)(v78 + 40) = 0;
  sub_10004FF60(v61, &qword_1011A4BE0);
  if (qword_10119BB50 != -1)
    swift_once(&qword_10119BB50, sub_1001BF95C);
  v79 = qword_10124CAA8;
  v80 = v117;
  sub_10004A160(v60, v117, &qword_1011A4BE8);
  v81 = v115;
  *(_QWORD *)(v80 + *(int *)(v115 + 36)) = v79;
  swift_retain(v79);
  sub_10004FF60(v60, &qword_1011A4BE8);
  v82 = v120;
  v83 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100E30AA0);
  v84 = v122;
  static Locale.current.getter(v83);
  v85 = String.init(localized:table:bundle:locale:comment:)(v82, 0, 0, 0, v84, "Accessibility label for suggested songs refresh button", 54, 2);
  v87 = v86;
  v125[0] = v85;
  v125[1] = v86;
  v88 = sub_1001C3ABC();
  v89 = sub_100055B68();
  v90 = (uint64_t)v119;
  View.accessibilityLabel<A>(_:)(v125, v81, &type metadata for String, v88, v89);
  swift_bridgeObjectRelease(v87);
  sub_10004FF60(v80, &qword_1011A4BF0);
  refreshed = AccessibilityIdentifier.playlistSuggestedSongsRefreshButton.unsafeMutableAddressor();
  v92 = *refreshed;
  v93 = refreshed[1];
  v94 = sub_1001C3D04();
  swift_bridgeObjectRetain();
  v95 = v116;
  View.accessibilityIdentifier(_:)(v92, v93, v118, v94);
  swift_bridgeObjectRelease(v93);
  sub_10004FF60(v90, &qword_1011A4BF8);
  v96 = (uint64_t)v95;
  v97 = v121;
  sub_100065228(v96, v121, &qword_1011A4C00);
  sub_10004A160(v57, v55, &qword_1011A4C18);
  v98 = v123;
  sub_10004A160(v97, v123, &qword_1011A4C00);
  v99 = v124;
  sub_10004A160(v55, v124, &qword_1011A4C18);
  v100 = sub_100007E8C(&qword_1011A4CA0);
  v101 = v99 + *(int *)(v100 + 48);
  *(_QWORD *)v101 = 0;
  *(_BYTE *)(v101 + 8) = 1;
  sub_10004A160(v98, v99 + *(int *)(v100 + 64), &qword_1011A4C00);
  sub_10004FF60(v97, &qword_1011A4C00);
  sub_10004FF60(v57, &qword_1011A4C18);
  sub_10004FF60(v98, &qword_1011A4C00);
  return sub_10004FF60(v55, &qword_1011A4C18);
}

void sub_1001B3234(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[12];
  int v68;
  unint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = String.LocalizationValue.init(stringLiteral:)(0x6574736567677553, 0xEF73676E6F532064);
  static Locale.current.getter(v8);
  v70 = v4;
  v74 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Title for suggested songs module", 32, 2);
  v75 = v9;
  v69 = sub_100055B68();
  v10 = Text.init<A>(_:)(&v74, &type metadata for String, v69);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  if (qword_10119BAA8 != -1)
    swift_once(&qword_10119BAA8, sub_1001BF6C8);
  v17 = v14 & 1;
  v18 = Text.font(_:)(qword_10124C9D0, v10, v12, v14 & 1, v16);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_100055BAC(v10, v12, v17);
  swift_bridgeObjectRelease(v16);
  if (qword_10119BAB0 != -1)
    swift_once(&qword_10119BAB0, sub_1001BF6E4);
  v25 = Text.fontWeight(_:)(qword_10124C9D8, 0, v18, v20, v22 & 1, v24);
  v71 = v26;
  v72 = v25;
  v28 = v27;
  v73 = v29;
  sub_100055BAC(v18, v20, v22 & 1);
  swift_bridgeObjectRelease(v24);
  v68 = static Edge.Set.bottom.getter(v30);
  if (qword_10119BAA0 != -1)
    swift_once(&qword_10119BAA0, sub_1001BF6A8);
  v31 = EdgeInsets.init(_all:)(*(double *)&qword_10124C9C8);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E30B30);
  v39 = v70;
  static Locale.current.getter(v38);
  v74 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v39, 0, 0, 256);
  v75 = v40;
  v41 = Text.init<A>(_:)(&v74, &type metadata for String, v69);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  if (qword_10119BAB8 != -1)
    swift_once(&qword_10119BAB8, sub_1001BF700);
  v48 = v45 & 1;
  v49 = v28 & 1;
  v50 = Text.font(_:)(qword_10124C9E0, v41, v43, v48, v47);
  v52 = v51;
  v54 = v53;
  v56 = v55 & 1;
  sub_100055BAC(v41, v43, v48);
  swift_bridgeObjectRelease(v47);
  LODWORD(v74) = static HierarchicalShapeStyle.secondary.getter(v57);
  v58 = Text.foregroundStyle<A>(_:)(&v74, v50, v52, v56, v54, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v60 = v59;
  v62 = v61;
  LOBYTE(v48) = v63 & 1;
  sub_100055BAC(v50, v52, v56);
  swift_bridgeObjectRelease(v54);
  LOBYTE(v74) = v49;
  v65 = v71;
  v64 = v72;
  *(_QWORD *)a1 = v72;
  *(_QWORD *)(a1 + 8) = v65;
  *(_BYTE *)(a1 + 16) = v49;
  v66 = v73;
  *(_QWORD *)(a1 + 24) = v73;
  *(_BYTE *)(a1 + 32) = v68;
  *(double *)(a1 + 40) = v31;
  *(_QWORD *)(a1 + 48) = v33;
  *(_QWORD *)(a1 + 56) = v35;
  *(_QWORD *)(a1 + 64) = v37;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v58;
  *(_QWORD *)(a1 + 88) = v60;
  *(_BYTE *)(a1 + 96) = v48;
  *(_QWORD *)(a1 + 104) = v62;
  sub_100055BBC(v64, v65, v49);
  swift_bridgeObjectRetain();
  sub_100055BBC(v58, v60, v48);
  swift_bridgeObjectRetain();
  sub_100055BAC(v58, v60, v48);
  swift_bridgeObjectRelease(v62);
  sub_100055BAC(v64, v65, v74);
  swift_bridgeObjectRelease(v66);
}

uint64_t sub_1001B3684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];

  v60 = a2;
  v3 = type metadata accessor for ButtonBorderShape(0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  __chkstk_darwin(v3);
  v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = sub_100007E8C(&qword_1011A4C88);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v50 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C(&qword_1011A4C78);
  __chkstk_darwin(v59);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v53 = (uint64_t)&v49 - v13;
  v57 = sub_100007E8C(&qword_1011A4CA8);
  __chkstk_darwin(v57);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011A4C68);
  v16 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = swift_retain(v20);
  v22 = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v21);
  v23 = swift_release(v20);
  if ((v22 & 1) != 0)
  {
    ProgressView<>.init<>()(v23);
    v24 = v58;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v15, v18, v58);
    swift_storeEnumTagMultiPayload(v15, v57, 0);
    v25 = sub_100049F28(&qword_1011A4C60, &qword_1011A4C68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v26 = sub_1001C3C68();
    _ConditionalContent<>.init(storage:)(v15, v24, v59, v25, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v24);
  }
  else
  {
    sub_10005B704(v19, (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
    v28 = *(unsigned __int8 *)(v6 + 80);
    v29 = (v28 + 16) & ~v28;
    v30 = swift_allocObject(&unk_1010B4C40, v29 + v7, v28 | 7);
    sub_10005B6C0((uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
    v31 = sub_100007E8C(&qword_1011A4CB0);
    v32 = sub_100044B54(&qword_1011A4CB8);
    v33 = sub_1001C3E78();
    v61[0] = v32;
    v61[1] = v33;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v61, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v35 = v50;
    v36 = Button.init(action:label:)(sub_1001C3E64, v30, sub_1001B3F5C, 0, v31, OpaqueTypeConformance2);
    v37 = v54;
    static ButtonBorderShape.circle.getter(v36);
    KeyPath = swift_getKeyPath(&unk_100EAD6C8);
    v39 = v59;
    v40 = (uint64_t *)&v11[*(int *)(v59 + 36)];
    v41 = sub_100007E8C(&qword_1011A0610);
    v43 = v55;
    v42 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))((char *)v40 + *(int *)(v41 + 28), v37, v56);
    *v40 = KeyPath;
    v45 = v51;
    v44 = v52;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v11, v35, v52);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v42);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v44);
    v46 = v53;
    sub_100065228((uint64_t)v11, v53, &qword_1011A4C78);
    sub_10004A160(v46, (uint64_t)v15, &qword_1011A4C78);
    swift_storeEnumTagMultiPayload(v15, v57, 1);
    v47 = sub_100049F28(&qword_1011A4C60, &qword_1011A4C68, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v48 = sub_1001C3C68();
    _ConditionalContent<>.init(storage:)(v15, v58, v39, v47, v48);
    return sub_10004FF60(v46, &qword_1011A4C78);
  }
}

uint64_t sub_1001B3ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  _BYTE v54[48];

  v1 = v0;
  v2 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v50 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = v3;
  v52 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v4);
  v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - v10;
  v12 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v15 = qword_10124C708;
  KeyPath = swift_getKeyPath(&unk_100EAD758);
  v17 = swift_getKeyPath(&unk_100EAD780);
  static Published.subscript.getter(v53, v15, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  if (LOBYTE(v53[0]) == 1)
    sub_10006754C();
  v18 = sub_100007E8C(&qword_1011A4CD8);
  inited = swift_initStackObject(v18, v54);
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  *(_QWORD *)(inited + 32) = sub_100041F44((uint64_t)&off_1010AA968);
  *(_QWORD *)(inited + 40) = sub_100041F44((uint64_t)&off_1010AA9C8);
  v20 = type metadata accessor for URL(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v22 = sub_10047D564(inited);
  swift_bridgeObjectRelease(inited);
  v24 = Playlist.id.getter(v23);
  v26 = v25;
  v21(v8, 1, 1, v20);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(0xD000000000000014, 0x8000000100E2AD00, 5, 47, (uint64_t)v11, (uint64_t)v22, 0, 9, (uint64_t)v14, 0, 0, 65280, v24, v26, 0x7473696C79616C50, 0xE800000000000000, (uint64_t)v8, 0, 1,
    0,
    0,
    0);
  v27 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v29 = v28;
  v31 = v30;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v32 = qword_10124C790;
  swift_retain(qword_10124C790);
  v33 = GroupActivitiesManager.hasJoined.getter();
  v34 = GroupActivitiesManager.participantsCount.getter();
  v35 = (uint64_t *)(v32 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v32 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v53, 0, 0);
  v36 = *v35;
  v37 = swift_release(v32);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v27) + 0xB8))(v14, v29, v31, v33 & 1, v34, v36, v37);

  swift_bridgeObjectRelease(v31);
  v38 = type metadata accessor for TaskPriority(0);
  v39 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v49, 1, 1, v38);
  v40 = v52;
  sub_10005B704(v1, v52, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  type metadata accessor for MainActor(0);
  v42 = static MainActor.shared.getter(v41);
  v43 = *(unsigned __int8 *)(v50 + 80);
  v44 = (v43 + 32) & ~v43;
  v45 = swift_allocObject(&unk_1010B4C68, v44 + v51, v43 | 7);
  *(_QWORD *)(v45 + 16) = v42;
  *(_QWORD *)(v45 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0(v40, v45 + v44, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  v46 = sub_100166D14(v39, (uint64_t)&unk_1011A4CE8, v45);
  swift_release(v46);
  return sub_10005B748((uint64_t)v14, type metadata accessor for MetricsEvent.Click);
}

double sub_1001B3F5C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  v0 = Image.init(systemName:)(0x6C632E776F727261, 0xEF657369776B636FLL);
  v2 = static Color.primary.getter(v1);
  KeyPath = swift_getKeyPath(&unk_100EAD6F8);
  if (qword_10119BAD0 != -1)
    swift_once(&qword_10119BAD0, sub_1001BF75C);
  v4 = qword_10124C9F8;
  v5 = swift_getKeyPath(&unk_100EAD728);
  v6 = qword_10119BAD8;
  swift_retain(v4);
  if (v6 != -1)
    swift_once(&qword_10119BAD8, sub_1001BF778);
  v7 = qword_10124CA00;
  v8 = sub_100007E8C(&qword_1011A4CB8);
  v9 = sub_1001C3E78();
  View.fontWeight(_:)(v7, 0, v8, v9);
  swift_release(v4);
  swift_release(v5);
  swift_release(v2);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v0).n128_u64[0];
  return result;
}

uint64_t sub_1001B40BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_1001B4128, v7, v8);
}

uint64_t sub_1001B4128()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0[4] + 8);
  v0[8] = v1;
  v2 = *((unsigned int *)&async function pointer to dispatch thunk of MusicSuggestedSongsViewModel.refresh() + 1);
  v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MusicSuggestedSongsViewModel.refresh()
                         + async function pointer to dispatch thunk of MusicSuggestedSongsViewModel.refresh());
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_1001B419C;
  return v5();
}

uint64_t sub_1001B419C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1001B4238;
  }
  else
  {
    swift_release(v2[8]);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1001B4208;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001B4208()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B4238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  if (qword_10119CB10 != -1)
    swift_once(&qword_10119CB10, sub_10096883C);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = type metadata accessor for Logger(0);
  sub_100048B14(v3, (uint64_t)qword_10124DDD0);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 80);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v16 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 16) = v8;
    swift_errorRetain(v8);
    v11 = sub_100007E8C(&qword_1011A14B0);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    v14 = v13;
    *(_QWORD *)(v0 + 24) = sub_100322200(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to refresh suggested songs with error=%{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 80));
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B4440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t (**v63)();
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (**v72)();
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v137 = a3;
  v116 = type metadata accessor for DynamicTypeSize(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (uint64_t)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A4B50);
  __chkstk_darwin(v6);
  v119 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A4B58);
  v135 = *(_QWORD *)(v8 - 8);
  v136 = v8;
  __chkstk_darwin(v8);
  v118 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v117 = (uint64_t)&v112 - v11;
  v128 = sub_100007E8C(&qword_1011A4B60);
  __chkstk_darwin(v128);
  v131 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_10119E480);
  __chkstk_darwin(v13);
  v112 = (uint64_t)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v129 = (char *)&v112 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v112 - v18;
  v20 = sub_100007E8C(&qword_1011A4B68);
  __chkstk_darwin(v20);
  v134 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v133 = (char *)&v112 - v23;
  v113 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  v141 = *(_QWORD *)(v113 - 8);
  v24 = *(_QWORD *)(v141 + 64);
  __chkstk_darwin(v113);
  v127 = (uint64_t *)((char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for Song(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v125 = v27;
  v28 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100007E8C(&qword_1011A4B70);
  __chkstk_darwin(v32);
  v34 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_100007E8C(&qword_1011A4B78);
  __chkstk_darwin(v121);
  v124 = (char *)&v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100007E8C(&qword_1011A4B80);
  __chkstk_darwin(v123);
  v132 = (uint64_t)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v122 = (uint64_t)&v112 - v38;
  v40 = __chkstk_darwin(v39);
  v142 = a1;
  v143 = (uint64_t)&v112 - v41;
  v139 = v26;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v126 = v25;
  v43 = v25;
  v44 = v42;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v42)(v28, a1, v43, v40);
  v45 = *(_QWORD *)(a2 + 8);
  v46 = *(_QWORD *)(a2 + 24);
  swift_retain(v45);
  swift_retain(v46);
  v138 = v28;
  sub_1001B4FBC((uint64_t)v28, v45, v46, (uint64_t)v31);
  v47 = *(_QWORD *)(a2 + 40);
  v48 = *(_BYTE *)(a2 + 48);
  *(_QWORD *)&v145 = *(_QWORD *)(a2 + 32);
  *((_QWORD *)&v145 + 1) = v47;
  LOBYTE(v146) = v48;
  v49 = sub_100007E8C(&qword_1011A4B88);
  Binding.wrappedValue.getter(&v144, v49);
  v130 = v19;
  v140 = v44;
  if (v144 == 1)
  {
    if (qword_10119BB80 != -1)
      swift_once(&qword_10119BB80, sub_1001BFC10);
    v50 = &qword_10124CAB8;
  }
  else
  {
    if (qword_10119BB68 != -1)
      swift_once(&qword_10119BB68, sub_1001BFA90);
    v50 = &qword_10124CAB0;
  }
  v51 = *v50;
  swift_retain(*v50);
  sub_10005B704((uint64_t)v31, (uint64_t)v34, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  *(_QWORD *)&v34[*(int *)(v32 + 36)] = v51;
  sub_10005B748((uint64_t)v31, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v52 = (void (*)(_QWORD, _QWORD, _QWORD))v127;
  sub_10005B704(a2, (uint64_t)v127, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v53 = *(unsigned __int8 *)(v141 + 80);
  v141 = a2;
  v54 = (v53 + 16) & ~v53;
  v55 = v54 + v24;
  v56 = (uint64_t)v34;
  v120 = v53 | 7;
  v57 = swift_allocObject(&unk_1010B4BF0, v54 + v24, v53 | 7);
  sub_10005B6C0((uint64_t)v52, v57 + v54, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v58 = (uint64_t)v124;
  v59 = &v124[*(int *)(v121 + 36)];
  v60 = v142;
  v61 = v126;
  v62 = v140;
  v140(v59, v142, v126);
  v63 = (uint64_t (**)())&v59[*(int *)(type metadata accessor for HostedTaggedView(0) + 20)];
  *v63 = sub_1001C357C;
  v63[1] = (uint64_t (*)())v57;
  sub_100065228(v56, v58, &qword_1011A4B70);
  sub_10005B704(v141, (uint64_t)v52, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v64 = v138;
  v62(v138, v60, v61);
  v65 = (_QWORD *)v139;
  v66 = *(unsigned __int8 *)(v139 + 80);
  v67 = (v55 + v66) & ~v66;
  v68 = swift_allocObject(&unk_1010B4C18, v67 + v125, v120 | v66);
  v69 = v68 + v54;
  v70 = v141;
  sub_10005B6C0((uint64_t)v52, v69, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v127 = (uint64_t *)v65[4];
  ((void (*)(uint64_t, char *, uint64_t))v127)(v68 + v67, v64, v61);
  v71 = v122;
  sub_10004A160(v58, v122, &qword_1011A4B78);
  v72 = (void (**)())(v71 + *(int *)(v123 + 36));
  *v72 = sub_1001C3738;
  v72[1] = (void (*)())v68;
  v72[2] = 0;
  v72[3] = 0;
  sub_10004FF60(v58, &qword_1011A4B78);
  sub_100065228(v71, v143, &qword_1011A4B80);
  v73 = (uint64_t)v130;
  v62(v130, v142, v61);
  v74 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v65[7];
  v75 = 1;
  v74(v73, 0, 1, v61);
  v76 = *(_QWORD *)(v70 + 8);
  v77 = swift_retain(v76);
  v78 = dispatch thunk of MusicSuggestedSongsViewModel.suggestedSongs.getter(v77);
  v79 = swift_release(v76);
  v80 = *(_QWORD *)(v78 + 16);
  if (v80)
  {
    v81 = v78 + ((v66 + 32) & ~v66) + v65[9] * (v80 - 1);
    v82 = (uint64_t)v129;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v140)(v129, v81, v61, v79);
    v75 = 0;
  }
  else
  {
    v82 = (uint64_t)v129;
  }
  v74(v82, v75, 1, v61);
  swift_bridgeObjectRelease(v78);
  v83 = v131;
  v84 = v131 + *(int *)(v128 + 48);
  sub_10004A160(v73, v131, &qword_10119E480);
  sub_10004A160(v82, v84, &qword_10119E480);
  v85 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v65[6];
  if (v85(v83, 1, v61) == 1)
  {
    sub_10004FF60(v82, &qword_10119E480);
    sub_10004FF60(v73, &qword_10119E480);
    if (v85(v84, 1, v61) == 1)
    {
      sub_10004FF60(v83, &qword_10119E480);
      v86 = 1;
      v87 = v136;
      v88 = (uint64_t)v133;
      goto LABEL_23;
    }
  }
  else
  {
    v89 = v112;
    sub_10004A160(v83, v112, &qword_10119E480);
    if (v85(v84, 1, v61) != 1)
    {
      v90 = v138;
      ((void (*)(char *, uint64_t, uint64_t))v127)(v138, v84, v61);
      v91 = sub_100048748(&qword_1011A3968, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v92 = dispatch thunk of static Equatable.== infix(_:_:)(v89, v90, v61, v91);
      v93 = *(void (**)(char *, uint64_t))(v139 + 8);
      v93(v90, v61);
      sub_10004FF60(v82, &qword_10119E480);
      sub_10004FF60(v73, &qword_10119E480);
      v93((char *)v89, v61);
      sub_10004FF60(v83, &qword_10119E480);
      v88 = (uint64_t)v133;
      if ((v92 & 1) != 0)
      {
        v86 = 1;
        v87 = v136;
        goto LABEL_23;
      }
      goto LABEL_19;
    }
    sub_10004FF60(v82, &qword_10119E480);
    sub_10004FF60(v73, &qword_10119E480);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v89, v61);
  }
  sub_10004FF60(v83, &qword_1011A4B60);
  v88 = (uint64_t)v133;
LABEL_19:
  v94 = v119;
  sub_1001B5864(v119);
  v95 = v114;
  v96 = sub_1008237B8(v114);
  v97 = DynamicTypeSize.isAccessibilitySize.getter(v96);
  v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v115 + 8))(v95, v116);
  if ((v97 & 1) != 0)
    v99 = 0x4038000000000000;
  else
    v99 = 0x4010000000000000;
  v100 = static Alignment.center.getter(v98);
  _FrameLayout.init(width:height:alignment:)(&v145, 0, 1, v99, 0, v100, v101);
  v102 = v118;
  sub_10004A160(v94, v118, &qword_1011A4B50);
  v87 = v136;
  v103 = (_OWORD *)(v102 + *(int *)(v136 + 36));
  v104 = v146;
  *v103 = v145;
  v103[1] = v104;
  v103[2] = v147;
  sub_10004FF60(v94, &qword_1011A4B50);
  v105 = v117;
  sub_100065228(v102, v117, &qword_1011A4B58);
  sub_100065228(v105, v88, &qword_1011A4B58);
  v86 = 0;
LABEL_23:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v88, v86, 1, v87);
  v106 = v143;
  v107 = v132;
  sub_10004A160(v143, v132, &qword_1011A4B80);
  v108 = v134;
  sub_10004A160(v88, v134, &qword_1011A4B68);
  v109 = v137;
  sub_10004A160(v107, v137, &qword_1011A4B80);
  v110 = sub_100007E8C(&qword_1011A4B90);
  sub_10004A160(v108, v109 + *(int *)(v110 + 48), &qword_1011A4B68);
  sub_10004FF60(v88, &qword_1011A4B68);
  sub_10004FF60(v106, &qword_1011A4B80);
  sub_10004FF60(v108, &qword_1011A4B68);
  return sub_10004FF60(v107, &qword_1011A4B80);
}

uint64_t sub_1001B4FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  _BYTE v52[24];

  v8 = sub_100007E8C((uint64_t *)&unk_1011A8780);
  __chkstk_darwin(v8);
  v10 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v52[-v12 - 8];
  v14 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  v15 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v16 = (_QWORD *)(a4 + v15[5]);
  v17 = type metadata accessor for MusicSuggestedSongsViewModel(0);
  v18 = sub_100048748((unint64_t *)&unk_1011D1250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSuggestedSongsViewModel, (uint64_t)&protocol conformance descriptor for MusicSuggestedSongsViewModel);
  *v16 = ObservedObject.init(wrappedValue:)(a2, v17, v18);
  v16[1] = v19;
  v20 = (_QWORD *)(a4 + v15[6]);
  v21 = type metadata accessor for SuggestedSongsDataSource(0);
  v22 = sub_100048748(&qword_1011A49D0, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_100EAD3D4);
  *v20 = ObservedObject.init(wrappedValue:)(a3, v21, v22);
  v20[1] = v23;
  v24 = (_QWORD *)(a4 + v15[7]);
  if (qword_10119B878 != -1)
    swift_once(&qword_10119B878, sub_10006585C);
  v25 = qword_10124C708;
  v26 = type metadata accessor for PreviewPlaybackController(0);
  v27 = sub_100048748(&qword_1011A4BB0, type metadata accessor for PreviewPlaybackController, (uint64_t)&unk_100EA82F8);
  swift_retain(v25);
  *v24 = ObservedObject.init(wrappedValue:)(v28, v26, v27);
  v24[1] = v29;
  v30 = (_QWORD *)(a4 + v15[8]);
  *v30 = swift_getKeyPath(&unk_100EAD5C0);
  v31 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v30, v31, 0);
  v32 = (_QWORD *)(a4 + v15[9]);
  *v32 = swift_getKeyPath(&unk_100EAD590);
  v33 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = v15[10];
  v35 = MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor();
  sub_10005B704(v35, (uint64_t)v13, type metadata accessor for MetricsEvent.Page);
  v36 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v13, 0, 1, v36);
  sub_10004A160((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1011A8780);
  v37 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v39 = v38;
  v41 = v40;
  v42 = qword_10119B8B8;
  v43 = (id)*v37;
  if (v42 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v44 = (_QWORD *)(a4 + v34);
  v45 = qword_10124C790;
  swift_retain(qword_10124C790);
  v46 = GroupActivitiesManager.hasJoined.getter();
  v47 = GroupActivitiesManager.participantsCount.getter();
  v48 = (uint64_t *)(v45 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v45 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v52, 0, 0);
  v49 = *v48;

  swift_release(v45);
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 6, (uint64_t)v10, v39, v41, 0, 0, v46 & 1, v44, v47, v49);
  return sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011A8780);
}

double sub_1001B5328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t ObjectType;
  char *v13;
  uint64_t v14;
  char *v15;
  void *Strong;
  char *v17;
  char v18[24];
  _BYTE v19[16];

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers);
  v2 = sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  swift_bridgeObjectRetain();
  v3 = static MPMediaLibraryFilteringOptions.none.getter();
  if (v3 == WeakArray.endIndex.getter(v1, v2, v4, v5))
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
    return result;
  }
  do
  {
    v11 = (char *)WeakArray.subscript.getter(v3, v1, v2, v6);
    swift_bridgeObjectRetain();
    v3 = WeakArray.index(after:)(v3);
    swift_bridgeObjectRelease(v1);
    if (v11)
    {
      ObjectType = swift_getObjectType();
      if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver))
        v13 = v11;
      else
        v13 = 0;
      if (!v13)
      {
        v8 = v11;
LABEL_5:

        continue;
      }
      v14 = (uint64_t)&v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
      swift_beginAccess(&v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v18, 0, 0);
      sub_10004A160(v14, (uint64_t)v19, (uint64_t *)&unk_1011B6910);
      if ((v19[8] & 1) != 0)
      {
        v15 = v11;
        sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011B6910);
      }
      else
      {
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v19);
        v17 = v11;
        sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011B6910);
        if (Strong)
        {
          v8 = sub_1007142B4();

LABEL_17:
          sub_10095E0A0(v8);

          goto LABEL_5;
        }
      }
      v8 = 0;
      goto LABEL_17;
    }
  }
  while (v3 != WeakArray.endIndex.getter(v1, v2, v9, v10));
  *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
  return result;
}

void sub_1001B550C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  _QWORD v31[3];
  uint64_t v32;
  _BYTE v33[24];

  v3 = *(_QWORD *)(a1 + 24);
  v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_impressedSongs);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_impressedSongs, v33, 0, 0);
  v5 = *v4;
  swift_bridgeObjectRetain();
  v6 = sub_10075C80C(a2, v5);
  swift_bridgeObjectRelease(v5);
  if ((v6 & 1) == 0)
  {
    v8 = Song.catalogID.getter(v7);
    if (v9)
    {
      v10 = v9;
      v11 = HIBYTE(v9) & 0xF;
      v12 = v8 & 0xFFFFFFFFFFFFLL;
      if ((v10 & 0x2000000000000000) != 0)
        v13 = v11;
      else
        v13 = v8 & 0xFFFFFFFFFFFFLL;
      if (!v13)
      {
        swift_bridgeObjectRelease(v10);
        return;
      }
      if ((v10 & 0x1000000000000000) != 0)
      {
        v15 = sub_1001AF604(v8, v10, 10);
        v17 = v30;
LABEL_46:
        swift_bridgeObjectRelease(v10);
        if ((v17 & 1) == 0)
        {
          swift_beginAccess(v3 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_pendingImpressionCellTags, v31, 33, 0);
          swift_retain(v3);
          sub_100195740(&v32, v15);
          swift_endAccess(v31);
          swift_release(v3);
        }
        return;
      }
      if ((v10 & 0x2000000000000000) == 0)
      {
        if ((v8 & 0x1000000000000000) != 0)
          v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v14 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v8, v10);
        v15 = (uint64_t)sub_1001AF5E4(v14, v12, 10);
        v17 = v16 & 1;
        goto LABEL_46;
      }
      v31[0] = v8;
      v31[1] = v10 & 0xFFFFFFFFFFFFFFLL;
      if (v8 == 43)
      {
        if (!v11)
          goto LABEL_59;
        if (v11 == 1 || (BYTE1(v8) - 48) > 9u)
          goto LABEL_33;
        v15 = (BYTE1(v8) - 48);
        if (v11 != 2)
        {
          if ((BYTE2(v8) - 48) > 9u)
            goto LABEL_33;
          v15 = 10 * (BYTE1(v8) - 48) + (BYTE2(v8) - 48);
          v18 = v11 - 3;
          if (v18)
          {
            v19 = (unsigned __int8 *)v31 + 3;
            while (1)
            {
              v20 = *v19 - 48;
              if (v20 > 9)
                goto LABEL_33;
              v21 = 10 * v15;
              if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                goto LABEL_33;
              v15 = v21 + v20;
              if (__OFADD__(v21, v20))
                goto LABEL_33;
              v17 = 0;
              ++v19;
              if (!--v18)
                goto LABEL_46;
            }
          }
        }
      }
      else
      {
        if (v8 == 45)
        {
          if (v11)
          {
            if (v11 != 1 && (BYTE1(v8) - 48) <= 9u)
            {
              if (v11 == 2)
              {
                v17 = 0;
                v15 = -(uint64_t)(BYTE1(v8) - 48);
                goto LABEL_46;
              }
              if ((BYTE2(v8) - 48) <= 9u)
              {
                v15 = -10 * (BYTE1(v8) - 48) - (BYTE2(v8) - 48);
                v26 = v11 - 3;
                if (!v26)
                  goto LABEL_45;
                v27 = (unsigned __int8 *)v31 + 3;
                while (1)
                {
                  v28 = *v27 - 48;
                  if (v28 > 9)
                    break;
                  v29 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                    break;
                  v15 = v29 - v28;
                  if (__OFSUB__(v29, v28))
                    break;
                  v17 = 0;
                  ++v27;
                  if (!--v26)
                    goto LABEL_46;
                }
              }
            }
LABEL_33:
            v15 = 0;
            v17 = 1;
            goto LABEL_46;
          }
          __break(1u);
LABEL_59:
          __break(1u);
          return;
        }
        if (!v11 || (v8 - 48) > 9u)
          goto LABEL_33;
        v15 = (v8 - 48);
        if (v11 != 1)
        {
          if ((BYTE1(v8) - 48) > 9u)
            goto LABEL_33;
          v15 = 10 * (v8 - 48) + (BYTE1(v8) - 48);
          v22 = v11 - 2;
          if (v22)
          {
            v23 = (unsigned __int8 *)v31 + 2;
            while (1)
            {
              v24 = *v23 - 48;
              if (v24 > 9)
                goto LABEL_33;
              v25 = 10 * v15;
              if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                goto LABEL_33;
              v15 = v25 + v24;
              if (__OFADD__(v25, v24))
                goto LABEL_33;
              v17 = 0;
              ++v23;
              if (!--v22)
                goto LABEL_46;
            }
          }
        }
      }
LABEL_45:
      v17 = 0;
      goto LABEL_46;
    }
  }
}

uint64_t sub_1001B5864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char v28;
  void (*v29)(char *, uint64_t);
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  double v41;
  char v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  double v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v85 = a1;
  v84 = type metadata accessor for UserInterfaceSizeClass(0);
  v82 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v70 = (char *)&v70 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v77);
  v83 = (uint64_t)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v3);
  v71 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v80 = (char *)&v70 - v6;
  __chkstk_darwin(v7);
  v81 = (uint64_t)&v70 - v8;
  __chkstk_darwin(v9);
  v76 = (uint64_t)&v70 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v70 - v16;
  v74 = type metadata accessor for Divider(0);
  v18 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011A4B98);
  __chkstk_darwin(v73);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100007E8C(&qword_1011A4BA0);
  __chkstk_darwin(v75);
  v86 = (uint64_t)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100007E8C(&qword_1011A4BA8);
  __chkstk_darwin(v79);
  v78 = (uint64_t)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = Divider.init()(v25);
  v72 = static Edge.Set.leading.getter(v26);
  if (qword_10119BA88 != -1)
    swift_once(&qword_10119BA88, sub_1001BF648);
  v27 = *(double *)&qword_10124C9B0;
  type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  sub_1008237B8((uint64_t)v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DynamicTypeSize.accessibility3(_:), v11);
  v28 = static DynamicTypeSize.< infix(_:_:)(v17, v14);
  v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v14, v11);
  if ((v28 & 1) != 0)
    v30 = 48.0;
  else
    v30 = 72.0;
  v29(v17, v11);
  v31 = v27 + v30;
  if (qword_10119BB00 != -1)
    swift_once(&qword_10119BB00, sub_1001BF82C);
  v32 = EdgeInsets.init(_all:)(v31 + *(double *)&qword_10124CA58);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = v74;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v20, v74);
  v40 = &v22[*(int *)(v73 + 36)];
  *v40 = v72;
  *((double *)v40 + 1) = v32;
  *((_QWORD *)v40 + 2) = v34;
  *((_QWORD *)v40 + 3) = v36;
  *((_QWORD *)v40 + 4) = v38;
  v40[40] = 0;
  v41 = (*(double (**)(char *, uint64_t))(v18 + 8))(v20, v39);
  v42 = static Edge.Set.trailing.getter(v41);
  v43 = v76;
  sub_100824BE4(v76);
  v44 = sub_1001C3798(v43);
  sub_10004FF60(v43, (uint64_t *)&unk_1011A33B8);
  v45 = EdgeInsets.init(_all:)(v44);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = v86;
  sub_10004A160((uint64_t)v22, v86, &qword_1011A4B98);
  v53 = v52 + *(int *)(v75 + 36);
  *(_BYTE *)v53 = v42;
  *(double *)(v53 + 8) = v45;
  *(_QWORD *)(v53 + 16) = v47;
  *(_QWORD *)(v53 + 24) = v49;
  *(_QWORD *)(v53 + 32) = v51;
  *(_BYTE *)(v53 + 40) = 0;
  sub_10004FF60((uint64_t)v22, &qword_1011A4B98);
  v54 = v81;
  sub_100824BE4(v81);
  v55 = v82;
  v56 = (uint64_t)v80;
  v57 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v80, enum case for UserInterfaceSizeClass.compact(_:), v84);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v57);
  v58 = v83;
  v59 = v83 + *(int *)(v77 + 48);
  sub_10004A160(v54, v83, (uint64_t *)&unk_1011A33B8);
  sub_10004A160(v56, v59, (uint64_t *)&unk_1011A33B8);
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v60(v58, 1, v57) != 1)
  {
    v62 = v71;
    sub_10004A160(v58, v71, (uint64_t *)&unk_1011A33B8);
    if (v60(v59, 1, v57) != 1)
    {
      v63 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v70, v59, v57);
      v64 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v62, v63, v57, v64);
      v66 = *(void (**)(char *, uint64_t))(v55 + 8);
      v67 = v63;
      v52 = v86;
      v66(v67, v57);
      sub_10004FF60(v56, (uint64_t *)&unk_1011A33B8);
      sub_10004FF60(v54, (uint64_t *)&unk_1011A33B8);
      v66((char *)v62, v57);
      sub_10004FF60(v58, (uint64_t *)&unk_1011A33B8);
      v61 = 0.0;
      if ((v65 & 1) != 0)
        goto LABEL_16;
LABEL_15:
      v61 = 1.0;
      goto LABEL_16;
    }
    sub_10004FF60(v56, (uint64_t *)&unk_1011A33B8);
    sub_10004FF60(v54, (uint64_t *)&unk_1011A33B8);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v62, v57);
LABEL_13:
    sub_10004FF60(v58, &qword_1011A49C0);
    goto LABEL_15;
  }
  sub_10004FF60(v56, (uint64_t *)&unk_1011A33B8);
  sub_10004FF60(v54, (uint64_t *)&unk_1011A33B8);
  if (v60(v59, 1, v57) != 1)
    goto LABEL_13;
  sub_10004FF60(v58, (uint64_t *)&unk_1011A33B8);
  v61 = 0.0;
LABEL_16:
  v68 = v78;
  sub_10004A160(v52, v78, &qword_1011A4BA0);
  *(double *)(v68 + *(int *)(v79 + 36)) = v61;
  sub_10004FF60(v52, &qword_1011A4BA0);
  return sub_100065228(v68, v85, &qword_1011A4BA8);
}

uint64_t sub_1001B5F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(a1);
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(v7);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  sub_100007E8C(&qword_1011A4B28);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = swift_retain(v8);
  v10 = dispatch thunk of MusicSuggestedSongsViewModel.suggestedSongs.getter(v9);
  swift_release(v8);
  v21 = v10;
  sub_10005B704(v3, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1010B4BC8, v12 + v6, v11 | 7);
  sub_10005B6C0((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v14 = sub_100007E8C(&qword_1011B8DE0);
  v15 = sub_100007E8C(&qword_1011A4B30);
  v16 = sub_100049F28(&qword_1011A4B38, &qword_1011B8DE0, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = sub_100049F28(&qword_1011A4B40, &qword_1011A4B30, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v18 = sub_100048748(&qword_1011A4B48, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
  return ForEach<>.init(_:content:)(&v21, sub_1001C33DC, v13, v14, &type metadata for MusicItemID, v15, v16, v17, v18);
}

uint64_t sub_1001B60F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *Strong;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t OpaqueTypeConformance2;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  double v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  char v124;
  double v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  char v161;
  uint64_t v162;
  const char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  __n128 v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _OWORD v252[7];

  v240 = a1;
  v239 = type metadata accessor for AccessibilityActionKind(0);
  v238 = *(_QWORD *)(v239 - 8);
  __chkstk_darwin(v239);
  v237 = (char *)&v198 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = type metadata accessor for AccessibilityTraits(0);
  v228 = *(_QWORD *)(v229 - 8);
  __chkstk_darwin(v229);
  v227 = (char *)&v198 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for AccessibilityChildBehavior(0);
  v225 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v224 = (char *)&v198 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011A4E70);
  __chkstk_darwin(v5);
  v210 = (uint64_t *)((char *)&v198 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v209 = sub_100007E8C(&qword_1011A4E78);
  __chkstk_darwin(v209);
  v212 = (uint64_t)&v198 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100007E8C(&qword_1011A4E80);
  __chkstk_darwin(v211);
  v213 = (char *)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_100007E8C(&qword_1011A4E88);
  __chkstk_darwin(v215);
  v214 = (uint64_t)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100007E8C(&qword_1011A4E90);
  v217 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v216 = (char *)&v198 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_100007E8C(&qword_1011A4E98);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v219 = (char *)&v198 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_100007E8C(&qword_1011A4EA0);
  __chkstk_darwin(v222);
  v223 = (char *)&v198 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_100007E8C(&qword_1011A4EA8);
  __chkstk_darwin(v199);
  v230 = (char *)&v198 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = sub_100007E8C(&qword_1011A4EB0);
  __chkstk_darwin(v233);
  v232 = (char *)&v198 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v236 = (char *)&v198 - v16;
  __chkstk_darwin(v17);
  v235 = (char *)&v198 - v18;
  __chkstk_darwin(v19);
  v234 = (uint64_t)&v198 - v20;
  v21 = type metadata accessor for Locale(0);
  __chkstk_darwin(v21);
  v245 = (char *)&v198 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v23);
  v231 = (char *)&v198 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for ButtonBorderShape(0);
  v207 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v206 = (char *)&v198 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v26);
  v208 = (uint64_t)&v198 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v28);
  v249 = (uint64_t)&v198 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100007E8C(&qword_1011A4C88);
  v31 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v33 = (char *)&v198 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_100007E8C(&qword_1011A4EB8);
  __chkstk_darwin(v200);
  v35 = (char *)&v198 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_100007E8C(&qword_1011A4EC0);
  __chkstk_darwin(v201);
  v37 = (char *)&v198 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100007E8C(&qword_1011A4EC8);
  __chkstk_darwin(v203);
  v39 = (char *)&v198 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100007E8C(&qword_1011A4ED0);
  __chkstk_darwin(v204);
  v205 = (char *)&v198 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100007E8C(&qword_1011A4ED8);
  __chkstk_darwin(v41);
  v244 = (uint64_t)&v198 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = v28;
  v43 = v1;
  sub_100064AC8(*(_QWORD *)(v1 + *(int *)(v28 + 24) + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_presentationSource, (uint64_t)v252);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v252);
  sub_100064B4C((uint64_t)v252);
  if (Strong)
  {
    v243 = sub_10076BBD4();

  }
  else
  {
    v243 = 0;
  }
  v45 = v249;
  sub_10005B704(v43, v249, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v46 = *(unsigned __int8 *)(v29 + 80);
  v47 = (v46 + 16) & ~v46;
  v242 = v47 + v30;
  v247 = v46 | 7;
  v48 = swift_allocObject(&unk_1010B4C90, v47 + v30, v46 | 7);
  v248 = v47;
  sub_10005B6C0(v45, v48 + v47, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v49 = sub_100007E8C(&qword_1011A4CB0);
  v50 = sub_100044B54(&qword_1011A4CB8);
  v51 = sub_1001C3E78();
  *(_QWORD *)&v252[0] = v50;
  *((_QWORD *)&v252[0] + 1) = v51;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v252, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v53 = Button.init(action:label:)(sub_1001C60A0, v48, sub_1001B7BAC, 0, v49, OpaqueTypeConformance2);
  if (qword_10119BAC0 != -1)
    v53 = swift_once(&qword_10119BAC0, sub_1001BF71C);
  v54 = qword_10124C9E8;
  v55 = static Alignment.center.getter(v53);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v252, v54, 0, 0, 1, 0, 1, v54, 0, 0, 1, 0, 1, v55, v56);
  v57 = v202;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v35, v33, v202);
  v58 = &v35[*(int *)(v200 + 36)];
  v59 = v252[5];
  *((_OWORD *)v58 + 4) = v252[4];
  *((_OWORD *)v58 + 5) = v59;
  *((_OWORD *)v58 + 6) = v252[6];
  v60 = v252[1];
  *(_OWORD *)v58 = v252[0];
  *((_OWORD *)v58 + 1) = v60;
  v61 = v252[3];
  *((_OWORD *)v58 + 2) = v252[2];
  *((_OWORD *)v58 + 3) = v61;
  v62 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v57);
  v63 = static Edge.Set.leading.getter(v62);
  v64 = v208;
  v202 = v43 + *(int *)(v241 + 36);
  sub_100824BE4(v208);
  v65 = sub_1001C60F4(v64);
  sub_10004FF60(v64, (uint64_t *)&unk_1011A33B8);
  v66 = EdgeInsets.init(_all:)(v65);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  sub_10004A160((uint64_t)v35, (uint64_t)v37, &qword_1011A4EB8);
  v73 = &v37[*(int *)(v201 + 36)];
  *v73 = v63;
  *((double *)v73 + 1) = v66;
  *((_QWORD *)v73 + 2) = v68;
  *((_QWORD *)v73 + 3) = v70;
  *((_QWORD *)v73 + 4) = v72;
  v73[40] = 0;
  v74 = sub_10004FF60((uint64_t)v35, &qword_1011A4EB8);
  v75 = v206;
  static ButtonBorderShape.circle.getter(v74);
  KeyPath = swift_getKeyPath(&unk_100EAD6C8);
  v77 = v203;
  v78 = (uint64_t *)&v39[*(int *)(v203 + 36)];
  v79 = sub_100007E8C(&qword_1011A0610);
  v80 = v207;
  v81 = v246;
  (*(void (**)(char *, char *, uint64_t))(v207 + 16))((char *)v78 + *(int *)(v79 + 28), v75, v246);
  *v78 = KeyPath;
  sub_10004A160((uint64_t)v37, (uint64_t)v39, &qword_1011A4EC0);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v75, v81);
  sub_10004FF60((uint64_t)v37, &qword_1011A4EC0);
  v207 = (unint64_t)"Preview and add to playlist";
  v82 = v231;
  v83 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E30B50);
  v84 = v245;
  static Locale.current.getter(v83);
  v85 = String.init(localized:table:bundle:locale:comment:)(v82, 0, 0, 0, v84, "Accessibility label for add song to playlist button", 51, 2);
  v87 = v86;
  v250 = v85;
  v251 = v86;
  v88 = sub_1001C63A8();
  v89 = sub_100055B68();
  v90 = (uint64_t)v205;
  v206 = (char *)v89;
  View.accessibilityLabel<A>(_:)(&v250, v77, &type metadata for String, v88, v89);
  swift_bridgeObjectRelease(v87);
  sub_10004FF60((uint64_t)v39, &qword_1011A4EC8);
  v91 = AccessibilityIdentifier.playlistSuggestedSongsCellAddButton.unsafeMutableAddressor();
  v92 = *v91;
  v93 = v91[1];
  v94 = sub_1001C64D0();
  swift_bridgeObjectRetain();
  v95 = v244;
  View.accessibilityIdentifier(_:)(v92, v93, v204, v94);
  swift_bridgeObjectRelease(v93);
  v96 = sub_10004FF60(v90, &qword_1011A4ED0);
  v97 = static VerticalAlignment.center.getter(v96);
  v98 = (uint64_t)v210;
  *v210 = v97;
  *(_QWORD *)(v98 + 8) = 0;
  *(_BYTE *)(v98 + 16) = 0;
  v99 = (char *)(v98 + *(int *)(sub_100007E8C(&qword_1011A4F00) + 44));
  v246 = v43;
  v100 = sub_1001B7D38(v43, v95, (uint64_t)v243, v99);
  v101 = static Edge.Set.vertical.getter(v100);
  if (qword_10119BB48 != -1)
    swift_once(&qword_10119BB48, sub_1001BF93C);
  v102 = EdgeInsets.init(_all:)(*(double *)&qword_10124CAA0);
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v109 = v212;
  sub_10004A160(v98, v212, &qword_1011A4E70);
  v110 = v109 + *(int *)(v209 + 36);
  *(_BYTE *)v110 = v101;
  *(double *)(v110 + 8) = v102;
  *(_QWORD *)(v110 + 16) = v104;
  *(_QWORD *)(v110 + 24) = v106;
  *(_QWORD *)(v110 + 32) = v108;
  *(_BYTE *)(v110 + 40) = 0;
  v111 = sub_10004FF60(v98, &qword_1011A4E70);
  v112 = static Edge.Set.leading.getter(v111);
  v113 = (uint64_t)v213;
  if (qword_10119BA88 != -1)
    swift_once(&qword_10119BA88, sub_1001BF648);
  v114 = *(double *)&qword_10124C9B0;
  if (qword_10119BAE0 != -1)
    swift_once(&qword_10119BAE0, sub_1001BF794);
  v115 = EdgeInsets.init(_all:)(v114 - *(double *)&qword_10124CA08);
  v117 = v116;
  v119 = v118;
  v121 = v120;
  sub_10004A160(v109, v113, &qword_1011A4E78);
  v122 = v113 + *(int *)(v211 + 36);
  *(_BYTE *)v122 = v112;
  *(double *)(v122 + 8) = v115;
  *(_QWORD *)(v122 + 16) = v117;
  *(_QWORD *)(v122 + 24) = v119;
  *(_QWORD *)(v122 + 32) = v121;
  *(_BYTE *)(v122 + 40) = 0;
  sub_10004FF60(v109, &qword_1011A4E78);
  v124 = static Edge.Set.trailing.getter(v123);
  sub_100824BE4(v64);
  v125 = sub_1001C3798(v64);
  sub_10004FF60(v64, (uint64_t *)&unk_1011A33B8);
  if (qword_10119BAE8 != -1)
    swift_once(&qword_10119BAE8, sub_1001BF7B4);
  v126 = EdgeInsets.init(_all:)(v125 - *(double *)&qword_10124CA10);
  v128 = v127;
  v130 = v129;
  v132 = v131;
  v133 = v214;
  sub_10004A160(v113, v214, &qword_1011A4E80);
  v134 = v215;
  v135 = v133 + *(int *)(v215 + 36);
  *(_BYTE *)v135 = v124;
  *(double *)(v135 + 8) = v126;
  *(_QWORD *)(v135 + 16) = v128;
  *(_QWORD *)(v135 + 24) = v130;
  *(_QWORD *)(v135 + 32) = v132;
  *(_BYTE *)(v135 + 40) = 0;
  sub_10004FF60(v113, &qword_1011A4E80);
  v136 = v249;
  sub_10005B704(v246, v249, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v137 = swift_allocObject(&unk_1010B4CB8, v242, v247);
  sub_10005B6C0(v136, v137 + v248, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v138 = sub_10005610C(&qword_1011A4F08, &qword_1011A4E88, (void (*)(void))sub_1001C67EC);
  v139 = v216;
  View.onTapGesture(count:perform:)(1, sub_1001C67D8, v137, v134, v138);
  swift_release(v137);
  v140 = sub_10004FF60(v133, &qword_1011A4E88);
  v141 = v224;
  static AccessibilityChildBehavior.combine.getter(v140);
  v250 = v134;
  v251 = v138;
  v142 = swift_getOpaqueTypeConformance2(&v250, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v143 = v219;
  v144 = v218;
  View.accessibilityElement(children:)(v141, v218, v142);
  (*(void (**)(char *, uint64_t))(v225 + 8))(v141, v226);
  v145 = (*(uint64_t (**)(char *, uint64_t))(v217 + 8))(v139, v144);
  v146 = v227;
  static AccessibilityTraits.isButton.getter(v145);
  v250 = v144;
  v251 = v142;
  v147 = swift_getOpaqueTypeConformance2(&v250, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v148 = (uint64_t)v223;
  v149 = v221;
  View.accessibility(addTraits:)(v146, v221, v147);
  (*(void (**)(char *, uint64_t))(v228 + 8))(v146, v229);
  (*(void (**)(char *, uint64_t))(v220 + 8))(v143, v149);
  v150 = AccessibilityIdentifier.playlistSuggestedSongsCell.unsafeMutableAddressor();
  v151 = *v150;
  v152 = v150[1];
  v153 = sub_1001C6894();
  swift_bridgeObjectRetain();
  v154 = (uint64_t)v230;
  View.accessibilityIdentifier(_:)(v151, v152, v222, v153);
  swift_bridgeObjectRelease(v152);
  v155 = sub_10004FF60(v148, &qword_1011A4EA0);
  v156 = Song.id.getter(v155);
  v158 = v157;
  v159 = sub_100065908(v156, v157);
  v161 = v160;
  LODWORD(v148) = ~v160;
  swift_bridgeObjectRelease(v158);
  if ((_DWORD)v148 && (v161 != 2 || v159))
  {
    v167 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E30C40);
    static Locale.current.getter(v167);
    v163 = "Accessibility hint to stop preview playback";
    v164 = v82;
    v165 = v84;
    v166 = 43;
  }
  else
  {
    v162 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100E30BB0);
    static Locale.current.getter(v162);
    v163 = "Accessibility hint to start preview playback";
    v164 = v82;
    v165 = v84;
    v166 = 44;
  }
  v168 = String.init(localized:table:bundle:locale:comment:)(v164, 0, 0, 0, v165, v163, v166, 2);
  v170 = v169;
  v171 = v82;
  v172 = v199;
  v250 = v168;
  v251 = v169;
  v173 = sub_1001C6990();
  v174 = (uint64_t)v232;
  v175 = v206;
  View.accessibilityHint<A>(_:)(&v250, v172, &type metadata for String, v173, v206);
  swift_bridgeObjectRelease(v170);
  sub_10004FF60(v154, &qword_1011A4EA8);
  v176 = v249;
  sub_10005B704(v246, v249, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v177 = v242;
  v178 = swift_allocObject(&unk_1010B4CE0, v242, v247);
  v179 = sub_10005B6C0(v176, v178 + v248, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v180 = v237;
  static AccessibilityActionKind.default.getter(v179);
  v181 = (uint64_t)v236;
  v182 = v233;
  ModifiedContent<>.accessibilityAction(_:_:)(v180, sub_1001C67D8, v178, v233);
  v183 = swift_release(v178);
  (*(void (**)(char *, uint64_t, __n128))(v238 + 8))(v180, v239, v183);
  sub_10004FF60(v174, &qword_1011A4EB0);
  v184 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, v207 | 0x8000000000000000);
  v185 = v245;
  static Locale.current.getter(v184);
  v250 = String.init(localized:table:bundle:locale:comment:)(v171, 0, 0, 0, v185, "Accessibility text for add song to playlist action", 50, 2);
  v251 = v186;
  v187 = Text.init<A>(_:)(&v250, &type metadata for String, v175);
  v189 = v188;
  v191 = v190;
  v193 = v192 & 1;
  sub_10005B704(v246, v176, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v194 = swift_allocObject(&unk_1010B4D08, v177, v247);
  sub_10005B6C0(v176, v194 + v248, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v195 = (uint64_t)v235;
  ModifiedContent<>.accessibilityAction(named:_:)(v187, v189, v193, v191, sub_1001C60A0, v194, v182);
  swift_release(v194);
  swift_release(v243);
  sub_100055BAC(v187, v189, v193);
  swift_bridgeObjectRelease(v191);
  sub_10004FF60(v181, &qword_1011A4EB0);
  v196 = v234;
  sub_100065228(v195, v234, &qword_1011A4EB0);
  sub_100065228(v196, v240, &qword_1011A4EB0);
  return sub_10004FF60(v244, &qword_1011A4ED8);
}

void sub_1001B750C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[96];
  char v86[56];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v5);
  v80 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v81 = (char *)&v73 - v8;
  v9 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v9);
  v82 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v73 - v15;
  v18 = *(_QWORD *)(v0 + *(int *)(v17 + 20) + 8);
  v19 = swift_retain(v18);
  v20 = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v19);
  swift_release(v18);
  if ((v20 & 1) == 0)
  {
    v76 = v12;
    v77 = v13;
    v78 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v79 = v4;
    if (qword_10119B878 != -1)
      v21 = swift_once(&qword_10119B878, sub_10006585C);
    v22 = Song.id.getter(v21);
    v24 = v23;
    v25 = sub_100065908(v22, v23);
    v27 = v26;
    v28 = ~v26;
    swift_bridgeObjectRelease(v24);
    if (v28 && (v27 != 2 || v25))
      sub_10006754C();
    v30 = Song.catalogID.getter(v29);
    v32 = v31;
    v33 = sub_10005B704(v1, (uint64_t)v16, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    if (!v32)
    {
      v30 = Song.id.getter(v33);
      v32 = v34;
    }
    v74 = v30;
    sub_10005B748((uint64_t)v16, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v35 = sub_100007E8C(&qword_1011A4CD8);
    inited = swift_initStackObject(v35, v86);
    v75 = xmmword_100EA7A80;
    *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
    v37 = sub_100007E8C(&qword_1011AD3F0);
    v38 = swift_initStackObject(v37, v85);
    *(_OWORD *)(v38 + 16) = v75;
    *(_QWORD *)(v38 + 32) = 25705;
    *(_QWORD *)(v38 + 40) = 0xE200000000000000;
    *(_QWORD *)(v38 + 48) = v30;
    *(_QWORD *)(v38 + 56) = v32;
    strcpy((char *)(v38 + 64), "locationType");
    *(_BYTE *)(v38 + 77) = 0;
    *(_WORD *)(v38 + 78) = -5120;
    *(_QWORD *)(v38 + 80) = 0x657449666C656853;
    *(_QWORD *)(v38 + 88) = 0xE90000000000006DLL;
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 32) = sub_100041F44(v38);
    *(_QWORD *)(inited + 40) = sub_100041F44((uint64_t)&off_1010AAA50);
    v39 = swift_initStackObject(v37, &v84);
    *(_OWORD *)(v39 + 16) = xmmword_100EA7BA0;
    *(_QWORD *)(v39 + 32) = 1684957547;
    *(_QWORD *)(v39 + 40) = 0xE400000000000000;
    *(_QWORD *)(v39 + 48) = 1735290739;
    *(_QWORD *)(v39 + 56) = 0xE400000000000000;
    *(_QWORD *)(v39 + 64) = 0x6F54646461;
    *(_QWORD *)(v39 + 72) = 0xE500000000000000;
    *(_QWORD *)(v39 + 80) = 0x7473696C79616C70;
    *(_QWORD *)(v39 + 88) = 0xE800000000000000;
    *(_QWORD *)(v39 + 96) = 0x4E6E6F6974636573;
    *(_QWORD *)(v39 + 104) = 0xEB00000000656D61;
    *(_QWORD *)(v39 + 112) = 0x6574736567677553;
    *(_QWORD *)(v39 + 120) = 0xEF73676E6F532064;
    *(_QWORD *)(v39 + 128) = 0x49746E65746E6F63;
    *(_QWORD *)(v39 + 136) = 0xE900000000000064;
    *(_QWORD *)(v39 + 144) = Playlist.id.getter(v39);
    *(_QWORD *)(v39 + 152) = v40;
    v73 = sub_100041F44(v39);
    v41 = type metadata accessor for URL(0);
    v42 = *(_QWORD *)(v41 - 8);
    *(_QWORD *)&v75 = v1;
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v44 = v32;
    v45 = (uint64_t)v81;
    v43(v81, 1, 1, v41);
    v46 = sub_10047D564(inited);
    swift_bridgeObjectRelease(inited);
    v48 = Playlist.id.getter(v47);
    v50 = v49;
    v51 = (uint64_t)v80;
    v43(v80, 1, 1, v41);
    v52 = v82;
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v74, v44, 22, 2, v45, (uint64_t)v46, 0, 9, v82, v73, 0, 768, v48, v50, 0x7473696C79616C50, 0xE800000000000000, v51, 0, 1,
      0,
      0,
      0);
    v53 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_100540B34();
    v55 = v54;
    v57 = v56;
    if (qword_10119B8B8 != -1)
      swift_once(&qword_10119B8B8, sub_1000E968C);
    v58 = qword_10124C790;
    swift_retain(qword_10124C790);
    v59 = GroupActivitiesManager.hasJoined.getter();
    v60 = GroupActivitiesManager.participantsCount.getter();
    v61 = (uint64_t *)(v58 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v58 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v83, 0, 0);
    v62 = *v61;
    v63 = swift_release(v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v53) + 0xB8))(v52, v55, v57, v59 & 1, v60, v62, v63);

    swift_bridgeObjectRelease(v57);
    v64 = type metadata accessor for TaskPriority(0);
    v65 = (uint64_t)v79;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v79, 1, 1, v64);
    v66 = v78;
    sub_10005B704(v75, v78, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    type metadata accessor for MainActor(0);
    v68 = static MainActor.shared.getter(v67);
    v69 = *(unsigned __int8 *)(v76 + 80);
    v70 = (v69 + 32) & ~v69;
    v71 = swift_allocObject(&unk_1010B4D30, v70 + v77, v69 | 7);
    *(_QWORD *)(v71 + 16) = v68;
    *(_QWORD *)(v71 + 24) = &protocol witness table for MainActor;
    sub_10005B6C0(v66, v71 + v70, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v72 = sub_100166D14(v65, (uint64_t)&unk_1011A4F40, v71);
    swift_release(v72);
    sub_10005B748(v52, type metadata accessor for MetricsEvent.Click);
  }
}

double sub_1001B7BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  v0 = Image.init(systemName:)(0x7269632E73756C70, 0xEB00000000656C63);
  if (qword_10119BB28 != -1)
    swift_once(&qword_10119BB28, sub_1001BF8C8);
  v1 = qword_10124CA80;
  KeyPath = swift_getKeyPath(&unk_100EAD6F8);
  v3 = qword_10119BB30;
  swift_retain(v1);
  if (v3 != -1)
    swift_once(&qword_10119BB30, sub_1001BF8E4);
  v4 = qword_10124CA88;
  v5 = swift_getKeyPath(&unk_100EAD728);
  v6 = qword_10119BB38;
  swift_retain(v4);
  if (v6 != -1)
    swift_once(&qword_10119BB38, sub_1001BF900);
  v7 = qword_10124CA90;
  v8 = sub_100007E8C(&qword_1011A4CB8);
  v9 = sub_1001C3E78();
  View.fontWeight(_:)(v7, 0, v8, v9);
  swift_release(v4);
  swift_release(v5);
  swift_release(v1);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v0).n128_u64[0];
  return result;
}

uint64_t sub_1001B7D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  char *v37;
  double v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t);
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  _QWORD v83[4];
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, _QWORD, uint64_t);
  unsigned int v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _OWORD v111[2];

  v100 = a3;
  v106 = a4;
  v6 = sub_100007E8C(&qword_1011A4F58);
  __chkstk_darwin(v6);
  v107 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v105 = (uint64_t)&v84 - v9;
  v10 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v96 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v97 = v11;
  v98 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for RoundedRectangle(0);
  v12 = __chkstk_darwin(v108);
  v14 = (double *)((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v109 = type metadata accessor for RoundedRectangle._Inset(0, v12);
  v15 = __chkstk_darwin(v109);
  v92 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for ContentShapeKinds(0, v15);
  v91 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100007E8C(&qword_1011A4F60);
  __chkstk_darwin(v19);
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A4F68);
  __chkstk_darwin(v22);
  v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100007E8C(&qword_1011A4F70);
  __chkstk_darwin(v88);
  v90 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011A4F78);
  __chkstk_darwin(v110);
  v95 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100007E8C(&qword_1011A4F80);
  v101 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v102 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v94 = (uint64_t)&v84 - v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v84 - v31;
  v104 = a1;
  v84 = a2;
  sub_1001B86C4(a1, a2, (uint64_t)v21);
  if (qword_10119BA78 != -1)
    swift_once(&qword_10119BA78, sub_1001BF514);
  v33 = Color.init(_:)((id)qword_10124C9A0);
  v34 = static Edge.Set.all.getter(v33);
  sub_10004A160((uint64_t)v21, (uint64_t)v24, &qword_1011A4F60);
  v35 = &v24[*(int *)(v22 + 36)];
  *(_QWORD *)v35 = v33;
  v35[8] = v34;
  v36 = sub_10004FF60((uint64_t)v21, &qword_1011A4F60);
  static ContentShapeKinds.contextMenuPreview.getter(v36);
  v37 = v18;
  if (qword_10119BAF0 != -1)
    swift_once(&qword_10119BAF0, sub_1001BF7D4);
  v89 = v24;
  v99 = v32;
  v38 = Corner.radius(in:)(xmmword_10124CA20, 0.0, 0.0, 0.0, 0.0, *((uint64_t *)&xmmword_10124CA20 + 1), byte_10124CA30);
  v39 = (char *)v14 + *(int *)(v108 + 20);
  v40 = enum case for RoundedCornerStyle.continuous(_:);
  v41 = type metadata accessor for RoundedCornerStyle(0);
  v42 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104);
  v87 = v40;
  v85 = v41;
  v86 = v42;
  ((void (*)(char *, uint64_t))v42)(v39, v40);
  *v14 = v38;
  v14[1] = v38;
  if (qword_10119BB48 != -1)
    swift_once(&qword_10119BB48, sub_1001BF93C);
  v43 = -*(double *)&qword_10124CAA0;
  v44 = v92;
  sub_10005B704((uint64_t)v14, v92, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v44 + *(int *)(v109 + 20)) = v43;
  sub_10005B748((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v45 = (uint64_t)v90;
  v46 = (uint64_t)&v90[*(int *)(v88 + 36)];
  sub_10005B704(v44, v46, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v47 = sub_100007E8C(&qword_1011A4F88);
  v48 = v46 + *(int *)(v47 + 40);
  v49 = v91;
  v88 = *(_QWORD *)(v91 + 16);
  v50 = v18;
  v51 = v93;
  ((void (*)(uint64_t, char *, uint64_t))v88)(v48, v50, v93);
  *(_BYTE *)(v46 + *(int *)(v47 + 36)) = 0;
  v52 = (uint64_t)v89;
  sub_10004A160((uint64_t)v89, v45, &qword_1011A4F68);
  sub_10005B748(v44, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v53 = *(void (**)(char *, uint64_t))(v49 + 8);
  v53(v37, v51);
  v54 = sub_10004FF60(v52, &qword_1011A4F68);
  static ContentShapeKinds.interaction.getter(v54);
  v55 = Corner.radius(in:)(xmmword_10124CA20, 0.0, 0.0, 0.0, 0.0, *((uint64_t *)&xmmword_10124CA20 + 1), byte_10124CA30);
  v86((char *)v14 + *(int *)(v108 + 20), v87, v85);
  *v14 = v55;
  v14[1] = v55;
  v56 = -*(double *)&qword_10124CAA0;
  sub_10005B704((uint64_t)v14, v44, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v44 + *(int *)(v109 + 20)) = v56;
  sub_10005B748((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v57 = (uint64_t)v95;
  v58 = (uint64_t)&v95[*(int *)(v110 + 36)];
  sub_10005B704(v44, v58, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  ((void (*)(uint64_t, char *, uint64_t))v88)(v58 + *(int *)(v47 + 40), v37, v51);
  *(_BYTE *)(v58 + *(int *)(v47 + 36)) = 0;
  sub_10004A160(v45, v57, &qword_1011A4F70);
  sub_10005B748(v44, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v53(v37, v51);
  sub_10004FF60(v45, &qword_1011A4F70);
  v59 = v104;
  v60 = sub_1001B9BB0(v111);
  __chkstk_darwin(v60);
  v83[2] = v59;
  v83[3] = v100;
  v61 = v98;
  sub_10005B704(v59, v98, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v62 = *(unsigned __int8 *)(v96 + 80);
  v63 = (v62 + 16) & ~v62;
  v64 = swift_allocObject(&unk_1010B4E48, v63 + v97, v62 | 7);
  sub_10005B6C0(v61, v64 + v63, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v65 = (_QWORD *)type metadata accessor for ContextualPreview(0);
  v66 = sub_1001C6E14();
  v67 = sub_1000E3EE4();
  v68 = (_QWORD *)sub_100048748(&qword_1011A0578, type metadata accessor for ContextualPreview, (uint64_t)"mu ");
  v69 = v94;
  View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)v111, (uint64_t)&off_1010AAA28, (uint64_t)sub_1001C6DB4, (uint64_t)v83, (uint64_t)sub_1001C6DC0, v64, v94, v110, (uint64_t)&type metadata for ActionType, v65, v66, v67, v68);
  swift_release(v64);
  sub_1000E411C((uint64_t)v111);
  sub_10004FF60(v57, &qword_1011A4F78);
  v70 = v101;
  v71 = v99;
  v72 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v99, v69, v103);
  if ((sub_1001B89C4() & 1) != 0)
  {
    v73 = sub_100007E8C(&qword_1011A4ED8);
    v74 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v105, 1, 1, v73);
  }
  else
  {
    v74 = v105;
    sub_10004A160(v84, v105, &qword_1011A4ED8);
    v75 = sub_100007E8C(&qword_1011A4ED8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
  }
  v76 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v77 = v102;
  v76(v102, v71, v72);
  v78 = v107;
  sub_10004A160(v74, v107, &qword_1011A4F58);
  v79 = v106;
  v76(v106, v77, v72);
  v80 = sub_100007E8C(&qword_1011A4FE8);
  sub_10004A160(v78, (uint64_t)&v79[*(int *)(v80 + 48)], &qword_1011A4F58);
  sub_10004FF60(v74, &qword_1011A4F58);
  v81 = *(void (**)(char *, uint64_t))(v70 + 8);
  v81(v71, v72);
  sub_10004FF60(v78, &qword_1011A4F58);
  return ((uint64_t (*)(char *, uint64_t))v81)(v77, v72);
}

uint64_t sub_1001B86C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v33[2];

  v33[1] = a3;
  v5 = sub_100007E8C(&qword_1011A4FD8);
  __chkstk_darwin(v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011A5020);
  __chkstk_darwin(v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A2F10);
  __chkstk_darwin(v11);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A2F18);
  __chkstk_darwin(v14);
  v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)v33 - v18;
  v20 = sub_1001B89C4();
  if ((v20 & 1) != 0)
  {
    *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v20);
    *((_QWORD *)v13 + 1) = 0;
    v13[16] = 0;
    v21 = sub_100007E8C(&qword_1011A5030);
    v22 = sub_1001B8E5C(a1, a2, (uint64_t)&v13[*(int *)(v21 + 44)]);
    v23 = static Alignment.leading.getter(v22);
    sub_100149B60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v23, v24);
    sub_10004FF60((uint64_t)v13, &qword_1011A2F10);
    v25 = &qword_1011A2F18;
    sub_100065228((uint64_t)v16, (uint64_t)v19, &qword_1011A2F18);
    sub_10004A160((uint64_t)v19, (uint64_t)v10, &qword_1011A2F18);
    swift_storeEnumTagMultiPayload(v10, v8, 0);
    v26 = sub_1001C70A0();
    v27 = sub_100049F28(&qword_1011A4FD0, &qword_1011A4FD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v10, v14, v5, v26, v27);
    v28 = (uint64_t)v19;
  }
  else
  {
    *(_QWORD *)v7 = static VerticalAlignment.center.getter(v20);
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    v29 = sub_100007E8C(&qword_1011A5028);
    sub_1001B94FC(a1, (uint64_t)&v7[*(int *)(v29 + 44)]);
    v25 = &qword_1011A4FD8;
    sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011A4FD8);
    swift_storeEnumTagMultiPayload(v10, v8, 1);
    v30 = sub_1001C70A0();
    v31 = sub_100049F28(&qword_1011A4FD0, &qword_1011A4FD8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v10, v14, v5, v30, v31);
    v28 = (uint64_t)v7;
  }
  return sub_10004FF60(v28, v25);
}

uint64_t sub_1001B89C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  char v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100007E8C(&qword_1011A49C0);
  __chkstk_darwin(v43);
  v44 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v5);
  v41 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - v8;
  __chkstk_darwin(v10);
  v42 = (uint64_t)&v39 - v11;
  v12 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DynamicTypeSize(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - v20;
  sub_1008237B8((uint64_t)&v39 - v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DynamicTypeSize.accessibility3(_:), v15);
  v22 = sub_100048748(&qword_1011A4FF0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v23 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v18, v15, v22);
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25 = v18;
  v26 = (uint64_t)v14;
  v24(v25, v15);
  v24(v21, v15);
  sub_10005B704(v1, (uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  if ((v23 & 1) != 0)
  {
    sub_10005B748((uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
LABEL_9:
    v33 = 0;
    return v33 & 1;
  }
  v27 = v42;
  sub_100824BE4(v42);
  v29 = v45;
  v28 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v9, enum case for UserInterfaceSizeClass.compact(_:), v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v9, 0, 1, v28);
  v30 = v44;
  v31 = v44 + *(int *)(v43 + 48);
  sub_10004A160(v27, v44, (uint64_t *)&unk_1011A33B8);
  sub_10004A160((uint64_t)v9, v31, (uint64_t *)&unk_1011A33B8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v32(v30, 1, v28) != 1)
  {
    v34 = v41;
    sub_10004A160(v30, v41, (uint64_t *)&unk_1011A33B8);
    if (v32(v31, 1, v28) != 1)
    {
      v36 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v40, v31, v28);
      v37 = sub_100048748(&qword_1011A49C8, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v36, v28, v37);
      v38 = *(void (**)(char *, uint64_t))(v29 + 8);
      v38(v36, v28);
      sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A33B8);
      sub_10004FF60(v27, (uint64_t *)&unk_1011A33B8);
      sub_10005B748(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      v38((char *)v34, v28);
      sub_10004FF60(v30, (uint64_t *)&unk_1011A33B8);
      return v33 & 1;
    }
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A33B8);
    sub_10004FF60(v27, (uint64_t *)&unk_1011A33B8);
    sub_10005B748(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v28);
    goto LABEL_8;
  }
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011A33B8);
  sub_10004FF60(v27, (uint64_t *)&unk_1011A33B8);
  sub_10005B748(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  if (v32(v31, 1, v28) != 1)
  {
LABEL_8:
    sub_10004FF60(v30, &qword_1011A49C0);
    goto LABEL_9;
  }
  sub_10004FF60(v30, (uint64_t *)&unk_1011A33B8);
  v33 = 1;
  return v33 & 1;
}

uint64_t sub_1001B8E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[3];

  v60 = a2;
  v62 = a3;
  v59 = type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0);
  __chkstk_darwin(v59);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v55 - v7;
  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - v13;
  v15 = sub_100007E8C(&qword_1011A5038);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A5040);
  __chkstk_darwin(v18);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100007E8C(&qword_1011A5048);
  __chkstk_darwin(v56);
  v58 = (uint64_t)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v55 - v23;
  __chkstk_darwin(v25);
  v57 = (uint64_t)&v55 - v26;
  *(_QWORD *)v17 = static VerticalAlignment.center.getter(v27);
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 0;
  v28 = sub_100007E8C(&qword_1011A5050);
  sub_1001B92F8(a1, v60, (uint64_t)&v17[*(int *)(v28 + 44)]);
  type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v60 = a1;
  sub_1008237B8((uint64_t)v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.accessibility3(_:), v8);
  LOBYTE(a1) = static DynamicTypeSize.< infix(_:_:)(v14, v11);
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v11, v8);
  v30 = ((uint64_t (*)(char *, uint64_t))v29)(v14, v8);
  if ((a1 & 1) != 0)
    v31 = 0x4048000000000000;
  else
    v31 = 0x4052000000000000;
  v32 = static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(v63, 0, 1, v31, 0, v32, v33);
  sub_10004A160((uint64_t)v17, (uint64_t)v20, &qword_1011A5038);
  v34 = &v20[*(int *)(v18 + 36)];
  v35 = v63[1];
  *(_OWORD *)v34 = v63[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v63[2];
  v36 = sub_10004FF60((uint64_t)v17, &qword_1011A5038);
  v37 = static Edge.Set.bottom.getter(v36);
  if (qword_10119C680 != -1)
    swift_once(&qword_10119C680, sub_1006CA5C0);
  v38 = EdgeInsets.init(_all:)(*(double *)&qword_10124D788);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_10004A160((uint64_t)v20, (uint64_t)v24, &qword_1011A5040);
  v45 = &v24[*(int *)(v56 + 36)];
  *v45 = v37;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_10004FF60((uint64_t)v20, &qword_1011A5040);
  v46 = v57;
  sub_100065228((uint64_t)v24, v57, &qword_1011A5048);
  v47 = type metadata accessor for Song(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v5, v60, v47);
  v48 = &v5[*(int *)(v59 + 20)];
  *(_QWORD *)v48 = swift_getKeyPath(&unk_100EAD5C0);
  v49 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v48, v49, 0);
  v50 = v61;
  sub_10005B6C0((uint64_t)v5, v61, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  v51 = v58;
  sub_10004A160(v46, v58, &qword_1011A5048);
  sub_10005B704(v50, (uint64_t)v5, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  v52 = v62;
  sub_10004A160(v51, v62, &qword_1011A5048);
  v53 = sub_100007E8C(&qword_1011A5058);
  sub_10005B704((uint64_t)v5, v52 + *(int *)(v53 + 48), type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  sub_10005B748(v50, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  sub_10004FF60(v46, &qword_1011A5048);
  sub_10005B748((uint64_t)v5, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  return sub_10004FF60(v51, &qword_1011A5048);
}

uint64_t sub_1001B92F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v6 = sub_100007E8C(&qword_1011A4ED8);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - v10;
  v12 = type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v24 - v16;
  v18 = type metadata accessor for Song(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a1, v18);
  v19 = &v14[*(int *)(v12 + 20)];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_100EAD5C0);
  v20 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  sub_10005B6C0((uint64_t)v14, (uint64_t)v17, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_10004A160(a2, (uint64_t)v11, &qword_1011A4ED8);
  sub_10005B704((uint64_t)v17, (uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_10004A160((uint64_t)v11, (uint64_t)v8, &qword_1011A4ED8);
  sub_10005B704((uint64_t)v14, a3, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v21 = sub_100007E8C(&qword_1011A5060);
  v22 = a3 + *(int *)(v21 + 48);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  sub_10004A160((uint64_t)v8, a3 + *(int *)(v21 + 64), &qword_1011A4ED8);
  sub_10004FF60((uint64_t)v11, &qword_1011A4ED8);
  sub_10005B748((uint64_t)v17, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_10004FF60((uint64_t)v8, &qword_1011A4ED8);
  return sub_10005B748((uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
}

uint64_t sub_1001B94FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  __int128 v84;
  uint64_t v85;

  v82 = a2;
  v81 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(0);
  __chkstk_darwin(v81);
  v70 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v71 = (uint64_t)&v67 - v5;
  v76 = sub_100007E8C(&qword_1011A5068);
  __chkstk_darwin(v76);
  v80 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0);
  __chkstk_darwin(v78);
  v68 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v69 = (uint64_t)&v67 - v9;
  v74 = type metadata accessor for DynamicTypeSize(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v12);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011A5070);
  __chkstk_darwin(v15);
  v79 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v77 = (char *)&v67 - v18;
  v19 = type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - v23;
  v25 = type metadata accessor for Song(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v21, a1, v25);
  v27 = &v21[*(int *)(v19 + 20)];
  *(_QWORD *)v27 = swift_getKeyPath(&unk_100EAD5C0);
  v73 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
  swift_storeEnumTagMultiPayload(v27, v73, 0);
  v75 = v24;
  sub_10005B6C0((uint64_t)v21, (uint64_t)v24, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v28 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  sub_100824BE4((uint64_t)v14);
  sub_1008237B8((uint64_t)v11);
  v29 = a1 + *(int *)(v28 + 24);
  v30 = *(_QWORD *)(v29 + 8);
  KeyPath = swift_getKeyPath(&unk_100EAD4A0);
  v32 = swift_getKeyPath(&unk_100EAD4C8);
  swift_retain(v30);
  static Published.subscript.getter(&v84, v33, KeyPath, v32);
  swift_release(v30);
  swift_release(KeyPath);
  swift_release(v32);
  LOBYTE(v30) = sub_1001C7744((uint64_t)v14, (uint64_t)v11, *(double *)&v84);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v11, v74);
  sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011A33B8);
  if ((v30 & 1) != 0)
  {
    v34 = (uint64_t)v68;
    v26(v68, a1, v25);
    v35 = v78;
    v36 = (_QWORD *)(v34 + *(int *)(v78 + 20));
    *v36 = swift_getKeyPath(&unk_100EAD5C0);
    swift_storeEnumTagMultiPayload(v36, v73, 0);
    v37 = type metadata accessor for PlaylistSongSuggestionsView.VerticalText;
    v38 = v69;
    sub_10005B6C0(v34, v69, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
    v39 = v80;
    sub_10005B704(v38, v80, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
    swift_storeEnumTagMultiPayload(v39, v76, 0);
    v40 = sub_100048748(&qword_1011A5078, type metadata accessor for PlaylistSongSuggestionsView.VerticalText, (uint64_t)&unk_100EADA3C);
    v41 = sub_100048748(&qword_1011A5080, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText, (uint64_t)&unk_100EAD9EC);
    v42 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)(v39, v35, v81, v40, v41);
    v43 = v38;
  }
  else
  {
    v44 = (uint64_t)v70;
    v26(v70, a1, v25);
    v45 = *(_QWORD *)(v29 + 8);
    v46 = (int *)v81;
    v47 = (_QWORD *)(v44 + *(int *)(v81 + 20));
    v48 = type metadata accessor for SuggestedSongsDataSource(0);
    v49 = sub_100048748(&qword_1011A49D0, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_100EAD3D4);
    swift_retain(v45);
    *v47 = ObservedObject.init(wrappedValue:)(v50, v48, v49);
    v47[1] = v51;
    v52 = v44 + v46[6];
    type metadata accessor for CGSize(0);
    v83[0] = 0;
    v83[1] = 0;
    State.init(wrappedValue:)(v83, v53);
    v54 = v85;
    *(_OWORD *)v52 = v84;
    *(_QWORD *)(v52 + 16) = v54;
    v55 = (_QWORD *)(v44 + v46[7]);
    *v55 = swift_getKeyPath(&unk_100EAD5C0);
    swift_storeEnumTagMultiPayload(v55, v73, 0);
    v56 = (_QWORD *)(v44 + v46[8]);
    *v56 = swift_getKeyPath(&unk_100EAD590);
    v57 = sub_100007E8C((uint64_t *)&unk_1011A3ED0);
    swift_storeEnumTagMultiPayload(v56, v57, 0);
    v37 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText;
    v58 = v71;
    sub_10005B6C0(v44, v71, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText);
    v59 = v80;
    sub_10005B704(v58, v80, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText);
    swift_storeEnumTagMultiPayload(v59, v76, 1);
    v60 = sub_100048748(&qword_1011A5078, type metadata accessor for PlaylistSongSuggestionsView.VerticalText, (uint64_t)&unk_100EADA3C);
    v61 = sub_100048748(&qword_1011A5080, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText, (uint64_t)&unk_100EAD9EC);
    v42 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)(v59, v78, v46, v60, v61);
    v43 = v58;
  }
  sub_10005B748(v43, v37);
  v62 = (uint64_t)v75;
  sub_10005B704((uint64_t)v75, (uint64_t)v21, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v63 = v79;
  sub_10004A160(v42, v79, &qword_1011A5070);
  v64 = v82;
  sub_10005B704((uint64_t)v21, v82, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v65 = sub_100007E8C(&qword_1011A5088);
  sub_10004A160(v63, v64 + *(int *)(v65 + 48), &qword_1011A5070);
  sub_10004FF60(v42, &qword_1011A5070);
  sub_10005B748(v62, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_10004FF60(v63, &qword_1011A5070);
  return sub_10005B748((uint64_t)v21, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
}

uint64_t sub_1001B9BB0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t result;
  uint64_t v17;
  uint64_t inited;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  _OWORD *v45;
  _BYTE v46[48];
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _BYTE v50[72];
  _OWORD v51[5];
  _OWORD v52[6];

  v2 = v1;
  v4 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011A20C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  sub_100064AC8(*(_QWORD *)(v2 + *(int *)(v14 + 24) + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_presentationSource, (uint64_t)v50);
  Strong = swift_unknownObjectWeakLoadStrong(v50);
  result = sub_100064B4C((uint64_t)v50);
  if (Strong)
  {
    v44 = (void *)Strong;
    v45 = a1;
    v17 = sub_100007E8C((uint64_t *)&unk_1011A20E0);
    inited = swift_initStackObject(v17, &v49);
    *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(inited + 56) = v10;
    *(_QWORD *)(inited + 64) = &protocol witness table for Song;
    v19 = (char *)sub_100049F68((_QWORD *)(inited + 32));
    v20 = v6;
    v21 = v9;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v22(v19, v2, v10);
    sub_10004A07C(0, (unint64_t *)&qword_1011A99D0, MPCPlaybackIntent_ptr);
    v22(v13, v2, v10);
    v23 = (unint64_t)v21;
    v24 = (unint64_t)v20;
    v25 = (void *)MPCPlaybackIntent.init<A>(_:)(v13, v10, &protocol witness table for Song);
    v26 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
    v27 = type metadata accessor for MusicLibrary(0);
    v28 = static MusicLibrary.shared.getter(v27);
    sub_10005B704(v2 + *(int *)(v14 + 40), v24, type metadata accessor for Actions.MetricsReportingContext);
    v29 = type metadata accessor for Actions.MetricsReportingContext(0);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v24, 0, 1, v29);
    memset(v52, 0, 80);
    v47 = 0;
    memset(v46, 0, sizeof(v46));
    v48 = xmmword_100EA93A0;
    if (qword_10119B8C0 != -1)
      swift_once(&qword_10119B8C0, sub_1000E9774);
    v30 = qword_10119B8C8;
    v31 = (id)qword_10124C798;
    if (v30 != -1)
      swift_once(&qword_10119B8C8, sub_1000E97E8);
    v32 = qword_10124C7A0;
    swift_retain(qword_10124C7A0);
    v33 = v44;
    sub_100495120(inited, v25, v23, v28, v31, v32, v24, (uint64_t)v52, v51, (uint64_t)v46, 1);
    v42 = v51[1];
    v43 = v51[0];
    v40 = v51[3];
    v41 = v51[2];
    v39 = v51[4];

    swift_bridgeObjectRelease(inited);
    swift_release(v28);

    swift_release(v32);
    sub_10004FF60((uint64_t)v46, (uint64_t *)&unk_1011A20F0);
    sub_10004FF60(v24, (uint64_t *)&unk_1011A9990);
    result = sub_10004FF60(v23, (uint64_t *)&unk_1011A20C0);
    v35 = v39;
    v34 = v40;
    v37 = v41;
    v36 = v42;
    v38 = v43;
    a1 = v45;
  }
  else
  {
    v38 = 0uLL;
    v36 = 0uLL;
    v37 = 0uLL;
    v34 = 0uLL;
    v35 = 0uLL;
  }
  *a1 = v38;
  a1[1] = v36;
  a1[2] = v37;
  a1[3] = v34;
  a1[4] = v35;
  return result;
}

uint64_t sub_1001B9F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v6 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v11);
  sub_1001D0F3C((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v8[*(int *)(v6 + 36)] = a2 != 0;
  return sub_10005B6C0((uint64_t)v8, a3, type metadata accessor for ContextualPreview.Data);
}

double sub_1001BA094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *Strong;
  double result;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[72];

  v2 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007E8C((uint64_t *)&unk_1011A13B0);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100064AC8(*(_QWORD *)(a1 + *(int *)(v2 + 24) + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_presentationSource, (uint64_t)v21);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v21);
  sub_100064B4C((uint64_t)v21);
  if (Strong)
  {
    v11 = sub_10076BBD4();

    if (v11)
    {
      v12 = type metadata accessor for TaskPriority(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
      sub_10005B704(a1, (uint64_t)&v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      type metadata accessor for MainActor(0);
      v13 = swift_retain(v11);
      v14 = static MainActor.shared.getter(v13);
      v15 = *(unsigned __int8 *)(v3 + 80);
      v16 = (v15 + 32) & ~v15;
      v17 = (v4 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
      v18 = swift_allocObject(&unk_1010B4E70, v17 + 8, v15 | 7);
      *(_QWORD *)(v18 + 16) = v14;
      *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
      sub_10005B6C0((uint64_t)v5, v18 + v16, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      *(_QWORD *)(v18 + v17) = v11;
      v19 = sub_100980A1C((uint64_t)v8, (uint64_t)&unk_1011A5000, v18);
      swift_release(v19);
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

void sub_1001BA250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  int v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t inited;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  __int128 v64;
  int v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _BYTE v70[24];
  _BYTE v71[96];
  _BYTE v72[56];

  v1 = v0;
  v2 = sub_100007E8C(&qword_10119E460);
  __chkstk_darwin(v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v64 - v6;
  v8 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v11;
  v17 = v1 + *(int *)(v11 + 20);
  v18 = *(_QWORD *)(v17 + 8);
  v19 = swift_retain(v18);
  LOBYTE(v11) = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v19);
  swift_release(v18);
  if ((v11 & 1) != 0)
    return;
  v66 = v4;
  v67 = v7;
  v68 = v10;
  if (qword_10119B878 != -1)
    v20 = swift_once(&qword_10119B878, sub_10006585C);
  v21 = Song.id.getter(v20);
  v23 = v22;
  sub_100065908(v21, v22);
  v25 = v24;
  swift_bridgeObjectRelease(v23);
  if (v25 > 1u)
  {
    if (v25 == 2)
    {
      sub_10006754C();
      v27 = 46;
      goto LABEL_12;
    }
    v30 = type metadata accessor for Song(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v16, v1, v30);
    swift_storeEnumTagMultiPayload(v16, v14, 0);
    sub_100065BF0((uint64_t)v16, 0);
    sub_10005B748((uint64_t)v16, type metadata accessor for PreviewPlaybackController.Context.Source);
    v31 = *(_QWORD *)(v17 + 8);
    v32 = swift_retain(v31);
    dispatch thunk of MusicSuggestedSongsViewModel.didPreview(_:)(v1, v32);
    v29 = v31;
LABEL_11:
    swift_release(v29);
    v27 = 45;
    goto LABEL_12;
  }
  if (v25)
  {
    sub_100066E78();
    v28 = swift_retain(v18);
    dispatch thunk of MusicSuggestedSongsViewModel.didPreview(_:)(v1, v28);
    v29 = v18;
    goto LABEL_11;
  }
  sub_1000673F4();
  v27 = 46;
LABEL_12:
  v65 = v27;
  v33 = Song.catalogID.getter(v26);
  v35 = v34;
  v36 = sub_10005B704(v1, (uint64_t)v13, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  if (!v35)
  {
    v33 = Song.id.getter(v36);
    v35 = v37;
  }
  sub_10005B748((uint64_t)v13, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v38 = sub_100007E8C(&qword_1011A4CD8);
  inited = swift_initStackObject(v38, v72);
  v64 = xmmword_100EA7A80;
  *(_OWORD *)(inited + 16) = xmmword_100EA7A80;
  v40 = sub_100007E8C(&qword_1011AD3F0);
  v41 = swift_initStackObject(v40, v71);
  *(_OWORD *)(v41 + 16) = v64;
  *(_QWORD *)(v41 + 32) = 25705;
  *(_QWORD *)(v41 + 40) = 0xE200000000000000;
  *(_QWORD *)(v41 + 48) = v33;
  *(_QWORD *)(v41 + 56) = v35;
  strcpy((char *)(v41 + 64), "locationType");
  *(_BYTE *)(v41 + 77) = 0;
  *(_WORD *)(v41 + 78) = -5120;
  *(_QWORD *)(v41 + 80) = 0x657449666C656853;
  *(_QWORD *)(v41 + 88) = 0xE90000000000006DLL;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = sub_100041F44(v41);
  *(_QWORD *)(inited + 40) = sub_100041F44((uint64_t)&off_1010AAAB0);
  v42 = type metadata accessor for URL(0);
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v44 = (uint64_t)v67;
  v43(v67, 1, 1, v42);
  v45 = sub_10047D564(inited);
  swift_bridgeObjectRelease(inited);
  v47 = Playlist.id.getter(v46);
  v49 = v48;
  v50 = (uint64_t)v66;
  v43(v66, 1, 1, v42);
  v63 = v50;
  v51 = (uint64_t)v68;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v33, v35, 22, v65, v44, (uint64_t)v45, 0, 9, (uint64_t)v68, 0, 0, 65280, v47, v49, 0x7473696C79616C50, 0xE800000000000000, v63, 0, 1,
    0,
    0,
    0);
  v52 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_100540B34();
  v54 = v53;
  v56 = v55;
  if (qword_10119B8B8 != -1)
    swift_once(&qword_10119B8B8, sub_1000E968C);
  v57 = qword_10124C790;
  swift_retain(qword_10124C790);
  v58 = GroupActivitiesManager.hasJoined.getter();
  v59 = GroupActivitiesManager.participantsCount.getter();
  v60 = (uint64_t *)(v57 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v57 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v70, 0, 0);
  v61 = *v60;
  v62 = swift_release(v57);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))((swift_isaMask & *v52) + 0xB8))(v51, v54, v56, v58 & 1, v59, v61, v62);

  swift_bridgeObjectRelease(v56);
  sub_10005B748(v51, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_1001BA7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[44] = a4;
  v5[45] = a5;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A9990);
  v5[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  v5[47] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[48] = v8;
  v5[49] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[50] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[51] = v11;
  v5[52] = v12;
  return swift_task_switch(sub_1001BA8B0, v11, v12);
}

uint64_t sub_1001BA8B0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = *(char **)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 360);
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v0 + 384) + 16))(v1, v4, *(_QWORD *)(v0 + 376));
  v5 = type metadata accessor for MusicLibrary(0);
  v6 = static MusicLibrary.shared.getter(v5);
  v7 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  sub_10005B704(v4 + *(int *)(v7 + 40), v2, type metadata accessor for Actions.MetricsReportingContext);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 0, 1, v8);
  swift_retain(v3);
  sub_1001B1340(v1, v6, 1, v3, v2, (_OWORD *)(v0 + 272));
  static Actions.GoToAlbum.action(context:)(v0 + 272, v0 + 16);
  sub_100065228(v0 + 272, v0 + 336, &qword_10119DCA0);
  sub_1001C7464(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 296));
  swift_release(*(_QWORD *)(v0 + 312));
  swift_release(*(_QWORD *)(v0 + 328));
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v9;
  v10 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v10;
  v11 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 160) = v11;
  v12 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v12;
  v13 = (_QWORD *)swift_task_alloc(dword_1011D3654);
  *(_QWORD *)(v0 + 424) = v13;
  v14 = sub_100007E8C(&qword_1011A5008);
  *v13 = v0;
  v13[1] = sub_1001BAA3C;
  return Action.execute(bypassSupportedStatusCheck:)(v14, 0, v14);
}

uint64_t sub_1001BAA3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 424);
  *(_QWORD *)(*v1 + 432) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1001BAAFC;
  else
    v4 = sub_1001BAAA0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 408), *(_QWORD *)(v2 + 416));
}

uint64_t sub_1001BAAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 368);
  sub_1001C748C((_QWORD *)(v0 + 16));
  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BAAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  swift_release(*(_QWORD *)(v0 + 400));
  sub_1001C748C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BAB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v4[21] = a4;
  v5 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v4[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[23] = v6;
  v4[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v4[25] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[26] = v8;
  v4[27] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v4[28] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[29] = swift_task_alloc(v10);
  v4[30] = swift_task_alloc(v10);
  v4[31] = swift_task_alloc(v10);
  v4[32] = swift_task_alloc(v10);
  v4[33] = swift_task_alloc(v10);
  v4[34] = swift_task_alloc(v10);
  v11 = type metadata accessor for MusicLibrary.AddStatus(0);
  v4[35] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[36] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[37] = swift_task_alloc(v13);
  v4[38] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v4[39] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v4[40] = v16;
  v4[41] = v17;
  return swift_task_switch(sub_1001BACB0, v16, v17);
}

uint64_t sub_1001BACB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t ObjectType;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *Strong;
  char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *aBlock;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = type metadata accessor for MusicLibrary(0);
  *(_QWORD *)(v0 + 336) = v6;
  v7 = static MusicLibrary.shared.getter(v6);
  v8 = type metadata accessor for Song(0);
  *(_QWORD *)(v0 + 344) = v8;
  v9 = MusicLibrary.state<A>(for:)(v1, v8, &protocol witness table for Song);
  v10 = swift_release(v7);
  dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v5 + 104))(v3, enum case for MusicLibrary.AddStatus.added(_:), v4, v11);
  v12 = sub_100048748((unint64_t *)&unk_1011D10D0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
  LOBYTE(v7) = dispatch thunk of static Equatable.== infix(_:_:)(v2, v3, v4, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v3, v4);
  v13(v2, v4);
  if ((v7 & 1) != 0)
  {
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v15 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 272);
    v16 = *(_QWORD *)(v0 + 168);
    v17 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 360) = sub_100048B14(v17, (uint64_t)qword_10124DDD0);
    sub_10005B704(v16, v14, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v18 = sub_10005B704(v16, v15, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = *(_QWORD *)(v0 + 344);
      v22 = *(_QWORD *)(v0 + 272);
      v83 = *(_QWORD *)(v0 + 264);
      v85 = *(_QWORD *)(v0 + 200);
      v23 = swift_slowAlloc(22, -1);
      v87 = swift_slowAlloc(64, -1);
      v89 = v87;
      *(_DWORD *)v23 = 136446466;
      v24 = sub_100048748(&qword_1011A4F48, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v25 = dispatch thunk of CustomStringConvertible.description.getter(v21, v24);
      v27 = v26;
      *(_QWORD *)(v0 + 152) = sub_100322200(v25, v26, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
      swift_bridgeObjectRelease(v27);
      sub_10005B748(v22, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      *(_WORD *)(v23 + 12) = 2082;
      v28 = sub_100048748(&qword_1011A4F50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      v29 = dispatch thunk of CustomStringConvertible.description.getter(v85, v28);
      v31 = v30;
      *(_QWORD *)(v0 + 160) = sub_100322200(v29, v30, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168);
      swift_bridgeObjectRelease(v31);
      sub_10005B748(v83, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Preparing to add song=%{public}s from the suggested songs module to playlist=%{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v87, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v87, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 264);
      sub_10005B748(*(_QWORD *)(v0 + 272), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      sub_10005B748(v35, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    }

    v36 = *(_QWORD *)(v0 + 168);
    v37 = *(int *)(*(_QWORD *)(v0 + 224) + 24);
    *(_DWORD *)(v0 + 100) = v37;
    v79 = v36 + v37;
    v38 = *(_QWORD *)(*(_QWORD *)(v36 + v37 + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers);
    v39 = sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
    *(_QWORD *)(v0 + 368) = v39;
    swift_bridgeObjectRetain();
    v40 = static MPMediaLibraryFilteringOptions.none.getter();
    if (v40 != WeakArray.endIndex.getter(v38, v39, v41, v42))
    {
      aBlock = (void *)(v0 + 16);
      v81 = v0 + 64;
      v86 = *(_QWORD *)(v0 + 344);
      v84 = enum case for Track.song(_:);
      v82 = v39;
      v80 = v0 + 88;
      do
      {
        v57 = (char *)WeakArray.subscript.getter(v40, v38, v39, v43);
        swift_bridgeObjectRetain();
        v40 = WeakArray.index(after:)(v40);
        swift_bridgeObjectRelease(v38);
        if (v57)
        {
          ObjectType = swift_getObjectType();
          if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver))
            v59 = v57;
          else
            v59 = 0;
          if (v59)
          {
            v88 = v59;
            v60 = *(_QWORD *)(v0 + 344);
            v61 = *(_QWORD *)(v0 + 168);
            v62 = sub_100007E8C(&qword_10119F2C8);
            v63 = type metadata accessor for Track(0);
            v64 = v0;
            v65 = *(_QWORD *)(v63 - 8);
            v66 = *(unsigned __int8 *)(v65 + 80);
            v67 = (v66 + 32) & ~v66;
            v68 = swift_allocObject(v62, v67 + *(_QWORD *)(v65 + 72), v66 | 7);
            *(_OWORD *)(v68 + 16) = xmmword_100EA7AA0;
            v69 = v68 + v67;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v69, v61, v60);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v65 + 104))(v69, v84, v63);
            if (*(_QWORD *)(v68 + 16))
            {
              v70 = (uint64_t)&v88[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
              swift_beginAccess(&v88[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v81, 0, 0);
              sub_10004A160(v70, v80, (uint64_t *)&unk_1011B6910);
              v0 = v64;
              if ((*(_BYTE *)(v64 + 96) & 1) != 0)
              {
                sub_10004FF60(v80, (uint64_t *)&unk_1011B6910);
                swift_bridgeObjectRelease(v68);

                v39 = v82;
              }
              else
              {
                Strong = (void *)swift_unknownObjectWeakLoadStrong(v80);
                v72 = v57;
                sub_10004FF60(v80, (uint64_t *)&unk_1011B6910);
                v39 = v82;
                if (Strong)
                {
                  v73 = sub_1007142B4();

                  v74 = swift_allocObject(&unk_1010B4D58, 32, 7);
                  *(_QWORD *)(v74 + 16) = v88;
                  *(_QWORD *)(v74 + 24) = v68;
                  v75 = swift_allocObject(&unk_1010B4D80, 32, 7);
                  *(_QWORD *)(v75 + 16) = sub_1001C6D54;
                  *(_QWORD *)(v75 + 24) = v74;
                  *(_QWORD *)(v0 + 48) = sub_10010942C;
                  *(_QWORD *)(v0 + 56) = v75;
                  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
                  *(_QWORD *)(v0 + 24) = 1107296256;
                  *(_QWORD *)(v0 + 32) = sub_10046D7B4;
                  *(_QWORD *)(v0 + 40) = &unk_1010B4D98;
                  v76 = _Block_copy(aBlock);
                  v77 = *(_QWORD *)(v0 + 56);
                  v72 = v72;
                  swift_bridgeObjectRetain();
                  objc_msgSend(v73, "performBatchUpdates:completion:", v76, 0, swift_release(v77).n128_f64[0]);
                  _Block_release(v76);

                  swift_release(v74);
                }

                swift_bridgeObjectRelease(v68);
              }
            }
            else
            {
              swift_bridgeObjectRelease(v68);

              v0 = v64;
              v39 = v82;
            }
          }
          else
          {

          }
        }
      }
      while (v40 != WeakArray.endIndex.getter(v38, v39, v55, v56));
    }
    v44 = (_QWORD *)v0;
    v45 = *(_QWORD *)(v0 + 224);
    v47 = v44[23];
    v46 = v44[24];
    v48 = v44[21];
    v49 = v44[22];
    swift_bridgeObjectRelease(v38);
    v50 = *(_QWORD *)(v48 + *(int *)(v45 + 20) + 8);
    v51 = swift_retain(v50);
    dispatch thunk of MusicSuggestedSongsViewModel.didSelect(_:)(v48, v51);
    swift_release(v50);
    v44[47] = static MusicLibrary.shared.getter(v52);
    v53 = *(_QWORD *)(v79 + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_playlist;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v47 + 104))(v46, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.includeDuplicates(_:), v49);
    v54 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)[1]);
    v44[48] = v54;
    *v54 = v44;
    v54[1] = sub_1001BBCC0;
    return MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)(v44[27], v44[21], v53, v44[24], 0, 0, v44[43], &protocol witness table for Song);
  }
  else
  {
    v32 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + *(int *)(*(_QWORD *)(v0 + 224) + 24) + 8)
        + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_presentationSource;
    v33 = (_QWORD *)swift_task_alloc(dword_1011D72CC);
    *(_QWORD *)(v0 + 352) = v33;
    *v33 = v0;
    v33[1] = sub_1001BB4E8;
    return static CloudLibrary.presentCloudLibraryEnablerIfNeeded(context:presentationSource:style:)(2, v32, 0);
  }
}

uint64_t sub_1001BB4E8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_BYTE *)(*v1 + 97) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1001BB540, *(_QWORD *)(v2 + 320), *(_QWORD *)(v2 + 328));
}

uint64_t sub_1001BB540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t ObjectType;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *Strong;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *aBlock;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;

  if ((*(_BYTE *)(v0 + 97) & 1) != 0)
  {
    if (qword_10119CB10 != -1)
      swift_once(&qword_10119CB10, sub_10096883C);
    v1 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 264);
    v2 = *(_QWORD *)(v0 + 272);
    v4 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 360) = sub_100048B14(v4, (uint64_t)qword_10124DDD0);
    sub_10005B704(v1, v2, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v5 = sub_10005B704(v1, v3, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = *(_QWORD *)(v0 + 344);
      v9 = *(_QWORD *)(v0 + 272);
      v79 = *(_QWORD *)(v0 + 264);
      v81 = *(_QWORD *)(v0 + 200);
      v10 = swift_slowAlloc(22, -1);
      v11 = swift_slowAlloc(64, -1);
      v83 = v11;
      *(_DWORD *)v10 = 136446466;
      v12 = sub_100048748(&qword_1011A4F48, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v13 = dispatch thunk of CustomStringConvertible.description.getter(v8, v12);
      v15 = v14;
      *(_QWORD *)(v0 + 152) = sub_100322200(v13, v14, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160);
      swift_bridgeObjectRelease(v15);
      sub_10005B748(v9, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      *(_WORD *)(v10 + 12) = 2082;
      v16 = sub_100048748(&qword_1011A4F50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      v17 = dispatch thunk of CustomStringConvertible.description.getter(v81, v16);
      v19 = v18;
      *(_QWORD *)(v0 + 160) = sub_100322200(v17, v18, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168);
      swift_bridgeObjectRelease(v19);
      sub_10005B748(v79, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Preparing to add song=%{public}s from the suggested songs module to playlist=%{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 264);
      sub_10005B748(*(_QWORD *)(v0 + 272), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      sub_10005B748(v30, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    }

    v31 = *(_QWORD *)(v0 + 168);
    v32 = *(int *)(*(_QWORD *)(v0 + 224) + 24);
    *(_DWORD *)(v0 + 100) = v32;
    v74 = v31 + v32;
    v33 = *(_QWORD *)(*(_QWORD *)(v31 + v32 + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers);
    v34 = sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
    *(_QWORD *)(v0 + 368) = v34;
    swift_bridgeObjectRetain();
    v35 = static MPMediaLibraryFilteringOptions.none.getter();
    if (v35 != WeakArray.endIndex.getter(v33, v34, v36, v37))
    {
      aBlock = (void *)(v0 + 16);
      v76 = v0 + 64;
      v80 = *(_QWORD *)(v0 + 344);
      v78 = enum case for Track.song(_:);
      v77 = v34;
      v75 = v0 + 88;
      do
      {
        v52 = (char *)WeakArray.subscript.getter(v35, v33, v34, v38);
        swift_bridgeObjectRetain();
        v35 = WeakArray.index(after:)(v35);
        swift_bridgeObjectRelease(v33);
        if (v52)
        {
          ObjectType = swift_getObjectType();
          if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver))
            v54 = v52;
          else
            v54 = 0;
          if (v54)
          {
            v82 = v54;
            v55 = *(_QWORD *)(v0 + 344);
            v56 = *(_QWORD *)(v0 + 168);
            v57 = sub_100007E8C(&qword_10119F2C8);
            v58 = type metadata accessor for Track(0);
            v59 = v0;
            v60 = *(_QWORD *)(v58 - 8);
            v61 = *(unsigned __int8 *)(v60 + 80);
            v62 = (v61 + 32) & ~v61;
            v63 = swift_allocObject(v57, v62 + *(_QWORD *)(v60 + 72), v61 | 7);
            *(_OWORD *)(v63 + 16) = xmmword_100EA7AA0;
            v64 = v63 + v62;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v64, v56, v55);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104))(v64, v78, v58);
            if (*(_QWORD *)(v63 + 16))
            {
              v65 = (uint64_t)&v82[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
              swift_beginAccess(&v82[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v76, 0, 0);
              sub_10004A160(v65, v75, (uint64_t *)&unk_1011B6910);
              v0 = v59;
              if ((*(_BYTE *)(v59 + 96) & 1) != 0)
              {
                sub_10004FF60(v75, (uint64_t *)&unk_1011B6910);
                swift_bridgeObjectRelease(v63);

                v34 = v77;
              }
              else
              {
                Strong = (void *)swift_unknownObjectWeakLoadStrong(v75);
                v67 = v52;
                sub_10004FF60(v75, (uint64_t *)&unk_1011B6910);
                v34 = v77;
                if (Strong)
                {
                  v68 = sub_1007142B4();

                  v69 = swift_allocObject(&unk_1010B4D58, 32, 7);
                  *(_QWORD *)(v69 + 16) = v82;
                  *(_QWORD *)(v69 + 24) = v63;
                  v70 = swift_allocObject(&unk_1010B4D80, 32, 7);
                  *(_QWORD *)(v70 + 16) = sub_1001C6D54;
                  *(_QWORD *)(v70 + 24) = v69;
                  *(_QWORD *)(v0 + 48) = sub_10010942C;
                  *(_QWORD *)(v0 + 56) = v70;
                  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
                  *(_QWORD *)(v0 + 24) = 1107296256;
                  *(_QWORD *)(v0 + 32) = sub_10046D7B4;
                  *(_QWORD *)(v0 + 40) = &unk_1010B4D98;
                  v71 = _Block_copy(aBlock);
                  v72 = *(_QWORD *)(v0 + 56);
                  v67 = v67;
                  swift_bridgeObjectRetain();
                  objc_msgSend(v68, "performBatchUpdates:completion:", v71, 0, swift_release(v72).n128_f64[0]);
                  _Block_release(v71);

                  swift_release(v69);
                }

                swift_bridgeObjectRelease(v63);
              }
            }
            else
            {
              swift_bridgeObjectRelease(v63);

              v0 = v59;
              v34 = v77;
            }
          }
          else
          {

          }
        }
      }
      while (v35 != WeakArray.endIndex.getter(v33, v34, v50, v51));
    }
    v39 = (_QWORD *)v0;
    v40 = *(_QWORD *)(v0 + 224);
    v42 = v39[23];
    v41 = v39[24];
    v43 = v39[21];
    v44 = v39[22];
    swift_bridgeObjectRelease(v33);
    v45 = *(_QWORD *)(v43 + *(int *)(v40 + 20) + 8);
    v46 = swift_retain(v45);
    dispatch thunk of MusicSuggestedSongsViewModel.didSelect(_:)(v43, v46);
    swift_release(v45);
    v39[47] = static MusicLibrary.shared.getter(v47);
    v48 = *(_QWORD *)(v74 + 8) + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_playlist;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v42 + 104))(v41, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.includeDuplicates(_:), v44);
    v49 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)
                                     + 1));
    v39[48] = v49;
    *v49 = v39;
    v49[1] = sub_1001BBCC0;
    return MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)(v39[27], v39[21], v48, v39[24], 0, 0, v39[43], &protocol witness table for Song);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 312));
    v20 = *(_QWORD *)(v0 + 296);
    v22 = *(_QWORD *)(v0 + 264);
    v21 = *(_QWORD *)(v0 + 272);
    v24 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 256);
    v26 = *(_QWORD *)(v0 + 232);
    v25 = *(_QWORD *)(v0 + 240);
    v27 = *(_QWORD *)(v0 + 216);
    v28 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 304));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001BBCC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc(v3);
  v8 = swift_release(v4);
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v5, v7, v8);
  if (v0)
  {
    v9 = v2[40];
    v10 = v2[41];
    v11 = sub_1001BC1BC;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[27], v2[25]);
    v9 = v2[40];
    v10 = v2[41];
    v11 = sub_1001BBD64;
  }
  return swift_task_switch(v11, v9, v10);
}

uint64_t sub_1001BBD64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t ObjectType;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 312));
  sub_10005B704(v3, v1, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v4 = sub_10005B704(v3, v2, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(_QWORD *)(v0 + 344);
    v9 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 256);
    v52 = *(_QWORD *)(v0 + 200);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v54 = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = sub_100048748(&qword_1011A4F48, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    v13 = dispatch thunk of CustomStringConvertible.description.getter(v7, v12);
    v15 = v14;
    *(_QWORD *)(v0 + 112) = sub_100322200(v13, v14, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120);
    swift_bridgeObjectRelease(v15);
    sub_10005B748(v8, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    *(_WORD *)(v10 + 12) = 2082;
    v16 = sub_100048748(&qword_1011A4F50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v52, v16);
    v19 = v18;
    *(_QWORD *)(v0 + 120) = sub_100322200(v17, v18, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128);
    swift_bridgeObjectRelease(v19);
    sub_10005B748(v9, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Successfully added song=%{public}s from the suggested songs module to  playlist=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 248);
    sub_10005B748(*(_QWORD *)(v0 + 256), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    sub_10005B748(v20, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  }

  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 168) + *(int *)(v0 + 100) + 8)
                  + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers);
  swift_bridgeObjectRetain();
  v23 = static MPMediaLibraryFilteringOptions.none.getter();
  if (v23 != WeakArray.endIndex.getter(v22, v21, v24, v25))
  {
    v53 = *(_QWORD *)(v0 + 344);
    v51 = enum case for Track.song(_:);
    do
    {
      v39 = (void *)WeakArray.subscript.getter(v23, v22, *(_QWORD *)(v0 + 368), v26);
      swift_bridgeObjectRetain();
      v23 = WeakArray.index(after:)(v23);
      swift_bridgeObjectRelease(v22);
      if (v39)
      {
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver))
          v41 = v39;
        else
          v41 = 0;
        if (v41)
        {
          v42 = *(_QWORD *)(v0 + 344);
          v43 = *(_QWORD *)(v0 + 168);
          v44 = sub_100007E8C(&qword_10119F2C8);
          v45 = type metadata accessor for Track(0);
          v46 = *(_QWORD *)(v45 - 8);
          v47 = *(unsigned __int8 *)(v46 + 80);
          v48 = (v47 + 32) & ~v47;
          v49 = swift_allocObject(v44, v48 + *(_QWORD *)(v46 + 72), v47 | 7);
          v50 = v49 + v48;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v43, v42);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v46 + 104))(v50, v51, v45);
          swift_setDeallocating(v49);
          swift_arrayDestroy(v50, 1, v45);
          swift_deallocClassInstance(v49, 32, 7);
        }

      }
    }
    while (v23 != WeakArray.endIndex.getter(v22, *(_QWORD *)(v0 + 368), v37, v38));
  }
  swift_bridgeObjectRelease(v22);
  v27 = *(_QWORD *)(v0 + 296);
  v29 = *(_QWORD *)(v0 + 264);
  v28 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 248);
  v30 = *(_QWORD *)(v0 + 256);
  v33 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BC1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 312));
  sub_10005B704(v4, v2, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  sub_10005B704(v4, v3, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 392);
    v9 = *(_QWORD *)(v0 + 344);
    v11 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 240);
    v39 = *(_QWORD *)(v0 + 200);
    v12 = swift_slowAlloc(32, -1);
    v40 = swift_slowAlloc(96, -1);
    v41 = v40;
    *(_DWORD *)v12 = 136446722;
    v13 = sub_100048748(&qword_1011A4F48, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v9, v13);
    v16 = v15;
    *(_QWORD *)(v0 + 144) = sub_100322200(v14, v15, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152);
    swift_bridgeObjectRelease(v16);
    sub_10005B748(v10, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    *(_WORD *)(v12 + 12) = 2082;
    v17 = sub_100048748(&qword_1011A4F50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v39, v17);
    v20 = v19;
    *(_QWORD *)(v0 + 136) = sub_100322200(v18, v19, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
    swift_bridgeObjectRelease(v20);
    sub_10005B748(v11, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    *(_WORD *)(v12 + 22) = 2082;
    *(_QWORD *)(v0 + 128) = v8;
    swift_errorRetain(v8);
    v21 = sub_100007E8C(&qword_1011A14B0);
    v22 = String.init<A>(describing:)(v0 + 128, v21);
    v24 = v23;
    *(_QWORD *)(v0 + 104) = sub_100322200(v22, v23, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 104, v0 + 112);
    swift_bridgeObjectRelease(v24);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to add song=%{public}s from the suggested songs module to playlist=%{public}s with error=%{public}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 392);
    v26 = *(_QWORD *)(v0 + 232);
    sub_10005B748(*(_QWORD *)(v0 + 240), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    sub_10005B748(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    swift_errorRelease(v25);
    swift_errorRelease(v25);
  }

  v27 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 168);
  swift_errorRetain(v27);
  sub_1001BC550(v27, v28);
  swift_errorRelease(v27);
  swift_errorRelease(v27);
  v29 = *(_QWORD *)(v0 + 296);
  v31 = *(_QWORD *)(v0 + 264);
  v30 = *(_QWORD *)(v0 + 272);
  v33 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 256);
  v35 = *(_QWORD *)(v0 + 232);
  v34 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 216);
  v37 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 304));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001BC550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t ObjectType;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v38;
  unsigned int v39;
  void **aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  uint64_t (*v45)();
  uint64_t v46;
  char v47[24];
  char v48[32];

  v2 = *(_QWORD *)(*(_QWORD *)(a2
                             + *(int *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0)
                                      + 24)
                             + 8)
                 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers);
  v3 = sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  swift_bridgeObjectRetain();
  v4 = static MPMediaLibraryFilteringOptions.none.getter();
  if (v4 == WeakArray.endIndex.getter(v2, v3, v5, v6))
  {
    swift_bridgeObjectRelease(v2);
    return;
  }
  v39 = enum case for Track.song(_:);
  v8 = (uint64_t *)&unk_1011B6910;
  v38 = v3;
  do
  {
    v11 = (char *)WeakArray.subscript.getter(v4, v2, v3, v7);
    swift_bridgeObjectRetain();
    v4 = WeakArray.index(after:)(v4);
    swift_bridgeObjectRelease(v2);
    if (!v11)
      continue;
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver))
      v13 = v11;
    else
      v13 = 0;
    if (!v13)
    {

      continue;
    }
    v14 = v8;
    v15 = sub_100007E8C(&qword_10119F2C8);
    v16 = type metadata accessor for Track(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned __int8 *)(v17 + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = swift_allocObject(v15, v19 + *(_QWORD *)(v17 + 72), v18 | 7);
    *(_OWORD *)(v20 + 16) = xmmword_100EA7AA0;
    v21 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20 + v19, a2, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v20 + v19, v39, v16);
    if (!*(_QWORD *)(v20 + 16))
    {

      swift_bridgeObjectRelease(v20);
      v8 = v14;
      v3 = v38;
      continue;
    }
    v8 = v14;
    if (!a1)
      goto LABEL_30;
    v22 = &v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks];
    swift_beginAccess(&v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_temporaryTracks], v48, 0, 0);
    if (!*(_QWORD *)(*(_QWORD *)v22 + 16))
      goto LABEL_30;
    v23 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_sections];
    v24 = *(_QWORD *)(v23 + 16);
    if (!v24)
      goto LABEL_30;
    if (*(_BYTE *)(v23 + 32) == 3)
    {
      v25 = 0;
    }
    else
    {
      if (v24 == 1)
        goto LABEL_30;
      if (*(_BYTE *)(v23 + 33) == 3)
      {
        v25 = 1;
      }
      else
      {
        if (v24 == 2)
          goto LABEL_30;
        v34 = 34;
        while (1)
        {
          v25 = v34 - 32;
          if (*(_BYTE *)(v23 + v34) == 3)
            break;
          v35 = v34 - 31;
          if (__OFADD__(v25, 1))
          {
            __break(1u);
            return;
          }
          ++v34;
          if (v35 == v24)
            goto LABEL_30;
        }
      }
    }
    v26 = (uint64_t)&v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController];
    swift_beginAccess(&v13[OBJC_IVAR____TtC5Music24PlaylistDetailDataSource_wrappedViewController], v47, 0, 0);
    sub_10004A160(v26, (uint64_t)&aBlock, v14);
    if ((v42 & 1) != 0)
    {
      sub_10004FF60((uint64_t)&aBlock, v14);
LABEL_30:

      swift_bridgeObjectRelease(v20);
      v3 = v38;
      continue;
    }
    v27 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
    v28 = v11;
    sub_10004FF60((uint64_t)&aBlock, v8);
    if (v27)
    {
      v36 = (char *)sub_1007142B4();

      v29 = (_QWORD *)swift_allocObject(&unk_1010B4DD0, 40, 7);
      v29[2] = v20;
      v29[3] = v13;
      v29[4] = v25;
      v30 = swift_allocObject(&unk_1010B4DF8, 32, 7);
      *(_QWORD *)(v30 + 16) = sub_1001C6D98;
      *(_QWORD *)(v30 + 24) = v29;
      v45 = sub_1001095DC;
      v46 = v30;
      aBlock = _NSConcreteStackBlock;
      v42 = 1107296256;
      v43 = sub_10046D7B4;
      v44 = &unk_1010B4E10;
      v31 = _Block_copy(&aBlock);
      v32 = v46;
      v33 = v28;
      swift_bridgeObjectRetain();
      v28 = v36;
      objc_msgSend(v36, "performBatchUpdates:completion:", v31, 0, swift_release(v32).n128_f64[0]);
      _Block_release(v31);
      swift_bridgeObjectRelease(v20);

      swift_release(v29);
    }
    else
    {
      swift_bridgeObjectRelease(v20);

    }
    v3 = v38;
  }
  while (v4 != WeakArray.endIndex.getter(v2, v3, v9, v10));
  swift_bridgeObjectRelease(v2);
}

uint64_t sub_1001BC9BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[7];

  v2 = v1;
  v39 = a1;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  v10 = sub_100007E8C(&qword_1011A5308);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100007E8C(&qword_1011A2F30);
  __chkstk_darwin(v37);
  v36 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011A2F38);
  __chkstk_darwin(v14);
  v38 = (uint64_t)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static HorizontalAlignment.leading.getter(v16);
  type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0);
  v18 = sub_1008237B8((uint64_t)v9);
  v19 = DynamicTypeSize.isAccessibilitySize.getter(v18);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v9, v3);
  *(_QWORD *)v12 = v17;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = (v19 & 1) == 0;
  v21 = sub_100007E8C(&qword_1011A5310);
  sub_1001BCCE0(v2, (uint64_t)&v12[*(int *)(v21 + 44)]);
  sub_1008237B8((uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v9, enum case for DynamicTypeSize.accessibility3(_:), v3);
  LOBYTE(v2) = static DynamicTypeSize.< infix(_:_:)(v6, v9);
  v20(v9, v3);
  v22 = ((uint64_t (*)(char *, uint64_t))v20)(v6, v3);
  v23 = static Alignment.center.getter(v22);
  if ((v2 & 1) != 0)
    v25 = 0x4048000000000000;
  else
    v25 = 0x4052000000000000;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v40, 0, 1, 0, 1, 0, 1, v25, 0, 0, 1, 0, 1, v23, v24);
  v26 = v36;
  sub_10004A160((uint64_t)v12, v36, &qword_1011A5308);
  v27 = (_OWORD *)(v26 + *(int *)(v37 + 36));
  v28 = v40[5];
  v27[4] = v40[4];
  v27[5] = v28;
  v27[6] = v40[6];
  v29 = v40[1];
  *v27 = v40[0];
  v27[1] = v29;
  v30 = v40[3];
  v27[2] = v40[2];
  v27[3] = v30;
  v31 = sub_10004FF60((uint64_t)v12, &qword_1011A5308);
  v32 = static Alignment.leading.getter(v31);
  v33 = v38;
  sub_100149BC4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v38, 0.0, 1, 0.0, 1, v32, v34);
  sub_10004FF60(v26, &qword_1011A2F30);
  return sub_100065228(v33, v39, &qword_1011A2F38);
}

uint64_t sub_1001BCCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t);
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  _BOOL8 v190;
  char v191;

  v182 = a2;
  v3 = sub_100007E8C(&qword_1011A2E90);
  __chkstk_darwin(v3);
  v183 = (uint64_t)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v180 = (char *)&v148 - v6;
  __chkstk_darwin(v7);
  v181 = (uint64_t)&v148 - v8;
  v173 = sub_100007E8C(&qword_1011A5318);
  __chkstk_darwin(v173);
  v165 = (uint64_t)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v10);
  v163 = (uint64_t)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v164 = (char *)&v148 - v13;
  v14 = type metadata accessor for LineHeightModifier(0);
  v15 = __chkstk_darwin(v14);
  v160 = (uint64_t *)((char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v153 = type metadata accessor for Text.Suffix(0, v15);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v150 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100007E8C(&qword_1011A5320);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100007E8C(&qword_1011A5328);
  __chkstk_darwin(v151);
  v157 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100007E8C(&qword_1011A5330);
  __chkstk_darwin(v158);
  v159 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100007E8C(&qword_1011A5338);
  __chkstk_darwin(v21);
  v161 = (char *)&v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v162 = (uint64_t)&v148 - v24;
  v166 = sub_100007E8C(&qword_1011A5340);
  __chkstk_darwin(v166);
  v168 = (uint64_t)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_100007E8C(&qword_1011A2988);
  __chkstk_darwin(v167);
  v149 = (char *)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DynamicTypeSize(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v148 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C(&qword_1011A5348);
  __chkstk_darwin(v31);
  v178 = (uint64_t)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v184 = (uint64_t)&v148 - v34;
  v35 = sub_100007E8C(&qword_1011B8D50);
  __chkstk_darwin(v35);
  v37 = (char *)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  Song.contentRating.getter(v38);
  v39 = TextBadge.init(for:isPlayable:)(v37, 1);
  v40 = TextBadge.view.getter(v39);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v170 = a1 + *(int *)(type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0) + 20);
  v47 = sub_1008237B8((uint64_t)v30);
  LOBYTE(v37) = DynamicTypeSize.isAccessibilitySize.getter(v47);
  v48 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v171 = v30;
  v172 = v27;
  v169 = v48;
  v49 = ((uint64_t (*)(char *, uint64_t))v48)(v30, v27);
  v179 = a1;
  v50 = Song.title.getter(v49);
  v176 = v40;
  v177 = v46;
  v175 = v42;
  v174 = v44;
  v185 = v50;
  v186 = v51;
  v52 = sub_100055B68();
  if ((v37 & 1) != 0)
  {
    v53 = Text.init<A>(_:)(&v185, &type metadata for String, v52);
    v55 = v54;
    v57 = v56;
    v59 = v58 & 1;
    v60 = static Text.+ infix(_:_:)(v53, v54, v58 & 1, v56, v40, v42, v44 & 1, v46);
    v62 = v61;
    v64 = v63;
    v66 = v65 & 1;
    sub_100055BAC(v53, v55, v59);
    swift_bridgeObjectRelease(v57);
    v185 = v60;
    v186 = v62;
    v187 = v66;
    v188 = v64;
    v67 = AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor();
    v68 = *v67;
    v69 = v67[1];
    swift_bridgeObjectRetain();
    v70 = (uint64_t)v149;
    View.accessibilityIdentifier(_:)(v68, v69, &type metadata for Text, &protocol witness table for Text);
    swift_bridgeObjectRelease(v69);
    sub_100055BAC(v60, v62, v66);
    swift_bridgeObjectRelease(v64);
    v71 = &qword_1011A2988;
    v72 = v168;
    sub_10004A160(v70, v168, &qword_1011A2988);
    swift_storeEnumTagMultiPayload(v72, v166, 0);
    v73 = sub_1001C95C4();
    v74 = sub_100049F28(&qword_1011A5380, &qword_1011A5318, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v72, v167, v173, v73, v74);
  }
  else
  {
    v185 = Text.init<A>(_:)(&v185, &type metadata for String, v52);
    v186 = v75;
    v187 = v76 & 1;
    v188 = v77;
    v78 = v150;
    static Text.Suffix.alwaysVisible(_:)(v40, v42, v44 & 1, v46);
    v79 = v154;
    View.textSuffix(_:)(v78, &type metadata for Text, &protocol witness table for Text);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v78, v153);
    sub_100055BAC(v185, v186, v187);
    swift_bridgeObjectRelease(v188);
    KeyPath = swift_getKeyPath(&unk_100EADA90);
    v81 = v155;
    v82 = (uint64_t)v157;
    v83 = v156;
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v157, v79, v156);
    v84 = v82 + *(int *)(v151 + 36);
    *(_QWORD *)v84 = KeyPath;
    *(_QWORD *)(v84 + 8) = 2;
    *(_BYTE *)(v84 + 16) = 0;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v83);
    v85 = swift_getKeyPath(&unk_100EAD5C0);
    v86 = (uint64_t)v160;
    *v160 = v85;
    v87 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v86, v87, 0);
    v88 = v158;
    v89 = (uint64_t)v159;
    sub_10005B6C0(v86, (uint64_t)&v159[*(int *)(v158 + 36)], type metadata accessor for LineHeightModifier);
    sub_100065228(v82, v89, &qword_1011A5328);
    v90 = AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor();
    v91 = *v90;
    v92 = v90[1];
    v93 = sub_1001C9498();
    swift_bridgeObjectRetain();
    v94 = (uint64_t)v161;
    View.accessibilityIdentifier(_:)(v91, v92, v88, v93);
    swift_bridgeObjectRelease(v92);
    sub_10004FF60(v89, &qword_1011A5330);
    v71 = &qword_1011A5338;
    v70 = v162;
    sub_100065228(v94, v162, &qword_1011A5338);
    v95 = enum case for Font.TextStyle.body(_:);
    v96 = type metadata accessor for Font.TextStyle(0);
    v97 = (uint64_t)v164;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 104))(v164, v95, v96);
    v98 = sub_100007E8C(&qword_1011A5368);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v97, 0, 1, v98);
    *(_QWORD *)(v97 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x4032000000000000;
    sub_10004A160(v70, v94, &qword_1011A5338);
    v99 = v163;
    sub_10005B704(v97, v163, type metadata accessor for BaselineSpacer);
    v100 = v165;
    sub_10004A160(v94, v165, &qword_1011A5338);
    v101 = sub_100007E8C(&qword_1011A5370);
    sub_10005B704(v99, v100 + *(int *)(v101 + 48), type metadata accessor for BaselineSpacer);
    sub_10005B748(v99, type metadata accessor for BaselineSpacer);
    sub_10004FF60(v94, &qword_1011A5338);
    v102 = v168;
    sub_10004A160(v100, v168, &qword_1011A5318);
    swift_storeEnumTagMultiPayload(v102, v166, 1);
    v103 = sub_1001C95C4();
    v104 = sub_100049F28(&qword_1011A5380, &qword_1011A5318, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v102, v167, v173, v103, v104);
    sub_10004FF60(v100, &qword_1011A5318);
    sub_10005B748(v97, type metadata accessor for BaselineSpacer);
  }
  v105 = sub_10004FF60(v70, v71);
  v185 = Song.artistName.getter(v105);
  v186 = v106;
  v107 = sub_100055B68();
  v108 = Text.init<A>(_:)(&v185, &type metadata for String, v107);
  v110 = v109;
  v112 = v111;
  v114 = v113;
  if (qword_10119BB18 != -1)
    swift_once(&qword_10119BB18, sub_1001BF88C);
  v115 = v112 & 1;
  v116 = Text.font(_:)(qword_10124CA70, v108, v110, v115, v114);
  v118 = v117;
  v120 = v119;
  v122 = v121 & 1;
  sub_100055BAC(v108, v110, v115);
  swift_bridgeObjectRelease(v114);
  LODWORD(v185) = static HierarchicalShapeStyle.secondary.getter(v123);
  v124 = Text.foregroundStyle<A>(_:)(&v185, v116, v118, v122, v120, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v126 = v125;
  v128 = v127;
  v130 = v129 & 1;
  sub_100055BAC(v116, v118, v122);
  swift_bridgeObjectRelease(v120);
  v131 = (uint64_t)v171;
  v132 = sub_1008237B8((uint64_t)v171);
  v133 = DynamicTypeSize.isAccessibilitySize.getter(v132);
  v169(v131, v172);
  v134 = swift_getKeyPath(&unk_100EADA90);
  v185 = v124;
  v186 = v126;
  v187 = v130;
  v188 = v128;
  v189 = v134;
  v190 = (v133 & 1) == 0;
  v191 = v133 & 1;
  v135 = AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.unsafeMutableAddressor();
  v136 = *v135;
  v137 = v135[1];
  swift_bridgeObjectRetain();
  v138 = sub_100007E8C(&qword_1011A5388);
  v139 = sub_1001C9648();
  v140 = (uint64_t)v180;
  View.accessibilityIdentifier(_:)(v136, v137, v138, v139);
  swift_bridgeObjectRelease(v137);
  sub_100055BAC(v124, v126, v130);
  swift_release(v134);
  swift_bridgeObjectRelease(v128);
  v141 = v181;
  sub_100065228(v140, v181, &qword_1011A2E90);
  v142 = v184;
  v143 = v178;
  sub_10004A160(v184, v178, &qword_1011A5348);
  v144 = v183;
  sub_10004A160(v141, v183, &qword_1011A2E90);
  v145 = v182;
  sub_10004A160(v143, v182, &qword_1011A5348);
  v146 = sub_100007E8C(&qword_1011A5398);
  sub_10004A160(v144, v145 + *(int *)(v146 + 48), &qword_1011A2E90);
  sub_100055BAC(v176, v175, v174 & 1);
  swift_bridgeObjectRelease(v177);
  sub_10004FF60(v141, &qword_1011A2E90);
  sub_10004FF60(v142, &qword_1011A5348);
  sub_10004FF60(v144, &qword_1011A2E90);
  return sub_10004FF60(v143, &qword_1011A5348);
}

uint64_t sub_1001BD998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t KeyPath;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __int128 v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  __int128 *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  _OWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _OWORD v154[3];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  _OWORD v173[2];
  _OWORD v174[3];

  v140 = a2;
  v119 = type metadata accessor for PlaylistSongSuggestionsView.DurationView(0);
  __chkstk_darwin(v119);
  v121 = (uint64_t *)((char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100007E8C(&qword_1011A53A8);
  v135 = *(_QWORD *)(v4 - 8);
  v136 = v4;
  __chkstk_darwin(v4);
  v120 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A53B0);
  __chkstk_darwin(v6);
  v139 = (uint64_t)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v137 = (char *)&v119 - v9;
  v10 = sub_100007E8C(&qword_1011A53B8);
  __chkstk_darwin(v10);
  v138 = (uint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v142 = (uint64_t)&v119 - v13;
  v132 = type metadata accessor for DynamicTypeSize(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v128 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v127 = (uint64_t)&v119 - v16;
  v17 = sub_100007E8C(&qword_1011B8D50);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Text.Suffix(0, v18);
  v124 = *(_QWORD *)(v21 - 8);
  v125 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100007E8C(&qword_1011A5320);
  v24 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v26 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100007E8C(&qword_1011A5328);
  __chkstk_darwin(v123);
  v28 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100007E8C(&qword_1011A53C0);
  __chkstk_darwin(v133);
  v30 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100007E8C(&qword_1011A53C8);
  __chkstk_darwin(v31);
  v134 = (uint64_t)&v119 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v131 = (char *)&v119 - v34;
  __chkstk_darwin(v35);
  v141 = (uint64_t)&v119 - v36;
  v122 = a1;
  *(_QWORD *)&v164 = Song.title.getter(v37);
  *((_QWORD *)&v164 + 1) = v38;
  v129 = sub_100055B68();
  *(_QWORD *)&v164 = Text.init<A>(_:)(&v164, &type metadata for String, v129);
  *((_QWORD *)&v164 + 1) = v39;
  LOBYTE(v165) = v40 & 1;
  *((_QWORD *)&v165 + 1) = v41;
  Song.contentRating.getter(v164);
  v42 = TextBadge.init(for:isPlayable:)(v20, 1);
  v43 = TextBadge.view.getter(v42);
  v45 = v44;
  v47 = v46;
  v49 = v48 & 1;
  static Text.Suffix.alwaysVisible(_:)(v43, v44, v48 & 1, v46);
  sub_100055BAC(v43, v45, v49);
  swift_bridgeObjectRelease(v47);
  View.textSuffix(_:)(v23, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v23, v125);
  sub_100055BAC(v164, *((uint64_t *)&v164 + 1), v165);
  swift_bridgeObjectRelease(*((_QWORD *)&v165 + 1));
  KeyPath = swift_getKeyPath(&unk_100EADA90);
  v51 = v126;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v28, v26, v126);
  v52 = &v28[*(int *)(v123 + 36)];
  *(_QWORD *)v52 = KeyPath;
  *((_QWORD *)v52 + 1) = 2;
  v52[16] = 0;
  v53 = v26;
  v54 = v122;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v53, v51);
  v126 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(0);
  v55 = v127;
  sub_1008237B8(v127);
  v56 = v130;
  v57 = v128;
  v58 = v132;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v128, enum case for DynamicTypeSize.accessibility1(_:), v132);
  v59 = v57;
  v60 = static DynamicTypeSize.< infix(_:_:)(v55, v57);
  v61 = *(void (**)(char *, uint64_t))(v56 + 8);
  v61(v59, v58);
  v62 = ((uint64_t (*)(uint64_t, uint64_t))v61)(v55, v58);
  v63 = 0.0;
  if ((v60 & 1) != 0)
    v63 = sub_1001BE378() * 0.6;
  v64 = static Alignment.leading.getter(v62);
  v65 = 1;
  _FrameLayout.init(width:height:alignment:)(v174, *(_QWORD *)&v63, (v60 & 1) == 0, 0, 1, v64, v66);
  sub_10004A160((uint64_t)v28, (uint64_t)v30, &qword_1011A5328);
  v67 = v133;
  v68 = &v30[*(int *)(v133 + 36)];
  v69 = v174[1];
  *(_OWORD *)v68 = v174[0];
  *((_OWORD *)v68 + 1) = v69;
  *((_OWORD *)v68 + 2) = v174[2];
  sub_10004FF60((uint64_t)v28, &qword_1011A5328);
  v70 = AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor();
  v71 = *v70;
  v72 = v70[1];
  v73 = sub_10005610C(&qword_1011A53D0, &qword_1011A53C0, (void (*)(void))sub_1001C951C);
  swift_bridgeObjectRetain();
  v74 = (uint64_t)v131;
  View.accessibilityIdentifier(_:)(v71, v72, v67, v73);
  swift_bridgeObjectRelease(v72);
  sub_10004FF60((uint64_t)v30, &qword_1011A53C0);
  v75 = sub_100065228(v74, v141, &qword_1011A53C8);
  *(_QWORD *)&v164 = Song.artistName.getter(v75);
  *((_QWORD *)&v164 + 1) = v76;
  v77 = Text.init<A>(_:)(&v164, &type metadata for String, v129);
  v79 = v78;
  v81 = v80;
  v83 = v82 & 1;
  v84 = static Alignment.leading.getter(v77);
  sub_100149C8C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v164, v86, 0.0, 1, 0.0, 1, v84, v85, v77, v79, v83, v81);
  sub_100055BAC(v77, v79, v83);
  swift_bridgeObjectRelease(v81);
  v161 = v170;
  v162 = v171;
  v163 = v172;
  v157 = v166;
  v158 = v167;
  v159 = v168;
  v160 = v169;
  v155 = v164;
  v156 = v165;
  LODWORD(v77) = static HierarchicalShapeStyle.secondary.getter(v87);
  v88 = swift_getKeyPath(&unk_100EADA90);
  v170 = v161;
  v171 = v162;
  v172 = v163;
  v166 = v157;
  v167 = v158;
  v168 = v159;
  v169 = v160;
  v164 = v155;
  v165 = v156;
  LODWORD(v173[0]) = v77;
  *((_QWORD *)&v173[0] + 1) = v88;
  *(_QWORD *)&v173[1] = 2;
  BYTE8(v173[1]) = 0;
  v153 = v163;
  v154[0] = v173[0];
  *(_OWORD *)((char *)v154 + 9) = *(_OWORD *)((char *)v173 + 9);
  v149 = v159;
  v150 = v160;
  v151 = v161;
  v152 = v162;
  v145 = v155;
  v146 = v156;
  v147 = v157;
  v148 = v158;
  v89 = AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.unsafeMutableAddressor();
  v90 = *v89;
  v91 = v89[1];
  swift_bridgeObjectRetain();
  v92 = sub_100007E8C(&qword_1011A53D8);
  v93 = sub_1001C96E0();
  v94 = v142;
  View.accessibilityIdentifier(_:)(v90, v91, v92, v93);
  swift_bridgeObjectRelease(v91);
  v95 = sub_1001C984C((uint64_t)&v164);
  v96 = Song.duration.getter(v95);
  v97 = v136;
  v98 = (uint64_t)v137;
  if ((v99 & 1) == 0)
  {
    v100 = (uint64_t)v121;
    *v121 = v96;
    v101 = (_QWORD *)(v100 + *(int *)(v119 + 20));
    *v101 = swift_getKeyPath(&unk_100EAD5C0);
    v102 = sub_100007E8C((uint64_t *)&unk_1011ACE40);
    swift_storeEnumTagMultiPayload(v101, v102, 0);
    v103 = (__int128 *)(v54 + *(int *)(v126 + 24));
    v104 = *((_QWORD *)v103 + 2);
    v143 = *v103;
    v144 = v104;
    v105 = sub_100007E8C(&qword_1011A5410);
    State.projectedValue.getter(&v145, v105);
    v106 = v145;
    v107 = v146;
    v108 = v120;
    sub_10005B704(v100, v120, type metadata accessor for PlaylistSongSuggestionsView.DurationView);
    v109 = (_OWORD *)(v108 + *(int *)(v97 + 36));
    *v109 = v106;
    v109[1] = v107;
    sub_10005B748(v100, type metadata accessor for PlaylistSongSuggestionsView.DurationView);
    sub_100065228(v108, v98, &qword_1011A53A8);
    v65 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v98, v65, 1, v97);
  v110 = v141;
  v111 = v134;
  sub_10004A160(v141, v134, &qword_1011A53C8);
  v112 = v94;
  v113 = v138;
  sub_10004A160(v112, v138, &qword_1011A53B8);
  v114 = v139;
  sub_10004A160(v98, v139, &qword_1011A53B0);
  v115 = v140;
  sub_10004A160(v111, v140, &qword_1011A53C8);
  v116 = (int *)sub_100007E8C(&qword_1011A5408);
  v117 = v115 + v116[12];
  *(_QWORD *)v117 = 0x4030000000000000;
  *(_BYTE *)(v117 + 8) = 0;
  sub_10004A160(v113, v115 + v116[16], &qword_1011A53B8);
  sub_10004A160(v114, v115 + v116[20], &qword_1011A53B0);
  sub_10004FF60(v98, &qword_1011A53B0);
  sub_10004FF60(v142, &qword_1011A53B8);
  sub_10004FF60(v110, &qword_1011A53C8);
  sub_10004FF60(v114, &qword_1011A53B0);
  sub_10004FF60(v113, &qword_1011A53B8);
  return sub_10004FF60(v111, &qword_1011A53C8);
}

double sub_1001BE378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  char v19;
  void (*v20)(char *, uint64_t);
  double v21;
  double v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  __int128 v32;
  uint64_t v33;
  double v34[2];

  v1 = v0;
  v2 = sub_100007E8C((uint64_t *)&unk_1011A33B8);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  v12 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(0);
  v13 = *(_QWORD *)(v0 + *(int *)(v12 + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_100EAD4A0);
  v15 = swift_getKeyPath(&unk_100EAD4C8);
  swift_retain(v13);
  static Published.subscript.getter(&v32, v16, KeyPath, v15);
  swift_release(v13);
  swift_release(KeyPath);
  swift_release(v15);
  v17 = *(double *)&v32;
  if (qword_10119BA88 != -1)
    swift_once(&qword_10119BA88, sub_1001BF648);
  v18 = *(double *)&qword_10124C9B0;
  sub_1008237B8((uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DynamicTypeSize.accessibility3(_:), v5);
  v19 = static DynamicTypeSize.< infix(_:_:)(v11, v8);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  v20(v11, v5);
  if (qword_10119BB00 != -1)
    swift_once(&qword_10119BB00, sub_1001BF82C);
  v21 = *(double *)&qword_10124CA58;
  if (qword_10119BB20 != -1)
    swift_once(&qword_10119BB20, sub_1001BF8A8);
  v22 = *(double *)&qword_10124CA78;
  v23 = (__int128 *)(v1 + *(int *)(v12 + 24));
  v24 = *((_QWORD *)v23 + 2);
  v32 = *v23;
  v33 = v24;
  v25 = sub_100007E8C(&qword_1011A5410);
  State.wrappedValue.getter(v34, v25);
  v26 = v34[0];
  sub_100824BE4((uint64_t)v4);
  v27 = sub_1001C60F4((uint64_t)v4);
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A33B8);
  if (qword_10119BAC0 != -1)
    swift_once(&qword_10119BAC0, sub_1001BF71C);
  v28 = 72.0;
  if ((v19 & 1) != 0)
    v28 = 48.0;
  v29 = v17 - v18 - v28 - v21 - v22 - v26 - v27 - *(double *)&qword_10124C9E8;
  sub_100824BE4((uint64_t)v4);
  v30 = sub_1001C3798((uint64_t)v4);
  sub_10004FF60((uint64_t)v4, (uint64_t *)&unk_1011A33B8);
  return v29 - v30;
}

uint64_t sub_1001BE6A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_100007E8C(&qword_1011A2F40);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v6);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v7 = sub_100007E8C(&qword_1011A53A0);
  v8 = sub_1001BD998(v1, (uint64_t)&v5[*(int *)(v7 + 44)]);
  v9 = static Alignment.leading.getter(v8);
  sub_100149C28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v9, v10);
  return sub_10004FF60((uint64_t)v5, &qword_1011A2F40);
}

uint64_t sub_1001BE788@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t KeyPath;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  double *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;

  v93 = a1;
  v92 = type metadata accessor for DynamicTypeSize(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v3);
  v89 = (uint64_t)&v80 - v5;
  v6 = type metadata accessor for Duration.TimeFormatStyle.Pattern(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Duration.TimeFormatStyle(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011A5600);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v81 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100007E8C(&qword_1011A5608);
  __chkstk_darwin(v84);
  v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011A5610);
  __chkstk_darwin(v18);
  v87 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011A5618);
  __chkstk_darwin(v85);
  v86 = (uint64_t)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v1;
  v23 = static Duration.seconds(_:)(v21, v22, *v1);
  v25 = v24;
  static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
  static FormatStyle<>.time(pattern:)(v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v26 = sub_100048748(&qword_1011A5620, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.TimeFormatStyle);
  Duration.formatted<A>(_:)(&v95, v14, v23, v25, v11, v26);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v94 = v95;
  v27 = sub_100055B68();
  v28 = Text.init<A>(_:)(&v94, &type metadata for String, v27);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  v35 = static Font.body.getter(v28);
  v36 = Text.font(_:)(v35, v28, v30, v34, v32);
  v38 = v37;
  LOBYTE(v11) = v39;
  v41 = v40;
  swift_release(v35);
  LOBYTE(v35) = v11 & 1;
  v42 = v81;
  sub_100055BAC(v28, v30, v34);
  swift_bridgeObjectRelease(v32);
  KeyPath = swift_getKeyPath(&unk_100EADA90);
  v44 = static HierarchicalShapeStyle.secondary.getter(KeyPath);
  *(_QWORD *)&v95 = v36;
  *((_QWORD *)&v95 + 1) = v38;
  LOBYTE(v96) = v35;
  *((_QWORD *)&v96 + 1) = v41;
  *(_QWORD *)&v97 = KeyPath;
  *((_QWORD *)&v97 + 1) = 1;
  LOBYTE(v98) = 0;
  DWORD1(v98) = v44;
  v45 = sub_100007E8C(&qword_1011A5628);
  v46 = sub_1001CACA4();
  View.monospacedDigit()(v45, v46);
  sub_100055BAC(v36, v38, v35);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v41);
  v48 = static Edge.Set.leading.getter(v47);
  if (qword_10119BB20 != -1)
    swift_once(&qword_10119BB20, sub_1001BF8A8);
  v49 = EdgeInsets.init(_all:)(*(double *)&qword_10124CA78);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v82;
  v57 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v17, v42, v83);
  v58 = v84;
  v59 = &v17[*(int *)(v84 + 36)];
  *v59 = v48;
  *((double *)v59 + 1) = v49;
  *((_QWORD *)v59 + 2) = v51;
  *((_QWORD *)v59 + 3) = v53;
  *((_QWORD *)v59 + 4) = v55;
  v59[40] = 0;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
  v60 = AccessibilityIdentifier.playlistSuggestedSongsCellDuration.unsafeMutableAddressor();
  v61 = *v60;
  v62 = v60[1];
  v63 = sub_1001CAD28();
  swift_bridgeObjectRetain();
  v64 = (uint64_t)v87;
  View.accessibilityIdentifier(_:)(v61, v62, v58, v63);
  swift_bridgeObjectRelease(v62);
  sub_10004FF60((uint64_t)v17, &qword_1011A5608);
  type metadata accessor for PlaylistSongSuggestionsView.DurationView(0);
  v65 = v89;
  sub_1008237B8(v89);
  v66 = v91;
  v67 = v90;
  v68 = v92;
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, enum case for DynamicTypeSize.accessibility3(_:), v92);
  LOBYTE(v61) = static DynamicTypeSize.< infix(_:_:)(v65, v67);
  v69 = *(void (**)(char *, uint64_t))(v66 + 8);
  v69(v67, v68);
  v70 = ((uint64_t (*)(uint64_t, uint64_t))v69)(v65, v68);
  v71 = static Alignment.center.getter(v70);
  if ((v61 & 1) != 0)
    v73 = 0x4048000000000000;
  else
    v73 = 0x4052000000000000;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v95, 0, 1, 0, 1, 0, 1, v73, 0, 0, 1, 0, 1, v71, v72);
  v74 = v86;
  sub_10004A160(v64, v86, &qword_1011A5610);
  v75 = (_OWORD *)(v74 + *(int *)(v85 + 36));
  v76 = v100;
  v75[4] = v99;
  v75[5] = v76;
  v75[6] = v101;
  v77 = v96;
  *v75 = v95;
  v75[1] = v77;
  v78 = v98;
  v75[2] = v97;
  v75[3] = v78;
  sub_10004FF60(v64, &qword_1011A5610);
  return sub_100065228(v74, v93, &qword_1011A5618);
}

uint64_t sub_1001BEDB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __int128 v47;
  char v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  double v54;
  __int128 v55;
  char v56;
  char v57;
  uint64_t OpaqueTypeConformance2;
  char *v59;
  uint64_t v60;
  __n128 v61;
  double v62;
  char v63;
  char *v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  _QWORD v104[2];
  _BYTE v105[56];

  v103 = a1;
  v92 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v3);
  v87 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v83 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v83 - v13;
  v15 = sub_100007E8C((uint64_t *)&unk_1011A3E10);
  __chkstk_darwin(v15);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100007E8C((uint64_t *)&unk_1011C4FE0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (uint64_t)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_100007E8C(&qword_1011A5420);
  __chkstk_darwin(v94);
  v85 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100007E8C(&qword_1011A5428);
  v96 = *(_QWORD *)(v20 - 8);
  v97 = v20;
  __chkstk_darwin(v20);
  v95 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011A5430);
  v99 = *(_QWORD *)(v22 - 8);
  v100 = v22;
  __chkstk_darwin(v22);
  v93 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100007E8C(&qword_1011A5438);
  __chkstk_darwin(v101);
  v102 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011A5440);
  __chkstk_darwin(v25);
  v98 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Song(0);
  v84 = v1;
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v27, (uint64_t)&protocol witness table for Song, v17);
  type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(0);
  sub_1008237B8((uint64_t)v14);
  v28 = enum case for DynamicTypeSize.accessibility3(_:);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v29(v11, enum case for DynamicTypeSize.accessibility3(_:), v5);
  v30 = static DynamicTypeSize.< infix(_:_:)(v14, v11);
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v11, v5);
  v31(v14, v5);
  sub_1008237B8((uint64_t)v8);
  v29(v11, v28, v5);
  v32 = static DynamicTypeSize.< infix(_:_:)(v8, v11);
  v31(v11, v5);
  if ((v30 & 1) != 0)
    v33 = 0x4048000000000000;
  else
    v33 = 0x4052000000000000;
  v31(v8, v5);
  if ((v32 & 1) != 0)
    v34 = 0x4048000000000000;
  else
    v34 = 0x4052000000000000;
  v35 = (uint64_t)v85;
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v33, 0, v34, 0, 0, 1, 2, (uint64_t)v105);
  v36 = sub_100007E8C((uint64_t *)&unk_1011A3DB0);
  v37 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v87, 1, 10, v36);
  v38 = v91;
  v39 = (uint64_t)v90;
  v40 = v92;
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v92);
  v41 = v86;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v17, v37, (uint64_t)v105, v39, v86);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
  sub_10005B748(v37, type metadata accessor for ArtworkImage.Placeholder);
  v42 = sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011A3E10);
  v43 = Song.id.getter(v42);
  v45 = v44;
  sub_1006BB3B4(v43, v44, 0, 1, v35);
  v46 = swift_bridgeObjectRelease(v45);
  (*(void (**)(uint64_t, uint64_t, __n128))(v88 + 8))(v41, v89, v46);
  if (qword_10119BAF8 != -1)
    swift_once(&qword_10119BAF8, sub_1001BF800);
  v47 = xmmword_10124CA40;
  v48 = byte_10124CA50;
  v49 = sub_1001C9C90();
  v50 = v95;
  v51 = v94;
  View.corner(_:)(v47, *((uint64_t *)&v47 + 1), v48, v94, v49);
  sub_10004FF60(v35, &qword_1011A5420);
  v52 = Border.artwork.unsafeMutableAddressor();
  v53 = *v52;
  v54 = *((double *)v52 + 1);
  v55 = xmmword_10124CA40;
  v56 = byte_10124CA50;
  v57 = *((_BYTE *)v52 + 16);
  swift_retain(*v52);
  v104[0] = v51;
  v104[1] = v49;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v104, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v59 = v93;
  v60 = v97;
  View.border(_:corner:)(v53, v57, v55, *((uint64_t *)&v55 + 1), v56, v97, OpaqueTypeConformance2, v54);
  v61 = swift_release(v53);
  v62 = (*(double (**)(char *, uint64_t, __n128))(v96 + 8))(v50, v60, v61);
  v63 = static Edge.Set.trailing.getter(v62);
  v64 = v59;
  if (qword_10119BB00 != -1)
    swift_once(&qword_10119BB00, sub_1001BF82C);
  v65 = EdgeInsets.init(_all:)(*(double *)&qword_10124CA58);
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v73 = v99;
  v72 = v100;
  v74 = (uint64_t)v102;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v102, v64, v100);
  v75 = v101;
  v76 = v74 + *(int *)(v101 + 36);
  *(_BYTE *)v76 = v63;
  *(double *)(v76 + 8) = v65;
  *(_QWORD *)(v76 + 16) = v67;
  *(_QWORD *)(v76 + 24) = v69;
  *(_QWORD *)(v76 + 32) = v71;
  *(_BYTE *)(v76 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v64, v72);
  v77 = AccessibilityIdentifier.playlistSuggestedSongsCellArtwork.unsafeMutableAddressor();
  v78 = *v77;
  v79 = v77[1];
  v80 = sub_1001C9D3C();
  swift_bridgeObjectRetain();
  v81 = (uint64_t)v98;
  View.accessibilityIdentifier(_:)(v78, v79, v75, v80);
  swift_bridgeObjectRelease(v79);
  sub_10004FF60(v74, &qword_1011A5438);
  return sub_100065228(v81, v103, &qword_1011A5440);
}

void sub_1001BF4D4()
{
  qword_10124C990 = Int.seconds.getter(40);
}

void sub_1001BF4F4()
{
  qword_10124C998 = Int.seconds.getter(10);
}

void sub_1001BF514()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[5];
  uint64_t v4;

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_1001BF5B8;
  v4 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100264780;
  v3[3] = &unk_1010B4B90;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v4);
  qword_10124C9A0 = (uint64_t)v2;
}

id sub_1001BF5B8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  sub_10004A07C(0, (unint64_t *)&qword_1011BCD10, UIColor_ptr);
  if (v1 == (id)2)
  {
    v2 = 21;
    v3 = 21;
    v4 = 23;
  }
  else
  {
    v2 = 244;
    v3 = 244;
    v4 = 245;
  }
  return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v2, v3, v4, 1.0);
}

void sub_1001BF628()
{
  qword_10124C9A8 = Int.seconds.getter(20);
}

void sub_1001BF648()
{
  qword_10124C9B0 = Int.seconds.getter(20);
}

void sub_1001BF668()
{
  qword_10124C9B8 = Int.seconds.getter(18);
}

void sub_1001BF688()
{
  qword_10124C9C0 = Int.seconds.getter(18);
}

void sub_1001BF6A8()
{
  qword_10124C9C8 = Int.seconds.getter(2);
}

uint64_t sub_1001BF6C8()
{
  uint64_t result;

  result = static Font.headline.getter();
  qword_10124C9D0 = result;
  return result;
}

void sub_1001BF6E4()
{
  qword_10124C9D8 = static Font.Weight.semibold.getter();
}

uint64_t sub_1001BF700()
{
  uint64_t result;

  result = static Font.subheadline.getter();
  qword_10124C9E0 = result;
  return result;
}

void sub_1001BF71C()
{
  qword_10124C9E8 = Int.seconds.getter(28);
}

void sub_1001BF73C()
{
  qword_10124C9F0 = Int.seconds.getter(0);
}

uint64_t sub_1001BF75C(uint64_t a1)
{
  uint64_t result;

  result = static Font.body.getter(a1);
  qword_10124C9F8 = result;
  return result;
}

void sub_1001BF778()
{
  qword_10124CA00 = static Font.Weight.semibold.getter();
}

void sub_1001BF794()
{
  qword_10124CA08 = Int.seconds.getter(0);
}

void sub_1001BF7B4()
{
  qword_10124CA10 = Int.seconds.getter(0);
}

__n128 sub_1001BF7D4()
{
  __n128 *v0;
  char v1;
  __n128 result;

  v0 = (__n128 *)Corner.medium.unsafeMutableAddressor();
  v1 = v0[1].n128_i8[0];
  result = *v0;
  xmmword_10124CA20 = (__int128)*v0;
  byte_10124CA30 = v1;
  return result;
}

__n128 sub_1001BF800()
{
  __n128 *v0;
  char v1;
  __n128 result;

  v0 = (__n128 *)Corner.small.unsafeMutableAddressor();
  v1 = v0[1].n128_i8[0];
  result = *v0;
  xmmword_10124CA40 = (__int128)*v0;
  byte_10124CA50 = v1;
  return result;
}

void sub_1001BF82C()
{
  qword_10124CA58 = Int.seconds.getter(12);
}

void sub_1001BF84C()
{
  qword_10124CA60 = Int.seconds.getter(2);
}

void sub_1001BF86C()
{
  qword_10124CA68 = Int.seconds.getter(16);
}

uint64_t sub_1001BF88C()
{
  uint64_t result;

  result = static Font.footnote.getter();
  qword_10124CA70 = result;
  return result;
}

void sub_1001BF8A8()
{
  qword_10124CA78 = Int.seconds.getter(16);
}

uint64_t sub_1001BF8C8()
{
  uint64_t result;

  result = static Color.accentColor.getter();
  qword_10124CA80 = result;
  return result;
}

uint64_t sub_1001BF8E4(uint64_t a1)
{
  uint64_t result;

  result = static Font.body.getter(a1);
  qword_10124CA88 = result;
  return result;
}

void sub_1001BF900()
{
  qword_10124CA90 = static Font.Weight.semibold.getter();
}

void sub_1001BF91C()
{
  qword_10124CA98 = Int.seconds.getter(465);
}

void sub_1001BF93C()
{
  qword_10124CAA0 = Int.seconds.getter(4);
}

uint64_t sub_1001BF95C(uint64_t a1)
{
  return sub_1001BFBAC(0.1, a1, &qword_10124CAA8);
}

uint64_t sub_1001BF970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn(duration:)(0.3);
  v2 = Animation.delay(_:)(0.3);
  swift_release(v1);
  v3 = AnyTransition.animation(_:)(v2, v0);
  swift_release(v0);
  v4 = swift_release(v2);
  v5 = static UnitPoint.center.getter(v4);
  v7 = static AnyTransition.scale(scale:anchor:)(0.97, v5, v6);
  v8 = static Animation.easeIn(duration:)(0.3);
  v9 = Animation.delay(_:)(0.3);
  swift_release(v8);
  v10 = AnyTransition.animation(_:)(v9, v7);
  swift_release(v7);
  swift_release(v9);
  v11 = AnyTransition.combined(with:)(v10, v3);
  swift_release(v3);
  result = swift_release(v10);
  qword_1011A4670 = v11;
  return result;
}

uint64_t sub_1001BFA78(uint64_t a1)
{
  return sub_1001BFBAC(0.3, a1, &qword_1011A4678);
}

uint64_t sub_1001BFA90()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10119BB58 != -1)
    swift_once(&qword_10119BB58, sub_1001BF970);
  v0 = qword_1011A4670;
  if (qword_10119BB60 != -1)
    swift_once(&qword_10119BB60, sub_1001BFA78);
  result = static AnyTransition.asymmetric(insertion:removal:)(v0, qword_1011A4678);
  qword_10124CAB0 = result;
  return result;
}

uint64_t sub_1001BFB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn(duration:)(0.3);
  v2 = Animation.delay(_:)(0.2);
  swift_release(v1);
  v3 = AnyTransition.animation(_:)(v2, v0);
  swift_release(v0);
  result = swift_release(v2);
  qword_1011A4680 = v3;
  return result;
}

uint64_t sub_1001BFB94(uint64_t a1)
{
  return sub_1001BFBAC(0.3, a1, &qword_1011A4688);
}

uint64_t sub_1001BFBAC(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = static AnyTransition.opacity.getter();
  v6 = static Animation.easeIn(duration:)(a1);
  v7 = AnyTransition.animation(_:)(v6, v5);
  swift_release(v5);
  result = swift_release(v6);
  *a3 = v7;
  return result;
}

uint64_t sub_1001BFC10()
{
  uint64_t v0;
  uint64_t result;

  if (qword_10119BB70 != -1)
    swift_once(&qword_10119BB70, sub_1001BFB18);
  v0 = qword_1011A4680;
  if (qword_10119BB78 != -1)
    swift_once(&qword_10119BB78, sub_1001BFB94);
  result = static AnyTransition.asymmetric(insertion:removal:)(v0, qword_1011A4688);
  qword_10124CAB8 = result;
  return result;
}

uint64_t sub_1001BFC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];

  v64 = a1;
  v65 = a2;
  v2 = sub_100007E8C(&qword_1011A55B0);
  v57 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v56 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011A55B8);
  __chkstk_darwin(v63);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011A55C0);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011A55C8);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  __chkstk_darwin(v9);
  v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011A55D0);
  __chkstk_darwin(v11);
  v58 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v62 = (uint64_t)&v54 - v14;
  v15 = type metadata accessor for DynamicTypeSize(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v54 - v20;
  sub_1008237B8((uint64_t)&v54 - v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DynamicTypeSize.large(_:), v15);
  v22 = sub_100048748(&qword_1011A4FF0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v23 = dispatch thunk of static Comparable.< infix(_:_:)(v18, v21, v15, v22);
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v18, v15);
  v24(v21, v15);
  if ((v23 & 1) != 0)
  {
    v26 = v56;
    v25 = v57;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
    v27(v56, v64, v2);
    v27(v5, (uint64_t)v26, v2);
    swift_storeEnumTagMultiPayload(v5, v63, 1);
    v28 = sub_1001CAAE0();
    v29 = sub_100049F28(&qword_1011A55D8, &qword_1011A55B0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v5, v11, v2, v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v2);
  }
  else
  {
    v31 = v63;
    v32 = v11;
    if (qword_10119BB10 != -1)
      swift_once(&qword_10119BB10, sub_1001BF86C);
    v33 = *(double *)&qword_10124CA68;
    v34 = sub_100049F28(&qword_1011A55D8, &qword_1011A55B0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    View.minimumLineHeight(_:)(v2, v34, v33);
    v66[0] = v2;
    v66[1] = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v66, &opaque type descriptor for <<opaque return type of View.minimumLineHeight(_:)>>, 1);
    v36 = v59;
    v37 = v55;
    View.maximumLineHeight(_:)(v55, OpaqueTypeConformance2, v33);
    v38 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v8, v37);
    v39 = static Edge.Set.top.getter(v38);
    v40 = v31;
    if (qword_10119BB08 != -1)
      swift_once(&qword_10119BB08, sub_1001BF84C);
    v41 = EdgeInsets.init(_all:)(*(double *)&qword_10124CA60);
    v43 = v42;
    v45 = v44;
    v47 = v46;
    v49 = v60;
    v48 = v61;
    v50 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v58, v36, v61);
    v51 = v50 + *(int *)(v32 + 36);
    *(_BYTE *)v51 = v39;
    *(double *)(v51 + 8) = v41;
    *(_QWORD *)(v51 + 16) = v43;
    *(_QWORD *)(v51 + 24) = v45;
    *(_QWORD *)(v51 + 32) = v47;
    *(_BYTE *)(v51 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v48);
    v52 = v62;
    sub_100065228(v50, v62, &qword_1011A55D0);
    sub_10004A160(v52, (uint64_t)v5, &qword_1011A55D0);
    swift_storeEnumTagMultiPayload(v5, v40, 0);
    v53 = sub_1001CAAE0();
    _ConditionalContent<>.init(storage:)(v5, v32, v2, v53, v34);
    return sub_10004FF60(v52, &qword_1011A55D0);
  }
}

void sub_1001C0164(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = type metadata accessor for GeometryProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v16 = static Color.clear.getter(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = swift_allocObject(&unk_1010B4F90, v18 + v14, v17 | 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  *(double *)(v19 + 32) = a5;
  *(double *)(v19 + 40) = a6;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *a4 = v16;
  a4[1] = (uint64_t)sub_1001CAC70;
  a4[3] = 0;
  a4[4] = 0;
  a4[2] = v19;
  swift_retain(a2);
  swift_retain(a3);
}

uint64_t sub_1001C0278(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v7[2] = a1;
  v7[3] = a2;
  *(double *)&v7[4] = a3;
  *(double *)&v7[5] = a4;
  v7[0] = GeometryProxy.size.getter(a1);
  v7[1] = v4;
  v5 = sub_100007E8C(&qword_1011A55F8);
  return Binding.wrappedValue.setter(v7, v5);
}

uint64_t sub_1001C02E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t@<X0>, uint64_t *@<X8>);
  void (*v13)(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v14;
  uint64_t result;
  void (**v16)(uint64_t@<X0>, uint64_t *@<X8>);

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v9 = (void (*)(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject(&unk_1010B4F68, 48, 7);
  *((_QWORD *)v9 + 2) = v5;
  *((_QWORD *)v9 + 3) = v6;
  *((_QWORD *)v9 + 4) = v7;
  *((_QWORD *)v9 + 5) = v8;
  swift_retain(v5);
  swift_retain(v6);
  v11 = static Alignment.center.getter(v10);
  v13 = v12;
  v14 = sub_100007E8C(&qword_1011A55E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a2, a1, v14);
  result = sub_100007E8C(&qword_1011A55F0);
  v16 = (void (**)(uint64_t@<X0>, uint64_t *@<X8>))(a2 + *(int *)(result + 36));
  *v16 = sub_1001CABE8;
  v16[1] = v9;
  v16[2] = (void (*)(uint64_t@<X0>, uint64_t *@<X8>))v11;
  v16[3] = v13;
  return result;
}

double sub_1001C03AC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100EAD4A0);
  v2 = swift_getKeyPath(&unk_100EAD4C8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001C041C()
{
  return sub_1001C0444((uint64_t)&unk_100EAD458, (uint64_t)&unk_100EAD480);
}

uint64_t sub_1001C0430()
{
  return sub_1001C0444((uint64_t)&unk_100EAD410, (uint64_t)&unk_100EAD438);
}

uint64_t sub_1001C0444(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_1001C04AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[24];

  v10 = OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers;
  v11 = sub_10004A07C(0, (unint64_t *)&qword_1011A8960, NSObject_ptr);
  *(_QWORD *)(v5 + v10) = WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v11);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_pendingImpressionCellTags) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_impressedSongs) = &_swiftEmptySetSingleton;
  v12 = v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_playlist;
  v13 = type metadata accessor for Playlist(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  sub_100064AC8(a2, v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_presentationSource);
  v15 = sub_10047D580(a3);
  swift_bridgeObjectRelease(a3);
  v16 = WeakArray.init(_:)((uint64_t)v15, v11);
  v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers) = v16;
  swift_bridgeObjectRelease(v17);
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource__availableWidth, v21, 33, 0);
  v20 = 0;
  Published.init(initialValue:)(&v20, &type metadata for CGFloat);
  swift_endAccess(v21);
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource__isEditing, v21, 33, 0);
  LOBYTE(v20) = a4;
  Published.init(initialValue:)(&v20, &type metadata for Bool);
  swift_endAccess(v21);
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource__isTracklistEmpty, v21, 33, 0);
  LOBYTE(v20) = a5;
  Published.init(initialValue:)(&v20, &type metadata for Bool);
  swift_endAccess(v21);
  sub_100064B4C(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v5;
}

uint64_t sub_1001C06B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_playlist;
  v2 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_100064B4C(v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_presentationSource);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_updateReceivers));
  v3 = v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource__availableWidth;
  v4 = sub_100007E8C(&qword_10119DF00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource__isEditing;
  v6 = sub_100007E8C((uint64_t *)&unk_1011A3380);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource__isTracklistEmpty, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_pendingImpressionCellTags));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Music24SuggestedSongsDataSource_impressedSongs));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001C07B8()
{
  return type metadata accessor for SuggestedSongsDataSource(0);
}

uint64_t type metadata accessor for SuggestedSongsDataSource(uint64_t a1)
{
  return sub_100055934(a1, qword_1011A46D0, (uint64_t)&nominal type descriptor for SuggestedSongsDataSource);
}

void sub_1001C07D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v2 = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "H";
    v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_1000EA598(319, (unint64_t *)&qword_10119DE38, (uint64_t)&type metadata for CGFloat);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000EA598(319, (unint64_t *)&qword_1011C4B00, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v9 = *(_QWORD *)(v6 - 8) + 64;
        v10 = v9;
        v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
        v12 = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_updateClassMetadata2(a1, 256, 8, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_1001C08B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SuggestedSongsDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

double sub_1001C08F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  double result;

  v5 = v3;
  v8 = static Alignment.center.getter(a1);
  v10 = v9;
  v11 = a3 + *(int *)(sub_100007E8C(&qword_1011A4E58) + 36);
  v12 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v5, v12);
  v13 = (uint64_t *)(v5 + *(int *)(a2 + 20));
  v15 = *v13;
  v14 = v13[1];
  v16 = (_QWORD *)(v11 + *(int *)(type metadata accessor for TaggedViewResolver(0) + 20));
  *v16 = v15;
  v16[1] = v14;
  v17 = (uint64_t *)(v11 + *(int *)(sub_100007E8C(&qword_1011A4E60) + 36));
  *v17 = v8;
  v17[1] = v10;
  v18 = sub_100007E8C(&qword_1011A4E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a3, a1, v18);
  *(_QWORD *)&result = swift_retain(v14).n128_u64[0];
  return result;
}

uint64_t sub_1001C0AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV5Music18TaggedViewResolver4View_song;
  v2 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCV5Music18TaggedViewResolver4View_windowObserver + 8));
}

id sub_1001C0AFC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TaggedViewResolver.View(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001C0B84()
{
  return type metadata accessor for TaggedViewResolver.View(0);
}

uint64_t type metadata accessor for TaggedViewResolver.View(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011A4890, (uint64_t)&nominal type descriptor for TaggedViewResolver.View);
}

uint64_t sub_1001C0BA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1001C0C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v4 = type metadata accessor for Song(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, v2, v5);
  v9 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v10 = *v9;
  v11 = v9[1];
  v12 = objc_allocWithZone((Class)type metadata accessor for TaggedViewResolver.View(0));
  swift_retain(v11);
  v13 = sub_1001C989C((uint64_t)v7, v10, v11);
  swift_release(v11);
  return v13;
}

uint64_t sub_1001C0CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011A5418, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_100EAD95C);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001C0D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748(&qword_1011A5418, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_100EAD95C);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1001C0D9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748(&qword_1011A5418, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_100EAD95C);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_1001C0DD8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EAD458);
  v5 = swift_getKeyPath(&unk_100EAD480);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

