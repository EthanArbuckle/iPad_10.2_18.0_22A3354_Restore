void sub_1001AA500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AA658(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001AA78C(id a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v1 = objc_alloc((Class)MUISearchSuggestionCategory);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("SEARCH_SUGGESTION_CATEGORY_DATE"), &stru_100531B00, CFSTR("Main")));
  v4 = objc_msgSend(v1, "initWithDisplayName:", v3);
  v5 = (void *)qword_1005AA3E0;
  qword_1005AA3E0 = (uint64_t)v4;

  objc_msgSend((id)qword_1005AA3E0, "setImageInstantiationBlock:", &stru_100522BC0);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", MFImageGlyphSearchDate));
  objc_msgSend((id)qword_1005AA3E0, "setAtomImage:", v6);

  objc_msgSend((id)qword_1005AA3E0, "setParsecCategory:", MSSearchSuggestionCategoryDates);
}

void sub_1001AA868(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

UIImage *__cdecl sub_1001AA888(id a1)
{
  return (UIImage *)+[UIImage mf_systemImageNamed:forView:](UIImage, "mf_systemImageNamed:forView:", MFImageGlyphSearchDate, 15);
}

void sub_1001AA8E4(id a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = objc_alloc((Class)MUISearchSuggestionCategory);
  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("SEARCH_SUGGESTION_CATEGORY_OTHER"), &stru_100531B00, CFSTR("Main")));
  v3 = objc_msgSend(v1, "initWithDisplayName:", v2);
  v4 = (void *)qword_1005AA3F0;
  qword_1005AA3F0 = (uint64_t)v3;

}

void sub_1001AA970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AA9D0(id a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = objc_alloc((Class)MUISearchSuggestionCategory);
  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("SEARCH_SUGGESTION_CATEGORY_CANNED"), &stru_100531B00, CFSTR("Main")));
  v3 = objc_msgSend(v1, "initWithDisplayName:", v2);
  v4 = (void *)qword_1005AA400;
  qword_1005AA400 = (uint64_t)v3;

}

void sub_1001AAA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AAB24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001AAB98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

NSPredicate *__cdecl sub_1001AABA8(id a1, MUISearchAtomSuggestion *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[MUISearchAtomSuggestion title](a2, "title"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessageListItemSearchPredicates spotlightSearchPredicateForValue:](EMMessageListItemSearchPredicates, "spotlightSearchPredicateForValue:", v2));

  return (NSPredicate *)v3;
}

void sub_1001AABF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AAC2C(id a1)
{
  +[EMListUnsubscribeCommand setAccountFinderBlock:](EMListUnsubscribeCommand, "setAccountFinderBlock:", &stru_100522CA0);
}

EDReceivingAccount *__cdecl sub_1001AAC40(id a1, NSString *a2)
{
  return (EDReceivingAccount *)(id)objc_claimAutoreleasedReturnValue(+[MailAccount accountWithUniqueId:](MailAccount, "accountWithUniqueId:", a2));
}

void sub_1001AAD48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001AADD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AAE58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AAEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AB06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001AB10C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AB280(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.mobilemail", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA418;
  qword_1005AA418 = (uint64_t)v2;

}

void sub_1001AB2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AB384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AB4D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AB53C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AB598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AB62C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AB6BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AB710(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AB7B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AB884(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AB918(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AB984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AB9FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001ABB24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001ABCE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

id sub_1001ABD24(uint64_t a1)
{
  double x;
  double y;
  double width;
  double height;
  double v6;
  double v7;
  double v8;
  double v9;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(*(id *)(a1 + 32), "frame");
  v12 = CGRectOffset(v11, *(CGFloat *)(a1 + 48), 0.0);
  x = v12.origin.x;
  y = v12.origin.y;
  width = v12.size.width;
  height = v12.size.height;
  objc_msgSend(*(id *)(a1 + 40), "frame");
  v14 = CGRectOffset(v13, *(CGFloat *)(a1 + 48), 0.0);
  v6 = v14.origin.x;
  v7 = v14.origin.y;
  v8 = v14.size.width;
  v9 = v14.size.height;
  objc_msgSend(*(id *)(a1 + 32), "setFrame:", x, y, width, height);
  return objc_msgSend(*(id *)(a1 + 40), "setFrame:", v6, v7, v8, v9);
}

void sub_1001ABDD4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "swipeController"));
  objc_msgSend(v2, "resetSwipedItemAnimated:completion:", 1, *(_QWORD *)(a1 + 40));

}

void sub_1001ABE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001ABE90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001ABF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001ABF80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AC050(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AC070(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (!objc_msgSend(v7, "updateAction"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "indexPathAfterUpdate"));
    v4 = objc_msgSend(v3, "item");

    if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "insertedIndexPaths"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "indexPathAfterUpdate"));
      objc_msgSend(v5, "addObject:", v6);

    }
  }

}

void sub_1001AC10C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1001AC2C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001AC6FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001AC864(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001ACA14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001ACB24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001ACB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFTextSelectionScrollHandler;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001ACC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  void *v15;
  id *v16;
  void *v17;

  v17 = v15;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1001ACCC8(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "handleTouchEvents:", v3);

}

void sub_1001ACD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001ACE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001ACFA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD088(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD0A4(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  id v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  if (v2)
  {
    if (objc_msgSend(v2, "phase") == (id)2)
    {
      v3 = *(_QWORD **)(a1 + 32);
      v4 = (void *)v3[3];
      v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "scrollView"));
      objc_msgSend(v4, "locationInView:");
      objc_msgSend(v3, "_scrollForTouchLocation:");

    }
  }
}

void sub_1001AD120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AD1B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001AD220(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD2C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD3C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD458(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AD4E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AD59C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AD650(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AD704(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AD82C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001ADAE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001ADB6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001ADCD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001ADD00(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "setAlpha:", (double)*(unint64_t *)&a2);
}

void sub_1001ADD84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001ADDFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001ADFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AE0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AE130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AE890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  void *v15;
  void *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1001AE8DC(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_tabPressUpdated:", v3);

}

void sub_1001AE924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AEC14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001AEDFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AEF60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AEFD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001AF1C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AF3E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001AF4BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AF564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AF658(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AF760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001AF854(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001AFA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AFA3C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = a2;
  objc_msgSend(v5, "setCountForLayout:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v5, "setIndexForLayout:", a3);

}

void sub_1001AFA84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001AFE30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001AFF48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B0078(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1001B02D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B050C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B0664(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001B0738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B07F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B0868(uint64_t a1, void *a2, uint64_t a3)
{
  id WeakRetained;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 248));
  v6 = objc_msgSend(v9, "contentViewType");
  v7 = *(_QWORD *)(a1 + 32);
  if (v6)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "borrowedContentView"));
    objc_msgSend(WeakRetained, "tiltedTabView:relinquishSnapshotView:forItemAtIndex:", v7, v8, a3);
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "borrowedContentView"));
    objc_msgSend(WeakRetained, "tiltedTabView:relinquishContentView:forItemAtIndex:", v7, v8, a3);
  }

  objc_msgSend(v9, "setBorrowedContentView:", 0);
}

void sub_1001B092C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001B0BE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B0C54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B1188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  void *v25;
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_1001B1268(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(v2, "tiltedTabView:didActivateSpringLoadingForItemAtIndex:", WeakRetained, *(_QWORD *)(a1 + 40));

}

void sub_1001B12B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001B12D8(uint64_t a1, void *a2, char *a3)
{
  id v5;
  id v6;

  v5 = a2;
  v6 = v5;
  if (a3)
  {
    if ((char *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "count") - 3 >= a3)
      goto LABEL_6;
  }
  else
  {
    objc_msgSend(v5, "setFalseShadowEdge:", 4);
  }
  objc_msgSend(v6, "setShadowOpacity:", 0.2);
  objc_msgSend(v6, "setShadowRadius:", 3.0);
LABEL_6:

}

void sub_1001B1358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B14A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001B1564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B1800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001B1910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1001B19CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_1001B19E8(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "closeButton"));
  v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    objc_msgSend(*(id *)(a1 + 40), "_closeItem:", v8);
    *a4 = 1;
  }

}

void sub_1001B1A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B1B68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B1C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001B1D00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B1E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001B2468(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001B269C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001B2A98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001B2B2C(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  id v10;

  v10 = a1;
  v7 = a2;
  v8 = a3;
  if (a4 < 1)
  {
    objc_msgSend(v10, "setFromValue:", v8);
    v9 = v7;
  }
  else
  {
    objc_msgSend(v10, "setFromValue:", v7);
    v9 = v8;
  }
  objc_msgSend(v10, "setToValue:", v9);

}

void sub_1001B2BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001B2CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001B2E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1001B2F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001B319C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B3390(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B34AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B357C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B3658(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B3968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B39F4(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  double i;
  double v11;
  __int128 v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double width;
  double height;
  id v24;
  uint64_t v25;
  uint64_t v26;
  double y;
  double j;
  double v29;
  __int128 v30;
  void *v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  void *v41;
  void *v42;
  void *v43;
  CATransform3D v44;
  CATransform3D v45;
  CGAffineTransform v46;
  CATransform3D v47;
  CGRect v48;
  CGRect v49;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 248));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "borrowedContentView"));
  objc_msgSend(WeakRetained, "tiltedTabView:relinquishSnapshotView:forItemAtIndex:", v3, v4, *(_QWORD *)(a1 + 48));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tiltedTabView:snapshotViewForItemAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));
  objc_msgSend(*(id *)(a1 + 40), "setContentViewType:", 1);
  objc_msgSend(*(id *)(a1 + 40), "setBorrowedContentView:", v5);
  if (objc_msgSend(*(id *)(a1 + 32), "rotationStyle") != (id)2)
  {
    v6 = objc_msgSend(*(id *)(a1 + 32), "_currentOrientation");
    v7 = objc_msgSend(*(id *)(a1 + 40), "capturedInterfaceOrientation");
    v8 = 0;
    v9 = 0;
    for (i = 0.0; ; i = i + v11)
    {
      if (qword_1004C9AF0[v8] == v7)
      {
        if (qword_1004C9AF0[v9] == v6)
        {
          *(_QWORD *)&v12 = -1;
          *((_QWORD *)&v12 + 1) = -1;
          *(_OWORD *)&v47.m41 = v12;
          *(_OWORD *)&v47.m43 = v12;
          *(_OWORD *)&v47.m31 = v12;
          *(_OWORD *)&v47.m33 = v12;
          *(_OWORD *)&v47.m21 = v12;
          *(_OWORD *)&v47.m23 = v12;
          *(_OWORD *)&v47.m11 = v12;
          *(_OWORD *)&v47.m13 = v12;
          CATransform3DMakeRotation(&v47, i, 0.0, 0.0, 1.0);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "contentClipperView"));
          objc_msgSend(v13, "bounds");
          v15 = v14;
          v17 = v16;
          v19 = v18;
          v21 = v20;
          v45 = v47;
          CATransform3DGetAffineTransform(&v46, &v45);
          v48.origin.x = v15;
          v48.origin.y = v17;
          v48.size.width = v19;
          v48.size.height = v21;
          v49 = CGRectApplyAffineTransform(v48, &v46);
          width = v49.size.width;
          height = v49.size.height;
          objc_msgSend(*(id *)(a1 + 40), "setCapturedInterfaceOrientation:", objc_msgSend(*(id *)(a1 + 32), "_currentOrientation", v49.origin.x, v49.origin.y));
          v24 = objc_msgSend(*(id *)(a1 + 40), "capturedInterfaceOrientation");
          v25 = 0;
          v26 = 0;
          y = CGPointZero.y;
          for (j = 0.0; ; j = j + v29)
          {
            if (qword_1004C9AF0[v25] == v24)
            {
              if (qword_1004C9AF0[v26] == v6)
              {
                *(_QWORD *)&v30 = -1;
                *((_QWORD *)&v30 + 1) = -1;
                *(_OWORD *)&v45.m41 = v30;
                *(_OWORD *)&v45.m43 = v30;
                *(_OWORD *)&v45.m31 = v30;
                *(_OWORD *)&v45.m33 = v30;
                *(_OWORD *)&v45.m21 = v30;
                *(_OWORD *)&v45.m23 = v30;
                *(_OWORD *)&v45.m11 = v30;
                *(_OWORD *)&v45.m13 = v30;
                CATransform3DMakeRotation(&v45, j, 0.0, 0.0, 1.0);
                v31 = *(void **)(a1 + 40);
                v44 = v45;
                objc_msgSend(v31, "setContentTransform:", &v44);
                objc_msgSend(*(id *)(a1 + 40), "layoutSubviews");
                objc_msgSend(v13, "setFrame:", CGPointZero.x, y, width, height);

                goto LABEL_15;
              }
              v26 = ((_BYTE)v26 + 1) & 3;
              v29 = 1.57079633;
            }
            else
            {
              v25 = ((_BYTE)v25 + 1) & 3;
              v29 = -1.57079633;
            }
          }
        }
        v9 = ((_BYTE)v9 + 1) & 3;
        v11 = 1.57079633;
      }
      else
      {
        v8 = ((_BYTE)v8 + 1) & 3;
        v11 = -1.57079633;
      }
    }
  }
LABEL_15:
  v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "tiltedTabView:headerViewForItemAtIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));
  objc_msgSend(v32, "frame");
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "headerView"));
  objc_msgSend(v41, "setFrame:", v34, v36, v38, v40);

  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "title"));
  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "headerView"));
  objc_msgSend(v43, "setTitle:", v42);

}

void sub_1001B3D54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001B3DCC(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "borrowedContentView"));
  objc_msgSend(v7, "setAlpha:", 1.0);

  v8 = (id)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "contentClipperView"));
  objc_msgSend(v2, "setBackgroundColor:", v8);

  if ((objc_msgSend(*(id *)(a1 + 40), "autoresizesContentView") & 1) == 0)
  {
    v3 = *(double *)(a1 + 48);
    v4 = *(double *)(a1 + 56);
    v5 = *(double *)(a1 + 64);
    v6 = *(double *)(a1 + 72);
    v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "contentClipperView"));
    objc_msgSend(v9, "setFrame:", v3, v4, v5, v6);

  }
}

void sub_1001B3EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id *sub_1001B3EE0(id *result, int a2)
{
  if (a2)
    return (id *)objc_msgSend(result[4], "removeFromSuperview");
  return result;
}

void sub_1001B5390(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001B5590(uint64_t a1)
{
  uint64_t v2;
  int v3;
  _BOOL4 v4;
  id v5;
  BOOL v6;
  double v7;
  id v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(unsigned __int8 *)(v2 + 8);
  v4 = *(_BYTE *)(v2 + 8) == 0;
  if (*(_QWORD *)(v2 + 144))
  {
    v5 = objc_msgSend((id)v2, "_indexOfVisibleItem:");
    if (v3)
      v6 = 0;
    else
      v6 = v5 == 0;
    v4 = v6;
  }
  if (v4)
    v7 = 1.0;
  else
    v7 = 0.0;
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "headerView"));
  objc_msgSend(v8, "setAlpha:", v7);

}

void sub_1001B5620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_1001B5634(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "setAlpha:", *(double *)(a1 + 40));
}

void sub_1001B5650(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *i;
  void *v5;
  void *v6;
  void *v7;
  double x;
  double MidY;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  CGRect v16;

  if (a1)
  {
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v1 = *(id *)(a1 + 208);
    v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v2)
    {
      v3 = *(_QWORD *)v12;
      do
      {
        for (i = 0; i != v2; i = (char *)i + 1)
        {
          if (*(_QWORD *)v12 != v3)
            objc_enumerationMutation(v1);
          v5 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i);
          v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "composePlaceholderView", (_QWORD)v11));
          if (v6)
          {
            v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "closeButtonWrapperView"));
            objc_msgSend(v6, "placeholderRectInView:", v7);
            x = v16.origin.x;
            MidY = CGRectGetMidY(v16);
            v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "closeButton"));
            objc_msgSend(v10, "setFrame:", x, MidY + -6.5, 13.0, 13.0);

          }
        }
        v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      }
      while (v2);
    }

  }
}

void sub_1001B57C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B5874(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B600C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,void *a49)
{
  void *v49;
  void *v50;
  void *v51;

  _Unwind_Resume(a1);
}

void sub_1001B61F0(void *a1, int a2)
{
  id v3;
  double v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v3 = a1;
  if (a2)
    v4 = 3.0;
  else
    v4 = -3.0;
  v16 = v3;
  objc_msgSend(v3, "bounds");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithRect:](UIBezierPath, "bezierPathWithRect:"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "layer"));
  objc_msgSend(v6, "setMasksToBounds:", 0);

  v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor")));
  v8 = objc_msgSend(v7, "CGColor");
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "layer"));
  objc_msgSend(v9, "setShadowColor:", v8);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "layer"));
  LODWORD(v11) = 0.5;
  objc_msgSend(v10, "setShadowOpacity:", v11);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "layer"));
  objc_msgSend(v12, "setShadowOffset:", v4, 0.0);

  v13 = objc_retainAutorelease(v5);
  v14 = objc_msgSend(v13, "CGPath");
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "layer"));
  objc_msgSend(v15, "setShadowPath:", v14);

}

void sub_1001B6328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id sub_1001B6374(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  return objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
}

void sub_1001B63AC(uint64_t a1)
{
  void *v1;
  double v2;
  id v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layer"));
  LODWORD(v2) = 0;
  v3 = v1;
  objc_msgSend(v1, "setShadowOpacity:", v2);

}

void sub_1001B63E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_1001B63FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startAnimation");
}

id sub_1001B6404(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(a1[4], "removeFromSuperview");
  objc_msgSend(a1[5], "removeFromSuperview");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "layer"));
  objc_msgSend(v2, "setMasksToBounds:", 1);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "layer"));
  objc_msgSend(v3, "setShadowPath:", 0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "messageDetailNavController"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  objc_msgSend(v5, "setAlpha:", 1.0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor mailSplitViewBorderColor](UIColor, "mailSplitViewBorderColor"));
  objc_msgSend(a1[8], "setBorderColor:", v6);

  objc_msgSend(a1[9], "setConfiguration:", a1[8]);
  return objc_msgSend(a1[10], "completeTransition:", objc_msgSend(a1[10], "transitionWasCancelled") ^ 1);
}

void sub_1001B64DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B6898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,void *a32,void *a33)
{
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;

  _Unwind_Resume(a1);
}

void sub_1001B6978(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 112));
  v2 = *(double *)(a1 + 120);
  v3 = *(double *)(a1 + 128);
  v4 = *(double *)(a1 + 136);
  v5 = *(double *)(a1 + 144);
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  objc_msgSend(v6, "setFrame:", v2, v3, v4, v5);

}

void sub_1001B69FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_1001B6A10(id *a1)
{
  objc_msgSend(a1[4], "removeFromSuperview");
  objc_msgSend(a1[5], "removeFromSuperview");
  return objc_msgSend(a1[6], "completeTransition:", objc_msgSend(a1[6], "transitionWasCancelled") ^ 1);
}

void sub_1001B6B94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_1001B6C70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B6CF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B6EC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001B7204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001B7294(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "displayMode");

}

void sub_1001B72D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_1001B72E8(id a1, EMMessageListItem *a2)
{
  return (id)objc_claimAutoreleasedReturnValue(-[EMMessageListItem itemID](a2, "itemID"));
}

void sub_1001B744C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v2;

  _Unwind_Resume(a1);
}

void sub_1001B74F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B79FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

id sub_1001B7AE0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  CGAffineTransform v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    objc_msgSend(v2, "transform");
    v3 = *(void **)(a1 + 32);
  }
  else
  {
    v3 = 0;
    memset(&v7, 0, sizeof(v7));
  }
  CGAffineTransformScale(&v8, &v7, 0.0799999982, 0.0799999982);
  v6 = v8;
  objc_msgSend(v3, "setTransform:", &v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layer"));
  objc_msgSend(v4, "setAllowsGroupOpacity:", 1);

  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

void sub_1001B7B88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1001B7B98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1001B7C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B7C9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B7D08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B7D98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001B7FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1001B81EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B8264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B84C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001B86E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B87B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001B8840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B8960(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.mobilemail", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA428;
  qword_1005AA428 = (uint64_t)v2;

}

void sub_1001B89BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B8B10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B8CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001B8DD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001B8DE4(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stackContainerView"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "subviews"));
  objc_msgSend(v3, "enumerateObjectsWithOptions:usingBlock:", 0, &stru_100522EB0);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeStackedViews:", *(unsigned __int8 *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "_updateBackgroundColor");
}

void sub_1001B8E58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B8E74(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  UIView *v8;

  v8 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
  -[UIView setBackgroundColor:](v8, "setBackgroundColor:", v4);

  -[UIView setAlpha:](v8, "setAlpha:", 0.0);
  v5 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor")));
  v6 = objc_msgSend(v5, "CGColor");
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[UIView layer](v8, "layer"));
  objc_msgSend(v7, "setBorderColor:", v6);

}

void sub_1001B8F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1001B8FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B9128(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B9210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B92C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B9464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B94D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001B97F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001B9B7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B9D08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B9D70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B9E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001B9E90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B9F1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001B9FB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BA048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001BA104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)MFTransferStackViewController;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001BA210(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BA350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1001BA3F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BA564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001BA63C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BA6F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BAA2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1001BAD3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,id location)
{
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id *v26;
  void *v27;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

id sub_1001BADC8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  id v6;

  v3 = a2;
  if ((*(unsigned int (**)(_QWORD, id))(EFIsNull + 16))(EFIsNull, v3))
  {
    v4 = objc_claimAutoreleasedReturnValue(+[MFTransferStackViewController log](MFTransferStackViewController, "log"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_100394CC4(a1, v4, v5);

    v6 = 0;
  }
  else
  {
    v6 = objc_msgSend(objc_alloc((Class)MessageContentRepresentationRequest), "initWithMessage:", v3);
  }

  return v6;
}

void sub_1001BAE6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BAE80(uint64_t a1, void *a2)
{
  id v3;
  id *WeakRetained;
  void *v5;
  BOOL v6;
  id v7;

  v3 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if ((*(unsigned int (**)(_QWORD, id))(EFIsNotNull + 16))(EFIsNotNull, v3))
    v5 = v3;
  else
    v5 = 0;
  v7 = v5;

  if (v7)
    v6 = WeakRetained == 0;
  else
    v6 = 1;
  if (!v6)
    objc_msgSend(WeakRetained[2], "setObject:forKey:", v7, *(_QWORD *)(a1 + 32));
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1001BAF30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BAFEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001BB1D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001BB230(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned int v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messageContentView"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "contentRequest"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "itemID"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "itemID"));
  v8 = objc_msgSend(v6, "isEqual:", v7);

  if (v8)
  {
    v9 = objc_claimAutoreleasedReturnValue(+[MFTransferStackViewController log](MFTransferStackViewController, "log"));
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = *(_QWORD *)(a1 + 40);
      v14 = 138543362;
      v15 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Content request for message %{public}@ already started", (uint8_t *)&v14, 0xCu);
    }

  }
  else
  {
    v11 = objc_claimAutoreleasedReturnValue(+[MFTransferStackViewController log](MFTransferStackViewController, "log"));
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = *(_QWORD *)(a1 + 40);
      v14 = 138543362;
      v15 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Start content request for message: %{public}@", (uint8_t *)&v14, 0xCu);
    }

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messageContentView"));
    objc_msgSend(v13, "setContentRequest:", v3);

    objc_msgSend(*(id *)(a1 + 32), "setStackWrapperViewState:", 1);
    if ((objc_msgSend(v3, "hasStarted") & 1) == 0)
      objc_msgSend(v3, "start");
  }

}

void sub_1001BB3F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BB578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1001BB61C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1001BB894(int a1, void *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "traitCollection"));
  v4 = objc_msgSend(v3, "layoutDirection");

  v5 = 1;
  if (a1)
    v6 = 1;
  else
    v6 = 2;
  if (a1)
    v5 = 2;
  if (v4 == (id)1)
    return v6;
  else
    return v5;
}

void sub_1001BB8EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BB968(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001BB994()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD v4[7];
  _QWORD v5[7];

  v0 = (void *)qword_1005AA438;
  if (!qword_1005AA438)
  {
    v4[0] = SwipeActionNone;
    v4[1] = SwipeActionRead;
    v5[0] = &off_100541980;
    v5[1] = &off_100541998;
    v4[2] = SwipeActionFlag;
    v4[3] = SwipeActionMove;
    v5[2] = &off_1005419B0;
    v5[3] = &off_1005419C8;
    v4[4] = SwipeActionTrash;
    v4[5] = SwipeActionArchive;
    v5[4] = &off_1005419E0;
    v5[5] = &off_1005419F8;
    v4[6] = SwipeActionAlternateDestructiveAction;
    v5[6] = &off_100541A10;
    v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v5, v4, 7));
    v2 = (void *)qword_1005AA438;
    qword_1005AA438 = v1;

    v0 = (void *)qword_1005AA438;
  }
  return v0;
}

void sub_1001BBB5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001BBC9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001BBDE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BBEAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BBF78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BBF90(uint64_t a1, void *a2)
{
  void (**v3)(void);

  v3 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  if (v3)
    v3[2]();

}

void sub_1001BBFE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BC120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1001BC150(uint64_t a1)
{
  void *v2;
  void (**v3)(_QWORD, _QWORD);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contextualActionHandlerCompletion"));

  if (v2)
  {
    v3 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contextualActionHandlerCompletion"));
    v3[2](v3, *(unsigned __int8 *)(a1 + 40));

    objc_msgSend(*(id *)(a1 + 32), "setContextualActionHandlerCompletion:", 0);
  }
}

void sub_1001BC1B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1001BC1C8(_QWORD *a1)
{
  uint64_t result;

  (*(void (**)(void))(a1[5] + 16))();
  result = a1[6];
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, a1[4], 1);
  return result;
}

void sub_1001BC2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1001BC438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

uint64_t sub_1001BC490(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_1001BC4A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_1001BC504(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_presentConfirmationSheet:", a2);
}

void sub_1001BC5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001BC6FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BC75C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BC7BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BC844(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BC8C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BC924(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BCA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

id sub_1001BCA48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performInteractionWithCompletion:", *(_QWORD *)(a1 + 40));
}

void sub_1001BCBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1001BCC54(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;

  v7 = a3;
  v6 = a4;
  objc_msgSend(*(id *)(a1 + 32), "setPresentationSource:", v7);
  objc_msgSend(*(id *)(a1 + 32), "setContextualActionHandlerCompletion:", v6);
  objc_msgSend(*(id *)(a1 + 32), "_performInteractionAfterPreparation:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_1001BCCB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001BCE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

id sub_1001BCE7C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTriggeredFromMenuAction:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "_performInteractionAfterPreparation:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_1001BCFE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1001BD010(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performInteraction");
}

void sub_1001BD0D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001BD24C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1001BD2B8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void ***v6;
  void **v7;
  uint64_t v8;
  void (*v9)(uint64_t, void *);
  void *v10;
  id v11;
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dismissHandler"));
  v5 = objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v7 = _NSConcreteStackBlock;
    v8 = 3221225472;
    v9 = sub_1001BD3B0;
    v10 = &unk_100523040;
    v11 = *(id *)(a1 + 40);
    v12 = v4;
    v6 = objc_retainBlock(&v7);

    v5 = v6;
  }
  objc_msgSend(*(id *)(a1 + 32), "_performInteractionAfterPreparation:completion:", *(_QWORD *)(a1 + 48), v5, v7, v8, v9, v10);

}

void sub_1001BD390(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BD3B0(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1001BD404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BD54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1001BD580(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  BOOL v6;
  void *v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "updateReason"));
  if (v5)
    v6 = (_DWORD)a3 == 0;
  else
    v6 = 1;
  if (!v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[MFWidgetController sharedController](MFWidgetController, "sharedController"));
    objc_msgSend(v7, "reloadTimelinesWithReason:", v5);

  }
  v8 = *(_QWORD *)(a1 + 40);
  if (v8)
    (*(void (**)(uint64_t, id, uint64_t))(v8 + 16))(v8, v9, a3);

}

void sub_1001BD614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001BD640(_QWORD *a1, int a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v7[5];
  id v8;
  char v9;

  v7[0] = _NSConcreteStackBlock;
  v7[2] = sub_1001BD71C;
  v7[3] = &unk_10051D808;
  v4 = (void *)a1[5];
  v7[4] = a1[4];
  v7[1] = 3221225472;
  v9 = a2;
  v8 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[EFDeallocInvocationToken tokenWithLabel:invocationBlock:](EFDeallocInvocationToken, "tokenWithLabel:invocationBlock:", CFSTR("Triage Interaction Preparation Continuation"), v7));
  if (a2)
  {
    v6 = a1[6];
    if (v6)
      (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, a1[4], v5);
  }

}

void sub_1001BD6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1001BD71C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD v3[5];

  if (*(_BYTE *)(a1 + 48))
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1001BD7B0;
    v3[3] = &unk_100523090;
    v3[4] = *(_QWORD *)(a1 + 32);
    v2 = objc_retainBlock(v3);
  }
  else
  {
    v2 = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "_performAsynchronousInteractionBoilerplateWithBlock:completion:", v2, *(_QWORD *)(a1 + 40));

}

void sub_1001BD7A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001BD7B0(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_dispatchInteractionWithCompletion:", a2);
}

void sub_1001BD818(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_1001BD928(MFTriageInteraction *self, SEL a2)
{
  return self->_isTriggeredFromMenuAction;
}

void sub_1001BDB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1001BDC90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BDE58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1001BDFA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BE038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BE130(id a1)
{
  MFUIStateCaptor *v1;
  void *v2;

  v1 = objc_alloc_init(MFUIStateCaptor);
  v2 = (void *)qword_1005AA440;
  qword_1005AA440 = (uint64_t)v1;

}

NSString *__cdecl sub_1001BE1C8(id a1)
{
  return (NSString *)+[UIViewController _printHierarchy](UIViewController, "_printHierarchy");
}

NSString *__cdecl sub_1001BE1E8(id a1)
{
  return (NSString *)+[UIViewController _allDescriptions](UIViewController, "_allDescriptions");
}

void sub_1001BE2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

id sub_1001BE2E0(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mf_window"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "recursiveDescription"));

  return v2;
}

void sub_1001BE31C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BE37C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BE47C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1001BE4DC(void *a1)
{
  id v1;

  v1 = sub_1001BE4FC(a1, 0, 1.0);
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_1001BE4FC(void *a1, int a2, double a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double Width;
  _BOOL4 IsBoldTextEnabled;
  double v21;
  double v22;
  double v23;
  CGContext *CurrentContext;
  id v25;
  const CGPath *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  UIImage *ImageFromCurrentImageContext;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  CGSize v42;
  CGRect v43;

  v5 = a1;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByTrimmingCharactersInSet:", v6));

  v8 = v7;
  v9 = sub_1001BE830(a3);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  objc_msgSend(v8, "boundingRectWithSize:options:attributes:context:", 33, v10, 0, a3 * 40.0, a3 * 19.0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v43.origin.x = v12;
  v43.origin.y = v14;
  v43.size.width = v16;
  v43.size.height = v18;
  Width = CGRectGetWidth(v43);
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v21 = 19.0;
  if (IsBoldTextEnabled)
    v21 = 21.0;
  v22 = v21 * a3;
  v23 = v21 * a3;
  if (v21 * a3 - Width <= a3 * 10.0)
    v23 = UICeilToScale(Width + (a3 + a3) * 6.0, 0.0);
  v42.width = v23;
  v42.height = v22;
  UIGraphicsBeginImageContextWithOptions(v42, 0, 0.0);
  CurrentContext = UIGraphicsGetCurrentContext();
  v25 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor systemBlueColor](UIColor, "systemBlueColor")));
  CGContextSetFillColorWithColor(CurrentContext, (CGColorRef)objc_msgSend(v25, "CGColor"));

  v26 = (const CGPath *)CGPathCreateWithContinuousRoundedRect(0, 0.0, 0.0, v23, v22, v22 * 0.5, v22 * 0.5);
  CGContextAddPath(CurrentContext, v26);
  CGContextFillPath(CurrentContext);
  CGPathRelease(v26);
  v27 = UIRectCenteredIntegralRectScale(v12, v14, v16, v18, 0.0, 0.0, v23, v22, 0.0);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  if (a2)
    CGContextSetBlendMode(CurrentContext, kCGBlendModeClear);
  v34 = sub_1001BE830(a3);
  v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
  objc_msgSend(v8, "drawWithRect:options:attributes:context:", 33, v35, 0, v27, v29, v31, v33);

  if (a2)
    CGContextSetBlendMode(CurrentContext, kCGBlendModeNormal);
  ImageFromCurrentImageContext = UIGraphicsGetImageFromCurrentImageContext();
  v37 = (void *)objc_claimAutoreleasedReturnValue(ImageFromCurrentImageContext);
  UIGraphicsEndImageContext();
  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "_imageThatSuppressesAccessibilityHairlineThickening"));

  if (a2)
    v39 = 2;
  else
    v39 = 1;
  v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "imageWithRenderingMode:", v39));

  return v40;
}

void sub_1001BE7A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001BE810(void *a1)
{
  id v1;

  v1 = sub_1001BE4FC(a1, 1, 4.0);
  return (id)objc_claimAutoreleasedReturnValue(v1);
}

id sub_1001BE830(double a1)
{
  id v2;
  _BOOL4 IsBoldTextEnabled;
  const UIFontWeight *v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[3];
  _QWORD v11[3];

  v2 = objc_alloc_init((Class)NSMutableParagraphStyle);
  objc_msgSend(v2, "setLineBreakMode:", 5);
  objc_msgSend(v2, "setAllowsDefaultTighteningForTruncation:", 1);
  IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
  v4 = &UIFontWeightBlack;
  if (!IsBoldTextEnabled)
    v4 = &UIFontWeightMedium;
  v5 = *v4;
  v10[0] = NSFontAttributeName;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont systemFontOfSize:weight:](UIFont, "systemFontOfSize:weight:", a1 * 12.0, v5));
  v11[0] = v6;
  v11[1] = v2;
  v10[1] = NSParagraphStyleAttributeName;
  v10[2] = NSForegroundColorAttributeName;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemWhiteColor](UIColor, "systemWhiteColor"));
  v11[2] = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v11, v10, 3));

  return v8;
}

void sub_1001BE968(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BEA10(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.email", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA450;
  qword_1005AA450 = (uint64_t)v2;

}

void sub_1001BEA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BEB58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001BEBA0()
{
  JUMPOUT(0x1001BEB94);
}

void sub_1001BEC24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BECC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001BF0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1001BF214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BF2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)MFUnsubscribeTriageInteraction;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001BF668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001BF73C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 48);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)MFUnsubscribeTriageInteraction;
  return objc_msgSendSuper2(&v4, "_performInteractionAfterPreparation:completion:", v1, v2);
}

__CFString *sub_1001BF7F0(unint64_t a1)
{
  if (a1 >= 3)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Unknown Policy (%lu)"), a1));
  else
    return off_100523238[a1];
}

void sub_1001BF8B4(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.mobilemail", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA460;
  qword_1005AA460 = (uint64_t)v2;

}

void sub_1001BF910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001BFA18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001BFA7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001BFD34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001BFDB8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_prioritizedRoutesForRequest:", *(_QWORD *)(a1 + 40)));
  v3 = *(void **)(a1 + 40);
  v5 = (id)v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_routeRequest:routes:", v3));
  objc_msgSend(v3, "completeWithResultOfFuture:", v4);

}

void sub_1001BFE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C006C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

id sub_1001C00F0(id *a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  uint8_t v12[24];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSError mf_generalRoutingErrorWithDescription:request:](NSError, "mf_generalRoutingErrorWithDescription:request:", CFSTR("Router was deallocated before routing was complete."), a1[4]));
    v6 = objc_claimAutoreleasedReturnValue(+[EFFuture futureWithError:](EFFuture, "futureWithError:", v5));
    goto LABEL_5;
  }
  if ((objc_msgSend(v3, "mf_allowFallbackRouting") & 1) != 0)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "ef_tail"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_routeRequest:routes:", a1[4], v5));
LABEL_5:
    v7 = (void *)v6;

    goto LABEL_9;
  }
  v8 = objc_claimAutoreleasedReturnValue(+[MFURLRoutingRequest log](MFURLRoutingRequest, "log"));
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "ef_publicDescription"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    sub_100394D80(v9, v10, v12, v8);
  }

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[EFFuture futureWithError:](EFFuture, "futureWithError:", v3));
LABEL_9:

  return v7;
}

void sub_1001C0258(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1001C0360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

id sub_1001C0398(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "canRouteRequest:", *(_QWORD *)(a1 + 32));
}

int64_t sub_1001C03A4(id a1, MFURLRoute *a2, MFURLRoute *a3)
{
  MFURLRoute *v4;
  MFURLRoute *v5;
  id v6;
  int64_t v7;
  id v8;

  v4 = a2;
  v5 = a3;
  v6 = -[MFURLRoute priority](v4, "priority");
  if ((uint64_t)v6 <= (uint64_t)-[MFURLRoute priority](v5, "priority"))
  {
    v8 = -[MFURLRoute priority](v4, "priority");
    v7 = (uint64_t)v8 < (uint64_t)-[MFURLRoute priority](v5, "priority");
  }
  else
  {
    v7 = -1;
  }

  return v7;
}

void sub_1001C0424(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C0510(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.mobilemail", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA470;
  qword_1005AA470 = (uint64_t)v2;

}

void sub_1001C056C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C05C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C0638(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001C06C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C0790(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C07DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C0954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  id *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;

  v24 = v21;

  objc_destroyWeak(v19);
  objc_destroyWeak((id *)(v23 - 72));

  _Unwind_Resume(a1);
}

void sub_1001C09B0()
{
  JUMPOUT(0x1001C0994);
}

id sub_1001C09B8(uint64_t a1)
{
  return objc_loadWeakRetained((id *)(a1 + 32));
}

void sub_1001C09D0(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v2 = objc_claimAutoreleasedReturnValue(+[MFURLRoutingRequest log](MFURLRoutingRequest, "log"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138543362;
    v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Request completed successfully. Request=%{public}@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_1001C0A80(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint8_t v7[24];

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(+[MFURLRoutingRequest log](MFURLRoutingRequest, "log"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    sub_100394DEC(v5, v6, v7, v4);
  }

}

void sub_1001C0B2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C0C0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL sub_1001C0C50(MFURLRoutingRequest *self, SEL a2)
{
  return self->_isExternal;
}

BOOL sub_1001C0C6C(MFURLRoutingRequest *self, SEL a2)
{
  return self->_isPossibleStoreURL;
}

void sub_1001C0D38(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.email", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA480;
  qword_1005AA480 = (uint64_t)v2;

}

void sub_1001C0D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C0E18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C13FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1001C15D4(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.email", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA490;
  qword_1005AA490 = (uint64_t)v2;

}

void sub_1001C1630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C18B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

id sub_1001C1924(uint64_t a1, uint64_t a2)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reverseTransformedValue:", a2));
}

void sub_1001C1944(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;

  v6 = a2;
  v5 = a3;
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v5, v6);

}

void sub_1001C1998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C2458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_1001C2694()
{
  JUMPOUT(0x1001C266CLL);
}

void sub_1001C26B0(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  void *v4;
  void *v5;
  id v6;

  if (*(_BYTE *)(a1 + 72))
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "browseMailboxForActivityPayload:activityType:scrollToMessage:", *(_QWORD *)(a1 + 40), MSMailActivityHandoffTypeSearch, 0));
  else
    v2 = 0;
  v6 = (id)v2;
  if (*(_BYTE *)(a1 + 73))
    v3 = 0;
  else
    v3 = v2 == 0;
  if (!v3)
    objc_msgSend(*(id *)(a1 + 48), "selectDefaultMailboxForActivityRouter:", *(_QWORD *)(a1 + 56));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "splitViewControllerForActivityRouter:", *(_QWORD *)(a1 + 56)));
  if (objc_msgSend(v4, "displayMode") == (id)1)
    objc_msgSend(v4, "showMessageListViewController:animated:completion:", 1, 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "messageListViewControllerForActivityRouter:", *(_QWORD *)(a1 + 56)));
  objc_msgSend(v5, "beginSearchWithQueryString:scope:", *(_QWORD *)(a1 + 64), 0);

}

void sub_1001C2780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001C27B4(uint64_t a1, char a2)
{
  id v3;

  if ((a2 & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", &off_100541A70, CFSTR("ceActivityErrorReason"));
    v3 = (id)objc_claimAutoreleasedReturnValue(+[NSError mailHandoffErrorWithActivityContextInfo:errorFormat:](NSError, "mailHandoffErrorWithActivityContextInfo:errorFormat:", *(_QWORD *)(a1 + 32), CFSTR("Could not continue Message Display Activity. Unable to find message at URL: %@"), *(_QWORD *)(a1 + 40)));
    objc_msgSend(*(id *)(a1 + 48), "presentAlertForHandoffError:");

  }
}

void sub_1001C283C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C2850(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_mailComposeController"));
  objc_msgSend(v6, "handleLargeMessageComposeHandoffWithInputStream:outputStream:error:", v7, v5, 0);

}

void sub_1001C28BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001C28E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  id v10;

  v10 = a2;
  v7 = a3;
  v8 = a4;
  kdebug_trace(729943044, 0, 0, 0, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_mailComposeController"));
  objc_msgSend(v9, "handleLargeMessageComposeHandoffWithInputStream:outputStream:error:", v10, v7, v8);

}

void sub_1001C2978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1001C2B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1001C2D3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C2F0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001C3014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C3088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C313C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C31DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C3284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C34A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001C3530(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint8_t buf[4];
  void *v16;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fileURL"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[MFComposeMailMessage legacyMessageWithMessage:mailboxUid:](MFComposeMailMessage, "legacyMessageWithMessage:mailboxUid:", *(_QWORD *)(a1 + 32), 0));
  v6 = objc_msgSend(objc_alloc((Class)_MFMailCompositionContext), "initWithComposeType:originalMessage:legacyMessage:", 5, *(_QWORD *)(a1 + 32), v5);
  v14 = 0;
  v7 = objc_msgSend(v4, "checkResourceIsReachableAndReturnError:", &v14);
  v8 = v14;
  v9 = v8;
  if ((v7 & 1) != 0)
  {
    v10 = objc_claimAutoreleasedReturnValue(+[MFUserActivityRouter log](MFUserActivityRouter, "log"));
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#ReturnToSender success: found a valid document url %{public}@", buf, 0xCu);
    }

    objc_msgSend(v6, "insertAttachmentWithURL:", v4);
  }
  else
  {
    v11 = *(void **)(a1 + 40);
    v12 = *(_QWORD *)(a1 + 48);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedDescription"));
    objc_msgSend(v11, "returnToSenderErrorHandling:urlError:", v12, v13);

  }
  objc_msgSend(*(id *)(a1 + 56), "showComposeWithContext:fromActivityRouter:", v6, *(_QWORD *)(a1 + 40));

}

void sub_1001C36CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001C37D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C3954(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001C3B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001C3CC4(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.email.signposts", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA4A0;
  qword_1005AA4A0 = (uint64_t)v2;

}

void sub_1001C3D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C3DEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C3E6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C418C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id *v29;

  objc_destroyWeak(v29);

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001C422C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  uint64_t v7;

  objc_msgSend(*(id *)(a1 + 32), "beginIgnoringInteractionEvents");
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001C42BC;
  v5[3] = &unk_10051ABD8;
  v2 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v6 = v3;
  v7 = v4;
  objc_msgSend(v2, "addInvocationBlock:", v5);

}

void sub_1001C42A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1001C42BC(uint64_t a1)
{
  NSObject *v2;
  NSObject *v3;
  os_signpost_id_t v4;
  uint8_t v5[16];

  objc_msgSend(*(id *)(a1 + 32), "endIgnoringInteractionEvents");
  v2 = objc_claimAutoreleasedReturnValue(+[MFUserInteractionAssertion signpostLog](MFUserInteractionAssertion, "signpostLog"));
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 40);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)v5 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "MFUserInteractionAssertion", "", v5, 2u);
  }

}

void sub_1001C4350(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_invalidateWithState:", 2);

}

void sub_1001C4388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C44A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C45A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  id *v14;
  void *v15;
  uint64_t v16;
  void *v17;

  v17 = v15;

  objc_destroyWeak(v14);
  objc_destroyWeak((id *)(v16 - 40));

  _Unwind_Resume(a1);
}

void sub_1001C45E4(uint64_t a1)
{
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "invoke");
  if (WeakRetained)
    WeakRetained[3] = *(_QWORD *)(a1 + 48);

}

void sub_1001C462C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C4720(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.email", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA4B0;
  qword_1005AA4B0 = (uint64_t)v2;

}

void sub_1001C477C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C4804(uint64_t a1)
{
  MFVIPSendersLibrary *v2;
  MFVIPSendersLibrary *v3;
  void *v4;
  id v5;

  v2 = [MFVIPSendersLibrary alloc];
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "defaultMessageLibrary"));
  v3 = -[MFVIPSendersLibrary initWithLibrary:](v2, "initWithLibrary:");
  v4 = (void *)qword_1005AA4C0;
  qword_1005AA4C0 = (uint64_t)v3;

}

void sub_1001C4868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C4B98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001C4D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)MFVIPSendersLibrary;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001C4D5C(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[EFScheduler mainThreadScheduler](EFScheduler, "mainThreadScheduler", _NSConcreteStackBlock, 3221225472, sub_1001C4DF4, &unk_10051EE98, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v2, "performSyncBlock:", &v3);

  CFRelease(*(CFTypeRef *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24));
}

void sub_1001C4DE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C4DF4(uint64_t a1)
{
  ABAddressBookUnregisterChangeCallback(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24), sub_1001C4E3C, *(_QWORD *)(a1 + 40));
  ABAddressBookUnregisterExternalChangeCallback(*(ABAddressBookRef *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24), (ABExternalChangeCallback)sub_1001C4E3C, *(void **)(a1 + 40));
}

id sub_1001C4E3C(uint64_t a1, uint64_t a2, void *a3)
{
  return _objc_msgSend(a3, "_handleAddressBookNotification");
}

void sub_1001C4F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001C4F70(id result)
{
  unsigned int *v1;
  unsigned int v2;
  unsigned int v3;

  v1 = (unsigned int *)(*((_QWORD *)result + 4) + 24);
  do
  {
    v2 = __ldxr(v1);
    v3 = v2 - 1;
  }
  while (__stxr(v3, v1));
  if (!v3)
    return _objc_msgSend(*((id *)result + 4), "_checkForAddressBookChangesNeedingRevert:", 1);
  return result;
}

void sub_1001C50A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001C50B0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_checkForAddressBookChangesNeedingRevert:", 0);
}

void sub_1001C55A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001C57DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001C5B8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C5CB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C5DAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C5E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C5F1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C5F2C(uint64_t a1)
{
  double Current;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  char *v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  _BOOL4 v22;
  _BOOL4 v23;
  uint64_t v24;
  void *i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  CFAbsoluteTime v37;
  void *context;
  void *v39;
  void *v40;
  id obj;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  _BYTE v58[128];
  uint8_t v59[128];
  uint8_t buf[4];
  CFAbsoluteTime v61;

  Current = CFAbsoluteTimeGetCurrent();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userProfileProvider"));
  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "accountsEmailAddresses"));

  v5 = MFLogGeneral(v4);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    v61 = *(double *)&v43;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "starting to/cc migration, email addresses: %@", buf, 0xCu);
  }

  v57 = 1;
  v7 = objc_claimAutoreleasedReturnValue(+[MFMailMessageLibrary defaultInstance](MFMailMessageLibrary, "defaultInstance"));
  v39 = (void *)v7;
  v8 = 0;
  v9 = 0;
  while (v57 && (v9 & 1) == 0)
  {
    context = objc_autoreleasePoolPush();
    v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "storedIntegerPropertyWithName:", CFSTR("MaxRowIdForMigrationToVersion31")));
    v11 = objc_msgSend(v10, "longLongValue");

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "orderedBatchOfMessagesEndingAtRowId:limit:success:", v11, 500, &v57));
    v40 = v12;
    if (!v57)
    {
      v31 = MFLogGeneral(v12);
      v30 = objc_claimAutoreleasedReturnValue(v31);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "failure during to/cc migration", buf, 2u);
      }
      goto LABEL_43;
    }
    if (objc_msgSend(v12, "count"))
    {
      v55 = 0u;
      v56 = 0u;
      v53 = 0u;
      v54 = 0u;
      obj = v40;
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v59, 16);
      if (v13)
      {
        v44 = *(_QWORD *)v54;
        do
        {
          v14 = 0;
          v45 = v13;
          do
          {
            if (*(_QWORD *)v54 != v44)
              objc_enumerationMutation(obj);
            v15 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * v14);
            v16 = (char *)objc_msgSend(v15, "libraryID");
            v17 = objc_msgSend(v15, "messageFlags");
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "to"));
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "cc"));
            v51 = 0u;
            v52 = 0u;
            v49 = 0u;
            v50 = 0u;
            v20 = v43;
            v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v49, v58, 16);
            v46 = (unint64_t)v17;
            v47 = v14;
            v48 = v16;
            v22 = 0;
            v23 = 0;
            if (v21)
            {
              v24 = *(_QWORD *)v50;
              while (2)
              {
                for (i = 0; i != v21; i = (char *)i + 1)
                {
                  if (*(_QWORD *)v50 != v24)
                    objc_enumerationMutation(v20);
                  v26 = *(_QWORD *)(*((_QWORD *)&v49 + 1) + 8 * (_QWORD)i);
                  if (!v22 && v18 != 0)
                    v22 = objc_msgSend(v18, "mf_indexOfRecipientWithEmailAddress:", *(_QWORD *)(*((_QWORD *)&v49 + 1) + 8 * (_QWORD)i)) != (id)0x7FFFFFFFFFFFFFFFLL;
                  if (!v23 && v19 != 0)
                    v23 = objc_msgSend(v19, "mf_indexOfRecipientWithEmailAddress:", v26) != (id)0x7FFFFFFFFFFFFFFFLL;
                  if (v22 && v23)
                  {
                    LOBYTE(v22) = 1;
                    LOBYTE(v23) = 1;
                    goto LABEL_27;
                  }
                }
                v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v49, v58, 16);
                if (v21)
                  continue;
                break;
              }
            }
LABEL_27:

            v8 = v48;
            v27 = 0x8000000000;
            if (!v22 || (v46 & 0x8000000000) != 0)
              v27 = 0;
            if (v23 && (v46 & 0x10000000000) == 0)
              v28 = v27 | 0x10000000000;
            else
              v28 = v27;
            if (v28)
            {
              v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:"));
              objc_msgSend(v42, "setObject:forKey:", v29, v15);

            }
            v14 = v47 + 1;
          }
          while ((id)(v47 + 1) != v45);
          v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v59, 16);
        }
        while (v13);
      }

      if (objc_msgSend(v42, "count"))
        objc_msgSend(v39, "updateFlagsForMessagesInPlace:success:", v42, &v57);
      if (!v57)
        goto LABEL_44;
      if (v8)
      {
        v30 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", v8 - 1));
        objc_msgSend(v39, "setStoredIntegerPropertyWithName:value:", CFSTR("MaxRowIdForMigrationToVersion31"), v30);
LABEL_43:

LABEL_44:
        v9 = 0;
        goto LABEL_46;
      }
    }
    v9 = 1;
LABEL_46:

    objc_autoreleasePoolPop(context);
  }
  if ((v9 & 1) != 0)
  {
    v32 = MFLogGeneral(v7);
    v33 = objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "done with to/cc migration, setting ToCcMigrationCompleted default", buf, 2u);
    }

    objc_msgSend(v39, "setStoredIntegerPropertyWithName:value:", CFSTR("MaxRowIdForMigrationToVersion31"), 0);
    v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v34, "setBool:forKey:", 1, CFSTR("ToCcMigrationCompleted"));

  }
  v35 = MFLogGeneral(v7);
  v36 = objc_claimAutoreleasedReturnValue(v35);
  if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
  {
    v37 = CFAbsoluteTimeGetCurrent();
    *(_DWORD *)buf = 134217984;
    v61 = v37 - Current;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_INFO, "to/cc migration took %f ms", buf, 0xCu);
  }

}

void sub_1001C64AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

id sub_1001C660C(uint64_t a1)
{
  id result;

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "count")
    || (result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "count")) != 0)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "_clearVIPSenderFlagForSenders:retryFailedSenders:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56), 0);
    if ((_DWORD)result)
    {
      result = objc_msgSend(*(id *)(a1 + 32), "_setVIPSenderFlagForSenders:retryFailedSenders:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48), 0);
      if ((_DWORD)result)
      {
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeAllObjects");
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "removeAllObjects");
        return _objc_msgSend(*(id *)(a1 + 32), "_removePendingVIPChanges");
      }
    }
  }
  return result;
}

void sub_1001C67B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1001C67E8(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "unionSet:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "minusSet:", *(_QWORD *)(a1 + 40));
  return _objc_msgSend(*(id *)(a1 + 32), "_savePendingVIPChanges_nts");
}

void sub_1001C6938(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1001C6970(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "minusSet:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "unionSet:", *(_QWORD *)(a1 + 40));
  return _objc_msgSend(*(id *)(a1 + 32), "_savePendingVIPChanges_nts");
}

void sub_1001C6B00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001C6B38(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v2 = objc_alloc_init((Class)EAEmailAddressSet);
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v3);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6), "emailAddresses", (_QWORD)v8));
        objc_msgSend(v2, "unionSet:", v7);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 40), "_setVIPSenderFlagForSenders:retryFailedSenders:", v2, 1);
}

void sub_1001C6C68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C6CA0(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v2 = objc_alloc_init((Class)EAEmailAddressSet);
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v3);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6), "emailAddresses", (_QWORD)v8));
        objc_msgSend(v2, "unionSet:", v7);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 40), "_clearVIPSenderFlagForSenders:retryFailedSenders:", v2, 1);
}

void sub_1001C6DD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C6F48(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001C71AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v2;

  _Unwind_Resume(a1);
}

void sub_1001C73C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C74A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C7570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C7640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C7720(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C77E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001C7938(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C7AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, id location)
{
  void *v18;
  void *v19;
  void *v20;
  id *v21;
  void *v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1001C7B54(uint64_t a1, void *a2)
{
  id *WeakRetained;
  void *v4;
  void *v5;
  id v6;
  NSBundle *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSBundle *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;

  v24 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont fontWithDescriptor:size:](UIFont, "fontWithDescriptor:size:", *(_QWORD *)(a1 + 32), 0.0));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
  objc_msgSend(v5, "setFont:", v4);

  if (WeakRetained && (uint64_t)objc_msgSend(WeakRetained, "sectionCount") >= 2)
  {
    v6 = WeakRetained[1];
    if (objc_msgSend(*(id *)(a1 + 40), "section"))
    {
      v7 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(WeakRetained));
      v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "localizedStringForKey:value:table:", CFSTR("VIP_ALERTS"), &stru_100531B00, CFSTR("Main")));
      objc_msgSend(v24, "setText:", v9);

      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "tintColor"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
      objc_msgSend(v11, "setColor:", v10);

      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
      objc_msgSend(v12, "setAlignment:", 1);
    }
    else
    {
      v13 = objc_msgSend(*(id *)(a1 + 40), "row");
      if (v13 != objc_msgSend(v6, "count"))
      {
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndex:", objc_msgSend(*(id *)(a1 + 40), "row")));
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "name"));
        objc_msgSend(v24, "setText:", v20);

        v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor labelColor](UIColor, "labelColor"));
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
        objc_msgSend(v22, "setColor:", v21);

        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
        objc_msgSend(v23, "setAlignment:", 4);

        objc_msgSend(*(id *)(a1 + 56), "setAccessoryType:", 1);
        objc_msgSend(*(id *)(a1 + 56), "setShouldDisableWhileEditing:", 0);

        goto LABEL_6;
      }
      v14 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(WeakRetained));
      v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("VIP_ADD_PERSON"), &stru_100531B00, CFSTR("Main")));
      objc_msgSend(v24, "setText:", v16);

      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "tintColor"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
      objc_msgSend(v18, "setColor:", v17);

      if (objc_msgSend(v6, "count"))
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
        objc_msgSend(v12, "setAlignment:", 4);
      }
      else
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "textProperties"));
        objc_msgSend(v12, "setAlignment:", 1);
      }
    }

    objc_msgSend(*(id *)(a1 + 56), "setShouldDisableWhileEditing:", 1);
LABEL_6:

  }
}

void sub_1001C7E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001C7F78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C80F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

id sub_1001C8138(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v5;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObjectAtIndex:", objc_msgSend(*(id *)(a1 + 40), "row"));
  v2 = *(void **)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v5, 1));
  objc_msgSend(v2, "deleteRowsAtIndexPaths:withRowAnimation:", v3, 100);

  return objc_msgSend(*(id *)(a1 + 32), "_dismissIfNeeded");
}

void sub_1001C81F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C8208(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[VIPManager defaultInstance](VIPManager, "defaultInstance"));
  objc_msgSend(v2, "deleteVIPWithIdentifier:", *(_QWORD *)(a1 + 32));

}

void sub_1001C824C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C834C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C874C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1001C8864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C8B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C8C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001C8F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  id *v15;
  void *v16;
  void *v17;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1001C8F80(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_addNewVIPSender");

}

void sub_1001C8FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C9030(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C91DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C92E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001C9388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C953C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1001C9604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001C9724(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C9798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001C9A50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001C9B00(uint64_t a1)
{
  void *v2;
  void (**v3)(id, void *);

  v3 = (void (**)(id, void *))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "errorOnlyCompletionHandlerAdapter"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_routeVIPMessagesURL:", *(_QWORD *)(a1 + 48)));
  v3[2](v3, v2);

}

void sub_1001C9B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001C9B7C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scene"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "mailboxPickerController"));
  objc_msgSend(v2, "showVIPSettingsAnimated:", 1);

  v3 = *(void **)(a1 + 40);
  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  objc_msgSend(v3, "finishWithResult:");

}

void sub_1001C9BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_1001C9C1C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mf_request"));

  v5 = v3;
  if (!v4)
  {
    v6 = objc_claimAutoreleasedReturnValue(+[NSError mf_routingErrorWithUnderlyingError:request:allowFallbackRouting:](NSError, "mf_routingErrorWithUnderlyingError:request:allowFallbackRouting:", v3, *(_QWORD *)(a1 + 32), 1));

    v5 = (void *)v6;
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[EFFuture futureWithError:](EFFuture, "futureWithError:", v5));

  return v7;
}

void sub_1001C9CB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001C9F70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001CA144(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001CA1E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CA284(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CA330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

BOOL sub_1001CA354(_BOOL8 result)
{
  if (result)
    return *(_BYTE *)(result + 8) != 0;
  return result;
}

void sub_1001CA438(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CA4CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CA600(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001CA838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CA92C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CA9C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CAA34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CAAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)NetworkActivityIndicator;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001CABC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001CACB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001CADF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CAE6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CAF50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CAFE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB0FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB170(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB1F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB24C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB2A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB3C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001CB4B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB6D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001CB708(id a1)
{
  +[NSError ef_setDecoder:forDomain:](NSError, "ef_setDecoder:forDomain:", &stru_100523470, CFSTR("MFURLRoutingErrorDomain"));
  +[NSError setUserInfoValueProviderForDomain:provider:](NSError, "setUserInfoValueProviderForDomain:provider:", CFSTR("MFURLRoutingErrorDomain"), &stru_1005234B0);
}

NSString *__cdecl sub_1001CB750(id a1, int64_t a2)
{
  if ((unint64_t)(a2 - 6000000) > 3)
    return (NSString *)CFSTR("Unknown");
  else
    return (NSString *)*(&off_1005234D0 + a2 - 6000000);
}

id sub_1001CB77C(id a1, NSError *a2, NSString *a3)
{
  NSError *v4;
  NSString *v5;
  char *v6;
  void *v7;

  v4 = a2;
  v5 = a3;
  if (-[NSString isEqualToString:](v5, "isEqualToString:", NSDebugDescriptionErrorKey)
    && (v6 = -[NSError code](v4, "code"), (unint64_t)(v6 - 6000001) < 3))
  {
    v7 = *(&off_1005234F0 + (_QWORD)(v6 - 6000001));
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_1001CB800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001CB85C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB8B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB940(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CB99C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CBB54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001CBB70(id a1)
{
  +[NSError ef_setDecoder:forDomain:](NSError, "ef_setDecoder:forDomain:", &stru_100523528, CFSTR("com.apple.mobilemail.restoration"));
}

NSString *__cdecl sub_1001CBB8C(id a1, int64_t a2)
{
  if ((unint64_t)(a2 - 5000000) >= 5)
    return (NSString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Unknown restoration state error code: %li"), a2));
  else
    return (NSString *)off_100523548[a2 - 5000000];
}

void sub_1001CBC1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CBC74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CBCCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CBD24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CBD7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CBDD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001CBDEC(uint64_t a1)
{
  void *v1;
  void *v2;

  if (a1)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@://conversation/%lld"), EMAppleMailURLScheme, a1));
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v1));

  }
  else
  {
    v2 = 0;
  }
  return v2;
}

void sub_1001CBE68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001CBE78(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;

  v1 = a1;
  v2 = objc_alloc_init((Class)NSURLComponents);
  objc_msgSend(v2, "setScheme:", EMAppleMailURLScheme);
  objc_msgSend(v2, "setHost:", CFSTR("document"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("/%@"), v1));
  objc_msgSend(v2, "setPath:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URL"));
  return v4;
}

void sub_1001CBF24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001CC098(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1001CC174(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001CC294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CC314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CC398(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CC3A8(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bundleIdentifier"));
  v2 = (void *)qword_1005AA4F0;
  qword_1005AA4F0 = v1;

}

void sub_1001CC3F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CC608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CC738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CC7D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CC880(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CC8E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CC9B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001CCAD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001CCD58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001CD158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CD244(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.mobilemail", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA500;
  qword_1005AA500 = (uint64_t)v2;

}

void sub_1001CD2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CD544(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001CD708(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CD7E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CD840(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CD9CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CDA8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001CDBE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CDCAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001CDE34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1001CDEA0(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "actionBlock"));
    ((void (**)(_QWORD, uint64_t, id))v5)[2](v5, 1, v6);

  }
}

void sub_1001CDF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001CE114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1001CE1AC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;

  v4 = a3;
  v5 = *(void **)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "messageList"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1001CE2E0;
  v9[3] = &unk_10051AA98;
  v8 = v4;
  v10 = v8;
  objc_msgSend(v5, "_deleteItemsWithIDs:fromCollection:completionHandler:", v6, v7, v9);

}

void sub_1001CE2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

id sub_1001CE2E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invoke");
}

void sub_1001CE33C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001CE514(_Unwind_Exception *a1)
{
  id *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

id sub_1001CE57C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id WeakRetained;
  void *v11;
  void *v12;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(v8, "section"))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[MessageListTableViewCell reusableIdentifier](MessageListTableViewCell, "reusableIdentifier"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "dequeueReusableCellWithIdentifier:forIndexPath:", v11, v8));

    objc_msgSend(WeakRetained, "_configureCell:itemID:", v12, v9);
  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "dequeueReusableCellWithIdentifier:forIndexPath:", CFSTR("PreviousDraftPickerNewMessageCellIdentifier"), v8));
    objc_msgSend(v12, "mf_updateContentConfigurationWithBlock:", &stru_1005235D8);
  }

  return v12;
}

void sub_1001CE660(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001CE6A4(id a1, UIListContentConfiguration *a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  UIListContentConfiguration *v7;

  v7 = a2;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("PREVIOUS_DRAFT_PICKER_NEW_MESSAGE"), &stru_100531B00, CFSTR("Main")));
  -[UIListContentConfiguration setText:](v7, "setText:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor mailInteractiveColor](UIColor, "mailInteractiveColor"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[UIListContentConfiguration textProperties](v7, "textProperties"));
  objc_msgSend(v5, "setColor:", v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(-[UIListContentConfiguration textProperties](v7, "textProperties"));
  objc_msgSend(v6, "setAlignment:", 1);

}

void sub_1001CE76C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001CE7A8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[2];

  v2 = objc_alloc_init((Class)NSDiffableDataSourceSnapshot);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "composeSectionObjectID"));
  v12[0] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionHelper"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sectionObjectID"));
  v12[1] = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v12, 2));
  objc_msgSend(v2, "appendSectionsWithIdentifiers:", v6);

  v7 = objc_msgSend(objc_alloc((Class)EMObjectID), "initAsEphemeralID:", 1);
  v11 = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "composeSectionObjectID"));
  objc_msgSend(v2, "appendItemsWithIdentifiers:intoSectionWithIdentifier:", v8, v9);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableViewDataSource"));
  objc_msgSend(v10, "applySnapshot:animatingDifferences:", v2, 0);

}

void sub_1001CE910(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CEBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001CECB0()
{
  JUMPOUT(0x1001CEC98);
}

void sub_1001CECB8(uint64_t a1, void *a2)
{
  void *v3;
  unsigned __int8 v4;
  id v5;

  v5 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "itemID"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  if ((v4 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "setOutgoingMailbox:", 1);
    objc_msgSend(*(id *)(a1 + 40), "setInbox:", 0);
    objc_msgSend(*(id *)(a1 + 40), "setDisclosureEnabled:", 0);
    objc_msgSend(*(id *)(a1 + 40), "setMessageListItem:style:", v5, 0);
    objc_msgSend(*(id *)(a1 + 40), "setShouldDisplayUnreadAndVIP:", 0);
    objc_msgSend(*(id *)(a1 + 40), "setShouldAnnotateReplyOrForward:", 0);
  }

}

void sub_1001CED5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001CED80(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  uint8_t v5[24];

  v2 = objc_claimAutoreleasedReturnValue(+[PreviousDraftPickerController log](PreviousDraftPickerController, "log"));
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ef_publicDescription"));
    sub_100395080(v3, v4, v5, v2);
  }

}

void sub_1001CEE1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CEED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CEF38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CEFD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001CF0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001CF0E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionHelper"));
  objc_msgSend(v6, "addItemIDs:after:snapshot:section:validateOtherSections:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v7, v5, 0);

}

void sub_1001CF150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001CF22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001CF250(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "collectionHelper"));
  objc_msgSend(v6, "addItemIDs:before:snapshot:section:validateOtherSections:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v7, v5, 0);

}

void sub_1001CF2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001CF370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id sub_1001CF388(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "reloadItemsWithIdentifiers:", *(_QWORD *)(a1 + 32));
}

void sub_1001CF460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001CF484(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v5 = a2;
  v6 = a3;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v14;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v7);
        v11 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionHelper", (_QWORD)v13));
        objc_msgSend(v12, "moveItemID:after:snapshot:section:", v11, *(_QWORD *)(a1 + 48), v5, v6);

        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }

}

void sub_1001CF5C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CF6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001CF6D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v5 = a2;
  v6 = a3;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v7 = *(id *)(a1 + 32);
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v14;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v7);
        v11 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionHelper", (_QWORD)v13));
        objc_msgSend(v12, "moveItemID:before:snapshot:section:", v11, *(_QWORD *)(a1 + 48), v5, v6);

        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }

}

void sub_1001CF80C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001CF8B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CF8C8(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "headerView"));
  objc_msgSend(v1, "setLoading:immediately:", 0, 0);

}

void sub_1001CF908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001CF9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1001CF9CC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  uint64_t v8;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(+[PreviousDraftPickerController log](PreviousDraftPickerController, "log"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v7 = 138543362;
    v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "deletedItemIDs: %{public}@", (uint8_t *)&v7, 0xCu);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mui_validItemIDsFromExistingItemIDs:updateReason:", *(_QWORD *)(a1 + 32), CFSTR("Deleting itemIDS")));
  if (objc_msgSend(v6, "count"))
    objc_msgSend(v3, "deleteItemsWithIdentifiers:", v6);

}

void sub_1001CFAC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CFBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v21 = v20;

  _Unwind_Resume(a1);
}

void sub_1001CFC20(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;
  uint8_t buf[24];

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "messageList"));

  if (v2 == v3)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "tableViewDataSource"));
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "collectionHelper"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject sectionObjectID](v7, "sectionObjectID"));
    v9 = objc_claimAutoreleasedReturnValue(-[NSObject updateQueue](v7, "updateQueue"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1001CFE0C;
    v14[3] = &unk_100523628;
    v15 = v6;
    v18 = *(id *)(a1 + 48);
    v16 = v8;
    v20 = *(_BYTE *)(a1 + 64);
    v10 = *(id *)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 40);
    v19 = v10;
    v17 = v11;
    v12 = v8;
    v13 = v6;
    dispatch_async(v9, v14);

    v4 = v7;
  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(+[PreviousDraftPickerController log](PreviousDraftPickerController, "log"));
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ef_publicDescription"));
      sub_1003950E4(v5, buf, v4);
    }
  }

}

void sub_1001CFDD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001CFE0C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  _QWORD v5[4];
  uint64_t v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "snapshot"));
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  objc_msgSend(*(id *)(a1 + 32), "applySnapshot:animatingDifferences:", v2, *(unsigned __int8 *)(a1 + 72));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001CFEFC;
  v5[3] = &unk_10051B3B0;
  v3 = *(id *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[EFScheduler mainThreadScheduler](EFScheduler, "mainThreadScheduler", _NSConcreteStackBlock, 3221225472, sub_1001CFEFC, &unk_10051B3B0, v6));
  objc_msgSend(v4, "performBlock:", v5);

}

void sub_1001CFECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  v16 = v15;

  _Unwind_Resume(a1);
}

id sub_1001CFEFC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  return _objc_msgSend(*(id *)(a1 + 32), "_updateHeaderViewDraftsState");
}

void sub_1001D01D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D0258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D0320(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D03B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D0430(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D05E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001D0704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001D07D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001D0850()
{
  if (qword_1005AA518 != -1)
    dispatch_once(&qword_1005AA518, &stru_100523670);
  return (id)qword_1005AA510;
}

void sub_1001D0A90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D0BDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001D0DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001D0E74(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "mailbox"));
  v7 = *(void **)(a1 + 32);

  if (v6 == v7)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v8, "sourceType");
    *a4 = 1;
  }

}

void sub_1001D0EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D1000(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001D10AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D114C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D1488(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001D1768(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id sub_1001D17F8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = *(id *)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    sub_10039544C();
  }

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSError mf_restorationMailboxNotAvailableErrorWithUnderlyingError:](NSError, "mf_restorationMailboxNotAvailableErrorWithUnderlyingError:", v3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[EFFuture futureWithError:](EFFuture, "futureWithError:", v5));

  return v6;
}

void sub_1001D18CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1900(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;

  v3 = a2;
  v4 = *(id *)(a1 + 32);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    sub_100395488();
  }

}

void sub_1001D1998(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D1CEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1001D20A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1001D21AC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.mobilemail", "RestorationMailboxSerialization");
  v2 = (void *)qword_1005AA510;
  qword_1005AA510 = (uint64_t)v1;

}

uint64_t sub_1001D21DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 12) = 2114;
  *(_QWORD *)(a2 + 14) = result;
  return result;
}

void sub_1001D2238(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D22CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D238C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001D241C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1001D24F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

id sub_1001D2528()
{
  if (qword_1005AA538 != -1)
    dispatch_once(&qword_1005AA538, &stru_100523730);
  return (id)qword_1005AA530;
}

void sub_1001D2788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001D289C(id a1)
{
  NSBundle *v1;
  void *v2;
  void *v3;
  void *v4;
  NSBundle *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSBundle *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[2];

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(SearchMailboxSuggestion));
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", CFSTR("SEARCH_SCOPE_MAILBOX"), &stru_100531B00, CFSTR("Main")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[MUISearchSuggestionCategoryScope scopeWithTitle:identifier:](MUISearchSuggestionCategoryScope, "scopeWithTitle:identifier:", v3, MFSearchSuggestionMailboxCategoryScope));

  objc_msgSend(v4, "setParsecScope:", MSSearchScopeMailbox);
  v5 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(SearchMailboxSuggestion));
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "localizedStringForKey:value:table:", CFSTR("SEARCH_SCOPE_CONTENT"), &stru_100531B00, CFSTR("Main")));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[MUISearchSuggestionCategoryScope scopeWithTitle:identifier:](MUISearchSuggestionCategoryScope, "scopeWithTitle:identifier:", v7, MUISearchSuggestionCategoryContentScope));

  objc_msgSend(v8, "setParsecScope:", MSSearchScopeMessage);
  objc_msgSend(v4, "setPredicateApplier:", &stru_1005236D0);
  objc_msgSend(v8, "setPredicateApplier:", &stru_1005236F0);
  v9 = objc_alloc((Class)MUISearchSuggestionCategory);
  v10 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(SearchMailboxSuggestion));
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("SEARCH_SUGGESTION_CATEGORY_MAILBOX"), &stru_100531B00, CFSTR("Main")));
  v13 = objc_msgSend(v9, "initWithDisplayName:", v12);
  v14 = (void *)qword_1005AA520;
  qword_1005AA520 = (uint64_t)v13;

  objc_msgSend((id)qword_1005AA520, "setImageInstantiationBlock:", &stru_100523710);
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage systemImageNamed:](UIImage, "systemImageNamed:", MFImageGlyphSearchMailbox));
  objc_msgSend((id)qword_1005AA520, "setAtomImage:", v15);

  v17[0] = v4;
  v17[1] = v8;
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v17, 2));
  objc_msgSend((id)qword_1005AA520, "setScopes:", v16);

  objc_msgSend((id)qword_1005AA520, "setParsecCategory:", MSSearchSuggestionCategoryMailboxes);
}

void sub_1001D2B38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

NSPredicate *__cdecl sub_1001D2BB8(id a1, SearchMailboxSuggestion *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[SearchMailboxSuggestion mailboxes](a2, "mailboxes"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessageListItemPredicates predicateForMessagesInMailboxes:](EMMessageListItemPredicates, "predicateForMessagesInMailboxes:", v2));

  return (NSPredicate *)v3;
}

void sub_1001D2C04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

NSPredicate *__cdecl sub_1001D2C14(id a1, SearchMailboxSuggestion *a2)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[SearchMailboxSuggestion title](a2, "title"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessageListItemSearchPredicates spotlightUserQueryStringPredicateForValue:](EMMessageListItemSearchPredicates, "spotlightUserQueryStringPredicateForValue:", v2));

  return (NSPredicate *)v3;
}

void sub_1001D2C60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

UIImage *__cdecl sub_1001D2C70(id a1)
{
  return (UIImage *)+[UIImage mf_systemImageNamed:forView:](UIImage, "mf_systemImageNamed:forView:", MFImageGlyphSearchMailbox, 15);
}

void sub_1001D2CF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001D2D20(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.email", "SearchMailboxSuggestion");
  v2 = (void *)qword_1005AA530;
  qword_1005AA530 = (uint64_t)v1;

}

id *sub_1001D2D50(id *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id *v11;
  objc_super v13;

  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (a1)
  {
    v13.receiver = a1;
    v13.super_class = (Class)SearchTopHitsSuggestion;
    v11 = (id *)objc_msgSendSuper2(&v13, "init");
    a1 = v11;
    if (v11)
    {
      objc_storeStrong(v11 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
      objc_storeStrong(a1 + 3, a4);
    }
  }

  return a1;
}

void sub_1001D2E24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D2E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001D2F2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D2FA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D3034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001D31C8(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.mobilemail", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA540;
  qword_1005AA540 = (uint64_t)v2;

}

void sub_1001D3224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D32DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D3428(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D34F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id *sub_1001D3510(id *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id *v10;
  id *v11;
  id *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v20;
  objc_super v21;

  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (a1)
  {
    v21.receiver = a1;
    v21.super_class = (Class)_SearchTopHitsSuggesterQuery;
    v11 = (id *)objc_msgSendSuper2(&v21, "init");
    v12 = v11;
    a1 = v11;
    if (v11)
    {
      objc_storeStrong(v11 + 2, a2);
      *((_BYTE *)a1 + 12) = sub_1001D366C((_BOOL8)a1, v8);
      v13 = objc_msgSend(v9, "copy");
      v14 = a1[4];
      a1[4] = v13;

      if (v10)
      {
        objc_storeStrong(v12 + 3, v10[2]);
        v15 = v10[1];
      }
      else
      {
        v20 = a1[3];
        a1[3] = 0;

        v15 = 0;
      }
      objc_storeStrong(v12 + 6, v15);
      v16 = sub_1001D372C(a1);
      v17 = objc_claimAutoreleasedReturnValue(v16);
      v18 = a1[5];
      a1[5] = (id)v17;

    }
  }

  return a1;
}

void sub_1001D3620(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

BOOL sub_1001D366C(_BOOL8 a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a2;
  v4 = v3;
  if (a1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "phrase"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "inputLanguages"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ef_stringByRemovingQuotesForLanguages:", v6));

    a1 = objc_msgSend(v7, "length") != 0;
  }

  return a1;
}

void sub_1001D36F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

id sub_1001D372C(id *a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;

  if (a1)
  {
    if (objc_msgSend(a1[2], "phraseKind") == 1)
      v2 = 4;
    else
      v2 = 10;
    v3 = a1[2];
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "phrase"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[2], "inputLanguages"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ef_stringByRemovingQuotesForLanguages:", v5));

    v6 = objc_alloc((Class)EMSearchableIndexTopHitsQuery);
    v19 = a1[2];
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "spotlightQueryStrings"));
    v17 = a1[3];
    v18 = (void *)v7;
    v16 = a1[2];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "inputLanguages"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "firstObject"));
    v10 = a1[2];
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "updatedSuggestion"));
    v12 = a1[2];
    v13 = objc_msgSend(v12, "feedbackQueryID");
    v14 = objc_msgSend(v6, "initWithSearchString:filterQueries:bundleID:keyboardLanguage:updatedSuggestion:generateSuggestions:logDescription:resultLimit:suggestionLimit:customFlags:feedbackQueryID:", v20, v18, v17, v9, v11, 1, CFSTR("Ranked Suggestions"), EMTopHitsQueryDefaultLimit, v2, 0, v13);

    sub_1001D39C4((uint64_t)a1, v14);
    sub_1001D3AA0(a1, v14);
    if (_os_feature_enabled_impl("Mail", "InstantAnswers"))
      sub_1001D3BEC(a1, v14);

  }
  else
  {
    v14 = 0;
  }
  return v14;
}

void sub_1001D3924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1001D39C4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  _QWORD v6[5];
  _QWORD v7[5];

  v3 = a2;
  v4 = v3;
  if (a1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topHitsQueryResult"));
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1001D3D38;
    v7[3] = &unk_1005237A8;
    v7[4] = a1;
    objc_msgSend(v5, "addSuccessBlock:", v7);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1001D4978;
    v6[3] = &unk_10051B140;
    v6[4] = a1;
    objc_msgSend(v5, "addFailureBlock:", v6);

  }
}

void sub_1001D3A80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D3AA0(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  _QWORD v8[4];
  id v9;
  id location;

  v3 = a2;
  v4 = v3;
  if (a1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topHitsQuerySuggestionResult"));
    location = (id)0xAAAAAAAAAAAAAAAALL;
    objc_initWeak(&location, a1);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1001D4A7C;
    v8[3] = &unk_1005237F8;
    objc_copyWeak(&v9, &location);
    objc_msgSend(v5, "addSuccessBlock:", v8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1001D4E18;
    v6[3] = &unk_10051BD98;
    objc_copyWeak(&v7, &location);
    objc_msgSend(v5, "addFailureBlock:", v6);
    objc_destroyWeak(&v7);
    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);

  }
}

void sub_1001D3BAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  id *v3;
  id *v4;
  uint64_t v5;
  id *v6;

  v6 = v4;
  objc_destroyWeak(v6);
  objc_destroyWeak(v3);
  objc_destroyWeak((id *)(v5 - 56));

  _Unwind_Resume(a1);
}

void sub_1001D3BEC(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  _QWORD v8[4];
  id v9;
  id location;

  v3 = a2;
  v4 = v3;
  if (a1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topHitsQueryInstantAnswersResult"));
    location = (id)0xAAAAAAAAAAAAAAAALL;
    objc_initWeak(&location, a1);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1001D4F00;
    v8[3] = &unk_100523820;
    objc_copyWeak(&v9, &location);
    objc_msgSend(v5, "addSuccessBlock:", v8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1001D59B0;
    v6[3] = &unk_10051BD98;
    objc_copyWeak(&v7, &location);
    objc_msgSend(v5, "addFailureBlock:", v6);
    objc_destroyWeak(&v7);
    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);

  }
}

void sub_1001D3CF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  id *v3;
  id *v4;
  uint64_t v5;
  id *v6;

  v6 = v4;
  objc_destroyWeak(v6);
  objc_destroyWeak(v3);
  objc_destroyWeak((id *)(v5 - 56));

  _Unwind_Resume(a1);
}

void sub_1001D3D38(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  NSMutableDictionary *v9;
  void *v10;
  NSMutableDictionary *v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  unint64_t i;
  void *v29;
  id *v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  unsigned int v39;
  void *v40;
  void *v41;
  NSObject *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  _QWORD v59[4];
  id v60;
  id v61;
  _QWORD v62[4];
  id v63;
  id v64;
  void *v65;
  uint8_t buf[4];
  id v67;
  __int16 v68;
  void *v69;

  v58 = a2;
  v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "searchableItemIdentifiers"));
  v51 = a1;
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 && *(_BYTE *)(v3 + 12) && (v4 = objc_msgSend(v52, "count"), v3 = *(_QWORD *)(a1 + 32), v4))
  {
    if (v3)
      v5 = *(void **)(v3 + 48);
    else
      v5 = 0;
    v6 = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "messageObjectIDsForSearchableItemIdentifiers:", v52));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "result"));

    v44 = v8;
    v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectIDs"));
    v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectIDByPersistentID"));
    v9 = *(NSMutableDictionary **)(v51 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "matchingHintsByPersistentID"));
    v11 = sub_1001D457C(v9, v10, v50);
    v57 = (void *)objc_claimAutoreleasedReturnValue(v11);

    v12 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = objc_msgSend(v57, "count");
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "allValues"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "firstObject"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[EFPrivacy partiallyRedactedDictionary:](EFPrivacy, "partiallyRedactedDictionary:", v15));
      *(_DWORD *)buf = 134218242;
      v67 = v13;
      v68 = 2112;
      v69 = v16;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[Snippet Hints] [TopHits] Received (%ld) items: %@", buf, 0x16u);

    }
    v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "mailRankingSignalsByPersistentID"));
    v17 = objc_alloc_init((Class)NSMutableDictionary);
    v62[0] = _NSConcreteStackBlock;
    v62[1] = 3221225472;
    v62[2] = sub_1001D4674;
    v62[3] = &unk_100523758;
    v18 = v50;
    v63 = v18;
    v54 = v17;
    v64 = v54;
    objc_msgSend(v45, "enumerateKeysAndObjectsUsingBlock:", v62);
    v19 = objc_alloc_init((Class)NSMutableDictionary);
    v59[0] = _NSConcreteStackBlock;
    v59[1] = 3221225472;
    v59[2] = sub_1001D4730;
    v59[3] = &unk_100523780;
    v43 = v18;
    v60 = v43;
    v53 = v19;
    v61 = v53;
    objc_msgSend(v52, "enumerateObjectsUsingBlock:", v59);
    v46 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessage predicateForMessagesWithObjectIDs:](EMMessage, "predicateForMessagesWithObjectIDs:", v47));
    v48 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessageListItemPredicates sortDescriptorForDateAscending:](EMMessageListItemPredicates, "sortDescriptorForDateAscending:", 0));
    v20 = objc_alloc((Class)EMQuery);
    v21 = objc_opt_class(EMMessage);
    v65 = v48;
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v65, 1));
    v49 = objc_msgSend(v20, "initWithTargetClass:predicate:sortDescriptors:", v21, v46, v22);

    v23 = objc_alloc((Class)EMMessageList);
    v24 = *(_QWORD *)(v51 + 32);
    if (v24)
      v25 = *(_QWORD *)(v24 + 48);
    else
      v25 = 0;
    v55 = objc_msgSend(v23, "initWithQuery:repository:", v49, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "allItemIDs"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "result:", 0));

    v56 = objc_alloc_init((Class)NSMutableArray);
    for (i = 0; i < (unint64_t)objc_msgSend(v27, "count"); ++i)
    {
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectAtIndexedSubscript:", i));
      v30 = sub_1001D2D50((id *)[SearchTopHitsSuggestion alloc], v55, v29, v58);
      objc_msgSend(v30, "setMatchingHintsByGlobalMessageID:", v57);
      v31 = objc_opt_class(EMMessageCollectionItemID);
      if ((objc_opt_isKindOfClass(v29, v31) & 1) != 0)
      {
        v32 = v29;
        v33 = objc_msgSend(v32, "globalMessageID");
        v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", v33));
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "objectForKey:", v34));
        objc_msgSend(v30, "setMailRankingSignals:", v35);

        v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", v33));
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "objectForKey:", v36));
        v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", i));
        v39 = objc_msgSend(v37, "isEqual:", v38);
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "mailRankingSignals"));
        objc_msgSend(v40, "setWasReorderedByRecency:", v39 ^ 1);

      }
      objc_msgSend(v56, "addObject:", v30);

    }
    v42 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v67 = v56;
      _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "Generated top hits %@", buf, 0xCu);
    }

    v3 = *(_QWORD *)(v51 + 32);
    v41 = v56;
  }
  else
  {
    v41 = 0;
  }
  sub_1001D47F4(v3, v41);

}

void sub_1001D434C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25)
{
  void *v25;
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

NSMutableDictionary *sub_1001D457C(NSMutableDictionary *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSMutableDictionary *v7;
  NSMutableDictionary *v8;
  NSMutableDictionary *v9;
  _QWORD v11[4];
  id v12;
  NSMutableDictionary *v13;

  v5 = a2;
  v6 = a3;
  if (a1)
  {
    v7 = objc_opt_new(NSMutableDictionary);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1001D5FD4;
    v11[3] = &unk_100523848;
    v12 = v6;
    v8 = v7;
    v13 = v8;
    objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v11);
    v9 = v13;
    a1 = v8;

  }
  return a1;
}

void sub_1001D4644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1001D4674(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", a2));
  v6 = v5;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v5, "globalMessageID")));
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v8, v7);

  }
}

void sub_1001D4704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001D4730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", a2));
  if (v5)
  {
    v8 = v5;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v5, "globalMessageID")));
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3));
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v7, v6);

    v5 = v8;
  }

}

void sub_1001D47C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001D47F4(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v17 = a2;
  if (!a1)
    goto LABEL_14;
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 8));
  v3 = objc_msgSend(v17, "copy");
  v5 = v3;
  if (v3)
    v6 = v3;
  else
    v6 = &__NSArray0__struct;
  objc_setProperty_nonatomic_copy((id)a1, v4, v6, 64);

  v7 = _os_feature_enabled_impl("Mail", "InstantAnswers");
  v8 = *(void **)(a1 + 56);
  if (v7)
  {
    v9 = v8;
    if (v9)
    {
      v10 = *(_QWORD *)(a1 + 72);

      if (v10)
      {
        sub_1001D5A98((id *)a1);
        v11 = *(_QWORD *)(a1 + 64);
        v12 = *(id *)(a1 + 56);
        v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "arrayByAddingObjectsFromArray:", v11));

        v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "arrayByAddingObjectsFromArray:", *(_QWORD *)(a1 + 72)));
        goto LABEL_11;
      }
    }
LABEL_13:
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
    goto LABEL_14;
  }
  if (!v8)
    goto LABEL_13;
  v15 = *(_QWORD *)(a1 + 64);
  v13 = *(id *)(a1 + 56);
  v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "arrayByAddingObjectsFromArray:", v15));
LABEL_11:
  v16 = (void *)v14;

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
  if (v16)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
LABEL_14:

}

void sub_1001D4924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_s *v10;
  void *v11;

  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_1001D4978(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    v6 = 138412290;
    v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Failed to generate top hits %@", (uint8_t *)&v6, 0xCu);

  }
  sub_1001D47F4(*(_QWORD *)(a1 + 32), 0);

}

void sub_1001D4A54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D4A7C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  _QWORD v9[5];
  uint8_t buf[4];
  void *v11;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "suggestions"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1001D4C14;
  v9[3] = &unk_1005237D0;
  v9[4] = WeakRetained;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ef_compactMap:", v9));

  v7 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ef_mapSelector:", "ef_publicDescription"));
    *(_DWORD *)buf = 138412290;
    v11 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Generated suggestions %@", buf, 0xCu);

  }
  sub_1001D4C94((uint64_t)WeakRetained, v6);

}

void sub_1001D4BD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

id sub_1001D4C14(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  _BOOL8 v5;
  void *v6;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
    v5 = objc_msgSend(*(id *)(v4 + 16), "phraseKind") == 1;
  else
    v5 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[MUISearchAtomSuggestion suggestionFromSpotlightSuggestion:shouldShowAvaters:](MUISearchAtomSuggestion, "suggestionFromSpotlightSuggestion:shouldShowAvaters:", v3, v5));

  return v6;
}

void sub_1001D4C84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D4C94(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v17 = a2;
  if (!a1)
    goto LABEL_14;
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 8));
  v3 = objc_msgSend(v17, "copy");
  v5 = v3;
  if (v3)
    v6 = v3;
  else
    v6 = &__NSArray0__struct;
  objc_setProperty_nonatomic_copy((id)a1, v4, v6, 56);

  v7 = _os_feature_enabled_impl("Mail", "InstantAnswers");
  v8 = *(void **)(a1 + 64);
  if (v7)
  {
    v9 = v8;
    if (v9)
    {
      v10 = *(_QWORD *)(a1 + 72);

      if (v10)
      {
        sub_1001D5A98((id *)a1);
        v11 = *(_QWORD *)(a1 + 64);
        v12 = *(id *)(a1 + 56);
        v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "arrayByAddingObjectsFromArray:", v11));

        v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "arrayByAddingObjectsFromArray:", *(_QWORD *)(a1 + 72)));
        goto LABEL_11;
      }
    }
LABEL_13:
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
    goto LABEL_14;
  }
  if (!v8)
    goto LABEL_13;
  v15 = *(_QWORD *)(a1 + 64);
  v13 = *(id *)(a1 + 56);
  v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "arrayByAddingObjectsFromArray:", v15));
LABEL_11:
  v16 = (void *)v14;

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
  if (v16)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
LABEL_14:

}

void sub_1001D4DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  os_unfair_lock_s *v10;
  void *v11;

  os_unfair_lock_unlock(v10);

  _Unwind_Resume(a1);
}

void sub_1001D4E18(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    sub_10039582C(v6, (uint64_t)&v7, v5);
  }

  sub_1001D4C94((uint64_t)WeakRetained, 0);
}

void sub_1001D4ED4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D4F00(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *i;
  void *v6;
  const char *v7;
  void *v8;
  char v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  NSObject *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  id v35;
  void *v36;
  void *v37;
  NSObject *v38;
  void *v39;
  NSObject *v40;
  NSObject *v41;
  void *v42;
  id v43;
  void *v44;
  _QWORD *WeakRetained;
  void *v46;
  NSObject *log;
  NSObject *v48;
  id obj;
  void *v50;
  uint64_t v51;
  id v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint8_t buf[4];
  NSObject *v58;
  void *v59;
  _BYTE v60[128];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v42 = v3;
  v48 = objc_alloc_init((Class)NSMutableArray);
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "instantAnswersSuggestions"));
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v60, 16);
  if (v4)
  {
    v51 = *(_QWORD *)v54;
    do
    {
      v52 = v4;
      for (i = 0; i != v52; i = (char *)i + 1)
      {
        if (*(_QWORD *)v54 != v51)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * (_QWORD)i);
        v7 = NSSelectorFromString(CFSTR("messageId"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instantAnswer"));
        v9 = objc_opt_respondsToSelector(v8, v7);

        if ((v9 & 1) != 0)
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instantAnswer"));
          v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, v7));

          v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithString:](NSMutableString, "stringWithString:", CFSTR("message://")));
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL ef_defaultAllowedCharacterSet](NSURL, "ef_defaultAllowedCharacterSet"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject stringByAddingPercentEncodingWithAllowedCharacters:](v11, "stringByAddingPercentEncodingWithAllowedCharacters:", v13));

          if (v14)
          {
            objc_msgSend(v12, "appendString:", v14);
            v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v12));
            if (objc_msgSend(v50, "em_isMessageURL"))
            {
              v15 = WeakRetained;
              if (WeakRetained)
                v15 = (void *)WeakRetained[6];
              v16 = v15;
              v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "messageObjectIDForURL:", v50));
              v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "result"));

              v19 = objc_opt_class(EMMessageObjectID);
              if ((objc_opt_isKindOfClass(v18, v19) & 1) != 0)
              {
                log = objc_claimAutoreleasedReturnValue(+[EMMessage predicateForMessageWithObjectID:](EMMessage, "predicateForMessageWithObjectID:", v18));
                v44 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessageListItemPredicates sortDescriptorForDateAscending:](EMMessageListItemPredicates, "sortDescriptorForDateAscending:", 0));
                v20 = objc_alloc((Class)EMQuery);
                v21 = objc_opt_class(EMMessage);
                v59 = v44;
                v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v59, 1));
                v43 = objc_msgSend(v20, "initWithTargetClass:predicate:sortDescriptors:", v21, log, v22);

                v23 = objc_alloc((Class)EMMessageList);
                v24 = WeakRetained;
                if (WeakRetained)
                  v24 = (void *)WeakRetained[6];
                v25 = v24;
                v26 = objc_msgSend(v23, "initWithQuery:repository:", v43, v25);

                v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "allItemIDs"));
                v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "result:", 0));

                if (objc_msgSend(v46, "count"))
                {
                  v28 = v26;
                  v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "objectAtIndex:", 0));
                  v30 = objc_alloc((Class)MUISearchInstantAnswersSuggestion);
                  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instantAnswer"));
                  v32 = v30;
                  v26 = v28;
                  v33 = objc_msgSend(v32, "initWithMessageList:itemID:instantAnswer:", v28, v29, v31);

                  if (v33)
                    -[NSObject addObject:](v48, "addObject:", v33);

                }
                else
                {
                  v29 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
                  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
                  {
                    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instantAnswer"));
                    v40 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v39, "instantAnswersKind")));
                    *(_DWORD *)buf = 138412290;
                    v58 = v40;
                    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "[instant answers] Unable to fetch itemIDs for instant answer with kind:%@", buf, 0xCu);

                  }
                }

              }
              else
              {
                log = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
                if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138412290;
                  v58 = v18;
                  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[instant answers] Got ObjectID of unsupported type:%@", buf, 0xCu);
                }
              }

            }
            else
            {
              v18 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
              if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
              {
                v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instantAnswer"));
                v38 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v37, "instantAnswersKind")));
                *(_DWORD *)buf = 138412290;
                v58 = v38;
                _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "[instant answers] Failed to fetch the messageIdUrl for the instant answer with kind:%@", buf, 0xCu);

              }
            }

            goto LABEL_34;
          }
          v34 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[instant answers] Couldn't extract encoded string from messageid in csInstantAnswers from spotlight, so skipping creating messageList", buf, 2u);
          }

        }
        else
        {
          v11 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[instant answers] Couldn't find messageid field in csInstantAnswers from spotlight, so skipping creating messageList", buf, 2u);
          }
        }

        v35 = objc_alloc((Class)MUISearchInstantAnswersSuggestion);
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "instantAnswer"));
        v11 = objc_msgSend(v35, "initWithInstantAnswer:", v36);

        if (v11)
          -[NSObject addObject:](v48, "addObject:", v11);
LABEL_34:

      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v60, 16);
    }
    while (v4);
  }

  v41 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v58 = v48;
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "[instant answers] Generated instantAnswers %@", buf, 0xCu);
  }

  sub_1001D57C0((uint64_t)WeakRetained, v48);
}

void sub_1001D55DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18)
{

  _Unwind_Resume(a1);
}

void sub_1001D57C0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  const char *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  id v9;
  id v10;
  BOOL v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  id v17;

  v3 = a2;
  if (a1)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 8));
    v4 = objc_msgSend(v3, "copy");
    v6 = v4;
    if (v4)
      v7 = v4;
    else
      v7 = &__NSArray0__struct;
    objc_setProperty_nonatomic_copy((id)a1, v5, v7, 72);

    v8 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = objc_msgSend(*(id *)(a1 + 72), "count");
      v16 = 134217984;
      v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[instant answers] Suggester found instant answers with count: %ld", (uint8_t *)&v16, 0xCu);
    }

    v10 = *(id *)(a1 + 56);
    if (!v10 || (v11 = *(_QWORD *)(a1 + 64) == 0, v10, v11))
    {
      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
    }
    else
    {
      sub_1001D5A98((id *)a1);
      v12 = *(_QWORD *)(a1 + 64);
      v13 = *(id *)(a1 + 56);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "arrayByAddingObjectsFromArray:", v12));

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "arrayByAddingObjectsFromArray:", *(_QWORD *)(a1 + 72)));
      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 8));
      if (v15)
      {
        (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

      }
    }
  }

}

void sub_1001D5954(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D59B0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ef_publicDescription"));
    sub_100395874(v6, (uint64_t)&v7, v5);
  }

  sub_1001D57C0((uint64_t)WeakRetained, 0);
}

void sub_1001D5A6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D5A98(id *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  void *v7;
  void *v8;
  BOOL v9;
  void *v10;
  NSObject *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *j;
  void *v17;
  void *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id v24;
  SEL v25;
  NSObject *v26;
  id v27;
  id v28;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint8_t buf[4];
  id v40;
  __int16 v41;
  id v42;
  __int16 v43;
  unint64_t v44;
  _BYTE v45[128];
  _BYTE v46[128];

  if (a1)
  {
    v30 = objc_alloc_init((Class)NSMutableArray);
    v1 = objc_alloc_init((Class)NSMutableSet);
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v2 = a1[9];
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v46, 16);
    if (v3)
    {
      v4 = *(_QWORD *)v36;
      do
      {
        for (i = 0; i != v3; i = (char *)i + 1)
        {
          if (*(_QWORD *)v36 != v4)
            objc_enumerationMutation(v2);
          v6 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)i);
          v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "messageList"));
          if (v7)
          {
            v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "itemID"));
            v9 = v8 == 0;

            if (!v9)
            {
              v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "messageConversationID"));
              objc_msgSend(v1, "addObject:", v10);

            }
          }
        }
        v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v35, v46, 16);
      }
      while (v3);
    }

    v11 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v40 = v1;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[instant answers] Deduping top hits with instant answer message IDs:%@", buf, 0xCu);
    }

    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    v12 = a1[8];
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v45, 16);
    if (v13)
    {
      v14 = *(_QWORD *)v32;
      v15 = EMTopHitsQueryDefaultLimit;
      do
      {
        for (j = 0; j != v13; j = (char *)j + 1)
        {
          if (*(_QWORD *)v32 != v14)
            objc_enumerationMutation(v12);
          v17 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)j);
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "messageConversationID"));
          if ((objc_msgSend(v1, "containsObject:", v18) & 1) != 0)
          {

LABEL_25:
            v22 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "messageConversationID"));
              *(_DWORD *)buf = 138412802;
              v40 = v23;
              v41 = 2112;
              v42 = v1;
              v43 = 2048;
              v44 = v15;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[instant answers][Top Hit] ignoring the top hit with itemID:%@ because it is either matching with instant answer itemIDs:%@ or reached top hits default query limit:%ld", buf, 0x20u);

            }
            continue;
          }
          v19 = (unint64_t)objc_msgSend(v30, "count") < v15;

          if (!v19)
            goto LABEL_25;
          v20 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "messageConversationID"));
            *(_DWORD *)buf = 138412546;
            v40 = v21;
            v41 = 2112;
            v42 = v1;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "[instant answers][Top Hit] adding the top hits with itemID:%@ to the final list as it doesn't match with instant answer itemIDs:%@", buf, 0x16u);

          }
          objc_msgSend(v30, "addObject:", v17);
        }
        v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v45, 16);
      }
      while (v13);
    }

    v24 = objc_msgSend(v30, "copy");
    objc_setProperty_nonatomic_copy(a1, v25, v24, 64);

    v26 = objc_claimAutoreleasedReturnValue(+[SearchTopHitsSuggester log](SearchTopHitsSuggester, "log"));
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      v27 = a1[8];
      v28 = objc_msgSend(v27, "count");
      *(_DWORD *)buf = 138412546;
      v40 = v27;
      v41 = 2048;
      v42 = v28;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "[instant answers][Top Hit] final top hit item suggestions:%@ and their count:%ld after deduping with instant answers", buf, 0x16u);

    }
  }
}

void sub_1001D5F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1001D5FD4(uint64_t a1, void *a2, void *a3)
{
  NSMutableDictionary *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  v18 = a2;
  v17 = a3;
  v5 = objc_opt_new(NSMutableDictionary);
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v6 = v17;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v23, 16, v17);
  if (v7)
  {
    v8 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "attribute"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[EMMessageSnippetHintZoneBuilder snippetHintZoneFromString:](EMMessageSnippetHintZoneBuilder, "snippetHintZoneFromString:", v11));

        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "tokens"));
        -[NSMutableDictionary setObject:forKeyedSubscript:](v5, "setObject:forKeyedSubscript:", v13, v12);

      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v7);
  }

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v18));
  v15 = v14;
  if (v14)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", objc_msgSend(v14, "globalMessageID")));
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v5, v16);

  }
}

void sub_1001D61AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001D6338(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D65D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001D6720(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D67A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D68A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)SharedMailboxController;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001D6990(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D6A08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1001D6ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id sub_1001D6BAC(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v5 = sub_100013174(v3, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  v7 = objc_msgSend(v6, "BOOLValue");
  return v7;
}

void sub_1001D6C20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL sub_1001D6C4C(int a1)
{
  unsigned int v2;

  v2 = dword_1005A33B4;
  if (dword_1005A33B4 < 0 || a1)
  {
    v2 = sub_1001D6BAC(CollapseReadConversationMessagesKey, 1);
    dword_1005A33B4 = v2;
  }
  return v2 != 0;
}

id sub_1001D6C98(int a1)
{
  void *v2;
  BOOL v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v2 = (void *)qword_1005AA580;
  if (qword_1005AA580)
    v3 = a1 == 0;
  else
    v3 = 0;
  if (!v3)
  {
    v4 = sub_100013174(IncludeAttachmentRepliesKey, IncludeAttachmentRepliesWhenAdding);
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v6 = objc_msgSend(v5, "copy");
    v7 = (void *)qword_1005AA580;
    qword_1005AA580 = (uint64_t)v6;

    v2 = (void *)qword_1005AA580;
  }
  return v2;
}

void sub_1001D6D04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001D6D14(int a1)
{
  id v2;
  void *v3;
  BOOL v4;
  id v5;
  void *v6;

  os_unfair_lock_lock((os_unfair_lock_t)&unk_1005AA590);
  v2 = (id)qword_1005AA588;
  v3 = v2;
  if (v2)
    v4 = a1 == 0;
  else
    v4 = 0;
  if (v4)
  {
    v6 = v2;
  }
  else
  {
    v5 = sub_100013174(RightSwipeActionKey, SwipeActionRead);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

    if ((void *)qword_1005AA588 != v6)
      objc_storeStrong((id *)&qword_1005AA588, v6);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1005AA590);
  return v6;
}

void sub_1001D6DBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001D6DCC(int a1)
{
  id v2;
  void *v3;
  BOOL v4;
  id v5;
  void *v6;

  os_unfair_lock_lock((os_unfair_lock_t)&unk_1005AA5A0);
  v2 = (id)qword_1005AA598;
  v3 = v2;
  if (v2)
    v4 = a1 == 0;
  else
    v4 = 0;
  if (v4)
  {
    v6 = v2;
  }
  else
  {
    v5 = sub_100013174(LeftSwipeActionKey, SwipeActionFlag);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

    if ((void *)qword_1005AA598 != v6)
      objc_storeStrong((id *)&qword_1005AA598, v6);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_1005AA5A0);
  return v6;
}

void sub_1001D6E74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_1001D6E84()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v0 = (void *)qword_1005AA5A8;
  if (!qword_1005AA5A8)
  {
    v1 = UISystemRootDirectory();
    v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByAppendingPathComponent:", CFSTR("System/Library/PreferenceBundles/MobileMailSettings")));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByAppendingPathExtension:", CFSTR("bundle")));
    v5 = objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithPath:](NSBundle, "bundleWithPath:", v4));
    v6 = (void *)qword_1005AA5A8;
    qword_1005AA5A8 = v5;

    v0 = (void *)qword_1005AA5A8;
  }
  return v0;
}

void sub_1001D6F20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

double sub_1001D6F48(uint64_t a1)
{
  NSString *v2;
  _BOOL4 IsAccessibilityCategory;
  double result;

  v2 = (NSString *)objc_claimAutoreleasedReturnValue(objc_msgSend(UIApp, "preferredContentSizeCategory"));
  IsAccessibilityCategory = UIContentSizeCategoryIsAccessibilityCategory(v2);

  result = 55.0;
  if (IsAccessibilityCategory)
    result = 16.0;
  if (a1 >= 1)
  {
    result = result + 31.0;
    if (a1 != 1)
      return result + (float)((float)(a1 - 1) * 30.0);
  }
  return result;
}

void sub_1001D6FCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double sub_1001D6FDC(uint64_t a1)
{
  double v2;
  double v3;

  v2 = sub_1001D6F48(a1);
  v3 = 32.0;
  if (a1)
    v3 = 23.0;
  return v2 + -9.5 + v3 * -0.5;
}

void sub_1001D712C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001D7258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D7368(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001D73EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D7434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D75F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D7754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001D78C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D79B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D7F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1001D8214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D83A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D842C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D84E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001D85CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001D8708(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D87F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D89D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_1001D8C04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D8E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001D8ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D9020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D9108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D9234(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D92D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D944C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D95D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_1001D9818(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id sub_1001D986C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeView");
}

void sub_1001D992C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001D9AC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D9BB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001D9D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D9E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001D9F34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001D9FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DA094(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DA500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DA64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DA75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

uint64_t (**sub_1001DA77C(uint64_t a1))(id, _BOOL8)
{
  uint64_t v2;
  _BOOL8 v3;
  uint64_t (**result)(id, _BOOL8);

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v2 + 48))
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 + 56) == *(_QWORD *)(a1 + 48);
  result = *(uint64_t (***)(id, _BOOL8))(a1 + 40);
  if (result)
    result = (uint64_t (**)(id, _BOOL8))result[2](result, v3);
  if (v3)
    return (uint64_t (**)(id, _BOOL8))_objc_msgSend(*(id *)(a1 + 32), "setCurrentState:", *(_QWORD *)(a1 + 48));
  return result;
}

void sub_1001DA898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

id *sub_1001DA8B0(id *result)
{
  if (*((_BYTE *)result + 40))
    return (id *)objc_msgSend(result[4], "setAlpha:", 0.0);
  return result;
}

void sub_1001DAAF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001DAB58(uint64_t a1)
{
  void *v2;
  void *v3;
  id result;
  _OWORD v5[3];
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_msgSend(v2, "fullsizeTransform");
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
    v6 = 0u;
  }
  v3 = *(void **)(a1 + 32);
  v5[0] = v6;
  v5[1] = v7;
  v5[2] = v8;
  objc_msgSend(v3, "setTransform:", v5);
  result = objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  if (*(_BYTE *)(a1 + 48))
    return objc_msgSend(*(id *)(a1 + 40), "setDimmed:animated:", 0, *(unsigned __int8 *)(a1 + 49));
  return result;
}

void sub_1001DABDC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layer"));
  objc_msgSend(v1, "setShouldRasterize:", 0);

}

void sub_1001DAC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001DAD6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001DAD9C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id result;
  _OWORD v6[3];
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_msgSend(v2, "fullsizeTransform");
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
    v7 = 0u;
  }
  v3 = *(void **)(a1 + 32);
  v6[0] = v7;
  v6[1] = v8;
  v6[2] = v9;
  objc_msgSend(v3, "setTransform:", v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layer"));
  objc_msgSend(v4, "setBorderWidth:", 0.0);

  result = objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  if (*(_BYTE *)(a1 + 48))
    return objc_msgSend(*(id *)(a1 + 40), "setDimmed:animated:", 1, *(unsigned __int8 *)(a1 + 49));
  return result;
}

void sub_1001DAE3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DAF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

id sub_1001DAF64(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "updateItemView:", *(_QWORD *)(a1 + 40));
  if (*(_BYTE *)(a1 + 48))
    return objc_msgSend(*(id *)(a1 + 32), "setDimmed:animated:", 0, *(unsigned __int8 *)(a1 + 49));
  return result;
}

void sub_1001DB090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

id sub_1001DB0B0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateItemView:onStack:", *(_QWORD *)(a1 + 40), 0);
  return objc_msgSend(*(id *)(a1 + 32), "setDimmed:animated:", 0, *(unsigned __int8 *)(a1 + 48));
}

void sub_1001DB280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

id *sub_1001DB2C0(id *result)
{
  if (*((_BYTE *)result + 48))
    return (id *)objc_msgSend(result[4], "updateItemView:", result[5]);
  return result;
}

id sub_1001DB2D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

void sub_1001DB4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  void *v23;
  void *v24;

  _Unwind_Resume(a1);
}

id sub_1001DB52C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "updateItemView:", *(_QWORD *)(a1 + 40));
  if (*(_BYTE *)(a1 + 48))
    return objc_msgSend(*(id *)(a1 + 32), "setDimmed:animated:", 0, *(unsigned __int8 *)(a1 + 49));
  return result;
}

id sub_1001DB574(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

void sub_1001DB718(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001DB7DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DB854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DBA4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DBADC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DBB6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DBCC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DBDA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DC1F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DC368(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DC404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DC750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, id a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

id sub_1001DC8A0(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults em_userDefaults](NSUserDefaults, "em_userDefaults"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringForKey:", v1));

  return v3;
}

void sub_1001DC8F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DC928(void *a1, uint64_t a2)
{
  void *v3;
  id v4;

  v4 = a1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults em_userDefaults](NSUserDefaults, "em_userDefaults"));
  objc_msgSend(v3, "setValue:forKey:", a2, v4);

}

void sub_1001DC97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DCA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DCB1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DCB70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DCCCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001DD084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1001DD1D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DD66C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

id sub_1001DD744(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  v2 = *(_OWORD *)(a1 + 152);
  v7[4] = *(_OWORD *)(a1 + 136);
  v7[5] = v2;
  v3 = *(_OWORD *)(a1 + 184);
  v7[6] = *(_OWORD *)(a1 + 168);
  v7[7] = v3;
  v4 = *(_OWORD *)(a1 + 88);
  v7[0] = *(_OWORD *)(a1 + 72);
  v7[1] = v4;
  v5 = *(_OWORD *)(a1 + 120);
  v7[2] = *(_OWORD *)(a1 + 104);
  v7[3] = v5;
  objc_msgSend(*(id *)(a1 + 32), "setTransform3D:", v7);
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

id sub_1001DD7BC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "completeTransition:", objc_msgSend(*(id *)(a1 + 32), "transitionWasCancelled") ^ 1);
  return objc_msgSend(*(id *)(a1 + 40), "setTransitioningDelegate:", 0);
}

void sub_1001DD888(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DD9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001DDAA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1001DDB54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DDBD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DDD88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_1001DDEB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DDF8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001DDFE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001DE058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_1001DE12C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DE140(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tiltedTabView"));
  objc_msgSend(v1, "layoutItemsAnimated:", 0);

}

void sub_1001DE17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001DE190(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tiltedTabView"));
  objc_msgSend(v1, "updateSnapshotsIfNecessary");

}

void sub_1001DE1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001DE218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DE358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DE468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DE60C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001DE828(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001DE99C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001DEA9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DED40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001DEDF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DEE64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DEF58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001DF05C(uint64_t a1)
{
  NSString *v1;
  os_log_t v2;
  void *v3;
  id v4;

  v1 = NSStringFromClass(*(Class *)(a1 + 32));
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(v1));
  v2 = os_log_create("com.apple.email", (const char *)objc_msgSend(v4, "UTF8String"));
  v3 = (void *)qword_1005AA5C0;
  qword_1005AA5C0 = (uint64_t)v2;

}

void sub_1001DF0B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001DF5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

int64_t sub_1001DF6B8(id a1, EMMessageListItem *a2, EMMessageListItem *a3)
{
  EMMessageListItem *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[EMMessageListItem date](a2, "date"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[EMMessageListItem date](v4, "date"));
  v7 = objc_msgSend(v5, "compare:", v6);

  return (int64_t)v7;
}

void sub_1001DF724(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001DF7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)TransferMailboxPickerController;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_1001DF7D8(void *a1, int a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(_QWORD, _QWORD, _QWORD);
  void *v27;
  void *v28;

  if (!a1)
    return;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "view"));
  objc_msgSend(v4, "setUserInteractionEnabled:", 1);

  objc_msgSend(a1, "saveScrollOffset");
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "currentTransferContext"));
  v6 = (void *)v5;
  if (a2)
  {
    if (!v5)
    {
      v7 = objc_claimAutoreleasedReturnValue(+[TransferMailboxPickerController log](TransferMailboxPickerController, "log"));
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1003958BC(v7, v8, v9, v10, v11, v12, v13, v14);

    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "scene"));
    v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "daemonInterface"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject mailboxRepository](v16, "mailboxRepository"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "mailboxURLString"));
    objc_msgSend(v17, "recordFrecencyEventWithMailboxURLString:", v18);

LABEL_12:
    goto LABEL_13;
  }
  if (v5)
  {
    v16 = objc_claimAutoreleasedReturnValue(+[TransferMailboxPickerController log](TransferMailboxPickerController, "log"));
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_1003958F0(v16, v19, v20, v21, v22, v23, v24, v25);
    v15 = v6;
    v6 = 0;
    goto LABEL_12;
  }
LABEL_13:
  v26 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "didFinish"));
  if (v26)
  {
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "mailbox"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "messageListItems"));
    ((void (**)(_QWORD, void *, void *))v26)[2](v26, v27, v28);

  }
  objc_msgSend(a1, "setCurrentTransferContext:", 0);

}

void sub_1001DF968(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DFA04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DFAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001DFB74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001DFC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DFD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001DFE6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E0084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001E0250(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1001E0450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E07EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_1001E0888(id *a1, void *a2)
{
  id v3;
  MFMessageScreenshotConfiguration *v4;
  void *v5;
  void *v6;
  id WeakRetained;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  v4 = objc_alloc_init(MFMessageScreenshotConfiguration);
  -[MFMessageScreenshotConfiguration setSize:](v4, "setSize:", 320.0, 400.0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "view"));
  objc_msgSend(v5, "layoutMargins");
  -[MFMessageScreenshotConfiguration setMargins:](v4, "setMargins:");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "traitCollection"));
  -[MFMessageScreenshotConfiguration setTraitCollection:](v4, "setTraitCollection:", v6);

  -[MFMessageScreenshotConfiguration setShowSourceMailbox:](v4, "setShowSourceMailbox:", 1);
  -[MFMessageScreenshotConfiguration setShowBanners:](v4, "setShowBanners:", 0);
  WeakRetained = objc_loadWeakRetained(a1 + 5);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001E09F0;
  v8[3] = &unk_100523A00;
  objc_copyWeak(&v9, a1 + 6);
  objc_msgSend(WeakRetained, "generateScreenshotViewForMessage:configuration:completion:", v3, v4, v8);

  objc_destroyWeak(&v9);
}

void sub_1001E09B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  id *v4;

  objc_destroyWeak(v4);

  _Unwind_Resume(a1);
}

void sub_1001E09F0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;

  v3 = a2;
  if (v3)
  {
    v5 = v3;
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "setMessageThumbnailWithView:", v5);

    v3 = v5;
  }

}

void sub_1001E0A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E0DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_1001E0FDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E1058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E1194(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  TransferMailboxContext *v7;
  void *v8;
  TransferMailboxContext *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = a2;
  if (a1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mailboxProvider"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "mailboxFromLegacyMailbox:", v12));

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", a1[1]));
      v7 = [TransferMailboxContext alloc];
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "URLString"));
      v9 = -[TransferMailboxContext initWithMailbox:mailboxURLString:messageListItems:](v7, "initWithMailbox:mailboxURLString:messageListItems:", v5, v8, v6);
      objc_msgSend(a1, "setCurrentTransferContext:", v9);

      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "willTransferMessages"));
      v11 = (void *)v10;
      if (v10)
        (*(void (**)(uint64_t, void *, void *))(v10 + 16))(v10, v5, v6);

    }
  }

}

void sub_1001E12B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001E1810(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

id sub_1001E18D0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "messageAnimationDidStop");
}

void sub_1001E1B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  va_list va;

  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1001E1BA4(uint64_t a1)
{
  float v2;
  __int128 v3;
  _QWORD v5[4];
  __int128 v6;
  char v7;
  _QWORD v8[5];
  char v9;

  v2 = UIAnimationDragCoefficient(a1);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001E1C58;
  v8[3] = &unk_10051C6A8;
  v9 = *(_BYTE *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001E1CB4;
  v5[3] = &unk_100523A50;
  v7 = v9;
  v3 = *(_OWORD *)(a1 + 32);
  v8[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  return +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v8, v5, v2 * 0.1);
}

id sub_1001E1C58(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "frame");
  if (!*(_BYTE *)(a1 + 40))
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "setFrame:");
  return result;
}

void sub_1001E1CB4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;

  if (!*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 120), "removeFromSuperview");
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(v2 + 120);
    *(_QWORD *)(v2 + 120) = 0;

  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "frame");
  v4 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v4[4] = v5;
  v4[5] = v6;
  v4[6] = v7;
  v4[7] = v8;
  v9 = *(_QWORD **)(a1 + 32);
  v10 = (void *)v9[14];
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "view"));
  objc_msgSend(v10, "convertPoint:fromView:", v12, *(double *)(v11 + 32), *(double *)(v11 + 40));
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v15;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "setSeparatorStyle:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "setFrame:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 56));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88));
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(void **)(v16 + 88);
  *(_QWORD *)(v16 + 88) = 0;

  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(void **)(v18 + 112);
  *(_QWORD *)(v18 + 112) = 0;

  sub_1001DF7D8(*(void **)(a1 + 32), 1);
}

void sub_1001E1DD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_1001E1DE0(_QWORD *result)
{
  *(double *)(*(_QWORD *)(result[5] + 8) + 40) = *(double *)(*(_QWORD *)(result[5] + 8) + 40) + -5.0;
  *(double *)(*(_QWORD *)(result[5] + 8) + 56) = *(double *)(*(_QWORD *)(result[5] + 8) + 56) + 10.0;
  if (!*((_BYTE *)result + 48))
    return objc_msgSend(*(id *)(result[4] + 120), "setFrame:", *(double *)(*(_QWORD *)(result[5] + 8) + 32), *(double *)(*(_QWORD *)(result[5] + 8) + 40), *(double *)(*(_QWORD *)(result[5] + 8) + 48), *(double *)(*(_QWORD *)(result[5] + 8) + 56));
  return result;
}

void sub_1001E1EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001E1FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_1001E2120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001E21BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E2700(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1001E296C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E29C4(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v4 - 1;
  if (v4)
  {
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
      if (v5)
        v6 = 0;
      else
        v6 = *(void **)(a1 + 32);
      v7 = v6;
      objc_msgSend(*(id *)(a1 + 40), "_drawThumbnailInContext:view:frame:", objc_msgSend(v10, "CGContext"), v7, (double)v5 * 2.5, *(double *)(a1 + 56) - *(double *)(a1 + 64) - (double)v5 * 2.5, *(double *)(a1 + 72) - ((double)v5 * 2.5 + (double)v5 * 2.5), *(double *)(a1 + 64) - ((double)v5 * 2.5 + (double)v5 * 2.5));

      v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v9 = *(_QWORD *)(v8 + 24);
      *(_QWORD *)(v8 + 24) = v9 - 1;
    }
    while (v9);
  }

}

void sub_1001E2AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E2C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E3044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  _Unwind_Resume(a1);
}

NSString *__cdecl sub_1001E30F8(id a1, NSString *a2)
{
  return (NSString *)(id)objc_claimAutoreleasedReturnValue(+[NSString ef_stringByIsolatingDirectionalityForString:](NSString, "ef_stringByIsolatingDirectionalityForString:", a2));
}

void sub_1001E3364(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E36E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1001E3938(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E3C3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v9 = v6;

  _Unwind_Resume(a1);
}

void sub_1001E3D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001E3EDC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.mobilemail", "CollectionViewDynamicOffset");
  v2 = (void *)qword_1005AA5D0;
  qword_1005AA5D0 = (uint64_t)v1;

}

void sub_1001E42E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t sub_1001E4378(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  double MinY;
  BOOL v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v5 = a2;
  v6 = a3;
  objc_msgSend(v5, "frame");
  MinY = CGRectGetMinY(v13);
  objc_msgSend(v6, "frame");
  if (MinY <= CGRectGetMinY(v14))
  {
    objc_msgSend(v5, "frame");
    v10 = CGRectGetMinY(v15);
    objc_msgSend(v6, "frame");
    if (v10 >= CGRectGetMinY(v16))
    {
      v11 = 0;
      goto LABEL_9;
    }
    v8 = *(_BYTE *)(a1 + 32) == 0;
    v9 = 1;
  }
  else
  {
    v8 = *(_BYTE *)(a1 + 32) == 0;
    v9 = -1;
  }
  if (v8)
    v11 = v9;
  else
    v11 = -v9;
LABEL_9:

  return v11;
}

void sub_1001E4434(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E4730(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v2;

  _Unwind_Resume(a1);
}

void sub_1001E4934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E4B1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1001E4BD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E4D7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E4F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_1001E4F54(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v7 = a2;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v14;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v14 != v9)
          objc_enumerationMutation(v7);
        v11 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)v10);
        v12 = *(void **)(a1 + 32);
        if (a3)
          objc_msgSend(v12, "selectItemAtIndexPath:animated:scrollPosition:", v11, a4, 0);
        else
          objc_msgSend(v12, "deselectItemAtIndexPath:animated:", v11, a4, (_QWORD)v13);
        v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v8);
  }

}

void sub_1001E5070(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1001E5094(uint64_t a1)
{
  _QWORD v3[5];

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001E5118;
  v3[3] = &unk_10051AA98;
  v3[4] = *(_QWORD *)(a1 + 32);
  +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v3);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

id sub_1001E5118(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_1001E5120(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "isCancelled"))
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1001E516C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_1001E518C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1001E519C(uint64_t a1)
{

}

void sub_1001E5258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001E5454(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t sub_1001E54CC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_1001E55FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E57A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E59AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E5A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5CB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E5D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E5FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001E6020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E606C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E60BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E61E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001E6268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E6300(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E637C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E6448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1001E6568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1001E66B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v13 = v11;

  _Unwind_Resume(a1);
}

void sub_1001E677C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1001E6838(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1001E689C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E69A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E6A0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E6A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E6B10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E6C10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E6D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1001E6D5C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  char v14;

  v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001E6E58;
  v8[3] = &unk_100523C18;
  v13 = *(_BYTE *)(a1 + 56);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = *(id *)(a1 + 48);
  v14 = *(_BYTE *)(a1 + 57);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[EFScheduler mainThreadScheduler](EFScheduler, "mainThreadScheduler"));
  objc_msgSend(v7, "performBlock:", v8);

}

void sub_1001E6E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;

  v19 = v18;

  _Unwind_Resume(a1);
}

id sub_1001E6E58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  if (*(_BYTE *)(a1 + 64) || !objc_msgSend(*(id *)(a1 + 32), "count"))
    return _objc_msgSend(*(id *)(a1 + 40), "_showVIPSettingsFromSelectionTarget:item:animated:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 65));
  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(unsigned __int8 *)(a1 + 64);
  v5 = *(unsigned __int8 *)(a1 + 65);
  v7.receiver = *(id *)(a1 + 40);
  v7.super_class = (Class)VIPMailboxController;
  return objc_msgSendSuper2(&v7, "presentFromSelectionTarget:item:accessoryTapped:animated:", v2, v3, v4, v5);
}

void sub_1001E6F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_1001E6FB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1001E7044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1001E70FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_1001E7300()
{
  id result;

  sub_1001E7330();
  result = sub_1001E7394();
  qword_1005A35A8 = (uint64_t)result;
  return result;
}

unint64_t sub_1001E7330()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A3950;
  if (!qword_1005A3950)
  {
    v0 = objc_opt_self(EMDaemonInterface);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A3950);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_1001E7394()
{
  id v0;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1001EB4A0();
}

uint64_t *sub_1001E73C0()
{
  if (qword_1005A35A0 != -1)
    swift_once(&qword_1005A35A0, sub_1001E7300);
  return &qword_1005A35A8;
}

uint64_t sub_1001E7414()
{
  id v0;
  unint64_t v1;
  unint64_t v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (id)*sub_1001E73C0();
  v0 = v4;
  v6 = objc_msgSend(v4, "accountRepository");

  v5 = objc_msgSend(v6, "receivingAccounts");
  v1 = sub_1001E7520();
  static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v1);

  v7 = sub_10003A0C8(&qword_1005A3960);
  v2 = sub_1001E75C4();
  v8 = _ArrayProtocol.filter(_:)(sub_1001E7584, 0, v7, v2);

  return v8;
}

unint64_t sub_1001E7520()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A3958;
  if (!qword_1005A3958)
  {
    v0 = objc_opt_self(EMReceivingAccount);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A3958);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1001E7584(id *a1)
{
  return (objc_msgSend(*a1, "isLocalAccount") ^ 1) & 1;
}

unint64_t sub_1001E75C4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3968;
  if (!qword_1005A3968)
  {
    v0 = sub_1001E7634(&qword_1005A3960);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3968);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001E7634(uint64_t *a1)
{
  uint64_t TypeByMangledNameInContextInMetadataState2;
  uint64_t v4;

  v4 = *a1;
  if (*a1 < 0)
  {
    TypeByMangledNameInContextInMetadataState2 = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)*a1, -(*a1 >> 32), 0);
    *a1 = TypeByMangledNameInContextInMetadataState2;
    return TypeByMangledNameInContextInMetadataState2;
  }
  return v4;
}

uint64_t sub_1001E76A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  char *v15;
  Swift::String v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  const char *v25;
  uint64_t v26;
  __int16 v27;

  v22 = a1;
  v14 = "An email account";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v8 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v24 = (char *)&v7 - v8;
  v11 = 0;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v11);
  v18 = (uint64_t)&v7 - v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v11);
  v17 = (char *)&v7 - v10;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v11);
  v15 = (char *)&v7 - v12;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v19 = *(_QWORD *)(v21 - 8);
  v13 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v7 - v13;
  v20 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Account", 7uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v20 & 1);
  sub_1001E790C();
  sub_1001E7920(v18);
  v25 = v14;
  v26 = 16;
  v27 = 2;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, v16._countAndFlagsBits, v16._object, v17, v18, v14, 16, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v19 + 56))(v24, v20, v20, v21);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v23, v24);
}

uint64_t sub_1001E790C()
{
  return static Locale.current.getter();
}

uint64_t sub_1001E7920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;

  v3 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v1 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 8) + 104))(a1, v3);
}

uint64_t sub_1001E796C()
{
  uint64_t v1;

  v1 = type metadata accessor for Logger(0);
  sub_10003A134(v1, qword_1005A35B8);
  sub_10003A088(v1, (uint64_t)qword_1005A35B8);
  return sub_1001E79B4();
}

uint64_t sub_1001E79B4()
{
  return static Logger.mailUILogger<A>(for:)(&unk_100523DB0);
}

uint64_t sub_1001E79D8()
{
  uint64_t v0;

  if (qword_1005A35B0 != -1)
    swift_once(&qword_1005A35B0, sub_1001E796C);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005A35B8);
}

uint64_t sub_1001E7A38()
{
  return nullsub_9();
}

uint64_t sub_1001E7A50()
{
  uint64_t v1;

  if (qword_1005A35D0 != -1)
    swift_once(&qword_1005A35D0, sub_1001E7A38);
  return v1;
}

uint64_t sub_1001E7AA0()
{
  return sub_1001E7A50();
}

uint64_t sub_1001E7AB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v29 = a4;
  v23 = a1;
  v20 = a2;
  v19 = a3;
  v39 = 0;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v4 = sub_10003A0C8((uint64_t *)&unk_1005A7460);
  v17 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  v32 = (char *)&v16 - v17;
  v5 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v18 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  v31 = (char *)&v16 - v18;
  v27 = 0;
  v35 = type metadata accessor for LocalizedStringResource(0);
  v33 = *(_QWORD *)(v35 - 8);
  v21 = (*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v23);
  v30 = (char *)&v16 - v21;
  v22 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (void *)__chkstk_darwin(v6);
  v34 = (char *)&v16 - v22;
  v39 = (char *)&v16 - v22;
  v36 = v8;
  v37 = v9;
  v38 = v10;
  v11 = v8;
  v26 = objc_msgSend(v23, "name");
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v25 = v12;

  LocalizedStringResource.init(stringLiteral:)(v24, v25);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v34, v35);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  v28 = 1;
  v13(v31, 1, 1, v35);
  v14 = type metadata accessor for DisplayRepresentation.Image(v27);
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v14 - 8) + 56))(v32, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v30, v31, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v34, v35);
}

uint64_t sub_1001E7CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v9[7];

  v9[5] = a1;
  v9[6] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  swift_retain(a4);
  swift_bridgeObjectRetain(a2);
  v9[0] = a1;
  v9[1] = a2;
  EntityProperty.wrappedValue.setter(v9);
  swift_release(a4);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1001E7D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v9[7];

  v9[5] = a1;
  v9[6] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  swift_retain(a5);
  swift_bridgeObjectRetain(a2);
  v9[0] = a1;
  v9[1] = a2;
  EntityProperty.wrappedValue.setter(v9);
  swift_release(a5);
  return swift_bridgeObjectRelease(a2);
}

id sub_1001E7E10()
{
  id result;

  sub_1001E7330();
  result = sub_1001E7394();
  qword_1005A35E0 = (uint64_t)result;
  return result;
}

uint64_t *sub_1001E7E40()
{
  if (qword_1005A35D8 != -1)
    swift_once(&qword_1005A35D8, sub_1001E7E10);
  return &qword_1005A35E0;
}

void sub_1001E7E94()
{
  id v0;
  id v1;

  v1 = (id)*sub_1001E7E40();
  v0 = v1;
  qword_1005B9BB8 = (uint64_t)objc_msgSend(v1, "accountRepository");

}

uint64_t *sub_1001E7EE8()
{
  if (qword_1005A35E8 != -1)
    swift_once(&qword_1005A35E8, sub_1001E7E94);
  return &qword_1005B9BB8;
}

uint64_t sub_1001E7F3C(void *a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v10;
  id v11;
  _QWORD v12[2];
  _QWORD v13[4];

  v13[1] = a1;
  v13[2] = a2;
  v13[3] = a3;
  v3 = a1;
  v10 = objc_msgSend(a1, "objectID");

  v11 = objc_msgSend(v10, "representedObjectID");
  v13[0] = v11;
  v4 = sub_10003A0C8(&qword_1005A3AA0);
  if ((swift_dynamicCast(v12, v13, v4, &type metadata for String, 6) & 1) != 0)
  {
    v7 = v12[0];
    v8 = v12[1];
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  if (v8)
    return v7;
  else
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, 1)._countAndFlagsBits;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1001E80B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id *v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE **v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  const char *v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  Builtin::Word v75;
  const char *v76;
  int v77;
  int v78;
  int v79;
  char *v80;
  Swift::String v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _DWORD *v91;
  id v92;
  Builtin::Word v93;
  unint64_t v94;
  unint64_t v95;
  Builtin::Word *v96;
  uint32_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  NSObject *v109;
  int v110;
  uint64_t (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  Builtin::Word v116;
  _DWORD v117[11];
  unsigned __int16 v118;
  const char *v119;
  uint64_t v120;
  __int16 v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;

  v70 = "Display name";
  v76 = "Email address";
  v123 = 0;
  v124 = 0;
  v125 = 0;
  v122 = 0;
  v87 = 0;
  v63 = 0;
  v67 = 0;
  v90 = type metadata accessor for Logger(0);
  v88 = *(_QWORD *)(v90 - 8);
  v64 = (*(_QWORD *)(v88 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v85 = (char *)&v45 - v64;
  v65 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(v67);
  v83 = (uint64_t)&v45 - v65;
  v66 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v67);
  v82 = (char *)&v45 - v66;
  v68 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v67);
  v80 = (char *)&v45 - v68;
  v69 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v92);
  v84 = (char *)&v45 - v69;
  v122 = v4;
  v72 = sub_10003A0C8(&qword_1005A3AA8);
  v79 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DisplayName", 0xBuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v74 = "AppIntents";
  v75 = 10;
  v71 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v79 & 1);
  sub_1001E790C();
  sub_1001E7920(v83);
  v119 = v70;
  v93 = 12;
  v120 = 12;
  v77 = 2;
  v121 = 2;
  v78 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v80, v71._countAndFlagsBits, v71._object, v82, v83, v70, 12, 2);
  v73 = EntityProperty<>.init(title:)(v84);
  swift_retain(v73);
  swift_retain(v73);
  swift_retain(v73);
  v124 = v73;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("EmailAddress", v93, v79 & 1);
  String.LocalizationValue.init(stringLiteral:)(v6._countAndFlagsBits, v6._object);
  v81 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v74, v75, v79 & 1);
  sub_1001E790C();
  sub_1001E7920(v83);
  *(_QWORD *)&v117[7] = v76;
  *(_QWORD *)&v117[9] = 13;
  LOBYTE(v118) = v77;
  HIBYTE(v118) = v78 & 1 & v79;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v80, v81._countAndFlagsBits, v81._object, v82, v83, v76, 13, v118);
  v7 = EntityProperty<>.init(title:)(v84);
  v8 = v85;
  v86 = v7;
  swift_retain(v7);
  swift_retain(v86);
  swift_retain(v86);
  v125 = v86;
  v89 = sub_1001E79D8();
  v91 = &v117[1];
  v99 = 32;
  swift_beginAccess(v89);
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v8, v89, v90);
  swift_endAccess(v91);
  v9 = v92;
  v100 = 7;
  v101 = swift_allocObject(&unk_100523C70, 24, 7);
  *(_QWORD *)(v101 + 16) = v92;
  v109 = Logger.logObject.getter();
  v110 = static os_log_type_t.default.getter();
  v96 = &v116;
  v116 = v93;
  v94 = sub_1001EB1EC();
  v95 = sub_1001EB254();
  v10 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(v117, v96, &type metadata for UInt32, &type metadata for Int, v94, v95, v10);
  v97 = v117[0];
  v98 = 17;
  v11 = swift_allocObject(&unk_100523C98, 17, v100);
  v12 = v98;
  v13 = v100;
  v103 = v11;
  *(_BYTE *)(v11 + 16) = 64;
  v14 = swift_allocObject(&unk_100523CC0, v12, v13);
  v15 = v99;
  v16 = v100;
  v104 = v14;
  *(_BYTE *)(v14 + 16) = 8;
  v17 = swift_allocObject(&unk_100523CE8, v15, v16);
  v18 = v99;
  v19 = v100;
  v20 = v17;
  v21 = v101;
  v102 = v20;
  *(_QWORD *)(v20 + 16) = sub_1001E8E1C;
  *(_QWORD *)(v20 + 24) = v21;
  v22 = swift_allocObject(&unk_100523D10, v18, v19);
  v23 = v102;
  v106 = v22;
  *(_QWORD *)(v22 + 16) = sub_1001ED524;
  *(_QWORD *)(v22 + 24) = v23;
  v108 = sub_10003A0C8(qword_1005A5580);
  v105 = _allocateUninitializedArray<A>(_:)(3, v108);
  v107 = v24;
  swift_retain(v103);
  v25 = v104;
  v26 = v103;
  v27 = v107;
  *v107 = sub_1001ED4B8;
  v27[1] = v26;
  swift_retain(v25);
  v28 = v106;
  v29 = v104;
  v30 = v107;
  v107[2] = sub_1001ED4B8;
  v30[3] = v29;
  swift_retain(v28);
  v31 = v105;
  v32 = v106;
  v33 = v107;
  v107[4] = sub_1001ED6A8;
  v33[5] = v32;
  sub_10003CB20();
  swift_bridgeObjectRelease(v31);
  if (os_log_type_enabled(v109, (os_log_type_t)v110))
  {
    v34 = v63;
    v56 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v55 = sub_10003A0C8(&qword_1005A3AD0);
    v57 = sub_1001ED340(1, v55, v55);
    v58 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v59 = &v115;
    v115 = v56;
    v60 = &v114;
    v114 = v57;
    v61 = &v113;
    v113 = v58;
    sub_1001ED398(2, &v115);
    sub_1001ED398(1, v59);
    v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v112 = v103;
    sub_1001ED3AC(&v111, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61);
    v62 = v34;
    if (v34)
    {
      __break(1u);
    }
    else
    {
      v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v112 = v104;
      sub_1001ED3AC(&v111, (uint64_t)&v115, (uint64_t)&v114, (uint64_t)&v113);
      v54 = 0;
      v111 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
      v112 = v106;
      sub_1001ED3AC(&v111, (uint64_t)&v115, (uint64_t)&v114, (uint64_t)&v113);
      _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v110, "init with account %@", v56, v97);
      sub_1001ED3F0(v57, 1);
      sub_1001ED3F0(v58, 0);
      UnsafeMutablePointer.deallocate()();
      swift_release(v103);
      swift_release(v104);
      swift_release(v106);
    }
  }
  else
  {
    swift_release(v103);
    swift_release(v104);
    swift_release(v106);
  }

  (*(void (**)(char *, uint64_t))(v88 + 8))(v85, v90);
  v35 = v92;
  v36 = v92;
  v37 = v92;
  v38 = v92;
  v53 = &v123;
  v123 = v92;
  v39 = v92;
  swift_retain(v73);
  swift_retain(v86);
  swift_release(v86);
  swift_release(v73);

  v40 = v92;
  v48 = objc_msgSend(v92, "name");
  v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v47 = v41;

  sub_1001E7CE8(v46, v47, (uint64_t)v92, v73, v86);
  swift_release(v73);
  swift_release(v86);
  v42 = v92;
  swift_retain(v73);
  swift_retain(v86);
  swift_release(v86);
  swift_release(v73);

  v49 = objc_msgSend(v92, "identityEmailAddress");
  v52 = objc_msgSend(v49, "stringValue");
  v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v51 = v43;

  sub_1001E7D7C(v50, v51, (uint64_t)v92, v73, v86);
  swift_release(v73);
  swift_release(v86);
  v44 = v92;
  swift_retain(v73);
  swift_retain(v86);
  swift_release(v86);
  swift_release(v73);

  sub_1001ED6B4((uint64_t)v53);
}

void *sub_1001E8DBC(void *a1)
{
  id v1;

  v1 = a1;
  return a1;
}

uint64_t sub_1001E8DE0()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24, 7);
}

void *sub_1001E8E1C()
{
  uint64_t v0;

  return sub_1001E8DBC(*(void **)(v0 + 16));
}

uint64_t sub_1001E8E24(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = 0;
  v12 = 0;
  v17 = a1;
  v6 = sub_1001E7414();
  v16 = v6;
  swift_bridgeObjectRetain(v6);
  v15 = v6;
  swift_bridgeObjectRetain(a1);
  v11 = a1;
  v8 = sub_10003A0C8(&qword_1005A3960);
  v1 = sub_1001E75C4();
  v9 = _ArrayProtocol.filter(_:)(sub_1001ED6F4, v10, v8, v1);
  swift_bridgeObjectRelease(a1);
  v14 = v9;
  v13 = v9;
  v2 = sub_1001ED71C();
  v5 = sub_1001E919C((void (*)(char *, char *))sub_1001E914C, 0, v8, (uint64_t)&unk_100523DB0, (uint64_t)&type metadata for Never, v2, (uint64_t)&protocol witness table for Never, v4);
  v12 = v5;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v6);
  return v5;
}

uint64_t sub_1001E8F80(id *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  id v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  id v18;
  uint64_t v19;
  id v20;

  v20 = 0;
  v19 = 0;
  v15 = 0;
  v16 = 0;
  v20 = *a1;
  v19 = a2;
  v2 = v20;
  v12 = objc_msgSend(v20, "objectID");

  v13 = objc_msgSend(v12, "representedObjectID");
  v18 = v13;
  v3 = sub_10003A0C8(&qword_1005A3AA0);
  if ((swift_dynamicCast(v17, &v18, v3, &type metadata for String, 6) & 1) != 0)
  {
    v9 = v17[0];
    v10 = v17[1];
  }
  else
  {
    v9 = 0;
    v10 = 0;
  }
  if (v10)
  {
    v15 = v9;
    v16 = v10;
    v14[2] = a2;
    v14[0] = v9;
    v14[1] = v10;
    v6 = sub_10003A0C8(&qword_1005A4090);
    v4 = sub_1001F0ED4();
    v7 = Sequence<>.contains(_:)(v14, v6, v4, &protocol witness table for String);
    swift_bridgeObjectRelease(v10);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

id sub_1001E914C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = *a1;
  v2 = *a1;
  result = v6;
  sub_1001E80B8();
  *a2 = v6;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_1001E919C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v21;
  int v22;
  _QWORD v23[2];
  void (*v24)(char *, _QWORD);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  const char *v45;
  const char *v46;
  const char *v47;
  const char *v48;
  const char *v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t AssociatedTypeWitness;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  unint64_t v67;
  char *v68;
  Swift::Int v69;
  char v70;
  uint64_t v71;
  char v72;
  _QWORD v73[4];

  v38 = a1;
  v39 = a2;
  v62 = a3;
  v53 = a4;
  v40 = a5;
  v61 = a6;
  v43 = a8;
  v44 = "Fatal error";
  v45 = "Index out of bounds";
  v46 = "Swift/Collection.swift";
  v47 = "Range requires lowerBound <= upperBound";
  v48 = "Swift/Range.swift";
  v49 = "Index out of range";
  v73[3] = a3;
  v73[2] = a4;
  v73[1] = a5;
  v50 = *(_QWORD *)(a5 - 8);
  v51 = (*(_QWORD *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(a1);
  v52 = (char *)v23 - v51;
  v9 = *(_QWORD *)(v8 + 8);
  v54 = 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v9, v10, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v56 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v57 = (*(_QWORD *)(v56 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v54);
  v58 = (char *)v23 - v57;
  v59 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = __chkstk_darwin(v11);
  v60 = (char *)v23 - v59;
  v63 = swift_getAssociatedTypeWitness(v13, v14, v15, &protocol requirements base descriptor for Collection, &associated type descriptor for Collection.Index);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = (*(_QWORD *)(v64 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = __chkstk_darwin(v62);
  v66 = (char *)v23 - v65;
  v67 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  v18 = __chkstk_darwin(v16);
  v68 = (char *)v23 - v67;
  v69 = dispatch thunk of Collection.count.getter(v18);
  if (v69)
  {
    v73[0] = ContiguousArray.init()(v53);
    v37 = type metadata accessor for ContiguousArray(0, v53);
    ContiguousArray.reserveCapacity(_:)(v69);
    result = dispatch thunk of Collection.startIndex.getter(v62, v61);
    if (v69 >= 0)
    {
      v35 = 0;
      for (i = v42; ; i = v26)
      {
        v33 = i;
        v34 = v35;
        if (v35 == v69)
          goto LABEL_17;
        if (v34 < 0 || v34 >= v69)
          goto LABEL_16;
        v71 = v34;
        if (v69 < 0)
          goto LABEL_15;
        if (v34 >= v69)
          break;
        v32 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
          return result;
        }
        v72 = 0;
        v31 = v32;
LABEL_18:
        v30 = v31;
        if ((v72 & 1) != 0)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v66, v68, v63);
          _expectEnd<A>(of:is:)(v41, v66, v62, v61);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v63);
          v27 = v73[0];
          swift_retain(v73[0]);
          swift_release(v27);
          v28 = v27;
          v29 = v33;
          return v28;
        }
        v25 = &v70;
        v24 = (void (*)(char *, _QWORD))dispatch thunk of Collection.subscript.read();
        (*(void (**)(char *))(v56 + 16))(v58);
        v24(v25, 0);
        v21 = v33;
        v38(v58, v52);
        v26 = v21;
        if (v21)
        {
          (*(void (**)(char *, uint64_t))(v56 + 8))(v58, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v68, v63);
          sub_1001F0F44(v73);
          (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v43, v52, v40);
          return v23[1];
        }
        (*(void (**)(char *, uint64_t))(v56 + 8))(v58, AssociatedTypeWitness);
        ContiguousArray.append(_:)(v60, v37);
        dispatch thunk of Collection.formIndex(after:)(v68, v62, v61);
        result = v26;
        v35 = v30;
      }
      LOBYTE(v22) = 2;
      _assertionFailure(_:_:file:line:flags:)(v44, 11, 2, v45, 19, 2, v46, 22, v22, 714, 0);
      __break(1u);
LABEL_15:
      LOBYTE(v22) = 2;
      _assertionFailure(_:_:file:line:flags:)(v44, 11, 2, v47, 39, 2, v48, 17, v22, 754, 0);
      __break(1u);
LABEL_16:
      LOBYTE(v22) = 2;
      _fatalErrorMessage(_:_:file:line:flags:)(v44, 11, 2, v49, 18, 2, v48, 17, v22, 305, 0);
      __break(1u);
LABEL_17:
      v71 = 0;
      v72 = 1;
      v31 = v34;
      goto LABEL_18;
    }
    _assertionFailure(_:_:file:line:flags:)(v44, 11, 2, v47, 39, 2, v48, 17, 2, 754, 0);
    __break(1u);
  }
  v28 = static Array._allocateUninitialized(_:)(0, v53);
  v29 = v42;
  return v28;
}

uint64_t sub_1001E9988(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v16 = 0;
  v19 = a1;
  v20 = a2;
  v7 = sub_1001E7414();
  v18 = v7;
  swift_bridgeObjectRetain(v7);
  v17 = v7;
  swift_bridgeObjectRetain(a2);
  v13 = a1;
  v14 = a2;
  v10 = sub_10003A0C8(&qword_1005A3960);
  v2 = sub_1001E75C4();
  v11 = _ArrayProtocol.filter(_:)(sub_1001ED78C, v12, v10, v2);
  swift_bridgeObjectRelease(a2);
  v16 = v11;
  v15 = v11;
  v3 = sub_1001ED71C();
  v6 = sub_1001E919C((void (*)(char *, char *))sub_1001E914C, 0, v10, (uint64_t)&unk_100523DB0, (uint64_t)&type metadata for Never, v3, (uint64_t)&protocol witness table for Never, v5);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v7);
  return v6;
}

uint64_t sub_1001E9AF0(id *a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD v13[4];
  _BYTE v14[4];
  int v15;
  uint64_t v16;
  int v17;
  id v18;
  _BYTE *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  id v32;
  id v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _QWORD v37[2];
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  id v41;

  v29 = a2;
  v34 = a3;
  v41 = 0;
  v39 = 0;
  v40 = 0;
  v33 = *a1;
  v41 = v33;
  v39 = a2;
  v40 = a3;
  v3 = v33;
  v32 = objc_msgSend(v33, "name");
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  v28 = v4;

  v31 = v38;
  v38[0] = v27;
  v38[1] = v28;
  v30 = v37;
  v37[0] = v29;
  v37[1] = v34;
  v5 = sub_1001F0CD4();
  v35 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v37, &type metadata for String, &type metadata for String, v5);
  sub_1001F0D3C((uint64_t)v38);

  v6 = v33;
  swift_bridgeObjectRetain(v34);
  if ((v35 & 1) != 0)
  {
    v24 = 1;
    v25 = v26;
  }
  else
  {
    v18 = objc_msgSend(v33, "emailAddresses");
    v7 = sub_1001F0D64();
    v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v7);
    swift_bridgeObjectRetain(v34);
    v19 = v14;
    __chkstk_darwin(v14);
    v20 = v13;
    v13[2] = v29;
    v13[3] = v8;
    v21 = sub_10003A0C8(&qword_1005A4080);
    v9 = sub_1001F0DF4();
    v10 = v26;
    v11 = Sequence.contains(where:)(sub_1001F0DC8, v20, v21, v9);
    v22 = v10;
    v23 = v11;
    if (v10)
    {
      __break(1u);
    }
    else
    {
      v17 = v23;
      swift_bridgeObjectRelease(v34);
      sub_1001ED890(&v36);

      v24 = v17;
      v25 = v22;
    }
  }
  v16 = v25;
  v15 = v24;

  swift_bridgeObjectRelease(v34);
  return v15 & 1;
}

uint64_t sub_1001E9D3C(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v24 = 0;
  v22 = 0;
  v23 = 0;
  v24 = *a1;
  v22 = a2;
  v23 = a3;
  v17 = objc_msgSend(v24, "emailAddressValue");
  if (v17)
  {
    v10 = objc_msgSend(v17, "stringValue");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v12 = v3;

    v13 = v11;
    v14 = v12;
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a3);
  v20[0] = v13;
  v20[1] = v14;
  v20[2] = a2;
  v21 = a3;
  if (!v14)
  {
    if (!v21)
    {
      sub_1001F0D3C((uint64_t)v20);
      v9 = 1;
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  sub_1001F0E98(v20, &v18);
  if (!v21)
  {
    sub_1001F0D3C((uint64_t)&v18);
LABEL_11:
    sub_1001F0E64((uint64_t)v20);
    v9 = 0;
    goto LABEL_10;
  }
  v5 = v18;
  v7 = v19;
  swift_bridgeObjectRetain(v19);
  v6 = v21;
  swift_bridgeObjectRetain(v21);
  v8 = static String.== infix(_:_:)(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  sub_1001F0D3C((uint64_t)v20);
  v9 = v8;
LABEL_10:
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v14);
  return v9 & 1;
}

uint64_t sub_1001E9F80()
{
  return sub_1001E7AA0();
}

uint64_t sub_1001E9F94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1001E7F3C(*(void **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001E9FCC()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_1001E9FE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E76A8(a1);
}

uint64_t sub_1001E9FF4(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_1001ED7B8();
  return static AppEntity.defaultResolverSpecification.getter(a1, v1);
}

uint64_t sub_1001EA028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001E7AB4(*(void **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001EA048(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_1001ED824();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v1);
}

uint64_t sub_1001EA07C(uint64_t a1)
{
  _QWORD *v1;

  v1[9] = a1;
  v1[2] = v1;
  v1[3] = 0;
  v1[4] = 0;
  v1[6] = 0;
  v1[8] = 0;
  v1[3] = a1;
  return swift_task_switch(sub_1001EA0BC, 0);
}

uint64_t sub_1001EA0BC()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = v0[9];
  v0[2] = v0;
  v8 = sub_1001E7414();
  v0[4] = v8;
  swift_bridgeObjectRetain(v8);
  v0[5] = v8;
  swift_bridgeObjectRetain(v9);
  v10 = swift_task_alloc(32);
  *(_QWORD *)(v10 + 16) = v9;
  v11 = sub_10003A0C8(&qword_1005A3960);
  v1 = sub_1001E75C4();
  v12 = _ArrayProtocol.filter(_:)(sub_1001ED6F4, v10, v11, v1);
  v4 = v7[9];
  swift_task_dealloc(v10);
  swift_bridgeObjectRelease(v4);
  v7[6] = v12;
  v7[7] = v12;
  v2 = sub_1001ED71C();
  v6 = sub_1001E919C((void (*)(char *, char *))sub_1001E914C, 0, v11, (uint64_t)&unk_100523DB0, (uint64_t)&type metadata for Never, v2, (uint64_t)&protocol witness table for Never, v5);
  v7[8] = v6;
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v8);
  return (*(uint64_t (**)(uint64_t))(v7[2] + 8))(v6);
}

uint64_t sub_1001EA2B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[10] = a2;
  v2[9] = a1;
  v2[4] = v2;
  v2[2] = 0;
  v2[3] = 0;
  v2[5] = 0;
  v2[7] = 0;
  v2[2] = a1;
  v2[3] = a2;
  return swift_task_switch(sub_1001EA2F8, 0);
}

uint64_t sub_1001EA2F8()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = v0[10];
  v9 = v0[9];
  v0[4] = v0;
  v8 = sub_1001E7414();
  v0[5] = v8;
  swift_bridgeObjectRetain(v8);
  v0[6] = v8;
  swift_bridgeObjectRetain(v10);
  v11 = swift_task_alloc(32);
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = sub_10003A0C8(&qword_1005A3960);
  v1 = sub_1001E75C4();
  v13 = _ArrayProtocol.filter(_:)(sub_1001ED78C, v11, v12, v1);
  v4 = v7[10];
  swift_task_dealloc(v11);
  swift_bridgeObjectRelease(v4);
  v7[7] = v13;
  v7[8] = v13;
  v2 = sub_1001ED71C();
  v6 = sub_1001E919C((void (*)(char *, char *))sub_1001E914C, 0, v12, (uint64_t)&unk_100523DB0, (uint64_t)&type metadata for Never, v2, (uint64_t)&protocol witness table for Never, v5);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v8);
  return (*(uint64_t (**)(uint64_t))(v7[4] + 8))(v6);
}

uint64_t sub_1001EA4E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  return swift_task_switch(sub_1001EA504, 0);
}

uint64_t sub_1001EA504()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1001E7414();
  v4 = sub_10003A0C8(&qword_1005A3960);
  v1 = sub_1001ED71C();
  v6 = sub_1001E919C((void (*)(char *, char *))sub_1001E914C, 0, v4, (uint64_t)&unk_100523DB0, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v5);
  sub_1001ED890((_QWORD *)(v3 + 24));
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 8))(v6);
}

uint64_t sub_1001EA5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a1;
  v3[2] = v3;
  v4 = (_QWORD *)swift_task_alloc(dword_1005A3AFC);
  v3[4] = v4;
  *v4 = v3[2];
  v4[1] = sub_1001EA664;
  return sub_1001EA2B0(a2, a3);
}

_QWORD *sub_1001EA664(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(v3 + 16) = *v2;
  v7 = v3 + 16;
  v8 = (_QWORD *)(v3 + 16);
  swift_task_dealloc(v4);
  if (!v1)
    **(_QWORD **)(v7 + 8) = a1;
  return (*(_QWORD *(**)(_QWORD *__return_ptr))(*v8 + 8))(v8);
}

uint64_t sub_1001EA710(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A3AF4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = *(_QWORD *)(v1 + 16);
  v2[1] = sub_1001EA784;
  return sub_1001EA07C(a1);
}

_QWORD *sub_1001EA784(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 24);
  *(_QWORD *)(v3 + 16) = *v2;
  v8 = (_QWORD *)(v3 + 16);
  v5 = swift_task_dealloc(v4);
  if (v1)
    return (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(*v8 + 8))(v8, v5);
  else
    return (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(*v8 + 8))(v8, a1);
}

uint64_t sub_1001EA81C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1[3] = a1;
  v1[2] = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A3B04);
  v1[4] = v2;
  *v2 = v1[2];
  v2[1] = sub_1001EA664;
  return sub_1001EA4E4();
}

uint64_t sub_1001EA88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v6;

  v6 = v2;
  *(_QWORD *)(v2 + 16) = v2;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v6 + 24) = v3;
  v4 = sub_1001ED8B8();
  *v3 = *(_QWORD *)(v6 + 16);
  v3[1] = sub_1001EA914;
  return EntityQuery.results()(a1, a2, v4);
}

_QWORD *sub_1001EA914()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 24);
  *(_QWORD *)(v1 + 16) = *v0;
  v4 = (_QWORD *)(v1 + 16);
  swift_task_dealloc(v2);
  return (*(_QWORD *(**)(_QWORD *__return_ptr))(*v4 + 8))(v4);
}

uint64_t sub_1001EA9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 16) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to DynamicOptionsProvider.defaultResult()[1]);
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = *(_QWORD *)(v3 + 16);
  v4[1] = sub_1001EAA28;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_1001EAA28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *(_QWORD *)(*v0 + 24);
  *(_QWORD *)(*v0 + 16) = *v0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 16) + 8))();
}

uint64_t sub_1001EAA88()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter() & 1;
}

uint64_t sub_1001EAAA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = 0;
  return swift_task_switch(sub_1001EAAC4, 0);
}

uint64_t sub_1001EAAC4()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0[2] = v0;
  v4 = sub_1001E7414();
  v0[3] = v4;
  v0[4] = v4;
  v5 = sub_10003A0C8(&qword_1005A3960);
  v1 = sub_1001ED71C();
  v7 = sub_1001E919C((void (*)(char *, char *))sub_1001E914C, 0, v5, (uint64_t)&unk_100523DB0, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v6);
  swift_bridgeObjectRelease(v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 16) + 8))(v7);
}

uint64_t sub_1001EABC0()
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1001EABE0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1[3] = a1;
  v1[2] = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A3B3C);
  v1[4] = v2;
  *v2 = v1[2];
  v2[1] = sub_1001EA664;
  return sub_1001EAAA0();
}

uint64_t sub_1001EAC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.EntitySchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9BC0;
  sub_10003A134(v8, qword_1005B9BC0);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1001EAD54();
  sub_1001EAE24();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_1001EAD54()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.Mail", 0xEuLL, 1);
  return AssistantSchema.EntitySchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_1001EAE24()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("MailAccountEntity", 0x11uLL, 1);
  return AssistantSchema.EntitySchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_1001EAEF8()
{
  uint64_t v0;

  if (qword_1005A35F0 != -1)
    swift_once(&qword_1005A35F0, sub_1001EAC50);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9BC0);
}

uint64_t sub_1001EAF58()
{
  return static AssistantSchemaEntity.isAssistantOnly.getter() & 1;
}

uint64_t variable initialization expression of ConversationNavigationBarItemsManager.delegate()
{
  return 0;
}

uint64_t variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem()
{
  return 0;
}

uint64_t variable initialization expression of ConversationNavigationBarItemsManager.$__lazy_storage_$_composeButtonItem()
{
  return 1;
}

id variable initialization expression of GeneratedSummaryViewCell.summaryView()
{
  type metadata accessor for ManualSummaryView(0);
  return sub_1001E7394();
}

double variable initialization expression of InstantAnswerFlightContentView._departureTimeWidth()
{
  return 0.0;
}

uint64_t variable initialization expression of InstantAnswerFlightContentView._sizeCategory()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_1004C9C18);
  return Environment.init(_:)(KeyPath);
}

uint64_t sub_1001EAFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  v11 = a2;
  v8 = a1;
  v6[1] = 0;
  v13 = type metadata accessor for ContentSizeCategory();
  v10 = *(_QWORD *)(v13 - 8);
  v7 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v12 = (char *)v6 - v7;
  v15 = type metadata accessor for EnvironmentValues(v2);
  v14 = *(_QWORD *)(v15 - 8);
  v9 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v15);
  v16 = (char *)v6 - v9;
  v4 = (*(uint64_t (**)(char *))(v3 + 16))((char *)v6 - v9);
  EnvironmentValues.sizeCategory.getter(v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v11, v12, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v15);
}

uint64_t sub_1001EB0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];
  unint64_t v5;
  char *v6;

  v4[1] = a1;
  v1 = type metadata accessor for ContentSizeCategory(0);
  v5 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v6 = (char *)v4 - v5;
  (*(void (**)(void))(v2 + 16))();
  return EnvironmentValues.sizeCategory.setter(v6);
}

double variable initialization expression of InstantAnswerFlightContentView._departureAirportSize()
{
  return sub_100234CE0(0);
}

double variable initialization expression of InstantAnswerFlightContentView.horizontalPadding()
{
  return 8.0;
}

uint64_t variable initialization expression of InstantAnswerView.State._$observationRegistrar()
{
  return ObservationRegistrar.init()();
}

uint64_t variable initialization expression of InstantAnswerView._colorScheme()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_1004C9C48);
  return Environment.init(_:)(KeyPath);
}

double variable initialization expression of InstantAnswerView.backgroundCornerRadius()
{
  return 11.0;
}

unint64_t sub_1001EB1EC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3AB0;
  if (!qword_1005A3AB0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3AB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EB254()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5570;
  if (!qword_1005A5570)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5570);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EB2BC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3AC0;
  if (!qword_1005A3AC0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3AC0);
    return WitnessTable;
  }
  return v2;
}

id variable initialization expression of SearchPreparingView.explanationLabel()
{
  sub_1001ED94C();
  return sub_1001E7394();
}

void sub_1001EB34C(char a1)
{
  sub_1001EB370(a1 & 1);
}

void sub_1001EB370(char a1)
{
  void *v1;
  id v2;

  v2 = v1;
  objc_msgSend(v1, "setFiltersEnabled:", a1 & 1);

}

void sub_1001EB3B8()
{
  sub_1001EB3D8();
}

void sub_1001EB3D8()
{
  void *v0;
  id v1;

  v1 = v0;
  objc_msgSend(v0, "toggleFilters");

}

double variable initialization expression of QuickReplyView.buttonHeightWidth()
{
  return 44.0;
}

double variable initialization expression of QuickReplyView.defaultHorizontalMargin()
{
  return 24.0;
}

double variable initialization expression of QuickReplyView.horizontalInsetFromLayoutMargin()
{
  return 7.0;
}

double variable initialization expression of QuickReplyView.additionalHorizontalInset()
{
  return 2.0;
}

uint64_t variable initialization expression of SearchCollectionViewDataSource.$__lazy_storage_$_viewModel@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = type metadata accessor for GroupedSearchItems.SectionCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(a1, 1);
}

id variable initialization expression of SearchPreparingView.stackView()
{
  sub_1001ED9B0();
  return sub_1001E7394();
}

id sub_1001EB4A0()
{
  void *v0;

  return objc_msgSend(v0, "init");
}

uint64_t sub_1001EB4C0(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0AAC();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EB4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0AAC();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EB540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0AAC();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EB58C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F0AAC();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EB5D4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0B8C();
  v1 = sub_1001F0BFC();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EB60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0B8C();
  v3 = sub_1001F0BFC();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EB654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0B8C();
  v3 = sub_1001F0BFC();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EB6A0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F0B8C();
  v2 = sub_1001F0BFC();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EB6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001EF960();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

void sub_1001EB730(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  sub_1001EB768();
  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = v2 & 1;
}

void sub_1001EB78C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  ConversationNavigationBarItemType.rawValue.getter();
  *a1 = v1;
}

uint64_t sub_1001EB7D4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F04A4();
  v1 = sub_1001F0514();
  return OptionSet<>.init()(a1, v3, v1);
}

uint64_t sub_1001EB814(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F04A4();
  return OptionSet<>.contains(_:)(a1, a2, v2) & 1;
}

uint64_t sub_1001EB84C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F04A4();
  return OptionSet.union(_:)(a1, a2, v2);
}

uint64_t sub_1001EB888(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F04A4();
  return OptionSet.intersection(_:)(a1, a2, v2);
}

uint64_t sub_1001EB8C4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F04A4();
  return OptionSet.symmetricDifference(_:)(a1, a2, v2);
}

uint64_t sub_1001EB900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F04A4();
  return OptionSet<>.insert(_:)(a1, a2, a3, v3) & 1;
}

uint64_t sub_1001EB940(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F04A4();
  return OptionSet<>.remove(_:)(a1, a2, v2);
}

uint64_t sub_1001EB97C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F04A4();
  return OptionSet<>.update(with:)(a1, a2, v2);
}

uint64_t sub_1001EB9B8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F04A4();
  v2 = sub_1001F0514();
  return OptionSet<>.formUnion(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EB9F8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F04A4();
  v2 = sub_1001F0514();
  return OptionSet<>.formIntersection(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EBA38(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F04A4();
  v2 = sub_1001F0514();
  return OptionSet<>.formSymmetricDifference(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EBA78()
{
  return SetAlgebra.subtracting(_:)();
}

uint64_t sub_1001EBA8C()
{
  return SetAlgebra.isSubset(of:)() & 1;
}

uint64_t sub_1001EBAA4()
{
  return SetAlgebra.isDisjoint(with:)() & 1;
}

uint64_t sub_1001EBABC()
{
  return SetAlgebra.isSuperset(of:)() & 1;
}

uint64_t sub_1001EBAD4()
{
  return SetAlgebra.isEmpty.getter() & 1;
}

uint64_t sub_1001EBAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_1001EBB24()
{
  return SetAlgebra.subtract(_:)();
}

uint64_t sub_1001EBB38(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F057C();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001EBB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F057C();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EBBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F057C();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EBBFC(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F057C();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EBC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F057C();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EBC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F057C();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EBCC8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F057C();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EBD10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = nullsub_9(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1001EBD4C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = nullsub_9(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1001EBD78(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0814();
  v1 = sub_1001F0884();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EBDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0814();
  v3 = sub_1001F0884();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EBDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0814();
  v3 = sub_1001F0884();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EBE44(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F0814();
  v2 = sub_1001F0884();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EBE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001EF7D4();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for Int) & 1;
}

uint64_t sub_1001EBED4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_10000C488();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EBF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_10000C488();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EBF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_10000C488();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EBFA0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_10000C488();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

NSString sub_1001EBFE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  NSString result;

  result = sub_1001EC01C(*a1, a1[1]);
  *a2 = result;
  return result;
}

NSString sub_1001EC01C(uint64_t a1, uint64_t a2)
{
  id v2;
  NSString v5;

  swift_bridgeObjectRetain(a2);
  v5 = String._bridgeToObjectiveC()();
  v2 = v5;
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a2);

  return v5;
}

uint64_t sub_1001EC074(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_10000C488();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001EC0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10000C488();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EC0F4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F15F8();
  v1 = sub_1001F0514();
  return OptionSet<>.init()(a1, v3, v1);
}

uint64_t sub_1001EC134(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F15F8();
  return OptionSet<>.contains(_:)(a1, a2, v2) & 1;
}

uint64_t sub_1001EC16C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F15F8();
  return OptionSet.union(_:)(a1, a2, v2);
}

uint64_t sub_1001EC1A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F15F8();
  return OptionSet.intersection(_:)(a1, a2, v2);
}

uint64_t sub_1001EC1E4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F15F8();
  return OptionSet.symmetricDifference(_:)(a1, a2, v2);
}

uint64_t sub_1001EC220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F15F8();
  return OptionSet<>.insert(_:)(a1, a2, a3, v3) & 1;
}

uint64_t sub_1001EC260(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F15F8();
  return OptionSet<>.remove(_:)(a1, a2, v2);
}

uint64_t sub_1001EC29C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F15F8();
  return OptionSet<>.update(with:)(a1, a2, v2);
}

uint64_t sub_1001EC2D8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F15F8();
  v2 = sub_1001F0514();
  return OptionSet<>.formUnion(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC318(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F15F8();
  v2 = sub_1001F0514();
  return OptionSet<>.formIntersection(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC358(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F15F8();
  v2 = sub_1001F0514();
  return OptionSet<>.formSymmetricDifference(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC398(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F095C();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001EC3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F095C();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EC418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F095C();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EC45C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F095C();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EC494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F095C();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EC4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F095C();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EC528(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F095C();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC570(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F1588();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EC5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F1588();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EC5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F1588();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EC63C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F1588();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC684(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F1588();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001EC6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F1588();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EC704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F1588();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001EC748(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0734();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EC780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0734();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EC7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F0734();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EC814(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F0734();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC85C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F05EC();
  v1 = sub_1001F065C();
  return _SwiftNewtypeWrapper<>._bridgeToObjectiveC()(a1, v3, v1);
}

uint64_t sub_1001EC894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F05EC();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3);
}

uint64_t sub_1001EC8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;

  v7 = sub_1001F05EC();
  v3 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._conditionallyBridgeFromObjectiveC(_:result:)(a1, a2, a3, v7, v3) & 1;
}

uint64_t sub_1001EC928(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v5;

  v5 = sub_1001F05EC();
  v2 = sub_1001F065C();
  return static _SwiftNewtypeWrapper<>._unconditionallyBridgeFromObjectiveC(_:)(a1, a2, v5, v2);
}

uint64_t sub_1001EC970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001EFAEC();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for UInt) & 1;
}

uint64_t sub_1001EC9B8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001EFB70();
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, v2);
}

uint64_t sub_1001EC9F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = nullsub_9(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001ECA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001EFBF4();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

uint64_t sub_1001ECA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F1308();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for UInt) & 1;
}

uint64_t sub_1001ECAB0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F138C();
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, v2);
}

uint64_t sub_1001ECAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001EFCFC();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

uint64_t sub_1001ECB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F1200();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

uint64_t sub_1001ECB7C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0B1C();
  v1 = sub_1001F0AAC();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECBC4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0C64();
  v1 = sub_1001F0B8C();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for Int);
}

uint64_t sub_1001ECC20(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F0A3C();
  v1 = sub_1001F057C();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v3;

  result = nullsub_9(a1);
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_1001ECCA4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int v3;

  result = nullsub_9(a1);
  *a2 = v3;
  return result;
}

uint64_t sub_1001ECCD0(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F08EC();
  v1 = sub_1001F0814();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for Float);
}

uint64_t sub_1001ECD2C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_10003CF68();
  v1 = sub_10000C488();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECD74(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F09CC();
  v1 = sub_1001F095C();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECDBC(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F1668();
  v1 = sub_1001F1588();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECE04(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F07A4();
  v1 = sub_1001F0734();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECE4C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_1001F06C4();
  v1 = sub_1001F05EC();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v1, &protocol witness table for String);
}

uint64_t sub_1001ECE94(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F0AAC();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001ECED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0AAC();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001ECF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0AAC();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001ECF58(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F0B8C();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for Int);
}

uint64_t sub_1001ECF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0B8C();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1001ECFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0B8C();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1001ED01C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F0814();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for Float);
}

uint64_t sub_1001ED058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0814();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for Float);
}

uint64_t sub_1001ED09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0814();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for Float);
}

uint64_t sub_1001ED0E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F0734();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001ED11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0734();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001ED160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0734();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001ED1A4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F05EC();
  return _SwiftNewtypeWrapper<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_1001ED1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F05EC();
  return _SwiftNewtypeWrapper<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001ED224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F05EC();
  return _SwiftNewtypeWrapper<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_1001ED268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001EFE88();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for Float) & 1;
}

uint64_t sub_1001ED2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F0014();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

uint64_t sub_1001ED2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F01A0();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

uint64_t sub_1001ED340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
    return static UnsafeMutablePointer.allocate(capacity:)(a1, a3);
  else
    return 0;
}

uint64_t sub_1001ED398(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1001ED3AC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1001ED3F0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    UnsafeMutablePointer.deinitialize(count:)(a2);
    UnsafeMutablePointer.deallocate()();
  }
}

uint64_t sub_1001ED45C(uint64_t (*a1)(void))
{
  return a1();
}

_BYTE **sub_1001ED47C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1001ED490()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE **sub_1001ED4B8(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001ED47C(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1001ED4C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001ED4E8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001ED524()
{
  uint64_t v0;

  return sub_1001ED45C(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1001ED530(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  _QWORD *v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v7 = (id)a4();
  v8 = *a1;
  v9 = *a1 + 8;
  if (v7)
  {
    v10 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v8, v9);
  }
  else
  {
    v11 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8, v9);
  }
  *a1 = v8 + 8;
  v4 = *a2;
  if (*a2)
  {
    *v4 = v7;
    *a2 = v4 + 1;
  }
  else
  {

  }
}

uint64_t sub_1001ED66C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

void sub_1001ED6A8(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001ED530(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1001ED6B4(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_1001ED6F4(id *a1)
{
  uint64_t v1;

  return sub_1001E8F80(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_1001ED71C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3AD8;
  if (!qword_1005A3AD8)
  {
    v0 = sub_1001E7634(&qword_1005A3960);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3AD8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001ED78C(id *a1)
{
  uint64_t v1;

  return sub_1001E9AF0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

unint64_t sub_1001ED7B8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3AE0;
  if (!qword_1005A3AE0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9C78, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3AE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001ED824()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3AE8;
  if (!qword_1005A3AE8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9E18, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3AE8);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1001ED890(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
}

unint64_t sub_1001ED8B8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3B28;
  if (!qword_1005A3B28)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9EA0, &unk_100523DE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3B28);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001ED924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100271AF4(a1, a2);
}

uint64_t sub_1001ED938(uint64_t a1)
{
  return sub_100271C10(a1);
}

unint64_t sub_1001ED94C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A8560[0];
  if (!qword_1005A8560[0])
  {
    v0 = objc_opt_self(UILabel);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, qword_1005A8560);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_1001ED9B0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A3C80;
  if (!qword_1005A3C80)
  {
    v0 = objc_opt_self(UIStackView);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A3C80);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_1001EDA14()
{
  return sub_1001EDA28();
}

unint64_t sub_1001EDA28()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3C88;
  if (!qword_1005A3C88)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9CD0, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3C88);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDA94()
{
  return sub_1001EDAA8();
}

unint64_t sub_1001EDAA8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3C90;
  if (!qword_1005A3C90)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9D08, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3C90);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDB14()
{
  return sub_1001EDB28();
}

unint64_t sub_1001EDB28()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3C98;
  if (!qword_1005A3C98)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9D38, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3C98);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDB94()
{
  return sub_1001ED8B8();
}

void *sub_1001EDBA8()
{
  return &protocol witness table for String;
}

unint64_t sub_1001EDBB4()
{
  return sub_1001EDBC8();
}

unint64_t sub_1001EDBC8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CA0;
  if (!qword_1005A3CA0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9D70, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDC34()
{
  return sub_1001EDC48();
}

unint64_t sub_1001EDC48()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CA8;
  if (!qword_1005A3CA8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9D98, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CA8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDCB4()
{
  return sub_1001EDCC8();
}

unint64_t sub_1001EDCC8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CB0;
  if (!qword_1005A3CB0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9DC0, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CB0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDD34()
{
  return sub_1001ED824();
}

void *sub_1001EDD48()
{
  return &protocol witness table for String;
}

unint64_t sub_1001EDD54()
{
  return sub_1001EDD68();
}

unint64_t sub_1001EDD68()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3CB8;
  if (!qword_1005A3CB8)
  {
    v0 = sub_1001E7634(&qword_1005A3CC0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CB8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EDDD8()
{
  return sub_1001EDDEC();
}

unint64_t sub_1001EDDEC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CC8;
  if (!qword_1005A3CC8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9E48, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CC8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDE58()
{
  return sub_1001EDE6C();
}

unint64_t sub_1001EDE6C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CD0;
  if (!qword_1005A3CD0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9EF8, &unk_100523DE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CD0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDED8()
{
  return sub_1001EDEEC();
}

unint64_t sub_1001EDEEC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CD8;
  if (!qword_1005A3CD8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9F58, &unk_100523DE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CD8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDF58()
{
  return sub_1001ED7B8();
}

unint64_t sub_1001EDF6C()
{
  return sub_1001EDF80();
}

unint64_t sub_1001EDF80()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CE0;
  if (!qword_1005A3CE0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9F80, &unk_100523DE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EDFEC()
{
  return sub_1001EE000();
}

unint64_t sub_1001EE000()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A3CE8;
  if (!qword_1005A3CE8)
  {
    v2 = sub_1001E7634(&qword_1005A3CF0);
    sub_1001EDCC8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CE8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EE07C()
{
  return sub_1001EE090();
}

unint64_t sub_1001EE090()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3CF8;
  if (!qword_1005A3CF8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004C9FFC, &unk_100523E00);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3CF8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001EE0FC()
{
  return sub_1001EE110();
}

unint64_t sub_1001EE110()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3D00;
  if (!qword_1005A3D00)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CA048, &unk_100523DB0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3D00);
    return WitnessTable;
  }
  return v2;
}

void *type metadata accessor for AccountsProvider()
{
  return &unk_100523D38;
}

_QWORD *sub_1001EE190(_QWORD *a1, uint64_t a2)
{
  id v2;
  _QWORD *result;
  id v4;
  uint64_t v5;
  uint64_t v8;

  v4 = *(id *)a2;
  v2 = *(id *)a2;
  *a1 = v4;
  v5 = *(_QWORD *)(a2 + 8);
  swift_retain(v5);
  a1[1] = v5;
  v8 = *(_QWORD *)(a2 + 16);
  swift_retain(v8);
  result = a1;
  a1[2] = v8;
  return result;
}

uint64_t sub_1001EE200(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t sub_1001EE23C(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v7 = *(id *)a2;
  v2 = *(id *)a2;
  v3 = *(void **)a1;
  *(_QWORD *)a1 = v7;

  v8 = *(_QWORD *)(a2 + 8);
  swift_retain(v8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_release(v4);
  v10 = *(_QWORD *)(a2 + 16);
  swift_retain(v10);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_release(v5);
  return a1;
}

__n128 sub_1001EE2C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  return result;
}

uint64_t sub_1001EE2DC(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_release(v3);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release(v4);
  return a1;
}

uint64_t sub_1001EE344(uint64_t a1, int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (!HIDWORD(*(_QWORD *)a1))
        v3 = *(_QWORD *)a1;
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1001EE45C(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_QWORD *)result = a2 + 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 24) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 24) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)result = a2 - 1;
  }
  return result;
}

void *type metadata accessor for AccountEntity()
{
  return &unk_100523DB0;
}

void *type metadata accessor for AccountEntityQuery()
{
  return &unk_100523DE0;
}

void *type metadata accessor for MailAccountOptionsProvider()
{
  return &unk_100523E00;
}

uint64_t type metadata accessor for AnimationCurve(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E28;
  if (!qword_1005A3E28)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100523F38);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E28);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for Region(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E30;
  if (!qword_1005A3E30)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100523F58);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E30);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for MUIIntelligenceLightEffect(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E38;
  if (!qword_1005A3E38)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100523F78);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E38);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for MFMailMessageState(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E40;
  if (!qword_1005A3E40)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100523F98);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E40);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for MFMailMessageField(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E48;
  if (!qword_1005A3E48)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100523FC0);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E48);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for UILayoutPriority(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E50;
  if (!qword_1005A3E50)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100523FE8);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E50);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for EMMessageSnippetHintZone(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E58;
  if (!qword_1005A3E58)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524010);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E58);
      return v2;
    }
  }
  return v5;
}

uint64_t initializeBufferWithCopyOfBuffer for InstantAnswerView.Model.Airport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = *a2;
  swift_retain(*a2);
  *a1 = v4;
  return *a1 + 16;
}

__n128 initializeWithTake for InstantAnswerView.Model.Airport(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1001EEB50(uint64_t a1, int a2)
{
  int v3;

  if (a2)
  {
    if (*(_BYTE *)(a1 + 32))
      v3 = *(_QWORD *)a1;
    else
      v3 = -1;
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1001EEC78(uint64_t result, int a2, int a3)
{
  _BOOL4 v3;

  v3 = a3 != 0;
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    if (a3)
    {
      if (v3)
        *(_BYTE *)(result + 32) = 1;
      else
        __break(1u);
    }
  }
  else if (a3)
  {
    if (v3)
      *(_BYTE *)(result + 32) = 0;
    else
      __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CGRect(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E60;
  if (!qword_1005A3E60)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524090);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E60);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for EMSmartMailboxType(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E68;
  if (!qword_1005A3E68)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005240B8);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E68);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E70;
  if (!qword_1005A3E70)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005240D8);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E70);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for FavoritesDictionaryRepresentationKey(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E78;
  if (!qword_1005A3E78)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005240F8);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E78);
      return v2;
    }
  }
  return v5;
}

__n128 sub_1001EF0E0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1001EF0EC(uint64_t a1, int a2)
{
  int v3;

  if (a2)
  {
    if (*(_BYTE *)(a1 + 16))
      v3 = *(_OWORD *)a1;
    else
      v3 = -1;
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1001EF218(uint64_t result, int a2, int a3)
{
  _BOOL4 v3;

  v3 = a3 != 0;
  if (a2)
  {
    *(_OWORD *)result = (a2 - 1);
    if (a3)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else if (a3)
  {
    if (v3)
      *(_BYTE *)(result + 16) = 0;
    else
      __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CGSize(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E80;
  if (!qword_1005A3E80)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524178);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E80);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for ComparisonResult(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E88;
  if (!qword_1005A3E88)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005241A0);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E88);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for AutoresizingMask(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E90;
  if (!qword_1005A3E90)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005241C0);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E90);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for MailComposeType(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3E98;
  if (!qword_1005A3E98)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005241E8);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3E98);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3EA0;
  if (!qword_1005A3EA0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524208);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3EA0);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for ECMailboxType(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A3EA8;
  if (!qword_1005A3EA8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524230);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A3EA8);
      return v2;
    }
  }
  return v5;
}

unint64_t sub_1001EF7C0()
{
  return sub_1001EF7D4();
}

unint64_t sub_1001EF7D4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EB0;
  if (!qword_1005A3EB0)
  {
    v0 = type metadata accessor for ECMailboxType(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA338, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EB0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EF844()
{
  return sub_1001EF858();
}

unint64_t sub_1001EF858()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EB8;
  if (!qword_1005A3EB8)
  {
    v0 = type metadata accessor for ECMailboxType(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA30C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EB8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EF8C8()
{
  return sub_1001EF8DC();
}

unint64_t sub_1001EF8DC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EC0;
  if (!qword_1005A3EC0)
  {
    v0 = type metadata accessor for ECMailboxType(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAC80, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EC0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EF94C()
{
  return sub_1001EF960();
}

unint64_t sub_1001EF960()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EC8;
  if (!qword_1005A3EC8)
  {
    v0 = type metadata accessor for UIContentSizeCategory(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA470, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EC8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EF9D0()
{
  return sub_1001EF9E4();
}

unint64_t sub_1001EF9E4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3ED0;
  if (!qword_1005A3ED0)
  {
    v0 = type metadata accessor for UIContentSizeCategory(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA444, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3ED0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFA54()
{
  return sub_1001EFA68();
}

unint64_t sub_1001EFA68()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3ED8;
  if (!qword_1005A3ED8)
  {
    v0 = type metadata accessor for UIContentSizeCategory(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAE68, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3ED8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFAD8()
{
  return sub_1001EFAEC();
}

unint64_t sub_1001EFAEC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EE0;
  if (!qword_1005A3EE0)
  {
    v0 = type metadata accessor for AutoresizingMask(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA5D0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EE0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFB5C()
{
  return sub_1001EFB70();
}

unint64_t sub_1001EFB70()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EE8;
  if (!qword_1005A3EE8)
  {
    v0 = type metadata accessor for AutoresizingMask(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAD64, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EE8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFBE0()
{
  return sub_1001EFBF4();
}

unint64_t sub_1001EFBF4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EF0;
  if (!qword_1005A3EF0)
  {
    v0 = type metadata accessor for FavoritesDictionaryRepresentationKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA670, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EF0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFC64()
{
  return sub_1001EFC78();
}

unint64_t sub_1001EFC78()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3EF8;
  if (!qword_1005A3EF8)
  {
    v0 = type metadata accessor for FavoritesDictionaryRepresentationKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA648, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3EF8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFCE8()
{
  return sub_1001EFCFC();
}

unint64_t sub_1001EFCFC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F00;
  if (!qword_1005A3F00)
  {
    v0 = type metadata accessor for EMMessageSnippetHintZone(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA77C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F00);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFD6C()
{
  return sub_1001EFD80();
}

unint64_t sub_1001EFD80()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F08;
  if (!qword_1005A3F08)
  {
    v0 = type metadata accessor for EMMessageSnippetHintZone(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA750, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F08);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFDF0()
{
  return sub_1001EFE04();
}

unint64_t sub_1001EFE04()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F10;
  if (!qword_1005A3F10)
  {
    v0 = type metadata accessor for EMMessageSnippetHintZone(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA7EC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F10);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFE74()
{
  return sub_1001EFE88();
}

unint64_t sub_1001EFE88()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F18;
  if (!qword_1005A3F18)
  {
    v0 = type metadata accessor for UILayoutPriority(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA8D4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F18);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFEF8()
{
  return sub_1001EFF0C();
}

unint64_t sub_1001EFF0C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F20;
  if (!qword_1005A3F20)
  {
    v0 = type metadata accessor for UILayoutPriority(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA8A8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F20);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001EFF7C()
{
  return sub_1001EFF90();
}

unint64_t sub_1001EFF90()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F28;
  if (!qword_1005A3F28)
  {
    v0 = type metadata accessor for UILayoutPriority(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA944, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F28);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0000()
{
  return sub_1001F0014();
}

unint64_t sub_1001F0014()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F30;
  if (!qword_1005A3F30)
  {
    v0 = type metadata accessor for MFMailMessageField(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAA28, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F30);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0084()
{
  return sub_1001F0098();
}

unint64_t sub_1001F0098()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F38;
  if (!qword_1005A3F38)
  {
    v0 = type metadata accessor for MFMailMessageField(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAA00, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F38);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0108()
{
  return sub_1001F011C();
}

unint64_t sub_1001F011C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F40;
  if (!qword_1005A3F40)
  {
    v0 = type metadata accessor for MFMailMessageField(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAA90, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F40);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F018C()
{
  return sub_1001F01A0();
}

unint64_t sub_1001F01A0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F48;
  if (!qword_1005A3F48)
  {
    v0 = type metadata accessor for MFMailMessageState(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAB68, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F48);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0210()
{
  return sub_1001F0224();
}

unint64_t sub_1001F0224()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F50;
  if (!qword_1005A3F50)
  {
    v0 = type metadata accessor for MFMailMessageState(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAB40, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F50);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0294()
{
  return sub_1001F02A8();
}

unint64_t sub_1001F02A8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F58;
  if (!qword_1005A3F58)
  {
    v0 = type metadata accessor for MFMailMessageState(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CABD0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F58);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0318()
{
  return sub_1001F032C();
}

unint64_t sub_1001F032C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F60;
  if (!qword_1005A3F60)
  {
    v0 = type metadata accessor for FavoritesDictionaryRepresentationKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA6D8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F60);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F039C()
{
  return sub_1001F03B0();
}

unint64_t sub_1001F03B0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F68;
  if (!qword_1005A3F68)
  {
    v0 = type metadata accessor for AutoresizingMask(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA5A4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F68);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0420()
{
  return sub_1001F0434();
}

unint64_t sub_1001F0434()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F70;
  if (!qword_1005A3F70)
  {
    v0 = type metadata accessor for AutoresizingMask(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA570, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F70);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F04A4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F78;
  if (!qword_1005A3F78)
  {
    v0 = type metadata accessor for AutoresizingMask(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA60C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F78);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0514()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3F80;
  if (!qword_1005A3F80)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UInt, &type metadata for UInt);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F80);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001F057C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F88;
  if (!qword_1005A3F88)
  {
    v0 = type metadata accessor for FavoritesDictionaryRepresentationKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA6A8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F88);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F05EC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3F90;
  if (!qword_1005A3F90)
  {
    v0 = type metadata accessor for MFMailMessageState(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CABA0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F90);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F065C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3F98;
  if (!qword_1005A3F98)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3F98);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001F06C4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FA0;
  if (!qword_1005A3FA0)
  {
    v0 = type metadata accessor for MFMailMessageState(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CABF8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FA0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0734()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FA8;
  if (!qword_1005A3FA8)
  {
    v0 = type metadata accessor for MFMailMessageField(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAA60, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FA8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F07A4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FB0;
  if (!qword_1005A3FB0)
  {
    v0 = type metadata accessor for MFMailMessageField(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAAB8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FB0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0814()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FB8;
  if (!qword_1005A3FB8)
  {
    v0 = type metadata accessor for UILayoutPriority(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA910, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FB8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0884()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A3FC0;
  if (!qword_1005A3FC0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Float, &type metadata for Float);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FC0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001F08EC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FC8;
  if (!qword_1005A3FC8)
  {
    v0 = type metadata accessor for UILayoutPriority(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA970, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FC8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F095C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FD0;
  if (!qword_1005A3FD0)
  {
    v0 = type metadata accessor for EMMessageSnippetHintZone(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA7B8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FD0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F09CC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A8780;
  if (!qword_1005A8780)
  {
    v0 = type metadata accessor for EMMessageSnippetHintZone(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA818, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A8780);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0A3C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FE0;
  if (!qword_1005A3FE0)
  {
    v0 = type metadata accessor for FavoritesDictionaryRepresentationKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAD24, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FE0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0AAC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FE8;
  if (!qword_1005A3FE8)
  {
    v0 = type metadata accessor for UIContentSizeCategory(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA4AC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FE8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0B1C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FF0;
  if (!qword_1005A3FF0)
  {
    v0 = type metadata accessor for UIContentSizeCategory(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA4E0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FF0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0B8C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A3FF8;
  if (!qword_1005A3FF8)
  {
    v0 = type metadata accessor for ECMailboxType(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA374, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A3FF8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0BFC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4000;
  if (!qword_1005A4000)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4000);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1001F0C64()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4008;
  if (!qword_1005A4008)
  {
    v0 = type metadata accessor for ECMailboxType(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CA3A8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4008);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F0CD4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4070;
  if (!qword_1005A4070)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4070);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1001F0D3C(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

unint64_t sub_1001F0D64()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A8770;
  if (!qword_1005A8770)
  {
    v0 = objc_opt_self(ECEmailAddress);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A8770);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1001F0DC8(id *a1)
{
  uint64_t v1;

  return sub_1001E9D3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

unint64_t sub_1001F0DF4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4088;
  if (!qword_1005A4088)
  {
    v0 = sub_1001E7634(&qword_1005A4080);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4088);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001F0E64(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

_QWORD *sub_1001F0E98(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;

  *a2 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain(v4);
  result = a2;
  a2[1] = v4;
  return result;
}

unint64_t sub_1001F0ED4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4098;
  if (!qword_1005A4098)
  {
    v0 = sub_1001E7634(&qword_1005A4090);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4098);
    return WitnessTable;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1001F0F44(_QWORD *a1)
{
  swift_release(*a1);
}

uint64_t type metadata accessor for _NSRange(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A40A0;
  if (!qword_1005A40A0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005242B0);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A40A0);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for EnumerationOptions(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A40B0;
  if (!qword_1005A40B0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524300);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A40B0);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A40B8;
  if (!qword_1005A40B8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_100524328);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A40B8);
      return v2;
    }
  }
  return v5;
}

uint64_t type metadata accessor for CGPoint(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  v5 = qword_1005A40C0;
  if (!qword_1005A40C0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_1005243A8);
    v5 = ForeignTypeMetadata;
    if (!v1)
    {
      v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1005A40C0);
      return v2;
    }
  }
  return v5;
}

unint64_t sub_1001F11EC()
{
  return sub_1001F1200();
}

unint64_t sub_1001F1200()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A40C8;
  if (!qword_1005A40C8)
  {
    v0 = type metadata accessor for OpenExternalURLOptionsKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAF7C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A40C8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F1270()
{
  return sub_1001F1284();
}

unint64_t sub_1001F1284()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A40D0;
  if (!qword_1005A40D0)
  {
    v0 = type metadata accessor for OpenExternalURLOptionsKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAF50, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A40D0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F12F4()
{
  return sub_1001F1308();
}

unint64_t sub_1001F1308()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A40D8;
  if (!qword_1005A40D8)
  {
    v0 = type metadata accessor for EnumerationOptions(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CB0D0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A40D8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F1378()
{
  return sub_1001F138C();
}

unint64_t sub_1001F138C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A40E0;
  if (!qword_1005A40E0)
  {
    v0 = type metadata accessor for EnumerationOptions(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CB2A0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A40E0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F13FC()
{
  return sub_1001F1410();
}

unint64_t sub_1001F1410()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4100;
  if (!qword_1005A4100)
  {
    v0 = type metadata accessor for EnumerationOptions(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CB0A4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4100);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F1480()
{
  return sub_1001F1494();
}

unint64_t sub_1001F1494()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4108;
  if (!qword_1005A4108)
  {
    v0 = type metadata accessor for EnumerationOptions(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CB070, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4108);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F1504()
{
  return sub_1001F1518();
}

unint64_t sub_1001F1518()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4110;
  if (!qword_1005A4110)
  {
    v0 = type metadata accessor for OpenExternalURLOptionsKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAFEC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4110);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F1588()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4118;
  if (!qword_1005A4118)
  {
    v0 = type metadata accessor for OpenExternalURLOptionsKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAFB8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4118);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F15F8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4120;
  if (!qword_1005A4120)
  {
    v0 = type metadata accessor for EnumerationOptions(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CB10C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4120);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F1668()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4138;
  if (!qword_1005A4138)
  {
    v0 = type metadata accessor for OpenExternalURLOptionsKey(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CB36C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4138);
    return WitnessTable;
  }
  return v3;
}

id sub_1001F16D8()
{
  void *v0;

  return objc_msgSend(v0, "setNeedsUpdateConstraints");
}

id sub_1001F1714(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;
  uint64_t v9;
  char v10;

  v8 = 0;
  v9 = a1;
  v10 = a2 & 1;
  v6 = v2 + OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_separatorLeadingInset;
  swift_beginAccess(v2 + OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_separatorLeadingInset);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  swift_endAccess(v7);
  return sub_1001F16D8();
}

BOOL sub_1001F17B0()
{
  void *v0;
  id v1;
  id v3;
  id v4;
  char v5;

  v1 = v0;
  v3 = objc_msgSend(v0, "traitCollection");

  v4 = objc_msgSend(v3, "preferredContentSizeCategory");
  v5 = UIContentSizeCategory.isAccessibilityCategory.getter(v4);

  return (v5 & 1) == 0;
}

void sub_1001F1878()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[4];
  uint64_t v13;
  void **v14;
  char *v15;
  id *v16;
  char *v17;
  id v18;
  id (*v19)(uint64_t);
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  char **v26;
  id v27;
  double v28;
  id v29;
  id v30;
  void **v31;
  id v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  id *v36;
  double v37;
  char *v38;
  uint64_t v39;
  objc_class *ObjectType;
  uint64_t v41;
  double *v42;
  char *v43;
  double v44;
  int v45;
  char v46[8];
  char v47;
  double v48;
  char v49;
  id v50;
  char v51[8];
  char v52;
  char v53[8];
  objc_super v54;
  char *v55;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v41 = 0;
  v39 = 0;
  v48 = 0.0;
  v55 = v0;
  v1 = v0;
  v54.receiver = v0;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, "updateConstraints");

  v42 = (double *)&v0[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_separatorLeadingInset];
  v43 = v53;
  swift_beginAccess(&v0[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_separatorLeadingInset]);
  v44 = *v42;
  v45 = *((unsigned __int8 *)v42 + 8);
  swift_endAccess(v53);
  if ((v45 & 1) != 0)
  {
    v16 = (id *)&v38[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint];
    v17 = v51;
    swift_beginAccess(&v38[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint]);
    v18 = *v16;
    v6 = v18;
    swift_endAccess(v51);
    v50 = v18;
    v19 = sub_1001F1D9C(v38);
    v20 = v7;
    swift_retain(v7);
    v21 = &v13;
    v8 = __chkstk_darwin(v19);
    v22 = v12;
    v12[2] = v8;
    v12[3] = v9;
    v10 = sub_10003A0C8((uint64_t *)&unk_1005A83A0);
    sub_1001F1EA0((void (*)(char *, char *))sub_1001F1E74, (uint64_t)v22, v10, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for () + 8, v23, (uint64_t)&v52);
    swift_release(v20);
    swift_release(v20);
    sub_1001F20D8(&v50);
    v14 = (void **)&v38[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint];
    v15 = &v49;
    swift_beginAccess(&v38[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint]);
    v11 = *v14;
    *v14 = 0;

    swift_endAccess(v15);
  }
  else
  {
    v37 = v44;
    v28 = v44;
    v48 = v44;
    v2 = v38;
    v25 = objc_msgSend(v38, "separatorLayoutGuide");

    v26 = &selRef_insertSectionsWithIdentifiers_beforeSectionWithIdentifier_;
    v30 = objc_msgSend(v25, "leadingAnchor");

    v3 = v38;
    v27 = objc_msgSend(v38, "safeAreaLayoutGuide");

    v29 = objc_msgSend(v27, "leadingAnchor");
    v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v29, v44);

    v34 = &qword_1005A4000;
    v31 = (void **)&v38[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint];
    v33 = &v47;
    v35 = 0;
    swift_beginAccess(&v38[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint]);
    v4 = *v31;
    *v31 = v32;

    swift_endAccess(v33);
    v36 = (id *)&v38[v34[113]];
    swift_beginAccess(v36);
    if (*v36)
    {
      v24 = *v36;
      v5 = v24;
      swift_endAccess(v46);
      objc_msgSend(v24, "setActive:", 1);

    }
    else
    {
      swift_endAccess(v46);
    }
  }
}

id (*sub_1001F1D9C(void *a1))(uint64_t a1)
{
  id v1;

  v1 = a1;
  *(_QWORD *)(swift_allocObject(&unk_100524768, 24, 7) + 16) = a1;
  return sub_1001F2BCC;
}

id sub_1001F1DFC(uint64_t a1, id a2)
{
  return objc_msgSend(a2, "removeConstraint:", a2, a1);
}

uint64_t sub_1001F1E40(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_1001F1E74(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001F1E40(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1001F1EA0@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  void (*v19)(char *, char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v18 = a7;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v25 = a6;
  v37 = a4;
  v36 = a5;
  v26 = *(_QWORD *)(a4 - 8);
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v7);
  v28 = (char *)v17 - v27;
  v33 = *(_QWORD *)(v9 + 16);
  v35 = v33;
  v32 = *(_QWORD *)(v33 - 8);
  v29 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = __chkstk_darwin(v8);
  v30 = (char *)v17 - v29;
  v31 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = (const void *)__chkstk_darwin(v10);
  v34 = (char *)v17 - v31;
  sub_1001F2AE4(v12, (char *)v17 - v31, v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33) == 1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1);
    v17[1] = v24;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, v34, v33);
    v16 = v24;
    v19(v30, v28);
    v17[0] = v16;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v33);
    if (v16)
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v28, v22);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 0, 1);
      return v17[0];
    }
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1001F20D8(id *a1)
{

}

uint64_t sub_1001F213C(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v9;
  id v10;
  uint64_t *v11;
  _BOOL8 v12;
  char *v13;
  void (*v14)(char *, _QWORD);
  uint64_t *v15;
  int v16;
  id v17;
  id v18;
  unsigned int v19;
  int v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  objc_class *ObjectType;
  id v29;
  id v30;
  uint64_t v31[5];
  char v32;
  _QWORD v33[5];
  char v34;
  unsigned __int8 v35;
  objc_super v36;
  void *v37;
  uint64_t v38;
  char *v39;

  v30 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v39 = 0;
  v38 = 0;
  v37 = 0;
  v2 = sub_10003A0C8(&qword_1005A4390);
  v22 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v23 = (uint64_t)&v12 - v22;
  v24 = type metadata accessor for UIListContentConfiguration(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v30);
  v27 = (char *)&v12 - v26;
  v39 = (char *)&v12 - v26;
  v38 = v3;
  v37 = v1;
  v4 = v1;
  v36.receiver = v1;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "traitCollectionDidChange:", v30);

  v5 = v30;
  if (v30)
  {
    v21 = v30;
    v18 = v30;
    v6 = v29;
    v17 = objc_msgSend(v29, "traitCollection");

    v19 = objc_msgSend(v18, "mf_traitDifferenceAffectsTextLayout:", v17);
    v20 = v19 & 1;
  }
  else
  {
    v20 = 2;
  }
  v34 = v20;
  if (v20 == 2)
    v35 = 1;
  else
    v35 = v34 & 1;
  v16 = v35;
  UICollectionViewCell.contentConfiguration.getter(v33, v29);

  if (v33[3])
  {
    v7 = sub_10003A0C8(&qword_1005A4398);
    if ((swift_dynamicCast(v23, v33, v7, v24, 6) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
    else
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
  }
  else
  {
    sub_1001F2578(v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
    return sub_1001F2620(v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v27, v23, v24);
  if ((v16 & 1) != 0)
  {
    v12 = sub_1001F17B0();
    v13 = &v32;
    v14 = (void (*)(char *, _QWORD))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter(v12);
    v9 = v29;
    v14(v13, 0);
    v10 = v9;
    v15 = v31;
    v31[3] = v24;
    v31[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    v11 = sub_1001F2690(v31);
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(v11, v27, v24);
    UICollectionViewCell.contentConfiguration.setter(v15);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
}

_QWORD *sub_1001F2578(_QWORD *a1)
{
  if (a1[3])
    sub_1001F25B8(a1);
  return a1;
}

uint64_t sub_1001F25B8(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[3];
  if ((*(_DWORD *)(*(_QWORD *)(v2 - 8) + 80) & 0x20000) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(_QWORD *))(*(_QWORD *)(v2 - 8) + 8))(a1);
}

uint64_t sub_1001F2620(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for UIListContentConfiguration(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1001F2690(uint64_t *result)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  v4 = result[3];
  if ((*(_DWORD *)(*(_QWORD *)(v4 - 8) + 80) & 0x20000) != 0)
  {
    v1 = swift_allocBox(v4);
    result = v2;
    *v3 = v1;
  }
  return result;
}

id sub_1001F2748(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  objc_class *ObjectType;
  __int128 v11;
  __int128 v12;
  id v13;
  objc_super v14;
  __int128 v15;
  __int128 v16;
  void *v17;

  *(double *)&v11 = a1;
  *((double *)&v11 + 1) = a2;
  *(double *)&v12 = a3;
  *((double *)&v12 + 1) = a4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v15 = v11;
  v16 = v12;
  v5 = v4;
  v6 = v4;
  v17 = v4;
  v7 = &v4[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_separatorLeadingInset];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;

  *(_QWORD *)&v4[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint] = 0;
  v14.receiver = v17;
  v14.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v14, "initWithFrame:", v11, v12);
  v8 = v13;
  v17 = v13;

  return v13;
}

id sub_1001F28D4(void *a1)
{
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  id v5;
  objc_class *ObjectType;
  id v10;
  objc_super v11;
  void *v12;
  id v13;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v12 = a1;
  v2 = v1;
  v3 = v1;
  v13 = v1;
  v4 = &v1[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_separatorLeadingInset];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;

  *(_QWORD *)&v1[OBJC_IVAR____TtC10MobileMail32AdjustableSeparatorInsetListCell_leadingConstraint] = 0;
  v11.receiver = v13;
  v11.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);
  if (v10)
  {
    v5 = v10;
    v13 = v10;

    return v10;
  }
  else
  {

    return 0;
  }
}

id ConversationNavigationBarItemsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AdjustableSeparatorInsetListCell()
{
  return objc_opt_self(_TtC10MobileMail32AdjustableSeparatorInsetListCell);
}

void *sub_1001F2AE4(const void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9;

  v9 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v9 + 48))(a1, 1))
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(a4 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a2, a1, a3);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, a3);
  }
  return a2;
}

uint64_t sub_1001F2B90()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

id sub_1001F2BCC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001F1DFC(a1, *(id *)(v1 + 16));
}

void sub_1001F2BD4(unint64_t a1)
{
  _QWORD v1[3];

  v1[2] = a1;
  v1[1] = a1;
  if (a1 <= 7)
    __asm { BR              X8 }
  v1[0] = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&unk_100524790, v1, &unk_100524790, &type metadata for Int);
  __break(1u);
  JUMPOUT(0x1001F2D90);
}

uint64_t sub_1001F2DC4(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0;
    case 1:
      return 1;
    case 2:
      return 2;
    case 3:
      return 3;
    case 4:
      return 4;
    case 5:
      return 5;
    case 6:
      return 6;
    case 7:
      return 7;
  }
  return 0;
}

uint64_t sub_1001F2F28()
{
  uint64_t result;
  _QWORD *v1;

  result = _allocateUninitializedArray<A>(_:)(8, &unk_100524790);
  *v1 = 0;
  v1[1] = 1;
  v1[2] = 2;
  v1[3] = 3;
  v1[4] = 4;
  v1[5] = 5;
  v1[6] = 6;
  v1[7] = 7;
  sub_10003CB20();
  return result;
}

uint64_t sub_1001F2FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F3128();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for Int) & 1;
}

uint64_t sub_1001F2FEC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001F3128();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for Int);
}

uint64_t sub_1001F3028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F3128();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1001F306C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001F3128();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1001F30B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1001F2DC4(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1001F30E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1001F2F28();
  *a1 = result;
  return result;
}

void sub_1001F3110()
{
  unint64_t *v0;

  sub_1001F2BD4(*v0);
}

unint64_t sub_1001F3128()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A43C8;
  if (!qword_1005A43C8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB4D0, &unk_100524790);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A43C8);
    return WitnessTable;
  }
  return v2;
}

void *type metadata accessor for AppStoreReviewCriterion()
{
  return &unk_100524790;
}

unint64_t sub_1001F31A8()
{
  return sub_1001F31BC();
}

unint64_t sub_1001F31BC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A43D0;
  if (!qword_1005A43D0)
  {
    v0 = sub_1001E7634(&qword_1005A43D8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A43D0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F322C()
{
  return sub_1001F3240();
}

unint64_t sub_1001F3240()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A43E0;
  if (!qword_1005A43E0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB440, &unk_100524790);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A43E0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001F32AC()
{
  uint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  sub_10003A134(v2, qword_1005A43E8);
  sub_10003A088(v2, (uint64_t)qword_1005A43E8);
  v0 = type metadata accessor for AppStoreReviewEligibilityUserDefaultsTracker();
  return static Logger.mailUILogger<A>(for:)(v0);
}

uint64_t type metadata accessor for AppStoreReviewEligibilityUserDefaultsTracker()
{
  return objc_opt_self(_TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker);
}

uint64_t sub_1001F3334()
{
  uint64_t v0;

  if (qword_1005A35F8 != -1)
    swift_once(&qword_1005A35F8, sub_1001F32AC);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005A43E8);
}

uint64_t sub_1001F3394()
{
  uint64_t result;
  Swift::String v1;

  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CountsByAppStoreReviewCriterion", 0x1FuLL, 1);
  result = v1._countAndFlagsBits;
  xmmword_1005A4400 = (__int128)v1;
  return result;
}

__int128 *sub_1001F33D4()
{
  if (qword_1005A3600 != -1)
    swift_once(&qword_1005A3600, sub_1001F3394);
  return &xmmword_1005A4400;
}

uint64_t sub_1001F3428()
{
  return sub_1001F5724();
}

uint64_t sub_1001F3450()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_criteriaCounts);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain(*v2);
  swift_endAccess(v4);
  return v3;
}

uint64_t sub_1001F34B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = a1;
  swift_bridgeObjectRetain(a1);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_criteriaCounts);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_criteriaCounts);
  v2 = *v4;
  *v4 = a1;
  swift_bridgeObjectRelease(v2);
  swift_endAccess(v6);
  sub_1001F3428();
  return swift_bridgeObjectRelease(a1);
}

uint64_t (*sub_1001F3538(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_criteriaCounts);
  return sub_1001F358C;
}

uint64_t sub_1001F358C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_endAccess(a1);
  swift_endAccess(a1);
  return sub_1001F3428();
}

id sub_1001F35D8(void *a1)
{
  objc_class *v1;
  id v2;

  v2 = objc_allocWithZone(v1);
  return sub_1001F3610(a1);
}

id sub_1001F3610(void *a1)
{
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v9;
  _QWORD *v10;
  id v12;
  objc_super v13;
  void *v14;
  id v15;

  swift_getObjectType(v1);
  v14 = a1;
  v2 = v1;
  v3 = v1;
  v4 = v1;
  v15 = v1;
  v5 = a1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_userDefaults] = a1;

  v9 = *(id *)&v1[OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_userDefaults];
  v6 = v9;
  v10 = sub_1001F373C(v9);

  *(_QWORD *)&v1[OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_criteriaCounts] = v10;
  v13.receiver = v15;
  v13.super_class = (Class)type metadata accessor for AppStoreReviewEligibilityUserDefaultsTracker();
  v12 = objc_msgSendSuper2(&v13, "init");
  v7 = v12;
  v15 = v12;

  return v12;
}

_QWORD *sub_1001F373C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *result;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t *v44;
  uint64_t *v45;
  _BYTE **v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint32_t v53;
  int v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t *v66;
  uint64_t *v67;
  _BYTE **v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint32_t v75;
  int v76;
  NSObject *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  _QWORD v108[2];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint32_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint32_t v123;
  uint64_t v124;
  uint64_t v125;

  v105 = a1;
  v125 = 0;
  v124 = 0;
  v96 = 0;
  v117 = 0;
  v110 = 0;
  v97 = type metadata accessor for Logger(0);
  v98 = *(_QWORD *)(v97 - 8);
  v99 = (*(_QWORD *)(v98 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v105);
  v100 = (char *)&v36 - v99;
  v101 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v102 = (char *)&v36 - v101;
  v125 = v4;
  v124 = v1;
  v5 = sub_1001F33D4();
  v103 = *(_QWORD *)v5;
  v104 = *((_QWORD *)v5 + 1);
  swift_bridgeObjectRetain(v104);
  v106 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v104);
  v107 = objc_msgSend(v105, "dictionaryForKey:", v106);

  if (v107)
  {
    v95 = v107;
    v92 = v107;
    v93 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    v94 = v93;
  }
  else
  {
    v94 = 0;
  }
  v91 = v94;
  if (!v94)
  {
    v24 = v100;
    v25 = sub_1001F3334();
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 16))(v24, v25, v97);
    v55 = Logger.logObject.getter(v26);
    v54 = static os_log_type_t.default.getter();
    v52 = &v122;
    v122 = 2;
    v50 = sub_1001EB1EC();
    v51 = sub_1001EB254();
    v27 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v123, v52, &type metadata for UInt32, &type metadata for Int, v50, v51, v27);
    v53 = v123;
    v28 = sub_10003A0C8(qword_1005A5580);
    v56 = _allocateUninitializedArray<A>(_:)(0, v28);
    if (os_log_type_enabled(v55, (os_log_type_t)v54))
    {
      v29 = v96;
      v40 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v38 = sub_10003A0C8(&qword_1005A3AD0);
      v39 = 0;
      v41 = sub_1001ED340(0, v38, v38);
      v42 = sub_1001ED340(v39, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v46 = &v121;
      v121 = v40;
      v47 = &v120;
      v120 = v41;
      v44 = &v119;
      v119 = v42;
      v43 = 0;
      sub_1001ED398(0, &v121);
      sub_1001ED398(v43, v46);
      v118 = v56;
      v45 = &v36;
      __chkstk_darwin(&v36);
      v30 = v47;
      v31 = &v36 - 6;
      v48 = &v36 - 6;
      v31[2] = (uint64_t)v46;
      v31[3] = (uint64_t)v30;
      v31[4] = v32;
      v49 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v33 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v48, v49, v33);
      if (v29)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v54, "No criteria counts found in UserDefaults, starting with empty dictionary", v40, v53);
        v37 = 0;
        sub_1001ED3F0(v41, 0);
        sub_1001ED3F0(v42, v37);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v56);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v56);
    }

    (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v97);
    v34 = sub_10003A0C8(&qword_1005A4420);
    v36 = _allocateUninitializedArray<A>(_:)(0, v34);
    v35 = sub_1001F5B80();
    return (_QWORD *)Dictionary.init(dictionaryLiteral:)(v36, &unk_100524790, &type metadata for Int, v35);
  }
  v90 = v91;
  v88 = v91;
  v117 = v91;
  swift_bridgeObjectRetain(v91);
  v89 = _dictionaryDownCastConditional<A, B, C, D>(_:)(v88, &type metadata for String, (char *)&type metadata for Any + 8, &type metadata for String, &type metadata for Int, &protocol witness table for String);
  if (!v89)
  {
    v12 = v102;
    swift_bridgeObjectRelease(v88);
    v13 = sub_1001F3334();
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 16))(v12, v13, v97);
    v77 = Logger.logObject.getter(v14);
    v76 = static os_log_type_t.error.getter();
    v74 = &v115;
    v115 = 2;
    v72 = sub_1001EB1EC();
    v73 = sub_1001EB254();
    v15 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v116, v74, &type metadata for UInt32, &type metadata for Int, v72, v73, v15);
    v75 = v116;
    v16 = sub_10003A0C8(qword_1005A5580);
    v78 = _allocateUninitializedArray<A>(_:)(0, v16);
    if (os_log_type_enabled(v77, (os_log_type_t)v76))
    {
      v17 = v96;
      v62 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v60 = sub_10003A0C8(&qword_1005A3AD0);
      v61 = 0;
      v63 = sub_1001ED340(0, v60, v60);
      v64 = sub_1001ED340(v61, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v68 = &v114;
      v114 = v62;
      v69 = &v113;
      v113 = v63;
      v66 = &v112;
      v112 = v64;
      v65 = 0;
      sub_1001ED398(0, &v114);
      sub_1001ED398(v65, v68);
      v111 = v78;
      v67 = &v36;
      __chkstk_darwin(&v36);
      v18 = v69;
      v19 = &v36 - 6;
      v70 = &v36 - 6;
      v19[2] = (uint64_t)v68;
      v19[3] = (uint64_t)v18;
      v19[4] = v20;
      v71 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v21 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v70, v71, v21);
      if (v17)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v76, "Found non-Int criteria counts, using empty dictionary instead", v62, v75);
        v59 = 0;
        sub_1001ED3F0(v63, 0);
        sub_1001ED3F0(v64, v59);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v78);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v78);
    }

    (*(void (**)(char *, uint64_t))(v98 + 8))(v102, v97);
    v22 = sub_10003A0C8(&qword_1005A4420);
    v57 = _allocateUninitializedArray<A>(_:)(0, v22);
    v23 = sub_1001F5B80();
    v58 = Dictionary.init(dictionaryLiteral:)(v57, &unk_100524790, &type metadata for Int, v23);
    swift_bridgeObjectRelease(v88);
    return (_QWORD *)v58;
  }
  v87 = v89;
  v6 = v96;
  v81 = v89;
  v110 = v89;
  swift_bridgeObjectRelease(v88);
  v108[1] = v81;
  v7 = sub_1001F5B80();
  v8 = Dictionary.init()(&unk_100524790, &type metadata for Int, v7);
  v86 = v108;
  v108[0] = v8;
  v82 = &v36;
  __chkstk_darwin(&v36);
  v83 = &v36 - 4;
  *(&v36 - 2) = v9;
  v84 = sub_10003A0C8(&qword_1005A4430);
  v85 = sub_10003A0C8(&qword_1005A4438);
  v10 = sub_1001F5CA8();
  result = Sequence.reduce<A>(into:_:)(&v109, v86, sub_1001F5C84, v83, v84, v85, v10);
  if (!v6)
  {
    v79 = v109;
    swift_bridgeObjectRelease(v81);
    swift_bridgeObjectRelease(v88);
    return (_QWORD *)v79;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F42F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  _BYTE **v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint32_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  NSObject *v109;
  int v110;
  char v111;
  uint64_t (*v112)();
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint32_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v85 = a1;
  v125 = 0;
  v124 = 0;
  v121 = 0;
  v75 = 0;
  v82 = type metadata accessor for Logger(0);
  v81 = *(_QWORD *)(v82 - 8);
  v76 = (*(_QWORD *)(v81 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v77 = (char *)v64 - v76;
  v125 = __chkstk_darwin(v85);
  v124 = v1;
  v2 = sub_1001F3450();
  v3 = v77;
  v80 = v2;
  v79 = &v122;
  v122 = v85;
  v78 = &v111;
  v112 = variable initialization expression of ConversationNavigationBarItemsManager.delegate;
  v113 = 0;
  sub_1001F5B80();
  v87 = &type metadata for Int;
  Dictionary.subscript.getter(&v123, v79, sub_1001F5D18, v78, v80, &unk_100524790);
  v83 = v123;
  v121 = v123;
  swift_bridgeObjectRelease(v80);
  v4 = sub_1001F3334();
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v3, v4, v82);
  v84 = 24;
  v97 = 7;
  v5 = swift_allocObject(&unk_100524838, 24, 7);
  v6 = v84;
  v7 = v97;
  v92 = v5;
  *(_QWORD *)(v5 + 16) = v83;
  v8 = swift_allocObject(&unk_100524860, v6, v7);
  v86 = v8;
  *(_QWORD *)(v8 + 16) = v85;
  swift_retain(v8);
  v96 = 32;
  v9 = swift_allocObject(&unk_100524888, 32, v97);
  v10 = v86;
  v98 = v9;
  *(_QWORD *)(v9 + 16) = sub_1001F5D7C;
  *(_QWORD *)(v9 + 24) = v10;
  v11 = swift_release(v10);
  v109 = Logger.logObject.getter(v11);
  v110 = static os_log_type_t.default.getter();
  v90 = &v119;
  v119 = 22;
  v88 = sub_1001EB1EC();
  v89 = sub_1001EB254();
  v12 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v120, v90, &type metadata for UInt32, v87, v88, v89, v12);
  v91 = v120;
  v94 = 17;
  v13 = swift_allocObject(&unk_1005248B0, 17, v97);
  v14 = v94;
  v15 = v97;
  v100 = v13;
  *(_BYTE *)(v13 + 16) = 0;
  v16 = swift_allocObject(&unk_1005248D8, v14, v15);
  v17 = v96;
  v18 = v97;
  v101 = v16;
  v95 = 8;
  *(_BYTE *)(v16 + 16) = 8;
  v19 = swift_allocObject(&unk_100524900, v17, v18);
  v20 = v96;
  v21 = v97;
  v22 = v19;
  v23 = v92;
  v93 = v22;
  *(_QWORD *)(v22 + 16) = sub_1001F5D4C;
  *(_QWORD *)(v22 + 24) = v23;
  v24 = swift_allocObject(&unk_100524928, v20, v21);
  v25 = v94;
  v26 = v97;
  v27 = v24;
  v28 = v93;
  v102 = v27;
  *(_QWORD *)(v27 + 16) = sub_1001F5D18;
  *(_QWORD *)(v27 + 24) = v28;
  v29 = swift_allocObject(&unk_100524950, v25, v26);
  v30 = v94;
  v31 = v97;
  v103 = v29;
  *(_BYTE *)(v29 + 16) = 32;
  v32 = swift_allocObject(&unk_100524978, v30, v31);
  v33 = v96;
  v34 = v97;
  v104 = v32;
  *(_BYTE *)(v32 + 16) = v95;
  v35 = swift_allocObject(&unk_1005249A0, v33, v34);
  v36 = v96;
  v37 = v97;
  v38 = v35;
  v39 = v98;
  v99 = v38;
  *(_QWORD *)(v38 + 16) = sub_1001F5E68;
  *(_QWORD *)(v38 + 24) = v39;
  v40 = swift_allocObject(&unk_1005249C8, v36, v37);
  v41 = v99;
  v106 = v40;
  *(_QWORD *)(v40 + 16) = sub_1001ED524;
  *(_QWORD *)(v40 + 24) = v41;
  v108 = sub_10003A0C8(qword_1005A5580);
  v105 = _allocateUninitializedArray<A>(_:)(6, v108);
  v107 = v42;
  swift_retain(v100);
  v43 = v101;
  v44 = v100;
  v45 = v107;
  *v107 = sub_1001ED4B8;
  v45[1] = v44;
  swift_retain(v43);
  v46 = v102;
  v47 = v101;
  v48 = v107;
  v107[2] = sub_1001ED4B8;
  v48[3] = v47;
  swift_retain(v46);
  v49 = v103;
  v50 = v102;
  v51 = v107;
  v107[4] = sub_1001F60F4;
  v51[5] = v50;
  swift_retain(v49);
  v52 = v104;
  v53 = v103;
  v54 = v107;
  v107[6] = sub_1001ED4B8;
  v54[7] = v53;
  swift_retain(v52);
  v55 = v106;
  v56 = v104;
  v57 = v107;
  v107[8] = sub_1001ED4B8;
  v57[9] = v56;
  swift_retain(v55);
  v58 = v105;
  v59 = v106;
  v60 = v107;
  v107[10] = sub_1001F6408;
  v60[11] = v59;
  sub_10003CB20();
  swift_bridgeObjectRelease(v58);
  if (os_log_type_enabled(v109, (os_log_type_t)v110))
  {
    v61 = v75;
    v67 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22, &type metadata for UInt8);
    v66 = sub_10003A0C8(&qword_1005A3AD0);
    v68 = sub_1001ED340(0, v66, v66);
    v69 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v71 = &v118;
    v118 = v67;
    v72 = &v117;
    v117 = v68;
    v73 = &v116;
    v116 = v69;
    v70 = 2;
    sub_1001ED398(2, &v118);
    sub_1001ED398(v70, v71);
    v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v115 = v100;
    sub_1001ED3AC(&v114, (uint64_t)v71, (uint64_t)v72, (uint64_t)v73);
    v74 = v61;
    if (v61)
    {
      __break(1u);
    }
    else
    {
      v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v115 = v101;
      sub_1001ED3AC(&v114, (uint64_t)&v118, (uint64_t)&v117, (uint64_t)&v116);
      v65 = 0;
      v62 = v65;
      v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F60F4;
      v115 = v102;
      sub_1001ED3AC(&v114, (uint64_t)&v118, (uint64_t)&v117, (uint64_t)&v116);
      v64[2] = v62;
      v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v115 = v103;
      sub_1001ED3AC(&v114, (uint64_t)&v118, (uint64_t)&v117, (uint64_t)&v116);
      v64[1] = 0;
      v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v115 = v104;
      sub_1001ED3AC(&v114, (uint64_t)&v118, (uint64_t)&v117, (uint64_t)&v116);
      v64[0] = 0;
      v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v115 = v106;
      sub_1001ED3AC(&v114, (uint64_t)&v118, (uint64_t)&v117, (uint64_t)&v116);
      _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v110, "Returning %ld for criterion %s", v67, v91);
      sub_1001ED3F0(v68, 0);
      sub_1001ED3F0(v69, 1);
      UnsafeMutablePointer.deallocate()();
      swift_release(v100);
      swift_release(v101);
      swift_release(v102);
      swift_release(v103);
      swift_release(v104);
      swift_release(v106);
    }
  }
  else
  {
    swift_release(v100);
    swift_release(v101);
    swift_release(v102);
    swift_release(v103);
    swift_release(v104);
    swift_release(v106);
  }

  (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v82);
  return v83;
}

uint64_t sub_1001F4C94@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1001F4CC8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void (*sub_1001F4D20(uint64_t a1))(_BYTE *, _QWORD)
{
  uint64_t v1;
  uint64_t v2;
  void (*result)(_BYTE *, _QWORD);
  _QWORD *v4;
  uint64_t (*v7)(uint64_t, char);
  uint64_t v8;
  _BYTE v9[32];
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;
  uint64_t v13;

  v13 = a1;
  v12 = v1;
  v7 = sub_1001F3538((uint64_t)v11);
  v10 = a1;
  v8 = swift_allocObject(&unk_1005249F0, 32, 7);
  *(_QWORD *)(v8 + 16) = variable initialization expression of ConversationNavigationBarItemsManager.delegate;
  *(_QWORD *)(v8 + 24) = 0;
  v2 = sub_10003A0C8(&qword_1005A4438);
  result = (void (*)(_BYTE *, _QWORD))Dictionary.subscript.modify(v9, &v10, sub_1001F5D18, v8, v2);
  if (__OFADD__(*v4, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v4;
    result(v9, 0);
    v7((uint64_t)v11, 0);
    return (void (*)(_BYTE *, _QWORD))swift_release(v8);
  }
  return result;
}

uint64_t sub_1001F4E80()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = sub_10003A0C8(&qword_1005A4420);
  v4 = _allocateUninitializedArray<A>(_:)(0, v0);
  v1 = sub_1001F5B80();
  v2 = Dictionary.init(dictionaryLiteral:)(v4, &unk_100524790, &type metadata for Int, v1);
  return sub_1001F34B4(v2);
}

uint64_t sub_1001F4F20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE **v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint32_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  NSObject *v64;
  int v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint32_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v75 = a1;
  v74 = a2;
  v101 = 0;
  v98 = 0;
  v99 = 0;
  v100 = 0;
  v88 = 0;
  v87 = 0;
  v76 = type metadata accessor for Logger(0);
  v77 = *(_QWORD *)(v76 - 8);
  v78 = (*(_QWORD *)(v77 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v79 = (char *)&v37 - v78;
  v101 = __chkstk_darwin(v75);
  v82 = *v2;
  v81 = v2[1];
  v80 = v2[2];
  v98 = v82;
  v99 = v81;
  v100 = v80;
  swift_bridgeObjectRetain(v81);
  v3 = sub_1001F6154();
  FixedWidthInteger.init(_:)(&v96, v82, v81, &type metadata for Int, v3);
  v83 = v96;
  if ((v97 & 1) != 0 || (v72 = v83, v88 = v83, v71 = sub_1001F2DC4(v83), (v4 & 1) != 0))
  {
    v7 = v79;
    v8 = sub_1001F3334();
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v7, v8, v76);
    swift_bridgeObjectRetain(v81);
    v55 = 7;
    v9 = (_QWORD *)swift_allocObject(&unk_100524A18, 40, 7);
    v10 = v81;
    v11 = v80;
    v56 = v9;
    v9[2] = v82;
    v9[3] = v10;
    v9[4] = v11;
    v64 = Logger.logObject.getter();
    v65 = static os_log_type_t.error.getter();
    v51 = &v94;
    v94 = 12;
    v49 = sub_1001EB1EC();
    v50 = sub_1001EB254();
    v12 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v95, v51, &type metadata for UInt32, &type metadata for Int, v49, v50, v12);
    v52 = v95;
    v53 = 17;
    v13 = swift_allocObject(&unk_100524A40, 17, v55);
    v14 = v53;
    v15 = v55;
    v58 = v13;
    *(_BYTE *)(v13 + 16) = 32;
    v16 = swift_allocObject(&unk_100524A68, v14, v15);
    v17 = v55;
    v59 = v16;
    *(_BYTE *)(v16 + 16) = 8;
    v54 = 32;
    v18 = swift_allocObject(&unk_100524A90, 32, v17);
    v19 = v54;
    v20 = v55;
    v21 = v18;
    v22 = v56;
    v57 = v21;
    *(_QWORD *)(v21 + 16) = sub_1001F745C;
    *(_QWORD *)(v21 + 24) = v22;
    v23 = swift_allocObject(&unk_100524AB8, v19, v20);
    v24 = v57;
    v61 = v23;
    *(_QWORD *)(v23 + 16) = sub_1001ED524;
    *(_QWORD *)(v23 + 24) = v24;
    v63 = sub_10003A0C8(qword_1005A5580);
    v60 = _allocateUninitializedArray<A>(_:)(3, v63);
    v62 = v25;
    swift_retain(v58);
    v26 = v59;
    v27 = v58;
    v28 = v62;
    *v62 = sub_1001ED4B8;
    v28[1] = v27;
    swift_retain(v26);
    v29 = v61;
    v30 = v59;
    v31 = v62;
    v62[2] = sub_1001ED4B8;
    v31[3] = v30;
    swift_retain(v29);
    v32 = v60;
    v33 = v61;
    v34 = v62;
    v62[4] = sub_1001F6408;
    v34[5] = v33;
    sub_10003CB20();
    swift_bridgeObjectRelease(v32);
    if (os_log_type_enabled(v64, (os_log_type_t)v65))
    {
      v42 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
      v41 = sub_10003A0C8(&qword_1005A3AD0);
      v43 = sub_1001ED340(0, v41, v41);
      v44 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v45 = &v93;
      v93 = v42;
      v46 = &v92;
      v92 = v43;
      v47 = &v91;
      v91 = v44;
      sub_1001ED398(2, &v93);
      sub_1001ED398(1, v45);
      v35 = v73;
      v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v90 = v58;
      sub_1001ED3AC(&v89, (uint64_t)v45, (uint64_t)v46, (uint64_t)v47);
      v48 = v35;
      if (v35)
      {
        __break(1u);
      }
      else
      {
        v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v90 = v59;
        sub_1001ED3AC(&v89, (uint64_t)&v93, (uint64_t)&v92, (uint64_t)&v91);
        v39 = 0;
        v36 = v39;
        v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
        v90 = v61;
        sub_1001ED3AC(&v89, (uint64_t)&v93, (uint64_t)&v92, (uint64_t)&v91);
        v38 = v36;
        _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v65, "Found invalid criterion string %s, ignoring it", v42, v52);
        sub_1001ED3F0(v43, 0);
        sub_1001ED3F0(v44, 1);
        UnsafeMutablePointer.deallocate()();
        swift_release(v58);
        swift_release(v59);
        swift_release(v61);
        v40 = v38;
      }
    }
    else
    {
      swift_release(v58);
      swift_release(v59);
      swift_release(v61);
      v40 = v73;
    }
    v37 = v40;

    (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v76);
    return v37;
  }
  else
  {
    v70 = v71;
    v66 = v71;
    v87 = v71;
    swift_bridgeObjectRetain(v81);
    v68 = &v85;
    v85 = v80;
    v86 = 0;
    v67 = &v84;
    v84 = v66;
    v5 = sub_10003A0C8(&qword_1005A4438);
    Dictionary.subscript.setter(v68, v67, v5);
    swift_bridgeObjectRelease(v81);
    result = v73;
    v69 = v73;
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> InstantAnswerView.Model.Airport.code.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
}

uint64_t sub_1001F5724()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v4;
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = 0;
  v20 = v0;
  v19 = sub_1001F3450();
  v15 = sub_1001F5914;
  v16 = 0;
  v10 = sub_10003A0C8(&qword_1005A4438);
  v11 = sub_10003A0C8(&qword_1005A4450);
  v1 = sub_1001F6468();
  v13 = sub_1001E919C((void (*)(char *, char *))sub_1001F643C, (uint64_t)v14, v10, v11, (uint64_t)&type metadata for Never, v1, (uint64_t)&protocol witness table for Never, v12);
  sub_1001ED890(&v19);
  v18 = v13;
  sub_10003A0C8(&qword_1005A4460);
  sub_1001F64D8();
  v8 = Dictionary.init<A>(uniqueKeysWithValues:)(&v18);
  v17 = v8;
  v7 = *(id *)(v9 + OBJC_IVAR____TtC10MobileMail44AppStoreReviewEligibilityUserDefaultsTracker_userDefaults);
  v2 = v7;
  swift_bridgeObjectRetain(v8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  v4 = *((_QWORD *)sub_1001F33D4() + 1);
  swift_bridgeObjectRetain(v4);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v7, "setObject:forKey:", isa, v5);

  swift_unknownObjectRelease(isa);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1001F5914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = a1;
  v4[1] = a2;
  ConversationNavigationBarItemType.rawValue.getter();
  v4[0] = v2;
  return String.init<A>(_:)(v4, &type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_1001F5968@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = a2(*a1, a1[1]);
  *a3 = result;
  a3[1] = v4;
  a3[2] = v5;
  return result;
}

uint64_t sub_1001F59BC()
{
  uint64_t result;
  char v1;
  uint64_t v2;

  if (!"MobileMail.AppStoreReviewEligibilityUserDefaultsTracker")
  {
    v1 = 2;
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StaticString.swift", 24, v1, 136, 0);
    __break(1u);
  }
  result = sub_100220ABC((uint64_t)"MobileMail.AppStoreReviewEligibilityUserDefaultsTracker", 55, (unint64_t)"init()", 6, 2, (unint64_t)"MobileMail/AppStoreReviewEligibilityTracker.swift", 49, 2, v2, 0x10uLL, 0xDuLL);
  __break(1u);
  return result;
}

id sub_1001F5AEC()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppStoreReviewEligibilityUserDefaultsTracker();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1001F5B80()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4428;
  if (!qword_1005A4428)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB490, &unk_100524790);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4428);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001F5BE8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;

  return sub_1001ED3AC(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1001F5C14()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5060;
  if (!qword_1005A5060)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A4990);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5060);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001F5C84(uint64_t a1, uint64_t a2)
{
  return sub_1001F4F20(a1, a2);
}

unint64_t sub_1001F5CA8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4440;
  if (!qword_1005A4440)
  {
    v0 = sub_1001E7634(&qword_1005A4430);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4440);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001F5D18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1001F4C94(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1001F5D24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t sub_1001F5D4C()
{
  uint64_t v0;

  return nullsub_9(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001F5D54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t sub_1001F5D7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001F4CC8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001F5D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(void);
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = a3;
  v9 = a4;
  v10 = *(_QWORD *)(a3 - 8);
  v8 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (void (*)(void))__chkstk_darwin(a1);
  v11 = (char *)&v7 - v8;
  v4();
  v13 = dispatch thunk of CustomStringConvertible.description.getter(v12, v9);
  v14 = v5;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  return v13;
}

uint64_t sub_1001F5E2C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F5E68()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v1 = sub_1001F5EA8();
  return sub_1001F5D84(v4, v3, (uint64_t)&unk_100524790, v1);
}

unint64_t sub_1001F5EA8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4448;
  if (!qword_1005A4448)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB468, &unk_100524790);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4448);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001F5F10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F5F38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F5F60()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F5F9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v15 = a1;
  v18 = a6;
  v13[1] = a7;
  v22 = a6;
  v16 = *(_QWORD *)(a6 - 8);
  v13[0] = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(a1);
  v17 = (uint64_t)v13 - v13[0];
  v8(v7);
  v14 = dispatch thunk of static FixedWidthInteger.bitWidth.getter() >> 3;
  v20 = *v15;
  v21 = v20 + v14;
  sub_1001F6230(v17, (uint64_t (*)(void))sub_1001F73F4, (uint64_t)v19, v18, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for () + 8, (uint64_t)&protocol witness table for Never, v13[2]);
  v9 = v16;
  v10 = v17;
  v11 = v18;
  *v15 += v14;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
}

uint64_t sub_1001F60B8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F60F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_1001F6154();
  return sub_1001F5F9C(a1, a2, a3, v8, v9, (uint64_t)&type metadata for Int, v4);
}

unint64_t sub_1001F6154()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A97D0;
  if (!qword_1005A97D0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A97D0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001F61BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F61E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F620C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, a4);
}

uint64_t sub_1001F6230(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(void);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v17 = a2;
  v13 = a5;
  v14 = a8;
  v23 = a4;
  v22 = a5;
  v21 = a6;
  v15 = *(_QWORD *)(a5 - 8);
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(a1);
  v18 = (char *)&v12 - v16;
  v20 = v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  result = v17();
  v19 = v8;
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v18, v13);
  return result;
}

uint64_t sub_1001F6314()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

_QWORD *sub_1001F6350(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = a4();
  v10 = v5;
  v6 = sub_1001F6548(v4, v5, a3);
  v11 = *a1;
  v7 = *a1 + 8;
  v13 = v6;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v11, v7);
  swift_bridgeObjectRelease(v10);
  result = a1;
  *a1 = v11 + 8;
  return result;
}

uint64_t sub_1001F63CC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

_QWORD *sub_1001F6408(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1001F6350(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1001F6414()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32);
}

uint64_t sub_1001F643C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1001F5968(a1, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16), a2);
}

unint64_t sub_1001F6468()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4458;
  if (!qword_1005A4458)
  {
    v0 = sub_1001E7634(&qword_1005A4438);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4458);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001F64D8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4468;
  if (!qword_1005A4468)
  {
    v0 = sub_1001E7634(&qword_1005A4460);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4468);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001F6548(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[4];
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;

  v14 = sub_1001F66B8((uint64_t)&v17, 0, 0, 1, a1, a2);
  v15 = v3;
  v16 = v4;
  v11 = v17;
  if (v14)
  {
    v12[3] = swift_getObjectType(v14);
    v12[0] = v14;
    v6 = *a3;
    if (*a3)
    {
      sub_1001F6A2C((uint64_t)v12, v6);
      *a3 = v6 + 32;
    }
    sub_1001F25B8(v12);
  }
  else
  {
    v13[3] = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    v7 = *a3;
    if (*a3)
    {
      sub_1001F6A2C((uint64_t)v13, v7);
      *a3 = v7 + 32;
    }
    swift_bridgeObjectRetain(a2);
    sub_1001F25B8(v13);
  }
  return v11;
}

uint64_t sub_1001F66B8(uint64_t result, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  char v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  _QWORD v22[4];
  char v23;
  char v24;
  uint64_t v25;

  v17 = (_QWORD *)result;
  v25 = a6;
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (a2)
      {
        if (!a3)
          __break(1u);
        v16 = a3 - (_QWORD)a2;
      }
      else
      {
        v16 = 0;
      }
      v15 = (a6 & 0xF00000000000000uLL) >> 56;
      if (v15 < v16)
      {
        if (a2)
        {
          v22[0] = a5;
          v22[1] = a6 & (-(uint64_t)bswap64(0xFFuLL) - 1);
          sub_1001F6A70(v22, v15, a2);
          UnsafeMutableRawBufferPointer.subscript.setter(0, v15, a2, a3);
          *v17 = a2;
          v11 = 0;
          v12 = v15;
          v13 = 1;
          v14 = 0;
LABEL_26:
          v22[2] = v11;
          v22[3] = v12;
          v23 = v13 & 1;
          v24 = v14 & 1;
          return (uint64_t)v11;
        }
        goto LABEL_28;
      }
    }
LABEL_13:
    v6 = sub_1001F6AAC(a5, a6);
    *v17 = v7;
    v11 = v6;
    v12 = v8;
    v13 = 0;
    v14 = 1;
    goto LABEL_26;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0xFFFFFFFFFFFFFFE0)
    {
      v10 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      goto LABEL_21;
    }
    __break(1u);
  }
  result = _StringObject.sharedUTF8.getter(a5, a6);
  if (!result)
    goto LABEL_29;
  v10 = result;
LABEL_21:
  *v17 = v10;
  if (a6 < 0)
  {
    v9 = 0;
LABEL_25:
    v11 = (_QWORD *)v9;
    v12 = a5 & 0xFFFFFFFFFFFFLL;
    v13 = 0;
    v14 = 0;
    goto LABEL_26;
  }
  if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0)
  {
    swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
    v9 = a6 & 0xFFFFFFFFFFFFFFFLL;
    goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001F6A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

void *sub_1001F6A70(const void *a1, size_t a2, void *__dst)
{
  memcpy(__dst, a1, a2);
  return __dst;
}

_QWORD *sub_1001F6AAC(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v6 = sub_1001F6B5C(a1, a2);
  sub_1001F6CD4();
  v4 = v6[2];
  sub_1001F6D48(v4);
  sub_1001F6DC8(v4, 0);
  sub_10003D0B0();
  swift_retain(v6);
  v5 = sub_1001F6E34((uint64_t)v6);
  swift_bridgeObjectRelease(v6);
  result = (_QWORD *)v5;
  if (!__OFSUB__(v5, 1))
    return v6;
  __break(1u);
  return result;
}

_QWORD *sub_1001F6B5C(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  char v3;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v10[3];

  v10[2] = a2;
  if ((a2 & 0x1000000000000000) != 0)
  {
    v7 = String.UTF8View._foreignCount()();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v7 = (a2 & 0xF00000000000000uLL) >> 56;
  }
  else
  {
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
    return sub_1001F6FB0();
  v5 = sub_1001F6E48(v7, 0);
  swift_retain(v5);
  swift_release(v5);
  result = (_QWORD *)_StringGuts.copyUTF8(into:)(v5 + 4, v7, a1, a2);
  v6 = result;
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(0xE000000000000000);
    result = v10;
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_1001F0D3C((uint64_t)v10);
    if (v6 == (_QWORD *)v7)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F6CD4()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v4;
  if ((result & 1) == 0)
  {
    v2 = sub_1001F6E34(*v3);
    result = sub_1001F6FDC(0, v2 + 1, 1, *v3);
    *v3 = result;
  }
  return result;
}

uint64_t sub_1001F6D48(uint64_t result)
{
  uint64_t v1;
  uint64_t *v2;

  if (*(_QWORD *)(*(_QWORD *)v1 + 24) >> 1 < result + 1)
  {
    result = sub_1001F6FDC(*(_QWORD *)(*(_QWORD *)v1 + 24) >> 1 != 0, result + 1, 1, *v2);
    *v2 = result;
  }
  return result;
}

uint64_t sub_1001F6DC8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + 1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  *(_QWORD *)(v4 + 16) = v5;
  swift_release(v4);
  v6 = *v2;
  swift_retain(*v2);
  *(_BYTE *)(v6 + 32 + a1) = a2;
  return swift_release(v6);
}

uint64_t sub_1001F6E34(uint64_t a1)
{
  return sub_1001F72D8(a1);
}

_QWORD *sub_1001F6E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  size_t v4;
  _QWORD *v6;
  uint64_t v7;

  if (a2 < a1)
    v7 = a1;
  else
    v7 = a2;
  if (v7)
  {
    v2 = sub_10003A0C8(&qword_1005A4498);
    v6 = (_QWORD *)swift_allocObject(v2, v7 + 32, 7);
    if ((sub_1001F72E0() & 1) != 0)
    {
      v4 = (size_t)v6 + sub_1001F73D0(v6);
      swift_retain(v6);
      v6[2] = a1;
      v6[3] = 2 * (v4 - (_QWORD)(v6 + 4));
    }
    else
    {
      swift_retain(v6);
      v6[2] = a1;
      v6[3] = 2 * v7;
    }
    swift_release(v6);
    return v6;
  }
  else
  {
    swift_retain(&_swiftEmptyArrayStorage);
    return &_swiftEmptyArrayStorage;
  }
}

void *sub_1001F6FB0()
{
  swift_retain(&_swiftEmptyArrayStorage);
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1001F6FDC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v5;
  size_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v16;

  swift_retain(a4);
  result = swift_retain(a4);
  v16 = *(_QWORD *)(a4 + 24) >> 1;
  if ((a3 & 1) != 0)
  {
    if (v16 < a2)
    {
      if ((unsigned __int128)(v16 * (__int128)2) >> 64 != (2 * v16) >> 63)
      {
        __break(1u);
        return result;
      }
      if (2 * v16 < a2)
        v11 = a2;
      else
        v11 = 2 * v16;
    }
    else
    {
      v11 = *(_QWORD *)(a4 + 24) >> 1;
    }
  }
  else
  {
    v11 = a2;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (v11 < v10)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v11;
  if (v9)
  {
    v5 = sub_10003A0C8(&qword_1005A4498);
    v8 = (_QWORD *)swift_allocObject(v5, v9 + 32, 7);
    if ((sub_1001F72E0() & 1) != 0)
    {
      v6 = (size_t)v8 + sub_1001F73D0(v8);
      swift_retain(v8);
      v8[2] = v10;
      v8[3] = 2 * (v6 - (_QWORD)(v8 + 4));
    }
    else
    {
      swift_retain(v8);
      v8[2] = v10;
      v8[3] = 2 * v9;
    }
    swift_release(v8);
    v7 = (char *)v8;
  }
  else
  {
    swift_retain(&_swiftEmptyArrayStorage);
    v7 = (char *)&_swiftEmptyArrayStorage;
  }
  if ((a1 & 1) != 0)
  {
    swift_release(a4);
    swift_bridgeObjectRelease(a4);
    sub_1001F7320((char *)(a4 + 32), v10, v7 + 32);
    *(_QWORD *)(a4 + 16) = 0;
    swift_release(a4);
  }
  else
  {
    swift_bridgeObjectRelease(a4);
    swift_release(a4);
    swift_retain(a4);
    swift_release(a4);
    sub_1001F72EC((const void *)(a4 + 32), v10, v7 + 32);
    swift_unknownObjectRelease(a4);
  }
  return (uint64_t)v7;
}

uint64_t sub_1001F72D8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1001F72E0()
{
  return 1;
}

void *sub_1001F72EC(const void *a1, size_t a2, void *__dst)
{
  return memcpy(__dst, a1, a2);
}

char *sub_1001F7320(char *result, size_t a2, char *a3)
{
  if (a3 < result || a3 >= &result[a2] || a3 != result)
    return (char *)memmove(a3, result, a2);
  return result;
}

size_t sub_1001F73D0(const void *a1)
{
  return malloc_size(a1);
}

uint64_t sub_1001F73F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001F620C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001F7420()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_1001F745C()
{
  uint64_t v0;

  InstantAnswerView.Model.Airport.code.getter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001F746C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F7494()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F74BC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F74F8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F7534()
{
  uint64_t result;
  Swift::String v1;

  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("MobileMail", 0xAuLL, 1);
  result = v1._countAndFlagsBits;
  xmmword_1005A44A0 = (__int128)v1;
  return result;
}

__int128 *sub_1001F7574()
{
  if (qword_1005A3608 != -1)
    swift_once(&qword_1005A3608, sub_1001F7534);
  return &xmmword_1005A44A0;
}

uint64_t sub_1001F75C8()
{
  uint64_t result;
  Swift::String v1;

  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("1", 1uLL, 1);
  result = v1._countAndFlagsBits;
  xmmword_1005A44B0 = (__int128)v1;
  return result;
}

__int128 *sub_1001F7608()
{
  if (qword_1005A3610 != -1)
    swift_once(&qword_1005A3610, sub_1001F75C8);
  return &xmmword_1005A44B0;
}

uint64_t sub_1001F765C()
{
  uint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  sub_10003A134(v2, qword_1005A44C0);
  sub_10003A088(v2, (uint64_t)qword_1005A44C0);
  v0 = type metadata accessor for AppStoreReviewAMSRequirementsProvider();
  return static Logger.mailUILogger<A>(for:)(v0);
}

uint64_t type metadata accessor for AppStoreReviewAMSRequirementsProvider()
{
  return objc_opt_self(_TtC10MobileMail37AppStoreReviewAMSRequirementsProvider);
}

uint64_t sub_1001F76E4()
{
  uint64_t v0;

  if (qword_1005A3618 != -1)
    swift_once(&qword_1005A3618, sub_1001F765C);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005A44C0);
}

id sub_1001F7744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  NSString v7;
  id v9;

  v7 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)((uint64_t (*)())swift_getObjCClassFromMetadata)(), "bagForProfile:profileVersion:", v7, v5);

  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a2);
  return v9;
}

id sub_1001F77DC(uint64_t a1)
{
  id v1;

  v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1001F8EC0(a1);
}

void sub_1001F7818()
{
  uint64_t v0;
  id v1;
  id v2;

  v2 = *(id *)(v0 + OBJC_IVAR____TtC10MobileMail37AppStoreReviewAMSRequirementsProvider_storeReview);
  v1 = v2;
  objc_msgSend(v2, "applicationDidForeground");

}

void sub_1001F78A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  _QWORD *v4;
  id v5;
  uint64_t ObjectType;
  const void *v9;
  id v10;
  void **aBlock;
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, void *, void *);
  void *v15;
  void (*v16)(void *, uint64_t);
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  ObjectType = swift_getObjectType(v2);
  v18 = 0;
  v20 = a1;
  v21 = a2;
  v19 = v2;
  v5 = *(id *)(v2 + OBJC_IVAR____TtC10MobileMail37AppStoreReviewAMSRequirementsProvider_storeReview);
  v3 = v5;
  v10 = objc_msgSend(v5, "shouldAttemptReview");

  v18 = v10;
  swift_retain(a2);
  v4 = (_QWORD *)swift_allocObject(&unk_100524AE0, 40, 7);
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = ObjectType;
  v16 = sub_1001F7C64;
  v17 = v4;
  aBlock = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = 0;
  v14 = sub_1001F8998;
  v15 = &unk_100524AF8;
  v9 = _Block_copy(&aBlock);
  swift_release(v17);
  objc_msgSend(v10, "addFinishBlock:", v9);
  _Block_release(v9);

}

void sub_1001F79FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  void **aBlock;
  int v33;
  int v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void (*v37)();
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v22 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v42 = 0;
  v41 = 0;
  v39 = 0;
  v40 = 0;
  v23 = 0;
  v26 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v26 - 8);
  v16 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(0);
  v25 = (char *)&v16 - v16;
  v29 = type metadata accessor for DispatchQoS(v5);
  v27 = *(_QWORD *)(v29 - 8);
  v17 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v23);
  v28 = (char *)&v16 - v17;
  v42 = v6;
  v41 = v7;
  v39 = v8;
  v40 = v9;
  sub_1001F8F04();
  v31 = (id)static OS_dispatch_queue.main.getter();
  v10 = v22;
  swift_errorRetain(v18);
  swift_retain(v20);
  v11 = (_QWORD *)swift_allocObject(&unk_100524B78, 56, 7);
  v12 = v18;
  v13 = v19;
  v14 = v20;
  v15 = v21;
  v11[2] = v22;
  v11[3] = v12;
  v11[4] = v13;
  v11[5] = v14;
  v11[6] = v15;
  v37 = sub_1001F8FB4;
  v38 = v11;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = 0;
  v35 = sub_10023517C;
  v36 = &unk_100524B90;
  v30 = _Block_copy(&aBlock);
  swift_release(v38);
  sub_1001FB150();
  sub_1001FB164();
  OS_dispatch_queue.async(group:qos:flags:execute:)(v23, v28, v25, v30);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  _Block_release(v30);

}

uint64_t sub_1001F7C28()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_1001F7C64(void *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1001F79FC(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1001F7C74(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE **v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE **v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  id v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  uint32_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  NSObject *v104;
  int v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  uint32_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  NSObject *v121;
  int v122;
  void *v123;
  uint64_t v124;
  void (*v125)(_QWORD);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  unint64_t v132;
  char *v133;
  void *v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint32_t v141;
  void *v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint32_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;

  v134 = a1;
  v127 = a2;
  v125 = a3;
  v126 = a4;
  v153 = 0;
  v152 = 0;
  v150 = 0;
  v151 = 0;
  v124 = 0;
  v142 = 0;
  v128 = type metadata accessor for Logger(0);
  v129 = *(_QWORD *)(v128 - 8);
  v130 = (*(_QWORD *)(v129 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v134);
  v131 = (char *)v70 - v130;
  v132 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (void *)__chkstk_darwin(v4);
  v133 = (char *)v70 - v132;
  v153 = v6;
  v152 = v7;
  v150 = v8;
  v151 = v9;
  v10 = v6;
  if (v134)
  {
    v123 = v134;
    v38 = v131;
    v88 = v134;
    v142 = v134;
    v39 = sub_1001F76E4();
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v38, v39, v128);
    v40 = v88;
    v95 = 7;
    v41 = swift_allocObject(&unk_100524C90, 24, 7);
    v96 = v41;
    *(_QWORD *)(v41 + 16) = v88;
    v104 = Logger.logObject.getter(v41);
    v105 = static os_log_type_t.default.getter();
    v91 = &v140;
    v140 = 12;
    v89 = sub_1001EB1EC();
    v90 = sub_1001EB254();
    v42 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v141, v91, &type metadata for UInt32, &type metadata for Int, v89, v90, v42);
    v92 = v141;
    v93 = 17;
    v43 = swift_allocObject(&unk_100524CB8, 17, v95);
    v44 = v93;
    v45 = v95;
    v98 = v43;
    *(_BYTE *)(v43 + 16) = 64;
    v46 = swift_allocObject(&unk_100524CE0, v44, v45);
    v47 = v95;
    v99 = v46;
    *(_BYTE *)(v46 + 16) = 8;
    v94 = 32;
    v48 = swift_allocObject(&unk_100524D08, 32, v47);
    v49 = v94;
    v50 = v95;
    v51 = v48;
    v52 = v96;
    v97 = v51;
    *(_QWORD *)(v51 + 16) = sub_1001E8E1C;
    *(_QWORD *)(v51 + 24) = v52;
    v53 = swift_allocObject(&unk_100524D30, v49, v50);
    v54 = v97;
    v101 = v53;
    *(_QWORD *)(v53 + 16) = sub_1001ED524;
    *(_QWORD *)(v53 + 24) = v54;
    v103 = sub_10003A0C8(qword_1005A5580);
    v100 = _allocateUninitializedArray<A>(_:)(3, v103);
    v102 = v55;
    swift_retain(v98);
    v56 = v99;
    v57 = v98;
    v58 = v102;
    *v102 = sub_1001ED4B8;
    v58[1] = v57;
    swift_retain(v56);
    v59 = v101;
    v60 = v99;
    v61 = v102;
    v102[2] = sub_1001ED4B8;
    v61[3] = v60;
    swift_retain(v59);
    v62 = v100;
    v63 = v101;
    v64 = v102;
    v102[4] = sub_1001ED6A8;
    v64[5] = v63;
    sub_10003CB20();
    swift_bridgeObjectRelease(v62);
    if (os_log_type_enabled(v104, (os_log_type_t)v105))
    {
      v65 = v124;
      v81 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
      v80 = sub_10003A0C8(&qword_1005A3AD0);
      v82 = sub_1001ED340(1, v80, v80);
      v83 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v84 = &v139;
      v139 = v81;
      v85 = &v138;
      v138 = v82;
      v86 = &v137;
      v137 = v83;
      sub_1001ED398(2, &v139);
      sub_1001ED398(1, v84);
      v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v136 = v98;
      sub_1001ED3AC(&v135, (uint64_t)v84, (uint64_t)v85, (uint64_t)v86);
      v87 = v65;
      if (v65)
      {
        __break(1u);
      }
      else
      {
        v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v136 = v99;
        sub_1001ED3AC(&v135, (uint64_t)&v139, (uint64_t)&v138, (uint64_t)&v137);
        v79 = 0;
        v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
        v136 = v101;
        sub_1001ED3AC(&v135, (uint64_t)&v139, (uint64_t)&v138, (uint64_t)&v137);
        _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v105, "AMS returned shouldAttemptReview: %@", v81, v92);
        sub_1001ED3F0(v82, 1);
        sub_1001ED3F0(v83, 0);
        UnsafeMutablePointer.deallocate()();
        swift_release(v98);
        swift_release(v99);
        swift_release(v101);
      }
    }
    else
    {
      swift_release(v98);
      swift_release(v99);
      swift_release(v101);
    }
    v66 = v126;

    (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v128);
    swift_retain(v66);
    v67 = objc_msgSend(v88, "BOOLValue");
    v125(v67 & 1);
    swift_release(v126);

  }
  else
  {
    v11 = v133;
    v12 = sub_1001F76E4();
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v11, v12, v128);
    swift_errorRetain(v127);
    v112 = 7;
    v113 = swift_allocObject(&unk_100524BC8, 24, 7);
    *(_QWORD *)(v113 + 16) = v127;
    sub_10003DB7C();
    v14 = swift_bridgeObjectRelease(v13);
    v121 = Logger.logObject.getter(v14);
    v122 = static os_log_type_t.error.getter();
    v108 = &v148;
    v148 = 12;
    v106 = sub_1001EB1EC();
    v107 = sub_1001EB254();
    v15 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v149, v108, &type metadata for UInt32, &type metadata for Int, v106, v107, v15);
    v109 = v149;
    v110 = 17;
    v16 = swift_allocObject(&unk_100524BF0, 17, v112);
    v17 = v110;
    v18 = v112;
    v115 = v16;
    *(_BYTE *)(v16 + 16) = 64;
    v19 = swift_allocObject(&unk_100524C18, v17, v18);
    v20 = v112;
    v116 = v19;
    *(_BYTE *)(v19 + 16) = 8;
    v111 = 32;
    v21 = swift_allocObject(&unk_100524C40, 32, v20);
    v22 = v111;
    v23 = v112;
    v24 = v21;
    v25 = v113;
    v114 = v24;
    *(_QWORD *)(v24 + 16) = sub_1001F9064;
    *(_QWORD *)(v24 + 24) = v25;
    v26 = swift_allocObject(&unk_100524C68, v22, v23);
    v27 = v114;
    v118 = v26;
    *(_QWORD *)(v26 + 16) = sub_1001F90F8;
    *(_QWORD *)(v26 + 24) = v27;
    v120 = sub_10003A0C8(qword_1005A5580);
    v117 = _allocateUninitializedArray<A>(_:)(3, v120);
    v119 = v28;
    swift_retain(v115);
    v29 = v116;
    v30 = v115;
    v31 = v119;
    *v119 = sub_1001ED4B8;
    v31[1] = v30;
    swift_retain(v29);
    v32 = v118;
    v33 = v116;
    v34 = v119;
    v119[2] = sub_1001ED4B8;
    v34[3] = v33;
    swift_retain(v32);
    v35 = v117;
    v36 = v118;
    v37 = v119;
    v119[4] = sub_1001ED6A8;
    v37[5] = v36;
    sub_10003CB20();
    swift_bridgeObjectRelease(v35);
    if (os_log_type_enabled(v121, (os_log_type_t)v122))
    {
      v68 = v124;
      v72 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
      v71 = sub_10003A0C8(&qword_1005A3AD0);
      v73 = sub_1001ED340(1, v71, v71);
      v74 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v75 = &v147;
      v147 = v72;
      v76 = &v146;
      v146 = v73;
      v77 = &v145;
      v145 = v74;
      sub_1001ED398(2, &v147);
      sub_1001ED398(1, v75);
      v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v144 = v115;
      sub_1001ED3AC(&v143, (uint64_t)v75, (uint64_t)v76, (uint64_t)v77);
      v78 = v68;
      if (v68)
      {
        __break(1u);
      }
      else
      {
        v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v144 = v116;
        sub_1001ED3AC(&v143, (uint64_t)&v147, (uint64_t)&v146, (uint64_t)&v145);
        v70[1] = 0;
        v143 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
        v144 = v118;
        sub_1001ED3AC(&v143, (uint64_t)&v147, (uint64_t)&v146, (uint64_t)&v145);
        _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v122, "AMS failed to check if should prompt: %@. Assuming should not prompt.", v72, v109);
        sub_1001ED3F0(v73, 1);
        sub_1001ED3F0(v74, 0);
        UnsafeMutablePointer.deallocate()();
        swift_release(v115);
        swift_release(v116);
        swift_release(v118);
      }
    }
    else
    {
      swift_release(v115);
      swift_release(v116);
      swift_release(v118);
    }
    v69 = v126;

    (*(void (**)(char *, uint64_t))(v129 + 8))(v133, v128);
    swift_retain(v69);
    v125(0);
    swift_release(v126);
  }
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1001F8974()
{
  swift_errorRetain();
}

uint64_t sub_1001F8998(uint64_t a1, void *a2, void *a3)
{
  id v3;
  id v4;
  void *v6;
  void (*v7)(void *);
  uint64_t v8;

  v7 = *(void (**)(void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_retain(v8);
  v3 = a2;
  v4 = a3;
  if (a3)
    v6 = a3;
  else
    v6 = 0;
  v7(a2);
  swift_errorRelease(v6);

  return swift_release(v8);
}

uint64_t sub_1001F8A4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1001F8A90(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001F8B30(char a1, uint64_t a2)
{
  char v2;

  v2 = _convertBoolToObjCBool(_:)(a1 & 1);
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, v2 & 1);
}

uint64_t sub_1001F8B68()
{
  uint64_t v0;
  uint64_t v2;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001F8BA4(char a1)
{
  uint64_t v1;

  return sub_1001F8B30(a1 & 1, *(_QWORD *)(v1 + 16));
}

void sub_1001F8BB0()
{
  uint64_t v0;
  id v1;
  id v2;

  v2 = *(id *)(v0 + OBJC_IVAR____TtC10MobileMail37AppStoreReviewAMSRequirementsProvider_storeReview);
  v1 = v2;
  objc_msgSend(v2, "didAttemptPromptReview");

}

id sub_1001F8C3C()
{
  void *v0;
  id v1;
  uint64_t *v2;
  uint64_t *v3;
  id v4;
  id v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  objc_super v14;
  void *v15;

  v1 = v0;
  v15 = v0;
  v11 = OBJC_IVAR____TtC10MobileMail37AppStoreReviewAMSRequirementsProvider_storeReview;
  sub_1001F8DF8();
  sub_1001F8E5C();
  v2 = (uint64_t *)sub_1001F7574();
  v7 = *v2;
  v8 = v2[1];
  swift_bridgeObjectRetain(v8);
  v3 = (uint64_t *)sub_1001F7608();
  v9 = *v3;
  v10 = v3[1];
  swift_bridgeObjectRetain(v10);
  v4 = sub_1001F7744(v7, v8, v9, v10);
  *(_QWORD *)&v12[v11] = sub_1001F77DC((uint64_t)v4);

  v14.receiver = v15;
  v14.super_class = (Class)type metadata accessor for AppStoreReviewAMSRequirementsProvider();
  v13 = objc_msgSendSuper2(&v14, "init");
  v5 = v13;
  v15 = v13;

  return v13;
}

id sub_1001F8D68()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppStoreReviewAMSRequirementsProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *type metadata accessor for AppStoreReviewAMSRequirementsProvider.AMSConstants()
{
  return &unk_100524B58;
}

unint64_t sub_1001F8DF8()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4508;
  if (!qword_1005A4508)
  {
    v0 = objc_opt_self(AMSSharedStoreReview);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4508);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_1001F8E5C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4510;
  if (!qword_1005A4510)
  {
    v0 = objc_opt_self(AMSBag);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4510);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_1001F8EC0(uint64_t a1)
{
  void *v1;
  id v4;

  v4 = objc_msgSend(v1, "initWithBag:");
  swift_unknownObjectRelease(a1);
  return v4;
}

unint64_t sub_1001F8F04()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A6A70;
  if (!qword_1005A6A70)
  {
    v0 = objc_opt_self(OS_dispatch_queue);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A6A70);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1001F8F68()
{
  uint64_t v0;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v2, 56);
}

void sub_1001F8FB4()
{
  uint64_t v0;

  sub_1001F7C74(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001F8FCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1001F9010(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001F9028()
{
  uint64_t v0;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001F9064()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 16);
  sub_1001F8974();
  return result;
}

uint64_t sub_1001F906C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F9094()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F90BC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F90F8()
{
  uint64_t v0;

  return sub_10024E264(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1001F9104()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F9140()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001F917C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F91A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001F91CC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F9208()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001F9244()
{
  uint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  sub_10003A134(v2, qword_1005A4518);
  sub_10003A088(v2, (uint64_t)qword_1005A4518);
  v0 = type metadata accessor for AppStoreReviewManager();
  return static Logger.mailUILogger<A>(for:)(v0);
}

uint64_t type metadata accessor for AppStoreReviewManager()
{
  return objc_opt_self(_TtC10MobileMail21AppStoreReviewManager);
}

uint64_t sub_1001F92CC()
{
  uint64_t v0;

  if (qword_1005A3620 != -1)
    swift_once(&qword_1005A3620, sub_1001F9244);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005A4518);
}

void *sub_1001F932C()
{
  return &unk_1004CB600;
}

id sub_1001F9338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v4;

  v4 = objc_allocWithZone(v3);
  return sub_1001F9380(a1, a2, a3);
}

id sub_1001F9380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;
  char *v11;
  id v15;
  objc_super v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v19 = a1;
  v18 = a2;
  v17 = a3;
  v4 = v3;
  v5 = v3;
  v6 = v3;
  v7 = v3;
  v20 = v3;
  v10 = OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_analyticsCollector;
  sub_1001F94E8();
  *(_QWORD *)&v11[v10] = sub_1001E7394();

  swift_unknownObjectRetain(a1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_eligibilityTracker] = a1;

  swift_unknownObjectRetain(a2);
  *(_QWORD *)&v11[OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_requirementStorage] = a2;

  swift_unknownObjectRetain(a3);
  *(_QWORD *)&v11[OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_externalRequirementsProvider] = a3;

  v16.receiver = v20;
  v16.super_class = (Class)type metadata accessor for AppStoreReviewManager();
  v15 = objc_msgSendSuper2(&v16, "init");
  v8 = v15;
  v20 = v15;
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a2);
  swift_unknownObjectRelease(a1);

  return v15;
}

unint64_t sub_1001F94E8()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4538;
  if (!qword_1005A4538)
  {
    v0 = objc_opt_self(EMCoreAnalyticsCollector);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4538);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_1001F95A4(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v3;

  v3 = objc_allocWithZone(v2);
  return sub_1001F95E4(a1, a2);
}

id sub_1001F95E4(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;
  id v7;
  id v8;
  void *v9;

  type metadata accessor for AppStoreReviewAMSRequirementsProvider();
  v8 = ConversationNavigationBarItemsManager.__allocating_init()();
  v2 = v8;
  v7 = objc_msgSend(v9, "initWithEligibilityTracker:requirementStorage:externalRequirementsProvider:", a1, a2, v8);
  swift_unknownObjectRelease(v8);
  v3 = v7;

  swift_unknownObjectRelease(a2);
  swift_unknownObjectRelease(a1);

  return v7;
}

uint64_t sub_1001F96F4(void *a1, uint64_t a2)
{
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE **v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t ObjectType;
  uint64_t v61;
  void *v62;
  id v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint32_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  NSObject *v85;
  int v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint32_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v63 = a1;
  v68 = a2;
  v62 = v2;
  ObjectType = swift_getObjectType(v2);
  v96 = 0;
  v95 = 0;
  v94 = 0;
  v61 = 0;
  v67 = type metadata accessor for Logger(0);
  v66 = *(_QWORD *)(v67 - 8);
  v64 = (*(_QWORD *)(v66 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = (char *)&v44 - v64;
  v65 = (char *)&v44 - v64;
  v96 = __chkstk_darwin(v63);
  v95 = v4;
  v94 = v5;
  v6 = sub_1001F92CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v3, v6, v67);
  v76 = 7;
  v7 = swift_allocObject(&unk_100524D58, 24, 7);
  v69 = v7;
  *(_QWORD *)(v7 + 16) = v68;
  swift_retain(v7);
  v75 = 32;
  v8 = swift_allocObject(&unk_100524D80, 32, v76);
  v9 = v69;
  v77 = v8;
  *(_QWORD *)(v8 + 16) = sub_1001F5D7C;
  *(_QWORD *)(v8 + 24) = v9;
  v10 = swift_release(v9);
  v85 = Logger.logObject.getter(v10);
  v86 = static os_log_type_t.default.getter();
  v72 = &v92;
  v92 = 12;
  v70 = sub_1001EB1EC();
  v71 = sub_1001EB254();
  v11 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v93, v72, &type metadata for UInt32, &type metadata for Int, v70, v71, v11);
  v73 = v93;
  v74 = 17;
  v12 = swift_allocObject(&unk_100524DA8, 17, v76);
  v13 = v74;
  v14 = v76;
  v79 = v12;
  *(_BYTE *)(v12 + 16) = 32;
  v15 = swift_allocObject(&unk_100524DD0, v13, v14);
  v16 = v75;
  v17 = v76;
  v80 = v15;
  *(_BYTE *)(v15 + 16) = 8;
  v18 = swift_allocObject(&unk_100524DF8, v16, v17);
  v19 = v75;
  v20 = v76;
  v21 = v18;
  v22 = v77;
  v78 = v21;
  *(_QWORD *)(v21 + 16) = sub_1001FE848;
  *(_QWORD *)(v21 + 24) = v22;
  v23 = swift_allocObject(&unk_100524E20, v19, v20);
  v24 = v78;
  v82 = v23;
  *(_QWORD *)(v23 + 16) = sub_1001ED524;
  *(_QWORD *)(v23 + 24) = v24;
  v84 = sub_10003A0C8(qword_1005A5580);
  v81 = _allocateUninitializedArray<A>(_:)(3, v84);
  v83 = v25;
  swift_retain(v79);
  v26 = v80;
  v27 = v79;
  v28 = v83;
  *v83 = sub_1001ED4B8;
  v28[1] = v27;
  swift_retain(v26);
  v29 = v82;
  v30 = v80;
  v31 = v83;
  v83[2] = sub_1001ED4B8;
  v31[3] = v30;
  swift_retain(v29);
  v32 = v81;
  v33 = v82;
  v34 = v83;
  v83[4] = sub_1001F6408;
  v34[5] = v33;
  sub_10003CB20();
  swift_bridgeObjectRelease(v32);
  if (os_log_type_enabled(v85, (os_log_type_t)v86))
  {
    v35 = v61;
    v53 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v52 = sub_10003A0C8(&qword_1005A3AD0);
    v54 = sub_1001ED340(0, v52, v52);
    v55 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v56 = &v91;
    v91 = v53;
    v57 = &v90;
    v90 = v54;
    v58 = &v89;
    v89 = v55;
    sub_1001ED398(2, &v91);
    sub_1001ED398(1, v56);
    v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v88 = v79;
    sub_1001ED3AC(&v87, (uint64_t)v56, (uint64_t)v57, (uint64_t)v58);
    v59 = v35;
    if (v35)
    {
      __break(1u);
    }
    else
    {
      v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v88 = v80;
      sub_1001ED3AC(&v87, (uint64_t)&v91, (uint64_t)&v90, (uint64_t)&v89);
      v51 = 0;
      v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v88 = v82;
      sub_1001ED3AC(&v87, (uint64_t)&v91, (uint64_t)&v90, (uint64_t)&v89);
      _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v86, "Received attempt to show prompt for reason: %s", v53, v73);
      sub_1001ED3F0(v54, 0);
      sub_1001ED3F0(v55, 1);
      UnsafeMutablePointer.deallocate()();
      swift_release(v79);
      swift_release(v80);
      swift_release(v82);
    }
  }
  else
  {
    swift_release(v79);
    swift_release(v80);
    swift_release(v82);
  }
  v36 = v62;

  (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
  v45 = 24;
  v47 = 7;
  v50 = swift_allocObject(&unk_100524E48, 24, 7);
  v44 = v50 + 16;
  v37 = v36;
  swift_unknownObjectWeakInit(v44);

  v49 = swift_allocObject(&unk_100524E70, v45, v47);
  v46 = v49 + 16;
  v38 = v63;
  swift_unknownObjectWeakInit(v46);

  swift_retain(v50);
  swift_retain(v49);
  v39 = swift_allocObject(&unk_100524E98, 40, v47);
  v40 = ObjectType;
  v41 = (_QWORD *)v39;
  v42 = v49;
  v48 = v41;
  v41[2] = v50;
  v41[3] = v42;
  v41[4] = v40;
  sub_1001FB254((void (*)(_QWORD))sub_1001FEA74, (uint64_t)v41);
  swift_release(v48);
  swift_release(v49);
  return swift_release(v50);
}

uint64_t sub_1001F9E5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

void sub_1001F9E84(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t *v34;
  uint64_t *v35;
  _BYTE **v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void (*v51)(char *, uint64_t);
  id v52;
  id v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint32_t v58;
  int v59;
  NSObject *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *Strong;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  void **aBlock;
  int v91;
  int v92;
  uint64_t (*v93)(uint64_t);
  void *v94;
  void (*v95)();
  _QWORD *v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;

  v85 = a1;
  v84 = a2;
  v83 = a3;
  v66 = a4;
  v107 = 0;
  v106 = 0;
  v105 = 0;
  v67 = 0;
  v98 = 0;
  v76 = 0;
  v68 = type metadata accessor for DispatchWorkItemFlags(0);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = (*(_QWORD *)(v69 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(0);
  v71 = (char *)&v27 - v70;
  v72 = type metadata accessor for DispatchQoS(v4);
  v73 = *(_QWORD *)(v72 - 8);
  v74 = (*(_QWORD *)(v73 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v76);
  v75 = (char *)&v27 - v74;
  v77 = type metadata accessor for DispatchTime(v5);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = (*(_QWORD *)(v78 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v76);
  v80 = (char *)&v27 - v79;
  v81 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v6);
  v82 = (char *)&v27 - v81;
  v86 = type metadata accessor for Logger(v8);
  v87 = *(_QWORD *)(v86 - 8);
  v88 = (*(_QWORD *)(v87 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v85);
  v89 = (char *)&v27 - v88;
  v107 = v9 & 1;
  v106 = v10 + 16;
  v105 = v11 + 16;
  if ((v9 & 1) != 0)
  {
    v63 = v84 + 16;
    v64 = (char *)&v104 + 4;
    swift_beginAccess(v84 + 16);
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v63);
    swift_endAccess(v64);
    if (Strong)
    {
      v62 = Strong;
      v54 = Strong;
      v98 = Strong;
      sub_1001F8F04();
      v52 = (id)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)(v80, 2.0);
      v51 = *(void (**)(char *, uint64_t))(v78 + 8);
      v51(v80, v77);
      v42 = 24;
      v47 = 7;
      v49 = swift_allocObject(&unk_100524E48, 24, 7);
      v40 = v49 + 16;
      v17 = v54;
      v41 = v54;
      swift_unknownObjectWeakInit(v40);

      v48 = swift_allocObject(&unk_100524E70, v42, v47);
      v45 = v48 + 16;
      v43 = v83 + 16;
      v44 = &v97;
      swift_beginAccess(v83 + 16);
      v46 = (id)swift_unknownObjectWeakLoadStrong(v43);
      swift_endAccess(v44);
      swift_unknownObjectWeakInit(v45);

      swift_retain(v49);
      swift_retain(v48);
      v18 = swift_allocObject(&unk_100525460, 40, v47);
      v19 = v66;
      v20 = (_QWORD *)v18;
      v21 = v48;
      v20[2] = v49;
      v20[3] = v21;
      v20[4] = v19;
      v95 = sub_1001FF4D0;
      v96 = v20;
      aBlock = _NSConcreteStackBlock;
      v91 = 1107296256;
      v92 = 0;
      v93 = sub_10023517C;
      v94 = &unk_100525478;
      v50 = _Block_copy(&aBlock);
      swift_release(v96);
      swift_release(v48);
      swift_release(v49);
      sub_1001FB150();
      sub_1001FB164();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v82, v75, v71, v50);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);
      _Block_release(v50);
      v51(v82, v77);

      v53 = *(id *)&v54[OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_eligibilityTracker];
      swift_unknownObjectRetain(v53);
      swift_getObjectType(v53);
      objc_msgSend(v53, "resetCounts");
      swift_unknownObjectRelease(v53);

    }
    else
    {
      v12 = v89;
      v13 = sub_1001F92CC();
      v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 16))(v12, v13, v86);
      v60 = Logger.logObject.getter(v14);
      v59 = static os_log_type_t.error.getter();
      v57 = &v103;
      v103 = 2;
      v55 = sub_1001EB1EC();
      v56 = sub_1001EB254();
      v15 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(&v104, v57, &type metadata for UInt32, &type metadata for Int, v55, v56, v15);
      v58 = v104;
      v16 = sub_10003A0C8(qword_1005A5580);
      v61 = _allocateUninitializedArray<A>(_:)(0, v16);
      if (os_log_type_enabled(v60, (os_log_type_t)v59))
      {
        v22 = v67;
        v30 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
        v28 = sub_10003A0C8(&qword_1005A3AD0);
        v29 = 0;
        v31 = sub_1001ED340(0, v28, v28);
        v32 = sub_1001ED340(v29, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v36 = &v102;
        v102 = v30;
        v37 = &v101;
        v101 = v31;
        v34 = &v100;
        v100 = v32;
        v33 = 0;
        sub_1001ED398(0, &v102);
        sub_1001ED398(v33, v36);
        v99 = v61;
        v35 = &v27;
        __chkstk_darwin(&v27);
        v23 = v37;
        v24 = &v27 - 6;
        v38 = &v27 - 6;
        v24[2] = (uint64_t)v36;
        v24[3] = (uint64_t)v23;
        v24[4] = v25;
        v39 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
        v26 = sub_1001F5C14();
        Sequence.forEach(_:)(sub_1001F5BE8, v38, v39, v26);
        if (v22)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v59, "self is nil, will not show prompt or reset eligibility counts", v30, v58);
          v27 = 0;
          sub_1001ED3F0(v31, 0);
          sub_1001ED3F0(v32, v27);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v61);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v61);
      }

      (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v86);
    }
  }
}

void sub_1001FA82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t *v33;
  uint64_t *v34;
  _BYTE **v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t *v46;
  uint64_t *v47;
  _BYTE **v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint32_t v56;
  int v57;
  NSObject *v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  char *v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint32_t v68;
  int v69;
  NSObject *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  void *Strong;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v76 = a1;
  v75 = a2;
  v101 = 0;
  v100 = 0;
  v74 = 0;
  v73 = 0;
  v93 = 0;
  v86 = 0;
  v77 = type metadata accessor for Logger(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = (*(_QWORD *)(v78 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v76);
  v80 = (char *)&v26 - v79;
  v81 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v82 = (char *)&v26 - v81;
  v83 = v4 + 16;
  v101 = v4 + 16;
  v100 = v5 + 16;
  v84 = (char *)&v99 + 4;
  swift_beginAccess(v4 + 16);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v83);
  swift_endAccess(v84);
  if (Strong)
  {
    v72 = Strong;
    v61 = Strong;
    v93 = Strong;
    v62 = v75 + 16;
    v63 = (char *)&v92 + 4;
    swift_beginAccess(v75 + 16);
    v64 = (void *)swift_unknownObjectWeakLoadStrong(v62);
    swift_endAccess(v63);
    if (v64)
    {
      v60 = v64;
      v52 = v64;
      v86 = v64;
      sub_1001FBB7C(v64);

    }
    else
    {
      v11 = v80;
      v12 = sub_1001F92CC();
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 16))(v11, v12, v77);
      v58 = Logger.logObject.getter(v13);
      v57 = static os_log_type_t.error.getter();
      v55 = &v91;
      v91 = 2;
      v53 = sub_1001EB1EC();
      v54 = sub_1001EB254();
      v14 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(&v92, v55, &type metadata for UInt32, &type metadata for Int, v53, v54, v14);
      v56 = v92;
      v15 = sub_10003A0C8(qword_1005A5580);
      v59 = _allocateUninitializedArray<A>(_:)(0, v15);
      if (os_log_type_enabled(v58, (os_log_type_t)v57))
      {
        v16 = v73;
        v42 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
        v40 = sub_10003A0C8(&qword_1005A3AD0);
        v41 = 0;
        v43 = sub_1001ED340(0, v40, v40);
        v44 = sub_1001ED340(v41, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v48 = &v90;
        v90 = v42;
        v49 = &v89;
        v89 = v43;
        v46 = &v88;
        v88 = v44;
        v45 = 0;
        sub_1001ED398(0, &v90);
        sub_1001ED398(v45, v48);
        v87 = v59;
        v47 = &v26;
        __chkstk_darwin(&v26);
        v17 = v49;
        v18 = &v26 - 6;
        v50 = &v26 - 6;
        v18[2] = (uint64_t)v48;
        v18[3] = (uint64_t)v17;
        v18[4] = v19;
        v51 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
        v20 = sub_1001F5C14();
        Sequence.forEach(_:)(sub_1001F5BE8, v50, v51, v20);
        if (v16)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v57, "Originating UIWindowScene deallocated, will not show prompt", v42, v56);
          v39 = 0;
          sub_1001ED3F0(v43, 0);
          sub_1001ED3F0(v44, v39);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v59);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v59);
      }

      (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v77);
    }
  }
  else
  {
    v6 = v82;
    v7 = sub_1001F92CC();
    v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 16))(v6, v7, v77);
    v70 = Logger.logObject.getter(v8);
    v69 = static os_log_type_t.error.getter();
    v67 = &v98;
    v98 = 2;
    v65 = sub_1001EB1EC();
    v66 = sub_1001EB254();
    v9 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v99, v67, &type metadata for UInt32, &type metadata for Int, v65, v66, v9);
    v68 = v99;
    v10 = sub_10003A0C8(qword_1005A5580);
    v71 = _allocateUninitializedArray<A>(_:)(0, v10);
    if (os_log_type_enabled(v70, (os_log_type_t)v69))
    {
      v21 = v73;
      v29 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v27 = sub_10003A0C8(&qword_1005A3AD0);
      v28 = 0;
      v30 = sub_1001ED340(0, v27, v27);
      v31 = sub_1001ED340(v28, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v35 = &v97;
      v97 = v29;
      v36 = &v96;
      v96 = v30;
      v33 = &v95;
      v95 = v31;
      v32 = 0;
      sub_1001ED398(0, &v97);
      sub_1001ED398(v32, v35);
      v94 = v71;
      v34 = &v26;
      __chkstk_darwin(&v26);
      v22 = v36;
      v23 = &v26 - 6;
      v37 = &v26 - 6;
      v23[2] = (uint64_t)v35;
      v23[3] = (uint64_t)v22;
      v23[4] = v24;
      v38 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v25 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v37, v38, v25);
      if (v21)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v69, "self is nil, will not show prompt", v29, v68);
        v26 = 0;
        sub_1001ED3F0(v30, 0);
        sub_1001ED3F0(v31, v26);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v71);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v71);
    }

    (*(void (**)(char *, uint64_t))(v78 + 8))(v82, v77);
  }
}

uint64_t sub_1001FB150()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1001FB164()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_10024E1AC(0);
  type metadata accessor for DispatchWorkItemFlags(0);
  v4 = v2;
  sub_1001FF53C();
  v3 = sub_10003A0C8(&qword_1005A45B8);
  v0 = sub_1001FF5AC();
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v4, v3, v0);
}

uint64_t sub_1001FB254(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t *v27;
  uint64_t *v28;
  _BYTE **v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint32_t v36;
  int v37;
  NSObject *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  void **aBlock;
  int v52;
  int v53;
  uint64_t (*v54)(uint64_t, char);
  void *v55;
  uint64_t (*v56)(char);
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint32_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v46 = a1;
  v45 = a2;
  ObjectType = swift_getObjectType(v2);
  v65 = 0;
  v66 = 0;
  v64 = 0;
  v44 = 0;
  v47 = type metadata accessor for Logger(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = (*(_QWORD *)(v48 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v50 = (char *)&v19 - v49;
  v65 = __chkstk_darwin(v46);
  v66 = v3;
  v64 = v2;
  if (sub_1001FC4F4())
  {
    v41 = *(id *)(v42 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_externalRequirementsProvider);
    swift_unknownObjectRetain(v41);
    swift_getObjectType(v41);
    swift_retain(v45);
    v4 = (_QWORD *)swift_allocObject(&unk_100524EC0, 40, 7);
    v5 = v45;
    v6 = ObjectType;
    v4[2] = v46;
    v4[3] = v5;
    v4[4] = v6;
    v56 = sub_1001FEAC4;
    v57 = v4;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = 0;
    v54 = sub_1001FBB20;
    v55 = &unk_100524ED8;
    v40 = _Block_copy(&aBlock);
    swift_release(v57);
    objc_msgSend(v41, "checkPromptAllowed:", v40);
    _Block_release(v40);
    return swift_unknownObjectRelease(v41);
  }
  else
  {
    v8 = v50;
    v9 = sub_1001F92CC();
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 16))(v8, v9, v47);
    v38 = Logger.logObject.getter(v10);
    v37 = static os_log_type_t.default.getter();
    v35 = &v62;
    v62 = 2;
    v33 = sub_1001EB1EC();
    v34 = sub_1001EB254();
    v11 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v63, v35, &type metadata for UInt32, &type metadata for Int, v33, v34, v11);
    v36 = v63;
    v12 = sub_10003A0C8(qword_1005A5580);
    v39 = _allocateUninitializedArray<A>(_:)(0, v12);
    if (os_log_type_enabled(v38, (os_log_type_t)v37))
    {
      v13 = v44;
      v23 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v21 = sub_10003A0C8(&qword_1005A3AD0);
      v22 = 0;
      v24 = sub_1001ED340(0, v21, v21);
      v25 = sub_1001ED340(v22, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v29 = &v61;
      v61 = v23;
      v30 = &v60;
      v60 = v24;
      v27 = &v59;
      v59 = v25;
      v26 = 0;
      sub_1001ED398(0, &v61);
      sub_1001ED398(v26, v29);
      v58 = v39;
      v28 = &v19;
      __chkstk_darwin(&v19);
      v14 = v30;
      v15 = &v19 - 6;
      v31 = &v19 - 6;
      v15[2] = (uint64_t)v29;
      v15[3] = (uint64_t)v14;
      v15[4] = v16;
      v32 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v17 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v31, v32, v17);
      if (v13)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v37, "Criteria not met, not eligible for prompt", v23, v36);
        v20 = 0;
        sub_1001ED3F0(v24, 0);
        sub_1001ED3F0(v25, v20);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v39);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v39);
    }
    v18 = v45;

    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
    swift_retain(v18);
    v46(0);
    return swift_release(v45);
  }
}

uint64_t sub_1001FB758(unsigned int a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t *v23;
  uint64_t *v24;
  _BYTE **v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint32_t v32;
  int v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD);
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint32_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  v39 = a1;
  v38 = a2;
  v37 = a3;
  v52 = 0;
  v50 = 0;
  v51 = 0;
  v36 = 0;
  v40 = type metadata accessor for Logger(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (*(_QWORD *)(v41 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v43 = (char *)&v16 - v42;
  v52 = __chkstk_darwin(v39) & 1;
  v50 = v3;
  v51 = v4;
  if (!v52)
  {
    v5 = v43;
    v6 = sub_1001F92CC();
    v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v5, v6, v40);
    v34 = Logger.logObject.getter(v7);
    v33 = static os_log_type_t.default.getter();
    v31 = &v48;
    v48 = 2;
    v29 = sub_1001EB1EC();
    v30 = sub_1001EB254();
    v8 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v49, v31, &type metadata for UInt32, &type metadata for Int, v29, v30, v8);
    v32 = v49;
    v9 = sub_10003A0C8(qword_1005A5580);
    v35 = _allocateUninitializedArray<A>(_:)(0, v9);
    if (os_log_type_enabled(v34, (os_log_type_t)v33))
    {
      v10 = v36;
      v19 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v17 = sub_10003A0C8(&qword_1005A3AD0);
      v18 = 0;
      v20 = sub_1001ED340(0, v17, v17);
      v21 = sub_1001ED340(v18, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v25 = &v47;
      v47 = v19;
      v26 = &v46;
      v46 = v20;
      v23 = &v45;
      v45 = v21;
      v22 = 0;
      sub_1001ED398(0, &v47);
      sub_1001ED398(v22, v25);
      v44 = v35;
      v24 = &v16;
      __chkstk_darwin(&v16);
      v11 = v26;
      v12 = &v16 - 6;
      v27 = &v16 - 6;
      v12[2] = (uint64_t)v25;
      v12[3] = (uint64_t)v11;
      v12[4] = v13;
      v28 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v14 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v27, v28, v14);
      if (v10)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v33, "External gate not allowing prompt, not eligible for prompt", v19, v32);
        v16 = 0;
        sub_1001ED3F0(v20, 0);
        sub_1001ED3F0(v21, v16);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v35);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v35);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  }
  swift_retain(v37);
  v38(v39 & 1);
  return swift_release(v37);
}

uint64_t sub_1001FBB20(uint64_t a1, char a2)
{
  char v2;
  void (*v5)(_QWORD);
  uint64_t v6;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  swift_retain(v6);
  v2 = _convertObjCBoolToBool(_:)(a2 & 1);
  v5(v2 & 1);
  return swift_release(v6);
}

uint64_t sub_1001FBB7C(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  id v33[3];
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE **v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint32_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  NSObject *v64;
  int v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint32_t v72;
  uint64_t v73;
  uint64_t v74;

  v48 = a1;
  v74 = 0;
  v73 = 0;
  v42 = 0;
  v47 = type metadata accessor for Logger(0);
  v46 = *(_QWORD *)(v47 - 8);
  v44 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = (char *)v33 - v44;
  v45 = (char *)v33 - v44;
  v74 = __chkstk_darwin(v48);
  v73 = v2;
  v3 = sub_1001F92CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v1, v3, v47);
  v4 = v48;
  v55 = 7;
  v5 = swift_allocObject(&unk_100524F10, 24, 7);
  v6 = v48;
  v56 = v5;
  *(_QWORD *)(v5 + 16) = v48;
  v64 = Logger.logObject.getter(v6);
  v65 = static os_log_type_t.default.getter();
  v51 = &v71;
  v71 = 12;
  v49 = sub_1001EB1EC();
  v50 = sub_1001EB254();
  v7 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v72, v51, &type metadata for UInt32, &type metadata for Int, v49, v50, v7);
  v52 = v72;
  v53 = 17;
  v8 = swift_allocObject(&unk_100524F38, 17, v55);
  v9 = v53;
  v10 = v55;
  v58 = v8;
  *(_BYTE *)(v8 + 16) = 32;
  v11 = swift_allocObject(&unk_100524F60, v9, v10);
  v12 = v55;
  v59 = v11;
  *(_BYTE *)(v11 + 16) = 8;
  v54 = 32;
  v13 = swift_allocObject(&unk_100524F88, 32, v12);
  v14 = v54;
  v15 = v55;
  v16 = v13;
  v17 = v56;
  v57 = v16;
  *(_QWORD *)(v16 + 16) = sub_1001FEB70;
  *(_QWORD *)(v16 + 24) = v17;
  v18 = swift_allocObject(&unk_100524FB0, v14, v15);
  v19 = v57;
  v61 = v18;
  *(_QWORD *)(v18 + 16) = sub_1001ED524;
  *(_QWORD *)(v18 + 24) = v19;
  v63 = sub_10003A0C8(qword_1005A5580);
  v60 = _allocateUninitializedArray<A>(_:)(3, v63);
  v62 = v20;
  swift_retain(v58);
  v21 = v59;
  v22 = v58;
  v23 = v62;
  *v62 = sub_1001ED4B8;
  v23[1] = v22;
  swift_retain(v21);
  v24 = v61;
  v25 = v59;
  v26 = v62;
  v62[2] = sub_1001ED4B8;
  v26[3] = v25;
  swift_retain(v24);
  v27 = v60;
  v28 = v61;
  v29 = v62;
  v62[4] = sub_1001F6408;
  v29[5] = v28;
  sub_10003CB20();
  swift_bridgeObjectRelease(v27);
  if (os_log_type_enabled(v64, (os_log_type_t)v65))
  {
    v30 = v42;
    v35 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v34 = sub_10003A0C8(&qword_1005A3AD0);
    v36 = sub_1001ED340(0, v34, v34);
    v37 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v38 = &v70;
    v70 = v35;
    v39 = &v69;
    v69 = v36;
    v40 = &v68;
    v68 = v37;
    sub_1001ED398(2, &v70);
    sub_1001ED398(1, v38);
    v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v67 = v58;
    sub_1001ED3AC(&v66, (uint64_t)v38, (uint64_t)v39, (uint64_t)v40);
    v41 = v30;
    if (v30)
    {
      __break(1u);
    }
    else
    {
      v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v67 = v59;
      sub_1001ED3AC(&v66, (uint64_t)&v70, (uint64_t)&v69, (uint64_t)&v68);
      v33[1] = 0;
      v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v67 = v61;
      sub_1001ED3AC(&v66, (uint64_t)&v70, (uint64_t)&v69, (uint64_t)&v68);
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v65, "Requesting prompt UI in windowScene with title: %s", v35, v52);
      sub_1001ED3F0(v36, 0);
      sub_1001ED3F0(v37, 1);
      UnsafeMutablePointer.deallocate()();
      swift_release(v58);
      swift_release(v59);
      swift_release(v61);
    }
  }
  else
  {
    swift_release(v58);
    swift_release(v59);
    swift_release(v61);
  }

  (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
  v31 = (void *)objc_opt_self(SKStoreReviewController);
  objc_msgSend(v31, "requestReviewInScene:", v48);
  v33[0] = *(id *)(v43 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_externalRequirementsProvider);
  swift_unknownObjectRetain(v33[0]);
  swift_getObjectType(v33[0]);
  objc_msgSend(v33[0], "didAttemptPrompt");
  return swift_unknownObjectRelease(v33[0]);
}

uint64_t sub_1001FC170(void *a1)
{
  void *v1;
  Swift::String v4;
  Swift::String v5;

  type metadata accessor for AppStoreReviewManager();
  v4._countAndFlagsBits = sub_1001FC210(a1);
  v4._object = v1;
  if (v1)
  {
    v5 = v4;
  }
  else
  {
    v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("nil", 3uLL, 1);
    sub_1001F0D3C((uint64_t)&v4);
  }
  return v5._countAndFlagsBits;
}

uint64_t sub_1001FC210(void *a1)
{
  id v1;
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  id v19;

  v1 = a1;
  v19 = objc_msgSend(a1, "title");
  if (v19)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v16 = v2;

    v17 = v16;
  }
  else
  {
    v17 = 0;
  }
  if (v17)
  {

    v14 = objc_msgSend((id)objc_opt_self(EFDevice), "currentDevice");
    v15 = objc_msgSend(v14, "isInternal");

    if ((v15 & 1) != 0)
    {
      v9 = (id)objc_opt_self(EFPrivacy);
      swift_bridgeObjectRetain(v17);
      v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      v11 = objc_msgSend(v9, "partiallyRedactedStringForString:", v10);

      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v13 = v12;
    }
    else
    {
      v5 = (id)objc_opt_self(EFPrivacy);
      swift_bridgeObjectRetain(v17);
      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      v7 = objc_msgSend(v5, "fullyRedactedStringForString:", v6);

      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v13 = v8;
    }
    swift_bridgeObjectRelease(v17);
    return v13;
  }
  else
  {

    return 0;
  }
}

BOOL sub_1001FC4F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v74;
  int v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  _BYTE **v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t **v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  unint64_t v95;
  uint64_t **v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t *v104;
  uint32_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  NSObject *v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  id v130;
  char *v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  id v137;
  uint64_t (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  uint32_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v154 = 0;
  v152 = 0;
  v149 = 0;
  v146 = 0;
  v126 = type metadata accessor for Logger(0);
  v127 = *(_QWORD *)(v126 - 8);
  v128 = (*(_QWORD *)(v127 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v126);
  v129 = (char *)&v74 - v128;
  v154 = v0;
  v1 = sub_1001F2F28();
  v133 = &v153;
  v153 = v1;
  v2 = v130;
  v131 = &v136;
  v137 = v130;
  v132 = sub_10003A0C8(&qword_1005A43D8);
  v3 = sub_1001FEC64();
  v4 = Dictionary.init<A>(grouping:by:)(v133, sub_1001FEC40, v131, &type metadata for Bool, v132, &protocol witness table for Bool, v3);
  v134 = 0;
  v135 = v4;
  v5 = v129;
  v92 = v4;

  v152 = v92;
  v150 = 1;
  v90 = &v74;
  v91 = 15;
  v6 = __chkstk_darwin(&v150);
  v7 = &v74 - 4;
  v7[2] = (uint64_t *)sub_1001FD27C;
  v7[3] = 0;
  v93 = &type metadata for Bool;
  v94 = &protocol witness table for Bool;
  Dictionary.subscript.getter(&v151, v6, sub_1001F5D18, &v74 - 4, v8, &type metadata for Bool);
  v97 = v151;
  v149 = v151;
  v147 = 0;
  v96 = &v74;
  v95 = (v91 + 32) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(&v147);
  v10 = (char *)&v74 - v95;
  *((_QWORD *)v10 + 2) = sub_1001FD27C;
  *((_QWORD *)v10 + 3) = 0;
  Dictionary.subscript.getter(&v148, v9, sub_1001F5D18, v10, v11, v12);
  v100 = v148;
  v146 = v148;
  v13 = sub_1001F92CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v5, v13, v126);
  swift_bridgeObjectRetain(v97);
  v99 = 24;
  v112 = 7;
  v14 = swift_allocObject(&unk_100524FD8, 24, 7);
  v98 = v14;
  *(_QWORD *)(v14 + 16) = v97;
  swift_retain(v14);
  v111 = 32;
  v15 = swift_allocObject(&unk_100525000, 32, v112);
  v16 = v98;
  v106 = v15;
  *(_QWORD *)(v15 + 16) = sub_1001FED10;
  *(_QWORD *)(v15 + 24) = v16;
  swift_release(v16);
  swift_bridgeObjectRetain(v100);
  v17 = swift_allocObject(&unk_100525028, v99, v112);
  v101 = v17;
  *(_QWORD *)(v17 + 16) = v100;
  swift_retain(v17);
  v18 = swift_allocObject(&unk_100525050, v111, v112);
  v19 = v101;
  v113 = v18;
  *(_QWORD *)(v18 + 16) = sub_1001FED10;
  *(_QWORD *)(v18 + 24) = v19;
  v20 = swift_release(v19);
  v124 = Logger.logObject.getter(v20);
  v125 = static os_log_type_t.default.getter();
  v104 = &v144;
  v144 = 22;
  v102 = sub_1001EB1EC();
  v103 = sub_1001EB254();
  v21 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v145, v104, &type metadata for UInt32, &type metadata for Int, v102, v103, v21);
  v105 = v145;
  v109 = 17;
  v22 = swift_allocObject(&unk_100525078, 17, v112);
  v23 = v109;
  v24 = v112;
  v115 = v22;
  v108 = 32;
  *(_BYTE *)(v22 + 16) = 32;
  v25 = swift_allocObject(&unk_1005250A0, v23, v24);
  v26 = v111;
  v27 = v112;
  v116 = v25;
  v110 = 8;
  *(_BYTE *)(v25 + 16) = 8;
  v28 = swift_allocObject(&unk_1005250C8, v26, v27);
  v29 = v111;
  v30 = v112;
  v31 = v28;
  v32 = v106;
  v107 = v31;
  *(_QWORD *)(v31 + 16) = sub_1001FED54;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = swift_allocObject(&unk_1005250F0, v29, v30);
  v34 = v109;
  v35 = v112;
  v36 = v33;
  v37 = v107;
  v117 = v36;
  *(_QWORD *)(v36 + 16) = sub_1001ED524;
  *(_QWORD *)(v36 + 24) = v37;
  v38 = swift_allocObject(&unk_100525118, v34, v35);
  v39 = v109;
  v40 = v112;
  v118 = v38;
  *(_BYTE *)(v38 + 16) = v108;
  v41 = swift_allocObject(&unk_100525140, v39, v40);
  v42 = v111;
  v43 = v112;
  v119 = v41;
  *(_BYTE *)(v41 + 16) = v110;
  v44 = swift_allocObject(&unk_100525168, v42, v43);
  v45 = v111;
  v46 = v112;
  v47 = v44;
  v48 = v113;
  v114 = v47;
  *(_QWORD *)(v47 + 16) = sub_1001FED54;
  *(_QWORD *)(v47 + 24) = v48;
  v49 = swift_allocObject(&unk_100525190, v45, v46);
  v50 = v114;
  v121 = v49;
  *(_QWORD *)(v49 + 16) = sub_1001ED524;
  *(_QWORD *)(v49 + 24) = v50;
  v123 = sub_10003A0C8(qword_1005A5580);
  v120 = _allocateUninitializedArray<A>(_:)(6, v123);
  v122 = v51;
  swift_retain(v115);
  v52 = v116;
  v53 = v115;
  v54 = v122;
  *v122 = sub_1001ED4B8;
  v54[1] = v53;
  swift_retain(v52);
  v55 = v117;
  v56 = v116;
  v57 = v122;
  v122[2] = sub_1001ED4B8;
  v57[3] = v56;
  swift_retain(v55);
  v58 = v118;
  v59 = v117;
  v60 = v122;
  v122[4] = sub_1001F6408;
  v60[5] = v59;
  swift_retain(v58);
  v61 = v119;
  v62 = v118;
  v63 = v122;
  v122[6] = sub_1001ED4B8;
  v63[7] = v62;
  swift_retain(v61);
  v64 = v121;
  v65 = v119;
  v66 = v122;
  v122[8] = sub_1001ED4B8;
  v66[9] = v65;
  swift_retain(v64);
  v67 = v120;
  v68 = v121;
  v69 = v122;
  v122[10] = sub_1001F6408;
  v69[11] = v68;
  sub_10003CB20();
  swift_bridgeObjectRelease(v67);
  if (os_log_type_enabled(v124, (os_log_type_t)v125))
  {
    v70 = v134;
    v82 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22, &type metadata for UInt8);
    v81 = sub_10003A0C8(&qword_1005A3AD0);
    v83 = sub_1001ED340(0, v81, v81);
    v84 = sub_1001ED340(2, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v86 = &v142;
    v142 = v82;
    v87 = &v141;
    v141 = v83;
    v88 = &v140;
    v140 = v84;
    v85 = 2;
    sub_1001ED398(2, &v142);
    sub_1001ED398(v85, v86);
    v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v139 = v115;
    sub_1001ED3AC(&v138, (uint64_t)v86, (uint64_t)v87, (uint64_t)v88);
    v89 = v70;
    if (v70)
    {
      __break(1u);
    }
    else
    {
      v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v139 = v116;
      sub_1001ED3AC(&v138, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140);
      v80 = 0;
      v71 = v80;
      v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v139 = v117;
      sub_1001ED3AC(&v138, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140);
      v79 = v71;
      v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v139 = v118;
      sub_1001ED3AC(&v138, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140);
      v78 = 0;
      v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v139 = v119;
      sub_1001ED3AC(&v138, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140);
      v77 = 0;
      v138 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v139 = v121;
      sub_1001ED3AC(&v138, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v140);
      _os_log_impl((void *)&_mh_execute_header, v124, (os_log_type_t)v125, "Satisfied criteria: %s, other criteria: %s", v82, v105);
      sub_1001ED3F0(v83, 0);
      sub_1001ED3F0(v84, 2);
      UnsafeMutablePointer.deallocate()();
      swift_release(v115);
      swift_release(v116);
      swift_release(v117);
      swift_release(v118);
      swift_release(v119);
      swift_release(v121);
    }
  }
  else
  {
    swift_release(v115);
    swift_release(v116);
    swift_release(v117);
    swift_release(v118);
    swift_release(v119);
    swift_release(v121);
  }

  (*(void (**)(char *, uint64_t))(v127 + 8))(v129, v126);
  swift_bridgeObjectRetain(v97);
  v74 = &v143;
  v143 = v97;
  v72 = sub_1001F31BC();
  v75 = Collection.isEmpty.getter(v132, v72);
  sub_1001ED890(v74);
  v76 = (v75 & 1) == 0;
  swift_bridgeObjectRelease(v100);
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v92);
  return v76;
}

uint64_t sub_1001FD198@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  BOOL v9;

  v5 = *a1;
  v8 = *(id *)(a2 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_eligibilityTracker);
  swift_unknownObjectRetain(v8);
  swift_getObjectType(v8);
  v6 = objc_msgSend(v8, "countOf:", v5);
  v7 = *(id *)(a2 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_requirementStorage);
  swift_unknownObjectRetain(v7);
  swift_getObjectType(v7);
  v9 = (uint64_t)v6 >= (uint64_t)objc_msgSend(v7, "countOf:", v5);
  swift_unknownObjectRelease(v7);
  result = swift_unknownObjectRelease(v8);
  *a3 = v9;
  return result;
}

uint64_t sub_1001FD27C()
{
  return _allocateUninitializedArray<A>(_:)(0, &unk_100524790);
}

uint64_t sub_1001FD29C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain(a1);
  result = a1;
  *a2 = a1;
  return result;
}

uint64_t sub_1001FD2CC(unint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD v34[3];
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE **v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint32_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  NSObject *v66;
  int v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint32_t v74;
  uint64_t v75;
  uint64_t v76;

  v49 = a1;
  v76 = 0;
  v75 = 0;
  v43 = 0;
  v48 = type metadata accessor for Logger(0);
  v47 = *(_QWORD *)(v48 - 8);
  v44 = (*(_QWORD *)(v47 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = (char *)v34 - v44;
  v45 = (char *)v34 - v44;
  v76 = __chkstk_darwin(v49);
  v75 = v2;
  v46 = *(id *)(v2 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_eligibilityTracker);
  swift_unknownObjectRetain(v46);
  swift_getObjectType(v46);
  objc_msgSend(v46, "incrementCountOf:", v49);
  swift_unknownObjectRelease(v46);
  v3 = sub_1001F92CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v1, v3, v48);
  v57 = 7;
  v4 = swift_allocObject(&unk_1005251B8, 24, 7);
  v50 = v4;
  *(_QWORD *)(v4 + 16) = v49;
  swift_retain(v4);
  v56 = 32;
  v5 = swift_allocObject(&unk_1005251E0, 32, v57);
  v6 = v50;
  v58 = v5;
  *(_QWORD *)(v5 + 16) = sub_1001F5D7C;
  *(_QWORD *)(v5 + 24) = v6;
  v7 = swift_release(v6);
  v66 = Logger.logObject.getter(v7);
  v67 = static os_log_type_t.default.getter();
  v53 = &v73;
  v73 = 12;
  v51 = sub_1001EB1EC();
  v52 = sub_1001EB254();
  v8 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v74, v53, &type metadata for UInt32, &type metadata for Int, v51, v52, v8);
  v54 = v74;
  v55 = 17;
  v9 = swift_allocObject(&unk_100525208, 17, v57);
  v10 = v55;
  v11 = v57;
  v60 = v9;
  *(_BYTE *)(v9 + 16) = 32;
  v12 = swift_allocObject(&unk_100525230, v10, v11);
  v13 = v56;
  v14 = v57;
  v61 = v12;
  *(_BYTE *)(v12 + 16) = 8;
  v15 = swift_allocObject(&unk_100525258, v13, v14);
  v16 = v56;
  v17 = v57;
  v18 = v15;
  v19 = v58;
  v59 = v18;
  *(_QWORD *)(v18 + 16) = sub_1001F5E68;
  *(_QWORD *)(v18 + 24) = v19;
  v20 = swift_allocObject(&unk_100525280, v16, v17);
  v21 = v59;
  v63 = v20;
  *(_QWORD *)(v20 + 16) = sub_1001ED524;
  *(_QWORD *)(v20 + 24) = v21;
  v65 = sub_10003A0C8(qword_1005A5580);
  v62 = _allocateUninitializedArray<A>(_:)(3, v65);
  v64 = v22;
  swift_retain(v60);
  v23 = v61;
  v24 = v60;
  v25 = v64;
  *v64 = sub_1001ED4B8;
  v25[1] = v24;
  swift_retain(v23);
  v26 = v63;
  v27 = v61;
  v28 = v64;
  v64[2] = sub_1001ED4B8;
  v28[3] = v27;
  swift_retain(v26);
  v29 = v62;
  v30 = v63;
  v31 = v64;
  v64[4] = sub_1001F6408;
  v31[5] = v30;
  sub_10003CB20();
  swift_bridgeObjectRelease(v29);
  if (os_log_type_enabled(v66, (os_log_type_t)v67))
  {
    v32 = v43;
    v36 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v35 = sub_10003A0C8(&qword_1005A3AD0);
    v37 = sub_1001ED340(0, v35, v35);
    v38 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v39 = &v72;
    v72 = v36;
    v40 = &v71;
    v71 = v37;
    v41 = &v70;
    v70 = v38;
    sub_1001ED398(2, &v72);
    sub_1001ED398(1, v39);
    v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v69 = v60;
    sub_1001ED3AC(&v68, (uint64_t)v39, (uint64_t)v40, (uint64_t)v41);
    v42 = v32;
    if (v32)
    {
      __break(1u);
    }
    else
    {
      v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v69 = v61;
      sub_1001ED3AC(&v68, (uint64_t)&v72, (uint64_t)&v71, (uint64_t)&v70);
      v34[1] = 0;
      v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v69 = v63;
      sub_1001ED3AC(&v68, (uint64_t)&v72, (uint64_t)&v71, (uint64_t)&v70);
      _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v67, "Criterion met: %s", v36, v54);
      sub_1001ED3F0(v37, 0);
      sub_1001ED3F0(v38, 1);
      UnsafeMutablePointer.deallocate()();
      swift_release(v60);
      swift_release(v61);
      swift_release(v63);
    }
  }
  else
  {
    swift_release(v60);
    swift_release(v61);
    swift_release(v63);
  }

  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
  return sub_1001FD938(v49);
}

uint64_t sub_1001FD938(unint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  _BYTE **v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint32_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  NSObject *v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  id v102;
  char **v103;
  unint64_t v104;
  id v105;
  id v106;
  _BOOL4 v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint32_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;

  v104 = a1;
  v117 = 0;
  v116 = 0;
  v115 = 0;
  v97 = 0;
  v98 = type metadata accessor for Logger(0);
  v99 = *(_QWORD *)(v98 - 8);
  v100 = (*(_QWORD *)(v99 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v101 = (char *)v61 - v100;
  v117 = __chkstk_darwin(v104);
  v116 = v1;
  v102 = *(id *)(v1 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_requirementStorage);
  swift_unknownObjectRetain(v102);
  swift_getObjectType(v102);
  v103 = &selRef__expandCollapseThreadCommand_;
  v105 = objc_msgSend(v102, "countOf:", v104);
  v115 = v105;
  swift_unknownObjectRelease(v102);
  v106 = *(id *)(v1 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_eligibilityTracker);
  swift_unknownObjectRetain(v106);
  swift_getObjectType(v106);
  v2 = objc_msgSend(v106, v103[131], v104);
  v107 = v2 != v105;
  result = swift_unknownObjectRelease(v106);
  if (!v107)
  {
    v4 = v101;
    v5 = sub_1001F92CC();
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v4, v5, v98);
    v73 = 24;
    v83 = 7;
    v6 = swift_allocObject(&unk_1005252A8, 24, 7);
    v72 = v6;
    *(_QWORD *)(v6 + 16) = v104;
    swift_retain(v6);
    v82 = 32;
    v7 = swift_allocObject(&unk_1005252D0, 32, v83);
    v8 = v72;
    v78 = v7;
    *(_QWORD *)(v7 + 16) = sub_1001F5D7C;
    *(_QWORD *)(v7 + 24) = v8;
    swift_release(v8);
    v9 = swift_allocObject(&unk_1005252F8, v73, v83);
    v84 = v9;
    *(_QWORD *)(v9 + 16) = v105;
    v95 = Logger.logObject.getter(v9);
    v96 = static os_log_type_t.default.getter();
    v76 = &v113;
    v113 = 22;
    v74 = sub_1001EB1EC();
    v75 = sub_1001EB254();
    v10 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v114, v76, &type metadata for UInt32, &type metadata for Int, v74, v75, v10);
    v77 = v114;
    v80 = 17;
    v11 = swift_allocObject(&unk_100525320, 17, v83);
    v12 = v80;
    v13 = v83;
    v86 = v11;
    *(_BYTE *)(v11 + 16) = 32;
    v14 = swift_allocObject(&unk_100525348, v12, v13);
    v15 = v82;
    v16 = v83;
    v87 = v14;
    v81 = 8;
    *(_BYTE *)(v14 + 16) = 8;
    v17 = swift_allocObject(&unk_100525370, v15, v16);
    v18 = v82;
    v19 = v83;
    v20 = v17;
    v21 = v78;
    v79 = v20;
    *(_QWORD *)(v20 + 16) = sub_1001F5E68;
    *(_QWORD *)(v20 + 24) = v21;
    v22 = swift_allocObject(&unk_100525398, v18, v19);
    v23 = v80;
    v24 = v83;
    v25 = v22;
    v26 = v79;
    v88 = v25;
    *(_QWORD *)(v25 + 16) = sub_1001ED524;
    *(_QWORD *)(v25 + 24) = v26;
    v27 = swift_allocObject(&unk_1005253C0, v23, v24);
    v28 = v80;
    v29 = v83;
    v89 = v27;
    *(_BYTE *)(v27 + 16) = 0;
    v30 = swift_allocObject(&unk_1005253E8, v28, v29);
    v31 = v82;
    v32 = v83;
    v90 = v30;
    *(_BYTE *)(v30 + 16) = v81;
    v33 = swift_allocObject(&unk_100525410, v31, v32);
    v34 = v82;
    v35 = v83;
    v36 = v33;
    v37 = v84;
    v85 = v36;
    *(_QWORD *)(v36 + 16) = sub_1001F5D4C;
    *(_QWORD *)(v36 + 24) = v37;
    v38 = swift_allocObject(&unk_100525438, v34, v35);
    v39 = v85;
    v92 = v38;
    *(_QWORD *)(v38 + 16) = sub_1001F5D18;
    *(_QWORD *)(v38 + 24) = v39;
    v94 = sub_10003A0C8(qword_1005A5580);
    v91 = _allocateUninitializedArray<A>(_:)(6, v94);
    v93 = v40;
    swift_retain(v86);
    v41 = v87;
    v42 = v86;
    v43 = v93;
    *v93 = sub_1001ED4B8;
    v43[1] = v42;
    swift_retain(v41);
    v44 = v88;
    v45 = v87;
    v46 = v93;
    v93[2] = sub_1001ED4B8;
    v46[3] = v45;
    swift_retain(v44);
    v47 = v89;
    v48 = v88;
    v49 = v93;
    v93[4] = sub_1001F6408;
    v49[5] = v48;
    swift_retain(v47);
    v50 = v90;
    v51 = v89;
    v52 = v93;
    v93[6] = sub_1001ED4B8;
    v52[7] = v51;
    swift_retain(v50);
    v53 = v92;
    v54 = v90;
    v55 = v93;
    v93[8] = sub_1001ED4B8;
    v55[9] = v54;
    swift_retain(v53);
    v56 = v91;
    v57 = v92;
    v58 = v93;
    v93[10] = sub_1001F60F4;
    v58[11] = v57;
    sub_10003CB20();
    swift_bridgeObjectRelease(v56);
    if (os_log_type_enabled(v95, (os_log_type_t)v96))
    {
      v59 = v97;
      v64 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22, &type metadata for UInt8);
      v63 = sub_10003A0C8(&qword_1005A3AD0);
      v65 = sub_1001ED340(0, v63, v63);
      v66 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v68 = &v112;
      v112 = v64;
      v69 = &v111;
      v111 = v65;
      v70 = &v110;
      v110 = v66;
      v67 = 2;
      sub_1001ED398(2, &v112);
      sub_1001ED398(v67, v68);
      v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v109 = v86;
      sub_1001ED3AC(&v108, (uint64_t)v68, (uint64_t)v69, (uint64_t)v70);
      v71 = v59;
      if (v59)
      {
        __break(1u);
      }
      else
      {
        v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v109 = v87;
        sub_1001ED3AC(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
        v62 = 0;
        v60 = v62;
        v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
        v109 = v88;
        sub_1001ED3AC(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
        v61[3] = v60;
        v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v109 = v89;
        sub_1001ED3AC(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
        v61[2] = 0;
        v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v109 = v90;
        sub_1001ED3AC(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
        v61[1] = 0;
        v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F60F4;
        v109 = v92;
        sub_1001ED3AC(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
        _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v96, "Criterion %s reached requirement value %ld", v64, v77);
        sub_1001ED3F0(v65, 0);
        sub_1001ED3F0(v66, 1);
        UnsafeMutablePointer.deallocate()();
        swift_release(v86);
        swift_release(v87);
        swift_release(v88);
        swift_release(v89);
        swift_release(v90);
        swift_release(v92);
      }
    }
    else
    {
      swift_release(v86);
      swift_release(v87);
      swift_release(v88);
      swift_release(v89);
      swift_release(v90);
      swift_release(v92);
    }

    (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v98);
    return sub_1001FE31C(v104);
  }
  return result;
}

uint64_t sub_1001FE31C(unint64_t a1)
{
  NSNumber *v1;
  objc_class *v2;
  objc_class *v3;
  unint64_t v4;
  Swift::String v5;
  id v6;
  NSNumber *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v10 = sub_10003A0C8(&qword_1005A4570);
  v11 = _allocateUninitializedArray<A>(_:)(1, v10);
  v9 = v1;
  sub_1001F2BD4(a1);
  v9->super.super.isa = v2;
  v9[1].super.super.isa = v3;
  sub_1001FF360();
  v9[2].super.super.isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  sub_10003CB20();
  v4 = sub_1001FF3C4();
  v15 = Dictionary.init(dictionaryLiteral:)(v11, &type metadata for String, v4, &protocol witness table for String);
  sub_1001FF428();
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.mobilemail.appstorereview.criterionreachedrequirement", 0x3FuLL, 1);
  swift_bridgeObjectRetain(v15);
  v14 = sub_1001FE4A8(v5._countAndFlagsBits, (uint64_t)v5._object, v15);
  v13 = *(id *)(v12 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_analyticsCollector);
  v6 = v13;
  objc_msgSend(v13, "logOneTimeEvent:", v14);

  return swift_bridgeObjectRelease(v15);
}

id sub_1001FE4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1001FE774(a1, a2, a3);
}

uint64_t sub_1001FE4F4()
{
  uint64_t v0;
  id v2;

  v2 = *(id *)(v0 + OBJC_IVAR____TtC10MobileMail21AppStoreReviewManager_externalRequirementsProvider);
  swift_unknownObjectRetain(v2);
  swift_getObjectType(v2);
  objc_msgSend(v2, "didForeground");
  return swift_unknownObjectRelease(v2);
}

uint64_t sub_1001FE588()
{
  uint64_t result;
  char v1;
  uint64_t v2;

  if (!"MobileMail.AppStoreReviewManager")
  {
    v1 = 2;
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StaticString.swift", 24, v1, 136, 0);
    __break(1u);
  }
  result = sub_100220ABC((uint64_t)"MobileMail.AppStoreReviewManager", 32, (unint64_t)"init()", 6, 2, (unint64_t)"MobileMail/AppStoreReviewManager.swift", 38, 2, v2, 0xBuLL, 0x14uLL);
  __break(1u);
  return result;
}

id sub_1001FE6B8()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppStoreReviewManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001FE774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  Class isa;
  id v7;
  id v9;

  v7 = String._bridgeToObjectiveC()();
  sub_1001FF3C4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v4, "initWithEventName:collectionData:", v7);

  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a2);
  return v9;
}

uint64_t sub_1001FE80C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FE848()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v1 = sub_1001FE888();
  return sub_1001F5D84(v4, v3, (uint64_t)&unk_1005254B0, v1);
}

unint64_t sub_1001FE888()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4558;
  if (!qword_1005A4558)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB734, &unk_1005254B0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4558);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001FE8F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FE918()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FE940()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FE97C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FE9B8()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001FE9F4()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001FEA30()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_1001FEA74(char a1)
{
  uint64_t *v1;

  sub_1001F9E84(a1 & 1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001FEA88()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

uint64_t sub_1001FEAC4(char a1)
{
  uint64_t v1;

  return sub_1001FB758(a1 & 1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001FEAD8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1001FEB1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001FEB34()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001FEB70()
{
  uint64_t v0;

  return sub_1001FC170(*(void **)(v0 + 16));
}

uint64_t sub_1001FEB78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FEBA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FEBC8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FEC04()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FEC40@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_1001FD198(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1001FEC64()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4560;
  if (!qword_1005A4560)
  {
    v0 = sub_1001E7634(&qword_1005A43D8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4560);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001FECD4()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001FED10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001FD29C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001FED18()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FED54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = sub_10003A0C8(&qword_1005A43D8);
  v1 = sub_1001FEDA0();
  return sub_1001F5D84(v5, v3, v4, v1);
}

unint64_t sub_1001FEDA0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4568;
  if (!qword_1005A4568)
  {
    v0 = sub_1001E7634(&qword_1005A43D8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4568);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1001FEE10()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1001FEE4C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FEE88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FEEB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FEED8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FEF14()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FEF50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FEF78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FEFA0()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FEFDC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF018()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t sub_1001FF040()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF07C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FF0A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FF0CC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF108()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF144()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t sub_1001FF16C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF1A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t sub_1001FF1D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FF1F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FF220()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF25C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF298()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FF2C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1001FF2E8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1001FF324()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

unint64_t sub_1001FF360()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A98D0;
  if (!qword_1005A98D0)
  {
    v0 = objc_opt_self(NSNumber);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A98D0);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_1001FF3C4()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4578;
  if (!qword_1005A4578)
  {
    v0 = objc_opt_self(NSObject);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4578);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_1001FF428()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4580;
  if (!qword_1005A4580)
  {
    v0 = objc_opt_self(EMCoreAnalyticsEvent);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4580);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1001FF48C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_1001FF4D0()
{
  uint64_t v0;

  sub_1001FA82C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001FF4E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1001FF524(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1001FF53C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A45B0;
  if (!qword_1005A45B0)
  {
    v0 = type metadata accessor for DispatchWorkItemFlags(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A45B0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001FF5AC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A45C0;
  if (!qword_1005A45C0)
  {
    v0 = sub_1001E7634(&qword_1005A45B8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A45C0);
    return WitnessTable;
  }
  return v3;
}

void sub_1001FF61C(unint64_t a1)
{
  _QWORD v1[3];

  v1[2] = a1;
  v1[1] = a1;
  if (a1 <= 7)
    __asm { BR              X8 }
  v1[0] = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&unk_1005254B0, v1, &unk_1005254B0, &type metadata for Int);
  __break(1u);
  JUMPOUT(0x1001FF7D8);
}

uint64_t sub_1001FF80C()
{
  uint64_t result;
  _QWORD *v1;

  result = _allocateUninitializedArray<A>(_:)(8, &unk_1005254B0);
  *v1 = 0;
  v1[1] = 1;
  v1[2] = 2;
  v1[3] = 3;
  v1[4] = 4;
  v1[5] = 5;
  v1[6] = 6;
  v1[7] = 7;
  sub_10003CB20();
  return result;
}

uint64_t sub_1001FF888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001FF8D0();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for Int) & 1;
}

unint64_t sub_1001FF8D0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A45C8;
  if (!qword_1005A45C8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB6FC, &unk_1005254B0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A45C8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1001FF93C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1001FF8D0();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for Int);
}

uint64_t sub_1001FF978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001FF8D0();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1001FF9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1001FF8D0();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1001FFA00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1001FF80C();
  *a1 = result;
  return result;
}

void sub_1001FFA28()
{
  unint64_t *v0;

  sub_1001FF61C(*v0);
}

void *type metadata accessor for AppStoreReviewPromptReason()
{
  return &unk_1005254B0;
}

unint64_t sub_1001FFA54()
{
  return sub_1001FFA68();
}

unint64_t sub_1001FFA68()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A45D0;
  if (!qword_1005A45D0)
  {
    v0 = sub_1001E7634(&qword_1005A45D8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A45D0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1001FFAD8()
{
  return sub_1001FFAEC();
}

unint64_t sub_1001FFAEC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A45E0;
  if (!qword_1005A45E0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB6D4, &unk_1005254B0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A45E0);
    return WitnessTable;
  }
  return v2;
}

void *sub_1001FFB58()
{
  return &unk_1004CB760;
}

void *sub_1001FFB64()
{
  return &unk_1004CB768;
}

void *sub_1001FFB70()
{
  return &unk_1004CB770;
}

void *sub_1001FFB7C()
{
  return &unk_1004CB778;
}

void *sub_1001FFB88()
{
  return &unk_1004CB780;
}

void *sub_1001FFB94()
{
  return &unk_1004CB788;
}

void *sub_1001FFBA0()
{
  return &unk_1004CB790;
}

void *sub_1001FFBAC()
{
  return &unk_1004CB798;
}

uint64_t sub_1001FFBB8()
{
  uint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  sub_10003A134(v2, qword_1005A45E8);
  sub_10003A088(v2, (uint64_t)qword_1005A45E8);
  v0 = type metadata accessor for AppStoreReviewRequirementConstantStorage();
  return static Logger.mailUILogger<A>(for:)(v0);
}

uint64_t type metadata accessor for AppStoreReviewRequirementConstantStorage()
{
  return objc_opt_self(_TtC10MobileMail40AppStoreReviewRequirementConstantStorage);
}

uint64_t sub_1001FFC40()
{
  uint64_t v0;

  if (qword_1005A3628 != -1)
    swift_once(&qword_1005A3628, sub_1001FFBB8);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005A45E8);
}

id sub_1001FFCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v9;

  v9 = objc_allocWithZone(v8);
  return sub_1001FFD10(a1, a2, a3, a4, a5, a6, a7, a8);
}

id sub_1001FFD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  id v27;
  objc_super v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;

  v36 = a1;
  v35 = a2;
  v34 = a3;
  v33 = a4;
  v32 = a5;
  v31 = a6;
  v30 = a7;
  v29 = a8;
  v9 = v8;
  v10 = v8;
  v11 = v8;
  v12 = v8;
  v13 = v8;
  v14 = v8;
  v15 = v8;
  v16 = v8;
  v37 = v8;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_remindMeCount] = a1;

  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_nonDefaultFilterCount] = a2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_undoSendCount] = a3;

  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_sendLaterCount] = a4;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_omittedAttachmentRecipientCount] = a5;

  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_markAsReadCount] = a6;
  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_topHitSearchCount] = a7;

  *(_QWORD *)&v8[OBJC_IVAR____TtC10MobileMail40AppStoreReviewRequirementConstantStorage_moveToPredictionCount] = a8;
  v28.receiver = v37;
  v28.super_class = (Class)type metadata accessor for AppStoreReviewRequirementConstantStorage();
  v27 = objc_msgSendSuper2(&v28, "init");
  v17 = v27;
  v37 = v27;

  return v27;
}

id sub_1001FFF30()
{
  id v0;
  id v2;
  id v3;

  v2 = objc_msgSend(v3, "initWithRemindMeCount:nonDefaultFilterCount:undoSendCount:sendLaterCount:omittedAttachmentRecipientCount:markAsReadCount:topHitSearchCount:moveToPredictionCount:", 2, 1, 2);
  v0 = v2;
  v3 = v2;

  return v2;
}

void sub_1001FFFC4(unint64_t a1)
{
  uint64_t v1;

  sub_100200008(a1, v1);
}

void sub_100200008(unint64_t a1, uint64_t a2)
{
  _QWORD v2[4];

  v2[3] = a1;
  v2[2] = a2;
  v2[1] = a1;
  if (a1 <= 7)
    __asm { BR              X8 }
  v2[0] = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&unk_100524790, v2, &unk_100524790, &type metadata for Int);
  __break(1u);
  JUMPOUT(0x10020014CLL);
}

id sub_1002001CC()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppStoreReviewRequirementConstantStorage();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *type metadata accessor for AppStoreReviewRequirementConstantStorage.DefaultCounts()
{
  return &unk_100525558;
}

uint64_t sub_10020023C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  Swift::String v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  v27 = a1;
  v15 = "Archive one or more email messages";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v22 = (char *)&v9 - v10;
  v24 = 0;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v24);
  v19 = (uint64_t)&v9 - v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v24);
  v18 = (char *)&v9 - v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v24);
  v16 = (char *)&v9 - v13;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v20 = *(_QWORD *)(v21 - 8);
  v14 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v9 - v14;
  v25 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ARCHIVE_MESSAGE_DESCRIPTION", 0x1BuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v25 & 1);
  sub_1001E790C();
  sub_1001E7920(v19);
  v28 = v15;
  v29 = 34;
  v30 = 2;
  v26 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17._countAndFlagsBits, v17._object, v18, v19, v15, 34, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v22, v25, v25, v21);
  v6 = sub_1002004D0();
  IntentDescription.init(_:categoryName:searchKeywords:)(v23, v22, v6);
  v7 = type metadata accessor for IntentDescription(v24);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v27, v26, v25);
}

uint64_t sub_1002004D0()
{
  return sub_100202DA4(0);
}

uint64_t sub_1002004E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v13 = a1;
  v12 = "Archive one or more email messages";
  v8 = 0;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(0);
  v17 = (uint64_t)&v6 - v7;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v16 = (char *)&v6 - v9;
  v3 = type metadata accessor for String.LocalizationValue(v2);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v14 = (char *)&v6 - v10;
  v11 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Archive Message", 0xFuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v11 & 1);
  sub_1001E790C();
  sub_1001E7920(v17);
  v18 = v12;
  v19 = 34;
  v20 = 2;
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, v15._countAndFlagsBits, v15._object, v16, v17, v12, 34, 2);
}

uint64_t sub_10020068C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Builtin::Word v13;
  void *object;
  uint64_t KeyPath;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  char *v26;
  uint64_t countAndFlagsBits;

  v23 = a1;
  v1 = sub_10003A0C8(&qword_1005A4668);
  v9 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v26 = (char *)&v9 - v9;
  v19 = sub_10003A0C8(&qword_1005A4670);
  v18 = *(_QWORD *)(v19 - 8);
  v10 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  v21 = (char *)&v9 - v10;
  v11 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v10);
  v17 = (char *)&v9 - v11;
  v12 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v11);
  v20 = (char *)&v9 - v12;
  v25 = sub_10020090C();
  v13 = 8;
  v24 = &unk_1005255E8;
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Archive ", v13, 1);
  object = v4._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(object);
  KeyPath = swift_getKeyPath(&unk_1004CB850);
  v5 = sub_10003A0C8(&qword_1005A4680);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v19, v5);
  swift_release(KeyPath);
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v22 & 1);
  v16 = v6._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v17, v20, v19);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, v19);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v19);
  ParameterSummaryString.init(stringInterpolation:)(v21, v24, v25);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v22 & 1);
  countAndFlagsBits = v7._countAndFlagsBits;
  return IntentParameterSummary.init(_:table:)(v26, v7._countAndFlagsBits, v7._object, v24, v25);
}

unint64_t sub_10020090C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4678;
  if (!qword_1005A4678)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB9D0, &unk_1005255E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4678);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100200978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v2 = swift_retain(a2);
  v5 = IntentParameter.projectedValue.getter(v2);
  swift_release(a2);
  return v5;
}

uint64_t sub_1002009D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100202D50(a1, &v6);
  v4 = v6;
  v5 = v7;
  *a2 = sub_100200978(v6, v7);
  swift_release(v4);
  return swift_release(v5);
}

uint64_t sub_100200A28@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002009D4(a1, a2);
}

uint64_t sub_100200A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v6[3];

  v6[1] = a1;
  v6[2] = a2;
  v2 = swift_retain(a1);
  AppDependency.wrappedValue.getter(v6, v2);
  v5 = v6[0];
  swift_release(a1);
  return v5;
}

uint64_t sub_100200A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v6[3];

  v6[1] = a1;
  v6[2] = a2;
  v2 = swift_retain(a2);
  IntentParameter.wrappedValue.getter(v6, v2);
  v5 = v6[0];
  swift_release(a2);
  return v5;
}

uint64_t sub_100200AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v6[4];

  v6[3] = a1;
  v6[1] = a2;
  v6[2] = a3;
  swift_retain(a3);
  swift_bridgeObjectRetain(a1);
  v6[0] = a1;
  IntentParameter.wrappedValue.setter(v6);
  swift_release(a3);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_100200B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v3[63] = a3;
  v3[62] = a2;
  v3[61] = a1;
  v3[55] = v3;
  v3[45] = 0;
  v3[46] = 0;
  v3[56] = 0;
  v3[57] = 0;
  memset(v3 + 10, 0, 0x50uLL);
  v3[45] = a2;
  v3[46] = a3;
  v8 = type metadata accessor for MainActor(0);
  v3[64] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v3[65] = v9;
  v3[66] = v4;
  return swift_task_switch(sub_100200C44, v9);
}

uint64_t sub_100200C44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;

  v1 = v0[63];
  v2 = v0[62];
  v0[55] = v0;
  v10 = (void *)sub_100200A3C(v2, v1);
  sub_1002B5A94();
  v0[67] = 0;
  v5 = v9[63];
  v6 = v9[62];

  v9[47] = v6;
  v9[48] = v5;
  v8 = sub_100200A9C(v6, v5);
  v9[68] = v8;
  v7 = sub_100200A3C(v6, v5);
  v9[69] = v7;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A96A4);
  v9[70] = v3;
  v9[71] = sub_100201428();
  *v3 = v9[55];
  v3[1] = sub_100200DC0;
  return sub_1003708C4(v8, v7);
}

uint64_t sub_100200DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v7 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 560);
  v5 = *(void **)(*(_QWORD *)v1 + 552);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  v7[55] = *(_QWORD *)v1;
  v7[72] = a1;
  swift_task_dealloc(v3);

  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_100200E54, v7[65]);
}

uint64_t sub_100200E54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v15 = v0[72];
  v1 = v0[67];
  v2 = v0[63];
  v3 = v0[62];
  v0[55] = v0;
  v0[56] = v15;
  v16 = (void *)sub_100200A3C(v3, v2);
  sub_1002B5F34(v15);
  v0[73] = v1;
  if (v1)
  {
    v5 = *(_QWORD *)(v14 + 576);

    swift_bridgeObjectRelease(v5);
    swift_release(*(_QWORD *)(v14 + 512));
    return (*(uint64_t (**)(void))(*(_QWORD *)(v14 + 440) + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v14 + 576);
    v8 = *(_QWORD *)(v14 + 504);
    v7 = *(_QWORD *)(v14 + 496);

    sub_100201494();
    swift_bridgeObjectRetain(v12);
    v6 = (id)sub_100200A3C(v7, v8);
    v9 = objc_msgSend(v6, "undoManager");

    swift_retain(v7);
    swift_retain(v8);
    *(_QWORD *)(v14 + 392) = v7;
    *(_QWORD *)(v14 + 400) = v8;
    v10 = sub_10020C448();
    sub_1002014F8((_QWORD *)(v14 + 392));
    swift_retain(v7);
    swift_retain(v8);
    *(_QWORD *)(v14 + 408) = v7;
    *(_QWORD *)(v14 + 416) = v8;
    v11 = sub_10020C47C();
    sub_1002014F8((_QWORD *)(v14 + 408));
    v13 = sub_10020152C(v12, v9, v10, v11);
    *(_QWORD *)(v14 + 592) = v13;
    *(_QWORD *)(v14 + 456) = v13;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v14 + 440);
    *(_QWORD *)(v14 + 56) = v14 + 424;
    *(_QWORD *)(v14 + 24) = sub_100201120;
    *(_QWORD *)(v14 + 352) = swift_continuation_init();
    *(_QWORD *)(v14 + 320) = _NSConcreteStackBlock;
    *(_DWORD *)(v14 + 328) = 0x40000000;
    *(_DWORD *)(v14 + 332) = 0;
    *(_QWORD *)(v14 + 336) = sub_1002015C8;
    *(_QWORD *)(v14 + 344) = &unk_100525568;
    objc_msgSend(v13, "performInteractionWithCompletion:", v14 + 320);
    return j__swift_continuation_await(v14 + 16);
  }
}

uint64_t sub_100201120()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 440) = *v0;
  return swift_task_switch(sub_10020117C, *(_QWORD *)(v1 + 520));
}

uint64_t sub_10020117C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v0 + 440) = v0;

  v15 = sub_1002BF904(2);
  swift_bridgeObjectRetain(v15);
  *(_QWORD *)(v0 + 464) = v15;
  v16 = sub_10003A0C8(&qword_1005A46A0);
  v1 = sub_10020164C();
  Collection.first.getter(v16, v1);
  sub_1001ED890((_QWORD *)(v0 + 464));
  if (*(_QWORD *)(v0 + 168))
  {
    v2 = v14[73];
    v11 = v14[63];
    v10 = v14[62];
    memcpy(v14 + 10, v14 + 20, 0x50uLL);
    swift_bridgeObjectRelease(v15);
    v14[60] = sub_100200A9C(v10, v11);
    sub_100201884(v14 + 10, v14 + 30);
    v12 = swift_task_alloc(32);
    *(_QWORD *)(v12 + 16) = v14 + 30;
    v13 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
    v3 = sub_100201968();
    result = Sequence.forEach(_:)(sub_100201944, v12, v13, v3);
    if (v2)
      return result;
    swift_task_dealloc(v12);
    sub_1002019D8(v14 + 30);
    sub_1001ED890(v14 + 60);
    sub_1002019D8(v14 + 10);
  }
  else
  {
    sub_1002016BC(v14 + 20);
    swift_bridgeObjectRelease(v15);
  }
  v7 = (id)v14[74];
  v8 = v14[72];
  v9 = v14[64];
  v14[59] = sub_100200A9C(v14[62], v14[63]);
  v6 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v5 = sub_100201730();
  static IntentResult.result<A>(value:)(v14 + 59, v6, v5);
  sub_1001ED890(v14 + 59);

  swift_bridgeObjectRelease(v8);
  swift_release(v9);
  return (*(uint64_t (**)(void))(v14[55] + 8))();
}

unint64_t sub_100201428()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4690;
  if (!qword_1005A4690)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB9B4, &unk_1005255E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4690);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100201494()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4698;
  if (!qword_1005A4698)
  {
    v0 = objc_opt_self(MFArchiveTriageInteraction);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4698);
    return ObjCClassMetadata;
  }
  return v3;
}

_QWORD *sub_1002014F8(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return a1;
}

id sub_10020152C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  Class isa;
  id v10;

  sub_10003A0C8(qword_1005A47A0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "interactionWithMessageListItems:undoManager:origin:actor:", isa, a2, a3, a4);

  swift_bridgeObjectRelease(a1);
  return v10;
}

void sub_1002015C8(uint64_t a1, id a2, char a3)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v8;
  id v10;
  char v11;

  v3 = a2;
  v8 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  v10 = a2;
  v11 = a3 & 1;
  v5 = sub_10003A0C8(&qword_1005A4738);
  sub_100372488(v8, (uint64_t)&v10, v5);

}

unint64_t sub_10020164C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A46A8;
  if (!qword_1005A46A8)
  {
    v0 = sub_1001E7634(&qword_1005A46A0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A46A8);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_1002016BC(_QWORD *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_unknownObjectRelease(a1[2]);
    sub_1001F25B8(a1 + 3);
    swift_release(a1[8]);
    swift_release(a1[9]);
  }
  return a1;
}

unint64_t sub_100201730()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A9250;
  if (!qword_1005A9250)
  {
    v2 = sub_1001E7634((uint64_t *)&unk_1005A46B0);
    sub_1002017AC();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A9250);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002017AC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A46C0;
  if (!qword_1005A46C0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D0F44, &unk_10052A8F8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A46C0);
    return WitnessTable;
  }
  return v2;
}

_QWORD *sub_100201814(const void *a1, _QWORD *a2)
{
  _QWORD v4[11];
  _BYTE __dst[128];

  memcpy(__dst, a1, sizeof(__dst));
  v4[10] = a2;
  sub_100201884(a2, v4);
  return sub_1002DBE34(v4);
}

_QWORD *sub_100201884(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;

  *a2 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain(v4);
  a2[1] = v4;
  v5 = a1[2];
  swift_unknownObjectRetain(v5);
  a2[2] = v5;
  v2 = a1[6];
  a2[6] = v2;
  a2[7] = a1[7];
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))((uint64_t)(a2 + 3), (uint64_t)(a1 + 3));
  v7 = a1[8];
  swift_retain(v7);
  a2[8] = v7;
  v9 = a1[9];
  swift_retain(v9);
  result = a2;
  a2[9] = v9;
  return result;
}

_QWORD *sub_100201944(const void *a1)
{
  uint64_t v1;

  return sub_100201814(a1, *(_QWORD **)(v1 + 16));
}

unint64_t sub_100201968()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A96B0;
  if (!qword_1005A96B0)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A46B0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A96B0);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_1002019D8(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_unknownObjectRelease(a1[2]);
  sub_1001F25B8(a1 + 3);
  swift_release(a1[8]);
  swift_release(a1[9]);
  return a1;
}

uint64_t sub_100201A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  Swift::String v20;
  char *v21;
  Builtin::Word v22;
  const char *v23;
  uint64_t v24;
  int v25;
  char *v26;
  Swift::String v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD);
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  unsigned __int16 v50;
  const char *v51;
  uint64_t v52;
  __int16 v53;
  _QWORD v54[5];
  uint64_t v55;
  uint64_t v56;

  v23 = "Email messages to archive";
  v46 = &v55;
  v55 = 0;
  v56 = 0;
  v33 = 0;
  v0 = type metadata accessor for InputConnectionBehavior(0);
  v11 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v44 = (uint64_t)&v11 - v11;
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4710);
  v12 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v43 = (char *)&v11 - v12;
  v13 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v12);
  v42 = (char *)&v11 - v13;
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v33);
  v40 = (char *)&v11 - v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v3) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v33);
  v29 = (uint64_t)&v11 - v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v33);
  v28 = (char *)&v11 - v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v33);
  v26 = (char *)&v11 - v17;
  v32 = type metadata accessor for LocalizedStringResource(v6);
  v30 = *(_QWORD *)(v32 - 8);
  v18 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v32);
  v39 = (char *)&v11 - v18;
  sub_10003A0C8(&qword_1005A5100);
  v19 = v54;
  memset(v54, 0, sizeof(v54));
  sub_100202C84();
  v7 = sub_100304804();
  v48 = AppDependency.__allocating_init(key:manager:)(v19, v7);
  swift_retain(v48);
  v55 = v48;
  sub_10003A0C8(&qword_1005A7E80);
  v34 = 1;
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Messages", 8uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v8._countAndFlagsBits, v8._object);
  v21 = "AppIntents";
  v22 = 10;
  v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v34 & 1);
  sub_1001E790C();
  sub_1001E7920(v29);
  v51 = v23;
  v24 = 25;
  v52 = 25;
  v25 = 2;
  v53 = 2;
  v31 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, v20._countAndFlagsBits, v20._object, v28, v29, v23, 25, 2);
  v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ARCHIVE_MESSAGE_ENTITY_DESCRIPTION", 0x22uLL, v34 & 1);
  String.LocalizationValue.init(stringLiteral:)(v9._countAndFlagsBits, v9._object);
  v27 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v21, v22, v34 & 1);
  sub_1001E790C();
  sub_1001E7920(v29);
  v49[1] = v23;
  v49[2] = v24;
  LOBYTE(v50) = v25;
  HIBYTE(v50) = v31 & 1 & v34;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, v27._countAndFlagsBits, v27._object, v28, v29, v23, v24, v50);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v30 + 56))(v40, v31, v34, v32);
  v41 = v49;
  v49[0] = 0;
  v35 = type metadata accessor for IntentDialog(v33);
  v36 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v35 - 8) + 56);
  v36(v42, v34);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v36)(v43, v34, v34, v35);
  v38 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v37 = sub_100201730();
  v45 = sub_100202CE8();
  sub_1002F0FA0(v44);
  v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v39, v40, v41, v42, v43, v44, v45);
  swift_retain(v47);
  v56 = v47;
  swift_retain(v48);
  swift_retain(v47);
  swift_release(v47);
  swift_release(v48);
  sub_1002014F8(v46);
  return v48;
}

uint64_t sub_100202038@<X0>(uint64_t a1@<X8>)
{
  return sub_1002004E8(a1);
}

uint64_t sub_10020204C()
{
  return static AppIntent.openAppWhenRun.getter() & 1;
}

uint64_t sub_100202064()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_100202078()
{
  return static AppIntent.isDiscoverable.getter() & 1;
}

uint64_t sub_100202090@<X0>(uint64_t a1@<X8>)
{
  return sub_10020068C(a1);
}

uint64_t sub_1002020A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10020023C(a1);
}

uint64_t sub_1002020B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *v1;
  v6 = v1[1];
  v3 = (_QWORD *)swift_task_alloc(dword_1005A468C);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EA914;
  return sub_100200B74(a1, v5, v6);
}

uint64_t sub_100202144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  result = sub_100201A30();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_100202170(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10020090C();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

uint64_t sub_10020219C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.IntentSchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9BD8;
  sub_10003A134(v8, qword_1005B9BD8);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1002022A0();
  sub_100202370();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_1002022A0()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.Mail", 0xEuLL, 1);
  return AssistantSchema.IntentSchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_100202370()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ArchiveMailIntent", 0x11uLL, 1);
  return AssistantSchema.IntentSchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_100202444()
{
  uint64_t v0;

  if (qword_1005A3630 != -1)
    swift_once(&qword_1005A3630, sub_10020219C);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9BD8);
}

uint64_t sub_1002024A4()
{
  return static AssistantSchemaIntent.isAssistantOnly.getter() & 1;
}

_QWORD *sub_1002024BC(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v6;

  v3 = *a2;
  swift_retain(*a2);
  *a1 = v3;
  v6 = a2[1];
  swift_retain(v6);
  result = a1;
  a1[1] = v6;
  return result;
}

uint64_t sub_100202510(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *sub_100202540(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  v5 = *a2;
  swift_retain(*a2);
  v2 = *a1;
  *a1 = v5;
  swift_release(v2);
  v7 = a2[1];
  swift_retain(v7);
  v3 = a1[1];
  a1[1] = v7;
  swift_release(v3);
  return a1;
}

uint64_t *sub_1002025A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  *a1 = *a2;
  swift_release(v2);
  v3 = a1[1];
  a1[1] = a2[1];
  swift_release(v3);
  return a1;
}

uint64_t sub_1002025F8(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v4 = *(_OWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (*(_QWORD *)a1 < (unint64_t)&_mh_execute_header)
        v3 = *(_QWORD *)a1;
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_100202758(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_OWORD *)result = a2 + 0x80000000;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)result = a2 - 1;
  }
  return result;
}

void *type metadata accessor for ArchiveMessageIntent()
{
  return &unk_1005255E8;
}

unint64_t sub_100202974()
{
  return sub_100202988();
}

unint64_t sub_100202988()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A46D8;
  if (!qword_1005A46D8)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A46E0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A46D8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002029F8()
{
  return sub_100202A0C();
}

unint64_t sub_100202A0C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4810;
  if (!qword_1005A4810)
  {
    v0 = sub_1001E7634(&qword_1005A46F0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4810);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100202A7C()
{
  return sub_10020090C();
}

unint64_t sub_100202A90()
{
  return sub_100202AA4();
}

unint64_t sub_100202AA4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A46F8;
  if (!qword_1005A46F8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB918, &unk_1005255E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A46F8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100202B10(uint64_t a1)
{
  unint64_t result;

  result = sub_10020090C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100202B38()
{
  return sub_100202B4C();
}

unint64_t sub_100202B4C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4700;
  if (!qword_1005A4700)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB98C, &unk_1005255E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4700);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100202BB8()
{
  return sub_100202BCC();
}

unint64_t sub_100202BCC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4708;
  if (!qword_1005A4708)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CB970, &unk_1005255E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4708);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100202C38(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1004F6D6C, 1) + 8);
}

uint64_t sub_100202C60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F6D38, 1);
}

unint64_t sub_100202C84()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4720;
  if (!qword_1005A4720)
  {
    v0 = objc_opt_self(MailAppController);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4720);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_100202CE8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4730;
  if (!qword_1005A4730)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D0DFC, &unk_10052A8F8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4730);
    return WitnessTable;
  }
  return v2;
}

_QWORD *sub_100202D50(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;

  v4 = *a1;
  swift_retain(*a1);
  *a2 = v4;
  v6 = a1[1];
  swift_retain(v6);
  result = a2;
  a2[1] = v6;
  return result;
}

uint64_t sub_100202DA4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v4 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (result > 0)
    {
      v1 = type metadata accessor for LocalizedStringResource(0);
      v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
      *(_QWORD *)(v2 + 16) = v4;
      v3 = (void *)v2;
    }
    else
    {
      swift_retain(&_swiftEmptyArrayStorage);
      v3 = &_swiftEmptyArrayStorage;
    }
    type metadata accessor for LocalizedStringResource(0);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_100202E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  Swift::String v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  v27 = a1;
  v15 = "Block the sender of one or more email messages";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v22 = (char *)&v9 - v10;
  v24 = 0;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v24);
  v19 = (uint64_t)&v9 - v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v24);
  v18 = (char *)&v9 - v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v24);
  v16 = (char *)&v9 - v13;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v20 = *(_QWORD *)(v21 - 8);
  v14 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v9 - v14;
  v25 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("BLOCK_SENDER_DESCRIPTION", 0x18uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v25 & 1);
  sub_1001E790C();
  sub_1001E7920(v19);
  v28 = v15;
  v29 = 46;
  v30 = 2;
  v26 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17._countAndFlagsBits, v17._object, v18, v19, v15, 46, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v22, v25, v25, v21);
  v6 = sub_1002004D0();
  IntentDescription.init(_:categoryName:searchKeywords:)(v23, v22, v6);
  v7 = type metadata accessor for IntentDescription(v24);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v27, v26, v25);
}

uint64_t sub_1002030F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v13 = a1;
  v12 = "Block the sender of one or more email messages";
  v8 = 0;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(0);
  v17 = (uint64_t)&v6 - v7;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v16 = (char *)&v6 - v9;
  v3 = type metadata accessor for String.LocalizationValue(v2);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v14 = (char *)&v6 - v10;
  v11 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Block Sender", 0xCuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v11 & 1);
  sub_1001E790C();
  sub_1001E7920(v17);
  v18 = v12;
  v19 = 46;
  v20 = 2;
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, v15._countAndFlagsBits, v15._object, v16, v17, v12, 46, 2);
}

uint64_t sub_100203294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Builtin::Word v13;
  void *object;
  uint64_t KeyPath;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  char *v26;
  uint64_t countAndFlagsBits;

  v23 = a1;
  v1 = sub_10003A0C8(&qword_1005A47B8);
  v9 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v26 = (char *)&v9 - v9;
  v19 = sub_10003A0C8(&qword_1005A47C0);
  v18 = *(_QWORD *)(v19 - 8);
  v10 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  v21 = (char *)&v9 - v10;
  v11 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v10);
  v17 = (char *)&v9 - v11;
  v12 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v11);
  v20 = (char *)&v9 - v12;
  v25 = sub_100203514();
  v13 = 16;
  v24 = &unk_100525788;
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Block sender of ", v13, 1);
  object = v4._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(object);
  KeyPath = swift_getKeyPath(&unk_1004CBA70);
  v5 = sub_10003A0C8(&qword_1005A47D0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v19, v5);
  swift_release(KeyPath);
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v22 & 1);
  v16 = v6._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v17, v20, v19);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, v19);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v19);
  ParameterSummaryString.init(stringInterpolation:)(v21, v24, v25);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v22 & 1);
  countAndFlagsBits = v7._countAndFlagsBits;
  return IntentParameterSummary.init(_:table:)(v26, v7._countAndFlagsBits, v7._object, v24, v25);
}

unint64_t sub_100203514()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A47C8;
  if (!qword_1005A47C8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBB94, &unk_100525788);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A47C8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100203580@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002009D4(a1, a2);
}

uint64_t sub_100203594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v3[31] = a3;
  v3[30] = a2;
  v3[29] = a1;
  v3[25] = v3;
  v3[15] = 0;
  v3[16] = 0;
  v3[26] = 0;
  v3[27] = 0;
  v3[15] = a2;
  v3[16] = a3;
  v6 = type metadata accessor for MainActor(0);
  v3[32] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[33] = v7;
  v3[34] = v4;
  return swift_task_switch(sub_100203640, v7);
}

uint64_t sub_100203640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;

  v1 = v0[31];
  v2 = v0[30];
  v0[25] = v0;
  v10 = (void *)sub_100200A3C(v2, v1);
  sub_1002B5A94();
  v0[35] = 0;
  v5 = v9[31];
  v6 = v9[30];

  v9[17] = v6;
  v9[18] = v5;
  v8 = sub_100200A9C(v6, v5);
  v9[36] = v8;
  v7 = sub_100200A3C(v6, v5);
  v9[37] = v7;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A96A4);
  v9[38] = v3;
  v9[39] = sub_100203C58();
  *v3 = v9[25];
  v3[1] = sub_1002037BC;
  return sub_1003708C4(v8, v7);
}

uint64_t sub_1002037BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v7 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  v5 = *(void **)(*(_QWORD *)v1 + 296);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v7[25] = *(_QWORD *)v1;
  v7[40] = a1;
  swift_task_dealloc(v3);

  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_100203850, v7[33]);
}

uint64_t sub_100203850()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v15 = v0[40];
  v1 = v0[35];
  v2 = v0[31];
  v3 = v0[30];
  v0[25] = v0;
  v0[26] = v15;
  v16 = (void *)sub_100200A3C(v3, v2);
  sub_1002B5F34(v15);
  if (v1)
  {
    v5 = *(_QWORD *)(v14 + 320);

    swift_bridgeObjectRelease(v5);
    swift_release(*(_QWORD *)(v14 + 256));
    return (*(uint64_t (**)(void))(*(_QWORD *)(v14 + 200) + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v14 + 320);
    v8 = *(_QWORD *)(v14 + 248);
    v7 = *(_QWORD *)(v14 + 240);

    sub_100203CC4();
    swift_bridgeObjectRetain(v12);
    v6 = (id)sub_100200A3C(v7, v8);
    v9 = objc_msgSend(v6, "undoManager");

    swift_retain(v7);
    swift_retain(v8);
    *(_QWORD *)(v14 + 152) = v7;
    *(_QWORD *)(v14 + 160) = v8;
    v10 = sub_10020C448();
    sub_1002014F8((_QWORD *)(v14 + 152));
    swift_retain(v7);
    swift_retain(v8);
    *(_QWORD *)(v14 + 168) = v7;
    *(_QWORD *)(v14 + 176) = v8;
    v11 = sub_10020C47C();
    sub_1002014F8((_QWORD *)(v14 + 168));
    v13 = sub_100203D28(v12, v9, v10, v11, 1);
    *(_QWORD *)(v14 + 328) = v13;
    *(_QWORD *)(v14 + 216) = v13;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v14 + 200);
    *(_QWORD *)(v14 + 56) = v14 + 184;
    *(_QWORD *)(v14 + 24) = sub_100203B1C;
    *(_QWORD *)(v14 + 112) = swift_continuation_init();
    *(_QWORD *)(v14 + 80) = _NSConcreteStackBlock;
    *(_DWORD *)(v14 + 88) = 0x40000000;
    *(_DWORD *)(v14 + 92) = 0;
    *(_QWORD *)(v14 + 96) = sub_1002015C8;
    *(_QWORD *)(v14 + 104) = &unk_100525708;
    objc_msgSend(v13, "performInteractionWithCompletion:", v14 + 80);
    return j__swift_continuation_await(v14 + 16);
  }
}

uint64_t sub_100203B1C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 200) = *v0;
  return swift_task_switch(sub_100203B78, *(_QWORD *)(v1 + 264));
}

uint64_t sub_100203B78()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(void **)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 320);
  v8 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 200) = v0;

  *(_QWORD *)(v0 + 224) = sub_100200A9C(v3, v4);
  v5 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v1 = sub_100201730();
  static IntentResult.result<A>(value:)(v0 + 224, v5, v1);
  sub_1001ED890((_QWORD *)(v0 + 224));

  swift_bridgeObjectRelease(v7);
  swift_release(v8);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 200) + 8))();
}

unint64_t sub_100203C58()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A47E0;
  if (!qword_1005A47E0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBB78, &unk_100525788);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A47E0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100203CC4()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A47E8[0];
  if (!qword_1005A47E8[0])
  {
    v0 = objc_opt_self(MFSenderBlockingTriageInteraction);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, qword_1005A47E8);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_100203D28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  Class isa;
  id v12;

  sub_10003A0C8(qword_1005A47A0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "interactionWithMessageListItems:undoManager:origin:actor:blockSender:", isa, a2, a3, a4, a5 & 1);

  swift_bridgeObjectRelease(a1);
  return v12;
}

uint64_t sub_100203DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  Swift::String v20;
  char *v21;
  Builtin::Word v22;
  const char *v23;
  Builtin::Word v24;
  int v25;
  char *v26;
  Swift::String v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD);
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  unsigned __int16 v50;
  const char *v51;
  uint64_t v52;
  __int16 v53;
  _QWORD v54[5];
  uint64_t v55;
  uint64_t v56;

  v23 = "Email messages to block senders";
  v46 = &v55;
  v55 = 0;
  v56 = 0;
  v33 = 0;
  v0 = type metadata accessor for InputConnectionBehavior(0);
  v11 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v44 = (uint64_t)&v11 - v11;
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4710);
  v12 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v43 = (char *)&v11 - v12;
  v13 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v12);
  v42 = (char *)&v11 - v13;
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v33);
  v40 = (char *)&v11 - v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v3) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v33);
  v29 = (uint64_t)&v11 - v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v33);
  v28 = (char *)&v11 - v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v33);
  v26 = (char *)&v11 - v17;
  v32 = type metadata accessor for LocalizedStringResource(v6);
  v30 = *(_QWORD *)(v32 - 8);
  v18 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v32);
  v39 = (char *)&v11 - v18;
  sub_10003A0C8(&qword_1005A5100);
  v19 = v54;
  memset(v54, 0, sizeof(v54));
  sub_100202C84();
  v7 = sub_100304804();
  v48 = AppDependency.__allocating_init(key:manager:)(v19, v7);
  swift_retain(v48);
  v55 = v48;
  sub_10003A0C8(&qword_1005A7E80);
  v34 = 1;
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Message", 7uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v8._countAndFlagsBits, v8._object);
  v21 = "AppIntents";
  v22 = 10;
  v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v34 & 1);
  sub_1001E790C();
  sub_1001E7920(v29);
  v51 = v23;
  v24 = 31;
  v52 = 31;
  v25 = 2;
  v53 = 2;
  v31 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, v20._countAndFlagsBits, v20._object, v28, v29, v23, 31, 2);
  v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("BLOCK_SENDER_ENTITY_DESCRIPTION", v24, v34 & 1);
  String.LocalizationValue.init(stringLiteral:)(v9._countAndFlagsBits, v9._object);
  v27 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v21, v22, v34 & 1);
  sub_1001E790C();
  sub_1001E7920(v29);
  v49[1] = v23;
  v49[2] = v24;
  LOBYTE(v50) = v25;
  HIBYTE(v50) = v31 & 1 & v34;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, v27._countAndFlagsBits, v27._object, v28, v29, v23, v24, v50);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v30 + 56))(v40, v31, v34, v32);
  v41 = v49;
  v49[0] = 0;
  v35 = type metadata accessor for IntentDialog(v33);
  v36 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v35 - 8) + 56);
  v36(v42, v34);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v36)(v43, v34, v34, v35);
  v38 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v37 = sub_100201730();
  v45 = sub_100202CE8();
  sub_1002F0FA0(v44);
  v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v39, v40, v41, v42, v43, v44, v45);
  swift_retain(v47);
  v56 = v47;
  swift_retain(v48);
  swift_retain(v47);
  swift_release(v47);
  swift_release(v48);
  sub_1002014F8(v46);
  return v48;
}

uint64_t sub_1002043D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002030F0(a1);
}

uint64_t sub_1002043EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100203294(a1);
}

uint64_t sub_100204400@<X0>(uint64_t a1@<X8>)
{
  return sub_100202E5C(a1);
}

uint64_t sub_100204414(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *v1;
  v6 = v1[1];
  v3 = (_QWORD *)swift_task_alloc(dword_1005A47DC);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EA914;
  return sub_100203594(a1, v5, v6);
}

uint64_t sub_1002044A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  result = sub_100203DD0();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_1002044CC(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100203514();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

void *type metadata accessor for BlockSenderIntent()
{
  return &unk_100525788;
}

unint64_t sub_10020450C()
{
  return sub_100204520();
}

unint64_t sub_100204520()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4800;
  if (!qword_1005A4800)
  {
    v0 = sub_1001E7634(&qword_1005A4808);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4800);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100204590(uint64_t a1)
{
  unint64_t result;

  result = sub_100203514();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002045B8()
{
  return sub_1002045CC();
}

unint64_t sub_1002045CC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4820;
  if (!qword_1005A4820)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBB50, &unk_100525788);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4820);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100204638()
{
  return sub_10020464C();
}

unint64_t sub_10020464C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4828;
  if (!qword_1005A4828)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBB34, &unk_100525788);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4828);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_1002046B8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1004F6DFC, 1) + 8);
}

uint64_t sub_1002046E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F6DC8, 1);
}

void *sub_100204704()
{
  return &unk_1004CBC30;
}

void *sub_100204710()
{
  return &unk_1004CBC31;
}

uint64_t sub_10020471C@<X0>(uint64_t a1@<X8>)
{
  Swift::String v1;
  uint64_t v2;

  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cancel an ongoing email composition", 0x23uLL, 1);
  IntentDescription.init(stringLiteral:)(v1._countAndFlagsBits, v1._object);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1);
}

uint64_t sub_100204784()
{
  Swift::String v0;

  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cancel Draft", 0xCuLL, 1);
  return LocalizedStringResource.init(stringLiteral:)(v0._countAndFlagsBits, v0._object);
}

void *sub_1002047C4()
{
  return &unk_1005A4830;
}

uint64_t sub_1002047D0()
{
  char *v1;
  char v2;
  _BYTE v3[24];

  v1 = (char *)sub_1002047C4();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_endAccess(v3);
  return v2 & 1;
}

uint64_t sub_100204824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;
  _QWORD v5[2];

  v5[1] = a1;
  v1 = swift_retain(a1);
  AppDependency.wrappedValue.getter(v5, v1);
  v4 = v5[0];
  swift_release(a1);
  return v4;
}

uint64_t sub_10020487C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2[22] = a2;
  v2[21] = a1;
  v2[8] = v2;
  v2[9] = 0;
  v2[15] = 0;
  v3 = type metadata accessor for Logger(0);
  v2[23] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[24] = v4;
  v6 = *(_QWORD *)(v4 + 64);
  v2[25] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[26] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[9] = a2;
  v8 = type metadata accessor for MainActor(0);
  v2[27] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100204968, v9);
}

uint64_t sub_100204968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *buf;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint32_t size;
  os_log_type_t v34;
  NSObject *oslog;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint32_t v53;
  os_log_type_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;

  v1 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 64) = v0;
  v61 = (void *)sub_100204824(v1);
  sub_1002B5A94();
  v57 = *(_QWORD *)(v60 + 176);

  v58 = (void *)sub_100204824(v57);
  v59 = sub_1002B63C4();
  if (v59)
  {
    v2 = *(_QWORD *)(v60 + 208);
    v48 = *(_QWORD *)(v60 + 192);
    v50 = *(_QWORD *)(v60 + 184);
    *(_QWORD *)(v60 + 120) = v59;

    v49 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v2, v49, v50);
    v3 = swift_endAccess(v60 + 40);
    v55 = Logger.logObject.getter(v3);
    v54 = static os_log_type_t.debug.getter();
    *(_QWORD *)(v60 + 128) = 2;
    v51 = sub_1001EB1EC();
    v52 = sub_1001EB254();
    v4 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v60 + 228), v60 + 128, &type metadata for UInt32, &type metadata for Int, v51, v52, v4);
    v53 = *(_DWORD *)(v60 + 228);
    v5 = sub_10003A0C8(qword_1005A5580);
    v56 = _allocateUninitializedArray<A>(_:)(0, v5);
    if (os_log_type_enabled(v55, v54))
    {
      v43 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v42 = sub_10003A0C8(&qword_1005A3AD0);
      v44 = sub_1001ED340(0, v42, v42);
      v45 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v60 + 136) = v43;
      *(_QWORD *)(v60 + 144) = v44;
      *(_QWORD *)(v60 + 152) = v45;
      sub_1001ED398(0, (_BYTE **)(v60 + 136));
      sub_1001ED398(0, (_BYTE **)(v60 + 136));
      *(_QWORD *)(v60 + 160) = v56;
      v46 = (_QWORD *)swift_task_alloc(48);
      v46[2] = v60 + 136;
      v46[3] = v60 + 144;
      v46[4] = v60 + 152;
      v47 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v6 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v46, v47, v6);
      swift_task_dealloc(v46);
      _os_log_impl((void *)&_mh_execute_header, v55, v54, "#SiriMail cancelling the active email composition.", v43, v53);
      sub_1001ED3F0(v44, 0);
      sub_1001ED3F0(v45, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v56);
    v39 = *(_QWORD *)(v60 + 216);
    v40 = *(_QWORD *)(v60 + 208);
    v41 = *(_QWORD *)(v60 + 200);
    v37 = *(_QWORD *)(v60 + 192);
    v38 = *(_QWORD *)(v60 + 184);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v38);
    static IntentResult.result<>()(objc_msgSend(v59, "presentSaveDeleteDialogOrClose"));

    swift_release(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v60 + 64) + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v60 + 200);
    v28 = *(_QWORD *)(v60 + 192);
    v30 = *(_QWORD *)(v60 + 184);

    v29 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v8, v29, v30);
    v9 = swift_endAccess(v60 + 16);
    oslog = Logger.logObject.getter(v9);
    v34 = static os_log_type_t.error.getter();
    *(_QWORD *)(v60 + 80) = 2;
    v31 = sub_1001EB1EC();
    v32 = sub_1001EB254();
    v10 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v60 + 224), v60 + 80, &type metadata for UInt32, &type metadata for Int, v31, v32, v10);
    size = *(_DWORD *)(v60 + 224);
    v11 = sub_10003A0C8(qword_1005A5580);
    v36 = _allocateUninitializedArray<A>(_:)(0, v11);
    if (os_log_type_enabled(oslog, v34))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v22 = sub_10003A0C8(&qword_1005A3AD0);
      v24 = sub_1001ED340(0, v22, v22);
      v25 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v60 + 88) = buf;
      *(_QWORD *)(v60 + 96) = v24;
      *(_QWORD *)(v60 + 104) = v25;
      sub_1001ED398(0, (_BYTE **)(v60 + 88));
      sub_1001ED398(0, (_BYTE **)(v60 + 88));
      *(_QWORD *)(v60 + 112) = v36;
      v26 = (_QWORD *)swift_task_alloc(48);
      v26[2] = v60 + 88;
      v26[3] = v60 + 96;
      v26[4] = v60 + 104;
      v27 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v12 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v26, v27, v12);
      swift_task_dealloc(v26);
      _os_log_impl((void *)&_mh_execute_header, oslog, v34, "#SiriMail CancelDraftIntent - Failed to find an active email composition, throwing noMessagesFound", buf, size);
      sub_1001ED3F0(v24, 0);
      sub_1001ED3F0(v25, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v36);
    v19 = *(_QWORD *)(v60 + 200);
    v18 = *(_QWORD *)(v60 + 192);
    v20 = *(_QWORD *)(v60 + 184);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    v21 = type metadata accessor for ToolboxErrors(0);
    v13 = sub_1002053C0();
    swift_allocError(v21, v13, 0, 0);
    v15 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v21 - 8) + 104))(v14, enum case for ToolboxErrors.activeDraftNotFound(_:));
    swift_willThrow(v15);
    v16 = *(_QWORD *)(v60 + 208);
    v17 = *(_QWORD *)(v60 + 200);
    swift_release(*(_QWORD *)(v60 + 216));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v60 + 64) + 8))();
  }
}

uint64_t sub_1002051DC()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD v3[5];
  uint64_t v4;

  v4 = 0;
  sub_10003A0C8(&qword_1005A5100);
  memset(v3, 0, sizeof(v3));
  sub_100202C84();
  v0 = sub_100304804();
  v2 = AppDependency.__allocating_init(key:manager:)(v3, v0);
  swift_retain(v2);
  v4 = v2;
  sub_1001F0F44(&v4);
  return v2;
}

uint64_t sub_100205268()
{
  uint64_t *v0;

  return sub_100204824(*v0);
}

uint64_t sub_100205280()
{
  return sub_100204784();
}

uint64_t sub_100205294()
{
  return sub_1002047D0() & 1;
}

uint64_t sub_1002052AC()
{
  return variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem() & 1;
}

uint64_t sub_1002052C4()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_1002052D8@<X0>(uint64_t a1@<X8>)
{
  return sub_10020471C(a1);
}

uint64_t sub_1002052EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *v1;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A483C);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EA914;
  return sub_10020487C(a1, v5);
}

uint64_t sub_10020536C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1002051DC();
  *a1 = result;
  return result;
}

uint64_t sub_100205394(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100205430();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

unint64_t sub_1002053C0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A6D70;
  if (!qword_1005A6D70)
  {
    v0 = type metadata accessor for ToolboxErrors(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ToolboxErrors, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A6D70);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100205430()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4848;
  if (!qword_1005A4848)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBD14, &unk_100525890);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4848);
    return WitnessTable;
  }
  return v2;
}

void *type metadata accessor for CancelDraftIntent()
{
  return &unk_100525890;
}

unint64_t sub_1002054B0()
{
  return sub_1002054C4();
}

unint64_t sub_1002054C4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A7960;
  if (!qword_1005A7960)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A50D0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A7960);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100205534(uint64_t a1)
{
  unint64_t result;

  result = sub_100205430();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10020555C()
{
  return sub_100205570();
}

unint64_t sub_100205570()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4850;
  if (!qword_1005A4850)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBCB0, &unk_100525890);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4850);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1002055DC()
{
  return sub_1002055F0();
}

unint64_t sub_1002055F0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4858;
  if (!qword_1005A4858)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBC94, &unk_100525890);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4858);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10020565C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F6E58, 1);
}

uint64_t sub_100205680(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100205430();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_1002056C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1002056F0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1002056F0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4860;
  if (!qword_1005A4860)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBCE8, &unk_100525890);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4860);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10020575C(void *a1, uint64_t a2, uint64_t (**a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSURL *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  Class v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  uint64_t v61;
  Class v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  id v89;
  uint64_t (**v90)(_QWORD);
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;

  v89 = a1;
  v91 = a2;
  v90 = a3;
  v108 = 0;
  v107 = 0;
  v106 = 0;
  v105 = 0;
  v103[0] = 0;
  v103[1] = 0;
  v96 = 0;
  v97 = 0;
  v109 = a2;
  v4 = sub_10003A0C8((uint64_t *)&unk_1005A4870);
  v74 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  v75 = (uint64_t)&v28 - v74;
  v5 = sub_10003A0C8((uint64_t *)&unk_1005A4970);
  v76 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  v77 = (uint64_t)&v28 - v76;
  v78 = 0;
  v79 = type metadata accessor for URL(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = (*(_QWORD *)(v80 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v78);
  v82 = (char *)&v28 - v81;
  v83 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v6);
  v84 = (char *)&v28 - v83;
  v108 = (char *)&v28 - v83;
  v85 = type metadata accessor for IntentFile(v8);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = (*(_QWORD *)(v86 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v85);
  v88 = (char *)&v28 - v87;
  v107 = (char *)&v28 - v87;
  v92 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A4880) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v91);
  v93 = (char *)&v28 - v92;
  v106 = v10;
  v105 = v3;
  v94 = (*(uint64_t (**)(uint64_t))(v11 + 64))(v9);
  v95 = v12;
  if (v12)
  {
    v72 = v94;
    v73 = v95;
    v69 = v95;
    v70 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v69);
    v71 = v70;
  }
  else
  {
    v71 = 0;
  }
  v56 = v71;
  objc_msgSend(v89, "setSubject:");

  v57 = v90[5](v91);
  v58 = sub_1002061E0();
  swift_bridgeObjectRelease(v57);
  v64 = &type metadata for String;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v58);
  objc_msgSend(v89, "setToRecipients:", isa);

  v60 = v90[6](v91);
  v61 = sub_1002061E0();
  swift_bridgeObjectRelease(v60);
  v62 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v61);
  objc_msgSend(v89, "setCcRecipients:", v62);

  v63 = v90[7](v91);
  v65 = sub_1002061E0();
  swift_bridgeObjectRelease(v63);
  v66 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v65);
  objc_msgSend(v89, "setBccRecipients:", v66);

  v67 = v90[9](v91);
  v68 = v13;
  if (v13)
  {
    v54 = v67;
    v55 = v68;
    v53 = v68;
    v51 = v67;
    v96 = v67;
    v97 = v68;
    swift_bridgeObjectRetain(v68);
    v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v53);
    objc_msgSend(v89, "setMessageBody:isHTML:", v52, 0);

    swift_bridgeObjectRelease(v53);
  }
  v49 = v90[11](v91);
  swift_bridgeObjectRetain(v49);
  v48 = &v104;
  v104 = v49;
  v46 = sub_10003A0C8(&qword_1005A4888);
  v47 = sub_100206274();
  v50 = Collection.isEmpty.getter(v46, v47);
  sub_1001ED890(v48);
  swift_bridgeObjectRelease(v49);
  result = v50;
  if ((v50 & 1) == 0)
  {
    v102 = v90[11](v91);
    Collection<>.makeIterator()(v103, v46, v47);
    while (1)
    {
      v15 = sub_10003A0C8(&qword_1005A4898);
      IndexingIterator.next()(v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v93, 1, v85) == 1)
        break;
      v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v86 + 32))(v88, v93, v85);
      IntentFile.fileURL.getter(v16);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v77, 1, v79) == 1)
      {
        v20 = sub_1002062E4(v77);
        v38 = IntentFile.data.getter(v20);
        v37 = v21;
        v39 = Data._bridgeToObjectiveC()().super.isa;
        v22 = sub_100206354(v38, v37);
        IntentFile.filename.getter(v22);
        v40 = v23;
        v41 = String._bridgeToObjectiveC()();
        v24 = swift_bridgeObjectRelease(v40);
        IntentFile.type.getter(v24);
        v42 = type metadata accessor for UTType(0);
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v43 + 48))(v75, 1) == 1)
        {
          v28 = 0;
          sub_1002063DC(v75);
          v35 = v28;
          v36 = v28;
        }
        else
        {
          v33 = UTType.preferredMIMEType.getter();
          v34 = v25;
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v75, v42);
          v35 = v33;
          v36 = v34;
        }
        v98 = v35;
        v99 = v36;
        if (v36)
        {
          v100 = v98;
          v101 = v99;
        }
        else
        {
          v32 = (id)ECMIMETypeText;
          v26 = ECMIMETypeText;
          v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
          v101 = v27;

          sub_1001F0D3C((uint64_t)&v98);
        }
        v29 = v101;
        v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v29);
        v31 = objc_msgSend(v89, "addAttachmentData:mimeType:fileName:", v39, v41, v30);

      }
      else
      {
        v17 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v84, v77, v79);
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v17, v84, v79);
        URL._bridgeToObjectiveC()(v18);
        v44 = v19;
        v45 = *(void (**)(char *, uint64_t))(v80 + 8);
        v45(v82, v79);
        objc_msgSend(v89, "insertAttachmentWithURL:", v44);

        v45(v84, v79);
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v85);
    }
    result = (unint64_t)v103;
    sub_1001ED890(v103);
  }
  return result;
}

uint64_t sub_1002061E0()
{
  unint64_t v0;
  uint64_t v2;

  v2 = sub_10003A0C8(&qword_1005A48A0);
  v0 = sub_10020708C();
  return Sequence.compactMap<A>(_:)(sub_100206B3C, 0, v2, &type metadata for String, v0);
}

unint64_t sub_100206274()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4890;
  if (!qword_1005A4890)
  {
    v0 = sub_1001E7634(&qword_1005A4888);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4890);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002062E4(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_100206354(uint64_t result, unint64_t a2)
{
  if (((a2 >> 62) & 3) == 1)
    return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
  if (((a2 >> 62) & 3) == 2)
  {
    swift_release(result);
    return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }
  return result;
}

uint64_t sub_1002063DC(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_10020644C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[15] = a4;
  v5[14] = a3;
  v5[13] = a2;
  v5[12] = a1;
  v5[8] = v5;
  v5[9] = 0;
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = 0;
  v5[10] = 0;
  v5[11] = 0;
  v5[5] = 0;
  v5[6] = 0;
  v5[7] = 0;
  v5[9] = a1;
  v5[2] = a2;
  v5[3] = a3;
  v5[4] = a4;
  v5[10] = v4;
  return swift_task_switch(sub_1002064D0, 0);
}

uint64_t sub_1002064D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;

  v1 = v0[15];
  v2 = v0[14];
  v3 = (void *)v0[13];
  v18 = v3;
  v0[8] = v0;
  sub_1002070FC(v3, v2, v1);
  if (v18)
  {
    v15 = *(void **)(v17 + 104);
    v14 = *(_QWORD *)(v17 + 112);
    v13 = *(_QWORD *)(v17 + 120);
    *(_QWORD *)(v17 + 40) = v15;
    *(_QWORD *)(v17 + 48) = v14;
    *(_QWORD *)(v17 + 56) = v13;
    sub_1002071B0();
    v4 = sub_1001E7F3C(v15, v14, v13);
    v16 = sub_100206850(v4, v5);
    if (!v16)
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ComposeIntentProtocol.swift", 38, 2, 53, 0);
    *(_QWORD *)(v17 + 88) = v16;

    swift_release(v14);
    swift_release(v13);
  }
  else
  {
    v12 = objc_msgSend((id)objc_opt_self(MailAccount), "defaultMailAccountForDelivery");
    if (!v12)
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ComposeIntentProtocol.swift", 38, 2, 55, 0);
    *(_QWORD *)(v17 + 88) = v12;
  }
  v9 = (id)objc_opt_self(MFComposeMailMessage);
  sub_10020714C();
  v10 = *(void **)(v17 + 88);
  v7 = v10;
  v11 = sub_10020D02C(v10);
  if (!v11)
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ComposeIntentProtocol.swift", 38, 2, 57, 0);
  v8 = objc_msgSend(v9, "legacyMessageWithMessage:mailboxUid:", *(_QWORD *)(v17 + 96));

  return (*(uint64_t (**)(id))(*(_QWORD *)(v17 + 64) + 8))(v8);
}

id sub_100206850(uint64_t a1, uint64_t a2)
{
  id v3;
  NSString v4;
  void *v5;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "accountWithUniqueId:", v5);

  return v3;
}

uint64_t sub_10020690C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];

  v10[1] = 0;
  v10[2] = a1;
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v6, "connectedScenes");
  v4 = sub_100207214();
  v1 = sub_100207278();
  v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v4, v1);

  v9 = v7;
  v8 = sub_10003A0C8((uint64_t *)&unk_1005A6F70);
  v2 = sub_1002072E8();
  Sequence.first(where:)(v10, sub_100206A18, 0, v8, v2);
  sub_1001ED890(&v9);

  return v10[0];
}

uint64_t sub_100206A18(id *a1)
{
  id v1;
  char v3;
  id v4;
  uint64_t v5;
  __objc2_prot *v6;
  id v7;

  v7 = 0;
  v4 = *a1;
  v7 = v4;
  v1 = v4;
  v6 = &OBJC_PROTOCOL___ComposeCapable;
  v5 = swift_dynamicCastObjCProtocolConditional(v4, 1, &v6);
  if (v5)
  {
    swift_unknownObjectRelease(v5);
    v3 = 1;
  }
  else
  {

    v3 = 0;
  }
  return v3 & 1;
}

id sub_100206AD0(void *a1, uint64_t a2)
{
  swift_getObjectType(a1);
  return objc_msgSend(a1, "showComposeWithContext:animated:initialTitle:presentationSource:completionBlock:", a2, 1, 0, 0);
}

uint64_t sub_100206B3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  id v53;
  id v54;
  id location;
  id v56;

  v35 = a2;
  v36 = a1;
  v50 = 0;
  v48 = 0;
  v49 = 0;
  v44 = 0;
  v37 = type metadata accessor for IntentPerson.Name();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = (*(_QWORD *)(v38 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v37);
  v40 = (char *)&v17 - v39;
  v3 = sub_10003A0C8(&qword_1005A4918);
  v41 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v45 = (uint64_t)&v17 - v41;
  v4 = sub_10003A0C8((uint64_t *)&unk_1005A4920);
  v42 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  v43 = (uint64_t *)((char *)&v17 - v42);
  v50 = a1;
  IntentPerson.handle.getter();
  v46 = type metadata accessor for IntentPerson.Handle(v44);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v47 + 48))(v45, 1) == 1)
  {
    sub_100207764(v45);
    v5 = type metadata accessor for IntentPerson.Handle.Value(0);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v43, 1);
  }
  else
  {
    IntentPerson.Handle.value.getter();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    v6 = type metadata accessor for IntentPerson.Handle.Value(0);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v43, 0, 1);
  }
  v33 = type metadata accessor for IntentPerson.Handle.Value(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v34 + 48))(v43, 1) == 1)
  {
    result = sub_1002077D4((uint64_t)v43);
LABEL_17:
    v16 = v35;
    *v35 = 0;
    v16[1] = 0;
    return result;
  }
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v34 + 88))(v43, v33) != enum case for IntentPerson.Handle.Value.emailAddress(_:))
  {
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 8))(v43, v33);
    goto LABEL_17;
  }
  (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v43, v33);
  v26 = *v43;
  v27 = v43[1];
  v48 = v26;
  v49 = v27;
  swift_bridgeObjectRetain(v27);
  v30 = String._bridgeToObjectiveC()();
  v8 = swift_bridgeObjectRelease(v27);
  v9 = IntentPerson.name.getter(v8);
  IntentPerson.Name.displayString.getter(v9);
  v28 = v10;
  v29 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
  swift_bridgeObjectRelease(v28);
  v31 = v29;
  location = 0;
  objc_storeStrong(&location, v30);
  v54 = 0;
  objc_storeStrong(&v54, v31);
  v11 = objc_alloc((Class)ECEmailAddressComponents);
  v53 = objc_msgSend(v11, "initWithString:", location);
  objc_msgSend(v53, "setDisplayName:", v54);
  v32 = objc_msgSend(v53, "emailAddressValue");
  v51 = 0;
  if (v32)
  {
    v25 = v32;
  }
  else
  {
    v24 = objc_msgSend(v53, "stringValue");
    v52 = v24;
    v51 = 1;
    if (v24)
      v23 = v24;
    else
      v23 = location;
    v25 = v23;
  }
  v56 = v25;
  if ((v51 & 1) != 0)

  v18 = 0;
  objc_storeStrong(&v53, 0);
  objc_storeStrong(&v54, v18);
  objc_storeStrong(&location, v18);
  v19 = v56;

  swift_getObjectType(v19);
  v22 = objc_msgSend(v19, "stringValue");
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v21 = v12;
  swift_unknownObjectRelease(v19);
  v13 = v35;
  v14 = v21;
  v15 = v22;
  *v35 = v20;
  v13[1] = v14;

  return swift_bridgeObjectRelease(v27);
}

unint64_t sub_10020708C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A48A8;
  if (!qword_1005A48A8)
  {
    v0 = sub_1001E7634(&qword_1005A48A0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A48A8);
    return WitnessTable;
  }
  return v3;
}

void *sub_1002070FC(void *result, uint64_t a2, uint64_t a3)
{
  id v3;

  if (result)
  {
    v3 = result;
    swift_retain(a2);
    return (void *)swift_retain(a3);
  }
  return result;
}

unint64_t sub_10020714C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4B40;
  if (!qword_1005A4B40)
  {
    v0 = objc_opt_self(MFMailboxUid);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4B40);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_1002071B0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A48C0;
  if (!qword_1005A48C0)
  {
    v0 = objc_opt_self(MailAccount);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A48C0);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_100207214()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A6F60;
  if (!qword_1005A6F60)
  {
    v0 = objc_opt_self(UIScene);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A6F60);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_100207278()
{
  unint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A48D0;
  if (!qword_1005A48D0)
  {
    v0 = sub_100207214();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A48D0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002072E8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A48E0;
  if (!qword_1005A48E0)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A6F70);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A48E0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100207358(void *a1, uint64_t a2, uint64_t (**a3)(_QWORD))
{
  return sub_10020575C(a1, a2, a3);
}

uint64_t sub_10020736C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = v4;
  v5 = (_QWORD *)swift_task_alloc(dword_1005A48B4);
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = *(_QWORD *)(v4 + 16);
  v5[1] = sub_100207408;
  return sub_10020644C(a1, a2, a3, a4);
}

uint64_t sub_100207408(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(*v1 + 16) = *v1;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 16) + 8))(a1);
}

uint64_t sub_100207470(uint64_t a1)
{
  sub_10020749C();
  return sub_10020690C(a1);
}

unint64_t sub_10020749C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A48F0;
  if (!qword_1005A48F0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBFD0, &unk_100525A78);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A48F0);
    return WitnessTable;
  }
  return v2;
}

void sub_100207504()
{
  sub_10020749C();
  sub_100206AB0();
}

uint64_t sub_10020756C(uint64_t a1)
{
  sub_100207598();
  return sub_10020690C(a1);
}

unint64_t sub_100207598()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4900;
  if (!qword_1005A4900)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD8C0, &unk_100527AF8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4900);
    return WitnessTable;
  }
  return v2;
}

void sub_100207600()
{
  sub_100207598();
  sub_100206AB0();
}

uint64_t sub_100207668(uint64_t a1)
{
  sub_100207694();
  return sub_10020690C(a1);
}

unint64_t sub_100207694()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4910;
  if (!qword_1005A4910)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D3314, &unk_10052D6F8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4910);
    return WitnessTable;
  }
  return v2;
}

void sub_1002076FC()
{
  sub_100207694();
  sub_100206AB0();
}

uint64_t sub_100207764(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for IntentPerson.Handle(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002077D4(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for IntentPerson.Handle.Value(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_100207844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  Swift::String v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  v27 = a1;
  v15 = "Launch an email composer to draft a message";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v22 = (char *)&v9 - v10;
  v24 = 0;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v24);
  v19 = (uint64_t)&v9 - v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v24);
  v18 = (char *)&v9 - v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v24);
  v16 = (char *)&v9 - v13;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v20 = *(_QWORD *)(v21 - 8);
  v14 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v9 - v14;
  v25 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("COMPOSE_DESCRIPTION", 0x13uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v25 & 1);
  sub_1001E790C();
  sub_1001E7920(v19);
  v28 = v15;
  v29 = 43;
  v30 = 2;
  v26 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17._countAndFlagsBits, v17._object, v18, v19, v15, 43, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v22, v25, v25, v21);
  v6 = sub_1002004D0();
  IntentDescription.init(_:categoryName:searchKeywords:)(v23, v22, v6);
  v7 = type metadata accessor for IntentDescription(v24);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v27, v26, v25);
}

uint64_t sub_100207AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v13 = a1;
  v12 = "Launch an email composer to draft a message";
  v8 = 0;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(0);
  v17 = (uint64_t)&v6 - v7;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v16 = (char *)&v6 - v9;
  v3 = type metadata accessor for String.LocalizationValue(v2);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v14 = (char *)&v6 - v10;
  v11 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Compose Message", 0xFuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v11 & 1);
  sub_1001E790C();
  sub_1001E7920(v17);
  v18 = v12;
  v19 = 43;
  v20 = 2;
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, v15._countAndFlagsBits, v15._object, v16, v17, v12, 43, 2);
}

uint64_t sub_100207C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *object;
  uint64_t KeyPath;
  void *v18;
  uint64_t v19;
  Builtin::Word v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  char *v34;
  uint64_t countAndFlagsBits;

  v31 = a1;
  v1 = sub_10003A0C8(&qword_1005A4940);
  v12 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v34 = (char *)&v11 - v12;
  v27 = sub_10003A0C8(&qword_1005A4948);
  v26 = *(_QWORD *)(v27 - 8);
  v13 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v27);
  v29 = (char *)&v11 - v13;
  v14 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v13);
  v25 = (char *)&v11 - v14;
  v15 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v14);
  v28 = (char *)&v11 - v15;
  v33 = sub_100207FDC();
  v32 = &unk_100525A78;
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 3);
  v30 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Send ", 5uLL, 1);
  object = v4._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(object);
  KeyPath = swift_getKeyPath(&unk_1004CBDE0);
  v22 = sub_10003A0C8(&qword_1005A4958);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v27, v22);
  swift_release(KeyPath);
  v20 = 4;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(" to ", 4uLL, v30 & 1);
  v18 = v5._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_bridgeObjectRelease(v18);
  v19 = swift_getKeyPath(&unk_1004CBE08);
  v6 = sub_10003A0C8(&qword_1005A4960);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v27, v6);
  swift_release(v19);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(" as ", v20, v30 & 1);
  v21 = v7._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  swift_bridgeObjectRelease(v21);
  v23 = swift_getKeyPath(&unk_1004CBE30);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v23, v27, v22);
  swift_release(v23);
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v30 & 1);
  v24 = v8._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  swift_bridgeObjectRelease(v24);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v25, v28, v27);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v25, v27);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v27);
  ParameterSummaryString.init(stringInterpolation:)(v29, v32, v33);
  v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v30 & 1);
  countAndFlagsBits = v9._countAndFlagsBits;
  return IntentParameterSummary.init(_:table:_:)(v34, v9._countAndFlagsBits, v9._object, sub_1002082AC, 0, v32, v33);
}

unint64_t sub_100207FDC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4950;
  if (!qword_1005A4950)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBFEC, &unk_100525A78);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4950);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100208048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 40);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_10020809C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100208048();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

_QWORD *sub_100208100@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10020809C(a1, a2);
}

uint64_t sub_100208114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 8);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_100208168@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100208114();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

_QWORD *sub_1002081CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100208168(a1, a2);
}

uint64_t sub_1002081E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 32);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_100208234@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_1002081E0();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

_QWORD *sub_100208298@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100208234(a1, a2);
}

uint64_t sub_1002082AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_1004CC080);
  v12 = sub_100207FDC();
  v7 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath);
  swift_release(KeyPath);
  swift_retain(v7);
  v4 = swift_getKeyPath(&unk_1004CC0A8);
  v8 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v4);
  swift_release(v4);
  swift_retain(v8);
  v5 = swift_getKeyPath(&unk_1004CC0D0);
  v9 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v5);
  swift_release(v5);
  swift_retain(v9);
  v6 = swift_getKeyPath(&unk_1004CC0F8);
  v10 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v6);
  swift_release(v6);
  swift_retain(v10);
  v11 = sub_10003A0C8((uint64_t *)&unk_1005A4AE0);
  v0 = _allocateUninitializedArray<A>(_:)(4, v11);
  *v1 = v7;
  v1[1] = v8;
  v1[2] = v9;
  v1[3] = v10;
  sub_10003CB20();
  v13 = v0;
  v14 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v0, &unk_100525A78, v12);
  swift_bridgeObjectRelease(v13);
  swift_release(v10);
  swift_release(v9);
  swift_release(v8);
  swift_release(v7);
  return v14;
}

uint64_t sub_100208464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 16);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_1002084B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100208464();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

uint64_t sub_10020851C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 24);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_100208570@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_10020851C();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

uint64_t sub_1002085D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 48);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_100208628@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_1002085D4();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

uint64_t sub_10020868C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 56);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_1002086E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[8];
  _QWORD __dst[8];

  sub_10020C29C(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_10020868C();
  result = __dst;
  *a2 = v2;
  sub_10020C398(__dst);
  return result;
}

void *sub_100208744()
{
  return &unk_1005A4930;
}

uint64_t sub_100208750()
{
  char *v1;
  char v2;
  _BYTE v3[24];

  v1 = (char *)sub_100208744();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_endAccess(v3);
  return v2 & 1;
}

uint64_t sub_1002087A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v6 = v0;
  v3 = *v0;
  v1 = swift_retain(*v0);
  AppDependency.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_1002087FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 8);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_100208854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a1;
  v6 = v1;
  v3 = *(_QWORD *)(v1 + 8);
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  v5 = a1;
  IntentParameter.wrappedValue.setter(&v5);
  swift_release(v3);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1002088C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 16);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_10020891C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a1;
  v6 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  v5 = a1;
  IntentParameter.wrappedValue.setter(&v5);
  swift_release(v3);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_10020898C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 24);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_1002089E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a1;
  v6 = v1;
  v3 = *(_QWORD *)(v1 + 24);
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  v5 = a1;
  IntentParameter.wrappedValue.setter(&v5);
  swift_release(v3);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_100208A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 32);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_100208AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a1;
  v10 = a2;
  v8 = v2;
  v5 = *(_QWORD *)(v2 + 32);
  swift_retain(v5);
  swift_bridgeObjectRetain(a2);
  v7[0] = a1;
  v7[1] = a2;
  IntentParameter.wrappedValue.setter(v7);
  swift_release(v5);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100208B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 40);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_100208BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a1;
  v10 = a2;
  v8 = v2;
  v5 = *(_QWORD *)(v2 + 40);
  swift_retain(v5);
  swift_bridgeObjectRetain(a2);
  v7[0] = a1;
  v7[1] = a2;
  IntentParameter.wrappedValue.setter(v7);
  swift_release(v5);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100208C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 48);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

void *sub_100208C94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_retain(*(_QWORD *)(v3 + 48));
  sub_1002070FC(a1, a2, a3);
  IntentParameter.wrappedValue.setter();
  swift_release();
  return sub_100208D3C(a1, a2, a3);
}

void *sub_100208D3C(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {

    swift_release(a2);
    return (void *)swift_release(a3);
  }
  return result;
}

uint64_t sub_100208D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 56);
  v1 = swift_retain(v3);
  IntentParameter.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t sub_100208DE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2[58] = v1;
  v2[57] = a1;
  v2[47] = v2;
  v2[48] = 0;
  v2[54] = 0;
  v2[55] = 0;
  v3 = type metadata accessor for Logger(0);
  v2[59] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[60] = v4;
  v2[61] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003A0C8((uint64_t *)&unk_1005A4970);
  v2[62] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[48] = v1;
  v7 = type metadata accessor for MainActor(0);
  v2[63] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100208EDC, v8);
}

uint64_t sub_100208EDC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *__src;
  uint64_t v21;
  uint64_t v22;
  uint8_t *buf;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint32_t size;
  os_log_type_t v34;
  NSObject *oslog;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const void *v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  const void *v51;
  uint64_t (**v52)(_QWORD);
  void *v53;
  uint64_t v54;
  void *v55;

  *(_QWORD *)(v0 + 376) = v0;
  v55 = (void *)sub_1002087A4();
  sub_1002B5A94();
  v51 = *(const void **)(v54 + 464);

  memcpy((void *)(v54 + 160), v51, 0x40uLL);
  v52 = (uint64_t (**)(_QWORD))sub_10020749C();
  v53 = (void *)sub_10020690C((uint64_t)&unk_100525A78);
  if (v53)
  {
    *(_QWORD *)(v54 + 448) = &OBJC_PROTOCOL___ComposeCapable;
    v50 = swift_dynamicCastObjCProtocolConditional(v53, 1, v54 + 448);
    if (v50)
    {
      v49 = (void *)v50;
    }
    else
    {

      v49 = 0;
    }
    v48 = v49;
  }
  else
  {
    v48 = 0;
  }
  if (v48)
  {
    v44 = *(_QWORD *)(v54 + 496);
    v45 = *(const void **)(v54 + 464);
    *(_QWORD *)(v54 + 432) = v48;
    sub_10020B244();
    v1 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v44, 1);
    v46 = sub_100209728(v44, 0, 0, 0);
    *(_QWORD *)(v54 + 440) = v46;
    memcpy((void *)(v54 + 224), v45, 0x40uLL);
    sub_10020575C(v46, (uint64_t)&unk_100525A78, v52);
    memcpy((void *)(v54 + 288), v45, 0x40uLL);
    sub_100206AD0(v48, (uint64_t)v46);
    v2 = objc_msgSend(v46, "autosaveIdentifier");
    v47 = v2;
    if (v2)
    {
      v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      v41 = v3;

      v42 = v40;
      v43 = v41;
    }
    else
    {
      v42 = 0;
      v43 = 0;
    }
    v37 = *(_QWORD *)(v54 + 504);
    v38 = *(_QWORD *)(v54 + 496);
    v39 = *(_QWORD *)(v54 + 488);
    sub_1002351C4(v42, v43, (uint64_t *)(v54 + 16));
    memcpy((void *)(v54 + 88), (const void *)(v54 + 16), 0x48uLL);
    v4 = sub_10020B2A8();
    static IntentResult.result<A>(value:)(v54 + 88, &unk_100527368, v4);
    sub_10020B310((_QWORD *)(v54 + 16));

    swift_unknownObjectRelease(v48);
    swift_release(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v54 + 376) + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v54 + 488);
    v28 = *(_QWORD *)(v54 + 480);
    v30 = *(_QWORD *)(v54 + 472);
    v29 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v6, v29, v30);
    v7 = swift_endAccess(v54 + 352);
    oslog = Logger.logObject.getter(v7);
    v34 = static os_log_type_t.error.getter();
    *(_QWORD *)(v54 + 392) = 2;
    v31 = sub_1001EB1EC();
    v32 = sub_1001EB254();
    v8 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v54 + 512), v54 + 392, &type metadata for UInt32, &type metadata for Int, v31, v32, v8);
    size = *(_DWORD *)(v54 + 512);
    v9 = sub_10003A0C8(qword_1005A5580);
    v36 = _allocateUninitializedArray<A>(_:)(0, v9);
    if (os_log_type_enabled(oslog, v34))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v22 = sub_10003A0C8(&qword_1005A3AD0);
      v24 = sub_1001ED340(0, v22, v22);
      v25 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v54 + 400) = buf;
      *(_QWORD *)(v54 + 408) = v24;
      *(_QWORD *)(v54 + 416) = v25;
      sub_1001ED398(0, (_BYTE **)(v54 + 400));
      sub_1001ED398(0, (_BYTE **)(v54 + 400));
      *(_QWORD *)(v54 + 424) = v36;
      v26 = (_QWORD *)swift_task_alloc(48);
      v26[2] = v54 + 400;
      v26[3] = v54 + 408;
      v26[4] = v54 + 416;
      v27 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v10 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v26, v27, v10);
      swift_task_dealloc(v26);
      _os_log_impl((void *)&_mh_execute_header, oslog, v34, "Failed to find a scene capable of composing", buf, size);
      sub_1001ED3F0(v24, 0);
      sub_1001ED3F0(v25, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v36);
    v18 = *(_QWORD *)(v54 + 488);
    v17 = *(_QWORD *)(v54 + 480);
    v19 = *(_QWORD *)(v54 + 472);
    __src = *(_QWORD **)(v54 + 464);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    v11 = sub_10020AFDC();
    swift_allocError(&unk_100529530, v11, 0, 0);
    v21 = v12;
    sub_10020B044(__src);
    *(_QWORD *)(v21 + 24) = &unk_100525A78;
    *(_QWORD *)(v21 + 32) = sub_100207FDC();
    v13 = swift_allocObject(&unk_1005259F8, 80, 7);
    *(_QWORD *)v21 = v13;
    v14 = memcpy((void *)(v13 + 16), __src, 0x40uLL);
    *(_BYTE *)(v21 + 40) = 0;
    swift_willThrow(v14);
    v15 = *(_QWORD *)(v54 + 496);
    v16 = *(_QWORD *)(v54 + 488);
    swift_release(*(_QWORD *)(v54 + 504));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v54 + 376) + 8))();
  }
}

id sub_100209728(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v4;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_10020B154(a1, a2, a3, a4);
}

uint64_t sub_10020977C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t result;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  Swift::String v47;
  const char *v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  Builtin::Word v53;
  const char *v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  Swift::String v58;
  const char *v59;
  uint64_t v60;
  Swift::String v61;
  unsigned int *v62;
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t);
  uint64_t v65;
  unint64_t v66;
  char *v67;
  Swift::String v68;
  const char *v69;
  uint64_t v70;
  Swift::String v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  Swift::String v75;
  const char *v76;
  uint64_t v77;
  Swift::String v78;
  uint64_t v79;
  void (*v80)(char *, _QWORD);
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  char *v84;
  Builtin::Word v85;
  Swift::String v86;
  Builtin::Word v87;
  const char *v88;
  uint64_t v89;
  Swift::String v90;
  unint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  char *v94;
  unint64_t v95;
  Swift::String v96;
  char *v97;
  Builtin::Word v98;
  const char *v99;
  uint64_t v100;
  int v101;
  char *v102;
  Swift::String v103;
  char *v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  void (*v108)(char *, _QWORD, _QWORD, uint64_t);
  Builtin::Word v109;
  Swift::String *v110;
  uint64_t v111;
  void *v112;
  unsigned int v113;
  uint64_t v114;
  void (*v115)(char *, _QWORD);
  uint64_t v116;
  char *v117;
  char *v118;
  _QWORD *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  _QWORD v133[3];
  unsigned __int16 v134;
  const char *v135;
  uint64_t v136;
  unsigned __int16 v137;
  _BYTE v138[24];
  const char *v139;
  uint64_t v140;
  unsigned __int16 v141;
  const char *v142;
  uint64_t v143;
  unsigned __int16 v144;
  _QWORD v145[4];
  unsigned __int16 v146;
  const char *v147;
  uint64_t v148;
  unsigned __int16 v149;
  _QWORD v150[4];
  unsigned __int16 v151;
  const char *v152;
  uint64_t v153;
  unsigned __int16 v154;
  const char *v155;
  uint64_t v156;
  unsigned __int16 v157;
  const char *v158;
  uint64_t v159;
  unsigned __int16 v160;
  const char *v161;
  uint64_t v162;
  unsigned __int16 v163;
  const char *v164;
  uint64_t v165;
  unsigned __int16 v166;
  const char *v167;
  uint64_t v168;
  unsigned __int16 v169;
  const char *v170;
  uint64_t v171;
  unsigned __int16 v172;
  _QWORD v173[5];
  _QWORD __b[8];

  v131 = a1;
  v48 = "To recipients of the email message";
  v54 = "Cc recipients of the email message";
  v59 = "Bcc recipients of the email message";
  v69 = "Subject of the email message";
  v76 = "Body text of the email message";
  v88 = "Account to send the email message with";
  v99 = "Attachments of the email message";
  v123 = __b;
  v106 = 0;
  memset(__b, 0, sizeof(__b));
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4A58);
  v36 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v84 = (char *)&v36 - v36;
  v72 = 0;
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v37 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v122 = (uint64_t)&v36 - v37;
  v38 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A4710) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v72);
  v94 = (char *)&v36 - v38;
  v39 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v3);
  v121 = (char *)&v36 - v39;
  v63 = type metadata accessor for IntentPerson.ParameterMode(v5);
  v51 = *(_QWORD *)(v63 - 8);
  v40 = (*(_QWORD *)(v51 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v63);
  v67 = (char *)&v36 - v40;
  v41 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v72);
  v118 = (char *)&v36 - v41;
  v42 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v6) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v72);
  v105 = (uint64_t)&v36 - v42;
  v43 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v7) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v72);
  v104 = (char *)&v36 - v43;
  v44 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v72);
  v102 = (char *)&v36 - v44;
  v107 = type metadata accessor for LocalizedStringResource(v9);
  v50 = *(_QWORD *)(v107 - 8);
  v45 = (*(_QWORD *)(v50 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v107);
  v117 = (char *)&v36 - v45;
  sub_10003A0C8(&qword_1005A5100);
  v46 = v173;
  memset(v173, 0, sizeof(v173));
  sub_100202C84();
  v10 = sub_100304804();
  v124 = AppDependency.__allocating_init(key:manager:)(v46, v10);
  swift_retain(v124);
  __b[0] = v124;
  v57 = sub_10003A0C8((uint64_t *)&unk_1005A4A68);
  v113 = 1;
  v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Recipient", 9uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v11._countAndFlagsBits, v11._object);
  v97 = "AppIntents";
  v98 = 10;
  v47 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v170 = v48;
  v55 = 34;
  v171 = 34;
  v101 = 2;
  LOBYTE(v172) = 2;
  HIBYTE(v172) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v47._countAndFlagsBits, v47._object, v104, v105, v48, 34, v172);
  v53 = 14;
  v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("TO_DESCRIPTION", 0xEuLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v12._countAndFlagsBits, v12._object);
  v49 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v167 = v48;
  v168 = v55;
  LOBYTE(v169) = v101;
  HIBYTE(v169) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v49._countAndFlagsBits, v49._object, v104, v105, v48, v55, v169);
  v108 = *(void (**)(char *, _QWORD, _QWORD, uint64_t))(v50 + 56);
  v108(v118, v106, v113, v107);
  v62 = (unsigned int *)&enum case for IntentPerson.ParameterMode.email(_:);
  v64 = *(void (**)(char *, _QWORD, uint64_t))(v51 + 104);
  v64(v67, enum case for IntentPerson.ParameterMode.email(_:), v63);
  v114 = type metadata accessor for IntentDialog(v72);
  v115 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v114 - 8) + 56);
  v115(v121, v113);
  v65 = sub_10003A0C8(&qword_1005A48A0);
  v66 = sub_10020BE98();
  sub_1002F0FA0(v122);
  v125 = IntentParameter<>.init(title:description:mode:requestValueDialog:inputConnectionBehavior:)(v117, v118, v67, v121, v122);
  swift_retain(v125);
  __b[1] = v125;
  v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cc", 2uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v13._countAndFlagsBits, v13._object);
  v52 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v164 = v54;
  v165 = v55;
  LOBYTE(v166) = v101;
  HIBYTE(v166) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v52._countAndFlagsBits, v52._object, v104, v105, v54, v55, v166);
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CC_DESCRIPTION", v53, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v14._countAndFlagsBits, v14._object);
  v56 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v161 = v54;
  v162 = v55;
  LOBYTE(v163) = v101;
  HIBYTE(v163) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v56._countAndFlagsBits, v56._object, v104, v105, v54, v55, v163);
  v108(v118, v106, v113, v107);
  v64(v67, *v62, v63);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v121, v113, v113, v114);
  sub_1002F0FA0(v122);
  v126 = IntentParameter<>.init(title:description:mode:requestValueDialog:inputConnectionBehavior:)(v117, v118, v67, v121, v122);
  swift_retain(v126);
  __b[2] = v126;
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Bcc", 3uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v15._countAndFlagsBits, v15._object);
  v58 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v158 = v59;
  v60 = 35;
  v159 = 35;
  LOBYTE(v160) = v101;
  HIBYTE(v160) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v58._countAndFlagsBits, v58._object, v104, v105, v59, 35, v160);
  v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("BCC_DESCRIPTION", 0xFuLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v16._countAndFlagsBits, v16._object);
  v61 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v155 = v59;
  v156 = v60;
  LOBYTE(v157) = v101;
  HIBYTE(v157) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v61._countAndFlagsBits, v61._object, v104, v105, v59, v60, v157);
  v108(v118, v106, v113, v107);
  v64(v67, *v62, v63);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v121, v113, v113, v114);
  sub_1002F0FA0(v122);
  v127 = IntentParameter<>.init(title:description:mode:requestValueDialog:inputConnectionBehavior:)(v117, v118, v67, v121, v122);
  swift_retain(v127);
  __b[3] = v127;
  v74 = sub_10003A0C8(&qword_1005A4A88);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Subject", 7uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v17._countAndFlagsBits, v17._object);
  v68 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v152 = v69;
  v70 = 28;
  v153 = 28;
  LOBYTE(v154) = v101;
  HIBYTE(v154) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v68._countAndFlagsBits, v68._object, v104, v105, v69, 28, v154);
  v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SUBJECT_DESCRIPTION", 0x13uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v18._countAndFlagsBits, v18._object);
  v71 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v150[2] = v69;
  v150[3] = v70;
  LOBYTE(v151) = v101;
  HIBYTE(v151) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v71._countAndFlagsBits, v71._object, v104, v105, v69, v70, v151);
  v108(v118, v106, v113, v107);
  v73 = v150;
  v150[0] = 0;
  v150[1] = 0;
  v79 = type metadata accessor for String.IntentInputOptions(v72);
  v80 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v79 - 8) + 56);
  v80(v84, v113);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v121, v113, v113, v114);
  v81 = sub_10003A0C8(&qword_1005A4A90);
  v82 = sub_10020BF84();
  sub_1002F0FA0(v122);
  v128 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v117, v118, v73, v84, v121, v122);
  swift_retain(v128);
  __b[4] = v128;
  v85 = 4;
  v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Body", 4uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v19._countAndFlagsBits, v19._object);
  v75 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v147 = v76;
  v77 = 30;
  v148 = 30;
  LOBYTE(v149) = v101;
  HIBYTE(v149) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v75._countAndFlagsBits, v75._object, v104, v105, v76, 30, v149);
  v87 = 16;
  v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("BODY_DESCRIPTION", 0x10uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v20._countAndFlagsBits, v20._object);
  v78 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v145[2] = v76;
  v145[3] = v77;
  LOBYTE(v146) = v101;
  HIBYTE(v146) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v78._countAndFlagsBits, v78._object, v104, v105, v76, v77, v146);
  v108(v118, v106, v113, v107);
  v83 = v145;
  v145[0] = 0;
  v145[1] = 0;
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v80)(v84, v113, v113, v79);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v121, v113, v113, v114);
  sub_1002F0FA0(v122);
  v129 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v117, v118, v83, v84, v121, v122);
  swift_retain(v129);
  __b[5] = v129;
  sub_10003A0C8(&qword_1005A4AA8);
  v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("From", v85, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v21._countAndFlagsBits, v21._object);
  v86 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v142 = v88;
  v89 = 38;
  v143 = 38;
  LOBYTE(v144) = v101;
  HIBYTE(v144) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v86._countAndFlagsBits, v86._object, v104, v105, v88, 38, v144);
  v22 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("FROM_DESCRIPTION", v87, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v22._countAndFlagsBits, v22._object);
  v90 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v139 = v88;
  v140 = v89;
  LOBYTE(v141) = v101;
  HIBYTE(v141) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v90._countAndFlagsBits, v90._object, v104, v105, v88, v89, v141);
  v108(v118, v106, v113, v107);
  v93 = v138;
  memset(v138, 0, sizeof(v138));
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v121, v113, v113, v114);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v94, v113, v113, v114);
  v92 = sub_10003A0C8(&qword_1005A4AB0);
  v91 = sub_10020C068();
  v95 = sub_1001ED7B8();
  sub_1002F0FA0(v122);
  v130 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v117, v118, v93, v121, v94, v122, v95);
  swift_retain(v130);
  __b[6] = v130;
  sub_10003A0C8((uint64_t *)&unk_1005A4AC0);
  v109 = 11;
  v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Attachments", 0xBuLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v23._countAndFlagsBits, v23._object);
  v96 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v135 = v99;
  v100 = 32;
  v136 = 32;
  LOBYTE(v137) = v101;
  HIBYTE(v137) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v96._countAndFlagsBits, v96._object, v104, v105, v99, 32, v137);
  v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ATTACHMENTS_DESCRIPTION", 0x17uLL, v113 & 1);
  String.LocalizationValue.init(stringLiteral:)(v24._countAndFlagsBits, v24._object);
  v103 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v97, v98, v113 & 1);
  sub_1001E790C();
  sub_1001E7920(v105);
  v133[1] = v99;
  v133[2] = v100;
  LOBYTE(v134) = v101;
  HIBYTE(v134) = v106 & 1 & v113;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v102, v103._countAndFlagsBits, v103._object, v104, v105, v99, v100, v134);
  v108(v118, v106, v113, v107);
  v119 = v133;
  v133[0] = 0;
  v112 = &type metadata for String;
  v111 = _allocateUninitializedArray<A>(_:)(1, &type metadata for String);
  v110 = v25;
  v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("public.item", v109, v113 & 1);
  v27 = v111;
  *v110 = v26;
  sub_10003CB20();
  v120 = v27;
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v115)(v121, v113, v113, v114);
  v116 = sub_10003A0C8(&qword_1005A4888);
  sub_10020C0E4();
  sub_1002F0FA0(v122);
  v132 = IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)(v117, v118, v119, v120, v121, v122);
  swift_retain(v132);
  __b[7] = v132;
  swift_retain(v124);
  swift_retain(v125);
  swift_retain(v126);
  swift_retain(v127);
  swift_retain(v128);
  swift_retain(v129);
  swift_retain(v130);
  swift_retain(v132);
  swift_release(v132);
  swift_release(v130);
  swift_release(v129);
  swift_release(v128);
  swift_release(v127);
  swift_release(v126);
  swift_release(v125);
  swift_release(v124);
  sub_10020C1D0(v123);
  v28 = v125;
  v29 = v126;
  v30 = v127;
  v31 = v128;
  v32 = v129;
  v33 = v130;
  v34 = v131;
  result = v132;
  *v131 = v124;
  v34[1] = v28;
  v34[2] = v29;
  v34[3] = v30;
  v34[4] = v31;
  v34[5] = v32;
  v34[6] = v33;
  v34[7] = result;
  return result;
}

uint64_t sub_10020AA28()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_1002087FC();
}

uint64_t sub_10020AA64()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_1002088C4();
}

uint64_t sub_10020AAA0()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_10020898C();
}

uint64_t sub_10020AADC()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_100208A54();
}

uint64_t sub_10020AB18()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_100208B3C();
}

uint64_t sub_10020AB54()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_100208C24();
}

uint64_t sub_10020AB90()
{
  const void *v0;
  _BYTE v2[64];

  memcpy(v2, v0, sizeof(v2));
  return sub_100208D8C();
}

uint64_t sub_10020ABCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100207AD8(a1);
}

uint64_t sub_10020ABE0()
{
  return sub_100208750() & 1;
}

uint64_t sub_10020ABF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100207C7C(a1);
}

uint64_t sub_10020AC0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100207844(a1);
}

uint64_t sub_10020AC20(uint64_t a1)
{
  const void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 80) = v2;
  memcpy((void *)(v2 + 16), v1, 0x40uLL);
  v3 = (_QWORD *)swift_task_alloc(dword_1005A496C);
  *(_QWORD *)(v5 + 88) = v3;
  *v3 = *(_QWORD *)(v5 + 80);
  v3[1] = sub_10020ACA8;
  return sub_100208DE4(a1);
}

_QWORD *sub_10020ACA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  *(_QWORD *)(v1 + 80) = *v0;
  v4 = (_QWORD *)(v1 + 80);
  swift_task_dealloc(v2);
  return (*(_QWORD *(**)(_QWORD *__return_ptr))(*v4 + 8))(v4);
}

void *sub_10020AD3C@<X0>(void *a1@<X8>)
{
  uint64_t v3[8];

  sub_10020977C(v3);
  return memcpy(a1, v3, 0x40uLL);
}

uint64_t sub_10020AD78(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100207FDC();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

uint64_t sub_10020ADA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.IntentSchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9BF0;
  sub_10003A134(v8, qword_1005B9BF0);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1002022A0();
  sub_10020AEA8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_10020AEA8()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CreateDraftIntent", 0x11uLL, 1);
  return AssistantSchema.IntentSchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_10020AF7C()
{
  uint64_t v0;

  if (qword_1005A3638 != -1)
    swift_once(&qword_1005A3638, sub_10020ADA4);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9BF0);
}

unint64_t sub_10020AFDC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4980;
  if (!qword_1005A4980)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CFA90, &unk_100529530);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4980);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10020B044(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  swift_retain(*a1);
  swift_retain(v1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
}

uint64_t sub_10020B0E0()
{
  _QWORD *v0;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v2, 80);
}

id sub_10020B154(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  _BOOL8 v4;
  void *v5;
  id v7;
  void *v8;
  void *v9;
  void *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v4 = (*(unsigned int (**)(uint64_t, uint64_t))(v15 + 48))(a1, 1) == 1;
  if (v4)
  {
    v9 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()((NSURL *)v4);
    v8 = v5;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
    v9 = v8;
  }
  v7 = objc_msgSend(v12, "initWithURL:composeType:originalMessage:legacyMessage:");

  return v7;
}

unint64_t sub_10020B244()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A49A0;
  if (!qword_1005A49A0)
  {
    v0 = objc_opt_self(_MFMailCompositionContext);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A49A0);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_10020B2A8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A49A8;
  if (!qword_1005A49A8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD210, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A49A8);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10020B310(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  swift_bridgeObjectRelease(a1[1]);
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
}

uint64_t sub_10020B3AC(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  return swift_release(a1[7]);
}

_QWORD *sub_10020B424(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;

  v3 = *a2;
  swift_retain(*a2);
  *a1 = v3;
  v4 = a2[1];
  swift_retain(v4);
  a1[1] = v4;
  v5 = a2[2];
  swift_retain(v5);
  a1[2] = v5;
  v6 = a2[3];
  swift_retain(v6);
  a1[3] = v6;
  v7 = a2[4];
  swift_retain(v7);
  a1[4] = v7;
  v8 = a2[5];
  swift_retain(v8);
  a1[5] = v8;
  v9 = a2[6];
  swift_retain(v9);
  a1[6] = v9;
  v12 = a2[7];
  swift_retain(v12);
  result = a1;
  a1[7] = v12;
  return result;
}

uint64_t *sub_10020B520(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = *a2;
  swift_retain(*a2);
  v2 = *a1;
  *a1 = v11;
  swift_release(v2);
  v12 = a2[1];
  swift_retain(v12);
  v3 = a1[1];
  a1[1] = v12;
  swift_release(v3);
  v13 = a2[2];
  swift_retain(v13);
  v4 = a1[2];
  a1[2] = v13;
  swift_release(v4);
  v14 = a2[3];
  swift_retain(v14);
  v5 = a1[3];
  a1[3] = v14;
  swift_release(v5);
  v15 = a2[4];
  swift_retain(v15);
  v6 = a1[4];
  a1[4] = v15;
  swift_release(v6);
  v16 = a2[5];
  swift_retain(v16);
  v7 = a1[5];
  a1[5] = v16;
  swift_release(v7);
  v17 = a2[6];
  swift_retain(v17);
  v8 = a1[6];
  a1[6] = v17;
  swift_release(v8);
  v19 = a2[7];
  swift_retain(v19);
  v9 = a1[7];
  a1[7] = v19;
  swift_release(v9);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> initializeWithTake for InstantAnswerView.Model.Action(void *a1, const void *a2)
{
  memcpy(a1, a2, 0x40uLL);
}

uint64_t *sub_10020B68C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  *a1 = *a2;
  swift_release(v2);
  v3 = a1[1];
  a1[1] = a2[1];
  swift_release(v3);
  v4 = a1[2];
  a1[2] = a2[2];
  swift_release(v4);
  v5 = a1[3];
  a1[3] = a2[3];
  swift_release(v5);
  v6 = a1[4];
  a1[4] = a2[4];
  swift_release(v6);
  v7 = a1[5];
  a1[5] = a2[5];
  swift_release(v7);
  v8 = a1[6];
  a1[6] = a2[6];
  swift_release(v8);
  v9 = a1[7];
  a1[7] = a2[7];
  swift_release(v9);
  return a1;
}

uint64_t sub_10020B76C(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      v4 = *(_QWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (*(_QWORD *)a1 < (unint64_t)&_mh_execute_header)
        v3 = *(_QWORD *)a1;
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_10020B8C8(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_QWORD *)result = a2 + 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 64) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 64) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)result = a2 - 1;
  }
  return result;
}

void *type metadata accessor for ComposeMessageIntent()
{
  return &unk_100525A78;
}

unint64_t sub_10020BAF4()
{
  return sub_10020BB08();
}

unint64_t sub_10020BB08()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4A18;
  if (!qword_1005A4A18)
  {
    v0 = sub_1001E7634(&qword_1005A4A20);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A18);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020BB78()
{
  return sub_10020BB8C();
}

unint64_t sub_10020BB8C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4A28;
  if (!qword_1005A4A28)
  {
    v0 = sub_1001E7634(&qword_1005A4A30);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A28);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020BBFC()
{
  return sub_100207FDC();
}

unint64_t sub_10020BC10()
{
  return sub_10020BC24();
}

unint64_t sub_10020BC24()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4A38;
  if (!qword_1005A4A38)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBEF8, &unk_100525A78);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A38);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10020BC90(uint64_t a1)
{
  unint64_t result;

  result = sub_100207FDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10020BCB8(uint64_t a1)
{
  unint64_t result;

  result = sub_10020BCE0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10020BCE0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4A40;
  if (!qword_1005A4A40)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBFA4, &unk_100525A78);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A40);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10020BD4C()
{
  return sub_10020BD60();
}

unint64_t sub_10020BD60()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4A48;
  if (!qword_1005A4A48)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBF6C, &unk_100525A78);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A48);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10020BDCC()
{
  return sub_10020BDE0();
}

unint64_t sub_10020BDE0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4A50;
  if (!qword_1005A4A50)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBF50, &unk_100525A78);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A50);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10020BE4C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1004F6F64, 1) + 8);
}

uint64_t sub_10020BE74(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F6F30, 1);
}

unint64_t sub_10020BE98()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A4A78;
  if (!qword_1005A4A78)
  {
    v2 = sub_1001E7634(&qword_1005A48A0);
    sub_10020BF14();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A78);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020BF14()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4A80;
  if (!qword_1005A4A80)
  {
    v0 = type metadata accessor for IntentPerson(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentPerson, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A80);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020BF84()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A4A98;
  if (!qword_1005A4A98)
  {
    v2 = sub_1001E7634(&qword_1005A4A90);
    sub_10020C000();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4A98);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020C000()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4AA0;
  if (!qword_1005A4AA0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4AA0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10020C068()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A4AB8;
  if (!qword_1005A4AB8)
  {
    v2 = sub_1001E7634(&qword_1005A4AB0);
    sub_1001EDCC8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4AB8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020C0E4()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A4AD0;
  if (!qword_1005A4AD0)
  {
    v2 = sub_1001E7634(&qword_1005A4888);
    sub_10020C160();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4AD0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020C160()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4AD8;
  if (!qword_1005A4AD8)
  {
    v0 = type metadata accessor for IntentFile(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentFile, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4AD8);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_10020C1D0(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  return a1;
}

_QWORD *sub_10020C24C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002084B8(a1, a2);
}

_QWORD *sub_10020C260@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100208570(a1, a2);
}

_QWORD *sub_10020C274@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100208628(a1, a2);
}

_QWORD *sub_10020C288@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002086E0(a1, a2);
}

_QWORD *sub_10020C29C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;

  v3 = *a1;
  swift_retain(*a1);
  *a2 = v3;
  v4 = a1[1];
  swift_retain(v4);
  a2[1] = v4;
  v5 = a1[2];
  swift_retain(v5);
  a2[2] = v5;
  v6 = a1[3];
  swift_retain(v6);
  a2[3] = v6;
  v7 = a1[4];
  swift_retain(v7);
  a2[4] = v7;
  v8 = a1[5];
  swift_retain(v8);
  a2[5] = v8;
  v10 = a1[6];
  swift_retain(v10);
  a2[6] = v10;
  v12 = a1[7];
  swift_retain(v12);
  result = a2;
  a2[7] = v12;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10020C398(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  swift_release(*a1);
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
}

uint64_t sub_10020C434()
{
  return sub_10020C448();
}

uint64_t sub_10020C448()
{
  return 6;
}

uint64_t sub_10020C468()
{
  return sub_10020C47C();
}

uint64_t sub_10020C47C()
{
  return 2;
}

uint64_t sub_10020C49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v5 = v2;
  *(_QWORD *)(v2 + 16) = v2;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A4AFC);
  *(_QWORD *)(v5 + 24) = v3;
  *v3 = *(_QWORD *)(v5 + 16);
  v3[1] = sub_100207408;
  return sub_10020C528(a1, a2);
}

uint64_t sub_10020C528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[10] = a1;
  v3[2] = v3;
  v3[3] = 0;
  v3[4] = 0;
  v3[5] = 0;
  v3[7] = 0;
  v3[8] = 0;
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = v2;
  return swift_task_switch(sub_10020C590, 0);
}

uint64_t sub_10020C590()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[10];
  v0[2] = v0;
  v0[6] = v1;
  v7 = sub_10003A0C8(&qword_1005A4B00);
  v2 = sub_10020D1A0();
  v8 = Sequence.compactMap<A>(_:)(sub_10020D068, 0, v7, &type metadata for String, v2);
  v0[12] = v8;
  v0[13] = 0;
  v6[7] = v8;
  v4 = type metadata accessor for MainActor(0);
  v6[14] = v4;
  v6[15] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020C6C8, v5);
}

uint64_t sub_10020C6C8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v3;

  v3 = v0[15];
  v1 = (void *)v0[11];
  v0[2] = v0;
  v0[16] = objc_msgSend(v1, "daemonInterface");
  swift_release(v3);
  return swift_task_switch(sub_10020C738, 0);
}

uint64_t sub_10020C738()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  Class isa;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 16) = v0;
  if (!v1)
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ComposeTransactionIntentProtocol.swift", 49, 2, 36, 0);
  v6 = (id)v15[16];
  v13 = v15[14];
  v7 = v15[12];
  v9 = objc_msgSend(v6, "messageRepository");

  swift_bridgeObjectRetain(v7);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  v10 = objc_msgSend(v9, "messageObjectIDsForSearchableItemIdentifiers:", isa);

  v11 = objc_msgSend(v10, "result");
  v12 = objc_msgSend(v11, "objectIDs");
  v2 = sub_10020D210();
  v15[17] = v2;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v2);
  v15[18] = v3;
  v15[8] = v3;

  v15[19] = static MainActor.shared.getter(v4);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020C984, v14);
}

uint64_t sub_10020C984()
{
  _QWORD *v0;
  void *v1;
  uint64_t v3;

  v3 = v0[19];
  v1 = (void *)v0[11];
  v0[2] = v0;
  v0[20] = objc_msgSend(v1, "daemonInterface");
  swift_release(v3);
  return swift_task_switch(sub_10020C9F4, 0);
}

uint64_t sub_10020C9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 16) = v0;
  if (!v1)
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ComposeTransactionIntentProtocol.swift", 49, 2, 37, 0);
  v8 = (id)v19[20];
  v11 = v19[18];
  v9 = v19[17];
  v2 = v19[13];
  v13 = objc_msgSend(v8, "messageRepository");

  swift_bridgeObjectRetain(v11);
  sub_10020D274();
  v10 = _arrayForceCast<A, B>(_:)(v11, v9);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v11);
  v14 = objc_msgSend(v13, "messageListItemsForObjectIDs:", isa);

  v3 = sub_10003A0C8((uint64_t *)&unk_1005A4B20);
  v19[9] = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v3);
  v15 = sub_10003A0C8((uint64_t *)&unk_1005A96E0);
  v16 = sub_10003A0C8(qword_1005A47A0);
  v4 = sub_10020D324();
  result = sub_1001E919C((void (*)(char *, char *))sub_10020D2D8, 0, v15, v16, (uint64_t)&type metadata for Never, v4, (uint64_t)&protocol witness table for Never, v17);
  v18 = result;
  if (!v2)
  {
    v6 = v19[18];
    v7 = v19[12];
    sub_1001ED890(v19 + 9);

    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    return (*(uint64_t (**)(uint64_t))(v19[2] + 8))(v18);
  }
  return result;
}

uint64_t sub_10020CCC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = v1;
  *(_QWORD *)(v1 + 16) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A4B3C);
  *(_QWORD *)(v4 + 24) = v2;
  *v2 = *(_QWORD *)(v4 + 16);
  v2[1] = sub_100207408;
  return sub_10020CD4C(a1);
}

uint64_t sub_10020CD4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[2] = v2;
  v2[3] = 0;
  v2[4] = 0;
  v2[3] = a1;
  v2[4] = v1;
  return swift_task_switch(sub_10020CD98, 0);
}

uint64_t sub_10020CD98()
{
  uint64_t v0;
  id v1;
  char v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  *(_QWORD *)(v0 + 16) = v0;
  v6 = (void *)objc_opt_self(MFComposeMailMessage);
  sub_10020714C();
  v1 = objc_msgSend((id)objc_opt_self(MailAccount), "defaultMailAccountForDelivery");
  v7 = sub_10020D02C(v1);
  if (v7)
  {
    v4 = objc_msgSend(v6, "legacyMessageWithMessage:mailboxUid:", *(_QWORD *)(v5 + 40));

    return (*(uint64_t (**)(id))(*(_QWORD *)(v5 + 16) + 8))(v4);
  }
  else
  {
    v3 = 2;
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ComposeTransactionIntentProtocol.swift", 49, v3, 41, 0);
  }
}

id sub_10020CF00(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10020D394();
  return sub_10020CF2C(a1, v1);
}

id sub_10020CF2C(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;

  v4 = (id)(*(uint64_t (**)(void))(a2 + 40))();
  v5 = objc_msgSend(v4, "mostRecentMainScene");

  if (v5)
    return v5;
  else
    return 0;
}

void sub_10020CFC4()
{
  sub_10020D394();
  sub_100206AB0();
}

id sub_10020D02C(void *a1)
{
  id v1;

  v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_10020D7EC(a1);
}

uint64_t sub_10020D068@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v11 = a2;
  v12 = a1;
  v19 = 0;
  v2 = sub_10003A0C8((uint64_t *)&unk_1005A4BB0);
  v13 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v16 = (uint64_t)&v9 - v13;
  v14 = *v3;
  v15 = v3[1];
  v19 = v3;
  swift_bridgeObjectRetain(v15);
  MailMessageEntityID.init(with:)(v14, v15);
  v17 = type metadata accessor for MailMessageEntityID(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v16, 1) == 1)
  {
    result = sub_10020D830(v16);
    v5 = v11;
    *v11 = 0;
    v5[1] = 0;
  }
  else
  {
    v9 = MailMessageEntityID.uniqueIdentifier.getter();
    v10 = v6;
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    result = v9;
    v7 = v11;
    v8 = v10;
    *v11 = v9;
    v7[1] = v8;
  }
  return result;
}

unint64_t sub_10020D1A0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4B08;
  if (!qword_1005A4B08)
  {
    v0 = sub_1001E7634(&qword_1005A4B00);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4B08);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020D210()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4B10;
  if (!qword_1005A4B10)
  {
    v0 = objc_opt_self(EMMessageObjectID);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4B10);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_10020D274()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A96D0;
  if (!qword_1005A96D0)
  {
    v0 = objc_opt_self(EMObjectID);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A96D0);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_10020D2D8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "result");
  *a2 = result;
  return result;
}

unint64_t sub_10020D324()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A96F0;
  if (!qword_1005A96F0)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A96E0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A96F0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10020D394()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4B48;
  if (!qword_1005A4B48)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CBDA4, &unk_100525890);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4B48);
    return WitnessTable;
  }
  return v2;
}

id sub_10020D3FC(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10020D428();
  return sub_10020CF2C(a1, v1);
}

unint64_t sub_10020D428()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4B60;
  if (!qword_1005A4B60)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC4B0, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4B60);
    return WitnessTable;
  }
  return v2;
}

void sub_10020D490()
{
  sub_10020D428();
  sub_100206AB0();
}

id sub_10020D4F8(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10020D524();
  return sub_10020CF2C(a1, v1);
}

unint64_t sub_10020D524()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4B78;
  if (!qword_1005A4B78)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D2AEC, &unk_10052C440);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4B78);
    return WitnessTable;
  }
  return v2;
}

void sub_10020D58C()
{
  sub_10020D524();
  sub_100206AB0();
}

id sub_10020D5F4(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10020D620();
  return sub_10020CF2C(a1, v1);
}

unint64_t sub_10020D620()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4B90;
  if (!qword_1005A4B90)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D36F8, &unk_10052D880);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4B90);
    return WitnessTable;
  }
  return v2;
}

void sub_10020D688()
{
  sub_10020D620();
  sub_100206AB0();
}

id sub_10020D6F0(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10020D71C();
  return sub_10020CF2C(a1, v1);
}

unint64_t sub_10020D71C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4BA8;
  if (!qword_1005A4BA8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D3E68, &unk_10052EAC0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4BA8);
    return WitnessTable;
  }
  return v2;
}

void sub_10020D784()
{
  sub_10020D71C();
  sub_100206AB0();
}

id sub_10020D7EC(void *a1)
{
  void *v1;
  id v4;

  v4 = objc_msgSend(v1, "initWithAccount:");

  return v4;
}

uint64_t sub_10020D830(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for MailMessageEntityID(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

id sub_10020D8A0(void *a1)
{
  objc_class *v1;
  id v2;

  v2 = objc_allocWithZone(v1);
  return sub_100007C20(a1);
}

void sub_10020D8D8(char a1, void *a2)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t countAndFlagsBits;
  void *v14;
  NSBundle v15;
  void *v16;
  void *object;
  Swift::String v18;
  id v19;
  uint64_t v20;
  const char *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30;
  Swift::String v31;

  v22 = a2;
  v28 = 0;
  v30 = a1 & 1;
  v29 = a2;
  if ((a1 & 1) != 0)
  {
    v2 = v23;
    v21 = "cancelLastDelayedMessage";
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v20 = 0;
    v10 = 0;
    objc_msgSend(v22, "registerUndoWithTarget:selector:object:", v23, "cancelLastDelayedMessage");
    swift_unknownObjectRelease(v10);
    swift_unknownObjectRelease(v23);
    v11 = 1;
    v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Send", 4uLL, 1);
    countAndFlagsBits = v3._countAndFlagsBits;
    object = v3._object;
    v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Title of 'Undo Send' button in status bar", 0x29uLL, v11 & 1);
    v12 = v4._countAndFlagsBits;
    v16 = v4._object;
    v15.super.isa = (Class)sub_10003DBA4();
    v5 = sub_10003DB7C();
    v31._countAndFlagsBits = v12;
    v6._countAndFlagsBits = v5;
    v7._countAndFlagsBits = countAndFlagsBits;
    v6._object = v8;
    v7._object = object;
    v14 = v6._object;
    v31._object = v16;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, v15, v6, v31);
    swift_bridgeObjectRelease(v14);

    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(object);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18._object);
    objc_msgSend(v22, "setActionName:", v19);

  }
  else
  {
    v9 = v23;
    objc_msgSend(v22, "removeAllActionsWithTarget:", v23);
    swift_unknownObjectRelease(v23);
  }
}

_QWORD *sub_10020DB6C(_QWORD *result, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(*(_QWORD *)(a2 - 8) + 80);
  if ((v2 & 0x20000) != 0)
    return (_QWORD *)(*result + ((v2 + 16) & ~(unint64_t)v2));
  return result;
}

void sub_10020DC28()
{
  char *v0;
  id v1;
  char *v2;
  uint64_t v3;
  const void *v4;
  id v5;
  void **aBlock;
  int v7;
  int v8;
  uint64_t (*v9)(uint64_t, char);
  void *v10;
  uint64_t (*v11)(char);
  uint64_t v12;
  char *v13;

  v13 = v0;
  v5 = *(id *)&v0[OBJC_IVAR____TtC10MobileMail18ComposeUndoHandler_outgoingMessageRepository];
  v1 = v5;
  v2 = v0;
  v3 = swift_allocObject(&unk_100525C48, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v11 = sub_10020E4A4;
  v12 = v3;
  aBlock = _NSConcreteStackBlock;
  v7 = 1107296256;
  v8 = 0;
  v9 = sub_10020E4B0;
  v10 = &unk_100525C60;
  v4 = _Block_copy(&aBlock);
  swift_release(v12);
  objc_msgSend(v5, "cancelLastDelayedMessage:", v4);
  _Block_release(v4);

}

uint64_t sub_10020DD08(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t *v31;
  uint64_t *v32;
  _BYTE **v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint32_t v40;
  int v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t *v51;
  uint64_t *v52;
  _BYTE **v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint32_t v60;
  int v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint32_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint32_t v84;
  uint64_t v85;
  char v86;

  v66 = a1;
  v65 = a2;
  v86 = 0;
  v85 = 0;
  v64 = 0;
  v67 = type metadata accessor for Logger(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = (*(_QWORD *)(v68 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v66);
  v70 = (char *)&v23 - v69;
  v71 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v72 = (char *)&v23 - v71;
  v86 = v4 & 1;
  v85 = v5;
  if ((v4 & 1) != 0)
  {
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 16))(v70, v65 + OBJC_IVAR____TtC10MobileMail18ComposeUndoHandler_logger, v67);
    v42 = Logger.logObject.getter(v15);
    v41 = static os_log_type_t.default.getter();
    v39 = &v83;
    v83 = 2;
    v37 = sub_1001EB1EC();
    v38 = sub_1001EB254();
    v16 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v84, v39, &type metadata for UInt32, &type metadata for Int, v37, v38, v16);
    v40 = v84;
    v17 = sub_10003A0C8(qword_1005A5580);
    v43 = _allocateUninitializedArray<A>(_:)(0, v17);
    if (os_log_type_enabled(v42, (os_log_type_t)v41))
    {
      v18 = v64;
      v27 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v25 = sub_10003A0C8(&qword_1005A3AD0);
      v26 = 0;
      v28 = sub_1001ED340(0, v25, v25);
      v29 = sub_1001ED340(v26, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v33 = &v82;
      v82 = v27;
      v34 = &v81;
      v81 = v28;
      v31 = &v80;
      v80 = v29;
      v30 = 0;
      sub_1001ED398(0, &v82);
      sub_1001ED398(v30, v33);
      v79 = v43;
      v32 = &v23;
      __chkstk_darwin(&v23);
      v19 = v34;
      v20 = &v23 - 6;
      v35 = &v23 - 6;
      v20[2] = (uint64_t)v33;
      v20[3] = (uint64_t)v19;
      v20[4] = v21;
      v36 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v22 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v35, v36, v22);
      if (v18)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v41, "User selected Undo Send. Cancel last delayed message.", v27, v40);
        v24 = 0;
        sub_1001ED3F0(v28, 0);
        sub_1001ED3F0(v29, v24);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v43);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v43);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v70, v67);
  }
  else
  {
    v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 16))(v72, v65 + OBJC_IVAR____TtC10MobileMail18ComposeUndoHandler_logger, v67);
    v62 = Logger.logObject.getter(v6);
    v61 = static os_log_type_t.error.getter();
    v59 = &v77;
    v77 = 2;
    v57 = sub_1001EB1EC();
    v58 = sub_1001EB254();
    v7 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v78, v59, &type metadata for UInt32, &type metadata for Int, v57, v58, v7);
    v60 = v78;
    v8 = sub_10003A0C8(qword_1005A5580);
    v63 = _allocateUninitializedArray<A>(_:)(0, v8);
    if (os_log_type_enabled(v62, (os_log_type_t)v61))
    {
      v9 = v64;
      v47 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v45 = sub_10003A0C8(&qword_1005A3AD0);
      v46 = 0;
      v48 = sub_1001ED340(0, v45, v45);
      v49 = sub_1001ED340(v46, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v53 = &v76;
      v76 = v47;
      v54 = &v75;
      v75 = v48;
      v51 = &v74;
      v74 = v49;
      v50 = 0;
      sub_1001ED398(0, &v76);
      sub_1001ED398(v50, v53);
      v73 = v63;
      v52 = &v23;
      __chkstk_darwin(&v23);
      v10 = v54;
      v11 = &v23 - 6;
      v55 = &v23 - 6;
      v11[2] = (uint64_t)v53;
      v11[3] = (uint64_t)v10;
      v11[4] = v12;
      v56 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v13 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v55, v56, v13);
      if (v9)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v61, "Failed to cancel last delayed message!", v47, v60);
        v44 = 0;
        sub_1001ED3F0(v48, 0);
        sub_1001ED3F0(v49, v44);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v63);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v63);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v72, v67);
  }
}

uint64_t sub_10020E468()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_10020E4A4(char a1)
{
  uint64_t v1;

  return sub_10020DD08(a1 & 1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10020E4B0(uint64_t a1, char a2)
{
  void (*v4)(_QWORD);
  uint64_t v5;

  v4 = *(void (**)(_QWORD))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v4(a2 & 1);
  return swift_release(v5);
}

uint64_t sub_10020E504(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10020E548(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10020E59C()
{
  uint64_t result;
  char v1;
  uint64_t v2;

  if (!"MobileMail.ComposeUndoHandler")
  {
    v1 = 2;
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StaticString.swift", 24, v1, 136, 0);
    __break(1u);
  }
  result = sub_100220ABC((uint64_t)"MobileMail.ComposeUndoHandler", 29, (unint64_t)"init()", 6, 2, (unint64_t)"MobileMail/ComposeUndoHandler.swift", 35, 2, v2, 0xDuLL, 7uLL);
  __break(1u);
  return result;
}

id sub_10020E6CC()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComposeUndoHandler(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10020E77C()
{
  uint64_t result;

  result = sub_10020E798();
  qword_1005B9C08 = result;
  return result;
}

uint64_t sub_10020E798()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ComposeViewAnnotationBridge();
  v3 = sub_10020E820();
  type metadata accessor for AppManager(0);
  v2 = static AppManager.shared.getter();
  swift_retain(v3);
  v0 = sub_100210760();
  AppManager.addBridge(_:)(v3, v0);
  swift_unknownObjectRelease(v3);
  swift_release(v2);
  return v3;
}

uint64_t sub_10020E820()
{
  uint64_t v0;

  swift_allocObject(v0, 24, 7);
  return sub_10020FCD0();
}

uint64_t *sub_10020E858()
{
  if (qword_1005A3640 != -1)
    swift_once(&qword_1005A3640, sub_10020E77C);
  return &qword_1005B9C08;
}

uint64_t sub_10020E8AC(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t *v21;
  _BYTE **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint32_t v42;
  uint64_t v43;
  int v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;

  v31 = a1;
  v55 = 0;
  v54 = 0;
  v34 = 0;
  v26 = 0;
  v43 = 0;
  v37 = type metadata accessor for Logger(0);
  v35 = *(_QWORD *)(v37 - 8);
  v27 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = (char *)&v13 - v27;
  v28 = (char *)&v13 - v27;
  v55 = __chkstk_darwin(v31);
  v54 = v2;
  v30 = &v53;
  v33 = 32;
  swift_beginAccess(v2 + 16);
  v32 = *(id *)(v29 + 16);
  v3 = v32;
  swift_endAccess(v30);
  swift_unknownObjectRetain(v31);
  objc_msgSend(v32, "addObject:", v31);
  swift_unknownObjectRelease(v31);

  v36 = Logger.appIntentLogger.unsafeMutableAddressor();
  v38 = (char *)&v52 + 4;
  swift_beginAccess(v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v1, v36, v37);
  v4 = swift_endAccess(v38);
  v45 = Logger.logObject.getter(v4);
  v44 = static os_log_type_t.debug.getter();
  v41 = &v51;
  v51 = 2;
  v39 = sub_1001EB1EC();
  v40 = sub_1001EB254();
  v5 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v52, v41, &type metadata for UInt32, &type metadata for Int, v39, v40, v5);
  v42 = v52;
  v6 = sub_10003A0C8(qword_1005A5580);
  v46 = _allocateUninitializedArray<A>(_:)(v43, v6);
  if (os_log_type_enabled(v45, (os_log_type_t)v44))
  {
    v7 = v26;
    v16 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v14 = sub_10003A0C8(&qword_1005A3AD0);
    v15 = 0;
    v17 = sub_1001ED340(0, v14, v14);
    v18 = sub_1001ED340(v15, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v22 = &v50;
    v50 = v16;
    v23 = &v49;
    v49 = v17;
    v20 = &v48;
    v48 = v18;
    v19 = 0;
    sub_1001ED398(0, &v50);
    sub_1001ED398(v19, v22);
    v47 = v46;
    v21 = &v13;
    __chkstk_darwin(&v13);
    v8 = v23;
    v9 = &v13 - 6;
    v24 = &v13 - 6;
    v9[2] = (uint64_t)v22;
    v9[3] = (uint64_t)v8;
    v9[4] = v10;
    v25 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v11 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v24, v25, v11);
    if (v7)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "#SiriMail Registering MailComposeViewAnnotationDelegate", v16, v42);
      v13 = 0;
      sub_1001ED3F0(v17, 0);
      sub_1001ED3F0(v18, v13);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v46);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v46);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v28, v37);
}

uint64_t sub_10020ED2C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t *v21;
  _BYTE **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint32_t v42;
  uint64_t v43;
  int v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;

  v31 = a1;
  v55 = 0;
  v54 = 0;
  v34 = 0;
  v26 = 0;
  v43 = 0;
  v37 = type metadata accessor for Logger(0);
  v35 = *(_QWORD *)(v37 - 8);
  v27 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = (char *)&v13 - v27;
  v28 = (char *)&v13 - v27;
  v55 = __chkstk_darwin(v31);
  v54 = v2;
  v30 = &v53;
  v33 = 32;
  swift_beginAccess(v2 + 16);
  v32 = *(id *)(v29 + 16);
  v3 = v32;
  swift_endAccess(v30);
  swift_unknownObjectRetain(v31);
  objc_msgSend(v32, "removeObject:", v31);
  swift_unknownObjectRelease(v31);

  v36 = Logger.appIntentLogger.unsafeMutableAddressor();
  v38 = (char *)&v52 + 4;
  swift_beginAccess(v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v1, v36, v37);
  v4 = swift_endAccess(v38);
  v45 = Logger.logObject.getter(v4);
  v44 = static os_log_type_t.debug.getter();
  v41 = &v51;
  v51 = 2;
  v39 = sub_1001EB1EC();
  v40 = sub_1001EB254();
  v5 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v52, v41, &type metadata for UInt32, &type metadata for Int, v39, v40, v5);
  v42 = v52;
  v6 = sub_10003A0C8(qword_1005A5580);
  v46 = _allocateUninitializedArray<A>(_:)(v43, v6);
  if (os_log_type_enabled(v45, (os_log_type_t)v44))
  {
    v7 = v26;
    v16 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v14 = sub_10003A0C8(&qword_1005A3AD0);
    v15 = 0;
    v17 = sub_1001ED340(0, v14, v14);
    v18 = sub_1001ED340(v15, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v22 = &v50;
    v50 = v16;
    v23 = &v49;
    v49 = v17;
    v20 = &v48;
    v48 = v18;
    v19 = 0;
    sub_1001ED398(0, &v50);
    sub_1001ED398(v19, v22);
    v47 = v46;
    v21 = &v13;
    __chkstk_darwin(&v13);
    v8 = v23;
    v9 = &v13 - 6;
    v24 = &v13 - 6;
    v9[2] = (uint64_t)v22;
    v9[3] = (uint64_t)v8;
    v9[4] = v10;
    v25 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v11 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v24, v25, v11);
    if (v7)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "#SiriMail Unregistering MailComposeViewAnnotationDelegate", v16, v42);
      v13 = 0;
      sub_1001ED3F0(v17, 0);
      sub_1001ED3F0(v18, v13);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v46);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v46);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v28, v37);
}

uint64_t sub_10020F1AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[13] = v0;
  v1[7] = v1;
  v1[8] = 0;
  v1[9] = 0;
  v1[5] = 0;
  v1[6] = 0;
  v1[12] = 0;
  v2 = type metadata accessor for ViewEntityIdentifier();
  v1[14] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[15] = v3;
  v6 = *(_QWORD *)(v3 + 64);
  v1[16] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[17] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[8] = v0;
  v7 = type metadata accessor for MainActor(0);
  v1[18] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[19] = v8;
  v1[20] = v4;
  return swift_task_switch(sub_10020F2A4, v8);
}

uint64_t sub_10020F2A4()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  v1 = v0[14];
  v13 = v0[13];
  v0[7] = v0;
  v0[9] = _allocateUninitializedArray<A>(_:)(0, v1);
  swift_beginAccess(v13 + 16);
  v14 = *(void **)(v13 + 16);
  v2 = v14;
  swift_endAccess(v0 + 2);
  v17 = objc_msgSend(v14, "allObjects");
  v3 = sub_10003A0C8(&qword_1005A4C10);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v3);

  v0[10] = v15;
  v16 = sub_10003A0C8(&qword_1005A4C18);
  v4 = sub_1002104C0();
  Collection<>.makeIterator()(v0 + 5, v16, v4);

  v5 = sub_10003A0C8(&qword_1005A4C28);
  IndexingIterator.next()(v5);
  v18 = v0[11];
  v0[21] = v18;
  if (v18)
  {
    v12[12] = v18;
    v6 = (_QWORD *)swift_task_alloc(dword_1005A4C34);
    v12[22] = v6;
    *v6 = v12[7];
    v6[1] = sub_10020F4C0;
    return sub_10020F6E4(v12[17], v18);
  }
  else
  {
    v8 = v12[18];
    v9 = v12[17];
    v10 = v12[16];
    sub_1001ED890(v12 + 5);
    v11 = v12[9];
    swift_bridgeObjectRetain(v11);
    sub_1001ED890(v12 + 9);
    swift_release(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(uint64_t))(v12[7] + 8))(v11);
  }
}

uint64_t sub_10020F4C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(v3 + 56) = *v0;
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10020F52C, *(_QWORD *)(v3 + 152));
}

uint64_t sub_10020F52C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = v0[21];
  v12 = v0[17];
  v10 = v0[16];
  v11 = v0[15];
  v13 = v0[14];
  v0[7] = v0;
  (*(void (**)(void))(v11 + 16))();
  v1 = sub_10003A0C8(&qword_1005A4C38);
  Array.append(_:)(v10, v1);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  swift_unknownObjectRelease(v14);
  v2 = sub_10003A0C8(&qword_1005A4C28);
  IndexingIterator.next()(v2);
  v15 = v0[11];
  v0[21] = v15;
  if (v15)
  {
    v9[12] = v15;
    v3 = (_QWORD *)swift_task_alloc(dword_1005A4C34);
    v9[22] = v3;
    *v3 = v9[7];
    v3[1] = sub_10020F4C0;
    return sub_10020F6E4(v9[17], v15);
  }
  else
  {
    v5 = v9[18];
    v6 = v9[17];
    v7 = v9[16];
    sub_1001ED890(v9 + 5);
    v8 = v9[9];
    swift_bridgeObjectRetain(v8);
    sub_1001ED890(v9 + 9);
    swift_release(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(uint64_t))(v9[7] + 8))(v8);
  }
}

uint64_t sub_10020F6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;

  v3[15] = a2;
  v3[14] = a1;
  v3[11] = v3;
  v3[12] = 0;
  v3[13] = 0;
  v4 = type metadata accessor for ViewLocation();
  v3[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AppEntityVisualState(0);
  v3[17] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[18] = v6;
  v3[19] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[12] = a2;
  v3[13] = v2;
  v9 = type metadata accessor for MainActor(0);
  v3[20] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020F7EC, v10);
}

uint64_t sub_10020F7EC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  v11 = v0[20];
  v12 = v0[19];
  v1 = v0[17];
  v13 = v0[16];
  v2 = (void *)v0[15];
  v8 = v2;
  v0[11] = (uint64_t)v0;
  swift_getObjectType(v2);
  v9 = objc_msgSend(v8, "getAutosaveId");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  sub_1002351C4(v3, v4, v0 + 2);

  sub_100210530(v0 + 2);
  v14[3] = &unk_100527368;
  v14[4] = sub_1002105CC();
  v14[0] = swift_allocObject(&unk_100525C98, 88, 7);
  memcpy((void *)(v14[0] + 16), v0 + 2, 0x48uLL);
  v10 = _allocateUninitializedArray<A>(_:)(2, v1);
  v5 = static AppEntityVisualState.primary.getter();
  static AppEntityVisualState.editing.getter(v5);
  sub_10003CB20();
  v6 = sub_1002106A8();
  SetAlgebra<>.init(arrayLiteral:)(v10, v1, v6);
  sub_10020FC4C();
  ViewEntityIdentifier.init(for:interactionId:location:state:)(v14, 0, v13, v12);
  sub_10020B310(v0 + 2);
  swift_release(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0[11] + 8))();
}

uint64_t sub_10020F9A0()
{
  uint64_t v0;

  v0 = type metadata accessor for ViewIntentIdentifier();
  return _allocateUninitializedArray<A>(_:)(0, v0);
}

uint64_t sub_10020F9D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 48) = v5;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_BYTE *)(v5 + 40) = a4 & 1;
  *(_QWORD *)(v5 + 56) = v4;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 64) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020FA88, v8);
}

uint64_t sub_10020FA88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 48) = v0;
  swift_release(v1);
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 48) + 8))(0);
}

uint64_t sub_10020FAE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2[2] = v2;
  v2[3] = 0;
  v2[4] = 0;
  v2[3] = a1;
  v2[4] = v1;
  v4 = type metadata accessor for MainActor(0);
  v2[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020FB6C, v5);
}

uint64_t sub_10020FB6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = v0;
  swift_release(v1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 8))();
}

uint64_t sub_10020FBB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = v2;
  v2[3] = 0;
  v2[4] = 0;
  v2[3] = a1;
  v2[4] = v1;
  return swift_task_switch(sub_10020FBF0, 0);
}

uint64_t sub_10020FBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = v0;
  v1 = type metadata accessor for ViewEntityIdentifier();
  v2 = _allocateUninitializedArray<A>(_:)(0, v1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 16) + 8))(v2);
}

uint64_t sub_10020FC4C()
{
  return static ViewLocation.unknown.getter();
}

uint64_t sub_10020FC60()
{
  uint64_t v0;
  uint64_t v2;

  return v2;
}

uint64_t sub_10020FC94()
{
  uint64_t v0;

  v0 = sub_10020FC60();
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_10020FCD0()
{
  id v0;
  uint64_t result;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  result = v2;
  *(_QWORD *)(v2 + 16) = v0;
  return result;
}

uint64_t sub_10020FD20()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 16) = v0;
  v1 = (_QWORD *)swift_task_alloc(dword_1005A4C0C);
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = *(_QWORD *)(v0 + 16);
  v1[1] = sub_10020FD8C;
  return sub_10020F1AC();
}

uint64_t sub_10020FD8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(*v1 + 16) = *v1;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 16) + 8))(a1);
}

uint64_t sub_10020FDF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v1[3] = v0;
  v1[2] = v1;
  v3 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10020FE70, v4);
}

uint64_t sub_10020FE70()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = v0;
  v3 = sub_10020F9A0();
  swift_release(v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 16) + 8))(v3);
}

uint64_t sub_10020FED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = v4;
  v5 = (_QWORD *)swift_task_alloc(dword_1005A4C44);
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = *(_QWORD *)(v4 + 16);
  v5[1] = sub_10020FF60;
  return sub_10020F9D8(a1, a2, a3, a4 & 1);
}

_QWORD *sub_10020FF60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 24);
  *(_QWORD *)(v5 + 16) = *v3;
  v9 = (_QWORD *)(v5 + 16);
  v10 = a1;
  v7 = swift_task_dealloc(v6);
  if (v2)
    return (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(*v9 + 8))(v9, v7);
  else
    return (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*v9 + 8))(v9, v10, a2);
}

uint64_t sub_100210004(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A4C4C);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = *(_QWORD *)(v1 + 16);
  v2[1] = sub_1001EA914;
  return sub_10020FAE0(a1);
}

uint64_t sub_100210078(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A4C54);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = *(_QWORD *)(v1 + 16);
  v2[1] = sub_1001EA784;
  return sub_10020FBB8(a1);
}

uint64_t sub_1002100EC(uint64_t a1)
{
  _QWORD *v1;

  return AppViewBridge.registerAnnotation(_:)(a1, *v1);
}

uint64_t sub_100210104(uint64_t a1)
{
  _QWORD *v1;

  return AppViewBridge.unregisterAnnotation(_:)(a1, *v1);
}

uint64_t sub_10021011C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v11;

  v11 = *v5;
  *(_QWORD *)(v6 + 16) = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to AppViewBridge.actionForScene(executionIdentifier:completed:)[1]);
  *(_QWORD *)(v6 + 24) = v7;
  *v7 = *(_QWORD *)(v6 + 16);
  v7[1] = sub_100207408;
  return AppViewBridge.actionForScene(executionIdentifier:completed:)(a1, a2, a3, v11, a5);
}

uint64_t sub_1002101B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v11;

  v11 = *v5;
  *(_QWORD *)(v6 + 16) = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to AppViewBridge.actionForScene(executionIdentifier:completed:)[1]);
  *(_QWORD *)(v6 + 24) = v7;
  *v7 = *(_QWORD *)(v6 + 16);
  v7[1] = sub_100207408;
  return AppViewBridge.actionForScene(executionIdentifier:completed:)(a1, a2, a3, v11, a5);
}

uint64_t static MailComposeViewAnnotationBridge.registerMailViewAnnotationDelegate(_:)(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  v2 = sub_10020E858();
  swift_beginAccess(v2);
  v4 = *v2;
  swift_retain(*v2);
  swift_endAccess(v5);
  sub_10020E8AC(a1);
  return swift_release(v4);
}

uint64_t static MailComposeViewAnnotationBridge.unregisterMailViewAnnotationDelegate(_:)(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  v2 = sub_10020E858();
  swift_beginAccess(v2);
  v4 = *v2;
  swift_retain(*v2);
  swift_endAccess(v5);
  sub_10020ED2C(a1);
  return swift_release(v4);
}

id MailComposeViewAnnotationBridge.init()()
{
  id v0;
  id v2;
  objc_super v3;
  id v4;

  v4 = 0;
  v3.receiver = 0;
  v3.super_class = (Class)type metadata accessor for MailComposeViewAnnotationBridge();
  v2 = objc_msgSendSuper2(&v3, "init");
  v0 = v2;
  v4 = v2;

  return v2;
}

id MailComposeViewAnnotationBridge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MailComposeViewAnnotationBridge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1002104C0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4C20;
  if (!qword_1005A4C20)
  {
    v0 = sub_1001E7634(&qword_1005A4C18);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4C20);
    return WitnessTable;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100210530(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
}

unint64_t sub_1002105CC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A7F80;
  if (!qword_1005A7F80)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD0C8, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A7F80);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100210634()
{
  _QWORD *v0;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  return swift_deallocObject(v2, 88);
}

unint64_t sub_1002106A8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5410;
  if (!qword_1005A5410)
  {
    v0 = type metadata accessor for AppEntityVisualState(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AppEntityVisualState, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5410);
    return WitnessTable;
  }
  return v3;
}

uint64_t type metadata accessor for MailComposeViewAnnotationBridge()
{
  return objc_opt_self(_TtC10MobileMail31MailComposeViewAnnotationBridge);
}

uint64_t type metadata accessor for ComposeViewAnnotationBridge()
{
  return objc_opt_self(_TtC10MobileMail27ComposeViewAnnotationBridge);
}

unint64_t sub_100210760()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4D58;
  if (!qword_1005A4D58)
  {
    v0 = type metadata accessor for ComposeViewAnnotationBridge();
    WitnessTable = swift_getWitnessTable(&unk_1004CC178, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4D58);
    return WitnessTable;
  }
  return v3;
}

double sub_1002107D0()
{
  double result;

  result = 2.0;
  qword_1005A4D60 = 2.0;
  return result;
}

uint64_t *sub_1002107E0()
{
  if (qword_1005A3648 != -1)
    swift_once(&qword_1005A3648, sub_1002107D0);
  return &qword_1005A4D60;
}

double sub_100210834()
{
  double result;

  result = 2.0;
  qword_1005A4D68 = 2.0;
  return result;
}

uint64_t *sub_100210844()
{
  if (qword_1005A3650 != -1)
    swift_once(&qword_1005A3650, sub_100210834);
  return &qword_1005A4D68;
}

id sub_100210898()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell____lazy_storage___avatarViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell____lazy_storage___avatarViewController);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021098C();
  v2 = v6;
  v5 = (void **)(v8 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell____lazy_storage___avatarViewController);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell____lazy_storage___avatarViewController);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

id sub_10021098C()
{
  unint64_t v0;
  uint64_t v1;

  sub_100212FE0();
  v0 = sub_100210E90();
  v1 = _allocateUninitializedArray<A>(_:)(0, v0);
  return sub_100307480(v1);
}

void sub_1002109D4()
{
  uint64_t v0;
  id v1;
  char *v2;
  NSString v3;
  void *v4;
  char *v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];
  char v14[24];
  uint64_t v15;

  v15 = v0;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label);
  v1 = v10;
  v11 = v0 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contactName;
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 8);
  swift_bridgeObjectRetain(v12);
  swift_endAccess(v14);
  if (v12)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v10, "setText:");

  v2 = v9;
  v5 = &v9[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contactName];
  swift_beginAccess();
  v6 = *((_QWORD *)v5 + 1);
  swift_bridgeObjectRetain(v6);
  swift_endAccess(v13);
  if (v6)
  {
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    v4 = v3;
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v9, "setAccessibilityLabel:");

}

uint64_t sub_100210BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = 0;
  v10 = a1;
  v11 = a2;
  swift_bridgeObjectRetain(a2);
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contactName);
  swift_beginAccess(v2 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contactName);
  v3 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease(v3);
  swift_endAccess(v8);
  sub_1002109D4();
  return swift_bridgeObjectRelease(a2);
}

void sub_100210C60()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  Class isa;
  id v13;
  id v14;
  id *v15;
  id v16;
  char v17[24];
  uint64_t v18;

  v18 = 0;
  v15 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contact);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contact);
  v16 = *v15;
  v1 = *v15;
  swift_endAccess(v17);
  if (v16)
  {
    v13 = sub_100210898();
    v11 = sub_100210E90();
    v10 = _allocateUninitializedArray<A>(_:)(1, v11);
    v9 = v2;
    v3 = v16;
    *v9 = v16;
    sub_10003CB20();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v13, "updateContacts:", isa);

    v14 = objc_msgSend((id)objc_opt_self(CNContactFormatter), "stringFromContact:style:", v16, 0);
    if (v14)
    {
      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v6 = v4;

      v7 = v5;
      v8 = v6;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8)
      sub_100210BC4(v7, v8);

  }
}

unint64_t sub_100210E90()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A6960;
  if (!qword_1005A6960)
  {
    v0 = objc_opt_self(CNContact);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A6960);
    return ObjCClassMetadata;
  }
  return v3;
}

void sub_100210EF4(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contact);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contact);
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
  sub_100210C60();

}

void sub_100210F74(void *a1)
{
  id v1;
  id v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t v6;
  const void *v7;
  id v8;
  id v9;
  id *v10;
  uint64_t v11;
  const void *v12;
  id v13;
  id v14;
  id *v15;
  char *v16;
  void **aBlock;
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(void *);
  uint64_t v24;
  void **v25;
  int v26;
  int v27;
  uint64_t (*v28)(uint64_t, void *);
  void *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];
  uint64_t v34;
  void *v35;

  v34 = 0;
  v35 = a1;
  v1 = a1;
  if (a1)
  {
    objc_msgSend(a1, "cancel");

  }
  v15 = (id *)&v16[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact];
  swift_beginAccess(&v16[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact]);
  if (*v15)
  {
    v14 = *v15;
    v2 = *v15;
    swift_endAccess(v33);
    v13 = objc_msgSend((id)objc_opt_self(EFScheduler), "mainThreadScheduler");
    v11 = swift_allocObject(&unk_100525D10, 24, 7);
    v3 = v16;
    swift_unknownObjectWeakInit(v11 + 16);

    swift_retain(v11);
    v23 = sub_100211698;
    v24 = v11;
    aBlock = _NSConcreteStackBlock;
    v19 = 1107296256;
    v20 = 0;
    v21 = sub_1002113DC;
    v22 = &unk_100525D50;
    v12 = _Block_copy(&aBlock);
    swift_release();
    swift_release();
    objc_msgSend(v14, "onScheduler:addSuccessBlock:", v13, v12);
    _Block_release(v12);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_endAccess(v33);
  }
  v10 = (id *)&v16[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact];
  swift_beginAccess(&v16[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact]);
  if (*v10)
  {
    v9 = *v10;
    v4 = *v10;
    swift_endAccess(v32);
    v8 = objc_msgSend((id)objc_opt_self(EFScheduler), "mainThreadScheduler");
    v6 = swift_allocObject(&unk_100525D10, 24, 7);
    v5 = v16;
    swift_unknownObjectWeakInit(v6 + 16);

    swift_retain(v6);
    v30 = sub_1002114FC;
    v31 = v6;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = 0;
    v28 = sub_1002115DC;
    v29 = &unk_100525D28;
    v7 = _Block_copy(&v25);
    swift_release();
    swift_release();
    objc_msgSend(v9, "onScheduler:addFailureBlock:", v8, v7);
    _Block_release(v7);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_endAccess(v32);
  }
}

uint64_t sub_1002112D4()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

void sub_100211310(void *a1, uint64_t a2)
{
  id v2;
  id v3;
  id v4;
  uint64_t v6;
  id Strong;
  _BYTE v8[24];
  uint64_t v9;
  void *v10;

  v10 = a1;
  v6 = a2 + 16;
  v9 = a2 + 16;
  swift_beginAccess(a2 + 16);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v4 = Strong;
    v2 = Strong;
    sub_1001F20D8(&Strong);
    swift_endAccess(v8);
    v3 = a1;
    sub_100210EF4(a1);

  }
  else
  {
    sub_1001F20D8(&Strong);
    swift_endAccess(v8);
  }
}

uint64_t sub_1002113DC(uint64_t a1, void *a2)
{
  id v2;
  void (*v4)(void *);
  uint64_t v6;

  v4 = *(void (**)(void *))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  swift_retain(v6);
  v2 = a2;
  v4(a2);

  return swift_release(v6);
}

void sub_10021143C(uint64_t a1, uint64_t a2)
{
  id v2;
  id v3;
  uint64_t v4;
  id Strong;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;

  v8 = a1;
  v4 = a2 + 16;
  v7 = a2 + 16;
  swift_beginAccess(a2 + 16);
  Strong = (id)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v3 = Strong;
    v2 = Strong;
    sub_1001F20D8(&Strong);
    swift_endAccess(v6);
    sub_100210EF4(0);

  }
  else
  {
    sub_1001F20D8(&Strong);
    swift_endAccess(v6);
  }
}

void sub_1002114FC(uint64_t a1)
{
  uint64_t v1;

  sub_10021143C(a1, v1);
}

void sub_100211504(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  id *v5;
  void **v6;
  id v7;
  _BYTE v9[24];
  _BYTE v10[24];
  uint64_t v11;
  void *v12;

  v11 = 0;
  v12 = a1;
  v5 = (id *)(v1 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact);
  v7 = *v5;
  v2 = *v5;
  swift_endAccess(v10);
  v3 = a1;
  v6 = (void **)(v1 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact);
  v4 = *v6;
  *v6 = a1;

  swift_endAccess(v9);
  sub_100210F74(v7);

}

uint64_t sub_1002115DC(uint64_t a1, void *a2)
{
  id v2;
  void (*v4)(void *);
  uint64_t v6;

  v4 = *(void (**)(void *))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  swift_retain(v6);
  v2 = a2;
  v4(a2);
  swift_errorRelease(a2);
  return swift_release(v6);
}

uint64_t sub_10021163C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100211680(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100211698(void *a1)
{
  uint64_t v1;

  sub_100211310(a1, v1);
}

uint64_t sub_1002116A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1002116E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id QuickReplyView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

id sub_100211768(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;
  char *v17;
  objc_class *ObjectType;
  __int128 v19;
  __int128 v20;
  id v21;
  objc_super v22;
  __int128 v23;
  __int128 v24;
  id v25;

  *(double *)&v19 = a1;
  *((double *)&v19 + 1) = a2;
  *(double *)&v20 = a3;
  *((double *)&v20 + 1) = a4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v23 = v19;
  v24 = v20;
  v5 = v4;
  v6 = v4;
  v7 = v4;
  v8 = v4;
  v9 = v4;
  v10 = v4;
  v25 = v4;
  v16 = OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label;
  sub_1001ED94C();
  *(_QWORD *)&v17[v16] = sub_1001E7394();

  *(_QWORD *)&v17[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell____lazy_storage___avatarViewController] = 0;

  v11 = &v17[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contactName];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  *(_QWORD *)&v17[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contact] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact] = 0;

  v22.receiver = v25;
  v22.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v22, "initWithFrame:", v19, v20);
  v12 = v21;
  v13 = v21;
  v14 = v21;
  v25 = v21;
  objc_msgSend(v21, "setIsAccessibilityElement:", 1);

  sub_100211970();
  return v21;
}

void sub_100211970()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  NSString *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  char *v20;
  unint64_t v21;
  Class isa;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void **v36;
  id v37;
  id v38;
  id *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  char *v69;
  id v70;
  id v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80[24];
  char v81[24];
  id v82;
  id v83;
  uint64_t v84;

  v82 = 0;
  v84 = v0;
  v23 = sub_100210898();
  v56 = objc_msgSend(v23, "view");
  v83 = v56;

  objc_msgSend(v56, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v69, "addSubview:", v56);
  v24 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v1 = v24;
  objc_msgSend(v69, "addSubview:", v24);

  v25 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v2 = v25;
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v28 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v3 = v28;
  v26 = (id)objc_opt_self(UIFont);
  v4 = UIFontTextStyleCaption2;
  v27 = objc_msgSend(v26, "preferredFontForTextStyle:", UIFontTextStyleCaption2);

  UILabel.contentSizeAdjustingFont(_:)((UIFont)v27);
  v29 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v5 = v29;
  objc_msgSend(v29, "setNumberOfLines:", 2);

  v30 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v6 = v30;
  objc_msgSend(v30, "setTextAlignment:", 1);

  v32 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v7 = v32;
  v31 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v32, "setTextColor:");

  v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v34 = objc_msgSend(v33, "preferredContentSizeCategory");
  v82 = v34;

  v35 = objc_msgSend(v56, "widthAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToConstant:", sub_10021285C(v34));

  v36 = (void **)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint];
  swift_beginAccess(&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint]);
  v8 = *v36;
  *v36 = v37;

  swift_endAccess(v81);
  v38 = (id)objc_opt_self(NSLayoutConstraint);
  v75 = sub_10003A0C8((uint64_t *)&unk_1005A83A0);
  v74 = _allocateUninitializedArray<A>(_:)(10, v75);
  v72 = v9;
  v39 = (id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint];
  swift_beginAccess(&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint]);
  sub_100212C34(v39, v72);
  swift_endAccess(v80);
  v41 = objc_msgSend(v56, "heightAnchor");
  v40 = objc_msgSend(v56, "widthAnchor");
  v42 = objc_msgSend(v41, "constraintEqualToAnchor:");

  v72[1] = v42;
  v44 = objc_msgSend(v56, "topAnchor");
  v10 = v69;
  v43 = objc_msgSend(v69, "topAnchor");

  v45 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v43, *(double *)sub_100210844());
  v72[2] = v45;
  v47 = objc_msgSend(v56, "centerXAnchor");
  v11 = v69;
  v46 = objc_msgSend(v69, "centerXAnchor");

  v48 = objc_msgSend(v47, "constraintEqualToAnchor:", v46);
  v72[3] = v48;
  v50 = objc_msgSend(v56, "leadingAnchor");
  v12 = v69;
  v49 = objc_msgSend(v69, "leadingAnchor");

  v51 = objc_msgSend(v50, "constraintGreaterThanOrEqualToAnchor:constant:", v49, *(double *)sub_1002107E0());
  v72[4] = v51;
  v53 = objc_msgSend(v56, "trailingAnchor");
  v13 = v69;
  v52 = objc_msgSend(v69, "trailingAnchor");

  v54 = objc_msgSend(v53, "constraintLessThanOrEqualToAnchor:constant:", v52, -0.0 - *(double *)sub_1002107E0());
  v72[5] = v54;
  v55 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v14 = v55;
  v58 = objc_msgSend(v55, "topAnchor");

  v57 = objc_msgSend(v56, "bottomAnchor");
  v59 = objc_msgSend(v58, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", 1.0);

  v72[6] = v59;
  v60 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v15 = v60;
  v62 = objc_msgSend(v60, "leadingAnchor");

  v16 = v69;
  v61 = objc_msgSend(v69, "leadingAnchor");

  v63 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v61, *(double *)sub_1002107E0());
  v72[7] = v63;
  v64 = *(id *)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v17 = v64;
  v66 = objc_msgSend(v64, "trailingAnchor");

  v18 = v69;
  v65 = objc_msgSend(v69, "trailingAnchor");

  v67 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v65, -0.0 - *(double *)sub_1002107E0());
  v72[8] = v67;
  v68 = *(void **)&v69[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label];
  v19 = v68;
  v71 = objc_msgSend(v68, "bottomAnchor");

  v20 = v69;
  v70 = objc_msgSend(v69, "bottomAnchor");

  v73 = objc_msgSend(v71, "constraintEqualToAnchor:constant:", v70, -0.0 - *(double *)sub_100210844());
  v72[9] = v73;
  sub_10003CB20();
  v79 = v74;
  v76 = sub_10003A0C8(&qword_1005A4DA0);
  v77 = sub_100212E4C();
  v21 = sub_100212EB0();
  v78 = Sequence.compactMap<A>(_:)(sub_100212E08, 0, v76, v77, v21);
  sub_1001ED890(&v79);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v78);
  objc_msgSend(v38, "activateConstraints:", isa);

}

id MailIntelligenceLightSettingsViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v4;

  v4 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v4;
}

void sub_100212444()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  Swift::String v8;
  uint64_t v9;
  char *v10;

  v1 = v0;
  v2 = v0;
  v3 = v0;
  v4 = v0;
  v5 = v0;
  v6 = v0;
  v9 = OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_label;
  sub_1001ED94C();
  *(_QWORD *)&v10[v9] = sub_1001E7394();

  *(_QWORD *)&v10[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell____lazy_storage___avatarViewController] = 0;

  v7 = &v10[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contactName];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;

  *(_QWORD *)&v10[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_contact] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact] = 0;

  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("init(coder:) has not been implemented", 0x25uLL, 1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v8._countAndFlagsBits, v8._object, "MobileMail/ContactConfigurationCell.swift", 41);
  __break(1u);
}

void sub_1002125FC(void *a1)
{
  void *v1;
  id v2;
  id v3;
  char *v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id *v11;
  id v12;
  unsigned __int8 v13;
  char v14;
  objc_class *ObjectType;
  char *v16;
  _BYTE v18[30];
  char v19;
  char v20;
  objc_super v21;
  void *v22;
  void *v23;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v23 = a1;
  v22 = v1;
  v2 = v1;
  v21.receiver = v1;
  v21.super_class = ObjectType;
  objc_msgSendSuper2(&v21, "traitCollectionDidChange:", a1);

  v3 = a1;
  if (a1)
  {
    v4 = v16;
    v12 = objc_msgSend(v16, "traitCollection");

    v13 = objc_msgSend(a1, "mf_traitDifferenceAffectsTextLayout:", v12);
    v14 = v13 & 1;
  }
  else
  {
    v14 = 2;
  }
  v19 = v14;
  if (v14 == 2)
    v20 = 1;
  else
    v20 = v19 & 1;
  if ((v20 & 1) != 0)
  {
    v11 = (id *)&v16[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint];
    swift_beginAccess(&v16[OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_imageSizeConstraint]);
    if (*v11)
    {
      v10 = *v11;
      v5 = *v11;
      swift_endAccess(v18);
      v6 = v16;
      v7 = objc_msgSend(v16, "traitCollection");

      v8 = objc_msgSend(v7, "preferredContentSizeCategory");
      v9 = sub_10021285C(v8);

      objc_msgSend(v10, "setConstant:", v9);
    }
    else
    {
      swift_endAccess(v18);
    }
  }
}

double sub_10021285C(void *a1)
{
  id v1;
  id v2;
  NSString *v3;
  id v4;
  NSString *v5;
  id v6;
  NSString *v7;
  id v8;
  NSString *v9;
  id v10;
  NSString *v11;
  id v12;
  NSString *v13;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  void *v23;
  UIContentSizeCategory v24;
  void *v25;
  UIContentSizeCategory v26;
  void *v27;
  UIContentSizeCategory v28;
  void *v29;
  UIContentSizeCategory v30;
  void *v31;
  id v32[3];

  v32[1] = 0;
  v32[2] = a1;
  v1 = a1;
  if ((UIContentSizeCategory.isAccessibilityCategory.getter(a1) & 1) != 0)
  {

    v2 = a1;
    v3 = UIContentSizeCategoryAccessibilityMedium;
    v32[0] = UIContentSizeCategoryAccessibilityMedium;
    v31 = a1;
    type metadata accessor for UIContentSizeCategory(0);
    sub_1001EFA68();
    v20 = dispatch thunk of static Equatable.== infix(_:_:)(v32, &v31);
    sub_1001F20D8(v32);
    if ((v20 & 1) != 0)
    {

      return 70.0;
    }
    else
    {

      v4 = a1;
      v5 = UIContentSizeCategoryAccessibilityLarge;
      v30 = UIContentSizeCategoryAccessibilityLarge;
      v29 = a1;
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(&v30, &v29);
      sub_1001F20D8((id *)&v30);
      if ((v19 & 1) != 0)
      {

        return 80.0;
      }
      else
      {

        v6 = a1;
        v7 = UIContentSizeCategoryAccessibilityExtraLarge;
        v28 = UIContentSizeCategoryAccessibilityExtraLarge;
        v27 = a1;
        v18 = dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v27);
        sub_1001F20D8((id *)&v28);
        if ((v18 & 1) != 0)
        {

          return 90.0;
        }
        else
        {

          v8 = a1;
          v9 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
          v26 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
          v25 = a1;
          v17 = dispatch thunk of static Equatable.== infix(_:_:)(&v26, &v25);
          sub_1001F20D8((id *)&v26);
          if ((v17 & 1) != 0)
          {

            return 100.0;
          }
          else
          {

            v10 = a1;
            v11 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
            v24 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
            v23 = a1;
            v16 = dispatch thunk of static Equatable.== infix(_:_:)(&v24, &v23);
            sub_1001F20D8((id *)&v24);
            if ((v16 & 1) != 0)
            {

              return 110.0;
            }
            else
            {

              v12 = a1;
              v13 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
              v15 = static UIContentSizeCategory.> infix(_:_:)(a1, UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);

              if ((v15 & 1) != 0)
                return 110.0;
              else
                return 60.0;
            }
          }
        }
      }
    }
  }
  else
  {

    return 60.0;
  }
}

_QWORD *sub_100212C34(id *a1, _QWORD *a2)
{
  id v2;
  _QWORD *result;
  id v4;

  v4 = *a1;
  v2 = *a1;
  result = a2;
  *a2 = v4;
  return result;
}

void sub_100212CBC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v8[24];
  objc_super v9;
  void *v10;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v10 = v0;
  v1 = v0;
  v9.receiver = v0;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, "prepareForReuse");

  sub_100210EF4(0);
  sub_100210BC4(0, 0);
  v6 = OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact;
  v7 = (_QWORD *)(v5 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact);
  swift_beginAccess(v5 + OBJC_IVAR____TtC10MobileMail24ContactConfigurationCell_futureContact);
  if (*v7)
  {
    v3 = *(id *)(v5 + v6);
    v2 = v3;
    swift_endAccess(v8);
    objc_msgSend(v3, "cancel");

  }
  else
  {
    swift_endAccess(v8);
  }
}

id sub_100212E08@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  id v4;

  v4 = *a1;
  result = *a1;
  *a2 = v4;
  return result;
}

unint64_t sub_100212E4C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A83B0;
  if (!qword_1005A83B0)
  {
    v0 = objc_opt_self(NSLayoutConstraint);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A83B0);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_100212EB0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4DA8;
  if (!qword_1005A4DA8)
  {
    v0 = sub_1001E7634(&qword_1005A4DA0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4DA8);
    return WitnessTable;
  }
  return v3;
}

uint64_t type metadata accessor for ContactConfigurationCell()
{
  return objc_opt_self(_TtC10MobileMail24ContactConfigurationCell);
}

unint64_t sub_100212FE0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4DD8;
  if (!qword_1005A4DD8)
  {
    v0 = objc_opt_self(MUIAvatarViewController);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4DD8);
    return ObjCClassMetadata;
  }
  return v3;
}

void ConversationNavigationBarItemType.description.getter(unint64_t a1)
{
  _QWORD v1[3];

  v1[2] = a1;
  v1[1] = a1;
  if (a1 <= 0xE)
    __asm { BR              X8 }
  v1[0] = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ConversationNavigationBarItemType, v1, &type metadata for ConversationNavigationBarItemType, &type metadata for Int);
  __break(1u);
  JUMPOUT(0x100213318);
}

uint64_t ConversationNavigationBarItemType.init(rawValue:)(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0;
    case 1:
      return 1;
    case 2:
      return 2;
    case 3:
      return 3;
    case 4:
      return 4;
    case 5:
      return 5;
    case 6:
      return 6;
    case 7:
      return 7;
    case 8:
      return 8;
    case 9:
      return 9;
    case 10:
      return 10;
    case 11:
      return 11;
    case 12:
      return 12;
    case 13:
      return 13;
    case 14:
      return 14;
  }
  return 0;
}

uint64_t static ConversationNavigationBarItemType.allCases.getter()
{
  uint64_t result;
  _QWORD *v1;

  result = _allocateUninitializedArray<A>(_:)(15, &type metadata for ConversationNavigationBarItemType);
  *v1 = 0;
  v1[1] = 1;
  v1[2] = 2;
  v1[3] = 3;
  v1[4] = 4;
  v1[5] = 5;
  v1[6] = 6;
  v1[7] = 7;
  v1[8] = 8;
  v1[9] = 9;
  v1[10] = 10;
  v1[11] = 11;
  v1[12] = 12;
  v1[13] = 13;
  v1[14] = 14;
  sub_10003CB20();
  return result;
}

uint64_t sub_10021367C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10021CB98();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for Int) & 1;
}

uint64_t sub_1002136C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v3;

  result = ConversationNavigationBarItemType.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1002136FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static ConversationNavigationBarItemType.allCases.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100213724(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_10021CB98();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for Int);
}

uint64_t sub_100213760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10021CB98();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for Int);
}

uint64_t sub_1002137A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10021CB98();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for Int);
}

void sub_1002137E8()
{
  unint64_t *v0;

  ConversationNavigationBarItemType.description.getter(*v0);
}

uint64_t sub_100213800()
{
  uint64_t v1;

  v1 = type metadata accessor for Logger(0);
  sub_10003A134(v1, qword_1005B9C10);
  sub_10003A088(v1, (uint64_t)qword_1005B9C10);
  return sub_100213848();
}

uint64_t sub_100213848()
{
  uint64_t v0;

  v0 = type metadata accessor for ConversationNavigationBarItemsManager();
  return static Logger.mailUILogger<A>(for:)(v0);
}

uint64_t sub_10021387C()
{
  uint64_t v0;

  if (qword_1005A3658 != -1)
    swift_once(&qword_1005A3658, sub_100213800);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9C10);
}

id ConversationNavigationBarItemsManager.__allocating_init(scene:delegate:actionHandler:arrowDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v5;

  v5 = objc_allocWithZone(v4);
  return ConversationNavigationBarItemsManager.init(scene:delegate:actionHandler:arrowDelegate:)(a1, a2, a3, a4);
}

uint64_t ConversationNavigationBarItemsManager.scene.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t Strong;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_scene;
  swift_beginAccess();
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  swift_endAccess(v4);
  return Strong;
}

uint64_t ConversationNavigationBarItemsManager.scene.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  swift_unknownObjectRetain(a1);
  v3 = v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_scene;
  swift_beginAccess();
  swift_unknownObjectWeakAssign(v3, a1);
  swift_unknownObjectRelease(a1);
  swift_endAccess(v5);
  return swift_unknownObjectRelease(a1);
}

void (*ConversationNavigationBarItemsManager.scene.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = v1;
  v2 = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_scene;
  v6[5] = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_scene;
  v5 = v1 + v2;
  swift_beginAccess(v1 + v2);
  v6[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100213B28;
}

void sub_100213B28(_QWORD **a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v5[4] + v5[5];
    v3 = v5[3];
    swift_unknownObjectRetain(v3);
    swift_unknownObjectWeakAssign(v2, v3);
    swift_unknownObjectRelease(v3);
    sub_100213BD8(v5 + 3);
  }
  else
  {
    v4 = v5[3];
    swift_unknownObjectWeakAssign(v5[4] + v5[5], v4);
    swift_unknownObjectRelease(v4);
  }
  swift_endAccess(v5);
  free(v5);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100213BD8(_QWORD *a1)
{
  swift_unknownObjectRelease(*a1);
}

uint64_t ConversationNavigationBarItemsManager.delegate.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t Strong;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess();
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  swift_endAccess(v4);
  return Strong;
}

uint64_t ConversationNavigationBarItemsManager.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  swift_unknownObjectRetain(a1);
  v3 = v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess();
  swift_unknownObjectWeakAssign(v3, a1);
  swift_unknownObjectRelease(a1);
  swift_endAccess(v5);
  return swift_unknownObjectRelease(a1);
}

void (*ConversationNavigationBarItemsManager.delegate.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = v1;
  v2 = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  v6[5] = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  v5 = v1 + v2;
  swift_beginAccess(v1 + v2);
  v6[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100213B28;
}

uint64_t ConversationNavigationBarItemsManager.actionHandler.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t Strong;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess();
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  swift_endAccess(v4);
  return Strong;
}

uint64_t ConversationNavigationBarItemsManager.actionHandler.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  swift_unknownObjectRetain(a1);
  v3 = v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess();
  swift_unknownObjectWeakAssign(v3, a1);
  swift_unknownObjectRelease(a1);
  swift_endAccess(v5);
  return swift_unknownObjectRelease(a1);
}

void (*ConversationNavigationBarItemsManager.actionHandler.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = v1;
  v2 = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  v6[5] = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  v5 = v1 + v2;
  swift_beginAccess(v1 + v2);
  v6[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100213B28;
}

uint64_t ConversationNavigationBarItemsManager.arrowDelegate.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t Strong;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_arrowDelegate;
  swift_beginAccess();
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  swift_endAccess(v4);
  return Strong;
}

uint64_t ConversationNavigationBarItemsManager.arrowDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  swift_unknownObjectRetain(a1);
  v3 = v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_arrowDelegate;
  swift_beginAccess();
  swift_unknownObjectWeakAssign(v3, a1);
  swift_unknownObjectRelease(a1);
  swift_endAccess(v5);
  return swift_unknownObjectRelease(a1);
}

void (*ConversationNavigationBarItemsManager.arrowDelegate.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = v1;
  v2 = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_arrowDelegate;
  v6[5] = OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_arrowDelegate;
  v5 = v1 + v2;
  swift_beginAccess(v1 + v2);
  v6[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100213B28;
}

uint64_t ConversationNavigationBarItemsManager.useArchiveButton.getter()
{
  uint64_t v0;
  char *v2;
  char v3;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = (char *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useArchiveButton);
  swift_beginAccess();
  v3 = *v2;
  swift_endAccess(v4);
  return v3 & 1;
}

uint64_t ConversationNavigationBarItemsManager.useArchiveButton.setter(char a1)
{
  uint64_t v1;
  _BYTE *v4;
  _BYTE v5[24];
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useArchiveButton);
  swift_beginAccess();
  *v4 = a1 & 1;
  return swift_endAccess(v5);
}

uint64_t (*ConversationNavigationBarItemsManager.useArchiveButton.modify())(uint64_t a1)
{
  uint64_t v0;

  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useArchiveButton);
  return sub_1002143CC;
}

uint64_t sub_1002143CC(uint64_t a1)
{
  return swift_endAccess(a1);
}

uint64_t ConversationNavigationBarItemsManager.showNavigationArrows.getter()
{
  uint64_t v0;
  char *v2;
  char v3;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = (char *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showNavigationArrows);
  swift_beginAccess();
  v3 = *v2;
  swift_endAccess(v4);
  return v3 & 1;
}

uint64_t ConversationNavigationBarItemsManager.showNavigationArrows.setter(char a1)
{
  uint64_t v1;
  _BYTE *v4;
  _BYTE v5[24];
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showNavigationArrows);
  swift_beginAccess();
  *v4 = a1 & 1;
  return swift_endAccess(v5);
}

uint64_t (*ConversationNavigationBarItemsManager.showNavigationArrows.modify())(uint64_t a1)
{
  uint64_t v0;

  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showNavigationArrows);
  return sub_1002143CC;
}

uint64_t ConversationNavigationBarItemsManager.showSupplementaryButtonItem.getter()
{
  uint64_t v0;
  char *v2;
  char v3;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = (char *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showSupplementaryButtonItem);
  swift_beginAccess();
  v3 = *v2;
  swift_endAccess(v4);
  return v3 & 1;
}

uint64_t ConversationNavigationBarItemsManager.showSupplementaryButtonItem.setter(char a1)
{
  uint64_t v1;
  _BYTE *v4;
  _BYTE v5[24];
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showSupplementaryButtonItem);
  swift_beginAccess();
  *v4 = a1 & 1;
  return swift_endAccess(v5);
}

uint64_t (*ConversationNavigationBarItemsManager.showSupplementaryButtonItem.modify())(uint64_t a1)
{
  uint64_t v0;

  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showSupplementaryButtonItem);
  return sub_1002143CC;
}

uint64_t ConversationNavigationBarItemsManager.useDesktopClassNavigationBar.getter()
{
  uint64_t v0;
  char *v2;
  char v3;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = (char *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useDesktopClassNavigationBar);
  swift_beginAccess();
  v3 = *v2;
  swift_endAccess(v4);
  return v3 & 1;
}

uint64_t ConversationNavigationBarItemsManager.useDesktopClassNavigationBar.setter(char a1)
{
  uint64_t v1;
  _BYTE *v4;
  _BYTE v5[24];
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useDesktopClassNavigationBar);
  swift_beginAccess();
  *v4 = a1 & 1;
  return swift_endAccess(v5);
}

uint64_t (*ConversationNavigationBarItemsManager.useDesktopClassNavigationBar.modify())(uint64_t a1)
{
  uint64_t v0;

  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useDesktopClassNavigationBar);
  return sub_1002143CC;
}

id ConversationNavigationBarItemsManager.doneButton.getter()
{
  uint64_t v0;
  id v1;
  id *v3;
  id v4;
  _BYTE v5[24];
  uint64_t v6;

  v6 = 0;
  v3 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  swift_beginAccess();
  v4 = *v3;
  v1 = *v3;
  swift_endAccess(v5);
  return v4;
}

void ConversationNavigationBarItemsManager.doneButton.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

uint64_t (*ConversationNavigationBarItemsManager.doneButton.modify())(uint64_t a1)
{
  uint64_t v0;

  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  return sub_1002143CC;
}

id ConversationNavigationBarItemsManager.doneButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;
  id v9;
  id v10;
  void **v11;
  id v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v16;
  id *v17;
  id v18;
  _BYTE v19[24];
  id v20;
  _BYTE v21[24];
  _QWORD v22[3];
  uint64_t ObjectType;
  _BYTE v24[24];
  uint64_t v25;

  v25 = 0;
  v20 = 0;
  v17 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  v18 = *v17;
  v1 = *v17;
  swift_endAccess(v24);
  if (v18)
    return v18;
  sub_100214DC4();
  v13 = v16 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(v16 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  swift_endAccess(v21);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v22[0] = Strong;
  }
  else
  {
    memset(v22, 0, sizeof(v22));
    ObjectType = 0;
  }
  v12 = sub_100214E28(0, v22, (uint64_t)"done:");
  v20 = v12;
  v2 = v12;
  v9 = (id)MSAccessibilityIdentifierMailConversationViewDoneButton;
  v3 = MSAccessibilityIdentifierMailConversationViewDoneButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v8 = v4;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);

  objc_msgSend(v12, "setAccessibilityIdentifier:", v10);
  v5 = v12;
  v11 = (void **)(v16 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  swift_beginAccess(v16 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_doneButton);
  v6 = *v11;
  *v11 = v12;

  swift_endAccess(v19);
  return v12;
}

unint64_t sub_100214DC4()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4EC0;
  if (!qword_1005A4EC0)
  {
    v0 = objc_opt_self(UIBarButtonItem);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4EC0);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_100214E28(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  id v3;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_100220378(a1, a2, a3);
}

id ConversationNavigationBarItemsManager.revealActionsButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___revealActionsButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___revealActionsButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021507C(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___revealActionsButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___revealActionsButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.revealActionsButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___revealActionsButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021507C(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v14;
  id bundle;
  void *object;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t Strong;
  id v26;
  _BYTE v27[24];
  _QWORD v28[3];
  uint64_t ObjectType;
  id v30;
  uint64_t v31;

  v31 = a1;
  sub_10022247C();
  v21 = (id)MFImageGlyphReply;
  v1 = MFImageGlyphReply;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v22 = sub_1002A9A1C(v2, v3);

  v30 = v22;
  sub_100214DC4();
  v4 = v22;
  v24 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v24);
  swift_endAccess(v27);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v28[0] = Strong;
  }
  else
  {
    memset(v28, 0, sizeof(v28));
    ObjectType = 0;
  }
  v26 = sub_100215340(v22, 0, v28, (uint64_t)"revealActionsButtonTapped:");
  v5 = v26;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Reply", 5uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar in compact layout", 0x39uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v14 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v14);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v26, "setTitle:", v17);

  v10 = v26;
  v19 = (id)MSAccessibilityIdentifierMailConversationViewRevealActionButton;
  v11 = MSAccessibilityIdentifierMailConversationViewRevealActionButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v18 = v12;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);

  objc_msgSend(v26, "setAccessibilityIdentifier:", v20);
  return v26;
}

id sub_100215340(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  id v4;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_10022049C(a1, a2, a3, a4);
}

void (*ConversationNavigationBarItemsManager.revealActionsButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.revealActionsButtonItem.getter();
  return sub_1002153D8;
}

void sub_1002153D8(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.revealActionsButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.revealActionsButtonItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.replyButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021564C(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.replyButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021564C(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v14;
  id bundle;
  void *object;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t Strong;
  id v26;
  _BYTE v27[24];
  _QWORD v28[3];
  uint64_t ObjectType;
  id v30;
  uint64_t v31;

  v31 = a1;
  sub_10022247C();
  v21 = (id)MFImageGlyphReply;
  v1 = MFImageGlyphReply;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v22 = sub_1002A9A1C(v2, v3);

  v30 = v22;
  sub_100214DC4();
  v4 = v22;
  v24 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v24);
  swift_endAccess(v27);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v28[0] = Strong;
  }
  else
  {
    memset(v28, 0, sizeof(v28));
    ObjectType = 0;
  }
  v26 = sub_100215340(v22, 0, v28, (uint64_t)"replyButtonTapped:");
  v5 = v26;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Reply", 5uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar", 0x27uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v14 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v14);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v26, "setTitle:", v17);

  v10 = v26;
  v19 = (id)MSAccessibilityIdentifierMailConversationViewReplyButton;
  v11 = MSAccessibilityIdentifierMailConversationViewReplyButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v18 = v12;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);

  objc_msgSend(v26, "setAccessibilityIdentifier:", v20);
  return v26;
}

void (*ConversationNavigationBarItemsManager.replyButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.replyButtonItem.getter();
  return sub_100215954;
}

void sub_100215954(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.replyButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.replyButtonItem.setter(*a1);
  }
}

uint64_t sub_100215A08()
{
  Swift::String v0;
  id *v1;
  char v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100215AF0();
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("replyGroup", 0xAuLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v1 = ConversationNavigationBarItemsManager.replyButtonItem.getter();
  sub_10003CB20();
  v2 = sub_1001F72E0();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v0._countAndFlagsBits, v0._object, v2 & 1, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v0._object);
  return v6;
}

unint64_t sub_100215AF0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4EC8;
  if (!qword_1005A4EC8)
  {
    v0 = objc_opt_self(UIBarButtonItemGroup);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4EC8);
    return ObjCClassMetadata;
  }
  return v3;
}

id ConversationNavigationBarItemsManager.replyAllButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyAllButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyAllButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100215D5C(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyAllButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyAllButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.replyAllButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___replyAllButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100215D5C(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v14;
  id bundle;
  void *object;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t Strong;
  id v26;
  _BYTE v27[24];
  _QWORD v28[3];
  uint64_t ObjectType;
  id v30;
  uint64_t v31;

  v31 = a1;
  sub_10022247C();
  v21 = (id)MFImageGlyphReplyAll;
  v1 = MFImageGlyphReplyAll;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v22 = sub_1002A9A1C(v2, v3);

  v30 = v22;
  sub_100214DC4();
  v4 = v22;
  v24 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v24);
  swift_endAccess(v27);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v28[0] = Strong;
  }
  else
  {
    memset(v28, 0, sizeof(v28));
    ObjectType = 0;
  }
  v26 = sub_100215340(v22, 0, v28, (uint64_t)"replyAllButtonTapped:");
  v5 = v26;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Reply All", 9uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar", 0x27uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v14 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v14);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v26, "setTitle:", v17);

  v10 = v26;
  v19 = (id)MSAccessibilityIdentifierMailConversationViewReplyAllButton;
  v11 = MSAccessibilityIdentifierMailConversationViewReplyAllButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v18 = v12;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);

  objc_msgSend(v26, "setAccessibilityIdentifier:", v20);
  return v26;
}

void (*ConversationNavigationBarItemsManager.replyAllButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.replyAllButtonItem.getter();
  return sub_100216064;
}

void sub_100216064(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.replyAllButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.replyAllButtonItem.setter(*a1);
  }
}

uint64_t sub_100216118()
{
  Swift::String v0;
  id *v1;
  char v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100215AF0();
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("replyAllGroup", 0xDuLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v1 = ConversationNavigationBarItemsManager.replyAllButtonItem.getter();
  sub_10003CB20();
  v2 = sub_1001F72E0();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v0._countAndFlagsBits, v0._object, v2 & 1, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v0._object);
  return v6;
}

id ConversationNavigationBarItemsManager.forwardButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___forwardButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___forwardButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100216408(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___forwardButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___forwardButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.forwardButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___forwardButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100216408(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v14;
  id bundle;
  void *object;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t Strong;
  id v26;
  _BYTE v27[24];
  _QWORD v28[3];
  uint64_t ObjectType;
  id v30;
  uint64_t v31;

  v31 = a1;
  sub_10022247C();
  v21 = (id)MFImageGlyphForward;
  v1 = MFImageGlyphForward;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v22 = sub_1002A9A1C(v2, v3);

  v30 = v22;
  sub_100214DC4();
  v4 = v22;
  v24 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v24);
  swift_endAccess(v27);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v28[0] = Strong;
  }
  else
  {
    memset(v28, 0, sizeof(v28));
    ObjectType = 0;
  }
  v26 = sub_100215340(v22, 0, v28, (uint64_t)"forwardButtonTapped:");
  v5 = v26;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Forward", 7uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar", 0x27uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v14 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v14);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v26, "setTitle:", v17);

  v10 = v26;
  v19 = (id)MSAccessibilityIdentifierMailConversationViewForwardButton;
  v11 = MSAccessibilityIdentifierMailConversationViewForwardButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v18 = v12;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);

  objc_msgSend(v26, "setAccessibilityIdentifier:", v20);
  return v26;
}

void (*ConversationNavigationBarItemsManager.forwardButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.forwardButtonItem.getter();
  return sub_100216710;
}

void sub_100216710(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.forwardButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.forwardButtonItem.setter(*a1);
  }
}

uint64_t sub_1002167C4()
{
  Swift::String v0;
  id *v1;
  char v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100215AF0();
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("forwardGroup", 0xCuLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v1 = ConversationNavigationBarItemsManager.forwardButtonItem.getter();
  sub_10003CB20();
  v2 = sub_1001F72E0();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v0._countAndFlagsBits, v0._object, v2 & 1, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v0._object);
  return v6;
}

id ConversationNavigationBarItemsManager.archiveButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  char *v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___archiveButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___archiveButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100216AB4(v8);
  v2 = v6;
  v5 = (void **)&v8[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___archiveButtonItem];
  swift_beginAccess(&v8[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___archiveButtonItem]);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.archiveButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___archiveButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100216AB4(char *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  char *v13;
  void *v15;
  id bundle;
  void *object;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  const void *v23;
  id v24;
  id v25;
  id v26;
  char *v28;
  uint64_t Strong;
  void **aBlock;
  int v31;
  int v32;
  id (*v33)(uint64_t, uint64_t, void *);
  void *v34;
  id (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  id v37;
  char v38[24];
  _QWORD v39[3];
  uint64_t ObjectType;
  id v41;
  char *v42;

  v37 = 0;
  v42 = a1;
  sub_10022247C();
  v25 = (id)MFImageGlyphArchive;
  v1 = MFImageGlyphArchive;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v26 = sub_1002A9A1C(v2, v3);

  v41 = v26;
  sub_100214DC4();
  v4 = v26;
  v28 = &a1[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler];
  swift_beginAccess(&a1[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler]);
  Strong = swift_unknownObjectWeakLoadStrong(v28);
  swift_endAccess(v38);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v39[0] = Strong;
  }
  else
  {
    memset(v39, 0, sizeof(v39));
    ObjectType = 0;
  }
  v24 = sub_100215340(v26, 0, v39, (uint64_t)"deleteButtonTapped:");
  v37 = v24;
  v5 = v24;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Archive", 7uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar", 0x27uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v15 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v15);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v24, "setTitle:", v18);

  v10 = v24;
  v20 = (id)MSAccessibilityIdentifierMailConversationViewArchiveButton;
  v11 = MSAccessibilityIdentifierMailConversationViewArchiveButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v19 = v12;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);

  objc_msgSend(v24, "setAccessibilityIdentifier:", v21);
  v22 = swift_allocObject(&unk_100526258, 24, 7);
  v13 = a1;
  swift_unknownObjectWeakInit(v22 + 16);

  swift_retain(v22);
  v35 = sub_10022251C;
  v36 = v22;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = 0;
  v33 = sub_10021711C;
  v34 = &unk_100526298;
  v23 = _Block_copy(&aBlock);
  swift_release(v36);
  swift_release(v22);
  objc_msgSend(v24, "_setSecondaryActionsProvider:", v23);
  _Block_release(v23);

  return v24;
}

id sub_100216E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *Strong;
  _QWORD v29[3];
  uint64_t v30;
  void *v31;
  _BYTE v32[24];
  char *v33;
  char v34[8];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v25 = a1;
  v33 = 0;
  v37 = a1;
  v36 = a2;
  v26 = a3 + 16;
  v35 = a3 + 16;
  v27 = v34;
  swift_beginAccess(a3 + 16);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v26);
  swift_endAccess(v34);
  if (!Strong)
    return 0;
  v24 = Strong;
  v21 = Strong;
  v33 = Strong;
  v22 = &Strong[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate];
  swift_beginAccess(&Strong[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate]);
  v31 = (void *)swift_unknownObjectWeakLoadStrong(v22);
  if (v31)
  {
    v17 = &v31;
    v18 = v31;
    swift_unknownObjectRetain(v31);
    sub_100213BD8(&v31);
    swift_endAccess(v32);
    swift_getObjectType(v18);
    sub_100222600(v25, (uint64_t)v29);
    if (v30)
    {
      v14 = v29;
      v11 = v30;
      sub_10020DB6C(v29, v30);
      v10 = *(_QWORD *)(v11 - 8);
      v3 = *(_QWORD *)(v10 + 64);
      v13 = &v6;
      v9 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
      __chkstk_darwin(&v6);
      v12 = (char *)&v6 - v9;
      (*(void (**)(void))(v4 + 16))();
      v15 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v11);
      sub_1001F25B8(v14);
      v16 = v15;
    }
    else
    {
      v16 = 0;
    }
    v7 = v16;
    v8 = objc_msgSend(v18, "deleteButtonMenuForConversationNavigationBarItemsManager:menuOwner:", v21);
    swift_unknownObjectRelease(v7);
    swift_unknownObjectRelease(v18);
    v20 = v8;
  }
  else
  {
    v19 = 0;
    sub_100213BD8(&v31);
    swift_endAccess(v32);
    v20 = 0;
  }
  v6 = v20;

  return v6;
}

id sub_10021711C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  unint64_t v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);
  uint64_t v11;
  _QWORD v13[4];
  _QWORD v14[4];

  v10 = *(uint64_t (**)(void))(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  swift_retain(v11);
  swift_unknownObjectRetain(a2);
  if (a2)
  {
    v13[3] = swift_getObjectType(a2);
    v13[0] = a2;
    sub_1002225E4((uint64_t)v13, (uint64_t)v14);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  v3 = a3;
  if (a3)
  {
    v4 = sub_100222580();
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v4);

    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  v6 = (id)v10();
  swift_bridgeObjectRelease(v8);
  sub_1001F2578(v14);
  swift_release(v11);
  return v6;
}

void (*ConversationNavigationBarItemsManager.archiveButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.archiveButtonItem.getter();
  return sub_1002172B0;
}

void sub_1002172B0(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.archiveButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.archiveButtonItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.deleteButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  char *v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___deleteButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___deleteButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100217524(v8);
  v2 = v6;
  v5 = (void **)&v8[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___deleteButtonItem];
  swift_beginAccess(&v8[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___deleteButtonItem]);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.deleteButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___deleteButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100217524(char *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  char *v13;
  void *v15;
  id bundle;
  void *object;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  const void *v23;
  id v24;
  id v25;
  id v26;
  char *v28;
  uint64_t Strong;
  void **aBlock;
  int v31;
  int v32;
  id (*v33)(uint64_t, uint64_t, void *);
  void *v34;
  id (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  id v37;
  char v38[24];
  _QWORD v39[3];
  uint64_t ObjectType;
  id v41;
  char *v42;

  v37 = 0;
  v42 = a1;
  sub_10022247C();
  v25 = (id)MFImageGlyphTrash;
  v1 = MFImageGlyphTrash;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v26 = sub_1002A9A1C(v2, v3);

  v41 = v26;
  sub_100214DC4();
  v4 = v26;
  v28 = &a1[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler];
  swift_beginAccess(&a1[OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler]);
  Strong = swift_unknownObjectWeakLoadStrong(v28);
  swift_endAccess(v38);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v39[0] = Strong;
  }
  else
  {
    memset(v39, 0, sizeof(v39));
    ObjectType = 0;
  }
  v24 = sub_100215340(v26, 0, v39, (uint64_t)"deleteButtonTapped:");
  v37 = v24;
  v5 = v24;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete", 6uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar", 0x27uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v15 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v15);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v24, "setTitle:", v18);

  v10 = v24;
  v20 = (id)MSAccessibilityIdentifierMailConversationViewDeleteButton;
  v11 = MSAccessibilityIdentifierMailConversationViewDeleteButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v19 = v12;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);

  objc_msgSend(v24, "setAccessibilityIdentifier:", v21);
  v22 = swift_allocObject(&unk_100526258, 24, 7);
  v13 = a1;
  swift_unknownObjectWeakInit(v22 + 16);

  swift_retain(v22);
  v35 = sub_10022251C;
  v36 = v22;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = 0;
  v33 = sub_10021711C;
  v34 = &unk_100526270;
  v23 = _Block_copy(&aBlock);
  swift_release(v36);
  swift_release(v22);
  objc_msgSend(v24, "_setSecondaryActionsProvider:", v23);
  _Block_release(v23);

  return v24;
}

void (*ConversationNavigationBarItemsManager.deleteButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.deleteButtonItem.getter();
  return sub_1002178FC;
}

void sub_1002178FC(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.deleteButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.deleteButtonItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.destructiveButtonItem.getter()
{
  uint64_t v0;
  char *v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;

  v6 = 0;
  v3 = (char *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useArchiveButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useArchiveButton);
  v4 = *v3;
  swift_endAccess(v5);
  if ((v4 & 1) != 0)
    return ConversationNavigationBarItemsManager.archiveButtonItem.getter();
  else
    return ConversationNavigationBarItemsManager.deleteButtonItem.getter();
}

uint64_t sub_100217A90()
{
  Swift::String v0;
  id *v1;
  char v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100215AF0();
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("destructiveGroup", 0x10uLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v1 = ConversationNavigationBarItemsManager.destructiveButtonItem.getter();
  sub_10003CB20();
  v2 = sub_1001F72E0();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v0._countAndFlagsBits, v0._object, v2 & 1, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v0._object);
  return v6;
}

id ConversationNavigationBarItemsManager.moveButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___moveButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___moveButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100217D80(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___moveButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___moveButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.moveButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___moveButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100217D80(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v14;
  id bundle;
  void *object;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t Strong;
  id v26;
  _BYTE v27[24];
  _QWORD v28[3];
  uint64_t ObjectType;
  id v30;
  uint64_t v31;

  v31 = a1;
  sub_10022247C();
  v21 = (id)MFImageGlyphMove;
  v1 = MFImageGlyphMove;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v22 = sub_1002A9A1C(v2, v3);

  v30 = v22;
  sub_100214DC4();
  v4 = v22;
  v24 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v24);
  swift_endAccess(v27);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v28[0] = Strong;
  }
  else
  {
    memset(v28, 0, sizeof(v28));
    ObjectType = 0;
  }
  v26 = sub_100215340(v22, 0, v28, (uint64_t)"moveButtonTapped:");
  v5 = v26;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Move", 4uLL, 1);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button item title in the navigation bar", 0x27uLL, 1);
  bundle = sub_10003DBA4();
  v8._countAndFlagsBits = sub_10003DB7C();
  v8._object = v9;
  v14 = v9;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)bundle, v8, v7)._object;
  swift_bridgeObjectRelease(v14);

  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v6._object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v26, "setTitle:", v17);

  v10 = v26;
  v19 = (id)MSAccessibilityIdentifierMailConversationViewMoveButton;
  v11 = MSAccessibilityIdentifierMailConversationViewMoveButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v18 = v12;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);

  objc_msgSend(v26, "setAccessibilityIdentifier:", v20);
  return v26;
}

void (*ConversationNavigationBarItemsManager.moveButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.moveButtonItem.getter();
  return sub_100218088;
}

void sub_100218088(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.moveButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.moveButtonItem.setter(*a1);
  }
}

uint64_t sub_10021813C()
{
  Swift::String v0;
  id *v1;
  char v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100215AF0();
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("moveGroup", 9uLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v1 = ConversationNavigationBarItemsManager.moveButtonItem.getter();
  sub_10003CB20();
  v2 = sub_1001F72E0();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v0._countAndFlagsBits, v0._object, v2 & 1, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v0._object);
  return v6;
}

id ConversationNavigationBarItemsManager.flagButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___flagButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___flagButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021842C(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___flagButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___flagButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.flagButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___flagButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021842C(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v15[24];
  id v16;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t ObjectType;
  uint64_t v20;

  v16 = 0;
  v20 = a1;
  sub_100214DC4();
  v12 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  swift_endAccess(v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v18[0] = Strong;
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    ObjectType = 0;
  }
  v9 = sub_100215340(0, 0, v18, (uint64_t)"flagButtonTapped:");
  v16 = v9;
  v1 = v9;
  v7 = (id)MSAccessibilityIdentifierMailConversationViewFlagButton;
  v2 = MSAccessibilityIdentifierMailConversationViewFlagButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v3;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);

  objc_msgSend(v9, "setAccessibilityIdentifier:", v8);
  v10 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v14 = swift_unknownObjectWeakLoadStrong(v10);
  if (v14)
  {
    v5 = (id)v14;
    swift_unknownObjectRetain(v14);
    sub_100213BD8(&v14);
    swift_endAccess(v15);
    swift_getObjectType(v5);
    objc_msgSend(v5, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", a1, v9, 6);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100213BD8(&v14);
    swift_endAccess(v15);
  }
  return v9;
}

void (*ConversationNavigationBarItemsManager.flagButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.flagButtonItem.getter();
  return sub_100218688;
}

void sub_100218688(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.flagButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.flagButtonItem.setter(*a1);
  }
}

uint64_t sub_10021873C()
{
  uint64_t v0;
  Swift::String v1;
  id *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v10 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v8 = (void *)Strong;
    swift_unknownObjectRetain(Strong);
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
    swift_getObjectType(v8);
    v7 = ConversationNavigationBarItemsManager.flagButtonItem.getter();
    objc_msgSend(v8, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v9);

    swift_unknownObjectRelease(v8);
  }
  else
  {
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
  }
  sub_100215AF0();
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("flagGroup", 9uLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v2 = ConversationNavigationBarItemsManager.flagButtonItem.getter();
  sub_10003CB20();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v1._countAndFlagsBits, v1._object, 0, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v1._object);
  return v6;
}

id ConversationNavigationBarItemsManager.readButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___readButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___readButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100218AF0(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___readButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___readButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.readButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___readButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100218AF0(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v15[24];
  id v16;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t ObjectType;
  uint64_t v20;

  v16 = 0;
  v20 = a1;
  sub_100214DC4();
  v12 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  swift_endAccess(v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v18[0] = Strong;
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    ObjectType = 0;
  }
  v9 = sub_100215340(0, 0, v18, (uint64_t)"readButtonTapped:");
  v16 = v9;
  v1 = v9;
  v7 = (id)MSAccessibilityIdentifierMailConversationViewReadButton;
  v2 = MSAccessibilityIdentifierMailConversationViewReadButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v3;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);

  objc_msgSend(v9, "setAccessibilityIdentifier:", v8);
  v10 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v14 = swift_unknownObjectWeakLoadStrong(v10);
  if (v14)
  {
    v5 = (id)v14;
    swift_unknownObjectRetain(v14);
    sub_100213BD8(&v14);
    swift_endAccess(v15);
    swift_getObjectType(v5);
    objc_msgSend(v5, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", a1, v9, 7);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100213BD8(&v14);
    swift_endAccess(v15);
  }
  return v9;
}

void (*ConversationNavigationBarItemsManager.readButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.readButtonItem.getter();
  return sub_100218D4C;
}

void sub_100218D4C(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.readButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.readButtonItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.unreadButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___unreadButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___unreadButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100218FC0(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___unreadButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___unreadButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.unreadButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___unreadButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100218FC0(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v15[24];
  id v16;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t ObjectType;
  uint64_t v20;

  v16 = 0;
  v20 = a1;
  sub_100214DC4();
  v12 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  swift_endAccess(v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v18[0] = Strong;
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    ObjectType = 0;
  }
  v9 = sub_100215340(0, 0, v18, (uint64_t)"unreadButtonTapped:");
  v16 = v9;
  v1 = v9;
  v7 = (id)MSAccessibilityIdentifierMailConversationViewUnreadButton;
  v2 = MSAccessibilityIdentifierMailConversationViewUnreadButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v3;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);

  objc_msgSend(v9, "setAccessibilityIdentifier:", v8);
  v10 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v14 = swift_unknownObjectWeakLoadStrong(v10);
  if (v14)
  {
    v5 = (id)v14;
    swift_unknownObjectRetain(v14);
    sub_100213BD8(&v14);
    swift_endAccess(v15);
    swift_getObjectType(v5);
    objc_msgSend(v5, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", a1, v9, 8);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100213BD8(&v14);
    swift_endAccess(v15);
  }
  return v9;
}

void (*ConversationNavigationBarItemsManager.unreadButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.unreadButtonItem.getter();
  return sub_10021921C;
}

void sub_10021921C(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.unreadButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.unreadButtonItem.setter(*a1);
  }
}

uint64_t sub_1002192D0()
{
  uint64_t v0;
  Swift::String v1;
  id *v2;
  id *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];
  uint64_t Strong;
  _BYTE v18[24];
  uint64_t v19;

  v19 = 0;
  v14 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  Strong = swift_unknownObjectWeakLoadStrong(v14);
  if (Strong)
  {
    v12 = (void *)Strong;
    swift_unknownObjectRetain(Strong);
    sub_100213BD8(&Strong);
    swift_endAccess(v18);
    swift_getObjectType(v12);
    v11 = ConversationNavigationBarItemsManager.unreadButtonItem.getter();
    objc_msgSend(v12, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v13);

    swift_unknownObjectRelease(v12);
  }
  else
  {
    sub_100213BD8(&Strong);
    swift_endAccess(v18);
  }
  v10 = v13 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(v13 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v15 = swift_unknownObjectWeakLoadStrong(v10);
  if (v15)
  {
    v9 = (id)v15;
    swift_unknownObjectRetain(v15);
    sub_100213BD8(&v15);
    swift_endAccess(v16);
    swift_getObjectType(v9);
    v8 = ConversationNavigationBarItemsManager.readButtonItem.getter();
    objc_msgSend(v9, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v13);

    swift_unknownObjectRelease(v9);
  }
  else
  {
    sub_100213BD8(&v15);
    swift_endAccess(v16);
  }
  sub_100215AF0();
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("readGroup", 9uLL, 1);
  v5 = sub_100214DC4();
  v6 = _allocateUninitializedArray<A>(_:)(2, v5);
  v4 = v2;
  *v2 = ConversationNavigationBarItemsManager.unreadButtonItem.getter();
  v4[1] = ConversationNavigationBarItemsManager.readButtonItem.getter();
  sub_10003CB20();
  v7 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v1._countAndFlagsBits, v1._object, 0, 0, v6);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v1._object);
  return v7;
}

id ConversationNavigationBarItemsManager.junkButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___junkButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___junkButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021975C(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___junkButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___junkButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.junkButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___junkButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021975C(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v15[24];
  id v16;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t ObjectType;
  uint64_t v20;

  v16 = 0;
  v20 = a1;
  sub_100214DC4();
  v12 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  swift_endAccess(v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v18[0] = Strong;
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    ObjectType = 0;
  }
  v9 = sub_100215340(0, 0, v18, (uint64_t)"junkButtonTapped:");
  v16 = v9;
  v1 = v9;
  v7 = (id)MSAccessibilityIdentifierMailConversationViewJunkButton;
  v2 = MSAccessibilityIdentifierMailConversationViewJunkButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v3;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);

  objc_msgSend(v9, "setAccessibilityIdentifier:", v8);
  v10 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v14 = swift_unknownObjectWeakLoadStrong(v10);
  if (v14)
  {
    v5 = (id)v14;
    swift_unknownObjectRetain(v14);
    sub_100213BD8(&v14);
    swift_endAccess(v15);
    swift_getObjectType(v5);
    objc_msgSend(v5, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", a1, v9, 9);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100213BD8(&v14);
    swift_endAccess(v15);
  }
  return v9;
}

void (*ConversationNavigationBarItemsManager.junkButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.junkButtonItem.getter();
  return sub_1002199B8;
}

void sub_1002199B8(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.junkButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.junkButtonItem.setter(*a1);
  }
}

uint64_t sub_100219A6C()
{
  uint64_t v0;
  Swift::String v1;
  id *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v10 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v8 = (void *)Strong;
    swift_unknownObjectRetain(Strong);
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
    swift_getObjectType(v8);
    v7 = ConversationNavigationBarItemsManager.junkButtonItem.getter();
    objc_msgSend(v8, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v9);

    swift_unknownObjectRelease(v8);
  }
  else
  {
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
  }
  sub_100215AF0();
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("junkGroup", 9uLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v2 = ConversationNavigationBarItemsManager.junkButtonItem.getter();
  sub_10003CB20();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v1._countAndFlagsBits, v1._object, 0, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v1._object);
  return v6;
}

id ConversationNavigationBarItemsManager.muteButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___muteButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___muteButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_100219E20(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___muteButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___muteButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.muteButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___muteButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_100219E20(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v15[24];
  id v16;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t ObjectType;
  uint64_t v20;

  v16 = 0;
  v20 = a1;
  sub_100214DC4();
  v12 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  swift_endAccess(v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v18[0] = Strong;
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    ObjectType = 0;
  }
  v9 = sub_100215340(0, 0, v18, (uint64_t)"muteButtonTapped:");
  v16 = v9;
  v1 = v9;
  v7 = (id)MSAccessibilityIdentifierMailConversationViewMuteButton;
  v2 = MSAccessibilityIdentifierMailConversationViewMuteButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v3;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);

  objc_msgSend(v9, "setAccessibilityIdentifier:", v8);
  v10 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v14 = swift_unknownObjectWeakLoadStrong(v10);
  if (v14)
  {
    v5 = (id)v14;
    swift_unknownObjectRetain(v14);
    sub_100213BD8(&v14);
    swift_endAccess(v15);
    swift_getObjectType(v5);
    objc_msgSend(v5, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", a1, v9, 10);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100213BD8(&v14);
    swift_endAccess(v15);
  }
  return v9;
}

void (*ConversationNavigationBarItemsManager.muteButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.muteButtonItem.getter();
  return sub_10021A07C;
}

void sub_10021A07C(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.muteButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.muteButtonItem.setter(*a1);
  }
}

uint64_t sub_10021A130()
{
  uint64_t v0;
  Swift::String v1;
  id *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v10 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v8 = (void *)Strong;
    swift_unknownObjectRetain(Strong);
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
    swift_getObjectType(v8);
    v7 = ConversationNavigationBarItemsManager.muteButtonItem.getter();
    objc_msgSend(v8, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v9);

    swift_unknownObjectRelease(v8);
  }
  else
  {
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
  }
  sub_100215AF0();
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("muteGroup", 9uLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v2 = ConversationNavigationBarItemsManager.muteButtonItem.getter();
  sub_10003CB20();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v1._countAndFlagsBits, v1._object, 0, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v1._object);
  return v6;
}

id ConversationNavigationBarItemsManager.laterButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___laterButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___laterButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021A4E4(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___laterButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___laterButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.laterButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___laterButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021A4E4(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  _BYTE v15[24];
  id v16;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t ObjectType;
  uint64_t v20;

  v16 = 0;
  v20 = a1;
  sub_100214DC4();
  v12 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  swift_endAccess(v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v18[0] = Strong;
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    ObjectType = 0;
  }
  v9 = sub_100215340(0, 0, v18, (uint64_t)"laterButtonTapped:");
  v16 = v9;
  v1 = v9;
  v7 = (id)MSAccessibilityIdentifierMailConversationViewLaterButton;
  v2 = MSAccessibilityIdentifierMailConversationViewLaterButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v3;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);

  objc_msgSend(v9, "setAccessibilityIdentifier:", v8);
  v10 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  v14 = swift_unknownObjectWeakLoadStrong(v10);
  if (v14)
  {
    v5 = (id)v14;
    swift_unknownObjectRetain(v14);
    sub_100213BD8(&v14);
    swift_endAccess(v15);
    swift_getObjectType(v5);
    objc_msgSend(v5, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", a1, v9, 11);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    sub_100213BD8(&v14);
    swift_endAccess(v15);
  }
  return v9;
}

void (*ConversationNavigationBarItemsManager.laterButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.laterButtonItem.getter();
  return sub_10021A740;
}

void sub_10021A740(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.laterButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.laterButtonItem.setter(*a1);
  }
}

uint64_t sub_10021A7F4()
{
  uint64_t v0;
  Swift::String v1;
  id *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v10 = v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v8 = (void *)Strong;
    swift_unknownObjectRetain(Strong);
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
    swift_getObjectType(v8);
    v7 = ConversationNavigationBarItemsManager.laterButtonItem.getter();
    objc_msgSend(v8, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v9);

    swift_unknownObjectRelease(v8);
  }
  else
  {
    sub_100213BD8(&Strong);
    swift_endAccess(v12);
  }
  sub_100215AF0();
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("laterGroup", 0xAuLL, 1);
  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(1, v4);
  *v2 = ConversationNavigationBarItemsManager.laterButtonItem.getter();
  sub_10003CB20();
  v6 = static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)(v1._countAndFlagsBits, v1._object, 0, 0, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v1._object);
  return v6;
}

id ConversationNavigationBarItemsManager.composeButtonItem.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  void **v4;
  void *v5;
  uint64_t v7;
  id *v8;
  id v9;
  _BYTE v10[24];
  _BYTE v11[24];
  uint64_t v12;

  v12 = 0;
  v8 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___composeButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___composeButtonItem);
  v9 = *v8;
  sub_10021AAE0(*v8);
  swift_endAccess(v11);
  if (v9 != (id)1)
    return v9;
  v5 = sub_10021ABE0(v7);
  v1 = v5;
  v4 = (void **)(v7
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___composeButtonItem);
  swift_beginAccess(v7 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___composeButtonItem);
  v2 = *v4;
  *v4 = v5;
  sub_10021AE4C(v2);
  swift_endAccess(v10);
  return v5;
}

id sub_10021AAE0(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void ConversationNavigationBarItemsManager.composeButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___composeButtonItem);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___composeButtonItem);
  v3 = *v4;
  *v4 = a1;
  sub_10021AE4C(v3);
  swift_endAccess(v6);

}

void *sub_10021ABE0(uint64_t a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  id v9;
  id v11;
  void *v12;
  uint64_t v13;
  void *Strong;
  id (*v15)();
  uint64_t v16;
  _BYTE v17[24];
  uint64_t v18;

  v18 = a1;
  v13 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_scene;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_scene);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v13);
  swift_endAccess(v17);
  if (!Strong)
    return 0;
  swift_getObjectType(Strong);
  swift_unknownObjectRetain(Strong);
  v1 = objc_msgSend(Strong, "respondsToSelector:", "newComposeButtonItem");
  if ((v1 & 1) != 0)
  {
    swift_unknownObjectRetain(Strong);
    v2 = swift_allocObject(&unk_100526230, 24, 7);
    *(_QWORD *)(v2 + 16) = Strong;
    v15 = sub_10022245C;
    v16 = v2;
  }
  else
  {
    v15 = 0;
    v16 = 0;
  }
  if (v15)
  {
    v11 = v15();
    swift_release(v16);
    swift_unknownObjectRelease(Strong);
    v12 = v11;
  }
  else
  {
    swift_unknownObjectRelease(Strong);
    v12 = 0;
  }
  if (!v12)
  {
    swift_unknownObjectRelease(Strong);
    return 0;
  }
  v3 = v12;
  v8 = (id)MSAccessibilityIdentifierMailConversationViewComposeButton;
  v4 = MSAccessibilityIdentifierMailConversationViewComposeButton;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v7 = v5;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);

  objc_msgSend(v12, "setAccessibilityIdentifier:", v9);
  swift_unknownObjectRelease(Strong);
  return v12;
}

void sub_10021AE4C(void *a1)
{
  if (a1 != (void *)1)

}

void (*ConversationNavigationBarItemsManager.composeButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.composeButtonItem.getter();
  return sub_10021AEC8;
}

void sub_10021AEC8(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.composeButtonItem.setter(v3);
    sub_1001F20D8(a1);
  }
  else
  {
    ConversationNavigationBarItemsManager.composeButtonItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.contactLeftDoneButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___contactLeftDoneButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___contactLeftDoneButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021B138(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___contactLeftDoneButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___contactLeftDoneButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.contactLeftDoneButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___contactLeftDoneButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021B138(uint64_t a1)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE v5[24];
  _QWORD v6[3];
  uint64_t ObjectType;
  uint64_t v8;

  v8 = a1;
  sub_100214DC4();
  v3 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_actionHandler);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  swift_endAccess(v5);
  if (Strong)
  {
    ObjectType = swift_getObjectType(Strong);
    v6[0] = Strong;
  }
  else
  {
    memset(v6, 0, sizeof(v6));
    ObjectType = 0;
  }
  return sub_100214E28(0, v6, (uint64_t)"contactDoneButtonItemTapped:");
}

void (*ConversationNavigationBarItemsManager.contactLeftDoneButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.contactLeftDoneButtonItem.getter();
  return sub_10021B270;
}

void sub_10021B270(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.contactLeftDoneButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.contactLeftDoneButtonItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.leftSpaceItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___leftSpaceItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___leftSpaceItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021B4E0();
  v2 = v6;
  v5 = (void **)(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___leftSpaceItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___leftSpaceItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.leftSpaceItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___leftSpaceItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021B4E0()
{
  id v1;
  _QWORD v2[4];

  sub_100214DC4();
  memset(v2, 0, sizeof(v2));
  v1 = sub_100214E28(6, v2, 0);
  objc_msgSend(v1, "setWidth:", 11.0);
  return v1;
}

void (*ConversationNavigationBarItemsManager.leftSpaceItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.leftSpaceItem.getter();
  return sub_10021B59C;
}

void sub_10021B59C(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.leftSpaceItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.leftSpaceItem.setter(*a1);
  }
}

id ConversationNavigationBarItemsManager.arrowControlsButtonItem.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsButtonItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsButtonItem);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021B810();
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsButtonItem);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsButtonItem);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

void ConversationNavigationBarItemsManager.arrowControlsButtonItem.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsButtonItem);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021B810()
{
  id v0;

  sub_100214DC4();
  v0 = ConversationNavigationBarItemsManager.arrowControlsView.getter();
  return sub_10021B950(v0);
}

id ConversationNavigationBarItemsManager.arrowControlsView.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0
            + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsView);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021BB4C(v8);
  v2 = v6;
  v5 = (void **)(v8
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsView);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsView);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

id sub_10021B950(void *a1)
{
  id v1;

  v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1002205D0(a1);
}

void (*ConversationNavigationBarItemsManager.arrowControlsButtonItem.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.arrowControlsButtonItem.getter();
  return sub_10021B9D0;
}

void sub_10021B9D0(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.arrowControlsButtonItem.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.arrowControlsButtonItem.setter(*a1);
  }
}

void ConversationNavigationBarItemsManager.arrowControlsView.setter(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void **v4;
  _BYTE v6[24];
  uint64_t v7;
  void *v8;

  v7 = 0;
  v8 = a1;
  v2 = a1;
  v4 = (void **)(v1
               + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___arrowControlsView);
  swift_beginAccess();
  v3 = *v4;
  *v4 = a1;

  swift_endAccess(v6);
}

id sub_10021BB4C(uint64_t a1)
{
  double v1;
  int v3;
  id v4;
  id v5;
  id v6;
  uint64_t v8;
  uint64_t Strong;
  id v10;
  id v11;
  _BYTE v12[24];
  id v13;
  uint64_t v14;

  v14 = a1;
  sub_1002223BC();
  v1 = sub_100234CE0(0);
  v10 = sub_10021BD9C(v1, v1, v1, v1);
  v13 = v10;
  v8 = a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_arrowDelegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_arrowDelegate);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  swift_endAccess(v12);
  objc_msgSend(v10, "setDelegate:", Strong);
  swift_unknownObjectRelease(Strong);
  v11 = objc_msgSend(v10, "upButton");
  if (v11)
  {
    v6 = v11;
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ConversationNavigationBarItemsManager.swift", 54, 2, 364, 0);
    __break(1u);
  }
  objc_msgSend(v6, "setEnabled:", 0);

  v5 = objc_msgSend(v10, "downButton");
  if (v5)
  {
    v4 = v5;
  }
  else
  {
    LOBYTE(v3) = 2;
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ConversationNavigationBarItemsManager.swift", 54, v3, 365, 0);
    __break(1u);
  }
  objc_msgSend(v4, "setEnabled:", 0);

  objc_msgSend(v10, "sizeToFit");
  return v10;
}

id sub_10021BD9C(double a1, double a2, double a3, double a4)
{
  id v4;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_100220614(a1, a2, a3, a4);
}

void (*ConversationNavigationBarItemsManager.arrowControlsView.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ConversationNavigationBarItemsManager.arrowControlsView.getter();
  return sub_10021BE34;
}

void sub_10021BE34(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    ConversationNavigationBarItemsManager.arrowControlsView.setter(v3);

  }
  else
  {
    ConversationNavigationBarItemsManager.arrowControlsView.setter(*a1);
  }
}

uint64_t sub_10021BEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9[24];
  char v10[24];
  uint64_t v11;

  v11 = 0;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___buttonMapping);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___buttonMapping);
  v8 = *v7;
  swift_bridgeObjectRetain(*v7);
  swift_endAccess(v10);
  if (v8)
    return v8;
  v4 = sub_10021BF98(v6);
  swift_bridgeObjectRetain(v4);
  v3 = (uint64_t *)(v6
                 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___buttonMapping);
  swift_beginAccess(v6 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager____lazy_storage___buttonMapping);
  v1 = *v3;
  *v3 = v4;
  swift_bridgeObjectRelease(v1);
  swift_endAccess(v9);
  return v4;
}

uint64_t sub_10021BF98(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  _QWORD v36[2];

  v36[0] = 0;
  v36[1] = a1;
  v5 = sub_100214DC4();
  v1 = sub_100221DE8();
  v36[0] = Dictionary.init()(&type metadata for ConversationNavigationBarItemType, v5, v1);
  v35 = ConversationNavigationBarItemsManager.archiveButtonItem.getter();
  v34 = 0;
  v6 = sub_10003A0C8(&qword_1005A4F78);
  Dictionary.subscript.setter(&v35, &v34, v6);
  v33 = ConversationNavigationBarItemsManager.deleteButtonItem.getter();
  v32 = 1;
  Dictionary.subscript.setter(&v33, &v32, v6);
  v31 = ConversationNavigationBarItemsManager.moveButtonItem.getter();
  v30 = 2;
  Dictionary.subscript.setter(&v31, &v30, v6);
  v29 = ConversationNavigationBarItemsManager.replyButtonItem.getter();
  v28 = 3;
  Dictionary.subscript.setter(&v29, &v28, v6);
  v27 = ConversationNavigationBarItemsManager.replyAllButtonItem.getter();
  v26 = 4;
  Dictionary.subscript.setter(&v27, &v26, v6);
  v25 = ConversationNavigationBarItemsManager.forwardButtonItem.getter();
  v24 = 5;
  Dictionary.subscript.setter(&v25, &v24, v6);
  v23 = ConversationNavigationBarItemsManager.flagButtonItem.getter();
  v22 = 6;
  Dictionary.subscript.setter(&v23, &v22, v6);
  v21 = ConversationNavigationBarItemsManager.readButtonItem.getter();
  v20 = 7;
  Dictionary.subscript.setter(&v21, &v20, v6);
  v19 = ConversationNavigationBarItemsManager.unreadButtonItem.getter();
  v18 = 8;
  Dictionary.subscript.setter(&v19, &v18, v6);
  v17 = ConversationNavigationBarItemsManager.junkButtonItem.getter();
  v16 = 9;
  Dictionary.subscript.setter(&v17, &v16, v6);
  v15 = ConversationNavigationBarItemsManager.muteButtonItem.getter();
  v14 = 10;
  Dictionary.subscript.setter(&v15, &v14, v6);
  v13 = ConversationNavigationBarItemsManager.laterButtonItem.getter();
  v12 = 11;
  Dictionary.subscript.setter(&v13, &v12, v6);
  v7 = ConversationNavigationBarItemsManager.composeButtonItem.getter();
  if (v7)
    v4 = v7;
  else
    v4 = 0;
  v11 = v4;
  v10 = 12;
  Dictionary.subscript.setter(&v11, &v10, v6);
  v9 = ConversationNavigationBarItemsManager.revealActionsButtonItem.getter();
  v8 = 13;
  Dictionary.subscript.setter(&v9, &v8, v6);
  v3 = v36[0];
  swift_bridgeObjectRetain(v36[0]);
  sub_1001ED890(v36);
  return v3;
}

uint64_t sub_10021C2D4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD v40[3];
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE **v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint32_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  NSObject *v67;
  int v68;
  uint64_t *v69;
  uint64_t *v70;
  ValueMetadata *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  int v77;
  id v78;
  unsigned int v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v82 = a1;
  v87 = a2;
  v102 = 0;
  v101 = 0;
  v100 = 0;
  v81 = 0;
  v90 = 0;
  v83 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = (*(_QWORD *)(v84 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v87);
  v86 = (char *)v40 - v85;
  v102 = v4;
  v101 = v3;
  v100 = v2;
  swift_unknownObjectRetain(v3);
  if (v87)
  {
    v80 = v87;
    v78 = v87;
    v90 = v87;
    swift_getObjectType(v87);
    swift_unknownObjectRetain(v78);
    v79 = objc_msgSend(v78, "isEditable");
    swift_unknownObjectRelease(v78);
    if ((v79 & 1) != 0)
    {
      v72 = &type metadata for ConversationNavigationBarItemType;
      v5 = _allocateUninitializedArray<A>(_:)(2, &type metadata for ConversationNavigationBarItemType);
      *v6 = 0;
      v6[1] = 1;
      sub_10003CB20();
      v76 = &v89;
      v89 = v5;
      v75 = &v88;
      v88 = v82;
      v73 = sub_10003A0C8(&qword_1005A4EE8);
      v74 = sub_100221824();
      v7 = sub_100221894();
      v77 = Sequence<>.contains(_:)(v75, v73, v74, v7);
      sub_1001ED890(v76);
      if ((v77 & 1) != 0)
      {
        swift_unknownObjectRelease(v78);
        return 1;
      }
      else
      {
        swift_unknownObjectRelease(v78);
        return 0;
      }
    }
    else
    {
      swift_unknownObjectRelease(v78);
      return 2;
    }
  }
  else
  {
    v70 = &v99;
    v99 = v82;
    v69 = &v98;
    v98 = 12;
    v8 = sub_10021CB98();
    if ((== infix<A>(_:_:)(v70, v69, &type metadata for ConversationNavigationBarItemType, v8, &protocol witness table for Int) & 1) != 0)
    {
      return 1;
    }
    else
    {
      v9 = v86;
      v49 = sub_10021387C();
      v50 = (char *)&v97 + 4;
      v57 = 32;
      swift_beginAccess(v49);
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v9, v49, v83);
      swift_endAccess(v50);
      v58 = 7;
      v10 = swift_allocObject(&unk_100525D88, 24, 7);
      v51 = v10;
      *(_QWORD *)(v10 + 16) = v82;
      swift_retain(v10);
      v11 = swift_allocObject(&unk_100525DB0, v57, v58);
      v12 = v51;
      v59 = v11;
      *(_QWORD *)(v11 + 16) = sub_1001F5D7C;
      *(_QWORD *)(v11 + 24) = v12;
      v13 = swift_release(v12);
      v67 = Logger.logObject.getter(v13);
      v68 = static os_log_type_t.default.getter();
      v54 = &v96;
      v96 = 12;
      v52 = sub_1001EB1EC();
      v53 = sub_1001EB254();
      v14 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(&v97, v54, &type metadata for UInt32, &type metadata for Int, v52, v53, v14);
      v55 = v97;
      v56 = 17;
      v15 = swift_allocObject(&unk_100525DD8, 17, v58);
      v16 = v56;
      v17 = v58;
      v61 = v15;
      *(_BYTE *)(v15 + 16) = 32;
      v18 = swift_allocObject(&unk_100525E00, v16, v17);
      v19 = v57;
      v20 = v58;
      v62 = v18;
      *(_BYTE *)(v18 + 16) = 8;
      v21 = swift_allocObject(&unk_100525E28, v19, v20);
      v22 = v57;
      v23 = v58;
      v24 = v21;
      v25 = v59;
      v60 = v24;
      *(_QWORD *)(v24 + 16) = sub_100220698;
      *(_QWORD *)(v24 + 24) = v25;
      v26 = swift_allocObject(&unk_100525E50, v22, v23);
      v27 = v60;
      v64 = v26;
      *(_QWORD *)(v26 + 16) = sub_1001ED524;
      *(_QWORD *)(v26 + 24) = v27;
      v66 = sub_10003A0C8(qword_1005A5580);
      v63 = _allocateUninitializedArray<A>(_:)(3, v66);
      v65 = v28;
      swift_retain(v61);
      v29 = v62;
      v30 = v61;
      v31 = v65;
      *v65 = sub_1001ED4B8;
      v31[1] = v30;
      swift_retain(v29);
      v32 = v64;
      v33 = v62;
      v34 = v65;
      v65[2] = sub_1001ED4B8;
      v34[3] = v33;
      swift_retain(v32);
      v35 = v63;
      v36 = v64;
      v37 = v65;
      v65[4] = sub_1001F6408;
      v37[5] = v36;
      sub_10003CB20();
      swift_bridgeObjectRelease(v35);
      if (os_log_type_enabled(v67, (os_log_type_t)v68))
      {
        v38 = v81;
        v42 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
        v41 = sub_10003A0C8(&qword_1005A3AD0);
        v43 = sub_1001ED340(0, v41, v41);
        v44 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v45 = &v95;
        v95 = v42;
        v46 = &v94;
        v94 = v43;
        v47 = &v93;
        v93 = v44;
        sub_1001ED398(2, &v95);
        sub_1001ED398(1, v45);
        v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v92 = v61;
        sub_1001ED3AC(&v91, (uint64_t)v45, (uint64_t)v46, (uint64_t)v47);
        v48 = v38;
        if (v38)
        {
          __break(1u);
        }
        else
        {
          v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
          v92 = v62;
          sub_1001ED3AC(&v91, (uint64_t)&v95, (uint64_t)&v94, (uint64_t)&v93);
          v40[1] = 0;
          v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
          v92 = v64;
          sub_1001ED3AC(&v91, (uint64_t)&v95, (uint64_t)&v94, (uint64_t)&v93);
          _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v68, "Reference message does not exist. Disable bar button item of type: %s", v42, v55);
          sub_1001ED3F0(v43, 0);
          sub_1001ED3F0(v44, 1);
          UnsafeMutablePointer.deallocate()();
          swift_release(v61);
          swift_release(v62);
          swift_release(v64);
        }
      }
      else
      {
        swift_release(v61);
        swift_release(v62);
        swift_release(v64);
      }

      (*(void (**)(char *, uint64_t))(v84 + 8))(v86, v83);
      return 0;
    }
  }
}

unint64_t sub_10021CB98()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4ED0;
  if (!qword_1005A4ED0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ConversationNavigationBarItemType, &type metadata for ConversationNavigationBarItemType);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4ED0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10021CC04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t ConversationNavigationBarItemsManager.init()()
{
  uint64_t result;
  char v1;
  uint64_t v2;

  if (!"MobileMail.ConversationNavigationBarItemsManager")
  {
    v1 = 2;
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StaticString.swift", 24, v1, 136, 0);
    __break(1u);
  }
  result = sub_100220ABC((uint64_t)"MobileMail.ConversationNavigationBarItemsManager", 48, (unint64_t)"init()", 6, 2, (unint64_t)"MobileMail/ConversationNavigationBarItemsManager.swift", 54, 2, v2, 0x70uLL, 0x1AuLL);
  __break(1u);
  return result;
}

uint64_t ConversationNavigationBarItemsManager.updateEnabledStatesForMessage(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v92[2];
  uint64_t v93;
  uint64_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE **v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _DWORD *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t *v107;
  uint32_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  NSObject *v122;
  int v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint8_t *v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int v134;
  uint64_t *v135;
  uint64_t *v136;
  _BYTE **v137;
  uint64_t *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t *v146;
  uint32_t v147;
  int v148;
  NSObject *v149;
  uint64_t v150;
  _BOOL4 v151;
  _BOOL4 v152;
  _BOOL4 v153;
  _BOOL4 v154;
  id v155;
  id v156;
  id v157;
  id v158;
  void *v159;
  id v160;
  unsigned int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint8_t *v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE **v170;
  uint64_t *v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t *v179;
  uint32_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  NSObject *v192;
  int v193;
  void **p_Strong;
  id v195;
  uint64_t v196;
  int v197;
  id v198;
  int v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t *v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  char *v213;
  uint64_t v214;
  unint64_t v215;
  char *v216;
  unint64_t v217;
  char *v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  char *v223;
  unint64_t v224;
  char *v225;
  unint64_t v226;
  char *v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  void *Strong;
  _BYTE v234[24];
  void *v235;
  uint64_t (*v236)(uint64_t, uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _BYTE *v240;
  uint64_t v241;
  _QWORD v242[3];
  uint64_t v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  uint64_t v250;
  _QWORD v251[3];
  uint64_t (*v252)(uint64_t, uint64_t, uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _BYTE *v256;
  uint64_t v257;
  _DWORD v258[9];
  char v259;
  uint64_t v260;
  _QWORD v261[2];
  uint64_t v262;
  uint64_t v263;

  v219 = a1;
  v263 = 0;
  v262 = 0;
  v228 = v261;
  v261[0] = 0;
  v261[1] = 0;
  v230 = 0;
  v245 = 0;
  v235 = 0;
  v232 = 0;
  v214 = 0;
  v210 = type metadata accessor for Date(0);
  v211 = *(_QWORD *)(v210 - 8);
  v212 = (*(_QWORD *)(v211 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v210);
  v213 = (char *)v92 - v212;
  v215 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A4F00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v214);
  v216 = (char *)v92 - v215;
  v217 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v218 = (char *)v92 - v217;
  v220 = type metadata accessor for Logger(v4);
  v221 = *(_QWORD *)(v220 - 8);
  v222 = (*(_QWORD *)(v221 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v219);
  v223 = (char *)v92 - v222;
  v224 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v5);
  v225 = (char *)v92 - v224;
  v226 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v227 = (char *)v92 - v226;
  v263 = v9;
  v262 = v1;
  v260 = static ConversationNavigationBarItemType.allCases.getter();
  v229 = sub_10003A0C8(&qword_1005A4EE8);
  v10 = sub_100221968();
  Collection<>.makeIterator()(v228, v229, v10);
  v231 = v230;
  while (1)
  {
    v207 = v231;
    v11 = sub_10003A0C8(&qword_1005A4F10);
    IndexingIterator.next()(v11);
    v208 = *(_QWORD *)&v258[7];
    if ((v259 & 1) != 0)
      break;
    v206 = v208;
    v201 = v208;
    v245 = v208;
    v202 = sub_10021BEA0();
    v204 = &v243;
    v243 = v201;
    v203 = sub_100214DC4();
    v12 = sub_100221DE8();
    Dictionary.subscript.getter(&v244, v204, v202, &type metadata for ConversationNavigationBarItemType, v203, v12);
    v205 = v244;
    if (v244)
    {
      v200 = v205;
      v198 = v205;
      v235 = v205;
      swift_bridgeObjectRelease(v202);
      v199 = sub_10021C2D4(v201, v219);
      if (v199 == 2)
      {
        objc_msgSend(v198, "setEnabled:", 1);
        v196 = v209 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
        swift_beginAccess(v209 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
        Strong = (void *)swift_unknownObjectWeakLoadStrong(v196);
        if (Strong)
        {
          p_Strong = &Strong;
          v195 = Strong;
          swift_unknownObjectRetain(Strong);
          sub_100213BD8(p_Strong);
          swift_endAccess(v234);
          swift_getObjectType(v195);
          objc_msgSend(v195, "conversationNavigationBarItemsManager:validateBarButtonItem:ofType:", v209, v198, v201);
          swift_unknownObjectRelease(v195);
        }
        else
        {
          sub_100213BD8(&Strong);
          swift_endAccess(v234);
        }
      }
      else
      {
        v197 = v199;
        v232 = v199 & 1;
        objc_msgSend(v198, "setEnabled:", v199 & 1);
      }

      v231 = v207;
    }
    else
    {
      v13 = v227;
      swift_bridgeObjectRelease(v202);
      v174 = sub_10021387C();
      v175 = (char *)v242 + 4;
      v182 = 32;
      swift_beginAccess(v174);
      (*(void (**)(char *, uint64_t, uint64_t))(v221 + 16))(v13, v174, v220);
      swift_endAccess(v175);
      v183 = 7;
      v14 = swift_allocObject(&unk_100525F90, 24, 7);
      v176 = v14;
      *(_QWORD *)(v14 + 16) = v201;
      swift_retain(v14);
      v15 = swift_allocObject(&unk_100525FB8, v182, v183);
      v16 = v176;
      v184 = v15;
      *(_QWORD *)(v15 + 16) = sub_1001F5D7C;
      *(_QWORD *)(v15 + 24) = v16;
      v17 = swift_release(v16);
      v192 = Logger.logObject.getter(v17);
      v193 = static os_log_type_t.default.getter();
      v179 = &v241;
      v241 = 12;
      v177 = sub_1001EB1EC();
      v178 = sub_1001EB254();
      v18 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(v242, v179, &type metadata for UInt32, &type metadata for Int, v177, v178, v18);
      v180 = v242[0];
      v181 = 17;
      v19 = swift_allocObject(&unk_100525FE0, 17, v183);
      v20 = v181;
      v21 = v183;
      v186 = v19;
      *(_BYTE *)(v19 + 16) = 32;
      v22 = swift_allocObject(&unk_100526008, v20, v21);
      v23 = v182;
      v24 = v183;
      v187 = v22;
      *(_BYTE *)(v22 + 16) = 8;
      v25 = swift_allocObject(&unk_100526030, v23, v24);
      v26 = v182;
      v27 = v183;
      v28 = v25;
      v29 = v184;
      v185 = v28;
      *(_QWORD *)(v28 + 16) = sub_100220698;
      *(_QWORD *)(v28 + 24) = v29;
      v30 = swift_allocObject(&unk_100526058, v26, v27);
      v31 = v185;
      v189 = v30;
      *(_QWORD *)(v30 + 16) = sub_1001ED524;
      *(_QWORD *)(v30 + 24) = v31;
      v191 = sub_10003A0C8(qword_1005A5580);
      v188 = _allocateUninitializedArray<A>(_:)(3, v191);
      v190 = v32;
      swift_retain(v186);
      v33 = v187;
      v34 = v186;
      v35 = v190;
      *v190 = sub_1001ED4B8;
      v35[1] = v34;
      swift_retain(v33);
      v36 = v189;
      v37 = v187;
      v38 = v190;
      v190[2] = sub_1001ED4B8;
      v38[3] = v37;
      swift_retain(v36);
      v39 = v188;
      v40 = v189;
      v41 = v190;
      v190[4] = sub_1001F6408;
      v41[5] = v40;
      sub_10003CB20();
      swift_bridgeObjectRelease(v39);
      if (os_log_type_enabled(v192, (os_log_type_t)v193))
      {
        v42 = v207;
        v167 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
        v166 = sub_10003A0C8(&qword_1005A3AD0);
        v168 = sub_1001ED340(0, v166, v166);
        v169 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v170 = &v240;
        v240 = v167;
        v171 = &v239;
        v239 = v168;
        v172 = &v238;
        v238 = v169;
        sub_1001ED398(2, &v240);
        sub_1001ED398(1, v170);
        v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v237 = v186;
        sub_1001ED3AC(&v236, (uint64_t)v170, (uint64_t)v171, (uint64_t)v172);
        v173 = v42;
        if (v42)
        {
          __break(1u);
        }
        else
        {
          v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
          v237 = v187;
          sub_1001ED3AC(&v236, (uint64_t)&v240, (uint64_t)&v239, (uint64_t)&v238);
          v164 = 0;
          v44 = v164;
          v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
          v237 = v189;
          sub_1001ED3AC(&v236, (uint64_t)&v240, (uint64_t)&v239, (uint64_t)&v238);
          v163 = v44;
          _os_log_impl((void *)&_mh_execute_header, v192, (os_log_type_t)v193, "Cannot find button of type: %s", v167, v180);
          sub_1001ED3F0(v168, 0);
          sub_1001ED3F0(v169, 1);
          UnsafeMutablePointer.deallocate()();
          swift_release(v186);
          swift_release(v187);
          swift_release(v189);
          v165 = v163;
        }
      }
      else
      {
        v43 = v207;
        swift_release(v186);
        swift_release(v187);
        swift_release(v189);
        v165 = v43;
      }
      v162 = v165;

      (*(void (**)(char *, uint64_t))(v221 + 8))(v227, v220);
      v231 = v162;
    }
  }
  sub_1001ED890(v261);
  v160 = ConversationNavigationBarItemsManager.moveButtonItem.getter();
  v161 = objc_msgSend(v160, "isEnabled");

  swift_unknownObjectRetain(v219);
  if ((v161 & 1) != 0)
  {
    swift_unknownObjectRetain(v219);
    if (v219)
    {
      v159 = v219;
      v157 = v219;
      swift_getObjectType(v219);
      v158 = objc_msgSend(v157, "sendLaterDate");
      if (v158)
      {
        v156 = v158;
        v155 = v158;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();
        (*(void (**)(char *, char *, uint64_t))(v211 + 32))(v216, v213, v210);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v216, 0, 1, v210);

      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v211 + 56))(v216, 1, 1, v210);
      }
      sub_100221D2C(v216, v218);
      swift_unknownObjectRelease(v157);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v211 + 56))(v218, 1, 1, v210);
    }
    v154 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v211 + 48))(v218, 1, v210) != 1;
    v152 = v154;
    sub_100221CBC((uint64_t)v218);
    v153 = v152;
  }
  else
  {
    v153 = 0;
  }
  v151 = v153;
  swift_unknownObjectRelease(v219);
  if (v151)
  {
    v45 = v225;
    v142 = sub_10021387C();
    v143 = (char *)v251 + 4;
    swift_beginAccess(v142);
    (*(void (**)(char *, uint64_t, uint64_t))(v221 + 16))(v45, v142, v220);
    v46 = swift_endAccess(v143);
    v149 = Logger.logObject.getter(v46);
    v148 = static os_log_type_t.default.getter();
    v146 = &v250;
    v250 = 2;
    v144 = sub_1001EB1EC();
    v145 = sub_1001EB254();
    v47 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(v251, v146, &type metadata for UInt32, &type metadata for Int, v144, v145, v47);
    v147 = v251[0];
    v48 = sub_10003A0C8(qword_1005A5580);
    v150 = _allocateUninitializedArray<A>(_:)(0, v48);
    if (os_log_type_enabled(v149, (os_log_type_t)v148))
    {
      v49 = v207;
      v131 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v129 = sub_10003A0C8(&qword_1005A3AD0);
      v130 = 0;
      v132 = sub_1001ED340(0, v129, v129);
      v133 = sub_1001ED340(v130, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v137 = &v249;
      v249 = v131;
      v138 = &v248;
      v248 = v132;
      v135 = &v247;
      v247 = v133;
      v134 = 0;
      sub_1001ED398(0, &v249);
      sub_1001ED398(v134, v137);
      v246 = v150;
      v136 = v92;
      __chkstk_darwin(v92);
      v50 = v138;
      v51 = &v92[-6];
      v139 = &v92[-6];
      v51[2] = (uint64_t)v137;
      v51[3] = (uint64_t)v50;
      v51[4] = v52;
      v140 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v53 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v139, v140, v53);
      v141 = v49;
      if (v49)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v149, (os_log_type_t)v148, "Explicitly disable the move button because message has send later date", v131, v147);
        v127 = 0;
        sub_1001ED3F0(v132, 0);
        sub_1001ED3F0(v133, v127);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v150);
        v128 = v141;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v150);
      v128 = v207;
    }
    v125 = v128;

    (*(void (**)(char *, uint64_t))(v221 + 8))(v225, v220);
    v124 = ConversationNavigationBarItemsManager.moveButtonItem.getter();
    objc_msgSend(v124, "setEnabled:", 0);

    v126 = v125;
  }
  else
  {
    v126 = v207;
  }
  v54 = v223;
  v102 = v126;
  v103 = sub_10021387C();
  v104 = &v258[1];
  v112 = 32;
  swift_beginAccess(v103);
  (*(void (**)(char *, uint64_t, uint64_t))(v221 + 16))(v54, v103, v220);
  swift_endAccess(v104);
  swift_unknownObjectRetain(v219);
  v113 = 7;
  v55 = swift_allocObject(&unk_100525E78, 24, 7);
  v110 = v55;
  *(_QWORD *)(v55 + 16) = v219;
  v122 = Logger.logObject.getter(v55);
  v123 = static os_log_type_t.default.getter();
  v107 = &v257;
  v257 = 8;
  v105 = sub_1001EB1EC();
  v106 = sub_1001EB254();
  v56 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(v258, v107, &type metadata for UInt32, &type metadata for Int, v105, v106, v56);
  v108 = v258[0];
  v109 = 17;
  v57 = swift_allocObject(&unk_100525EA0, 17, v113);
  v58 = v109;
  v59 = v113;
  v116 = v57;
  *(_BYTE *)(v57 + 16) = 0;
  v60 = swift_allocObject(&unk_100525EC8, v58, v59);
  v61 = v112;
  v62 = v113;
  v117 = v60;
  *(_BYTE *)(v60 + 16) = 4;
  v63 = swift_allocObject(&unk_100525EF0, v61, v62);
  v64 = v112;
  v65 = v113;
  v66 = v63;
  v67 = v110;
  v111 = v66;
  *(_QWORD *)(v66 + 16) = sub_100221A14;
  *(_QWORD *)(v66 + 24) = v67;
  v68 = swift_allocObject(&unk_100525F18, v64, v65);
  v69 = v112;
  v70 = v113;
  v71 = v68;
  v72 = v111;
  v114 = v71;
  *(_QWORD *)(v71 + 16) = sub_100221AF4;
  *(_QWORD *)(v71 + 24) = v72;
  v73 = swift_allocObject(&unk_100525F40, v69, v70);
  v74 = v112;
  v75 = v113;
  v76 = v73;
  v77 = v114;
  v115 = v76;
  *(_QWORD *)(v76 + 16) = sub_1001ED524;
  *(_QWORD *)(v76 + 24) = v77;
  v78 = swift_allocObject(&unk_100525F68, v74, v75);
  v79 = v115;
  v119 = v78;
  *(_QWORD *)(v78 + 16) = sub_100221BAC;
  *(_QWORD *)(v78 + 24) = v79;
  v121 = sub_10003A0C8(qword_1005A5580);
  v118 = _allocateUninitializedArray<A>(_:)(3, v121);
  v120 = v80;
  swift_retain(v116);
  v81 = v117;
  v82 = v116;
  v83 = v120;
  *v120 = sub_1001ED4B8;
  v83[1] = v82;
  swift_retain(v81);
  v84 = v119;
  v85 = v117;
  v86 = v120;
  v120[2] = sub_1001ED4B8;
  v86[3] = v85;
  swift_retain(v84);
  v87 = v118;
  v88 = v119;
  v89 = v120;
  v120[4] = sub_100221BF4;
  v89[5] = v88;
  sub_10003CB20();
  swift_bridgeObjectRelease(v87);
  if (os_log_type_enabled(v122, (os_log_type_t)v123))
  {
    v90 = v102;
    v95 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(8, &type metadata for UInt8);
    v93 = sub_10003A0C8(&qword_1005A3AD0);
    v94 = 0;
    v96 = sub_1001ED340(0, v93, v93);
    v97 = sub_1001ED340(v94, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v98 = &v256;
    v256 = v95;
    v99 = &v255;
    v255 = v96;
    v100 = &v254;
    v254 = v97;
    sub_1001ED398(0, &v256);
    sub_1001ED398(1, v98);
    v252 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v253 = v116;
    sub_1001ED3AC(&v252, (uint64_t)v98, (uint64_t)v99, (uint64_t)v100);
    v101 = v90;
    if (v90)
    {
      __break(1u);
    }
    else
    {
      v252 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v253 = v117;
      sub_1001ED3AC(&v252, (uint64_t)&v256, (uint64_t)&v255, (uint64_t)&v254);
      v92[1] = 0;
      v252 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100221BF4;
      v253 = v119;
      sub_1001ED3AC(&v252, (uint64_t)&v256, (uint64_t)&v255, (uint64_t)&v254);
      _os_log_impl((void *)&_mh_execute_header, v122, (os_log_type_t)v123, "Update bar button items. editable? %{BOOL}d", v95, v108);
      v92[0] = 0;
      sub_1001ED3F0(v96, 0);
      sub_1001ED3F0(v97, v92[0]);
      UnsafeMutablePointer.deallocate()();
      swift_release(v116);
      swift_release(v117);
      swift_release(v119);
    }
  }
  else
  {
    swift_release(v116);
    swift_release(v117);
    swift_release(v119);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v221 + 8))(v223, v220);
}

uint64_t sub_10021E24C(void *a1)
{
  unsigned __int8 v2;
  char v3;
  char v5;

  swift_unknownObjectRetain(a1);
  if (a1)
  {
    swift_getObjectType(a1);
    v2 = objc_msgSend(a1, "isEditable");
    swift_unknownObjectRelease(a1);
    v3 = v2 & 1;
  }
  else
  {
    v3 = 2;
  }
  if (v3 == 2)
    v5 = 0;
  else
    v5 = v3 & 1;
  return v5 & 1;
}

unint64_t sub_10021E364()
{
  unint64_t result;

  result = sub_10021E384();
  byte_1005B9C28 = result & 1;
  return result;
}

unint64_t sub_10021E384()
{
  return (unint64_t)objc_msgSend((id)objc_opt_self(UINavigationBar), "mf_canUseDesktopClassNavigationBar") & 1;
}

char *sub_10021E3B0()
{
  if (qword_1005A3660 != -1)
    swift_once(&qword_1005A3660, sub_10021E364);
  return &byte_1005B9C28;
}

Swift::Void __swiftcall ConversationNavigationBarItemsManager.configureNavigationBar(_:navigationItem:)(UINavigationBar _, UINavigationItem navigationItem)
{
  unint64_t v2;
  uint64_t v3;
  Class v4;
  char *v5;
  char v6;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  Class v11;
  Class isa;

  v10 = 0;
  isa = _.super.super.super.isa;
  v11 = navigationItem.super.isa;
  if ((_UIBarsDesktopNavigationBarEnabled() & 1) != 0)
  {
    v5 = (char *)(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useDesktopClassNavigationBar);
    swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_useDesktopClassNavigationBar);
    v6 = *v5;
    swift_endAccess(v9);
    if ((v6 & 1) != 0)
    {
      -[objc_class setStyle:](navigationItem.super.isa, "setStyle:", 1);
    }
    else
    {
      -[objc_class setStyle:](navigationItem.super.isa, "setStyle:");
      v2 = sub_100215AF0();
      v3 = _allocateUninitializedArray<A>(_:)(0, v2);
      v4 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v3);
      -[objc_class setCenterItemGroups:](navigationItem.super.isa, "setCenterItemGroups:", v4);

    }
  }
}

Swift::Void __swiftcall ConversationNavigationBarItemsManager.configureDesktopClassButtons(for:isPrimary:isShowingTitle:animated:)(UINavigationItem a1, Swift::Bool isPrimary, Swift::Bool isShowingTitle, Swift::Bool animated)
{
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Class v13;
  objc_class *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  Class v70;
  uint64_t v71;
  Class v72;
  Class v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  int v80;
  int v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  NSString v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  Class v95;
  __int128 *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  _BYTE **v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t *v119;
  uint32_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  NSObject *v138;
  int v139;
  uint64_t v140;
  Class v141;
  uint64_t v142;
  Class v143;
  Class v144;
  uint64_t v145;
  int v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  int v151;
  int v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  _BOOL4 v159;
  _BOOL4 v160;
  _BOOL4 v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  Class isa;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  char v190;
  char v191;
  uint64_t v192;

  isa = a1.super.isa;
  v161 = isPrimary;
  v160 = isShowingTitle;
  v159 = animated;
  v192 = 0;
  v191 = 0;
  v190 = 0;
  v189 = 0;
  v188 = 0;
  v187 = 0;
  v183 = 0;
  v179 = 0;
  v158 = 0;
  v162 = type metadata accessor for Logger(0);
  v163 = *(_QWORD *)(v162 - 8);
  v164 = (*(_QWORD *)(v163 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v165 = (char *)&v69 - v164;
  v192 = __chkstk_darwin(isa);
  v191 = v5 & 1;
  v190 = v6 & 1;
  v189 = v7 & 1;
  v188 = v4;
  v167 = sub_10021F87C(v5 & 1, v6 & 1);
  v187 = v167;
  v168 = -[objc_class leftBarButtonItems](isa, "leftBarButtonItems");
  if (v168)
  {
    v157 = v168;
    v154 = v168;
    v8 = sub_100214DC4();
    v155 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v154, v8);

    v156 = v155;
  }
  else
  {
    v156 = 0;
  }
  v153 = v156;
  swift_bridgeObjectRetain(v156);
  v186 = v167;
  v184 = v153;
  sub_100221F80(&v186, &v185);
  if (v184)
  {
    sub_100221F80(&v184, &v169);
    if (v185)
    {
      v149 = v185;
      swift_bridgeObjectRetain(v185);
      v150 = &v169;
      v148 = v169;
      v147 = sub_100214DC4();
      v9 = sub_1002221F8();
      v151 = static Array<A>.== infix(_:_:)(v148, v149, v147, v9);
      swift_bridgeObjectRelease(v149);
      swift_bridgeObjectRelease(v149);
      sub_1001ED890(v150);
      sub_1001ED890(&v184);
      v152 = v151;
      goto LABEL_10;
    }
    sub_1001ED890(&v169);
    goto LABEL_12;
  }
  if (v185)
  {
LABEL_12:
    sub_100221FB4(&v184);
    v152 = 0;
    goto LABEL_10;
  }
  sub_1001ED890(&v184);
  v152 = 1;
LABEL_10:
  v146 = v152;
  swift_bridgeObjectRelease(v153);
  if ((v146 & 1) == 0)
  {
    swift_bridgeObjectRetain(v167);
    if (v167)
    {
      v145 = v167;
      v142 = v167;
      sub_100214DC4();
      v143 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v142);
      v144 = v143;
    }
    else
    {
      v144 = 0;
    }
    v141 = v144;
    -[objc_class setLeftBarButtonItems:animated:](isa, "setLeftBarButtonItems:animated:");

  }
  if (!v160)
  {
    v140 = 0;
    -[objc_class setTitle:](isa, "setTitle:");
    -[objc_class setTitleView:](isa, "setTitleView:", v140);
  }
  v10 = sub_10021FD4C(v160);
  v11 = v165;
  v115 = v10;
  v183 = v10;
  v113 = sub_10021387C();
  v114 = (char *)&v182 + 4;
  v125 = 32;
  swift_beginAccess(v113);
  (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v11, v113, v162);
  swift_endAccess(v114);
  swift_bridgeObjectRetain(v115);
  v116 = 24;
  v126 = 7;
  v12 = swift_allocObject(&unk_100526080, 24, 7);
  v13 = isa;
  v121 = v12;
  *(_QWORD *)(v12 + 16) = v115;
  v14 = v13;
  v15 = swift_allocObject(&unk_1005260A8, v116, v126);
  v127 = v15;
  *(_QWORD *)(v15 + 16) = isa;
  v138 = Logger.logObject.getter(v15);
  v139 = static os_log_type_t.default.getter();
  v119 = &v181;
  v181 = 22;
  v117 = sub_1001EB1EC();
  v118 = sub_1001EB254();
  v16 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v182, v119, &type metadata for UInt32, &type metadata for Int, v117, v118, v16);
  v120 = v182;
  v123 = 17;
  v17 = swift_allocObject(&unk_1005260D0, 17, v126);
  v18 = v123;
  v19 = v126;
  v129 = v17;
  *(_BYTE *)(v17 + 16) = 0;
  v20 = swift_allocObject(&unk_1005260F8, v18, v19);
  v21 = v125;
  v22 = v126;
  v130 = v20;
  v124 = 8;
  *(_BYTE *)(v20 + 16) = 8;
  v23 = swift_allocObject(&unk_100526120, v21, v22);
  v24 = v125;
  v25 = v126;
  v26 = v23;
  v27 = v121;
  v122 = v26;
  *(_QWORD *)(v26 + 16) = sub_100222024;
  *(_QWORD *)(v26 + 24) = v27;
  v28 = swift_allocObject(&unk_100526148, v24, v25);
  v29 = v123;
  v30 = v126;
  v31 = v28;
  v32 = v122;
  v131 = v31;
  *(_QWORD *)(v31 + 16) = sub_1001F5D18;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = swift_allocObject(&unk_100526170, v29, v30);
  v34 = v123;
  v35 = v126;
  v132 = v33;
  *(_BYTE *)(v33 + 16) = 64;
  v36 = swift_allocObject(&unk_100526198, v34, v35);
  v37 = v125;
  v38 = v126;
  v133 = v36;
  *(_BYTE *)(v36 + 16) = v124;
  v39 = swift_allocObject(&unk_1005261C0, v37, v38);
  v40 = v125;
  v41 = v126;
  v42 = v39;
  v43 = v127;
  v128 = v42;
  *(_QWORD *)(v42 + 16) = sub_1001E8E1C;
  *(_QWORD *)(v42 + 24) = v43;
  v44 = swift_allocObject(&unk_1005261E8, v40, v41);
  v45 = v128;
  v135 = v44;
  *(_QWORD *)(v44 + 16) = sub_1001ED524;
  *(_QWORD *)(v44 + 24) = v45;
  v137 = sub_10003A0C8(qword_1005A5580);
  v134 = _allocateUninitializedArray<A>(_:)(6, v137);
  v136 = v46;
  swift_retain(v129);
  v47 = v130;
  v48 = v129;
  v49 = v136;
  *v136 = sub_1001ED4B8;
  v49[1] = v48;
  swift_retain(v47);
  v50 = v131;
  v51 = v130;
  v52 = v136;
  v136[2] = sub_1001ED4B8;
  v52[3] = v51;
  swift_retain(v50);
  v53 = v132;
  v54 = v131;
  v55 = v136;
  v136[4] = sub_1001F60F4;
  v55[5] = v54;
  swift_retain(v53);
  v56 = v133;
  v57 = v132;
  v58 = v136;
  v136[6] = sub_1001ED4B8;
  v58[7] = v57;
  swift_retain(v56);
  v59 = v135;
  v60 = v133;
  v61 = v136;
  v136[8] = sub_1001ED4B8;
  v61[9] = v60;
  swift_retain(v59);
  v62 = v134;
  v63 = v135;
  v64 = v136;
  v136[10] = sub_1001ED6A8;
  v64[11] = v63;
  sub_10003CB20();
  swift_bridgeObjectRelease(v62);
  if (os_log_type_enabled(v138, (os_log_type_t)v139))
  {
    v65 = v158;
    v105 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22, &type metadata for UInt8);
    v104 = sub_10003A0C8(&qword_1005A3AD0);
    v106 = sub_1001ED340(1, v104, v104);
    v107 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v109 = &v174;
    v174 = v105;
    v110 = &v173;
    v173 = v106;
    v111 = &v172;
    v172 = v107;
    v108 = 2;
    sub_1001ED398(2, &v174);
    sub_1001ED398(v108, v109);
    v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v171 = v129;
    sub_1001ED3AC(&v170, (uint64_t)v109, (uint64_t)v110, (uint64_t)v111);
    v112 = v65;
    if (v65)
    {
      __break(1u);
    }
    else
    {
      v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v171 = v130;
      sub_1001ED3AC(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
      v103 = 0;
      v66 = v103;
      v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F60F4;
      v171 = v131;
      sub_1001ED3AC(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
      v102 = v66;
      v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v171 = v132;
      sub_1001ED3AC(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
      v101 = 0;
      v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v171 = v133;
      sub_1001ED3AC(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
      v100 = 0;
      v170 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
      v171 = v135;
      sub_1001ED3AC(&v170, (uint64_t)&v174, (uint64_t)&v173, (uint64_t)&v172);
      _os_log_impl((void *)&_mh_execute_header, v138, (os_log_type_t)v139, "Setting centerItems.count: %ld on navigationItem: %@", v105, v120);
      sub_1001ED3F0(v106, 1);
      sub_1001ED3F0(v107, 0);
      UnsafeMutablePointer.deallocate()();
      swift_release(v129);
      swift_release(v130);
      swift_release(v131);
      swift_release(v132);
      swift_release(v133);
      swift_release(v135);
    }
  }
  else
  {
    swift_release(v129);
    swift_release(v130);
    swift_release(v131);
    swift_release(v132);
    swift_release(v133);
    swift_release(v135);
  }

  (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v162);
  swift_bridgeObjectRetain(v115);
  sub_100215AF0();
  v95 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v115);
  -[objc_class setCenterItemGroups:](isa, "setCenterItemGroups:", v95);

  v96 = sub_10021FF9C();
  v98 = &v180;
  swift_beginAccess(v96);
  v97 = *(_QWORD *)v96;
  v99 = *((_QWORD *)v96 + 1);
  swift_bridgeObjectRetain(v99);
  swift_endAccess(v98);
  if (v99)
  {
    v93 = v97;
    v94 = v99;
    v90 = v99;
    v91 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v90);
    v92 = v91;
  }
  else
  {
    v92 = 0;
  }
  v87 = v92;
  -[objc_class setCustomizationIdentifier:](isa, "setCustomizationIdentifier:");

  v88 = sub_10021FFF0(v160);
  v179 = v88;
  v89 = -[objc_class rightBarButtonItems](isa, "rightBarButtonItems");
  if (v89)
  {
    v86 = v89;
    v83 = v89;
    v67 = sub_100214DC4();
    v84 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v83, v67);

    v85 = v84;
  }
  else
  {
    v85 = 0;
  }
  v82 = v85;
  swift_bridgeObjectRetain(v85);
  v178 = v88;
  v176 = v82;
  sub_100221F80(&v178, &v177);
  if (v176)
  {
    sub_100221F80(&v176, &v175);
    if (v177)
    {
      v78 = v177;
      swift_bridgeObjectRetain(v177);
      v79 = &v175;
      v77 = v175;
      v76 = sub_100214DC4();
      v68 = sub_1002221F8();
      v80 = static Array<A>.== infix(_:_:)(v77, v78, v76, v68);
      swift_bridgeObjectRelease(v78);
      swift_bridgeObjectRelease(v78);
      sub_1001ED890(v79);
      sub_1001ED890(&v176);
      v81 = v80;
      goto LABEL_41;
    }
    sub_1001ED890(&v175);
    goto LABEL_43;
  }
  if (v177)
  {
LABEL_43:
    sub_100221FB4(&v176);
    v81 = 0;
    goto LABEL_41;
  }
  sub_1001ED890(&v176);
  v81 = 1;
LABEL_41:
  v75 = v81;
  swift_bridgeObjectRelease(v82);
  if ((v75 & 1) == 0)
  {
    swift_bridgeObjectRetain(v88);
    if (v88)
    {
      v74 = v88;
      v71 = v88;
      sub_100214DC4();
      v72 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v71);
      v73 = v72;
    }
    else
    {
      v73 = 0;
    }
    v70 = v73;
    -[objc_class setRightBarButtonItems:animated:](isa, "setRightBarButtonItems:animated:");

  }
  swift_bridgeObjectRelease(v88);
  swift_bridgeObjectRelease(v115);
  swift_bridgeObjectRelease(v167);
}

uint64_t sub_10021F87C(char a1, char a2)
{
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char *v16;
  char v17;
  id v18;
  unsigned __int8 v19;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  void *v32;
  void *v33;
  uint64_t Strong;
  _BYTE v35[24];
  id v36;
  id v37;
  uint64_t v38;
  _BYTE v39[31];
  char v40;
  uint64_t v41;
  _BYTE v42[31];
  char v43;
  _BYTE v44[24];
  _QWORD v45[2];
  char v46;
  char v47;

  v45[1] = 0;
  v33 = 0;
  v47 = a1 & 1;
  v46 = a2 & 1;
  v2 = sub_100214DC4();
  v30 = _allocateUninitializedArray<A>(_:)(0, v2);
  swift_bridgeObjectRetain(v30);
  v45[0] = v30;
  if ((a2 & 1) != 0)
  {
    sub_1001ED890(v45);
    return v30;
  }
  else
  {
    swift_bridgeObjectRelease(v30);
    v26 = (char *)(v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showSupplementaryButtonItem);
    swift_beginAccess(v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showSupplementaryButtonItem);
    v27 = *v26;
    swift_endAccess(v44);
    if ((v27 & 1) != 0)
    {
      v25 = v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
      swift_beginAccess(v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
      Strong = swift_unknownObjectWeakLoadStrong(v25);
      if (Strong)
      {
        v22 = (id)Strong;
        swift_unknownObjectRetain(Strong);
        sub_100213BD8(&Strong);
        swift_endAccess(v35);
        swift_getObjectType(v22);
        v23 = objc_msgSend(v22, "supplementaryButtonItemForConversationNavigationBarItemsManager:", v29);
        swift_unknownObjectRelease(v22);
        v24 = v23;
      }
      else
      {
        sub_100213BD8(&Strong);
        swift_endAccess(v35);
        v24 = 0;
      }
      if (v24)
      {
        v33 = v24;
        v3 = v24;
        v32 = v24;
        v4 = sub_10003A0C8(&qword_1005A4F38);
        Array.append(_:)(&v32, v4);

      }
    }
    v21 = v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate;
    swift_beginAccess(v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_delegate);
    v41 = swift_unknownObjectWeakLoadStrong(v21);
    if (v41)
    {
      v18 = (id)v41;
      swift_unknownObjectRetain(v41);
      sub_100213BD8(&v41);
      swift_endAccess(v42);
      swift_getObjectType(v18);
      v19 = objc_msgSend(v18, "shouldAddDoneButtonForConversationNavigationBarItemsManager:", v29);
      swift_unknownObjectRelease(v18);
      v20 = v19 & 1;
    }
    else
    {
      sub_100213BD8(&v41);
      swift_endAccess(v42);
      v20 = 2;
    }
    v40 = v20;
    if (v20 == 2)
      v43 = 0;
    else
      v43 = v40 & 1;
    if ((v43 & 1) != 0)
    {
      v36 = ConversationNavigationBarItemsManager.doneButtonItem.getter();
      v5 = sub_10003A0C8(&qword_1005A4F38);
      Array.append(_:)(&v36, v5);
    }
    v16 = (char *)(v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showNavigationArrows);
    swift_beginAccess(v29 + OBJC_IVAR____TtC10MobileMail37ConversationNavigationBarItemsManager_showNavigationArrows);
    v17 = *v16;
    swift_endAccess(v39);
    if ((v17 & 1) != 0)
      v15 = a1;
    else
      v15 = 0;
    if ((v15 & 1) != 0)
    {
      v37 = ConversationNavigationBarItemsManager.arrowControlsButtonItem.getter();
      v6 = sub_10003A0C8(&qword_1005A4F38);
      Array.append(_:)(&v37, v6);
    }
    v13 = v45[0];
    swift_bridgeObjectRetain(v45[0]);
    swift_bridgeObjectRetain(v13);
    v38 = v13;
    v12 = sub_10003A0C8(&qword_1005A4F38);
    v7 = sub_100222268();
    v14 = Collection.isEmpty.getter(v12, v7);
    sub_1001ED890(&v38);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) != 0)
    {
      v11 = 0;
    }
    else
    {
      v10 = v45[0];
      swift_bridgeObjectRetain(v45[0]);
      v11 = v10;
    }
    sub_1001ED890(v45);
    return v11;
  }
}

uint64_t sub_10021FD4C(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v10;
  _BOOL4 v11;
  _BOOL4 v12;
  _BOOL4 v13;
  __int128 *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v19 = a1;
  v29 = 0;
  v28 = 0;
  v27 = 0;
  v20 = type metadata accessor for MailFeatureFlag(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v23 = (char *)&v7 - v22;
  v29 = __chkstk_darwin(v19) & 1;
  v28 = v1;
  if (v29)
  {
    v5 = sub_100215AF0();
    return Array.init()(v5);
  }
  else
  {
    v27 = sub_100220198();
    v2 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, enum case for MailFeatureFlag.remindMe(_:), v20);
    v18 = MailFeatureFlag.isEnabled.getter(v2);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    if ((v18 & 1) != 0)
    {
      v14 = sub_10021FF9C();
      v15 = &v25;
      swift_beginAccess(v14);
      v16 = *(_QWORD *)v14;
      v17 = *((_QWORD *)v14 + 1);
      swift_bridgeObjectRetain(v17);
      swift_endAccess(v15);
      v24[0] = v16;
      v24[1] = v17;
      v13 = v17 != 0;
      v11 = v13;
      sub_1001F0D3C((uint64_t)v24);
      v12 = v11;
    }
    else
    {
      v12 = 0;
    }
    if (v12)
    {
      v3 = sub_10021A7F4();
      v10 = &v26;
      v26 = v3;
      v4 = sub_10003A0C8(&qword_1005A4F48);
      Array.append(_:)(v10, v4);
    }
    v7 = &v27;
    v8 = v27;
    swift_bridgeObjectRetain(v27);
    sub_1001ED890(v7);
    return v8;
  }
}

uint64_t sub_10021FF6C(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100215AF0();
  return Array.count.getter(a1, v1);
}

__int128 *sub_10021FF9C()
{
  if (qword_1005A3668 != -1)
    swift_once(&qword_1005A3668, sub_100220338);
  return &xmmword_1005B9C30;
}

uint64_t sub_10021FFF0(char a1)
{
  _QWORD *v1;
  id v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  id v8;

  if ((a1 & 1) != 0)
    return 0;
  v8 = ConversationNavigationBarItemsManager.composeButtonItem.getter();
  if (!v8)
    return 0;
  v5 = sub_100214DC4();
  v6 = _allocateUninitializedArray<A>(_:)(1, v5);
  v4 = v1;
  v2 = v8;
  *v4 = v8;
  sub_10003CB20();

  return v6;
}

uint64_t sub_100220198()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;

  v4 = sub_100215AF0();
  v5 = _allocateUninitializedArray<A>(_:)(9, v4);
  v3 = v0;
  *v0 = sub_100215A08();
  v3[1] = sub_100216118();
  v3[2] = sub_1002167C4();
  v3[3] = sub_100217A90();
  v3[4] = sub_10021813C();
  v3[5] = sub_10021873C();
  v3[6] = sub_1002192D0();
  v3[7] = sub_100219A6C();
  v1 = sub_10021A130();
  result = v5;
  v3[8] = v1;
  sub_10003CB20();
  return result;
}

uint64_t sub_100220288()
{
  id *v0;
  id v1;
  uint64_t result;
  id *v3;
  unint64_t v4;
  uint64_t v5;

  v4 = sub_100214DC4();
  v5 = _allocateUninitializedArray<A>(_:)(5, v4);
  v3 = v0;
  *v0 = ConversationNavigationBarItemsManager.replyButtonItem.getter();
  v3[1] = ConversationNavigationBarItemsManager.replyAllButtonItem.getter();
  v3[2] = ConversationNavigationBarItemsManager.forwardButtonItem.getter();
  v3[3] = ConversationNavigationBarItemsManager.destructiveButtonItem.getter();
  v1 = ConversationNavigationBarItemsManager.moveButtonItem.getter();
  result = v5;
  v3[4] = v1;
  sub_10003CB20();
  return result;
}

uint64_t sub_100220338()
{
  uint64_t result;
  Swift::String v1;

  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ConversationNavigationBar", 0x19uLL, 1);
  result = v1._countAndFlagsBits;
  xmmword_1005B9C30 = (__int128)v1;
  return result;
}

id sub_100220378(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;

  v16 = a1;
  v17 = a2;
  v18 = a3;
  if (a2[3])
  {
    v11 = v17[3];
    sub_10020DB6C(v17, v11);
    v10 = *(_QWORD *)(v11 - 8);
    v3 = *(_QWORD *)(v10 + 64);
    v13 = &v6;
    v9 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
    __chkstk_darwin(&v6);
    v12 = (char *)&v6 - v9;
    (*(void (**)(void))(v4 + 16))();
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v11);
    sub_1001F25B8(v17);
    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  v7 = v15;
  v8 = objc_msgSend(v19, "initWithBarButtonSystemItem:target:action:", v16);
  swift_unknownObjectRelease(v7);
  return v8;
}

id sub_10022049C(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;

  v16 = a1;
  v17 = a2;
  v18 = a3;
  v19 = a4;
  if (a3[3])
  {
    v11 = v18[3];
    sub_10020DB6C(v18, v11);
    v10 = *(_QWORD *)(v11 - 8);
    v4 = *(_QWORD *)(v10 + 64);
    v13 = &v7;
    v9 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
    __chkstk_darwin(&v7);
    v12 = (char *)&v7 - v9;
    (*(void (**)(void))(v5 + 16))();
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v11);
    sub_1001F25B8(v18);
    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  v8 = objc_msgSend(v20, "initWithImage:style:target:action:", v16, v17, v15);
  swift_unknownObjectRelease(v7);

  return v8;
}

id sub_1002205D0(void *a1)
{
  void *v1;
  id v4;

  v4 = objc_msgSend(v1, "initWithCustomView:");

  return v4;
}

id sub_100220614(double a1, double a2, double a3, double a4)
{
  void *v4;

  return objc_msgSend(v4, "initWithFrame:", a1, a2, a3, a4, *(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a3, *(_QWORD *)&a4);
}

uint64_t sub_10022065C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100220698()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v1 = sub_1002206DC();
  return sub_1001F5D84(v4, v3, (uint64_t)&type metadata for ConversationNavigationBarItemType, v1);
}

unint64_t sub_1002206DC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4ED8;
  if (!qword_1005A4ED8)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ConversationNavigationBarItemType, &type metadata for ConversationNavigationBarItemType);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4ED8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100220748(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_100220778(uint64_t (*a1)(uint64_t *, uint64_t), uint64_t a2, unsigned int a3)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;

  if (a3 < 0x80uLL)
  {
    if (a3 > 0xFF)
      goto LABEL_12;
    v6 = (a3 + 1);
  }
  else
  {
    v8 = (a3 & 0x3F) << 8;
    if (a3 >> 6 < 0x20uLL)
    {
      v6 = (v8 | (a3 >> 6)) + 33217;
    }
    else
    {
      v7 = (v8 | (a3 >> 6) & 0x3F) << 8;
      if (a3 >> 12 < 0x10uLL)
        v6 = (v7 | (a3 >> 12)) + 8487393;
      else
        v6 = ((a3 >> 18) | ((v7 | (a3 >> 12) & 0x3F) << 8)) - 2122219023;
    }
  }
  v5 = 4 - ((uint64_t)__clz(v6) >> 3);
  v9 = (v6 - 0x101010101010101) & ((1 << ((8 * v5) & 0x3F)) - 1);
  if (v5 >= 0)
    return a1(&v9, v5);
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeBufferPointer with negative count", 39, 2, "Swift/UnsafeBufferPointer.swift", 31, 2, 1343, 0);
  __break(1u);
LABEL_12:
  LOBYTE(v4) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, v4, 3455, 0);
  __break(1u);
  return result;
}

uint64_t sub_100220ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, unint64_t a10, unint64_t a11)
{
  unsigned int v11;
  uint64_t result;
  int v13;
  uint64_t (*v14)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  char *v15;
  uint64_t v16[2];
  uint64_t *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v19 = a9;
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a6;
  v25 = a7;
  v26 = a8;
  v27 = a10;
  v28 = a11;
  v29 = "Fatal error";
  v30 = "Unexpectedly found nil while unwrapping an Optional value";
  v31 = "Swift/StaticString.swift";
  v32 = "Not enough bits to represent the passed value";
  v33 = "Swift/Integers.swift";
  v34 = "UnsafeBufferPointer with negative count";
  v35 = "Swift/UnsafeBufferPointer.swift";
  v36 = 0;
  v38 = a6;
  v39 = a7;
  v40 = a8;
  v41 = a1;
  v42 = a2;
  v43 = a10;
  v44 = a11;
  if ((a5 & 1) != 0)
  {
    if (v22 <= 0xFFFFFFFF)
    {
      v18 = v22;
      if ((v22 < 0xD800 || v18 > 0xDFFF) && v18 <= 0x10FFFF)
      {
        v17 = v16;
        __chkstk_darwin(v16);
        v14 = sub_100222338;
        v15 = &v37;
        sub_100220778((uint64_t (*)(uint64_t *, uint64_t))sub_100222378, (uint64_t)&v13, v11);
        return (uint64_t)v17;
      }
      LOBYTE(v13) = 2;
      _assertionFailure(_:_:file:line:flags:)(v29, 11, 2, v30, 57, 2, v31, 24, v13, 148, 0);
      __break(1u);
    }
    LOBYTE(v13) = 2;
    _assertionFailure(_:_:file:line:flags:)(v29, 11, 2, v32, 45, 2, v33, 20, v13, 3455, 0);
    __break(1u);
  }
  if (v22)
    v45 = v22;
  else
    v45 = 0;
  v16[0] = v45;
  if (!v45)
  {
    LOBYTE(v13) = 2;
    _assertionFailure(_:_:file:line:flags:)(v29, 11, 2, v30, 57, 2, v31, 24, v13, 136, 0);
    __break(1u);
  }
  if (v23 >= 0)
    return sub_100220E80(v16[0], v23, v24, v25, v26, v20, v21, v27, v19, v28);
  LOBYTE(v13) = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)(v29, 11, 2, v34, 39, 2, v35, 31, v13, 1343, 0);
  __break(1u);
  return result;
}

uint64_t sub_100220E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10)
{
  unsigned int v10;
  uint64_t result;
  int v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  const char *v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;
  const char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v19 = a9;
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a6;
  v25 = a7;
  v26 = a8;
  v27 = a10;
  v28 = "Fatal error";
  v29 = "Unexpectedly found nil while unwrapping an Optional value";
  v30 = "Swift/StaticString.swift";
  v31 = "Not enough bits to represent the passed value";
  v32 = "Swift/Integers.swift";
  v33 = "UnsafeBufferPointer with negative count";
  v34 = "Swift/UnsafeBufferPointer.swift";
  v35 = 0;
  v37 = a6;
  v38 = a7;
  v39 = a1;
  v40 = a2;
  v41 = a8;
  v42 = a10;
  if ((a5 & 1) != 0)
  {
    if (v22 <= 0xFFFFFFFF)
    {
      v18 = v22;
      if ((v22 < 0xD800 || v18 > 0xDFFF) && v18 <= 0x10FFFF)
      {
        v17 = &v15;
        __chkstk_darwin(&v15);
        v13 = sub_1002223A0;
        v14 = &v36;
        sub_100220778((uint64_t (*)(uint64_t *, uint64_t))sub_100222378, (uint64_t)&v12, v10);
        return (uint64_t)v17;
      }
      LOBYTE(v12) = 2;
      _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 57, 2, v30, 24, v12, 148, 0);
      __break(1u);
    }
    LOBYTE(v12) = 2;
    _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v31, 45, 2, v32, 20, v12, 3455, 0);
    __break(1u);
  }
  if (v22)
    v43 = v22;
  else
    v43 = 0;
  v16 = v43;
  if (!v43)
  {
    LOBYTE(v12) = 2;
    _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 57, 2, v30, 24, v12, 136, 0);
    __break(1u);
  }
  if (v23 >= 0)
    return sub_100221214(v16, v23, v24, v25, v20, v21, v26, v27);
  LOBYTE(v12) = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)(v28, 11, 2, v33, 39, 2, v34, 31, v12, 1343, 0);
  __break(1u);
  return result;
}

uint64_t sub_100221214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t result;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  const char *v28;
  const char *v29;
  const char *v30;
  const char *v31;
  const char *v32;
  const char *v33;

  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  v28 = "Fatal error";
  v29 = "Not enough bits to represent the passed value";
  v30 = "Swift/Integers.swift";
  v31 = "Not enough bits to represent a signed value";
  v32 = "Unexpectedly found nil while unwrapping an Optional value";
  v33 = "Swift/AssertCommon.swift";
  if (a3)
  {
    v19 = v22;
  }
  else
  {
    LOBYTE(v9) = 2;
    _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v32, 57, 2, v33, 24, v9, 230, 0);
    __break(1u);
  }
  v18 = v19;
  if (v23 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v23 <= 0x7FFFFFFF)
    {
      v17 = v23;
      if (v24)
      {
        v16 = v24;
      }
      else
      {
        LOBYTE(v9) = 2;
        _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v32, 57, 2, v33, 24, v9, 231, 0);
        __break(1u);
      }
      v15 = v16;
      if (v25 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v25 <= 0x7FFFFFFF)
        {
          v14 = v25;
          if (v20)
          {
            v13 = v20;
          }
          else
          {
            LOBYTE(v9) = 2;
            _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v32, 57, 2, v33, 24, v9, 232, 0);
            __break(1u);
          }
          v12 = v13;
          if (v21 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v21 <= 0x7FFFFFFF)
            {
              v11 = v21;
              if (v26 <= 0xFFFFFFFF)
              {
                v10 = v26;
                if (v27 <= 0xFFFFFFFF)
                  return _swift_stdlib_reportUnimplementedInitializerInFile(v18, v17, v15, v14, v12, v11, v10, v27, 0);
                LOBYTE(v9) = 2;
                _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 45, 2, v30, 20, v9, 3455, 0);
                __break(1u);
              }
              LOBYTE(v9) = 2;
              _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 45, 2, v30, 20, v9, 3455, 0);
              __break(1u);
            }
            LOBYTE(v9) = 2;
            _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 45, 2, v30, 20, v9, 3687, 0);
            __break(1u);
          }
          LOBYTE(v9) = 2;
          _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v31, 43, 2, v30, 20, v9, 3681, 0);
          __break(1u);
        }
        LOBYTE(v9) = 2;
        _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 45, 2, v30, 20, v9, 3687, 0);
        __break(1u);
      }
      LOBYTE(v9) = 2;
      _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v31, 43, 2, v30, 20, v9, 3681, 0);
      __break(1u);
    }
    LOBYTE(v9) = 2;
    _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v29, 45, 2, v30, 20, v9, 3687, 0);
    __break(1u);
  }
  LOBYTE(v9) = 2;
  result = _assertionFailure(_:_:file:line:flags:)(v28, 11, 2, v31, 43, 2, v30, 20, v9, 3681, 0);
  __break(1u);
  return result;
}

uint64_t sub_10022175C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100221784()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1002217AC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002217E8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

unint64_t sub_100221824()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4EF0;
  if (!qword_1005A4EF0)
  {
    v0 = sub_1001E7634(&qword_1005A4EE8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4EF0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100221894()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4EF8;
  if (!qword_1005A4EF8)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ConversationNavigationBarItemType, &type metadata for ConversationNavigationBarItemType);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4EF8);
    return WitnessTable;
  }
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100221900(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
}

id *sub_100221924(id *a1)
{
  if (*a1 != (id)1)

  return a1;
}

unint64_t sub_100221968()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4F08;
  if (!qword_1005A4F08)
  {
    v0 = sub_1001E7634(&qword_1005A4EE8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4F08);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002219D8()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_100221A14()
{
  uint64_t v0;

  return sub_10021E24C(*(void **)(v0 + 16));
}

uint64_t sub_100221A1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100221A44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

BOOL sub_100221A6C(uint64_t (*a1)(void))
{
  return (a1() & 1) != 0;
}

uint64_t sub_100221AB8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

BOOL sub_100221AF4()
{
  uint64_t v0;

  return sub_100221A6C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100221B00()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100221B3C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_100221B70()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100221BAC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100221B3C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100221BB8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100221BF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v4 = sub_100221C54();
  return sub_1001F5F9C(a1, a2, a3, v8, v9, (uint64_t)&type metadata for Int32, v4);
}

unint64_t sub_100221C54()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4F18;
  if (!qword_1005A4F18)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int32, &type metadata for Int32);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4F18);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100221CBC(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

void *sub_100221D2C(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    v2 = sub_10003A0C8(&qword_1005A4F00);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

unint64_t sub_100221DE8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4F20;
  if (!qword_1005A4F20)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ConversationNavigationBarItemType, &type metadata for ConversationNavigationBarItemType);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4F20);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100221E54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24);
}

uint64_t sub_100221E7C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100221EB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100221EE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100221F08()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100221F44()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

_QWORD *sub_100221F80(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;

  v4 = *a1;
  swift_bridgeObjectRetain(*a1);
  result = a2;
  *a2 = v4;
  return result;
}

_QWORD *sub_100221FB4(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  return a1;
}

uint64_t sub_100221FE8()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_100222024()
{
  uint64_t v0;

  return sub_10021FF6C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10022202C()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_100222068()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100222090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1002220B8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002220F4()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100222130()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100222158()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100222180()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002221BC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

unint64_t sub_1002221F8()
{
  unint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4F30;
  if (!qword_1005A4F30)
  {
    v0 = sub_100214DC4();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4F30);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100222268()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4F40;
  if (!qword_1005A4F40)
  {
    v0 = sub_1001E7634(&qword_1005A4F38);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4F40);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002222D8()
{
  return sub_100221968();
}

unint64_t sub_1002222EC()
{
  return sub_100221894();
}

ValueMetadata *type metadata accessor for ConversationNavigationBarItemType()
{
  return &type metadata for ConversationNavigationBarItemType;
}

uint64_t type metadata accessor for ConversationNavigationBarItemsManager()
{
  return objc_opt_self(_TtC10MobileMail37ConversationNavigationBarItemsManager);
}

uint64_t sub_100222338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_100220E80(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), a3, *(_QWORD *)(v3 + 64));
}

uint64_t sub_100222378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100220748(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1002223A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100221214(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

unint64_t sub_1002223BC()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4F80;
  if (!qword_1005A4F80)
  {
    v0 = objc_opt_self(MFArrowControlsView);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4F80);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_100222420()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

id sub_10022245C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "newComposeButtonItem");
}

unint64_t sub_10022247C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A8550;
  if (!qword_1005A8550)
  {
    v0 = objc_opt_self(UIImage);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A8550);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1002224E0()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

id sub_10022251C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100216E48(a1, a2, v2);
}

uint64_t sub_100222524(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100222568(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100222580()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4F90;
  if (!qword_1005A4F90)
  {
    v0 = objc_opt_self(UIMenuElement);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4F90);
    return ObjCClassMetadata;
  }
  return v3;
}

__n128 sub_1002225E4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  result = *(__n128 *)(a1 + 16);
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_100222600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(a1 + 24))
  {
    v2 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a2 + 24) = v2;
    (**(void (***)(void))(v2 - 8))();
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  }
  return a2;
}

uint64_t sub_100222678(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1002226BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002226D4()
{
  id v0;
  unint64_t v1;
  id v3;
  uint64_t v4;

  type metadata accessor for UIAppIntentInteraction(0);
  v4 = swift_allocObject(&unk_100526358, 24, 7);
  v0 = v3;
  swift_unknownObjectUnownedInit(v4 + 16);

  swift_retain(v4);
  swift_release(v4);
  v1 = sub_100222AD0();
  return UIAppIntentInteraction.__allocating_init<A>(intent:perform:)(&unk_10052B0A0, &unk_1005A4FA8, v4, &unk_10052B0A0, v1);
}

uint64_t sub_10022279C()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

uint64_t sub_1002227D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[6] = a3;
  v3[5] = a1;
  v3[2] = v3;
  v3[3] = 0;
  v3[4] = 0;
  v4 = type metadata accessor for NavigateSequentiallyDirection(0);
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v3[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  v3[10] = *a2;
  v3[3] = v6;
  v3[4] = a3 + 16;
  return swift_task_switch(sub_100222898, 0);
}

uint64_t sub_100222898()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  id Strong;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;

  v1 = v0[10];
  v2 = (_QWORD *)v0[9];
  v11 = v2;
  v10 = v0[8];
  v12 = v0[7];
  v0[2] = v0;
  sub_1002C1D28(v1, v2);
  v13 = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 88))(v11, v12);
  if (v13 == enum case for NavigateSequentiallyDirection.next(_:))
  {
    Strong = (id)swift_unknownObjectUnownedLoadStrong(v9[6] + 16);
    objc_msgSend(Strong, "navigateToMessageInDirection:", 1);

  }
  else if (v13 == enum case for NavigateSequentiallyDirection.previous(_:))
  {
    v7 = (id)swift_unknownObjectUnownedLoadStrong(v9[6] + 16);
    objc_msgSend(v7, "navigateToMessageInDirection:", 0xFFFFFFFFLL);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v9[8] + 8))(v9[9], v9[7]);
  }
  v6 = v9[9];
  v5 = (uint64_t *)v9[5];
  v5[3] = sub_10003A0C8((uint64_t *)&unk_1005A50D0);
  v5[4] = sub_1002054C4();
  v3 = sub_1001F2690(v5);
  static IntentResult.result<>()(v3);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v9[2] + 8))();
}

uint64_t sub_100222A4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = v2;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A4FA4);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EAA28;
  return sub_1002227D8(a1, a2, v6);
}

unint64_t sub_100222AD0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A77C0;
  if (!qword_1005A77C0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D17AC, &unk_10052B0A0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A77C0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100222B38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[14] = a2;
  v2[13] = a1;
  v2[5] = v2;
  v2[6] = 0;
  v2[12] = 0;
  v3 = type metadata accessor for Logger(0);
  v2[15] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[16] = v4;
  v2[17] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NavigateSequentiallyDirection(0);
  v2[18] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[19] = v6;
  v2[20] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[6] = a2;
  return swift_task_switch(sub_100222C08, 0);
}

uint64_t sub_100222C08()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;

  v0[5] = v0;
  sub_1002ED39C();
  v2 = type metadata accessor for MainActor(0);
  v0[21] = v2;
  v0[22] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100222C88, v3);
}

uint64_t sub_100222C88()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = v0;
  *(_QWORD *)(v0 + 184) = sub_1002ED3EC();
  swift_release();
  return swift_task_switch(sub_100222CE4, 0);
}

uint64_t sub_100222CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *buf;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint32_t size;
  os_log_type_t v31;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 40) = v0;
  if (v1)
  {
    v34 = *(void **)(v36 + 184);
    v35 = *(_QWORD *)(v36 + 168);
    swift_getObjectType();
    *(_QWORD *)(v36 + 192) = objc_msgSend(v34, "messageListContainerViewController");
    v2 = swift_unknownObjectRelease();
    *(_QWORD *)(v36 + 200) = static MainActor.shared.getter(v2);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
    return swift_task_switch(sub_1002233B4, v3);
  }
  else
  {
    *(_QWORD *)(v36 + 216) = 0;
    v5 = *(_QWORD *)(v36 + 136);
    v25 = *(_QWORD *)(v36 + 128);
    v27 = *(_QWORD *)(v36 + 120);
    v26 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v5, v26, v27);
    v6 = swift_endAccess(v36 + 16);
    v32 = Logger.logObject.getter(v6);
    v31 = static os_log_type_t.error.getter();
    *(_QWORD *)(v36 + 56) = 2;
    v28 = sub_1001EB1EC();
    v29 = sub_1001EB254();
    v7 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v36 + 232), v36 + 56, &type metadata for UInt32, &type metadata for Int, v28, v29, v7);
    size = *(_DWORD *)(v36 + 232);
    v8 = sub_10003A0C8(qword_1005A5580);
    v33 = _allocateUninitializedArray<A>(_:)(0, v8);
    if (os_log_type_enabled(v32, v31))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v19 = sub_10003A0C8(&qword_1005A3AD0);
      v21 = sub_1001ED340(0, v19, v19);
      v22 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v36 + 64) = buf;
      *(_QWORD *)(v36 + 72) = v21;
      *(_QWORD *)(v36 + 80) = v22;
      sub_1001ED398(0, (_BYTE **)(v36 + 64));
      sub_1001ED398(0, (_BYTE **)(v36 + 64));
      *(_QWORD *)(v36 + 88) = v33;
      v23 = (_QWORD *)swift_task_alloc(48);
      v23[2] = v36 + 64;
      v23[3] = v36 + 72;
      v23[4] = v36 + 80;
      v24 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v9 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v23, v24, v9);
      swift_task_dealloc(v23);
      _os_log_impl((void *)&_mh_execute_header, v32, v31, "Failed to find the conversation view controller", buf, size);
      sub_1001ED3F0(v21, 0);
      sub_1001ED3F0(v22, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v33);
    v15 = *(_QWORD *)(v36 + 136);
    v14 = *(_QWORD *)(v36 + 128);
    v16 = *(_QWORD *)(v36 + 120);
    v17 = *(_QWORD *)(v36 + 112);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    v10 = sub_10020AFDC();
    swift_allocError(&unk_100529530, v10, 0, 0);
    v18 = v11;
    swift_retain(v17);
    *(_QWORD *)(v18 + 24) = &unk_10052B0A0;
    v12 = sub_100222AD0();
    *(_QWORD *)(v18 + 32) = v12;
    *(_QWORD *)v18 = v17;
    *(_BYTE *)(v18 + 40) = 0;
    swift_willThrow(v12);
    v13 = *(_QWORD *)(v36 + 136);
    swift_task_dealloc(*(_QWORD *)(v36 + 160));
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v36 + 40) + 8))();
  }
}

uint64_t sub_1002233B4()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[24];
  v0[5] = v0;
  v0[26] = objc_msgSend(v1, "conversationViewController");
  swift_release();
  return swift_task_switch(sub_100223424, 0);
}

uint64_t sub_100223424()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *buf;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint32_t v33;
  os_log_type_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;

  v48 = (void *)v0[26];
  v1 = (void *)v0[24];
  v0[5] = v0;

  v0[27] = v48;
  if (!v48)
  {
    v8 = *(_QWORD *)(v47 + 136);
    v28 = *(_QWORD *)(v47 + 128);
    v30 = *(_QWORD *)(v47 + 120);
    v29 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v8, v29, v30);
    v9 = swift_endAccess(v47 + 16);
    v35 = Logger.logObject.getter(v9);
    v34 = static os_log_type_t.error.getter();
    *(_QWORD *)(v47 + 56) = 2;
    v31 = sub_1001EB1EC();
    v32 = sub_1001EB254();
    v10 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v47 + 232), v47 + 56, &type metadata for UInt32, &type metadata for Int, v31, v32, v10);
    v33 = *(_DWORD *)(v47 + 232);
    v11 = sub_10003A0C8(qword_1005A5580);
    v36 = _allocateUninitializedArray<A>(_:)(0, v11);
    if (os_log_type_enabled(v35, v34))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v22 = sub_10003A0C8(&qword_1005A3AD0);
      v24 = sub_1001ED340(0, v22, v22);
      v25 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v47 + 64) = buf;
      *(_QWORD *)(v47 + 72) = v24;
      *(_QWORD *)(v47 + 80) = v25;
      sub_1001ED398(0, (_BYTE **)(v47 + 64));
      sub_1001ED398(0, (_BYTE **)(v47 + 64));
      *(_QWORD *)(v47 + 88) = v36;
      v26 = (_QWORD *)swift_task_alloc(48);
      v26[2] = v47 + 64;
      v26[3] = v47 + 72;
      v26[4] = v47 + 80;
      v27 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v12 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v26, v27, v12);
      swift_task_dealloc(v26);
      _os_log_impl((void *)&_mh_execute_header, v35, v34, "Failed to find the conversation view controller", buf, v33);
      sub_1001ED3F0(v24, 0);
      sub_1001ED3F0(v25, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v36);
    v18 = *(_QWORD *)(v47 + 136);
    v17 = *(_QWORD *)(v47 + 128);
    v19 = *(_QWORD *)(v47 + 120);
    v20 = *(_QWORD *)(v47 + 112);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    v13 = sub_10020AFDC();
    swift_allocError(&unk_100529530, v13, 0, 0);
    v21 = v14;
    swift_retain(v20);
    *(_QWORD *)(v21 + 24) = &unk_10052B0A0;
    v15 = sub_100222AD0();
    *(_QWORD *)(v21 + 32) = v15;
    *(_QWORD *)v21 = v20;
    *(_BYTE *)(v21 + 40) = 0;
    swift_willThrow(v15);
    goto LABEL_11;
  }
  v45 = *(_QWORD **)(v47 + 160);
  v44 = *(_QWORD *)(v47 + 152);
  v46 = *(_QWORD *)(v47 + 144);
  v2 = *(_QWORD *)(v47 + 112);
  *(_QWORD *)(v47 + 96) = v48;
  sub_1002C1D28(v2, v45);
  v3 = (*(uint64_t (**)(_QWORD *, uint64_t))(v44 + 88))(v45, v46);
  if ((_DWORD)v3 == enum case for NavigateSequentiallyDirection.next(_:))
  {
    *(_DWORD *)(v47 + 236) = 1;
LABEL_7:
    v37 = *(_QWORD *)(v47 + 168);
    *(_DWORD *)(v47 + 240) = *(_DWORD *)(v47 + 236);
    *(_QWORD *)(v47 + 224) = static MainActor.shared.getter(v3);
    v38 = dispatch thunk of Actor.unownedExecutor.getter(v37, &protocol witness table for MainActor);
    return swift_task_switch(sub_100223A54, v38);
  }
  if ((_DWORD)v3 == enum case for NavigateSequentiallyDirection.previous(_:))
  {
    *(_DWORD *)(v47 + 236) = -1;
    goto LABEL_7;
  }
  v42 = *(_QWORD *)(v47 + 160);
  v41 = *(_QWORD *)(v47 + 152);
  v43 = *(_QWORD *)(v47 + 144);
  v39 = *(_QWORD *)(v47 + 112);
  v4 = sub_10020AFDC();
  swift_allocError(&unk_100529530, v4, 0, 0);
  v40 = v5;
  swift_retain(v39);
  *(_QWORD *)(v40 + 24) = &unk_10052B0A0;
  v6 = sub_100222AD0();
  *(_QWORD *)(v40 + 32) = v6;
  *(_QWORD *)v40 = v39;
  *(_BYTE *)(v40 + 40) = 2;
  swift_willThrow(v6);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);

LABEL_11:
  v16 = *(_QWORD *)(v47 + 136);
  swift_task_dealloc(*(_QWORD *)(v47 + 160));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v47 + 40) + 8))();
}

uint64_t sub_100223A54()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(unsigned int *)(v0 + 240);
  v2 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 40) = v0;
  objc_msgSend(v2, "navigateToMessageInDirection:", v1);
  swift_release();
  return swift_task_switch(sub_100223AB8, 0);
}

uint64_t sub_100223AB8()
{
  _QWORD *v0;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (id)v0[27];
  v3 = v0[20];
  v4 = v0[17];
  v0[5] = v0;
  static IntentResult.result<>()();

  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0[5] + 8))();
}

unint64_t sub_100223B34()
{
  return sub_1002054C4();
}

void *sub_100223B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  id v4;
  _BYTE v9[136];

  v4 = v3;
  swift_bridgeObjectRetain(a2);
  sub_1002D40E8(v3, a1, a2, v9);
  return memcpy(a3, v9, 0x88uLL);
}

void *sub_100223BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  id v4;
  uint64_t v9[9];

  v4 = v3;
  swift_bridgeObjectRetain(a2);
  sub_100235E08(v3, a1, a2, v9);
  return memcpy(a3, v9, 0x48uLL);
}

void *sub_100223C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  id v4;
  _BYTE v9[128];

  v4 = v3;
  swift_bridgeObjectRetain(a2);
  sub_1002DBEA4(v3, a1, a2, v9);
  return memcpy(a3, v9, 0x80uLL);
}

uint64_t sub_100223CEC()
{
  unint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  sub_10003A134(v2, qword_1005B9C40);
  sub_10003A088(v2, (uint64_t)qword_1005B9C40);
  v0 = sub_100223D50();
  return static Logger.mailUILogger<A>(for:)(v0);
}

unint64_t sub_100223D50()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4FB8;
  if (!qword_1005A4FB8)
  {
    v0 = objc_opt_self(CSSearchableItemAttributeSet);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4FB8);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_100223DB4()
{
  uint64_t v0;

  if (qword_1005A3670 != -1)
    swift_once(&qword_1005A3670, sub_100223CEC);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9C40);
}

uint64_t sub_100223E14()
{
  void *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v11 = v0;
  v7 = objc_msgSend(v0, "recipientEmailAddresses");
  if (v7)
  {
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String);

    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  v9 = v6;
  if (v6)
  {
    v2 = v9;
    swift_bridgeObjectRetain(v9);
    sub_1001ED890(&v9);
    v3 = sub_100223F78();
    swift_bridgeObjectRelease(v2);
    v4 = v3;
  }
  else
  {
    sub_1001ED890(&v9);
    v4 = 0;
  }
  v8 = v4;
  if (v4)
    return v8;
  v10 = _allocateUninitializedArray<A>(_:)(0, &unk_100528E40);
  sub_1001ED890(&v8);
  return v10;
}

uint64_t sub_100223F78()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10003A0C8(&qword_1005A4090);
  v0 = sub_100225A64();
  return sub_1001E919C((void (*)(char *, char *))sub_1002259F4, 0, v2, (uint64_t)&unk_100528E40, (uint64_t)&type metadata for Never, v0, (uint64_t)&protocol witness table for Never, v3);
}

uint64_t sub_100224020()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v0;
  v4 = CSSearchableItemAttributeSet.additionalRecipientEmailAddresses.getter();
  if (v4)
  {
    v2 = sub_100223F78();
    swift_bridgeObjectRelease(v4);
    v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  v5 = v3;
  if (v3)
    return v5;
  v6 = _allocateUninitializedArray<A>(_:)(0, &unk_100528E40);
  sub_1001ED890(&v5);
  return v6;
}

uint64_t sub_1002240E8()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v0;
  v4 = CSSearchableItemAttributeSet.hiddenAdditionalRecipientEmailAddresses.getter();
  if (v4)
  {
    v2 = sub_100223F78();
    swift_bridgeObjectRelease(v4);
    v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  v5 = v3;
  if (v3)
    return v5;
  v6 = _allocateUninitializedArray<A>(_:)(0, &unk_100528E40);
  sub_1001ED890(&v5);
  return v6;
}

uint64_t sub_1002241B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v106;
  __int128 *v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE **v116;
  uint64_t *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t *v124;
  uint32_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  NSObject *v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint8_t *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE **v166;
  uint64_t *v167;
  uint64_t *v168;
  uint64_t v169;
  __int128 v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t *v173;
  uint32_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  NSObject *v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  id v208;
  void *v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  uint64_t v215;
  uint8_t *v216;
  uint64_t v217;
  uint64_t v218;
  _BYTE **v219;
  uint64_t *v220;
  uint64_t *v221;
  uint64_t v222;
  id v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t *v226;
  uint32_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  NSObject *v239;
  int v240;
  void *v241;
  void *v242;
  uint64_t *v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  void *v247;
  void *v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  id v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  char *v258;
  unint64_t v259;
  char *v260;
  unint64_t v261;
  char *v262;
  id v263;
  _QWORD v264[2];
  uint64_t (*v265)(uint64_t, uint64_t, uint64_t);
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _BYTE *v269;
  uint64_t v270;
  uint32_t v271;
  void *v272;
  _QWORD v273[3];
  uint64_t (*v274)(uint64_t, uint64_t, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _BYTE *v278;
  uint64_t v279;
  uint32_t v280;
  uint64_t v281;
  uint64_t v282;
  _QWORD v283[3];
  uint64_t (*v284)(uint64_t, uint64_t, uint64_t);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _BYTE *v288;
  uint64_t v289;
  uint32_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  __int128 v295;
  __int128 v296;
  uint64_t v297;
  void *v298;

  v298 = 0;
  v295 = 0u;
  v296 = 0u;
  v291 = 0;
  v292 = 0;
  v253 = 0;
  v281 = 0;
  v282 = 0;
  v272 = 0;
  v255 = type metadata accessor for Logger(0);
  v256 = *(_QWORD *)(v255 - 8);
  v257 = (*(_QWORD *)(v256 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(v254);
  v258 = (char *)&v106 - v257;
  v259 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v260 = (char *)&v106 - v259;
  v261 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (void *)__chkstk_darwin(v2);
  v262 = (char *)&v106 - v261;
  v298 = v4;
  v263 = objc_msgSend(v4, "authors");
  if (v263)
  {
    v252 = v263;
    v249 = v263;
    v5 = sub_100228290();
    v250 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v249, v5);

    v251 = v250;
  }
  else
  {
    v251 = 0;
  }
  v297 = v251;
  if (v251)
  {
    v243 = &v297;
    v246 = v297;
    swift_bridgeObjectRetain(v297);
    sub_1001ED890(v243);
    swift_bridgeObjectRetain(v246);
    v245 = v264;
    v264[0] = v246;
    v244 = sub_10003A0C8(&qword_1005A4FC0);
    v6 = sub_100228220();
    Collection.first.getter(v244, v6);
    sub_1001ED890(v245);
    v247 = (void *)v264[1];
    swift_bridgeObjectRelease(v246);
    v248 = v247;
  }
  else
  {
    v209 = 0;
    sub_1001ED890(&v297);
    v248 = v209;
  }
  v242 = v248;
  if (v248)
  {
    v241 = v242;
    v7 = v262;
    v223 = v242;
    v272 = v242;
    v8 = sub_100223DB4();
    (*(void (**)(char *, uint64_t, uint64_t))(v256 + 16))(v7, v8, v255);
    v9 = v223;
    v230 = 7;
    v10 = swift_allocObject(&unk_100526520, 24, 7);
    v231 = v10;
    *(_QWORD *)(v10 + 16) = v223;
    v239 = Logger.logObject.getter(v10);
    v240 = static os_log_type_t.debug.getter();
    v226 = &v270;
    v270 = 12;
    v224 = sub_1001EB1EC();
    v225 = sub_1001EB254();
    v11 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v271, v226, &type metadata for UInt32, &type metadata for Int, v224, v225, v11);
    v227 = v271;
    v228 = 17;
    v12 = swift_allocObject(&unk_100526548, 17, v230);
    v13 = v228;
    v14 = v230;
    v233 = v12;
    *(_BYTE *)(v12 + 16) = 32;
    v15 = swift_allocObject(&unk_100526570, v13, v14);
    v16 = v230;
    v234 = v15;
    *(_BYTE *)(v15 + 16) = 8;
    v229 = 32;
    v17 = swift_allocObject(&unk_100526598, 32, v16);
    v18 = v229;
    v19 = v230;
    v20 = v17;
    v21 = v231;
    v232 = v20;
    *(_QWORD *)(v20 + 16) = sub_100228150;
    *(_QWORD *)(v20 + 24) = v21;
    v22 = swift_allocObject(&unk_1005265C0, v18, v19);
    v23 = v232;
    v236 = v22;
    *(_QWORD *)(v22 + 16) = sub_1001ED524;
    *(_QWORD *)(v22 + 24) = v23;
    v238 = sub_10003A0C8(qword_1005A5580);
    v235 = _allocateUninitializedArray<A>(_:)(3, v238);
    v237 = v24;
    swift_retain(v233);
    v25 = v234;
    v26 = v233;
    v27 = v237;
    *v237 = sub_1001ED4B8;
    v27[1] = v26;
    swift_retain(v25);
    v28 = v236;
    v29 = v234;
    v30 = v237;
    v237[2] = sub_1001ED4B8;
    v30[3] = v29;
    swift_retain(v28);
    v31 = v235;
    v32 = v236;
    v33 = v237;
    v237[4] = sub_1001F6408;
    v33[5] = v32;
    sub_10003CB20();
    swift_bridgeObjectRelease(v31);
    if (os_log_type_enabled(v239, (os_log_type_t)v240))
    {
      v34 = v253;
      v216 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
      v215 = sub_10003A0C8(&qword_1005A3AD0);
      v217 = sub_1001ED340(0, v215, v215);
      v218 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v219 = &v269;
      v269 = v216;
      v220 = &v268;
      v268 = v217;
      v221 = &v267;
      v267 = v218;
      sub_1001ED398(2, &v269);
      sub_1001ED398(1, v219);
      v265 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v266 = v233;
      sub_1001ED3AC(&v265, (uint64_t)v219, (uint64_t)v220, (uint64_t)v221);
      v222 = v34;
      if (v34)
      {
        __break(1u);
      }
      else
      {
        v265 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v266 = v234;
        sub_1001ED3AC(&v265, (uint64_t)&v269, (uint64_t)&v268, (uint64_t)&v267);
        v214 = 0;
        v265 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
        v266 = v236;
        sub_1001ED3AC(&v265, (uint64_t)&v269, (uint64_t)&v268, (uint64_t)&v267);
        _os_log_impl((void *)&_mh_execute_header, v239, (os_log_type_t)v240, "#SiriMail CSSearchableItemAttributeSet author: %s", v216, v227);
        sub_1001ED3F0(v217, 0);
        sub_1001ED3F0(v218, 1);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v256 + 8))(v262, v255);
    *(_QWORD *)&v210 = sub_1002257D4();
    *((_QWORD *)&v210 + 1) = v35;
    *(_QWORD *)&v211 = v36;
    *((_QWORD *)&v211 + 1) = v37;

    v212 = v210;
    v213 = v211;
  }
  else
  {
    v205 = 0;
    v38 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, 1);
    *(_QWORD *)&v206 = sub_1002B29F0(v205, v205, v38._countAndFlagsBits, (uint64_t)v38._object);
    *((_QWORD *)&v206 + 1) = v39;
    *(_QWORD *)&v207 = v40;
    *((_QWORD *)&v207 + 1) = v41;
    swift_bridgeObjectRetain(v39);
    swift_retain(v207);
    swift_retain(*((_QWORD *)&v207 + 1));
    swift_retain(v207);
    swift_retain(*((_QWORD *)&v207 + 1));
    swift_retain(v207);
    swift_retain(*((_QWORD *)&v207 + 1));
    v295 = v206;
    v296 = v207;
    v208 = objc_msgSend(v254, "authorEmailAddresses");
    if (v208)
    {
      v204 = v208;
      v201 = v208;
      v202 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v208, &type metadata for String);

      v203 = v202;
    }
    else
    {
      v203 = 0;
    }
    v294 = v203;
    if (v203)
    {
      v193 = &v294;
      v196 = v294;
      swift_bridgeObjectRetain(v294);
      sub_1001ED890(v193);
      swift_bridgeObjectRetain(v196);
      v195 = v273;
      v273[0] = v196;
      v194 = sub_10003A0C8(&qword_1005A4090);
      v42 = sub_100225A64();
      Collection.first.getter(v194, v42);
      sub_1001ED890(v195);
      v197 = v273[1];
      v198 = v273[2];
      swift_bridgeObjectRelease(v196);
      v199 = v197;
      v200 = v198;
    }
    else
    {
      v157 = 0;
      sub_1001ED890(&v294);
      v199 = v157;
      v200 = v157;
    }
    v191 = v200;
    v192 = v199;
    if (v200)
    {
      v189 = v192;
      v190 = v191;
      v43 = v260;
      *((_QWORD *)&v170 + 1) = v191;
      *(_QWORD *)&v170 = v192;
      v281 = v192;
      v282 = v191;
      v44 = sub_100223DB4();
      (*(void (**)(char *, uint64_t, uint64_t))(v256 + 16))(v43, v44, v255);
      swift_bridgeObjectRetain(*((_QWORD *)&v170 + 1));
      v176 = 32;
      v177 = 7;
      v45 = swift_allocObject(&unk_100526458, 32, 7);
      v46 = *((_QWORD *)&v170 + 1);
      v178 = v45;
      *(_QWORD *)(v45 + 16) = v170;
      *(_QWORD *)(v45 + 24) = v46;
      v186 = Logger.logObject.getter(v45);
      v187 = static os_log_type_t.debug.getter();
      v173 = &v279;
      v279 = 12;
      v171 = sub_1001EB1EC();
      v172 = sub_1001EB254();
      v47 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(&v280, v173, &type metadata for UInt32, &type metadata for Int, v171, v172, v47);
      v174 = v280;
      v175 = 17;
      v48 = swift_allocObject(&unk_100526480, 17, v177);
      v49 = v175;
      v50 = v177;
      v180 = v48;
      *(_BYTE *)(v48 + 16) = 32;
      v51 = swift_allocObject(&unk_1005264A8, v49, v50);
      v52 = v176;
      v53 = v177;
      v181 = v51;
      *(_BYTE *)(v51 + 16) = 8;
      v54 = swift_allocObject(&unk_1005264D0, v52, v53);
      v55 = v176;
      v56 = v177;
      v57 = v54;
      v58 = v178;
      v179 = v57;
      *(_QWORD *)(v57 + 16) = sub_100228040;
      *(_QWORD *)(v57 + 24) = v58;
      v59 = swift_allocObject(&unk_1005264F8, v55, v56);
      v60 = v179;
      v183 = v59;
      *(_QWORD *)(v59 + 16) = sub_1001ED524;
      *(_QWORD *)(v59 + 24) = v60;
      v185 = sub_10003A0C8(qword_1005A5580);
      v182 = _allocateUninitializedArray<A>(_:)(3, v185);
      v184 = v61;
      swift_retain(v180);
      v62 = v181;
      v63 = v180;
      v64 = v184;
      *v184 = sub_1001ED4B8;
      v64[1] = v63;
      swift_retain(v62);
      v65 = v183;
      v66 = v181;
      v67 = v184;
      v184[2] = sub_1001ED4B8;
      v67[3] = v66;
      swift_retain(v65);
      v68 = v182;
      v69 = v183;
      v70 = v184;
      v184[4] = sub_1001F6408;
      v70[5] = v69;
      sub_10003CB20();
      swift_bridgeObjectRelease(v68);
      if (os_log_type_enabled(v186, (os_log_type_t)v187))
      {
        v71 = v253;
        v163 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
        v162 = sub_10003A0C8(&qword_1005A3AD0);
        v164 = sub_1001ED340(0, v162, v162);
        v165 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v166 = &v278;
        v278 = v163;
        v167 = &v277;
        v277 = v164;
        v168 = &v276;
        v276 = v165;
        sub_1001ED398(2, &v278);
        sub_1001ED398(1, v166);
        v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v275 = v180;
        sub_1001ED3AC(&v274, (uint64_t)v166, (uint64_t)v167, (uint64_t)v168);
        v169 = v71;
        if (v71)
        {
          __break(1u);
        }
        else
        {
          v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
          v275 = v181;
          sub_1001ED3AC(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
          v160 = 0;
          v73 = v160;
          v274 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
          v275 = v183;
          sub_1001ED3AC(&v274, (uint64_t)&v278, (uint64_t)&v277, (uint64_t)&v276);
          v159 = v73;
          _os_log_impl((void *)&_mh_execute_header, v186, (os_log_type_t)v187, "#SiriMail CSSearchableItemAttributeSet authorEmailAddress: %s", v163, v174);
          sub_1001ED3F0(v164, 0);
          sub_1001ED3F0(v165, 1);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          v161 = v159;
        }
      }
      else
      {
        v72 = v253;
        swift_release();
        swift_release();
        swift_release();
        v161 = v72;
      }
      v158 = v161;

      (*(void (**)(char *, uint64_t))(v256 + 8))(v260, v255);
      swift_bridgeObjectRetain(*((_QWORD *)&v170 + 1));
      sub_1002B2EF8(v170, *((uint64_t *)&v170 + 1), v206, *((uint64_t *)&v206 + 1), v207, *((uint64_t *)&v207 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)&v206 + 1));
      swift_release();
      swift_release();
      swift_bridgeObjectRetain(*((_QWORD *)&v170 + 1));
      v74 = *((_QWORD *)&v295 + 1);
      v295 = v170;
      swift_bridgeObjectRelease(v74);
      swift_bridgeObjectRelease(*((_QWORD *)&v170 + 1));
      v188 = v158;
    }
    else
    {
      swift_bridgeObjectRelease(*((_QWORD *)&v206 + 1));
      swift_release();
      swift_release();
      v188 = v253;
    }
    v155 = v188;
    v156 = objc_msgSend(v254, "authorNames");
    if (v156)
    {
      v154 = v156;
      v151 = v156;
      v152 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v156, &type metadata for String);

      v153 = v152;
    }
    else
    {
      v153 = 0;
    }
    v293 = v153;
    if (v153)
    {
      v143 = &v293;
      v146 = v293;
      swift_bridgeObjectRetain(v293);
      sub_1001ED890(v143);
      swift_bridgeObjectRetain(v146);
      v145 = v283;
      v283[0] = v146;
      v144 = sub_10003A0C8(&qword_1005A4090);
      v75 = sub_100225A64();
      Collection.first.getter(v144, v75);
      sub_1001ED890(v145);
      v147 = v283[1];
      v148 = v283[2];
      swift_bridgeObjectRelease(v146);
      v149 = v147;
      v150 = v148;
    }
    else
    {
      v109 = 0;
      sub_1001ED890(&v293);
      v149 = v109;
      v150 = v109;
    }
    v141 = v150;
    v142 = v149;
    if (v150)
    {
      v139 = v142;
      v140 = v141;
      v76 = v258;
      v121 = v141;
      v120 = v142;
      v291 = v142;
      v292 = v141;
      v77 = sub_100223DB4();
      (*(void (**)(char *, uint64_t, uint64_t))(v256 + 16))(v76, v77, v255);
      swift_bridgeObjectRetain(v121);
      v127 = 32;
      v128 = 7;
      v78 = swift_allocObject(&unk_100526390, 32, 7);
      v79 = v121;
      v129 = v78;
      *(_QWORD *)(v78 + 16) = v120;
      *(_QWORD *)(v78 + 24) = v79;
      v137 = Logger.logObject.getter(v78);
      v138 = static os_log_type_t.debug.getter();
      v124 = &v289;
      v289 = 12;
      v122 = sub_1001EB1EC();
      v123 = sub_1001EB254();
      v80 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(&v290, v124, &type metadata for UInt32, &type metadata for Int, v122, v123, v80);
      v125 = v290;
      v126 = 17;
      v81 = swift_allocObject(&unk_1005263B8, 17, v128);
      v82 = v126;
      v83 = v128;
      v131 = v81;
      *(_BYTE *)(v81 + 16) = 32;
      v84 = swift_allocObject(&unk_1005263E0, v82, v83);
      v85 = v127;
      v86 = v128;
      v132 = v84;
      *(_BYTE *)(v84 + 16) = 8;
      v87 = swift_allocObject(&unk_100526408, v85, v86);
      v88 = v127;
      v89 = v128;
      v90 = v87;
      v91 = v129;
      v130 = v90;
      *(_QWORD *)(v90 + 16) = sub_100225B50;
      *(_QWORD *)(v90 + 24) = v91;
      v92 = swift_allocObject(&unk_100526430, v88, v89);
      v93 = v130;
      v134 = v92;
      *(_QWORD *)(v92 + 16) = sub_1001ED524;
      *(_QWORD *)(v92 + 24) = v93;
      v136 = sub_10003A0C8(qword_1005A5580);
      v133 = _allocateUninitializedArray<A>(_:)(3, v136);
      v135 = v94;
      swift_retain(v131);
      v95 = v132;
      v96 = v131;
      v97 = v135;
      *v135 = sub_1001ED4B8;
      v97[1] = v96;
      swift_retain(v95);
      v98 = v134;
      v99 = v132;
      v100 = v135;
      v135[2] = sub_1001ED4B8;
      v100[3] = v99;
      swift_retain(v98);
      v101 = v133;
      v102 = v134;
      v103 = v135;
      v135[4] = sub_1001F6408;
      v103[5] = v102;
      sub_10003CB20();
      swift_bridgeObjectRelease(v101);
      if (os_log_type_enabled(v137, (os_log_type_t)v138))
      {
        v104 = v155;
        v113 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
        v112 = sub_10003A0C8(&qword_1005A3AD0);
        v114 = sub_1001ED340(0, v112, v112);
        v115 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v116 = &v288;
        v288 = v113;
        v117 = &v287;
        v287 = v114;
        v118 = &v286;
        v286 = v115;
        sub_1001ED398(2, &v288);
        sub_1001ED398(1, v116);
        v284 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v285 = v131;
        sub_1001ED3AC(&v284, (uint64_t)v116, (uint64_t)v117, (uint64_t)v118);
        v119 = v104;
        if (v104)
        {
          __break(1u);
        }
        else
        {
          v284 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
          v285 = v132;
          sub_1001ED3AC(&v284, (uint64_t)&v288, (uint64_t)&v287, (uint64_t)&v286);
          v111 = 0;
          v284 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
          v285 = v134;
          sub_1001ED3AC(&v284, (uint64_t)&v288, (uint64_t)&v287, (uint64_t)&v286);
          _os_log_impl((void *)&_mh_execute_header, v137, (os_log_type_t)v138, "#SiriMail CSSearchableItemAttributeSet authorName: %s", v113, v125);
          sub_1001ED3F0(v114, 0);
          sub_1001ED3F0(v115, 1);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v256 + 8))(v258, v255);
      v110 = v295;
      swift_bridgeObjectRetain(*((_QWORD *)&v295 + 1));
      swift_retain(v207);
      swift_retain(*((_QWORD *)&v207 + 1));
      swift_bridgeObjectRetain(*((_QWORD *)&v110 + 1));
      swift_retain(v207);
      swift_retain(*((_QWORD *)&v207 + 1));
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease(*((_QWORD *)&v110 + 1));
      sub_1002B2F90(v120, v121, v110, *((uint64_t *)&v110 + 1), v207, *((uint64_t *)&v207 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)&v110 + 1));
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v107 = &v295;
    v108 = v295;
    swift_bridgeObjectRetain(*((_QWORD *)&v295 + 1));
    swift_retain(v207);
    swift_retain(*((_QWORD *)&v207 + 1));
    swift_bridgeObjectRetain(*((_QWORD *)&v108 + 1));
    swift_retain(v207);
    swift_retain(*((_QWORD *)&v207 + 1));
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(*((_QWORD *)&v108 + 1));
    sub_100225AD4(v107);
    v212 = v108;
    v213 = v207;
  }
  return v212;
}

uint64_t sub_100225750(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v1 = a1;
  v7 = objc_msgSend(a1, "debugDescription");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v6 = v2;

  v8 = String.partiallyRedactedString.getter(v5, v6);
  swift_bridgeObjectRelease(v6);

  return v8;
}

uint64_t sub_1002257D4()
{
  void *v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  void *v18;

  v18 = v0;
  v13 = objc_msgSend(v0, "displayName");
  if (v13)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v12 = v1;

    v2 = objc_msgSend(v0, "handles", v12, v11);
  }
  else
  {
    v2 = objc_msgSend(v0, "handles", 0, 0);
  }
  v7 = v2;
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String);
  swift_bridgeObjectRetain(v9);
  v15 = v9;
  v8 = sub_10003A0C8(&qword_1005A4090);
  v3 = sub_100225A64();
  Collection.first.getter(v8, v3);
  sub_1001ED890(&v15);
  v10 = v16;
  swift_bridgeObjectRelease(v9);
  v14 = v10;
  if (v10._object)
  {
    v17 = v14;
  }
  else
  {
    v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("<nil>", 5uLL, 1);
    sub_1001F0D3C((uint64_t)&v14);
  }

  return sub_1002B29F0(v6, v5, v17._countAndFlagsBits, (uint64_t)v17._object);
}

uint64_t sub_10022599C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v3[0] = String.partiallyRedactedAddress.getter();
  v3[1] = v0;
  v1 = sub_10003A0C8(&qword_1005A4A90);
  return String.init<A>(describing:)(v3, v1);
}

uint64_t sub_1002259E0(uint64_t a1, uint64_t a2)
{
  return String.partiallyRedactedString.getter(a1, a2);
}

uint64_t sub_1002259F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v6 = *a1;
  v8 = a1[1];
  swift_bridgeObjectRetain(v8);
  result = sub_1002B29F0(0, 0, v6, v8);
  *a2 = result;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  return result;
}

unint64_t sub_100225A64()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A7C10;
  if (!qword_1005A7C10)
  {
    v0 = sub_1001E7634(&qword_1005A4090);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A7C10);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_100225AD4(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return a1;
}

uint64_t sub_100225B14()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100225B50()
{
  uint64_t v0;

  return sub_1002259E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100225B5C()
{
  uint64_t v1;

  v1 = type metadata accessor for Logger(0);
  sub_10003A134(v1, qword_1005B9C58);
  sub_10003A088(v1, (uint64_t)qword_1005B9C58);
  return static Logger.mailUILogger<A>(for:)(&unk_1005268B8);
}

uint64_t sub_100225BB4()
{
  uint64_t v0;

  if (qword_1005A3678 != -1)
    swift_once(&qword_1005A3678, sub_100225B5C);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9C58);
}

uint64_t sub_100225C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain(a4);
  v10 = swift_allocObject(&unk_1005265E8, 32, 7);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v4 = sub_100202CE8();
  v11 = sub_100225D44(a1, a2, (uint64_t)sub_100228330, v10, (uint64_t)&unk_10052A8F8, v4);
  swift_release();
  return v11;
}

void *sub_100225CD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  _BYTE v5[128];

  sub_100223C60(a1, a2, v5);
  return memcpy(a3, v5, 0x80uLL);
}

uint64_t sub_100225D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  intptr_t v47;
  void *v48;
  id v49;
  dispatch_semaphore_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  uint64_t v60;
  void **v61;
  int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE **v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  intptr_t v112;
  unint64_t v113;
  dispatch_semaphore_t v114;
  void *v115;
  uint64_t v116;
  void **v117;
  int v118;
  void *v119;
  id v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  uint32_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  NSObject *v134;
  int v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint8_t *v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE **v145;
  uint64_t *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  unint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char *v166;
  unint64_t v167;
  char *v168;
  _QWORD *v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t *v176;
  unint64_t v177;
  uint32_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  NSObject *v190;
  int v191;
  uint64_t (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _BYTE *v196;
  uint64_t (*v197)(uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE *v201;
  char v202;
  uint64_t v203;
  uint32_t v204;
  void **v205;
  int v206;
  int v207;
  uint64_t (*v208)(uint64_t, void *);
  void *v209;
  Swift::Int (*v210)(uint64_t);
  uint64_t v211;
  void **aBlock;
  int v213;
  int v214;
  uint64_t (*v215)(uint64_t, void *);
  void *v216;
  uint64_t (*v217)(uint64_t);
  _QWORD *v218;
  id v219;
  dispatch_semaphore_t v220;
  uint64_t v221;
  uint64_t v222;
  uint32_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;

  v172 = a1;
  v173 = a2;
  v163 = a3;
  v164 = a4;
  v149 = a5;
  v150 = a6;
  v226 = 0;
  v227 = 0;
  v224 = 0;
  v225 = 0;
  v221 = 0;
  v220 = 0;
  v219 = 0;
  v151 = 0;
  v228 = a5;
  v156 = 0;
  v152 = type metadata accessor for DispatchTimeInterval();
  v153 = *(_QWORD *)(v152 - 8);
  v154 = (*(_QWORD *)(v153 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(0);
  v155 = (uint64_t *)((char *)&v96 - v154);
  v157 = type metadata accessor for DispatchTime(v6);
  v158 = *(_QWORD *)(v157 - 8);
  v159 = (*(_QWORD *)(v158 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v156);
  v160 = (char *)&v96 - v159;
  v161 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v162 = (char *)&v96 - v161;
  v170 = type metadata accessor for Logger(v9);
  v169 = *(_QWORD **)(v170 - 8);
  v165 = (v169[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = __chkstk_darwin(v172);
  v166 = (char *)&v96 - v165;
  v167 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = __chkstk_darwin(v10);
  v13 = (char *)&v96 - v167;
  v168 = (char *)&v96 - v167;
  v226 = v12;
  v227 = v14;
  v224 = v15;
  v225 = v16;
  v17 = sub_100225BB4();
  v171 = (void (*)(char *, uint64_t, uint64_t))v169[2];
  v171(v13, v17, v170);
  swift_bridgeObjectRetain(v173);
  v180 = 32;
  v181 = 7;
  v18 = swift_allocObject(&unk_100526610, 32, 7);
  v19 = v173;
  v182 = v18;
  *(_QWORD *)(v18 + 16) = v172;
  *(_QWORD *)(v18 + 24) = v19;
  v190 = Logger.logObject.getter(v18);
  v191 = static os_log_type_t.info.getter();
  v176 = &v222;
  v222 = 12;
  v174 = sub_1001EB1EC();
  v175 = sub_1001EB254();
  v177 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v223, v176, &type metadata for UInt32, &type metadata for Int, v174, v175, v177);
  v178 = v223;
  v179 = 17;
  v20 = swift_allocObject(&unk_100526638, 17, v181);
  v21 = v179;
  v22 = v181;
  v184 = v20;
  *(_BYTE *)(v20 + 16) = 32;
  v23 = swift_allocObject(&unk_100526660, v21, v22);
  v24 = v180;
  v25 = v181;
  v185 = v23;
  *(_BYTE *)(v23 + 16) = 8;
  v26 = swift_allocObject(&unk_100526688, v24, v25);
  v27 = v180;
  v28 = v181;
  v29 = v26;
  v30 = v182;
  v183 = v29;
  *(_QWORD *)(v29 + 16) = sub_100228378;
  *(_QWORD *)(v29 + 24) = v30;
  v31 = swift_allocObject(&unk_1005266B0, v27, v28);
  v32 = v183;
  v187 = v31;
  *(_QWORD *)(v31 + 16) = sub_1001ED524;
  *(_QWORD *)(v31 + 24) = v32;
  v189 = sub_10003A0C8(qword_1005A5580);
  v186 = _allocateUninitializedArray<A>(_:)(3, v189);
  v188 = v33;
  swift_retain(v184);
  v34 = v185;
  v35 = v184;
  v36 = v188;
  *v188 = sub_1001ED4B8;
  v36[1] = v35;
  swift_retain(v34);
  v37 = v187;
  v38 = v185;
  v39 = v188;
  v188[2] = sub_1001ED4B8;
  v39[3] = v38;
  swift_retain(v37);
  v40 = v186;
  v41 = v187;
  v42 = v188;
  v188[4] = sub_1001F6408;
  v42[5] = v41;
  sub_10003CB20();
  swift_bridgeObjectRelease(v40);
  if (os_log_type_enabled(v190, (os_log_type_t)v191))
  {
    v43 = v151;
    v142 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v141 = sub_10003A0C8(&qword_1005A3AD0);
    v143 = sub_1001ED340(0, v141, v141);
    v144 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v145 = &v196;
    v196 = v142;
    v146 = &v195;
    v195 = v143;
    v147 = &v194;
    v194 = v144;
    sub_1001ED398(2, &v196);
    sub_1001ED398(1, v145);
    v192 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v193 = v184;
    sub_1001ED3AC(&v192, (uint64_t)v145, (uint64_t)v146, (uint64_t)v147);
    v148 = v43;
    if (v43)
    {
      __break(1u);
    }
    else
    {
      v192 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v193 = v185;
      sub_1001ED3AC(&v192, (uint64_t)&v196, (uint64_t)&v195, (uint64_t)&v194);
      v139 = 0;
      v45 = v139;
      v192 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
      v193 = v187;
      sub_1001ED3AC(&v192, (uint64_t)&v196, (uint64_t)&v195, (uint64_t)&v194);
      v138 = v45;
      _os_log_impl((void *)&_mh_execute_header, v190, (os_log_type_t)v191, "#SiriMail query string: %s", v142, v178);
      sub_1001ED3F0(v143, 0);
      sub_1001ED3F0(v144, 1);
      UnsafeMutablePointer.deallocate()();
      swift_release(v184);
      swift_release(v185);
      swift_release(v187);
      v140 = v138;
    }
  }
  else
  {
    v44 = v151;
    swift_release(v184);
    swift_release(v185);
    swift_release(v187);
    v140 = v44;
  }
  v136 = v140;

  v137 = (void (*)(char *, uint64_t))v169[1];
  v137(v168, v170);
  if ((String.isEmpty.getter(v172, v173) & 1) != 0)
    return _allocateUninitializedArray<A>(_:)(0, v149);
  v116 = 24;
  v126 = 7;
  v122 = swift_allocObject(&unk_1005266D8, 24, 7);
  v111 = v122 + 16;
  v221 = v122 + 16;
  v112 = 0;
  v46 = _allocateUninitializedArray<A>(_:)(0, v149);
  v47 = v112;
  *(_QWORD *)(v122 + 16) = v46;
  v114 = dispatch_semaphore_create(v47);
  v220 = v114;
  v113 = sub_100228488();
  swift_bridgeObjectRetain(v173);
  type metadata accessor for CSQueryBuilder(v112);
  v48 = (void *)static CSQueryBuilder.queryContext.getter();
  v49 = sub_100226E64(v172, v173, v48);
  v50 = v114;
  v120 = v49;
  v219 = v49;
  v51 = v49;
  swift_retain(v122);
  swift_retain(v164);
  v52 = swift_allocObject(&unk_100526700, 56, v126);
  v53 = v163;
  v54 = v164;
  v55 = v150;
  v56 = (_QWORD *)v52;
  v57 = v122;
  v56[2] = v149;
  v56[3] = v55;
  v56[4] = v57;
  v56[5] = v53;
  v56[6] = v54;
  v217 = sub_100228538;
  v218 = v56;
  v117 = _NSConcreteStackBlock;
  aBlock = _NSConcreteStackBlock;
  v118 = 1107296256;
  v213 = 1107296256;
  v214 = 0;
  v215 = sub_10022770C;
  v216 = &unk_100526718;
  v115 = _Block_copy(&aBlock);
  swift_release(v218);
  objc_msgSend(v120, "setFoundItemsHandler:", v115);
  _Block_release(v115);

  v58 = v120;
  v59 = v50;
  v60 = swift_allocObject(&unk_100526750, v116, v126);
  v61 = v117;
  v62 = v118;
  *(_QWORD *)(v60 + 16) = v50;
  v210 = sub_1002285F4;
  v211 = v60;
  v205 = v61;
  v206 = v62;
  v207 = 0;
  v208 = sub_100227DC4;
  v209 = &unk_100526768;
  v119 = _Block_copy(&v205);
  swift_release(v211);
  objc_msgSend(v120, "setCompletionHandler:", v119);
  _Block_release(v119);

  static DispatchTime.now()(objc_msgSend(v120, "start"));
  v63 = v153;
  *v155 = 500;
  (*(void (**)(void))(v63 + 104))();
  + infix(_:_:)(v160, v155);
  (*(void (**)(_QWORD *, uint64_t))(v153 + 8))(v155, v152);
  v121 = *(void (**)(char *, uint64_t))(v158 + 8);
  v121(v160, v157);
  OS_dispatch_semaphore.wait(timeout:)(v162);
  v64 = v166;
  v121(v162, v157);
  v65 = sub_100225BB4();
  v171(v64, v65, v170);
  swift_retain(v122);
  v66 = swift_allocObject(&unk_1005267A0, 40, v126);
  v67 = v150;
  v68 = (_QWORD *)v66;
  v69 = v122;
  v127 = v68;
  v68[2] = v149;
  v68[3] = v67;
  v68[4] = v69;
  v134 = Logger.logObject.getter(v69);
  v135 = static os_log_type_t.debug.getter();
  v203 = 12;
  UnsignedInteger<>.init<A>(_:)(&v204, &v203, &type metadata for UInt32, &type metadata for Int, v174, v175, v177);
  v123 = v204;
  v124 = 17;
  v70 = swift_allocObject(&unk_1005267C8, 17, v126);
  v71 = v124;
  v72 = v126;
  v129 = v70;
  *(_BYTE *)(v70 + 16) = 0;
  v73 = swift_allocObject(&unk_1005267F0, v71, v72);
  v74 = v126;
  v130 = v73;
  *(_BYTE *)(v73 + 16) = 8;
  v125 = 32;
  v75 = swift_allocObject(&unk_100526818, 32, v74);
  v76 = v125;
  v77 = v126;
  v78 = v75;
  v79 = v127;
  v128 = v78;
  *(_QWORD *)(v78 + 16) = sub_10022869C;
  *(_QWORD *)(v78 + 24) = v79;
  v80 = swift_allocObject(&unk_100526840, v76, v77);
  v81 = v189;
  v82 = v80;
  v83 = v128;
  v132 = v82;
  *(_QWORD *)(v82 + 16) = sub_1001F5D18;
  *(_QWORD *)(v82 + 24) = v83;
  v131 = _allocateUninitializedArray<A>(_:)(3, v81);
  v133 = v84;
  swift_retain(v129);
  v85 = v130;
  v86 = v129;
  v87 = v133;
  *v133 = sub_1001ED4B8;
  v87[1] = v86;
  swift_retain(v85);
  v88 = v132;
  v89 = v130;
  v90 = v133;
  v133[2] = sub_1001ED4B8;
  v90[3] = v89;
  swift_retain(v88);
  v91 = v131;
  v92 = v132;
  v93 = v133;
  v133[4] = sub_1001F60F4;
  v93[5] = v92;
  sub_10003CB20();
  swift_bridgeObjectRelease(v91);
  if (os_log_type_enabled(v134, (os_log_type_t)v135))
  {
    v94 = v136;
    v104 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v102 = sub_10003A0C8(&qword_1005A3AD0);
    v103 = 0;
    v105 = sub_1001ED340(0, v102, v102);
    v106 = sub_1001ED340(v103, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v107 = &v201;
    v201 = v104;
    v108 = &v200;
    v200 = v105;
    v109 = &v199;
    v199 = v106;
    sub_1001ED398(0, &v201);
    sub_1001ED398(1, v107);
    v197 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v198 = v129;
    sub_1001ED3AC(&v197, (uint64_t)v107, (uint64_t)v108, (uint64_t)v109);
    v110 = v94;
    if (v94)
    {
      __break(1u);
    }
    else
    {
      v197 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v198 = v130;
      sub_1001ED3AC(&v197, (uint64_t)&v201, (uint64_t)&v200, (uint64_t)&v199);
      v101 = 0;
      v197 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F60F4;
      v198 = v132;
      sub_1001ED3AC(&v197, (uint64_t)&v201, (uint64_t)&v200, (uint64_t)&v199);
      _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v135, "#SiriMail MailMessageQuery.runQuery: returning %ld results", v104, v123);
      v100 = 0;
      sub_1001ED3F0(v105, 0);
      sub_1001ED3F0(v106, v100);
      UnsafeMutablePointer.deallocate()();
      swift_release(v129);
      swift_release(v130);
      swift_release(v132);
    }
  }
  else
  {
    swift_release(v129);
    swift_release(v130);
    swift_release(v132);
  }

  v137(v166, v170);
  v97 = &v202;
  swift_beginAccess(v111);
  v98 = *(_QWORD *)(v122 + 16);
  swift_bridgeObjectRetain(v98);
  swift_endAccess(v97);

  swift_release(v122);
  return v98;
}

uint64_t sub_100226B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain(a4);
  v10 = swift_allocObject(&unk_100526868, 32, 7);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v4 = sub_1002105CC();
  v11 = sub_100225D44(a1, a2, (uint64_t)sub_1002287BC, v10, (uint64_t)&unk_100527368, v4);
  swift_release(v10);
  return v11;
}

void *sub_100226BEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  _BYTE v5[72];

  sub_100223BD4(a1, a2, v5);
  return memcpy(a3, v5, 0x48uLL);
}

uint64_t sub_100226C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain(a4);
  v10 = swift_allocObject(&unk_100526890, 32, 7);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v4 = sub_100228810();
  v11 = sub_100225D44(a1, a2, (uint64_t)sub_100228804, v10, (uint64_t)&unk_10052A4B8, v4);
  swift_release();
  return v11;
}

void *sub_100226D1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  _BYTE v5[136];

  sub_100223B48(a1, a2, v5);
  return memcpy(a3, v5, 0x88uLL);
}

uint64_t sub_100226D88(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_100228878();
  return sub_100225D44(a1, a2, (uint64_t)sub_100226DE0, 0, (uint64_t)&unk_100528E40, v2);
}

void sub_100226DE0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;

  v6 = objc_msgSend(a1, "attributeSet");
  *a2 = sub_1002241B0();
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;

}

uint64_t sub_100226E50()
{
  return String.redactedQueryString.getter();
}

id sub_100226E64(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_100227ED4(a1, a2, a3);
}

uint64_t sub_100226EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t result;
  uint64_t WitnessTable;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE **v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t *v84;
  uint32_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  NSObject *v97;
  int v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  char v104;
  _QWORD v105[2];
  uint64_t v106;
  uint32_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v81 = a1;
  v76 = a2;
  v74 = a3;
  v75 = a4;
  v71 = a5;
  v72 = a6;
  v111 = 0;
  v110 = 0;
  v108 = 0;
  v109 = 0;
  v73 = 0;
  v112 = a5;
  v80 = type metadata accessor for Logger(0);
  v79 = *(_QWORD *)(v80 - 8);
  v77 = (*(_QWORD *)(v79 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (char *)&v48 - v77;
  v78 = (char *)&v48 - v77;
  v111 = __chkstk_darwin(v81);
  v110 = v7 + 16;
  v108 = v8;
  v109 = v9;
  v10 = sub_100225BB4();
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v6, v10, v80);
  swift_bridgeObjectRetain(v81);
  v88 = 7;
  v11 = swift_allocObject(&unk_1005269A0, 24, 7);
  v12 = v81;
  v89 = v11;
  *(_QWORD *)(v11 + 16) = v81;
  v97 = Logger.logObject.getter(v12);
  v98 = static os_log_type_t.debug.getter();
  v84 = &v106;
  v106 = 12;
  v82 = sub_1001EB1EC();
  v83 = sub_1001EB254();
  v13 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v107, v84, &type metadata for UInt32, &type metadata for Int, v82, v83, v13);
  v85 = v107;
  v86 = 17;
  v14 = swift_allocObject(&unk_1005269C8, 17, v88);
  v15 = v86;
  v16 = v88;
  v91 = v14;
  *(_BYTE *)(v14 + 16) = 0;
  v17 = swift_allocObject(&unk_1005269F0, v15, v16);
  v18 = v88;
  v92 = v17;
  *(_BYTE *)(v17 + 16) = 8;
  v87 = 32;
  v19 = swift_allocObject(&unk_100526A18, 32, v18);
  v20 = v87;
  v21 = v88;
  v22 = v19;
  v23 = v89;
  v90 = v22;
  *(_QWORD *)(v22 + 16) = sub_100228AA0;
  *(_QWORD *)(v22 + 24) = v23;
  v24 = swift_allocObject(&unk_100526A40, v20, v21);
  v25 = v90;
  v94 = v24;
  *(_QWORD *)(v24 + 16) = sub_1001F5D18;
  *(_QWORD *)(v24 + 24) = v25;
  v96 = sub_10003A0C8(qword_1005A5580);
  v93 = _allocateUninitializedArray<A>(_:)(3, v96);
  v95 = v26;
  swift_retain(v91);
  v27 = v92;
  v28 = v91;
  v29 = v95;
  *v95 = sub_1001ED4B8;
  v29[1] = v28;
  swift_retain(v27);
  v30 = v94;
  v31 = v92;
  v32 = v95;
  v95[2] = sub_1001ED4B8;
  v32[3] = v31;
  swift_retain(v30);
  v33 = v93;
  v34 = v94;
  v35 = v95;
  v95[4] = sub_1001F60F4;
  v35[5] = v34;
  sub_10003CB20();
  swift_bridgeObjectRelease(v33);
  if (os_log_type_enabled(v97, (os_log_type_t)v98))
  {
    v36 = v73;
    v64 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v62 = sub_10003A0C8(&qword_1005A3AD0);
    v63 = 0;
    v65 = sub_1001ED340(0, v62, v62);
    v66 = sub_1001ED340(v63, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v67 = &v103;
    v103 = v64;
    v68 = &v102;
    v102 = v65;
    v69 = &v101;
    v101 = v66;
    sub_1001ED398(0, &v103);
    sub_1001ED398(1, v67);
    v99 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v100 = v91;
    sub_1001ED3AC(&v99, (uint64_t)v67, (uint64_t)v68, (uint64_t)v69);
    v70 = v36;
    if (v36)
    {
      __break(1u);
    }
    else
    {
      v99 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v100 = v92;
      sub_1001ED3AC(&v99, (uint64_t)&v103, (uint64_t)&v102, (uint64_t)&v101);
      v59 = 0;
      v38 = v59;
      v99 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F60F4;
      v100 = v94;
      sub_1001ED3AC(&v99, (uint64_t)&v103, (uint64_t)&v102, (uint64_t)&v101);
      v58 = v38;
      _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v98, "#SiriMail found %ld items", v64, v85);
      v57 = 0;
      sub_1001ED3F0(v65, 0);
      sub_1001ED3F0(v66, v57);
      UnsafeMutablePointer.deallocate()();
      swift_release(v91);
      swift_release(v92);
      swift_release(v94);
      v60 = v58;
    }
  }
  else
  {
    v37 = v73;
    swift_release(v91);
    swift_release(v92);
    swift_release(v94);
    v60 = v37;
  }
  v39 = v60;

  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
  v105[1] = v81;
  swift_retain(v75);
  swift_retain(v75);
  v53 = &v48;
  __chkstk_darwin(&v48);
  v40 = v72;
  v41 = v74;
  v42 = &v48 - 6;
  v54 = &v48 - 6;
  v42[2] = v43;
  v42[3] = v40;
  v42[4] = v41;
  v42[5] = v44;
  v55 = sub_10003A0C8(&qword_1005A4FF8);
  v45 = sub_100228BB0();
  result = sub_1001E919C((void (*)(char *, char *))sub_100228B70, (uint64_t)v54, v55, v71, (uint64_t)&type metadata for Never, v45, (uint64_t)&protocol witness table for Never, v61);
  v56 = result;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    v49 = v56;
    swift_release(v75);
    swift_release(v75);
    v51 = v105;
    v105[0] = v49;
    v52 = &v104;
    swift_beginAccess(v76 + 16);
    v50 = type metadata accessor for Array(0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v50);
    Array.append<A>(contentsOf:)(v51, v50, v50, WitnessTable);
    return swift_endAccess(v52);
  }
  return result;
}

uint64_t sub_1002276DC(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100228A00();
  return Array.count.getter(a1, v1);
}

uint64_t sub_10022770C(uint64_t a1, void *a2)
{
  id v2;
  unint64_t v3;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v8;

  v5 = *(void (**)(void))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_retain(v8);
  v2 = a2;
  v3 = sub_100228A00();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v3);
  v5();
  swift_bridgeObjectRelease(v6);

  return swift_release(v8);
}

Swift::Int sub_100227788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE **v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint32_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  NSObject *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint32_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v65 = a1;
  v60 = a2;
  v75 = 0;
  v74 = 0;
  v73 = 0;
  v59 = 0;
  v61 = type metadata accessor for Logger(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = (*(_QWORD *)(v62 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v64 = (char *)&v31 - v63;
  v75 = __chkstk_darwin(v65);
  v74 = v2;
  swift_errorRetain(v75);
  if (v65)
  {
    v58 = v65;
    v3 = v64;
    v40 = v65;
    v73 = v65;
    v4 = sub_100225BB4();
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v3, v4, v61);
    swift_errorRetain(v40);
    v47 = 7;
    v5 = swift_allocObject(&unk_1005268D8, 24, 7);
    v48 = v5;
    *(_QWORD *)(v5 + 16) = v40;
    v56 = Logger.logObject.getter(v5);
    v57 = static os_log_type_t.error.getter();
    v43 = &v71;
    v71 = 12;
    v41 = sub_1001EB1EC();
    v42 = sub_1001EB254();
    v6 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(&v72, v43, &type metadata for UInt32, &type metadata for Int, v41, v42, v6);
    v44 = v72;
    v45 = 17;
    v7 = swift_allocObject(&unk_100526900, 17, v47);
    v8 = v45;
    v9 = v47;
    v50 = v7;
    *(_BYTE *)(v7 + 16) = 32;
    v10 = swift_allocObject(&unk_100526928, v8, v9);
    v11 = v47;
    v51 = v10;
    *(_BYTE *)(v10 + 16) = 8;
    v46 = 32;
    v12 = swift_allocObject(&unk_100526950, 32, v11);
    v13 = v46;
    v14 = v47;
    v15 = v12;
    v16 = v48;
    v49 = v15;
    *(_QWORD *)(v15 + 16) = sub_100228930;
    *(_QWORD *)(v15 + 24) = v16;
    v17 = swift_allocObject(&unk_100526978, v13, v14);
    v18 = v49;
    v53 = v17;
    *(_QWORD *)(v17 + 16) = sub_1001ED524;
    *(_QWORD *)(v17 + 24) = v18;
    v55 = sub_10003A0C8(qword_1005A5580);
    v52 = _allocateUninitializedArray<A>(_:)(3, v55);
    v54 = v19;
    swift_retain(v50);
    v20 = v51;
    v21 = v50;
    v22 = v54;
    *v54 = sub_1001ED4B8;
    v22[1] = v21;
    swift_retain(v20);
    v23 = v53;
    v24 = v51;
    v25 = v54;
    v54[2] = sub_1001ED4B8;
    v25[3] = v24;
    swift_retain(v23);
    v26 = v52;
    v27 = v53;
    v28 = v54;
    v54[4] = sub_1001F6408;
    v28[5] = v27;
    sub_10003CB20();
    swift_bridgeObjectRelease(v26);
    if (os_log_type_enabled(v56, (os_log_type_t)v57))
    {
      v29 = v59;
      v33 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
      v32 = sub_10003A0C8(&qword_1005A3AD0);
      v34 = sub_1001ED340(0, v32, v32);
      v35 = sub_1001ED340(1, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v36 = &v70;
      v70 = v33;
      v37 = &v69;
      v69 = v34;
      v38 = &v68;
      v68 = v35;
      sub_1001ED398(2, &v70);
      sub_1001ED398(1, v36);
      v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v67 = v50;
      sub_1001ED3AC(&v66, (uint64_t)v36, (uint64_t)v37, (uint64_t)v38);
      v39 = v29;
      if (v29)
      {
        __break(1u);
      }
      else
      {
        v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v67 = v51;
        sub_1001ED3AC(&v66, (uint64_t)&v70, (uint64_t)&v69, (uint64_t)&v68);
        v31 = 0;
        v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F6408;
        v67 = v53;
        sub_1001ED3AC(&v66, (uint64_t)&v70, (uint64_t)&v69, (uint64_t)&v68);
        _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v57, "#SiriMail %s", v33, v44);
        sub_1001ED3F0(v34, 0);
        sub_1001ED3F0(v35, 1);
        UnsafeMutablePointer.deallocate()();
        swift_release(v50);
        swift_release(v51);
        swift_release(v53);
      }
    }
    else
    {
      swift_release(v50);
      swift_release(v51);
      swift_release(v53);
    }

    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v61);
    swift_errorRelease(v40);
  }
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_100227D88(uint64_t a1)
{
  _QWORD v2[3];
  _BYTE v3[8];

  swift_getErrorValue(a1, v3, v2);
  return Error.localizedDescription.getter(v2[1], v2[2]);
}

uint64_t sub_100227DC4(uint64_t a1, void *a2)
{
  id v2;
  void *v4;
  void (*v5)(void);
  uint64_t v6;

  v5 = *(void (**)(void))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  swift_retain(v6);
  v2 = a2;
  if (a2)
    v4 = a2;
  else
    v4 = 0;
  v5();
  swift_errorRelease(v4);
  return swift_release(v6);
}

uint64_t sub_100227E60(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  swift_beginAccess(a1 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(v5);
  swift_endAccess(v7);
  v6 = Array.count.getter(v5, a2);
  swift_bridgeObjectRelease(v5);
  return v6;
}

id sub_100227ED4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v6;
  id v8;

  v6 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v4, "initWithQueryString:queryContext:");

  swift_bridgeObjectRelease(a2);
  return v8;
}

uint64_t sub_100227F3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100227F64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100227F8C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100227FC8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228004()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228040()
{
  return sub_10022599C();
}

uint64_t sub_10022804C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228074()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10022809C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002280D8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228114()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_100228150()
{
  uint64_t v0;

  return sub_100225750(*(void **)(v0 + 16));
}

uint64_t sub_100228158()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228180()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1002281A8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002281E4()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

unint64_t sub_100228220()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A4FC8;
  if (!qword_1005A4FC8)
  {
    v0 = sub_1001E7634(&qword_1005A4FC0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4FC8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100228290()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4FD0;
  if (!qword_1005A4FD0)
  {
    v0 = objc_opt_self(CSPerson);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4FD0);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1002282F4()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

void *sub_100228330@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_100225CD8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10022833C()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228378()
{
  return sub_100226E50();
}

uint64_t sub_100228384()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1002283AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1002283D4()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228410()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_10022844C()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

unint64_t sub_100228488()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4FD8;
  if (!qword_1005A4FD8)
  {
    v0 = objc_opt_self(CSUserQuery);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4FD8);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1002284EC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v2, 56);
}

uint64_t sub_100228538(uint64_t a1)
{
  uint64_t *v1;

  return sub_100226EB0(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_10022855C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_1002285A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002285B8()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

Swift::Int sub_1002285F4(uint64_t a1)
{
  uint64_t v1;

  return sub_100227788(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1002285FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_100228640(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100228658()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v2, 40);
}

uint64_t sub_10022869C()
{
  uint64_t v0;

  return sub_100227E60(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1002286B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_1002286E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228708()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228744()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228780()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

void *sub_1002287BC@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_100226BEC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1002287C8()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

void *sub_100228804@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return sub_100226D1C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100228810()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4FE0;
  if (!qword_1005A4FE0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D07F8, &unk_10052A4B8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4FE0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100228878()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A4FE8;
  if (!qword_1005A4FE8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CF5F0, &unk_100528E40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A4FE8);
    return WitnessTable;
  }
  return v2;
}

void *type metadata accessor for CSQueryRunner()
{
  return &unk_1005268B8;
}

uint64_t sub_1002288F4()
{
  uint64_t v0;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_100228930()
{
  uint64_t v0;

  return sub_100227D88(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100228938()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228960()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228988()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002289C4()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

unint64_t sub_100228A00()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A4FF0;
  if (!qword_1005A4FF0)
  {
    v0 = objc_opt_self(CSSearchableItem);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A4FF0);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_100228A64()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_100228AA0()
{
  uint64_t v0;

  return sub_1002276DC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100228AA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228AD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100228AF8()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228B34()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100228B70(_QWORD *a1)
{
  uint64_t v1;

  return sub_1001F1E40(a1, *(uint64_t (**)(_QWORD))(v1 + 32));
}

unint64_t sub_100228BB0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5000;
  if (!qword_1005A5000)
  {
    v0 = sub_1001E7634(&qword_1005A4FF8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5000);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100228C20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  Swift::String v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  v27 = a1;
  v15 = "Delete an email message draft";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v22 = (char *)&v9 - v10;
  v24 = 0;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v24);
  v19 = (uint64_t)&v9 - v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v24);
  v18 = (char *)&v9 - v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v24);
  v16 = (char *)&v9 - v13;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v20 = *(_QWORD *)(v21 - 8);
  v14 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v9 - v14;
  v25 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DELETE_DRAFT_DESCRIPTION", 0x18uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v25 & 1);
  sub_1001E790C();
  sub_1001E7920(v19);
  v28 = v15;
  v29 = 29;
  v30 = 2;
  v26 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17._countAndFlagsBits, v17._object, v18, v19, v15, 29, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v22, v25, v25, v21);
  v6 = sub_1002004D0();
  IntentDescription.init(_:categoryName:searchKeywords:)(v23, v22, v6);
  v7 = type metadata accessor for IntentDescription(v24);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v27, v26, v25);
}

uint64_t sub_100228EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v13 = a1;
  v12 = "Delete an email message draft";
  v8 = 0;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(0);
  v17 = (uint64_t)&v6 - v7;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v16 = (char *)&v6 - v9;
  v3 = type metadata accessor for String.LocalizationValue(v2);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v14 = (char *)&v6 - v10;
  v11 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete Draft", 0xCuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v11 & 1);
  sub_1001E790C();
  sub_1001E7920(v17);
  v18 = v12;
  v19 = 29;
  v20 = 2;
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, v15._countAndFlagsBits, v15._object, v16, v17, v12, 29, 2);
}

uint64_t sub_100229058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Builtin::Word v13;
  void *object;
  uint64_t KeyPath;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  char *v26;
  uint64_t countAndFlagsBits;

  v23 = a1;
  v1 = sub_10003A0C8(&qword_1005A5020);
  v9 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v26 = (char *)&v9 - v9;
  v19 = sub_10003A0C8(&qword_1005A5028);
  v18 = *(_QWORD *)(v19 - 8);
  v10 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  v21 = (char *)&v9 - v10;
  v11 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v10);
  v17 = (char *)&v9 - v11;
  v12 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v11);
  v20 = (char *)&v9 - v12;
  v25 = sub_1002292D8();
  v13 = 7;
  v24 = &unk_100526B50;
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
  v22 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete ", v13, 1);
  object = v4._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(object);
  KeyPath = swift_getKeyPath(&unk_1004CC480);
  v5 = sub_10003A0C8(&qword_1005A5038);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v19, v5);
  swift_release(KeyPath);
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v22 & 1);
  v16 = v6._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v17, v20, v19);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, v19);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v19);
  ParameterSummaryString.init(stringInterpolation:)(v21, v24, v25);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v22 & 1);
  countAndFlagsBits = v7._countAndFlagsBits;
  return IntentParameterSummary.init(_:table:)(v26, v7._countAndFlagsBits, v7._object, v24, v25);
}

unint64_t sub_1002292D8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5030;
  if (!qword_1005A5030)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC560, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5030);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100229344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  v1 = swift_retain(a1);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(a1);
  return v4;
}

uint64_t sub_1002293A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  sub_100202D50(a1, v6);
  v4 = v6[0];
  v5 = v6[1];
  *a2 = sub_100229344(v6[0]);
  swift_release(v4);
  return swift_release(v5);
}

uint64_t sub_1002293F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002293A0(a1, a2);
}

void *sub_100229408()
{
  return &unk_1005A5010;
}

uint64_t sub_100229414()
{
  char *v1;
  char v2;
  _BYTE v3[24];

  v1 = (char *)sub_100229408();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_endAccess(v3);
  return v2 & 1;
}

uint64_t sub_100229468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v6[3];

  v6[1] = a1;
  v6[2] = a2;
  v2 = swift_retain(a1);
  IntentParameter.wrappedValue.getter(v6, v2);
  v5 = v6[0];
  swift_release(a1);
  return v5;
}

uint64_t sub_1002294C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v6[3];

  v6[1] = a1;
  v6[2] = a2;
  v2 = swift_retain(a2);
  AppDependency.wrappedValue.getter(v6, v2);
  v5 = v6[0];
  swift_release(a2);
  return v5;
}

uint64_t sub_100229528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v3 + 528) = a3;
  *(_QWORD *)(v3 + 520) = a2;
  *(_QWORD *)(v3 + 512) = a1;
  *(_QWORD *)(v3 + 296) = v3;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_BYTE *)(v3 + 289) = 0;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 448) = 0;
  v4 = type metadata accessor for Logger(0);
  *(_QWORD *)(v3 + 536) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 544) = v5;
  v8 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v3 + 552) = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 560) = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 568) = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 576) = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 216) = a2;
  *(_QWORD *)(v3 + 224) = a3;
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 584) = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 592) = v12;
  *(_QWORD *)(v3 + 600) = v6;
  return swift_task_switch(sub_100229664, v12);
}

uint64_t sub_100229664()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint8_t *buf;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint32_t v33;
  os_log_type_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;

  v1 = v0[66];
  v2 = v0[65];
  v0[37] = v0;
  v42 = (void *)sub_1002294C8(v2, v1);
  sub_1002B5A94();
  v38 = *(_QWORD *)(v41 + 528);
  v37 = *(_QWORD *)(v41 + 520);

  *(_BYTE *)(v41 + 289) = 1;
  v39 = (void *)sub_1002294C8(v37, v38);
  v40 = sub_1002B63C4();
  if (v40)
  {
    v3 = *(_QWORD *)(v41 + 576);
    v28 = *(_QWORD *)(v41 + 544);
    v30 = *(_QWORD *)(v41 + 536);
    *(_QWORD *)(v41 + 448) = v40;

    v29 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v3, v29, v30);
    v4 = swift_endAccess(v41 + 192);
    v35 = Logger.logObject.getter(v4);
    v34 = static os_log_type_t.debug.getter();
    *(_QWORD *)(v41 + 456) = 2;
    v31 = sub_1001EB1EC();
    v32 = sub_1001EB254();
    v5 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v41 + 672), v41 + 456, &type metadata for UInt32, &type metadata for Int, v31, v32, v5);
    v33 = *(_DWORD *)(v41 + 672);
    v6 = sub_10003A0C8(qword_1005A5580);
    v36 = _allocateUninitializedArray<A>(_:)(0, v6);
    if (os_log_type_enabled(v35, v34))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v22 = sub_10003A0C8(&qword_1005A3AD0);
      v24 = sub_1001ED340(0, v22, v22);
      v25 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v41 + 480) = buf;
      *(_QWORD *)(v41 + 488) = v24;
      *(_QWORD *)(v41 + 496) = v25;
      sub_1001ED398(0, (_BYTE **)(v41 + 480));
      sub_1001ED398(0, (_BYTE **)(v41 + 480));
      *(_QWORD *)(v41 + 504) = v36;
      v26 = (_QWORD *)swift_task_alloc(48);
      v26[2] = v41 + 480;
      v26[3] = v41 + 488;
      v26[4] = v41 + 496;
      v27 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v7 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v26, v27, v7);
      swift_task_dealloc(v26);
      _os_log_impl((void *)&_mh_execute_header, v35, v34, "#SiriMail DeleteDraftIntent: Found an active email composition, deleting that now", buf, v33);
      sub_1001ED3F0(v24, 0);
      sub_1001ED3F0(v25, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v36);
    v19 = *(_QWORD *)(v41 + 576);
    v18 = *(_QWORD *)(v41 + 544);
    v20 = *(_QWORD *)(v41 + 536);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    objc_msgSend(v40, "setIsDirty:", 0);
    v21 = objc_msgSend(v40, "mailComposeView");
    if (!v21)
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/DeleteDraftIntent.swift", 34, 2, 49, 0);
    v17 = objc_msgSend(v21, "composeWebView");

    if (!v17)
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/DeleteDraftIntent.swift", 34, 2, 49, 0);
    objc_msgSend(v17, "setDirty:", 0);

    objc_msgSend(v40, "setResolution:", 3);
    *(_QWORD *)(v41 + 464) = objc_msgSend(v40, "compositionType");
    *(_QWORD *)(v41 + 472) = 2;
    v16 = type metadata accessor for MailComposeType(0);
    v9 = sub_10022B8BC();
    v10 = == infix<A>(_:_:)(v41 + 464, v41 + 472, v16, v9, &protocol witness table for Int);
    if ((v10 & 1) != 0)
      objc_msgSend(v40, "close");
    else
      objc_msgSend(v40, "finishPopoverAlertClosingComposition:", 1);
    *(_BYTE *)(v41 + 289) = 0;

  }
  else
  {

  }
  *(_QWORD *)(v41 + 608) = 0;
  v12 = *(_QWORD *)(v41 + 528);
  v13 = *(_QWORD *)(v41 + 520);
  *(_QWORD *)(v41 + 232) = v13;
  *(_QWORD *)(v41 + 240) = v12;
  v15 = sub_100229468(v13, v12);
  *(_QWORD *)(v41 + 616) = v15;
  v14 = sub_1002294C8(v13, v12);
  *(_QWORD *)(v41 + 624) = v14;
  v11 = (_QWORD *)swift_task_alloc(dword_1005A4AFC);
  *(_QWORD *)(v41 + 632) = v11;
  *(_QWORD *)(v41 + 640) = sub_10020D428();
  *v11 = *(_QWORD *)(v41 + 296);
  v11[1] = sub_100229E90;
  return sub_10020C528(v15, v14);
}

uint64_t sub_100229E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v7 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 632);
  v5 = *(void **)(*(_QWORD *)v1 + 624);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 616);
  v7[37] = *(_QWORD *)v1;
  v7[81] = a1;
  swift_task_dealloc(v3);

  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_100229F24, v7[74]);
}

uint64_t sub_100229F24()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint32_t v44;
  os_log_type_t v45;
  NSObject *log;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *buf;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint32_t size;
  os_log_type_t v69;
  NSObject *oslog;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint32_t v94;
  os_log_type_t v95;
  NSObject *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  v99 = v0[81];
  v0[37] = v0;
  v0[38] = v99;
  swift_bridgeObjectRetain(v99);
  v0[39] = v99;
  v100 = sub_10003A0C8((uint64_t *)&unk_1005A5050);
  v1 = sub_10022AE1C();
  v101 = Collection.isEmpty.getter(v100, v1);
  sub_1001ED890(v0 + 39);
  if ((v101 & 1) != 0)
  {
    if ((*(_BYTE *)(v98 + 289) & 1) != 0)
    {
      v9 = *(_QWORD *)(v98 + 560);
      v63 = *(_QWORD *)(v98 + 544);
      v65 = *(_QWORD *)(v98 + 536);
      v64 = Logger.appIntentLogger.unsafeMutableAddressor();
      swift_beginAccess(v64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v9, v64, v65);
      v10 = swift_endAccess(v98 + 144);
      oslog = Logger.logObject.getter(v10);
      v69 = static os_log_type_t.error.getter();
      *(_QWORD *)(v98 + 360) = 2;
      v66 = sub_1001EB1EC();
      v67 = sub_1001EB254();
      v11 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)((_QWORD *)(v98 + 664), v98 + 360, &type metadata for UInt32, &type metadata for Int, v66, v67, v11);
      size = *(_DWORD *)(v98 + 664);
      v12 = sub_10003A0C8(qword_1005A5580);
      v71 = _allocateUninitializedArray<A>(_:)(0, v12);
      if (os_log_type_enabled(oslog, v69))
      {
        v13 = *(_QWORD *)(v98 + 608);
        buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
        v57 = sub_10003A0C8(&qword_1005A3AD0);
        v59 = sub_1001ED340(0, v57, v57);
        v60 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        *(_QWORD *)(v98 + 368) = buf;
        *(_QWORD *)(v98 + 376) = v59;
        *(_QWORD *)(v98 + 384) = v60;
        sub_1001ED398(0, (_BYTE **)(v98 + 368));
        sub_1001ED398(0, (_BYTE **)(v98 + 368));
        *(_QWORD *)(v98 + 392) = v71;
        v61 = (_QWORD *)swift_task_alloc(48);
        v61[2] = v98 + 368;
        v61[3] = v98 + 376;
        v61[4] = v98 + 384;
        v62 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
        v14 = sub_1001F5C14();
        result = Sequence.forEach(_:)(sub_1001F5BE8, v61, v62, v14);
        if (v13)
          return result;
        swift_task_dealloc(v61);
        _os_log_impl((void *)&_mh_execute_header, oslog, v69, "#SiriMail DeleteDraftIntent: Found no persisted drafts to delete, throwing noMessagesFound error", buf, size);
        sub_1001ED3F0(v59, 0);
        sub_1001ED3F0(v60, 0);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v71);
      }
      else
      {
        swift_bridgeObjectRelease(v71);
      }
      v52 = *(_QWORD *)(v98 + 648);
      v49 = *(_QWORD *)(v98 + 560);
      v48 = *(_QWORD *)(v98 + 544);
      v50 = *(_QWORD *)(v98 + 536);

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
      v51 = type metadata accessor for ToolboxErrors(0);
      v15 = sub_1002053C0();
      swift_allocError(v51, v15, 0, 0);
      v17 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v51 - 8) + 104))(v16, enum case for ToolboxErrors.noMessagesFound(_:));
      swift_willThrow(v17);
      swift_bridgeObjectRelease(v52);
      v53 = *(_QWORD *)(v98 + 576);
      v54 = *(_QWORD *)(v98 + 568);
      v55 = *(_QWORD *)(v98 + 560);
      v56 = *(_QWORD *)(v98 + 552);
      swift_release(*(_QWORD *)(v98 + 584));
      swift_task_dealloc(v53);
      swift_task_dealloc(v54);
      swift_task_dealloc(v55);
      swift_task_dealloc(v56);
      return (*(uint64_t (**)(void))(*(_QWORD *)(v98 + 296) + 8))();
    }
    v18 = *(_QWORD *)(v98 + 552);
    v39 = *(_QWORD *)(v98 + 544);
    v41 = *(_QWORD *)(v98 + 536);
    v40 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v18, v40, v41);
    v19 = swift_endAccess(v98 + 120);
    log = Logger.logObject.getter(v19);
    v45 = static os_log_type_t.debug.getter();
    *(_QWORD *)(v98 + 320) = 2;
    v42 = sub_1001EB1EC();
    v43 = sub_1001EB254();
    v20 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v98 + 292), v98 + 320, &type metadata for UInt32, &type metadata for Int, v42, v43, v20);
    v44 = *(_DWORD *)(v98 + 292);
    v21 = sub_10003A0C8(qword_1005A5580);
    v47 = _allocateUninitializedArray<A>(_:)(0, v21);
    if (os_log_type_enabled(log, v45))
    {
      v22 = *(_QWORD *)(v98 + 608);
      v34 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v33 = sub_10003A0C8(&qword_1005A3AD0);
      v35 = sub_1001ED340(0, v33, v33);
      v36 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v98 + 328) = v34;
      *(_QWORD *)(v98 + 336) = v35;
      *(_QWORD *)(v98 + 344) = v36;
      sub_1001ED398(0, (_BYTE **)(v98 + 328));
      sub_1001ED398(0, (_BYTE **)(v98 + 328));
      *(_QWORD *)(v98 + 352) = v47;
      v37 = (_QWORD *)swift_task_alloc(48);
      v37[2] = v98 + 328;
      v37[3] = v98 + 336;
      v37[4] = v98 + 344;
      v38 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v23 = sub_1001F5C14();
      result = Sequence.forEach(_:)(sub_1001F5BE8, v37, v38, v23);
      if (v22)
        return result;
      swift_task_dealloc(v37);
      _os_log_impl((void *)&_mh_execute_header, log, v45, "#SiriMail DeleteDraftIntent: Found no persisted drafts to delete but already deleted a temporary draft, returning early", v34, v44);
      sub_1001ED3F0(v35, 0);
      sub_1001ED3F0(v36, 0);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v47);
    }
    else
    {
      swift_bridgeObjectRelease(v47);
    }
    v28 = *(_QWORD *)(v98 + 648);
    v26 = *(_QWORD *)(v98 + 552);
    v25 = *(_QWORD *)(v98 + 544);
    v27 = *(_QWORD *)(v98 + 536);

    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
    static IntentResult.result<>()(v24);
    swift_bridgeObjectRelease(v28);
    v29 = *(_QWORD *)(v98 + 576);
    v30 = *(_QWORD *)(v98 + 568);
    v31 = *(_QWORD *)(v98 + 560);
    v32 = *(_QWORD *)(v98 + 552);
    swift_release(*(_QWORD *)(v98 + 584));
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v98 + 296) + 8))();
  }
  v2 = *(_QWORD *)(v98 + 568);
  v89 = *(_QWORD *)(v98 + 544);
  v91 = *(_QWORD *)(v98 + 536);
  v90 = Logger.appIntentLogger.unsafeMutableAddressor();
  swift_beginAccess(v90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v2, v90, v91);
  v3 = swift_endAccess(v98 + 168);
  v96 = Logger.logObject.getter(v3);
  v95 = static os_log_type_t.debug.getter();
  *(_QWORD *)(v98 + 400) = 2;
  v92 = sub_1001EB1EC();
  v93 = sub_1001EB254();
  v4 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)((_QWORD *)(v98 + 668), v98 + 400, &type metadata for UInt32, &type metadata for Int, v92, v93, v4);
  v94 = *(_DWORD *)(v98 + 668);
  v5 = sub_10003A0C8(qword_1005A5580);
  v97 = _allocateUninitializedArray<A>(_:)(0, v5);
  if (!os_log_type_enabled(v96, v95))
  {
    swift_bridgeObjectRelease(v97);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v98 + 608);
  v84 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
  v83 = sub_10003A0C8(&qword_1005A3AD0);
  v85 = sub_1001ED340(0, v83, v83);
  v86 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
  *(_QWORD *)(v98 + 416) = v84;
  *(_QWORD *)(v98 + 424) = v85;
  *(_QWORD *)(v98 + 432) = v86;
  sub_1001ED398(0, (_BYTE **)(v98 + 416));
  sub_1001ED398(0, (_BYTE **)(v98 + 416));
  *(_QWORD *)(v98 + 440) = v97;
  v87 = (_QWORD *)swift_task_alloc(48);
  v87[2] = v98 + 416;
  v87[3] = v98 + 424;
  v87[4] = v98 + 432;
  v88 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
  v7 = sub_1001F5C14();
  result = Sequence.forEach(_:)(sub_1001F5BE8, v87, v88, v7);
  if (!v6)
  {
    swift_task_dealloc(v87);
    _os_log_impl((void *)&_mh_execute_header, v96, v95, "#SiriMail DeleteDraftIntent: Deleting messages from Drafts mailbox", v84, v94);
    sub_1001ED3F0(v85, 0);
    sub_1001ED3F0(v86, 0);
    UnsafeMutablePointer.deallocate()();
    swift_bridgeObjectRelease(v97);
LABEL_7:
    v81 = *(_QWORD *)(v98 + 648);
    v73 = *(_QWORD *)(v98 + 568);
    v72 = *(_QWORD *)(v98 + 544);
    v74 = *(_QWORD *)(v98 + 536);
    v77 = *(_QWORD *)(v98 + 528);
    v76 = *(_QWORD *)(v98 + 520);

    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v74);
    sub_10022B858();
    swift_bridgeObjectRetain(v81);
    v75 = (id)sub_1002294C8(v76, v77);
    v78 = objc_msgSend(v75, "undoManager");

    swift_retain(v76);
    swift_retain(v77);
    *(_QWORD *)(v98 + 248) = v76;
    *(_QWORD *)(v98 + 256) = v77;
    v79 = sub_10020C448();
    sub_1002014F8((_QWORD *)(v98 + 248));
    swift_retain(v76);
    swift_retain(v77);
    *(_QWORD *)(v98 + 264) = v76;
    *(_QWORD *)(v98 + 272) = v77;
    v80 = sub_10020C47C();
    sub_1002014F8((_QWORD *)(v98 + 264));
    v82 = sub_10020152C(v81, v78, v79, v80);
    *(_QWORD *)(v98 + 656) = v82;
    *(_QWORD *)(v98 + 408) = v82;
    *(_QWORD *)(v98 + 16) = *(_QWORD *)(v98 + 296);
    *(_QWORD *)(v98 + 56) = v98 + 280;
    *(_QWORD *)(v98 + 24) = sub_10022ACE8;
    *(_QWORD *)(v98 + 112) = swift_continuation_init();
    *(_QWORD *)(v98 + 80) = _NSConcreteStackBlock;
    *(_DWORD *)(v98 + 88) = 0x40000000;
    *(_DWORD *)(v98 + 92) = 0;
    *(_QWORD *)(v98 + 96) = sub_1002015C8;
    *(_QWORD *)(v98 + 104) = &unk_100526A58;
    objc_msgSend(v82, "performInteractionWithCompletion:", v98 + 80);
    return j__swift_continuation_await(v98 + 16);
  }
  return result;
}

uint64_t sub_10022ACE8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 296) = *v0;
  return swift_task_switch(sub_10022AD44, *(_QWORD *)(v1 + 592));
}

uint64_t sub_10022AD44()
{
  uint64_t v0;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(id *)(v0 + 656);
  v3 = *(_QWORD *)(v0 + 648);
  *(_QWORD *)(v0 + 296) = v0;

  static IntentResult.result<>()();
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v0 + 576);
  v5 = *(_QWORD *)(v0 + 568);
  v6 = *(_QWORD *)(v0 + 560);
  v7 = *(_QWORD *)(v0 + 552);
  swift_release(*(_QWORD *)(v0 + 584));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 296) + 8))();
}

unint64_t sub_10022AE1C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A97B0;
  if (!qword_1005A97B0)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A5050);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A97B0);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10022AE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  char *v20;
  Builtin::Word v21;
  const char *v22;
  uint64_t v23;
  int v24;
  char *v25;
  Swift::String v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD);
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[5];
  _QWORD v50[3];
  unsigned __int16 v51;
  const char *v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;

  v22 = "Email message draft to delete";
  v46 = &v55;
  v55 = 0;
  v56 = 0;
  v44 = 0;
  v0 = type metadata accessor for InputConnectionBehavior(0);
  v11 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v42 = (uint64_t)&v11 - v11;
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4710);
  v12 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v41 = (char *)&v11 - v12;
  v13 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v12);
  v40 = (char *)&v11 - v13;
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v44);
  v38 = (char *)&v11 - v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v3) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v44);
  v28 = (uint64_t)&v11 - v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v44);
  v27 = (char *)&v11 - v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v44);
  v25 = (char *)&v11 - v17;
  v31 = type metadata accessor for LocalizedStringResource(v6);
  v29 = *(_QWORD *)(v31 - 8);
  v18 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v31);
  v37 = (char *)&v11 - v18;
  sub_10003A0C8((uint64_t *)&unk_1005A50E0);
  v32 = 1;
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Draft", 5uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v7._countAndFlagsBits, v7._object);
  v20 = "AppIntents";
  v21 = 10;
  v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v32 & 1);
  sub_1001E790C();
  sub_1001E7920(v28);
  v52 = v22;
  v23 = 29;
  v53 = 29;
  v24 = 2;
  v54 = 2;
  v30 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v25, v19._countAndFlagsBits, v19._object, v27, v28, v22, 29, 2);
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DELETE_DRAFT_ENTITY_DESCRIPTION", 0x1FuLL, v32 & 1);
  String.LocalizationValue.init(stringLiteral:)(v8._countAndFlagsBits, v8._object);
  v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v20, v21, v32 & 1);
  sub_1001E790C();
  sub_1001E7920(v28);
  v50[1] = v22;
  v50[2] = v23;
  LOBYTE(v51) = v24;
  HIBYTE(v51) = v30 & 1 & v32;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v25, v26._countAndFlagsBits, v26._object, v27, v28, v22, v23, v51);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v29 + 56))(v38, v30, v32, v31);
  v39 = v50;
  v50[0] = 0;
  v33 = type metadata accessor for IntentDialog(v44);
  v34 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v33 - 8) + 56);
  v34(v40, v32);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v34)(v41, v32, v32, v33);
  v36 = sub_10003A0C8(&qword_1005A4B00);
  v35 = sub_10022BD18();
  v43 = sub_1002105CC();
  sub_1002F0FA0(v42);
  v48 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v37, v38, v39, v40, v41, v42, v43);
  swift_retain(v48);
  v55 = v48;
  sub_10003A0C8(&qword_1005A5100);
  v45 = v49;
  memset(v49, 0, sizeof(v49));
  sub_100202C84();
  v9 = sub_100304804();
  v47 = AppDependency.__allocating_init(key:manager:)(v45, v9);
  swift_retain(v47);
  v56 = v47;
  swift_retain(v48);
  swift_retain(v47);
  swift_release(v47);
  swift_release(v48);
  sub_1002014F8(v46);
  return v48;
}

uint64_t sub_10022B4B0()
{
  uint64_t *v0;

  return sub_1002294C8(*v0, v0[1]);
}

uint64_t sub_10022B4CC()
{
  uint64_t *v0;

  return sub_100229468(*v0, v0[1]);
}

uint64_t sub_10022B4E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100228EB4(a1);
}

uint64_t sub_10022B4FC()
{
  return sub_100229414() & 1;
}

uint64_t sub_10022B514@<X0>(uint64_t a1@<X8>)
{
  return sub_100229058(a1);
}

uint64_t sub_10022B528@<X0>(uint64_t a1@<X8>)
{
  return sub_100228C20(a1);
}

uint64_t sub_10022B53C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *v1;
  v6 = v1[1];
  v3 = (_QWORD *)swift_task_alloc(dword_1005A5044);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EA914;
  return sub_100229528(a1, v5, v6);
}

uint64_t sub_10022B5C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  result = sub_10022AE8C();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_10022B5F4(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_1002292D8();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

uint64_t sub_10022B620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.IntentSchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9C70;
  sub_10003A134(v8, qword_1005B9C70);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1002022A0();
  sub_10022B724();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_10022B724()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DeleteDraftIntent", 0x11uLL, 1);
  return AssistantSchema.IntentSchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_10022B7F8()
{
  uint64_t v0;

  if (qword_1005A3680 != -1)
    swift_once(&qword_1005A3680, sub_10022B620);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9C70);
}

unint64_t sub_10022B858()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5070;
  if (!qword_1005A5070)
  {
    v0 = objc_opt_self(MFDeleteTriageInteraction);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5070);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_10022B8BC()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5078;
  if (!qword_1005A5078)
  {
    v0 = type metadata accessor for MailComposeType(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CAE30, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5078);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10022B92C(uint64_t a1)
{
  unint64_t result;

  result = sub_10022B954();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10022B954()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5088;
  if (!qword_1005A5088)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC51C, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5088);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022B9C0()
{
  return sub_10022B9D4();
}

unint64_t sub_10022B9D4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5090;
  if (!qword_1005A5090)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC538, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5090);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022BA40()
{
  return sub_1002105CC();
}

unint64_t sub_10022BA54(uint64_t a1)
{
  unint64_t result;

  result = sub_1002292D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10022BA7C()
{
  return sub_1002292D8();
}

unint64_t sub_10022BA90()
{
  return sub_10022BAA4();
}

unint64_t sub_10022BAA4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A50A0;
  if (!qword_1005A50A0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC600, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A50A0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022BB10()
{
  return sub_10022BB24();
}

unint64_t sub_10022BB24()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A50A8;
  if (!qword_1005A50A8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC628, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A50A8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022BB90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F7208, 1);
}

uint64_t sub_10022BBB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F71D4, 1);
}

unint64_t sub_10022BBD8()
{
  return sub_10022BBEC();
}

unint64_t sub_10022BBEC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A50B0;
  if (!qword_1005A50B0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC674, &unk_100526B50);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A50B0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022BC58()
{
  return sub_1002292D8();
}

void *type metadata accessor for DeleteDraftIntent()
{
  return &unk_100526B50;
}

unint64_t sub_10022BC80()
{
  return sub_10022BC94();
}

unint64_t sub_10022BC94()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A50B8;
  if (!qword_1005A50B8)
  {
    v0 = sub_1001E7634((uint64_t *)&unk_1005A50C0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A50B8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10022BD04()
{
  return sub_1002054C4();
}

unint64_t sub_10022BD18()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A50F0;
  if (!qword_1005A50F0)
  {
    v2 = sub_1001E7634(&qword_1005A4B00);
    sub_10020B2A8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A50F0);
    return WitnessTable;
  }
  return v3;
}

void *sub_10022BD94()
{
  return &unk_1005B9C88;
}

uint64_t sub_10022BDA0()
{
  char *v1;
  char v2;
  _BYTE v3[24];

  v1 = (char *)sub_10022BD94();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_endAccess(v3);
  return v2 & 1;
}

uint64_t sub_10022BDF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  Swift::String v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  v27 = a1;
  v15 = "Delete one or more email messages";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v22 = (char *)&v9 - v10;
  v24 = 0;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v24);
  v19 = (uint64_t)&v9 - v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v24);
  v18 = (char *)&v9 - v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v24);
  v16 = (char *)&v9 - v13;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v20 = *(_QWORD *)(v21 - 8);
  v14 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v9 - v14;
  v25 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DELETE_MESSAGE_DESCRIPTION", 0x1AuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v25 & 1);
  sub_1001E790C();
  sub_1001E7920(v19);
  v28 = v15;
  v29 = 33;
  v30 = 2;
  v26 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17._countAndFlagsBits, v17._object, v18, v19, v15, 33, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v22, v25, v25, v21);
  v6 = sub_1002004D0();
  IntentDescription.init(_:categoryName:searchKeywords:)(v23, v22, v6);
  v7 = type metadata accessor for IntentDescription(v24);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v27, v26, v25);
}

uint64_t sub_10022C088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v13 = a1;
  v12 = "Delete one or more email messages";
  v8 = 0;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(0);
  v17 = (uint64_t)&v6 - v7;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v16 = (char *)&v6 - v9;
  v3 = type metadata accessor for String.LocalizationValue(v2);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v14 = (char *)&v6 - v10;
  v11 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete Message", 0xEuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v11 & 1);
  sub_1001E790C();
  sub_1001E7920(v17);
  v18 = v12;
  v19 = 33;
  v20 = 2;
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, v15._countAndFlagsBits, v15._object, v16, v17, v12, 33, 2);
}

uint64_t sub_10022C22C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Builtin::Word v13;
  void *object;
  uint64_t KeyPath;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  char *v26;
  uint64_t countAndFlagsBits;

  v23 = a1;
  v1 = sub_10003A0C8(&qword_1005A5108);
  v9 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v26 = (char *)&v9 - v9;
  v19 = sub_10003A0C8(&qword_1005A5110);
  v18 = *(_QWORD *)(v19 - 8);
  v10 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  v21 = (char *)&v9 - v10;
  v11 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v10);
  v17 = (char *)&v9 - v11;
  v12 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v11);
  v20 = (char *)&v9 - v12;
  v25 = sub_10022C4AC();
  v13 = 7;
  v24 = &unk_100526D40;
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1);
  v22 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete ", v13, 1);
  object = v4._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(object);
  KeyPath = swift_getKeyPath(&unk_1004CC740);
  v5 = sub_10003A0C8(&qword_1005A5120);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v19, v5);
  swift_release(KeyPath);
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v22 & 1);
  v16 = v6._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v17, v20, v19);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, v19);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v19);
  ParameterSummaryString.init(stringInterpolation:)(v21, v24, v25);
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v22 & 1);
  countAndFlagsBits = v7._countAndFlagsBits;
  return IntentParameterSummary.init(_:table:)(v26, v7._countAndFlagsBits, v7._object, v24, v25);
}

unint64_t sub_10022C4AC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5118;
  if (!qword_1005A5118)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC7CC, &unk_100526D40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5118);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022C518@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002009D4(a1, a2);
}

uint64_t sub_10022C52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v3[63] = a3;
  v3[62] = a2;
  v3[61] = a1;
  v3[55] = v3;
  v3[45] = 0;
  v3[46] = 0;
  v3[56] = 0;
  v3[57] = 0;
  memset(v3 + 10, 0, 0x50uLL);
  v3[45] = a2;
  v3[46] = a3;
  v8 = type metadata accessor for MainActor(0);
  v3[64] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v3[65] = v9;
  v3[66] = v4;
  return swift_task_switch(sub_10022C5FC, v9);
}

uint64_t sub_10022C5FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;

  v1 = v0[63];
  v2 = v0[62];
  v0[55] = v0;
  v10 = (void *)sub_100200A3C(v2, v1);
  sub_1002B5A94();
  v0[67] = 0;
  v5 = v9[63];
  v6 = v9[62];

  v9[47] = v6;
  v9[48] = v5;
  v8 = sub_100200A9C(v6, v5);
  v9[68] = v8;
  v7 = sub_100200A3C(v6, v5);
  v9[69] = v7;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A96A4);
  v9[70] = v3;
  v9[71] = sub_10022CDE0();
  *v3 = v9[55];
  v3[1] = sub_10022C778;
  return sub_1003708C4(v8, v7);
}

uint64_t sub_10022C778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v7 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 560);
  v5 = *(void **)(*(_QWORD *)v1 + 552);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  v7[55] = *(_QWORD *)v1;
  v7[72] = a1;
  swift_task_dealloc(v3);

  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_10022C80C, v7[65]);
}

uint64_t sub_10022C80C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v15 = v0[72];
  v1 = v0[67];
  v2 = v0[63];
  v3 = v0[62];
  v0[55] = v0;
  v0[56] = v15;
  v16 = (void *)sub_100200A3C(v3, v2);
  sub_1002B5F34(v15);
  v0[73] = v1;
  if (v1)
  {
    v5 = *(_QWORD *)(v14 + 576);

    swift_bridgeObjectRelease(v5);
    swift_release(*(_QWORD *)(v14 + 512));
    return (*(uint64_t (**)(void))(*(_QWORD *)(v14 + 440) + 8))();
  }
  else
  {
    v12 = *(_QWORD *)(v14 + 576);
    v8 = *(_QWORD *)(v14 + 504);
    v7 = *(_QWORD *)(v14 + 496);

    sub_10022B858();
    swift_bridgeObjectRetain(v12);
    v6 = (id)sub_100200A3C(v7, v8);
    v9 = objc_msgSend(v6, "undoManager");

    swift_retain(v7);
    swift_retain(v8);
    *(_QWORD *)(v14 + 392) = v7;
    *(_QWORD *)(v14 + 400) = v8;
    v10 = sub_10020C448();
    sub_1002014F8((_QWORD *)(v14 + 392));
    swift_retain(v7);
    swift_retain(v8);
    *(_QWORD *)(v14 + 408) = v7;
    *(_QWORD *)(v14 + 416) = v8;
    v11 = sub_10020C47C();
    sub_1002014F8((_QWORD *)(v14 + 408));
    v13 = sub_10020152C(v12, v9, v10, v11);
    *(_QWORD *)(v14 + 592) = v13;
    *(_QWORD *)(v14 + 456) = v13;
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v14 + 440);
    *(_QWORD *)(v14 + 56) = v14 + 424;
    *(_QWORD *)(v14 + 24) = sub_10022CAD8;
    *(_QWORD *)(v14 + 352) = swift_continuation_init();
    *(_QWORD *)(v14 + 320) = _NSConcreteStackBlock;
    *(_DWORD *)(v14 + 328) = 0x40000000;
    *(_DWORD *)(v14 + 332) = 0;
    *(_QWORD *)(v14 + 336) = sub_1002015C8;
    *(_QWORD *)(v14 + 344) = &unk_100526C88;
    objc_msgSend(v13, "performInteractionWithCompletion:", v14 + 320);
    return j__swift_continuation_await(v14 + 16);
  }
}

uint64_t sub_10022CAD8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 440) = *v0;
  return swift_task_switch(sub_10022CB34, *(_QWORD *)(v1 + 520));
}

uint64_t sub_10022CB34()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v0 + 440) = v0;

  v15 = sub_1002BF904(3);
  swift_bridgeObjectRetain(v15);
  *(_QWORD *)(v0 + 464) = v15;
  v16 = sub_10003A0C8(&qword_1005A46A0);
  v1 = sub_10020164C();
  Collection.first.getter(v16, v1);
  sub_1001ED890((_QWORD *)(v0 + 464));
  if (*(_QWORD *)(v0 + 168))
  {
    v2 = v14[73];
    v11 = v14[63];
    v10 = v14[62];
    memcpy(v14 + 10, v14 + 20, 0x50uLL);
    swift_bridgeObjectRelease(v15);
    v14[60] = sub_100200A9C(v10, v11);
    sub_100201884(v14 + 10, v14 + 30);
    v12 = swift_task_alloc(32);
    *(_QWORD *)(v12 + 16) = v14 + 30;
    v13 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
    v3 = sub_100201968();
    result = Sequence.forEach(_:)(sub_100201944, v12, v13, v3);
    if (v2)
      return result;
    swift_task_dealloc(v12);
    sub_1002019D8(v14 + 30);
    sub_1001ED890(v14 + 60);
    sub_1002019D8(v14 + 10);
  }
  else
  {
    sub_1002016BC(v14 + 20);
    swift_bridgeObjectRelease(v15);
  }
  v7 = (id)v14[74];
  v8 = v14[72];
  v9 = v14[64];
  v14[59] = sub_100200A9C(v14[62], v14[63]);
  v6 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v5 = sub_100201730();
  static IntentResult.result<A>(value:)(v14 + 59, v6, v5);
  sub_1001ED890(v14 + 59);

  swift_bridgeObjectRelease(v8);
  swift_release(v9);
  return (*(uint64_t (**)(void))(v14[55] + 8))();
}

unint64_t sub_10022CDE0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5130;
  if (!qword_1005A5130)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC770, &unk_100526D40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5130);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022CE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  Swift::String v20;
  char *v21;
  Builtin::Word v22;
  const char *v23;
  uint64_t v24;
  int v25;
  char *v26;
  Swift::String v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD);
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  unsigned __int16 v50;
  const char *v51;
  uint64_t v52;
  __int16 v53;
  _QWORD v54[5];
  uint64_t v55;
  uint64_t v56;

  v23 = "Email messages to delete";
  v46 = &v55;
  v55 = 0;
  v56 = 0;
  v33 = 0;
  v0 = type metadata accessor for InputConnectionBehavior(0);
  v11 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v44 = (uint64_t)&v11 - v11;
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4710);
  v12 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v43 = (char *)&v11 - v12;
  v13 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v12);
  v42 = (char *)&v11 - v13;
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v33);
  v40 = (char *)&v11 - v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v3) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v33);
  v29 = (uint64_t)&v11 - v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v33);
  v28 = (char *)&v11 - v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v33);
  v26 = (char *)&v11 - v17;
  v32 = type metadata accessor for LocalizedStringResource(v6);
  v30 = *(_QWORD *)(v32 - 8);
  v18 = (*(_QWORD *)(v30 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v32);
  v39 = (char *)&v11 - v18;
  sub_10003A0C8(&qword_1005A5100);
  v19 = v54;
  memset(v54, 0, sizeof(v54));
  sub_100202C84();
  v7 = sub_100304804();
  v48 = AppDependency.__allocating_init(key:manager:)(v19, v7);
  swift_retain(v48);
  v55 = v48;
  sub_10003A0C8(&qword_1005A7E80);
  v34 = 1;
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Messages", 8uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v8._countAndFlagsBits, v8._object);
  v21 = "AppIntents";
  v22 = 10;
  v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v34 & 1);
  sub_1001E790C();
  sub_1001E7920(v29);
  v51 = v23;
  v24 = 24;
  v52 = 24;
  v25 = 2;
  v53 = 2;
  v31 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, v20._countAndFlagsBits, v20._object, v28, v29, v23, 24, 2);
  v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DELETE_MESSAGE_ENTITY_DESCRIPTION", 0x21uLL, v34 & 1);
  String.LocalizationValue.init(stringLiteral:)(v9._countAndFlagsBits, v9._object);
  v27 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v21, v22, v34 & 1);
  sub_1001E790C();
  sub_1001E7920(v29);
  v49[1] = v23;
  v49[2] = v24;
  LOBYTE(v50) = v25;
  HIBYTE(v50) = v31 & 1 & v34;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v26, v27._countAndFlagsBits, v27._object, v28, v29, v23, v24, v50);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v30 + 56))(v40, v31, v34, v32);
  v41 = v49;
  v49[0] = 0;
  v35 = type metadata accessor for IntentDialog(v33);
  v36 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v35 - 8) + 56);
  v36(v42, v34);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v36)(v43, v34, v34, v35);
  v38 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v37 = sub_100201730();
  v45 = sub_100202CE8();
  sub_1002F0FA0(v44);
  v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v39, v40, v41, v42, v43, v44, v45);
  swift_retain(v47);
  v56 = v47;
  swift_retain(v48);
  swift_retain(v47);
  swift_release(v47);
  swift_release(v48);
  sub_1002014F8(v46);
  return v48;
}

uint64_t sub_10022D454()
{
  uint64_t *v0;

  return sub_100200A9C(*v0, v0[1]);
}

uint64_t sub_10022D470@<X0>(uint64_t a1@<X8>)
{
  return sub_10022C088(a1);
}

uint64_t sub_10022D484()
{
  return sub_10022BDA0() & 1;
}

uint64_t sub_10022D49C@<X0>(uint64_t a1@<X8>)
{
  return sub_10022C22C(a1);
}

uint64_t sub_10022D4B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10022BDF4(a1);
}

uint64_t sub_10022D4C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *v1;
  v6 = v1[1];
  v3 = (_QWORD *)swift_task_alloc(dword_1005A512C);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EA914;
  return sub_10022C52C(a1, v5, v6);
}

uint64_t sub_10022D550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  result = sub_10022CE4C();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_10022D57C(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10022C4AC();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

uint64_t sub_10022D5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.IntentSchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9C90;
  sub_10003A134(v8, qword_1005B9C90);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1002022A0();
  sub_10022D6AC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_10022D6AC()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DeleteMailIntent", 0x10uLL, 1);
  return AssistantSchema.IntentSchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_10022D780()
{
  uint64_t v0;

  if (qword_1005A3688 != -1)
    swift_once(&qword_1005A3688, sub_10022D5A8);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9C90);
}

unint64_t sub_10022D7E0(uint64_t a1)
{
  unint64_t result;

  result = sub_10022C4AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10022D808()
{
  return sub_10022D81C();
}

unint64_t sub_10022D81C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5140;
  if (!qword_1005A5140)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC85C, &unk_100526D40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5140);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022D888()
{
  return sub_100202CE8();
}

unint64_t sub_10022D89C()
{
  return sub_10022D8B0();
}

unint64_t sub_10022D8B0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5148;
  if (!qword_1005A5148)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC884, &unk_100526D40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5148);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022D91C()
{
  return sub_10022D930();
}

unint64_t sub_10022D930()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5150;
  if (!qword_1005A5150)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC8AC, &unk_100526D40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5150);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022D99C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1004F728C, 1) + 8);
}

uint64_t sub_10022D9C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F7258, 1);
}

unint64_t sub_10022D9E8()
{
  return sub_10022C4AC();
}

unint64_t sub_10022D9FC()
{
  return sub_10022DA10();
}

unint64_t sub_10022DA10()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5158;
  if (!qword_1005A5158)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CC8F8, &unk_100526D40);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5158);
    return WitnessTable;
  }
  return v2;
}

void *type metadata accessor for DeleteMessageIntent()
{
  return &unk_100526D40;
}

unint64_t sub_10022DA90()
{
  return sub_10022DAA4();
}

unint64_t sub_10022DAA4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5160;
  if (!qword_1005A5160)
  {
    v0 = sub_1001E7634(&qword_1005A5168);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5160);
    return WitnessTable;
  }
  return v3;
}

void *sub_10022DB14()
{
  return &unk_1004CC9C0;
}

void *sub_10022DB20()
{
  return &unk_1004CC9C1;
}

uint64_t sub_10022DB2C@<X0>(uint64_t a1@<X8>)
{
  Swift::String v1;
  uint64_t v2;

  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete the read later reminder on one or more email messages", 0x3CuLL, 1);
  IntentDescription.init(stringLiteral:)(v1._countAndFlagsBits, v1._object);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1);
}

uint64_t sub_10022DB94()
{
  Swift::String v0;

  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Delete Read Later", 0x11uLL, 1);
  return LocalizedStringResource.init(stringLiteral:)(v0._countAndFlagsBits, v0._object);
}

uint64_t sub_10022DBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v3[30] = a3;
  v3[29] = a2;
  v3[28] = a1;
  v3[25] = v3;
  v3[15] = 0;
  v3[16] = 0;
  v3[26] = 0;
  v3[27] = 0;
  v3[15] = a2;
  v3[16] = a3;
  v6 = type metadata accessor for MainActor(0);
  v3[31] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[32] = v7;
  v3[33] = v4;
  return swift_task_switch(sub_10022DC80, v7);
}

uint64_t sub_10022DC80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;

  v1 = v0[30];
  v2 = v0[29];
  v0[25] = v0;
  v10 = (void *)sub_100200A3C(v2, v1);
  sub_1002B5A94();
  v0[34] = 0;
  v5 = v9[30];
  v6 = v9[29];

  v9[17] = v6;
  v9[18] = v5;
  v8 = sub_100200A9C(v6, v5);
  v9[35] = v8;
  v7 = sub_100200A3C(v6, v5);
  v9[36] = v7;
  v3 = (_QWORD *)swift_task_alloc(dword_1005A96A4);
  v9[37] = v3;
  v9[38] = sub_10022E254();
  *v3 = v9[25];
  v3[1] = sub_10022DDFC;
  return sub_1003708C4(v8, v7);
}

uint64_t sub_10022DDFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;

  v7 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  v5 = *(void **)(*(_QWORD *)v1 + 288);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v7[25] = *(_QWORD *)v1;
  v7[39] = a1;
  swift_task_dealloc(v3);

  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_10022DE90, v7[32]);
}

uint64_t sub_10022DE90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v16 = v0[39];
  v1 = v0[34];
  v2 = v0[30];
  v3 = v0[29];
  v0[25] = v0;
  v0[26] = v16;
  v17 = (void *)sub_100200A3C(v3, v2);
  sub_1002B5F34(v16);
  if (v1)
  {
    v6 = *(_QWORD *)(v15 + 312);

    swift_bridgeObjectRelease(v6);
    swift_release(*(_QWORD *)(v15 + 248));
    return (*(uint64_t (**)(void))(*(_QWORD *)(v15 + 200) + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v15 + 312);
    v9 = *(_QWORD *)(v15 + 240);
    v8 = *(_QWORD *)(v15 + 232);

    sub_10022E2C0();
    swift_bridgeObjectRetain(v13);
    v7 = (id)sub_100200A3C(v8, v9);
    v10 = objc_msgSend(v7, "undoManager");

    swift_retain(v8);
    swift_retain(v9);
    *(_QWORD *)(v15 + 152) = v8;
    *(_QWORD *)(v15 + 160) = v9;
    v11 = sub_10020C448();
    sub_1002014F8((_QWORD *)(v15 + 152));
    swift_retain(v8);
    swift_retain(v9);
    *(_QWORD *)(v15 + 168) = v8;
    *(_QWORD *)(v15 + 176) = v9;
    v12 = sub_10020C47C();
    sub_1002014F8((_QWORD *)(v15 + 168));
    type metadata accessor for MFReadLaterTriageInteractionState(0);
    v4 = sub_1002F7644();
    v14 = sub_10022E324(v13, v10, v11, v12, v4);
    *(_QWORD *)(v15 + 320) = v14;
    *(_QWORD *)(v15 + 216) = v14;
    *(_QWORD *)(v15 + 16) = *(_QWORD *)(v15 + 200);
    *(_QWORD *)(v15 + 56) = v15 + 184;
    *(_QWORD *)(v15 + 24) = sub_10022E168;
    *(_QWORD *)(v15 + 112) = swift_continuation_init();
    *(_QWORD *)(v15 + 80) = _NSConcreteStackBlock;
    *(_DWORD *)(v15 + 88) = 0x40000000;
    *(_DWORD *)(v15 + 92) = 0;
    *(_QWORD *)(v15 + 96) = sub_1002015C8;
    *(_QWORD *)(v15 + 104) = &unk_100526E60;
    objc_msgSend(v14, "performInteractionWithCompletion:", v15 + 80);
    return j__swift_continuation_await(v15 + 16);
  }
}

uint64_t sub_10022E168()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 200) = *v0;
  return swift_task_switch(sub_10022E1C4, *(_QWORD *)(v1 + 256));
}

uint64_t sub_10022E1C4()
{
  uint64_t v0;
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(id *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 200) = v0;

  static IntentResult.result<>()();
  swift_bridgeObjectRelease(v3);
  swift_release(v4);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 200) + 8))();
}

unint64_t sub_10022E254()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5178;
  if (!qword_1005A5178)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCAFC, &unk_100526EE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5178);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022E2C0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5180;
  if (!qword_1005A5180)
  {
    v0 = objc_opt_self(MFReadLaterTriageInteraction);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5180);
    return ObjCClassMetadata;
  }
  return v3;
}

id sub_10022E324(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  Class isa;
  id v12;

  sub_10003A0C8(qword_1005A47A0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "interactionWithMessageListItems:undoManager:origin:actor:state:", isa, a2, a3, a4, a5);

  swift_bridgeObjectRelease(a1);
  return v12;
}

uint64_t sub_10022E3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  const char *v21;
  char *v22;
  Swift::String v23;
  char *v24;
  uint64_t v25;
  char *v26;
  Builtin::Word v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD);
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  __int16 v48;
  _QWORD v49[5];
  uint64_t v50;
  uint64_t v51;

  v26 = "Email messages to remove read later reminder";
  v21 = "Email messages to remove read later reminder";
  v44 = &v50;
  v50 = 0;
  v51 = 0;
  v31 = 0;
  v0 = type metadata accessor for InputConnectionBehavior(0);
  v12 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v42 = (uint64_t)&v11 - v12;
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4710);
  v13 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v41 = (char *)&v11 - v13;
  v14 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v13);
  v40 = (char *)&v11 - v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v31);
  v38 = (char *)&v11 - v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v3) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v31);
  v25 = (uint64_t)&v11 - v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v31);
  v24 = (char *)&v11 - v17;
  v18 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v31);
  v22 = (char *)&v11 - v18;
  v30 = type metadata accessor for LocalizedStringResource(v6);
  v28 = *(_QWORD *)(v30 - 8);
  v19 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v30);
  v37 = (char *)&v11 - v19;
  sub_10003A0C8(&qword_1005A5100);
  v20 = v49;
  memset(v49, 0, sizeof(v49));
  sub_100202C84();
  v7 = sub_100304804();
  v46 = AppDependency.__allocating_init(key:manager:)(v20, v7);
  swift_retain(v46);
  v50 = v46;
  sub_10003A0C8(&qword_1005A7E80);
  v32 = 1;
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Messages", 8uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v8._countAndFlagsBits, v8._object);
  v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v32 & 1);
  sub_1001E790C();
  sub_1001E7920(v25);
  v47[1] = v21;
  v27 = 44;
  v47[2] = 44;
  v48 = 2;
  v29 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, v23._countAndFlagsBits, v23._object, v24, v25, v21, 44, 2);
  v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v26, v27, v32 & 1);
  LocalizedStringResource.init(stringLiteral:)(v9._countAndFlagsBits, v9._object);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v28 + 56))(v38, v29, v32, v30);
  v39 = v47;
  v47[0] = 0;
  v33 = type metadata accessor for IntentDialog(v31);
  v34 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v33 - 8) + 56);
  v34(v40, v32);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v34)(v41, v32, v32, v33);
  v36 = sub_10003A0C8((uint64_t *)&unk_1005A46B0);
  v35 = sub_100201730();
  v43 = sub_100202CE8();
  sub_1002F0FA0(v42);
  v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v37, v38, v39, v40, v41, v42, v43);
  swift_retain(v45);
  v51 = v45;
  swift_retain(v46);
  swift_retain(v45);
  swift_release(v45);
  swift_release(v46);
  sub_1002014F8(v44);
  return v46;
}

uint64_t sub_10022E8F0()
{
  return sub_10022DB94();
}

uint64_t sub_10022E904@<X0>(uint64_t a1@<X8>)
{
  return sub_10022DB2C(a1);
}

uint64_t sub_10022E918(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *v1;
  v6 = v1[1];
  v3 = (_QWORD *)swift_task_alloc(dword_1005A5174);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EA914;
  return sub_10022DBD4(a1, v5, v6);
}

uint64_t sub_10022E9A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  result = sub_10022E3D0();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_10022E9D0(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10022E9FC();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

unint64_t sub_10022E9FC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5190;
  if (!qword_1005A5190)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCA6C, &unk_100526EE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5190);
    return WitnessTable;
  }
  return v2;
}

void *type metadata accessor for DeleteReadLaterIntent()
{
  return &unk_100526EE0;
}

unint64_t sub_10022EA7C()
{
  return sub_10022EA90();
}

unint64_t sub_10022EA90()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5198;
  if (!qword_1005A5198)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCA44, &unk_100526EE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5198);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022EAFC()
{
  return sub_10022EB10();
}

unint64_t sub_10022EB10()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51A0;
  if (!qword_1005A51A0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCA28, &unk_100526EE0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51A0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022EB7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F72E8, 1);
}

uint64_t sub_10022EBA0(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10022E9FC();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_10022EBE8(uint64_t a1)
{
  unint64_t result;

  result = sub_10022E9FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10022EC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  const char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  const char *v26;
  uint64_t v27;
  __int16 v28;

  v15 = "Will appear in Shortcuts or Siri as a reference to the mailbox list or message list. eg: The list named mailbox list";
  v0 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v8 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v25 = (char *)&v7 - v8;
  v17 = 0;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(v17);
  v19 = (uint64_t)&v7 - v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v17);
  v18 = (char *)&v7 - v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v17);
  v16 = (char *)&v7 - v11;
  v22 = type metadata accessor for LocalizedStringResource(v3);
  v20 = *(_QWORD *)(v22 - 8);
  v12 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v17);
  v24 = (char *)&v7 - v12;
  v14 = type metadata accessor for TypeDisplayRepresentation(v4);
  v13 = qword_1005B9CA8;
  sub_10003A134(v14, qword_1005B9CA8);
  v23 = sub_10003A088(v14, (uint64_t)v13);
  v21 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("List", 4uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  sub_1001E790C();
  sub_1001E7920(v19);
  v26 = v15;
  v27 = 116;
  v28 = 2;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17, v17, v18, v19, v15, 116, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v25, v21, v21, v22);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v24, v25);
}

uint64_t sub_10022EE7C()
{
  uint64_t v0;

  if (qword_1005A3690 != -1)
    swift_once(&qword_1005A3690, sub_10022EC10);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9CA8);
}

uint64_t sub_10022EEDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = sub_10022EE7C();
  swift_beginAccess(v3);
  v1 = type metadata accessor for TypeDisplayRepresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v3);
  return swift_endAccess(v5);
}

void sub_10022EF40(char a1)
{
  __asm { BR              X8 }
}

uint64_t sub_10022EF84(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = nullsub_9(a1);
  *(_QWORD *)(v2 + 24) = &unk_10052A180;
  *(_QWORD *)(v2 + 32) = &off_10052A1A0;
  return result;
}

uint64_t sub_10022EFF8(uint64_t a1, void *a2)
{
  Swift::OpaquePointer v2;
  uint64_t v3;
  Swift::String string;
  void *rawValue;
  Swift::Int v8;
  unsigned __int8 v9;

  string._countAndFlagsBits = a1;
  string._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(4, &type metadata for StaticString);
  *(_QWORD *)v3 = "mailboxes";
  *(_QWORD *)(v3 + 8) = 9;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = "mailbox list";
  *(_QWORD *)(v3 + 32) = 12;
  *(_BYTE *)(v3 + 40) = 2;
  *(_QWORD *)(v3 + 48) = "messages";
  *(_QWORD *)(v3 + 56) = 8;
  *(_BYTE *)(v3 + 64) = 2;
  *(_QWORD *)(v3 + 72) = "message list";
  *(_QWORD *)(v3 + 80) = 12;
  *(_BYTE *)(v3 + 88) = 2;
  sub_10003CB20();
  rawValue = v2._rawValue;
  v8 = _findStringSwitchCase(cases:string:)(v2, string);
  swift_bridgeObjectRelease(rawValue);
  switch(v8)
  {
    case 0:
      v9 = 0;
LABEL_10:
      swift_bridgeObjectRelease(string._object);
      return v9;
    case 1:
      v9 = 1;
      goto LABEL_10;
    case 2:
      v9 = 2;
      goto LABEL_10;
    case 3:
      v9 = 3;
      goto LABEL_10;
  }
  swift_bridgeObjectRelease(string._object);
  return 4;
}

uint64_t sub_10022F1B0()
{
  uint64_t result;
  _BYTE *v1;

  result = _allocateUninitializedArray<A>(_:)(4, &unk_100527050);
  *v1 = 0;
  v1[1] = 1;
  v1[2] = 2;
  v1[3] = 3;
  sub_10003CB20();
  return result;
}

void sub_10022F20C(char a1)
{
  __asm { BR              X8 }
}

uint64_t sub_10022F24C()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("mailboxes", 9uLL, 1)._countAndFlagsBits;
}

uint64_t sub_10022F310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10022F358();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_10022F358()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51A8;
  if (!qword_1005A51A8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCB88, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51A8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022F3C4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_10022F358();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_10022F400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10022F358();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_10022F444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_10022F358();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_10022F488@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_10022EFF8(*(_QWORD *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10022F4BC(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;

  sub_10022F20C(*v1);
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10022F4EC@<X0>(uint64_t a1@<X8>)
{
  return sub_10022EEDC(a1);
}

uint64_t sub_10022F500(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10022F534();
  return static AppEnum.defaultResolverSpecification.getter(a1, v1);
}

unint64_t sub_10022F534()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51B0;
  if (!qword_1005A51B0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCBC0, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51B0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10022F5A0()
{
  return sub_10022F5B4();
}

uint64_t sub_10022F5B4()
{
  uint64_t *v1;
  uint64_t v2;
  char v3[24];

  v1 = sub_10022F848();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_bridgeObjectRetain(*v1);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_10022F608(uint64_t a1)
{
  unint64_t v1;
  unint64_t v3;

  v3 = sub_10022F89C();
  v1 = sub_10022F908();
  return CaseDisplayRepresentable<>.localizedStringResource.getter(a1, v3, v1);
}

uint64_t sub_10022F648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10022F1B0();
  *a1 = result;
  return result;
}

uint64_t sub_10022F670()
{
  _BYTE *v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = sub_10003A0C8(&qword_1005A51C8);
  v9 = _allocateUninitializedArray<A>(_:)(4, v10);
  v8 = v0;
  *v0 = 0;
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Mailboxes", 9uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v1._countAndFlagsBits, v1._object);
  v7 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72);
  v8[v7] = 1;
  v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Mailbox List", 0xCuLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v2._countAndFlagsBits, v2._object);
  v8[2 * v7] = 2;
  v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Messages", 8uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v3._countAndFlagsBits, v3._object);
  v8[3 * v7] = 3;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Message List", 0xCuLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  sub_10003CB20();
  v11 = type metadata accessor for DisplayRepresentation(0);
  v5 = sub_10022F974();
  result = Dictionary.init(dictionaryLiteral:)(v9, &unk_100527050, v11, v5);
  qword_1005B9CC0 = result;
  return result;
}

uint64_t *sub_10022F848()
{
  if (qword_1005A3698 != -1)
    swift_once(&qword_1005A3698, sub_10022F670);
  return &qword_1005B9CC0;
}

unint64_t sub_10022F89C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51B8;
  if (!qword_1005A51B8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCD10, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51B8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022F908()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51C0;
  if (!qword_1005A51C0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCDE0, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51C0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10022F974()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51D0;
  if (!qword_1005A51D0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCB48, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51D0);
    return WitnessTable;
  }
  return v2;
}

void sub_10022F9E0(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  _QWORD v7[38];
  unint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned __int8 v20;
  char *v21;

  v7[37] = a2;
  v12 = a1;
  v21 = 0;
  v20 = 0;
  v2 = sub_10003A0C8((uint64_t *)&unk_1005A7460);
  v8 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v9 = (char *)v7 - v8;
  v3 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v11 = (char *)v7 - v10;
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v12);
  v16 = (char *)v7 - v15;
  v17 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v4);
  v18 = (char *)v7 - v17;
  v21 = (char *)v7 - v17;
  v20 = v6;
  v19 = v6;
  __asm { BR              X8 }
}

uint64_t sub_10022FB3C()
{
  uint64_t v0;
  Swift::String v1;
  int v2;
  Swift::String v3;
  uint64_t v4;
  NSBundle v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  Swift::String v17;

  *(_DWORD *)(v0 - 204) = 1;
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Mailboxes", 9uLL, 1);
  v2 = *(_DWORD *)(v0 - 204);
  *(_QWORD *)(v0 - 192) = v1._countAndFlagsBits;
  *(_QWORD *)(v0 - 160) = v1._object;
  v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("The view where you are looking at the list of mailboxes in Mail. Will appear in shortcuts or Siri", 0x61uLL, v2 & 1);
  *(_QWORD *)(v0 - 200) = v3._countAndFlagsBits;
  *(_QWORD *)(v0 - 168) = v3._object;
  *(_QWORD *)(v0 - 176) = sub_10003DBA4();
  v4 = sub_10003DB7C();
  v17._countAndFlagsBits = *(_QWORD *)(v0 - 200);
  v5.super.isa = *(Class *)(v0 - 176);
  v6 = *(void **)(v0 - 168);
  v7._countAndFlagsBits = v4;
  v8._countAndFlagsBits = *(_QWORD *)(v0 - 192);
  v7._object = v9;
  v8._object = *(void **)(v0 - 160);
  *(_QWORD *)(v0 - 184) = v7._object;
  v17._object = v6;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, v5, v7, v17);
  v11 = *(_QWORD *)(v0 - 184);
  *(Swift::String *)(v0 - 152) = v10;
  swift_bridgeObjectRelease(v11);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 - 168));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 - 160));
  LocalizedStringResource.init(stringLiteral:)(*(_QWORD *)(v0 - 152), *(_QWORD *)(v0 - 144));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 80) + 32))(*(_QWORD *)(v0 - 48), *(_QWORD *)(v0 - 64), *(_QWORD *)(v0 - 88));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 - 80) + 16))(*(_QWORD *)(v0 - 64), *(_QWORD *)(v0 - 48), *(_QWORD *)(v0 - 88));
  v12 = *(_QWORD *)(v0 - 88);
  v13 = *(_QWORD *)(v0 - 104);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 80) + 56);
  *(_DWORD *)(v0 - 424) = 1;
  v14(v13, 1, 1, v12);
  v15 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v15 - 8) + 56))(*(_QWORD *)(v0 - 120), *(unsigned int *)(v0 - 424));
  DisplayRepresentation.init(title:subtitle:image:)(*(_QWORD *)(v0 - 64), *(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 120));
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 80) + 8))(*(_QWORD *)(v0 - 48), *(_QWORD *)(v0 - 88));
}

void sub_100230058(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  sub_10022F9E0(*v1, a1);
}

unint64_t sub_100230070()
{
  return sub_100230084();
}

unint64_t sub_100230084()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51D8;
  if (!qword_1005A51D8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCB20, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51D8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1002300F0()
{
  return sub_100230104();
}

unint64_t sub_100230104()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51E0;
  if (!qword_1005A51E0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCC00, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51E0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100230170()
{
  return sub_100230184();
}

unint64_t sub_100230184()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51E8;
  if (!qword_1005A51E8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCC38, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51E8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1002301F0()
{
  return sub_10022F358();
}

void *sub_100230204()
{
  return &protocol witness table for String;
}

unint64_t sub_100230210()
{
  return sub_100230224();
}

unint64_t sub_100230224()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51F0;
  if (!qword_1005A51F0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCC68, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51F0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100230290()
{
  return sub_1002302A4();
}

unint64_t sub_1002302A4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A51F8;
  if (!qword_1005A51F8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCC90, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A51F8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100230310()
{
  return sub_100230324();
}

unint64_t sub_100230324()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5200;
  if (!qword_1005A5200)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCCB8, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5200);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100230390()
{
  return sub_10022F89C();
}

uint64_t sub_1002303A4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10022F534();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1002303EC()
{
  return sub_100230400();
}

unint64_t sub_100230400()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5208;
  if (!qword_1005A5208)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCD50, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5208);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023046C()
{
  return sub_100230480();
}

unint64_t sub_100230480()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5210;
  if (!qword_1005A5210)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCD78, &unk_100527050);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5210);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1002304EC()
{
  return sub_10022F974();
}

unint64_t sub_100230500()
{
  return sub_100230514();
}

unint64_t sub_100230514()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5218;
  if (!qword_1005A5218)
  {
    v0 = sub_1001E7634(&qword_1005A5220);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5218);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100230584()
{
  return sub_10022F908();
}

_BYTE *sub_100230598(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1002305A4(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  if (a2)
  {
    if (a2 <= 0xFC)
      goto LABEL_15;
    v7 = ((a2 + 3) >> 8) + 1;
    v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000)
        v2 = 4;
      else
        v2 = 2;
      v8 = v2;
    }
    if (v8 == 1)
      v6 = a1[1];
    else
      v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    if (v6)
    {
      v5 = (*a1 | ((v6 - 1) << 8)) + 252;
    }
    else
    {
LABEL_15:
      v3 = *a1 - 4;
      if (v3 < 0)
        v3 = -1;
      v5 = v3;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

_BYTE *sub_100230754(_BYTE *result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;

  v7 = 0;
  if (a3 > 0xFC)
  {
    v5 = ((a3 + 3) >> 8) + 1;
    v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000)
        v3 = 4;
      else
        v3 = 2;
      v6 = v3;
    }
    v7 = v6;
  }
  if (a2 > 0xFC)
  {
    v4 = ((a2 - 253) >> 8) + 1;
    *result = a2 + 3;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2)
      *result = a2 + 3;
  }
  return result;
}

uint64_t sub_100230998(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1002309A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void *type metadata accessor for DisplayableEntity()
{
  return &unk_100527050;
}

id sub_1002309BC()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void **v5;
  id v6;
  uint64_t v8;
  id *v9;
  id v10;
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v13 = 0;
  v9 = (id *)(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController);
  v10 = *v9;
  v1 = *v9;
  swift_endAccess(v12);
  if (v10)
    return v10;
  v6 = sub_10021098C();
  v2 = v6;
  v5 = (void **)(v8 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController);
  swift_beginAccess(v8 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController);
  v3 = *v5;
  *v5 = v6;

  swift_endAccess(v11);
  return v6;
}

uint64_t sub_100230AB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v3;
  const void *v4;
  char *v5;
  char *v6;
  char v7;
  uint64_t v8;

  v8 = 0;
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A87F0);
  v3 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v6 = (char *)&v3 - v3;
  v8 = v0;
  v4 = (const void *)(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
  v5 = &v7;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
  sub_100230B60(v4, v6);
  swift_endAccess(v5);
  sub_100230C1C(v6);
  return sub_100231B10((uint64_t)v6);
}

void *sub_100230B60(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SearchItem.Document(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    v2 = sub_10003A0C8((uint64_t *)&unk_1005A87F0);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_100230C1C(const void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  double v16;
  char *v17;
  __n128 v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  id v54;
  uint64_t v55;
  NSString v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v66;
  id v67;
  unsigned int v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  NSString v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BOOL4 v87;
  id v88;
  unsigned int v89;
  _BOOL4 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t);
  id v101;
  char *v102;
  void *v103;
  const char *v104;
  const char *v105;
  const char *v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  unint64_t v116;
  char *v117;
  const void *v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  char *v122;
  unint64_t v123;
  char *v124;
  unint64_t v125;
  char *v126;
  unint64_t v127;
  char *v128;
  id v129;
  id v130;
  double v131;
  double v132;
  id v133;
  double v134;
  id v135;
  uint64_t *v136;
  char **v137;
  id v138;
  id v139;
  id v140;
  _QWORD v141[2];
  _QWORD v142[2];
  char *v143;
  uint64_t v144;
  char *v145;

  v118 = a1;
  v103 = &protocol witness table for MainActor;
  v104 = "Fatal error";
  v105 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  v106 = "MobileMail/DocumentConfigurationCell.swift";
  v145 = 0;
  v144 = 0;
  v143 = 0;
  v2 = sub_10003A0C8(&qword_1005A8C20);
  v107 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v108 = (uint64_t)&v40 - v107;
  v3 = sub_10003A0C8((uint64_t *)&unk_1005A4970);
  v109 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v110 = (uint64_t)&v40 - v109;
  v111 = type metadata accessor for URL(0);
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(_QWORD *)(v112 + 64);
  v114 = (v113 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v111);
  v115 = (char *)&v40 - v114;
  v116 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v40 - v114);
  v117 = (char *)&v40 - v116;
  v145 = (char *)&v40 - v116;
  v119 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A87F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v118);
  v120 = (char *)&v40 - v119;
  v121 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v5);
  v122 = (char *)&v40 - v121;
  v123 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v124 = (char *)&v40 - v123;
  v125 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v9);
  v126 = (char *)&v40 - v125;
  v127 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = __chkstk_darwin(v11);
  v128 = (char *)&v40 - v127;
  v144 = v13;
  v143 = v1;
  v136 = &qword_1005A5000;
  v129 = *(id *)&v1[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v14 = v129;
  v137 = &selRef_insertSectionsWithIdentifiers_beforeSectionWithIdentifier_;
  v135 = objc_msgSend(v129, "layer");

  v15 = v1;
  v130 = objc_msgSend(v1, "traitCollection");

  objc_msgSend(v130, "displayScale");
  v131 = v16;

  v132 = 1.0 / v131;
  v17 = v1;
  v18.n128_f64[0] = v132;
  v133 = v1;
  v134 = UIRoundToViewScale(v1, v18);

  objc_msgSend(v135, "setBorderWidth:", v134);
  v138 = *(id *)&v1[v136[70]];
  v19 = v138;
  v139 = objc_msgSend(v138, v137[361]);

  v140 = objc_msgSend((id)objc_opt_self(UIColor), "mailSearchImageBorderColor");
  if (v140)
  {
    v101 = v140;
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)(v104, 11, 2, v105, 68, 2, v106, 42, 2, 58, 0);
    __break(1u);
  }
  v95 = v101;
  v96 = objc_msgSend(v101, "CGColor");

  objc_msgSend(v139, "setBorderColor:", v96);
  v97 = *(id *)&v102[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v20 = v97;
  sub_100230B60(v118, v128);
  v98 = type metadata accessor for SearchItem.Document(0);
  v99 = *(_QWORD *)(v98 - 8);
  v100 = *(unsigned int (**)(char *, uint64_t))(v99 + 48);
  if (v100(v128, 1) == 1)
  {
    v41 = 0;
    sub_100231B10((uint64_t)v128);
    v93 = v41;
    v94 = v41;
  }
  else
  {
    v91 = SearchItem.Document.name.getter();
    v92 = v21;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v128, v98);
    v93 = v91;
    v94 = v92;
  }
  v142[0] = v93;
  v142[1] = v94;
  v90 = v94 == 0;
  v87 = v90;
  sub_1001F0D3C((uint64_t)v142);
  v89 = 1;
  objc_msgSend(v97, "setHidden:", v87);

  v88 = *(id *)&v102[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v22 = v88;
  sub_100230B60(v118, v126);
  if (((unsigned int (*)(char *, _QWORD, uint64_t))v100)(v126, v89, v98) == 1)
  {
    v42 = 0;
    sub_100231B10((uint64_t)v126);
    v85 = v42;
    v86 = v42;
  }
  else
  {
    v83 = SearchItem.Document.name.getter();
    v84 = v23;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v126, v98);
    v85 = v83;
    v86 = v84;
  }
  v81 = v86;
  v82 = v85;
  if (v86)
  {
    v79 = v82;
    v80 = v81;
    v76 = v81;
    v77 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v76);
    v78 = v77;
  }
  else
  {
    v78 = 0;
  }
  v74 = v78;
  objc_msgSend(v88, "setText:");

  v75 = *(id *)&v102[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v24 = v75;
  sub_100230B60(v118, v124);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v100)(v124, 1, v98) == 1)
  {
    v43 = 0;
    sub_100231B10((uint64_t)v124);
    v72 = v43;
    v73 = v43;
  }
  else
  {
    v70 = SearchItem.Document.date.getter();
    v71 = v25;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v124, v98);
    v72 = v70;
    v73 = v71;
  }
  v141[0] = v72;
  v141[1] = v73;
  v69 = v73 == 0;
  v66 = v69;
  sub_1001F0D3C((uint64_t)v141);
  v68 = 1;
  objc_msgSend(v75, "setHidden:", v66);

  v67 = *(id *)&v102[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v26 = v67;
  sub_100230B60(v118, v122);
  if (((unsigned int (*)(char *, _QWORD, uint64_t))v100)(v122, v68, v98) == 1)
  {
    v44 = 0;
    sub_100231B10((uint64_t)v122);
    v64 = v44;
    v65 = v44;
  }
  else
  {
    v62 = SearchItem.Document.date.getter();
    v63 = v27;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v122, v98);
    v64 = v62;
    v65 = v63;
  }
  v60 = v65;
  v61 = v64;
  if (v65)
  {
    v58 = v61;
    v59 = v60;
    v55 = v60;
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
    v57 = v56;
  }
  else
  {
    v57 = 0;
  }
  v54 = v57;
  objc_msgSend(v67, "setText:");

  sub_100230B60(v118, v120);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v100)(v120, 1, v98) == 1)
  {
    sub_100231B10((uint64_t)v120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56))(v110, 1, 1, v111);
  }
  else
  {
    SearchItem.Document.fileURL.getter();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v120, v98);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v112 + 56))(v110, 0, 1, v111);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111) == 1)
    return sub_1002062E4(v110);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 32);
  v51(v117, v110, v111);
  v47 = 0;
  v29 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v108, 1);
  v48 = 7;
  v52 = swift_allocObject(&unk_100527210, 24, 7);
  v45 = v52 + 16;
  v30 = v102;
  v46 = v102;
  swift_unknownObjectWeakInit(v45);

  swift_retain(v52);
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v115, v117, v111);
  v31 = type metadata accessor for MainActor(v47);
  v49 = static MainActor.shared.getter(v31);
  v32 = *(unsigned __int8 *)(v112 + 80);
  v50 = (v32 + 40) & ~v32;
  v33 = (_QWORD *)swift_allocObject(&unk_100527238, v50 + v113, v48 | v32);
  v34 = v103;
  v35 = v50;
  v36 = v115;
  v37 = (void (*)(char *, char *, uint64_t))v51;
  v38 = v52;
  v39 = v111;
  v53 = v33;
  v33[2] = v49;
  v33[3] = v34;
  v33[4] = v38;
  v37((char *)v33 + v35, v36, v39);
  swift_release();
  sub_10023411C(v108, (uint64_t)&unk_1005A5250, (uint64_t)v53, (uint64_t)&type metadata for () + 8);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v117, v111);
}

uint64_t sub_100231B10(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for SearchItem.Document(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_100231B80()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

uint64_t sub_100231BBC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  const void *v10;

  v7 = a1;
  v10 = 0;
  v9 = 0;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A87F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (char *)&v3 - v3;
  v10 = (const void *)__chkstk_darwin(v7);
  v9 = v1;
  sub_100230B60(v10, (char *)&v3 - v3);
  v5 = (void *)(v1 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
  v6 = &v8;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
  sub_100234344(v4, v5);
  swift_endAccess(v6);
  sub_100230AB0();
  return sub_100231B10(v7);
}

id sub_100231C84(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  objc_class *ObjectType;
  __int128 v28;
  __int128 v29;
  id v30;
  objc_super v31;
  __int128 v32;
  __int128 v33;
  id v34;

  *(double *)&v28 = a1;
  *((double *)&v28 + 1) = a2;
  *(double *)&v29 = a3;
  *((double *)&v29 + 1) = a4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v32 = v28;
  v33 = v29;
  v5 = v4;
  v6 = v4;
  v7 = v4;
  v8 = v4;
  v9 = v4;
  v10 = v4;
  v11 = v4;
  v12 = v4;
  v13 = v4;
  v14 = v4;
  v15 = v4;
  v16 = v4;
  v34 = v4;
  v22 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView;
  sub_1002344A4();
  *(_QWORD *)&v26[v22] = sub_1001E7394();

  v23 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel;
  sub_1001ED94C();
  *(_QWORD *)&v26[v23] = sub_1001E7394();

  v24 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel;
  *(_QWORD *)&v26[v24] = sub_1001E7394();

  *(_QWORD *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint] = 0;
  *(_QWORD *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint] = 0;

  *(_QWORD *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_senderImageViewWidth] = 0x4041000000000000;
  *(double *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding] = 2.0;

  *(double *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_avatarTopPadding] = 4.0;
  *(double *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_avatarTrailingPadding] = 4.0;

  *(double *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_bottomPadding] = 4.0;
  *(_QWORD *)&v26[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController] = 0;

  v25 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem;
  v17 = type metadata accessor for SearchItem.Document(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(&v26[v25], 1);

  v31.receiver = v34;
  v31.super_class = ObjectType;
  v30 = objc_msgSendSuper2(&v31, "initWithFrame:", v28, v29);
  v18 = v30;
  v19 = v30;
  v20 = v30;
  v34 = v30;
  objc_msgSend(v30, "setIsAccessibilityElement:", 1);

  sub_100231FA0();
  return v30;
}

void sub_100231FA0()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSString *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  _QWORD *v29;
  id v30;
  char *v31;
  id v32;
  char *v33;
  id v34;
  char *v35;
  id v36;
  char *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  id v44;
  char *v45;
  id v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  char *v53;
  id v54;
  char *v55;
  unint64_t v56;
  Class isa;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  double v91;
  id v92;
  void **v93;
  id v94;
  id v95;
  double v96;
  id v97;
  void **v98;
  id v99;
  id v100;
  id *v101;
  id *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  id v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  _QWORD *v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v174[24];
  char v175[24];
  char v176[24];
  char v177[24];
  double v178;
  double v179;
  id v180;
  id v181;
  uint64_t v182;

  v180 = 0;
  v178 = 0.0;
  v179 = 0.0;
  v182 = v0;
  v58 = sub_1002309BC();
  v128 = objc_msgSend(v58, "view");
  v181 = v128;

  objc_msgSend(v128, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v59 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v1 = v59;
  objc_msgSend(v89, "addSubview:", v59);

  v60 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v2 = v60;
  objc_msgSend(v89, "insertSubview:aboveSubview:", v128, v60);

  v61 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v3 = v61;
  objc_msgSend(v89, "addSubview:", v61);

  v62 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v4 = v62;
  objc_msgSend(v89, "addSubview:", v62);

  v63 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v5 = v63;
  objc_msgSend(v63, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v64 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v6 = v64;
  objc_msgSend(v64, "setContentMode:");

  v65 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v7 = v65;
  v66 = objc_msgSend(v65, "layer");

  objc_msgSend(v66, "setCornerRadius:", 5.0);
  v67 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v8 = v67;
  objc_msgSend(v67, "setClipsToBounds:", 1);

  v68 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v9 = v68;
  objc_msgSend(v68, "setHidden:", 1);

  v69 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v10 = v69;
  objc_msgSend(v69, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v72 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v11 = v72;
  v70 = (id)objc_opt_self(UIFont);
  v12 = UIFontTextStyleCaption1;
  v71 = objc_msgSend(v70, "preferredFontForTextStyle:", UIFontTextStyleCaption1);

  UILabel.contentSizeAdjustingFont(_:)((UIFont)v71);
  v73 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v13 = v73;
  objc_msgSend(v73, "setNumberOfLines:", 2);

  v74 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v14 = v74;
  objc_msgSend(v74, "setTextAlignment:", 1);

  v76 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v15 = v76;
  v75 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v76, "setTextColor:");

  v77 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v16 = v77;
  objc_msgSend(v77, "setHidden:", 1);

  v78 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v17 = v78;
  objc_msgSend(v78, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v81 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v18 = v81;
  v79 = (id)objc_opt_self(UIFont);
  v19 = UIFontTextStyleCaption2;
  v80 = objc_msgSend(v79, "preferredFontForTextStyle:", UIFontTextStyleCaption2);

  UILabel.contentSizeAdjustingFont(_:)((UIFont)v80);
  v82 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v20 = v82;
  objc_msgSend(v82, "setNumberOfLines:", 1);

  v83 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v21 = v83;
  objc_msgSend(v83, "setTextAlignment:", 1);

  v85 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v22 = v85;
  v84 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v85, "setTextColor:");

  v86 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v23 = v86;
  objc_msgSend(v86, "setHidden:", 1);

  v87 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v88 = objc_msgSend(v87, "preferredContentSizeCategory");
  v180 = v88;

  v96 = sub_10023460C(v88);
  v91 = v24;
  v178 = v96;
  v179 = v24;
  v90 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v25 = v90;
  v92 = objc_msgSend(v90, "heightAnchor");

  v94 = objc_msgSend(v92, "constraintEqualToConstant:", v91);
  v93 = (void **)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint];
  swift_beginAccess(&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint]);
  v26 = *v93;
  *v93 = v94;

  swift_endAccess(v177);
  v95 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v27 = v95;
  v97 = objc_msgSend(v95, "widthAnchor");

  v99 = objc_msgSend(v97, "constraintEqualToConstant:", v96);
  v98 = (void **)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint];
  swift_beginAccess(&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint]);
  v28 = *v98;
  *v98 = v99;

  swift_endAccess(v176);
  v100 = (id)objc_opt_self(NSLayoutConstraint);
  v169 = sub_10003A0C8((uint64_t *)&unk_1005A83A0);
  v168 = _allocateUninitializedArray<A>(_:)(18, v169);
  v166 = v29;
  v101 = (id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint];
  swift_beginAccess(&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint]);
  sub_100212C34(v101, v166);
  swift_endAccess(v175);
  v102 = (id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint];
  swift_beginAccess(&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint]);
  sub_100212C34(v102, v166 + 1);
  swift_endAccess(v174);
  v103 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v30 = v103;
  v105 = objc_msgSend(v103, "topAnchor");

  v31 = v89;
  v104 = objc_msgSend(v89, "topAnchor");

  v106 = objc_msgSend(v105, "constraintEqualToAnchor:constant:", v104, 4.0);
  v166[2] = v106;
  v107 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v32 = v107;
  v109 = objc_msgSend(v107, "centerXAnchor");

  v33 = v89;
  v108 = objc_msgSend(v89, "centerXAnchor");

  v110 = objc_msgSend(v109, "constraintEqualToAnchor:", v108);
  v166[3] = v110;
  v111 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v34 = v111;
  v113 = objc_msgSend(v111, "leadingAnchor");

  v35 = v89;
  v112 = objc_msgSend(v89, "leadingAnchor");

  v114 = objc_msgSend(v113, "constraintGreaterThanOrEqualToAnchor:constant:", v112, *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding]);
  v166[4] = v114;
  v115 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v36 = v115;
  v117 = objc_msgSend(v115, "trailingAnchor");

  v37 = v89;
  v116 = objc_msgSend(v89, "trailingAnchor");

  v118 = objc_msgSend(v117, "constraintLessThanOrEqualToAnchor:constant:", v116, -0.0 - *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding]);
  v166[5] = v118;
  v119 = objc_msgSend(v128, "widthAnchor");
  v120 = objc_msgSend(v119, "constraintEqualToConstant:", *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_senderImageViewWidth]);

  v166[6] = v120;
  v122 = objc_msgSend(v128, "heightAnchor");
  v121 = objc_msgSend(v128, "widthAnchor");
  v123 = objc_msgSend(v122, "constraintEqualToAnchor:");

  v166[7] = v123;
  v126 = objc_msgSend(v128, "topAnchor");
  v124 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v38 = v124;
  v125 = objc_msgSend(v124, "topAnchor");

  v127 = objc_msgSend(v126, "constraintEqualToAnchor:constant:", v125, *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_avatarTopPadding]);
  v166[8] = v127;
  v131 = objc_msgSend(v128, "trailingAnchor");
  v129 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v39 = v129;
  v130 = objc_msgSend(v129, "trailingAnchor");

  v132 = objc_msgSend(v131, "constraintEqualToAnchor:constant:", v130, -0.0 - *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_avatarTrailingPadding]);
  v166[9] = v132;
  v133 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v40 = v133;
  v136 = objc_msgSend(v133, "topAnchor");

  v134 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView];
  v41 = v134;
  v135 = objc_msgSend(v134, "bottomAnchor");

  v137 = objc_msgSend(v136, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v135);
  v166[10] = v137;
  v138 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v42 = v138;
  v140 = objc_msgSend(v138, "leadingAnchor");

  v43 = v89;
  v139 = objc_msgSend(v89, "leadingAnchor");

  v141 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v139, *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding]);
  v166[11] = v141;
  v142 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v44 = v142;
  v144 = objc_msgSend(v142, "centerXAnchor");

  v45 = v89;
  v143 = objc_msgSend(v89, "centerXAnchor");

  v145 = objc_msgSend(v144, "constraintEqualToAnchor:", v143);
  v166[12] = v145;
  v146 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v46 = v146;
  v148 = objc_msgSend(v146, "trailingAnchor");

  v47 = v89;
  v147 = objc_msgSend(v89, "trailingAnchor");

  v149 = objc_msgSend(v148, "constraintLessThanOrEqualToAnchor:constant:", v147, -0.0 - *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding]);
  v166[13] = v149;
  v150 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v48 = v150;
  v153 = objc_msgSend(v150, "topAnchor");

  v151 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel];
  v49 = v151;
  v152 = objc_msgSend(v151, "bottomAnchor");

  v154 = objc_msgSend(v153, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v152, 1.0);
  v166[14] = v154;
  v155 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v50 = v155;
  v157 = objc_msgSend(v155, "leadingAnchor");

  v51 = v89;
  v156 = objc_msgSend(v89, "leadingAnchor");

  v158 = objc_msgSend(v157, "constraintEqualToAnchor:constant:", v156, *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding]);
  v166[15] = v158;
  v159 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v52 = v159;
  v161 = objc_msgSend(v159, "trailingAnchor");

  v53 = v89;
  v160 = objc_msgSend(v89, "trailingAnchor");

  v162 = objc_msgSend(v161, "constraintEqualToAnchor:constant:", v160, -0.0 - *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding]);
  v166[16] = v162;
  v163 = *(id *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel];
  v54 = v163;
  v165 = objc_msgSend(v163, "bottomAnchor");

  v55 = v89;
  v164 = objc_msgSend(v89, "bottomAnchor");

  v167 = objc_msgSend(v165, "constraintEqualToAnchor:constant:", v164, -0.0 - *(double *)&v89[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_bottomPadding]);
  v166[17] = v167;
  sub_10003CB20();
  v173 = v168;
  v170 = sub_10003A0C8(&qword_1005A4DA0);
  v171 = sub_100212E4C();
  v56 = sub_100212EB0();
  v172 = Sequence.compactMap<A>(_:)(sub_100212E08, 0, v170, v171, v56);
  sub_1001ED890(&v173);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v172);
  objc_msgSend(v100, "activateConstraints:", isa);

}

void sub_100233438()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v1 = v0;
  v2 = v0;
  v3 = v0;
  v4 = v0;
  v5 = v0;
  v6 = v0;
  v7 = v0;
  v8 = v0;
  v9 = v0;
  v10 = v0;
  v11 = v0;
  v12 = v0;
  v15 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView;
  sub_1002344A4();
  *(_QWORD *)&v19[v15] = sub_1001E7394();

  v16 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_nameLabel;
  sub_1001ED94C();
  *(_QWORD *)&v19[v16] = sub_1001E7394();

  v17 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_dateLabel;
  *(_QWORD *)&v19[v17] = sub_1001E7394();

  *(_QWORD *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint] = 0;

  *(_QWORD *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_senderImageViewWidth] = 0x4041000000000000;
  *(double *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_horizontalPadding] = 2.0;

  *(double *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_avatarTopPadding] = 4.0;
  *(double *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_avatarTrailingPadding] = 4.0;

  *(double *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_bottomPadding] = 4.0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController] = 0;

  v18 = OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem;
  v13 = type metadata accessor for SearchItem.Document(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(&v19[v18], 1);

  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("init(coder:) has not been implemented", 0x25uLL, 1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v14._countAndFlagsBits, v14._object, "MobileMail/DocumentConfigurationCell.swift", 42);
  __break(1u);
}

uint64_t sub_1002337B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  _BYTE v23[24];
  uint64_t v24;

  v24 = 0;
  v14 = sub_10003A0C8(&qword_1005A4A90);
  v15 = _allocateUninitializedArray<A>(_:)(2, v14);
  v16 = v1;
  v17 = v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
  v18 = type metadata accessor for SearchItem.Document(0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48);
  if (v19(v17, 1))
  {
    swift_endAccess(v23);
    *v16 = 0;
    v16[1] = 0;
  }
  else
  {
    *v16 = SearchItem.Document.name.getter();
    v16[1] = v2;
    swift_endAccess(v23);
  }
  v12 = v13 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem;
  swift_beginAccess(v13 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v19)(v12, 1, v18))
  {
    swift_endAccess(v22);
    v16[2] = 0;
    v16[3] = 0;
  }
  else
  {
    v16[2] = SearchItem.Document.date.getter();
    v16[3] = v3;
    swift_endAccess(v22);
  }
  sub_10003CB20();
  v21 = v15;
  v10 = sub_10003A0C8(&qword_1005A5290);
  v4 = sub_100234AB0();
  v11 = Sequence.compactMap<A>(_:)(sub_100233B64, 0, v10, &type metadata for String, v4);
  sub_1001ED890(&v21);
  v20 = v11;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(", ", 2uLL, 1);
  v8 = sub_10003A0C8(&qword_1005A4090);
  v6 = sub_100234B20();
  v9 = BidirectionalCollection<>.joined(separator:)(v5._countAndFlagsBits, v5._object, v8, v6);
  swift_bridgeObjectRelease(v5._object);
  sub_1001ED890(&v20);
  return v9;
}

uint64_t sub_100233B28(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100233B64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v5;

  v3 = *a1;
  v5 = a1[1];
  result = swift_bridgeObjectRetain(v5);
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_100233BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a5;
  v5[10] = a4;
  v5[5] = v5;
  v5[6] = 0;
  v5[7] = 0;
  v5[8] = 0;
  v5[9] = 0;
  v5[6] = a4 + 16;
  v5[7] = a5;
  v8 = type metadata accessor for MainActor(0);
  v5[12] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[13] = v9;
  v5[14] = v6;
  return swift_task_switch(sub_100233C64, v9);
}

uint64_t sub_100233C64()
{
  _QWORD *v0;
  uint64_t Strong;
  double v2;
  _QWORD *v3;
  id v5;
  double v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = v0[10];
  v0[5] = v0;
  swift_beginAccess(v8 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(v8 + 16);
  v0[15] = Strong;
  v9 = Strong;
  swift_endAccess(v0 + 2);
  if (v9)
  {
    v7[8] = v9;
    type metadata accessor for DocumentThumbnailGenerator(0);
    v5 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v5, "scale");
    v6 = v2;

    v3 = (_QWORD *)swift_task_alloc(async function pointer to static DocumentThumbnailGenerator.generateThumbnail(url:scale:)[1]);
    v7[16] = v3;
    *v3 = v7[5];
    v3[1] = sub_100233DD0;
    return static DocumentThumbnailGenerator.generateThumbnail(url:scale:)(v7[11], v6);
  }
  else
  {
    swift_release(v7[12]);
    return (*(uint64_t (**)(void))(v7[5] + 8))();
  }
}

uint64_t sub_100233DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v5;

  v5 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v5[5] = *(_QWORD *)v1;
  v5[17] = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100233E44, v5[13]);
}

uint64_t sub_100233E44()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v4;
  id v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v10 = v0[17];
  v8 = v0[15];
  v0[5] = v0;
  v0[9] = v10;
  v7 = *(id *)(v8 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView);
  v1 = v7;
  objc_msgSend(v7, "setImage:", v10);

  v9 = *(void **)(v8 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageView);
  v2 = v9;
  v5 = (id)v6[15];
  objc_msgSend(v9, "setHidden:", v10 == 0, v6[17]);

  swift_release(v6[12]);
  return (*(uint64_t (**)(void))(v6[5] + 8))();
}

uint64_t sub_100233FC8()
{
  uint64_t v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v4 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = v3 + *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v4);
  return swift_deallocObject(v5, v6);
}

uint64_t sub_10023405C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v2 + 16) = v2;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v9 = (v3 + 40) & ~v3;
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v4 = (_QWORD *)swift_task_alloc(dword_1005A524C);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = *(_QWORD *)(v2 + 16);
  v4[1] = sub_1001EAA28;
  return sub_100233BB8(a1, v6, v7, v8, (uint64_t)v1 + v9);
}

uint64_t sub_10023411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v5;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];

  v23[4] = a4;
  v21 = type metadata accessor for TaskPriority(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1) == 1)
  {
    sub_100234F2C(a1);
    v16 = 0;
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a1, v21);
    v16 = v15;
  }
  v14 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(a3 + 24);
  swift_unknownObjectRetain(v14);
  if (v14)
  {
    ObjectType = swift_getObjectType();
    v9 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
    v10 = v5;
    swift_unknownObjectRelease();
    v11 = v9;
    v12 = v10;
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  v7 = (_QWORD *)swift_allocObject(&unk_100527260, 40, 7);
  v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  v8 = 0;
  if (v11 != 0 || v12 != 0)
  {
    v23[0] = 0;
    v23[1] = 0;
    v23[2] = v11;
    v23[3] = v12;
    v8 = v23;
  }
  return swift_task_create(v16 | 0x1C00, v8, a4, &unk_1005A52F0, v7);
}

void *sub_100234344(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);

  v7 = type metadata accessor for SearchItem.Document(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  if (((unsigned int (*)(void *, uint64_t))v9)(a2, 1))
  {
    if (v9(a1, 1, v7))
    {
      v3 = sub_10003A0C8((uint64_t *)&unk_1005A87F0);
      memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a2, a1, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
    }
  }
  else if (v9(a1, 1, v7))
  {
    (*(void (**)(void *, uint64_t))(v8 + 8))(a2, v7);
    v2 = sub_10003A0C8((uint64_t *)&unk_1005A87F0);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a2, a1, v7);
  }
  return a2;
}

unint64_t sub_1002344A4()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A8540;
  if (!qword_1005A8540)
  {
    v0 = objc_opt_self(UIImageView);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A8540);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_100234508(uint64_t a1)
{
  unint64_t v1;
  Class isa;
  id v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = 0;
  v10 = a1;
  swift_bridgeObjectRetain(a1);
  v7 = a1;
  if (a1)
  {
    v8 = v7;
  }
  else
  {
    v1 = sub_100210E90();
    v8 = _allocateUninitializedArray<A>(_:)(0, v1);
    sub_1001ED890(&v7);
  }
  v5 = v8;
  v4 = sub_1002309BC();
  swift_bridgeObjectRetain(v5);
  sub_100210E90();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v4, "updateContacts:", isa);

  return swift_bridgeObjectRelease(v5);
}

double sub_10023460C(void *a1)
{
  id v1;
  id v2;
  NSString *v3;
  id v4;
  NSString *v5;
  id v6;
  NSString *v7;
  id v8;
  NSString *v9;
  id v10;
  NSString *v11;
  id v12;
  NSString *v13;
  double v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  double v22;
  double v23;
  void *v25;
  UIContentSizeCategory v26;
  void *v27;
  UIContentSizeCategory v28;
  void *v29;
  UIContentSizeCategory v30;
  void *v31;
  UIContentSizeCategory v32;
  void *v33;
  id v34[3];

  v34[1] = 0;
  v34[2] = a1;
  v1 = a1;
  if ((UIContentSizeCategory.isAccessibilityCategory.getter(a1) & 1) != 0)
  {

    v2 = a1;
    v3 = UIContentSizeCategoryAccessibilityMedium;
    v34[0] = UIContentSizeCategoryAccessibilityMedium;
    v33 = a1;
    type metadata accessor for UIContentSizeCategory(0);
    sub_1001EFA68();
    v21 = dispatch thunk of static Equatable.== infix(_:_:)(v34, &v33);
    sub_1001F20D8(v34);
    if ((v21 & 1) != 0)
    {

      v23 = sub_100234CE0(72);
      sub_100234CE0(100);
    }
    else
    {

      v4 = a1;
      v5 = UIContentSizeCategoryAccessibilityLarge;
      v32 = UIContentSizeCategoryAccessibilityLarge;
      v31 = a1;
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(&v32, &v31);
      sub_1001F20D8((id *)&v32);
      if ((v20 & 1) != 0)
      {

        v23 = sub_100234CE0(79);
        sub_100234CE0(110);
      }
      else
      {

        v6 = a1;
        v7 = UIContentSizeCategoryAccessibilityExtraLarge;
        v30 = UIContentSizeCategoryAccessibilityExtraLarge;
        v29 = a1;
        v19 = dispatch thunk of static Equatable.== infix(_:_:)(&v30, &v29);
        sub_1001F20D8((id *)&v30);
        if ((v19 & 1) != 0)
        {

          v23 = sub_100234CE0(86);
          sub_100234CE0(120);
        }
        else
        {

          v8 = a1;
          v9 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
          v28 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
          v27 = a1;
          v18 = dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v27);
          sub_1001F20D8((id *)&v28);
          if ((v18 & 1) != 0)
          {

            v23 = sub_100234CE0(94);
            sub_100234CE0(130);
          }
          else
          {

            v10 = a1;
            v11 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
            v26 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
            v25 = a1;
            v17 = dispatch thunk of static Equatable.== infix(_:_:)(&v26, &v25);
            sub_1001F20D8((id *)&v26);
            if ((v17 & 1) != 0)
            {

              v23 = sub_100234CE0(101);
              sub_100234CE0(140);
            }
            else
            {

              v12 = a1;
              v13 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
              v16 = static UIContentSizeCategory.> infix(_:_:)(a1, UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);

              if ((v16 & 1) != 0)
              {
                v15 = sub_100234CE0(108);
                sub_100234CE0(140);

                return v15;
              }
              else
              {

                v23 = sub_100234CE0(65);
                sub_100234CE0(90);
              }
            }
          }
        }
      }
    }
  }
  else
  {
    v22 = sub_100234CE0(65);
    sub_100234CE0(90);

    return v22;
  }
  return v23;
}

unint64_t sub_100234AB0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5298;
  if (!qword_1005A5298)
  {
    v0 = sub_1001E7634(&qword_1005A5290);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5298);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100234B20()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A52A0;
  if (!qword_1005A52A0)
  {
    v0 = sub_1001E7634(&qword_1005A4090);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A52A0);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100234B90()
{
  uint64_t v0;

  sub_1001F20D8((id *)(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageHeightSizeConstraint));
  sub_1001F20D8((id *)(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_imageWidthSizeConstraint));
  sub_1001F20D8((id *)(v0
                     + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell____lazy_storage___avatarViewController));
  return sub_100231B10(v0 + OBJC_IVAR____TtC10MobileMail25DocumentConfigurationCell_searchItem);
}

double sub_100234CE0(uint64_t a1)
{
  return (double)a1;
}

uint64_t sub_100234CE8()
{
  return type metadata accessor for DocumentConfigurationCell(0);
}

uint64_t type metadata accessor for DocumentConfigurationCell(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A52D0;
  if (!qword_1005A52D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DocumentConfigurationCell);
  return v2;
}

uint64_t sub_100234D64(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t updated;
  _QWORD v6[12];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[3] = "\b";
  v6[4] = "\b";
  v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[9] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[10] = "\b";
  v1 = sub_100234E88(319);
  updated = v1;
  if (v2 <= 0x3F)
  {
    v6[11] = *(_QWORD *)(v1 - 8) + 64;
    updated = swift_updateClassMetadata2(a1, 256, 12, v6, a1 + 152);
    if (!updated)
      return 0;
  }
  return updated;
}

uint64_t sub_100234E88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  uint64_t v7;

  v7 = qword_1005A52E0;
  if (!qword_1005A52E0)
  {
    v1 = type metadata accessor for SearchItem.Document(255);
    v5 = type metadata accessor for Optional(a1, v1);
    v7 = v5;
    if (!v2)
    {
      v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_1005A52E0);
      return v3;
    }
  }
  return v7;
}

uint64_t sub_100234F2C(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for TaskPriority(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

uint64_t sub_100234F9C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = v2;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_100235020;
  return v5(a1);
}

uint64_t sub_100235020()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *(_QWORD *)(*v0 + 24);
  *(_QWORD *)(*v0 + 16) = *v0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 + 16) + 8))();
}

uint64_t sub_100235084()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v2, 40);
}

uint64_t sub_1002350C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int *v5;

  *(_QWORD *)(v2 + 16) = v2;
  v5 = *(int **)(v1 + 24);
  v3 = (_QWORD *)swift_task_alloc(dword_1005A52EC);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = *(_QWORD *)(v2 + 16);
  v3[1] = sub_1001EAA28;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1005A52E8 + dword_1005A52E8))(a1, v5);
}

uint64_t sub_10023517C(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v1 = swift_retain(v4);
  v3(v1);
  return swift_release(v4);
}

_QWORD *sub_1002351C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD **v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t *v51;
  _QWORD **v52;
  _BYTE **v53;
  uint64_t *v54;
  _QWORD **v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  const char *v70;
  Swift::String v71;
  uint64_t v72;
  const char *v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  Swift::String v78;
  uint64_t v79;
  const char *v80;
  Swift::String v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  Swift::String v85;
  uint64_t v86;
  const char *v87;
  Swift::String v88;
  uint64_t v89;
  Builtin::Word v90;
  char *v91;
  Builtin::Word v92;
  const char *v93;
  int v94;
  int v95;
  int v96;
  char *v97;
  Swift::String v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _DWORD *v108;
  Builtin::Word v109;
  unint64_t v110;
  unint64_t v111;
  Builtin::Word *v112;
  uint32_t v113;
  uint64_t v114;
  int v115;
  NSObject *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  Builtin::Word v126;
  _DWORD v127[11];
  unsigned __int16 v128;
  const char *v129;
  uint64_t v130;
  unsigned __int16 v131;
  const char *v132;
  uint64_t v133;
  unsigned __int16 v134;
  const char *v135;
  uint64_t v136;
  unsigned __int16 v137;
  const char *v138;
  uint64_t v139;
  unsigned __int16 v140;
  const char *v141;
  uint64_t v142;
  unsigned __int16 v143;
  const char *v144;
  uint64_t v145;
  unsigned __int16 v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD __b[9];

  v57 = a3;
  v68 = a1;
  v67 = a2;
  v70 = "To recipients of the email draft message";
  v73 = "Carbon copy recipients of the email draft message";
  v77 = "Blind carbon copy recipients of the email draft message";
  v80 = "Subject of the email draft message";
  v84 = "Body of the email draft message";
  v87 = "Attachments of the email draft message";
  v93 = "Account which the email draft is from";
  v95 = 0;
  memset(__b, 0, sizeof(__b));
  v147 = 0;
  v148 = 0;
  v104 = 0;
  v58 = 0;
  v114 = 0;
  v59 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (*(_QWORD *)(v60 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(0);
  v62 = (char *)&v41 - v61;
  v107 = type metadata accessor for Logger(v3);
  v105 = *(_QWORD *)(v107 - 8);
  v63 = (*(_QWORD *)(v105 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v114);
  v102 = (char *)&v41 - v63;
  v64 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v4) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v114);
  v100 = (uint64_t)&v41 - v64;
  v65 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v114);
  v99 = (char *)&v41 - v65;
  v66 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v6) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v114);
  v97 = (char *)&v41 - v66;
  v69 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource(v7) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v68);
  v101 = (char *)&v41 - v69;
  v147 = v8;
  v148 = v9;
  v75 = sub_10003A0C8(&qword_1005A52F8);
  v109 = 2;
  v96 = 1;
  v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("To", 2uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v10._countAndFlagsBits, v10._object);
  v91 = "AppIntents";
  v92 = 10;
  v71 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  v144 = v70;
  v145 = 40;
  v94 = 2;
  LOBYTE(v146) = 2;
  HIBYTE(v146) = v95 & 1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v71._countAndFlagsBits, v71._object, v99, v100, v70, 40, v146);
  v72 = EntityProperty<>.init(title:)(v101);
  swift_retain(v72);
  __b[2] = v72;
  v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cc", v109, v96 & 1);
  String.LocalizationValue.init(stringLiteral:)(v11._countAndFlagsBits, v11._object);
  v74 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v91, v92, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  v141 = v73;
  v142 = 49;
  LOBYTE(v143) = v94;
  HIBYTE(v143) = v95 & 1 & v96;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v74._countAndFlagsBits, v74._object, v99, v100, v73, 49, v143);
  v76 = EntityProperty<>.init(title:)(v101);
  swift_retain(v76);
  __b[3] = v76;
  v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Bcc", 3uLL, v96 & 1);
  String.LocalizationValue.init(stringLiteral:)(v12._countAndFlagsBits, v12._object);
  v78 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v91, v92, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  v138 = v77;
  v139 = 55;
  LOBYTE(v140) = v94;
  HIBYTE(v140) = v95 & 1 & v96;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v78._countAndFlagsBits, v78._object, v99, v100, v77, 55, v140);
  v79 = EntityProperty<>.init(title:)(v101);
  swift_retain(v79);
  __b[4] = v79;
  v82 = sub_10003A0C8(&qword_1005A73F0);
  v90 = 7;
  v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Subject", 7uLL, v96 & 1);
  String.LocalizationValue.init(stringLiteral:)(v13._countAndFlagsBits, v13._object);
  v81 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v91, v92, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  v135 = v80;
  v136 = 34;
  LOBYTE(v137) = v94;
  HIBYTE(v137) = v95 & 1 & v96;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v81._countAndFlagsBits, v81._object, v99, v100, v80, 34, v137);
  v83 = EntityProperty<>.init(title:)(v101);
  swift_retain(v83);
  __b[5] = v83;
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Body", 4uLL, v96 & 1);
  String.LocalizationValue.init(stringLiteral:)(v14._countAndFlagsBits, v14._object);
  v85 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v91, v92, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  v132 = v84;
  v133 = 31;
  LOBYTE(v134) = v94;
  HIBYTE(v134) = v95 & 1 & v96;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v85._countAndFlagsBits, v85._object, v99, v100, v84, 31, v134);
  v86 = EntityProperty<>.init(title:)(v101);
  swift_retain(v86);
  __b[6] = v86;
  sub_10003A0C8(&qword_1005A5300);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Attachments", 0xBuLL, v96 & 1);
  String.LocalizationValue.init(stringLiteral:)(v15._countAndFlagsBits, v15._object);
  v88 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v91, v92, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  v129 = v87;
  v130 = 38;
  LOBYTE(v131) = v94;
  HIBYTE(v131) = v95 & 1 & v96;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v88._countAndFlagsBits, v88._object, v99, v100, v87, 38, v131);
  v89 = EntityProperty<>.init(title:)(v101);
  swift_retain(v89);
  __b[7] = v89;
  sub_10003A0C8(&qword_1005A5308);
  v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Account", v90, v96 & 1);
  String.LocalizationValue.init(stringLiteral:)(v16._countAndFlagsBits, v16._object);
  v98 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v91, v92, v96 & 1);
  sub_1001E790C();
  sub_1001E7920(v100);
  *(_QWORD *)&v127[7] = v93;
  *(_QWORD *)&v127[9] = 37;
  LOBYTE(v128) = v94;
  HIBYTE(v128) = v95 & 1 & v96;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v97, v98._countAndFlagsBits, v98._object, v99, v100, v93, 37, v128);
  v17 = sub_1001ED7B8();
  v18 = EntityProperty<>.init(title:)(v101, v17);
  v19 = v102;
  v103 = v18;
  swift_retain(v18);
  __b[8] = v103;
  v106 = Logger.appIntentLogger.unsafeMutableAddressor();
  v108 = &v127[1];
  swift_beginAccess(v106);
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v19, v106, v107);
  v20 = swift_endAccess(v108);
  v116 = Logger.logObject.getter(v20);
  v115 = static os_log_type_t.debug.getter();
  v112 = &v126;
  v126 = v109;
  v110 = sub_1001EB1EC();
  v111 = sub_1001EB254();
  v21 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(v127, v112, &type metadata for UInt32, &type metadata for Int, v110, v111, v21);
  v113 = v127[0];
  v22 = sub_10003A0C8(qword_1005A5580);
  v117 = _allocateUninitializedArray<A>(_:)(v114, v22);
  if (os_log_type_enabled(v116, (os_log_type_t)v115))
  {
    v23 = v58;
    v47 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v45 = sub_10003A0C8(&qword_1005A3AD0);
    v46 = 0;
    v48 = sub_1001ED340(0, v45, v45);
    v49 = sub_1001ED340(v46, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v53 = &v121;
    v121 = v47;
    v54 = &v120;
    v120 = v48;
    v51 = &v119;
    v119 = v49;
    v50 = 0;
    sub_1001ED398(0, &v121);
    sub_1001ED398(v50, v53);
    v118 = v117;
    v52 = &v41;
    __chkstk_darwin(&v41);
    v24 = v54;
    v25 = &v41 - 6;
    v55 = &v41 - 6;
    v25[2] = v53;
    v25[3] = v24;
    v25[4] = v26;
    v56 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v27 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v55, v56, v27);
    if (v23)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v115, "#SiriMail DraftMessageEntity.init(autosaveId:)", v47, v113);
      v44 = 0;
      sub_1001ED3F0(v48, 0);
      sub_1001ED3F0(v49, v44);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v117);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v117);
  }

  (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v107);
  v28 = swift_bridgeObjectRetain(v67);
  v122 = v68;
  v123 = v67;
  if (v67)
  {
    v124 = v122;
    v125 = v123;
  }
  else
  {
    v29 = UUID.init()(v28);
    v124 = UUID.uuidString.getter(v29);
    v125 = v30;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
    sub_1001F0D3C((uint64_t)&v122);
  }
  v42 = v124;
  v43 = v125;
  swift_bridgeObjectRetain(v125);
  v41 = __b;
  __b[0] = v42;
  __b[1] = v43;
  swift_bridgeObjectRetain(v43);
  swift_retain(v72);
  swift_retain(v76);
  swift_retain(v79);
  swift_retain(v83);
  swift_retain(v86);
  swift_retain(v89);
  swift_retain(v103);
  swift_release(v103);
  swift_release(v89);
  swift_release(v86);
  swift_release(v83);
  swift_release(v79);
  swift_release(v76);
  swift_release(v72);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v67);
  result = sub_10023D5F4(v41);
  v32 = v43;
  v33 = v72;
  v34 = v76;
  v35 = v79;
  v36 = v83;
  v37 = v86;
  v38 = v89;
  v39 = v103;
  v40 = v57;
  *v57 = v42;
  v40[1] = v32;
  v40[2] = v33;
  v40[3] = v34;
  v40[4] = v35;
  v40[5] = v36;
  v40[6] = v37;
  v40[7] = v38;
  v40[8] = v39;
  return result;
}

_QWORD *sub_100235E08@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t *v96;
  uint64_t *v97;
  _BYTE **v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  unint64_t v115;
  const char *v116;
  Swift::String v117;
  uint64_t v118;
  const char *v119;
  Swift::String v120;
  uint64_t v121;
  uint64_t v122;
  const char *v123;
  Swift::String v124;
  uint64_t v125;
  const char *v126;
  Swift::String v127;
  uint64_t v128;
  uint64_t v129;
  const char *v130;
  Swift::String v131;
  uint64_t v132;
  const char *v133;
  Swift::String v134;
  uint64_t v135;
  Builtin::Word v136;
  char *v137;
  Builtin::Word v138;
  const char *v139;
  int v140;
  int __c;
  int v142;
  char *v143;
  Swift::String v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _DWORD *v154;
  Builtin::Word v155;
  unint64_t v156;
  unint64_t v157;
  Builtin::Word *v158;
  uint32_t v159;
  uint64_t v160;
  int v161;
  NSObject *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _BYTE *v167;
  uint64_t v168;
  _QWORD v169[10];
  _BYTE v170[80];
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  Builtin::Word v177;
  _DWORD v178[11];
  unsigned __int16 v179;
  const char *v180;
  uint64_t v181;
  unsigned __int16 v182;
  const char *v183;
  uint64_t v184;
  unsigned __int16 v185;
  const char *v186;
  uint64_t v187;
  unsigned __int16 v188;
  const char *v189;
  uint64_t v190;
  unsigned __int16 v191;
  const char *v192;
  uint64_t v193;
  unsigned __int16 v194;
  const char *v195;
  uint64_t v196;
  unsigned __int16 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD v201[27];
  _QWORD v202[9];
  _QWORD v203[9];
  _QWORD v204[9];

  v102 = a4;
  v114 = a1;
  v113 = a2;
  v112 = a3;
  v116 = "To recipients of the email draft message";
  v119 = "Carbon copy recipients of the email draft message";
  v123 = "Blind carbon copy recipients of the email draft message";
  v126 = "Subject of the email draft message";
  v130 = "Body of the email draft message";
  v133 = "Attachments of the email draft message";
  v139 = "Account which the email draft is from";
  __c = 0;
  memset(v201, 0, 0x48uLL);
  v200 = 0;
  v198 = 0;
  v199 = 0;
  v176 = 0;
  v171 = 0;
  memset(v170, 0, sizeof(v170));
  v150 = 0;
  v103 = 0;
  v160 = 0;
  v104 = type metadata accessor for MailMessageEntityID(0);
  v105 = *(_QWORD *)(v104 - 8);
  v106 = (*(_QWORD *)(v105 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(0);
  v107 = (char *)&v56 - v106;
  v153 = type metadata accessor for Logger(v4);
  v151 = *(_QWORD *)(v153 - 8);
  v108 = (*(_QWORD *)(v151 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v160);
  v148 = (char *)&v56 - v108;
  v109 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v5) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v160);
  v146 = (uint64_t)&v56 - v109;
  v110 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v6) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v160);
  v145 = (char *)&v56 - v110;
  v111 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v7) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v160);
  v143 = (char *)&v56 - v111;
  v115 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource(v8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v114);
  v147 = (char *)&v56 - v115;
  v200 = v9;
  v198 = v10;
  v199 = v11;
  v121 = sub_10003A0C8(&qword_1005A52F8);
  v155 = 2;
  v142 = 1;
  v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("To", 2uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v12._countAndFlagsBits, v12._object);
  v137 = "AppIntents";
  v138 = 10;
  v117 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  v195 = v116;
  v196 = 40;
  v140 = 2;
  LOBYTE(v197) = 2;
  HIBYTE(v197) = __c & 1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v117._countAndFlagsBits, v117._object, v145, v146, v116, 40, v197);
  v118 = EntityProperty<>.init(title:)(v147);
  swift_retain(v118);
  swift_retain(v118);
  swift_retain(v118);
  swift_retain(v118);
  swift_retain(v118);
  swift_retain(v118);
  v201[2] = v118;
  v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cc", v155, v142 & 1);
  String.LocalizationValue.init(stringLiteral:)(v13._countAndFlagsBits, v13._object);
  v120 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v137, v138, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  v192 = v119;
  v193 = 49;
  LOBYTE(v194) = v140;
  HIBYTE(v194) = __c & 1 & v142;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v120._countAndFlagsBits, v120._object, v145, v146, v119, 49, v194);
  v122 = EntityProperty<>.init(title:)(v147);
  swift_retain(v122);
  swift_retain(v122);
  swift_retain(v122);
  swift_retain(v122);
  swift_retain(v122);
  swift_retain(v122);
  v201[3] = v122;
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Bcc", 3uLL, v142 & 1);
  String.LocalizationValue.init(stringLiteral:)(v14._countAndFlagsBits, v14._object);
  v124 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v137, v138, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  v189 = v123;
  v190 = 55;
  LOBYTE(v191) = v140;
  HIBYTE(v191) = __c & 1 & v142;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v124._countAndFlagsBits, v124._object, v145, v146, v123, 55, v191);
  v125 = EntityProperty<>.init(title:)(v147);
  swift_retain(v125);
  swift_retain(v125);
  swift_retain(v125);
  swift_retain(v125);
  swift_retain(v125);
  swift_retain(v125);
  v201[4] = v125;
  v128 = sub_10003A0C8(&qword_1005A73F0);
  v136 = 7;
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Subject", 7uLL, v142 & 1);
  String.LocalizationValue.init(stringLiteral:)(v15._countAndFlagsBits, v15._object);
  v127 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v137, v138, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  v186 = v126;
  v187 = 34;
  LOBYTE(v188) = v140;
  HIBYTE(v188) = __c & 1 & v142;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v127._countAndFlagsBits, v127._object, v145, v146, v126, 34, v188);
  v129 = EntityProperty<>.init(title:)(v147);
  swift_retain(v129);
  swift_retain(v129);
  swift_retain(v129);
  swift_retain(v129);
  swift_retain(v129);
  swift_retain(v129);
  v201[5] = v129;
  v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Body", 4uLL, v142 & 1);
  String.LocalizationValue.init(stringLiteral:)(v16._countAndFlagsBits, v16._object);
  v131 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v137, v138, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  v183 = v130;
  v184 = 31;
  LOBYTE(v185) = v140;
  HIBYTE(v185) = __c & 1 & v142;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v131._countAndFlagsBits, v131._object, v145, v146, v130, 31, v185);
  v132 = EntityProperty<>.init(title:)(v147);
  swift_retain(v132);
  swift_retain(v132);
  swift_retain(v132);
  swift_retain(v132);
  swift_retain(v132);
  swift_retain(v132);
  v201[6] = v132;
  sub_10003A0C8(&qword_1005A5300);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Attachments", 0xBuLL, v142 & 1);
  String.LocalizationValue.init(stringLiteral:)(v17._countAndFlagsBits, v17._object);
  v134 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v137, v138, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  v180 = v133;
  v181 = 38;
  LOBYTE(v182) = v140;
  HIBYTE(v182) = __c & 1 & v142;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v134._countAndFlagsBits, v134._object, v145, v146, v133, 38, v182);
  v135 = EntityProperty<>.init(title:)(v147);
  swift_retain(v135);
  swift_retain(v135);
  swift_retain(v135);
  swift_retain(v135);
  swift_retain(v135);
  swift_retain(v135);
  v201[7] = v135;
  sub_10003A0C8(&qword_1005A5308);
  v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Account", v136, v142 & 1);
  String.LocalizationValue.init(stringLiteral:)(v18._countAndFlagsBits, v18._object);
  v144 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v137, v138, v142 & 1);
  sub_1001E790C();
  sub_1001E7920(v146);
  *(_QWORD *)&v178[7] = v139;
  *(_QWORD *)&v178[9] = 37;
  LOBYTE(v179) = v140;
  HIBYTE(v179) = __c & 1 & v142;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v143, v144._countAndFlagsBits, v144._object, v145, v146, v139, 37, v179);
  v19 = sub_1001ED7B8();
  v20 = EntityProperty<>.init(title:)(v147, v19);
  v21 = v148;
  v149 = v20;
  swift_retain(v20);
  swift_retain(v149);
  swift_retain(v149);
  swift_retain(v149);
  swift_retain(v149);
  swift_retain(v149);
  v201[8] = v149;
  v152 = Logger.appIntentLogger.unsafeMutableAddressor();
  v154 = &v178[1];
  swift_beginAccess(v152);
  (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v21, v152, v153);
  v22 = swift_endAccess(v154);
  v162 = Logger.logObject.getter(v22);
  v161 = static os_log_type_t.debug.getter();
  v158 = &v177;
  v177 = v155;
  v156 = sub_1001EB1EC();
  v157 = sub_1001EB254();
  v23 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(v178, v158, &type metadata for UInt32, &type metadata for Int, v156, v157, v23);
  v159 = v178[0];
  v24 = sub_10003A0C8(qword_1005A5580);
  v163 = _allocateUninitializedArray<A>(_:)(v160, v24);
  if (os_log_type_enabled(v162, (os_log_type_t)v161))
  {
    v25 = v103;
    v92 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v90 = sub_10003A0C8(&qword_1005A3AD0);
    v91 = 0;
    v93 = sub_1001ED340(0, v90, v90);
    v94 = sub_1001ED340(v91, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v98 = &v167;
    v167 = v92;
    v99 = &v166;
    v166 = v93;
    v96 = &v165;
    v165 = v94;
    v95 = 0;
    sub_1001ED398(0, &v167);
    sub_1001ED398(v95, v98);
    v164 = v163;
    v97 = &v56;
    __chkstk_darwin(&v56);
    v26 = v99;
    v27 = &v56 - 6;
    v100 = &v56 - 6;
    v27[2] = (uint64_t)v98;
    v27[3] = (uint64_t)v26;
    v27[4] = v28;
    v101 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v29 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v100, v101, v29);
    if (v25)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v162, (os_log_type_t)v161, "#SiriMail DraftMessageEntity.init(searchableItem:existingId:)", v92, v159);
      v89 = 0;
      sub_1001ED3F0(v93, 0);
      sub_1001ED3F0(v94, v89);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v163);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v163);
  }

  (*(void (**)(char *, uint64_t))(v151 + 8))(v148, v153);
  v88 = objc_msgSend(v114, "attributeSet");
  v176 = v88;
  swift_bridgeObjectRetain(v112);
  v172 = v113;
  v173 = v112;
  v30 = v88;
  v31 = v114;
  if (v173)
  {
    v174 = v172;
    v175 = v173;
  }
  else
  {
    v32 = v88;
    v87 = objc_msgSend(v114, "uniqueIdentifier");
    v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
    MailMessageEntityID.init(using:uniqueIdentifier:)(v88, v86, v33);

    v174 = MailMessageEntityID.encodedID.getter();
    v175 = v34;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v107, v104);
    sub_1001F0D3C((uint64_t)&v172);
  }
  v35 = v114;

  v82 = v174;
  v84 = v175;
  swift_bridgeObjectRetain(v175);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v84);
  swift_bridgeObjectRetain(v84);
  v201[0] = v82;
  v201[1] = v84;
  v80 = v204;
  v204[0] = v82;
  v204[1] = v84;
  v204[2] = v118;
  v204[3] = v122;
  v204[4] = v125;
  v204[5] = v129;
  v204[6] = v132;
  v204[7] = v135;
  v204[8] = v149;
  swift_bridgeObjectRetain(v84);
  swift_retain(v118);
  swift_retain(v122);
  swift_retain(v125);
  swift_retain(v129);
  swift_retain(v132);
  swift_retain(v135);
  swift_retain(v149);
  swift_release(v149);
  swift_release(v135);
  swift_release(v132);
  swift_release(v129);
  swift_release(v125);
  swift_release(v122);
  swift_release(v118);
  v36 = swift_bridgeObjectRelease(v84);
  v37 = CSSearchableItem.toIntentPersons.getter(v36);
  sub_100237EB0(v37);
  swift_bridgeObjectRelease(v84);
  swift_release(v118);
  swift_release(v122);
  swift_release(v125);
  swift_release(v129);
  swift_release(v132);
  swift_release(v135);
  swift_release(v149);
  v81 = v203;
  v203[0] = v82;
  v203[1] = v84;
  v203[2] = v118;
  v203[3] = v122;
  v203[4] = v125;
  v203[5] = v129;
  v203[6] = v132;
  v203[7] = v135;
  v203[8] = v149;
  swift_bridgeObjectRetain(v84);
  swift_retain(v118);
  swift_retain(v122);
  swift_retain(v125);
  swift_retain(v129);
  swift_retain(v132);
  swift_retain(v135);
  swift_retain(v149);
  swift_release(v149);
  swift_release(v135);
  swift_release(v132);
  swift_release(v129);
  swift_release(v125);
  swift_release(v122);
  swift_release(v118);
  v38 = swift_bridgeObjectRelease(v84);
  v39 = CSSearchableItem.ccIntentPersons.getter(v38);
  sub_100238014(v39);
  swift_bridgeObjectRelease(v84);
  swift_release(v118);
  swift_release(v122);
  swift_release(v125);
  swift_release(v129);
  swift_release(v132);
  swift_release(v135);
  swift_release(v149);
  v83 = v202;
  v202[0] = v82;
  v202[1] = v84;
  v202[2] = v118;
  v202[3] = v122;
  v202[4] = v125;
  v202[5] = v129;
  v202[6] = v132;
  v202[7] = v135;
  v202[8] = v149;
  swift_bridgeObjectRetain(v84);
  swift_retain(v118);
  swift_retain(v122);
  swift_retain(v125);
  swift_retain(v129);
  swift_retain(v132);
  swift_retain(v135);
  swift_retain(v149);
  swift_release(v149);
  swift_release(v135);
  swift_release(v132);
  swift_release(v129);
  swift_release(v125);
  swift_release(v122);
  swift_release(v118);
  v40 = swift_bridgeObjectRelease(v84);
  v41 = CSSearchableItem.bccIntentPersons.getter(v40);
  sub_1002380F8(v41);
  swift_bridgeObjectRelease(v84);
  swift_release(v118);
  swift_release(v122);
  swift_release(v125);
  swift_release(v129);
  swift_release(v132);
  swift_release(v135);
  swift_release(v149);
  v85 = objc_msgSend(v88, "subject");
  if (v85)
  {
    v79 = v85;
    v74 = v85;
    v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
    v76 = v42;

    v77 = v75;
    v78 = v76;
  }
  else
  {
    v77 = 0;
    v78 = 0;
  }
  v72 = v78;
  v71 = v77;
  v201[18] = v82;
  v201[19] = v84;
  v201[20] = v118;
  v201[21] = v122;
  v201[22] = v125;
  v201[23] = v129;
  v201[24] = v132;
  v201[25] = v135;
  v201[26] = v149;
  swift_bridgeObjectRetain(v84);
  swift_retain(v118);
  swift_retain(v122);
  swift_retain(v125);
  swift_retain(v129);
  swift_retain(v132);
  swift_retain(v135);
  swift_retain(v149);
  swift_release(v149);
  swift_release(v135);
  swift_release(v132);
  swift_release(v129);
  swift_release(v125);
  swift_release(v122);
  swift_release(v118);
  swift_bridgeObjectRelease(v84);
  sub_1002381DC(v71, v72);
  swift_bridgeObjectRelease(v84);
  swift_release(v118);
  swift_release(v122);
  swift_release(v125);
  swift_release(v129);
  swift_release(v132);
  swift_release(v135);
  swift_release(v149);
  v73 = objc_msgSend(v88, "mailboxIdentifiers");
  if (v73)
  {
    v70 = v73;
    v67 = v73;
    v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v73, &type metadata for String);

    v69 = v68;
  }
  else
  {
    v69 = 0;
  }
  v66 = v69;
  if (v69)
  {
    v65 = v66;
    v61 = v66;
    v171 = v66;
    v62 = sub_1002C088C(v66);
    swift_bridgeObjectRetain(v62);
    v64 = &v168;
    v168 = v62;
    v63 = sub_10003A0C8(&qword_1005A46A0);
    v43 = sub_10020164C();
    Collection.first.getter(v63, v43);
    sub_1001ED890(v64);
    if (v169[1])
    {
      v60 = v170;
      memcpy(v170, v169, sizeof(v170));
      swift_bridgeObjectRelease(v62);
      v57 = (void *)sub_1002C1244();
      v58 = v44;
      v59 = v45;
      v201[9] = v82;
      v201[10] = v84;
      v201[11] = v118;
      v201[12] = v122;
      v201[13] = v125;
      v201[14] = v129;
      v201[15] = v132;
      v201[16] = v135;
      v201[17] = v149;
      swift_bridgeObjectRetain(v84);
      swift_retain(v118);
      swift_retain(v122);
      swift_retain(v125);
      swift_retain(v129);
      swift_retain(v132);
      swift_retain(v135);
      swift_retain(v149);
      swift_release(v149);
      swift_release(v135);
      swift_release(v132);
      swift_release(v129);
      swift_release(v125);
      swift_release(v122);
      swift_release(v118);
      swift_bridgeObjectRelease(v84);
      sub_100238358(v57, v58, v59);
      swift_bridgeObjectRelease(v84);
      swift_release(v118);
      swift_release(v122);
      swift_release(v125);
      swift_release(v129);
      swift_release(v132);
      swift_release(v135);
      swift_release(v149);
      sub_1002019D8(v60);
    }
    else
    {
      swift_release(v149);
      swift_release(v135);
      swift_release(v132);
      swift_release(v129);
      swift_release(v125);
      swift_release(v122);
      swift_release(v118);
      swift_bridgeObjectRelease(v84);
      sub_1002016BC(v169);
      swift_bridgeObjectRelease(v62);
    }
    swift_bridgeObjectRelease(v61);
  }
  else
  {
    swift_release(v149);
    swift_release(v135);
    swift_release(v132);
    swift_release(v129);
    swift_release(v125);
    swift_release(v122);
    swift_release(v118);
    swift_bridgeObjectRelease(v84);
  }

  swift_bridgeObjectRetain(v84);
  swift_retain(v118);
  swift_retain(v122);
  swift_retain(v125);
  swift_retain(v129);
  swift_retain(v132);
  swift_retain(v135);
  swift_retain(v149);
  swift_release(v149);
  swift_release(v135);
  swift_release(v132);
  swift_release(v129);
  swift_release(v125);
  swift_release(v122);
  swift_release(v118);
  swift_bridgeObjectRelease(v84);
  swift_bridgeObjectRelease(v112);

  result = sub_10023D5F4(v201);
  v47 = v84;
  v48 = v118;
  v49 = v122;
  v50 = v125;
  v51 = v129;
  v52 = v132;
  v53 = v135;
  v54 = v149;
  v55 = v102;
  *v102 = v82;
  v55[1] = v47;
  v55[2] = v48;
  v55[3] = v49;
  v55[4] = v50;
  v55[5] = v51;
  v55[6] = v52;
  v55[7] = v53;
  v55[8] = v54;
  return result;
}

uint64_t sub_100237440()
{
  uint64_t v1;

  if (qword_1005A36A0 != -1)
    ((void (*)(uint64_t *, uint64_t (*)(_QWORD)))swift_once)(&qword_1005A36A0, nullsub_9);
  return v1;
}

uint64_t sub_100237490()
{
  return sub_100237440();
}

uint64_t sub_1002374A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  char *v15;
  Swift::String v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  const char *v25;
  uint64_t v26;
  __int16 v27;

  v22 = a1;
  v14 = "An email draft message";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v8 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v24 = (char *)&v7 - v8;
  v11 = 0;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v11);
  v18 = (uint64_t)&v7 - v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v11);
  v17 = (char *)&v7 - v10;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v11);
  v15 = (char *)&v7 - v12;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v19 = *(_QWORD *)(v21 - 8);
  v13 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v7 - v13;
  v20 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("DraftMessage", 0xCuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v20 & 1);
  sub_1001E790C();
  sub_1001E7920(v18);
  v25 = v14;
  v26 = 22;
  v27 = 2;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v15, v16._countAndFlagsBits, v16._object, v17, v18, v14, 22, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v19 + 56))(v24, v20, v20, v21);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v23, v24);
}

uint64_t sub_100237708()
{
  uint64_t v1;

  if (qword_1005A36A8 != -1)
    swift_once(&qword_1005A36A8, sub_1001E7A38);
  return v1;
}

uint64_t sub_100237758()
{
  return sub_100237708();
}

uint64_t sub_10023776C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  unsigned int v22;
  Builtin::Word v23;
  void *object;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  unsigned int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  const char *v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  __int16 v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  __int16 v67;
  uint64_t v68;

  v33 = a1;
  v34 = "An email draft message";
  v68 = 0;
  v63 = 0;
  v64 = 0;
  v2 = sub_10003A0C8((uint64_t *)&unk_1005A7460);
  v35 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v36 = (char *)&v21 - v35;
  v3 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v37 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v38 = (char *)&v21 - v37;
  v45 = 0;
  v39 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v45);
  v40 = (uint64_t)&v21 - v39;
  v41 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v45);
  v42 = (char *)&v21 - v41;
  v43 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v45);
  v44 = (char *)&v21 - v43;
  v46 = type metadata accessor for String.LocalizationValue.StringInterpolation(v6);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = (*(_QWORD *)(v47 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v45);
  v49 = (char *)&v21 - v48;
  v50 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v51 = (char *)&v21 - v50;
  v52 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v9);
  v53 = (char *)&v21 - v52;
  v54 = type metadata accessor for LocalizedStringResource(v11);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v54);
  v57 = (char *)&v21 - v56;
  v68 = v1;
  v58 = sub_100237E18();
  v59 = v12;
  if (v12)
  {
    v31 = v58;
    v32 = v59;
    v29 = v59;
    v30 = v58;
    v63 = v58;
    v64 = v59;
    v13 = String.isEmpty.getter(v58, v59);
    if ((v13 & 1) == 0)
    {
      v23 = 20;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v28 = 1;
      v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Draft message about ", v23, 1);
      object = v14._object;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
      swift_bridgeObjectRelease(object);
      v15._countAndFlagsBits = v30;
      v15._object = v29;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v15);
      v27 = 0;
      v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v28 & 1);
      v25 = v16._object;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
      swift_bridgeObjectRelease(v25);
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v51, v53, v46);
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v51, v46);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v53, v46);
      String.LocalizationValue.init(stringInterpolation:)(v49);
      v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v28 & 1);
      sub_1001E790C();
      sub_1001E7920(v40);
      v60 = v34;
      v61 = 22;
      v62 = 2;
      LocalizedStringResource.init(_:table:locale:bundle:comment:)(v44, v26._countAndFlagsBits, v26._object, v42, v40, v34, 22, 2);
      (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v55 + 56))(v38, v28, v28, v54);
      v17 = type metadata accessor for DisplayRepresentation.Image(v27);
      (*(void (**)(char *, _QWORD))(*(_QWORD *)(v17 - 8) + 56))(v36, v28);
      DisplayRepresentation.init(title:subtitle:image:)(v57, v38, v36);
      return swift_bridgeObjectRelease(v29);
    }
    swift_bridgeObjectRelease(v29);
  }
  v22 = 1;
  v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Draft message with no subject", 0x1DuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v19._countAndFlagsBits, v19._object);
  v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v22 & 1);
  sub_1001E790C();
  sub_1001E7920(v40);
  v65 = v34;
  v66 = 22;
  v67 = 2;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v44, v21._countAndFlagsBits, v21._object, v42, v40, v34, 22, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v55 + 56))(v38, v22, v22, v54);
  v20 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v20 - 8) + 56))(v36, v22);
  return DisplayRepresentation.init(title:subtitle:image:)(v57, v38, v36);
}

uint64_t sub_100237E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v0;
  v3 = *(_QWORD *)(v0 + 40);
  v1 = swift_retain(v3);
  EntityProperty.wrappedValue.getter(&v5, v1);
  v4 = v5;
  swift_release(v3);
  return v4;
}

uint64_t InstantAnswerView.Model.Flight.travelDate.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v2;
}

uint64_t sub_100237EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a1;
  v6 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  v5 = a1;
  EntityProperty.wrappedValue.setter(&v5);
  swift_release(v3);
  return swift_bridgeObjectRelease(a1);
}

void (*sub_100237F20(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v2 = *(_QWORD *)(v1 + 16);
  v5[4] = v2;
  swift_retain(v2);
  v5[5] = EntityProperty.wrappedValue.modify(v5);
  return sub_100237F94;
}

void sub_100237F94(void **a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4[4];
    ((void (*)(_QWORD *, _QWORD))v4[5])(v4, 0);
    swift_release(v2);
  }
  else
  {
    v3 = v4[4];
    ((void (*)(_QWORD *, _QWORD))v4[5])(v4, 0);
    swift_release(v3);
  }
  free(v4);
}

uint64_t sub_100238014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a1;
  v6 = v1;
  v3 = *(_QWORD *)(v1 + 24);
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  v5 = a1;
  EntityProperty.wrappedValue.setter(&v5);
  swift_release(v3);
  return swift_bridgeObjectRelease(a1);
}

void (*sub_100238084(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v2 = *(_QWORD *)(v1 + 24);
  v5[4] = v2;
  swift_retain(v2);
  v5[5] = EntityProperty.wrappedValue.modify(v5);
  return sub_100237F94;
}

uint64_t sub_1002380F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a1;
  v6 = v1;
  v3 = *(_QWORD *)(v1 + 32);
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  v5 = a1;
  EntityProperty.wrappedValue.setter(&v5);
  swift_release(v3);
  return swift_bridgeObjectRelease(a1);
}

void (*sub_100238168(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v2 = *(_QWORD *)(v1 + 32);
  v5[4] = v2;
  swift_retain(v2);
  v5[5] = EntityProperty.wrappedValue.modify(v5);
  return sub_100237F94;
}

uint64_t sub_1002381DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a1;
  v10 = a2;
  v8 = v2;
  v5 = *(_QWORD *)(v2 + 40);
  swift_retain(v5);
  swift_bridgeObjectRetain(a2);
  v7[0] = a1;
  v7[1] = a2;
  EntityProperty.wrappedValue.setter(v7);
  swift_release(v5);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100238260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a1;
  v10 = a2;
  v8 = v2;
  v5 = *(_QWORD *)(v2 + 48);
  swift_retain(v5);
  swift_bridgeObjectRetain(a2);
  v7[0] = a1;
  v7[1] = a2;
  EntityProperty.wrappedValue.setter(v7);
  swift_release(v5);
  return swift_bridgeObjectRelease(a2);
}

void (*sub_1002382E4(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v5;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v2 = *(_QWORD *)(v1 + 56);
  v5[4] = v2;
  swift_retain(v2);
  v5[5] = EntityProperty.wrappedValue.modify(v5);
  return sub_100237F94;
}

uint64_t sub_100238358(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  uint64_t v6;
  _QWORD v10[3];
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v12 = a1;
  v13 = a2;
  v14 = a3;
  v11 = v3;
  v6 = *(_QWORD *)(v3 + 64);
  swift_retain(v6);
  v4 = a1;
  swift_retain(a2);
  swift_retain(a3);
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  EntityProperty.wrappedValue.setter(v10);
  swift_release(v6);

  swift_release(a2);
  return swift_release(a3);
}

_QWORD *sub_100238410@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  _QWORD *result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  id *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t *v60;
  uint64_t *v61;
  _BYTE **v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  unint64_t v77;
  const char *v78;
  Swift::String v79;
  uint64_t v80;
  const char *v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  Swift::String v86;
  uint64_t v87;
  const char *v88;
  Swift::String v89;
  uint64_t v90;
  uint64_t v91;
  const char *v92;
  Swift::String v93;
  uint64_t v94;
  const char *v95;
  Swift::String v96;
  uint64_t v97;
  Builtin::Word v98;
  char *v99;
  Builtin::Word v100;
  const char *v101;
  int v102;
  int v103;
  int v104;
  char *v105;
  Swift::String v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _DWORD *v116;
  Builtin::Word v117;
  unint64_t v118;
  unint64_t v119;
  Builtin::Word *v120;
  uint32_t v121;
  uint64_t v122;
  int v123;
  NSObject *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  id v130;
  Builtin::Word v131;
  _DWORD v132[11];
  unsigned __int16 v133;
  const char *v134;
  uint64_t v135;
  unsigned __int16 v136;
  const char *v137;
  uint64_t v138;
  unsigned __int16 v139;
  const char *v140;
  uint64_t v141;
  unsigned __int16 v142;
  const char *v143;
  uint64_t v144;
  unsigned __int16 v145;
  const char *v146;
  uint64_t v147;
  unsigned __int16 v148;
  const char *v149;
  uint64_t v150;
  unsigned __int16 v151;
  uint64_t v152;
  _QWORD __b[18];

  v66 = a2;
  v76 = a1;
  v78 = "To recipients of the email draft message";
  v81 = "Carbon copy recipients of the email draft message";
  v85 = "Blind carbon copy recipients of the email draft message";
  v88 = "Subject of the email draft message";
  v92 = "Body of the email draft message";
  v95 = "Attachments of the email draft message";
  v101 = "Account which the email draft is from";
  v103 = 0;
  memset(__b, 0, 0x48uLL);
  v152 = 0;
  v112 = 0;
  v67 = 0;
  v122 = 0;
  v68 = type metadata accessor for MailMessageEntityID(0);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = (*(_QWORD *)(v69 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v71 = (char *)&v42 - v70;
  v115 = type metadata accessor for Logger(v2);
  v113 = *(_QWORD *)(v115 - 8);
  v72 = (*(_QWORD *)(v113 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v122);
  v110 = (char *)&v42 - v72;
  v73 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v3) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v122);
  v108 = (uint64_t)&v42 - v73;
  v74 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v4) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v122);
  v107 = (char *)&v42 - v74;
  v75 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v5) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v122);
  v105 = (char *)&v42 - v75;
  v77 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource(v6) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v76);
  v109 = (char *)&v42 - v77;
  v152 = v7;
  v83 = sub_10003A0C8(&qword_1005A52F8);
  v117 = 2;
  v104 = 1;
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("To", 2uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v8._countAndFlagsBits, v8._object);
  v99 = "AppIntents";
  v100 = 10;
  v79 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  v149 = v78;
  v150 = 40;
  v102 = 2;
  LOBYTE(v151) = 2;
  HIBYTE(v151) = v103 & 1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v79._countAndFlagsBits, v79._object, v107, v108, v78, 40, v151);
  v80 = EntityProperty<>.init(title:)(v109);
  swift_retain(v80);
  swift_retain(v80);
  __b[2] = v80;
  v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cc", v117, v104 & 1);
  String.LocalizationValue.init(stringLiteral:)(v9._countAndFlagsBits, v9._object);
  v82 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v99, v100, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  v146 = v81;
  v147 = 49;
  LOBYTE(v148) = v102;
  HIBYTE(v148) = v103 & 1 & v104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v82._countAndFlagsBits, v82._object, v107, v108, v81, 49, v148);
  v84 = EntityProperty<>.init(title:)(v109);
  swift_retain(v84);
  swift_retain(v84);
  __b[3] = v84;
  v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Bcc", 3uLL, v104 & 1);
  String.LocalizationValue.init(stringLiteral:)(v10._countAndFlagsBits, v10._object);
  v86 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v99, v100, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  v143 = v85;
  v144 = 55;
  LOBYTE(v145) = v102;
  HIBYTE(v145) = v103 & 1 & v104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v86._countAndFlagsBits, v86._object, v107, v108, v85, 55, v145);
  v87 = EntityProperty<>.init(title:)(v109);
  swift_retain(v87);
  swift_retain(v87);
  __b[4] = v87;
  v90 = sub_10003A0C8(&qword_1005A73F0);
  v98 = 7;
  v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Subject", 7uLL, v104 & 1);
  String.LocalizationValue.init(stringLiteral:)(v11._countAndFlagsBits, v11._object);
  v89 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v99, v100, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  v140 = v88;
  v141 = 34;
  LOBYTE(v142) = v102;
  HIBYTE(v142) = v103 & 1 & v104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v89._countAndFlagsBits, v89._object, v107, v108, v88, 34, v142);
  v91 = EntityProperty<>.init(title:)(v109);
  swift_retain(v91);
  swift_retain(v91);
  __b[5] = v91;
  v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Body", 4uLL, v104 & 1);
  String.LocalizationValue.init(stringLiteral:)(v12._countAndFlagsBits, v12._object);
  v93 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v99, v100, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  v137 = v92;
  v138 = 31;
  LOBYTE(v139) = v102;
  HIBYTE(v139) = v103 & 1 & v104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v93._countAndFlagsBits, v93._object, v107, v108, v92, 31, v139);
  v94 = EntityProperty<>.init(title:)(v109);
  swift_retain(v94);
  swift_retain(v94);
  __b[6] = v94;
  sub_10003A0C8(&qword_1005A5300);
  v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Attachments", 0xBuLL, v104 & 1);
  String.LocalizationValue.init(stringLiteral:)(v13._countAndFlagsBits, v13._object);
  v96 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v99, v100, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  v134 = v95;
  v135 = 38;
  LOBYTE(v136) = v102;
  HIBYTE(v136) = v103 & 1 & v104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v96._countAndFlagsBits, v96._object, v107, v108, v95, 38, v136);
  v97 = EntityProperty<>.init(title:)(v109);
  swift_retain(v97);
  swift_retain(v97);
  __b[7] = v97;
  sub_10003A0C8(&qword_1005A5308);
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Account", v98, v104 & 1);
  String.LocalizationValue.init(stringLiteral:)(v14._countAndFlagsBits, v14._object);
  v106 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v99, v100, v104 & 1);
  sub_1001E790C();
  sub_1001E7920(v108);
  *(_QWORD *)&v132[7] = v101;
  *(_QWORD *)&v132[9] = 37;
  LOBYTE(v133) = v102;
  HIBYTE(v133) = v103 & 1 & v104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v105, v106._countAndFlagsBits, v106._object, v107, v108, v101, 37, v133);
  v15 = sub_1001ED7B8();
  v16 = EntityProperty<>.init(title:)(v109, v15);
  v17 = v110;
  v111 = v16;
  swift_retain(v16);
  swift_retain(v111);
  __b[8] = v111;
  v114 = Logger.appIntentLogger.unsafeMutableAddressor();
  v116 = &v132[1];
  swift_beginAccess(v114);
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v17, v114, v115);
  v18 = swift_endAccess(v116);
  v124 = Logger.logObject.getter(v18);
  v123 = static os_log_type_t.debug.getter();
  v120 = &v131;
  v131 = v117;
  v118 = sub_1001EB1EC();
  v119 = sub_1001EB254();
  v19 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(v132, v120, &type metadata for UInt32, &type metadata for Int, v118, v119, v19);
  v121 = v132[0];
  v20 = sub_10003A0C8(qword_1005A5580);
  v125 = _allocateUninitializedArray<A>(_:)(v122, v20);
  if (os_log_type_enabled(v124, (os_log_type_t)v123))
  {
    v21 = v67;
    v56 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v54 = sub_10003A0C8(&qword_1005A3AD0);
    v55 = 0;
    v57 = sub_1001ED340(0, v54, v54);
    v58 = sub_1001ED340(v55, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v62 = &v129;
    v129 = v56;
    v63 = &v128;
    v128 = v57;
    v60 = &v127;
    v127 = v58;
    v59 = 0;
    sub_1001ED398(0, &v129);
    sub_1001ED398(v59, v62);
    v126 = v125;
    v61 = &v42;
    __chkstk_darwin(&v42);
    v22 = v63;
    v23 = &v42 - 6;
    v64 = &v42 - 6;
    v23[2] = (uint64_t)v62;
    v23[3] = (uint64_t)v22;
    v23[4] = v24;
    v65 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v25 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v64, v65, v25);
    if (v21)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v124, (os_log_type_t)v123, "#SiriMail DraftMessageEntity.init(from emMessage:)", v56, v121);
      v53 = 0;
      sub_1001ED3F0(v57, 0);
      sub_1001ED3F0(v58, v53);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v125);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v125);
  }

  (*(void (**)(char *, uint64_t))(v113 + 8))(v110, v115);
  v26 = v76;
  v27 = MailMessageEntityID.init(using:)(v76);
  v51 = MailMessageEntityID.encodedID.getter(v27);
  v52 = v28;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v52);
  __b[0] = v51;
  __b[1] = v52;
  __b[9] = v51;
  __b[10] = v52;
  __b[11] = v80;
  __b[12] = v84;
  __b[13] = v87;
  __b[14] = v91;
  __b[15] = v94;
  __b[16] = v97;
  __b[17] = v111;
  swift_bridgeObjectRetain(v52);
  swift_retain(v80);
  swift_retain(v84);
  swift_retain(v87);
  swift_retain(v91);
  swift_retain(v94);
  swift_retain(v97);
  swift_retain(v111);
  swift_release(v111);
  swift_release(v97);
  swift_release(v94);
  swift_release(v91);
  swift_release(v87);
  swift_release(v84);
  swift_release(v80);
  swift_bridgeObjectRelease(v52);
  v29 = v76;
  v130 = objc_msgSend(v76, "subject");
  if (v130)
  {
    v43 = &v130;
    v44 = v130;
    v30 = v130;
    sub_1001F20D8(v43);

    v45 = objc_msgSend(v44, "subjectString");
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v47 = v31;

    v49 = v46;
    v50 = v47;
  }
  else
  {
    v48 = 0;
    sub_1001F20D8(&v130);

    v49 = v48;
    v50 = v48;
  }
  sub_1002381DC(v49, v50);
  swift_bridgeObjectRelease(v52);
  swift_release(v80);
  swift_release(v84);
  swift_release(v87);
  swift_release(v91);
  swift_release(v94);
  swift_release(v97);
  swift_release(v111);
  swift_bridgeObjectRetain(v52);
  swift_retain(v80);
  swift_retain(v84);
  swift_retain(v87);
  swift_retain(v91);
  swift_retain(v94);
  swift_retain(v97);
  swift_retain(v111);
  swift_release(v111);
  swift_release(v97);
  swift_release(v94);
  swift_release(v91);
  swift_release(v87);
  swift_release(v84);
  swift_release(v80);
  swift_bridgeObjectRelease(v52);

  result = sub_10023D5F4(__b);
  v33 = v52;
  v34 = v80;
  v35 = v84;
  v36 = v87;
  v37 = v91;
  v38 = v94;
  v39 = v97;
  v40 = v111;
  v41 = v66;
  *v66 = v51;
  v41[1] = v33;
  v41[2] = v34;
  v41[3] = v35;
  v41[4] = v36;
  v41[5] = v37;
  v41[6] = v38;
  v41[7] = v39;
  v41[8] = v40;
  return result;
}

_QWORD *sub_100239220@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD **v31;
  _QWORD *v32;
  unint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD **v39;
  _QWORD *v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  _QWORD **v49;
  _QWORD *v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  _QWORD **v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  int v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  _BOOL4 v132;
  _BOOL4 v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD **v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  _QWORD **v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t *v186;
  int v187;
  id v188;
  uint64_t KeyPath;
  _QWORD **v190;
  int *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint8_t *v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int v205;
  uint64_t *v206;
  _QWORD **v207;
  _BYTE **v208;
  uint64_t *v209;
  _QWORD **v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint32_t v217;
  int v218;
  NSObject *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  id v234;
  id v235;
  id v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint8_t *v245;
  uint64_t v246;
  uint64_t v247;
  unsigned int v248;
  uint64_t *v249;
  _QWORD **v250;
  _BYTE **v251;
  uint64_t *v252;
  _QWORD **v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint32_t v260;
  int v261;
  NSObject *v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  id v274;
  id v275;
  id v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint8_t *v286;
  uint64_t v287;
  uint64_t v288;
  unsigned int v289;
  uint64_t *v290;
  _QWORD **v291;
  _BYTE **v292;
  uint64_t *v293;
  _QWORD **v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint32_t v301;
  int v302;
  NSObject *v303;
  _BYTE *v304;
  id v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(char *, uint64_t);
  id v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint8_t *v315;
  uint64_t v316;
  uint64_t v317;
  unsigned int v318;
  uint64_t *v319;
  _QWORD **v320;
  _BYTE **v321;
  uint64_t *v322;
  _QWORD **v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  const char *v327;
  const char *v328;
  const char *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  char *v334;
  unint64_t v335;
  char *v336;
  unint64_t v337;
  char *v338;
  unint64_t v339;
  char *v340;
  unint64_t v341;
  unint64_t v342;
  unint64_t v343;
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  id v347;
  unint64_t v348;
  const char *v349;
  Swift::String v350;
  uint64_t v351;
  const char *v352;
  Swift::String v353;
  uint64_t v354;
  uint64_t v355;
  const char *v356;
  Swift::String v357;
  uint64_t v358;
  const char *v359;
  Swift::String v360;
  uint64_t v361;
  uint64_t v362;
  const char *v363;
  Swift::String v364;
  uint64_t v365;
  const char *v366;
  Swift::String v367;
  uint64_t v368;
  Builtin::Word v369;
  char *v370;
  Builtin::Word v371;
  const char *v372;
  int v373;
  int v374;
  int v375;
  char *v376;
  Swift::String v377;
  char *v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  _QWORD *v384;
  uint64_t v385;
  uint64_t v386;
  void (*v387)(char *, uint64_t, uint64_t);
  _DWORD *v388;
  Builtin::Word v389;
  unint64_t v390;
  unint64_t v391;
  Builtin::Word *v392;
  unint64_t v393;
  uint32_t v394;
  uint64_t v395;
  uint64_t v396;
  int v397;
  NSObject *v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  _BYTE *v403[2];
  uint64_t v404;
  uint64_t v405;
  _BYTE *v406;
  uint64_t v407;
  _QWORD v408[3];
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  _BYTE *v414;
  uint64_t v415;
  _QWORD v416[3];
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  _BYTE *v422;
  uint64_t v423;
  _QWORD v424[3];
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  void *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  void *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  id v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  id v448;
  Builtin::Word v449;
  _DWORD v450[11];
  unsigned __int16 v451;
  const char *v452;
  uint64_t v453;
  unsigned __int16 v454;
  const char *v455;
  uint64_t v456;
  unsigned __int16 v457;
  const char *v458;
  uint64_t v459;
  unsigned __int16 v460;
  const char *v461;
  uint64_t v462;
  unsigned __int16 v463;
  const char *v464;
  uint64_t v465;
  unsigned __int16 v466;
  const char *v467;
  uint64_t v468;
  unsigned __int16 v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  _QWORD v473[54];

  v326 = a4;
  v347 = a1;
  v346 = a2;
  v345 = a3;
  v349 = "To recipients of the email draft message";
  v352 = "Carbon copy recipients of the email draft message";
  v356 = "Blind carbon copy recipients of the email draft message";
  v359 = "Subject of the email draft message";
  v363 = "Body of the email draft message";
  v366 = "Attachments of the email draft message";
  v372 = "Account which the email draft is from";
  v327 = "Fatal error";
  v328 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  v329 = "MobileMail/DraftMessageEntity.swift";
  v374 = 0;
  memset(v473, 0, 0x48uLL);
  v472 = 0;
  v470 = 0;
  v471 = 0;
  v448 = 0;
  v383 = 0;
  v330 = 0;
  v446 = 0;
  v443 = 0;
  v444 = 0;
  v440 = 0;
  v441 = 0;
  v433 = 0;
  v434 = 0;
  v435 = 0;
  v432 = 0;
  v429 = 0;
  v425 = 0;
  v426 = 0;
  v417 = 0;
  v418 = 0;
  v409 = 0;
  v410 = 0;
  v395 = 0;
  v331 = type metadata accessor for UUID(0);
  v332 = *(_QWORD *)(v331 - 8);
  v333 = (*(_QWORD *)(v332 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(0);
  v334 = (char *)&v95 - v333;
  v386 = type metadata accessor for Logger(v4);
  v384 = *(_QWORD **)(v386 - 8);
  v335 = (v384[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v395);
  v336 = (char *)&v95 - v335;
  v337 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v5);
  v338 = (char *)&v95 - v337;
  v339 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v340 = (char *)&v95 - v339;
  v341 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v9);
  v381 = (char *)&v95 - v341;
  v342 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v11) - 8) + 64)
        + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = __chkstk_darwin(v395);
  v379 = (uint64_t)&v95 - v342;
  v343 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v12) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = __chkstk_darwin(v395);
  v378 = (char *)&v95 - v343;
  v344 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v13) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = __chkstk_darwin(v395);
  v376 = (char *)&v95 - v344;
  v348 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource(v14) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v15 = __chkstk_darwin(v347);
  v380 = (char *)&v95 - v348;
  v472 = v15;
  v470 = v16;
  v471 = v17;
  v354 = sub_10003A0C8(&qword_1005A52F8);
  v389 = 2;
  v375 = 1;
  v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("To", 2uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v18._countAndFlagsBits, v18._object);
  v370 = "AppIntents";
  v371 = 10;
  v350 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  v467 = v349;
  v468 = 40;
  v373 = 2;
  LOBYTE(v469) = 2;
  HIBYTE(v469) = v374 & 1;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v350._countAndFlagsBits, v350._object, v378, v379, v349, 40, v469);
  v351 = EntityProperty<>.init(title:)(v380);
  swift_retain(v351);
  swift_retain(v351);
  swift_retain(v351);
  swift_retain(v351);
  swift_retain(v351);
  swift_retain(v351);
  v473[2] = v351;
  v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cc", v389, v375 & 1);
  String.LocalizationValue.init(stringLiteral:)(v19._countAndFlagsBits, v19._object);
  v353 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v370, v371, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  v464 = v352;
  v465 = 49;
  LOBYTE(v466) = v373;
  HIBYTE(v466) = v374 & 1 & v375;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v353._countAndFlagsBits, v353._object, v378, v379, v352, 49, v466);
  v355 = EntityProperty<>.init(title:)(v380);
  swift_retain(v355);
  swift_retain(v355);
  swift_retain(v355);
  swift_retain(v355);
  swift_retain(v355);
  swift_retain(v355);
  v473[3] = v355;
  v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Bcc", 3uLL, v375 & 1);
  String.LocalizationValue.init(stringLiteral:)(v20._countAndFlagsBits, v20._object);
  v357 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v370, v371, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  v461 = v356;
  v462 = 55;
  LOBYTE(v463) = v373;
  HIBYTE(v463) = v374 & 1 & v375;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v357._countAndFlagsBits, v357._object, v378, v379, v356, 55, v463);
  v358 = EntityProperty<>.init(title:)(v380);
  swift_retain(v358);
  swift_retain(v358);
  swift_retain(v358);
  swift_retain(v358);
  swift_retain(v358);
  swift_retain(v358);
  v473[4] = v358;
  v361 = sub_10003A0C8(&qword_1005A73F0);
  v369 = 7;
  v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Subject", 7uLL, v375 & 1);
  String.LocalizationValue.init(stringLiteral:)(v21._countAndFlagsBits, v21._object);
  v360 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v370, v371, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  v458 = v359;
  v459 = 34;
  LOBYTE(v460) = v373;
  HIBYTE(v460) = v374 & 1 & v375;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v360._countAndFlagsBits, v360._object, v378, v379, v359, 34, v460);
  v362 = EntityProperty<>.init(title:)(v380);
  swift_retain(v362);
  swift_retain(v362);
  swift_retain(v362);
  swift_retain(v362);
  swift_retain(v362);
  swift_retain(v362);
  v473[5] = v362;
  v22 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Body", 4uLL, v375 & 1);
  String.LocalizationValue.init(stringLiteral:)(v22._countAndFlagsBits, v22._object);
  v364 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v370, v371, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  v455 = v363;
  v456 = 31;
  LOBYTE(v457) = v373;
  HIBYTE(v457) = v374 & 1 & v375;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v364._countAndFlagsBits, v364._object, v378, v379, v363, 31, v457);
  v365 = EntityProperty<>.init(title:)(v380);
  swift_retain(v365);
  swift_retain(v365);
  swift_retain(v365);
  swift_retain(v365);
  swift_retain(v365);
  swift_retain(v365);
  v473[6] = v365;
  sub_10003A0C8(&qword_1005A5300);
  v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Attachments", 0xBuLL, v375 & 1);
  String.LocalizationValue.init(stringLiteral:)(v23._countAndFlagsBits, v23._object);
  v367 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v370, v371, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  v452 = v366;
  v453 = 38;
  LOBYTE(v454) = v373;
  HIBYTE(v454) = v374 & 1 & v375;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v367._countAndFlagsBits, v367._object, v378, v379, v366, 38, v454);
  v368 = EntityProperty<>.init(title:)(v380);
  swift_retain(v368);
  swift_retain(v368);
  swift_retain(v368);
  swift_retain(v368);
  swift_retain(v368);
  swift_retain(v368);
  v473[7] = v368;
  sub_10003A0C8(&qword_1005A5308);
  v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Account", v369, v375 & 1);
  String.LocalizationValue.init(stringLiteral:)(v24._countAndFlagsBits, v24._object);
  v377 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v370, v371, v375 & 1);
  sub_1001E790C();
  sub_1001E7920(v379);
  *(_QWORD *)&v450[7] = v372;
  *(_QWORD *)&v450[9] = 37;
  LOBYTE(v451) = v373;
  HIBYTE(v451) = v374 & 1 & v375;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v376, v377._countAndFlagsBits, v377._object, v378, v379, v372, 37, v451);
  v25 = sub_1001ED7B8();
  v26 = EntityProperty<>.init(title:)(v380, v25);
  v27 = v381;
  v382 = v26;
  swift_retain(v26);
  swift_retain(v382);
  swift_retain(v382);
  swift_retain(v382);
  swift_retain(v382);
  swift_retain(v382);
  v473[8] = v382;
  v385 = Logger.appIntentLogger.unsafeMutableAddressor();
  v388 = &v450[1];
  swift_beginAccess(v385);
  v387 = (void (*)(char *, uint64_t, uint64_t))v384[2];
  v387(v27, v385, v386);
  v28 = swift_endAccess(v388);
  v398 = Logger.logObject.getter(v28);
  v397 = static os_log_type_t.debug.getter();
  v392 = &v449;
  v449 = v389;
  v390 = sub_1001EB1EC();
  v391 = sub_1001EB254();
  v393 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(v450, v392, &type metadata for UInt32, &type metadata for Int, v390, v391, v393);
  v394 = v450[0];
  v396 = sub_10003A0C8(qword_1005A5580);
  v399 = _allocateUninitializedArray<A>(_:)(v395, v396);
  if (os_log_type_enabled(v398, (os_log_type_t)v397))
  {
    v29 = v330;
    v315 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v313 = sub_10003A0C8(&qword_1005A3AD0);
    v314 = 0;
    v316 = sub_1001ED340(0, v313, v313);
    v317 = sub_1001ED340(v314, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v321 = v403;
    v403[0] = v315;
    v322 = &v402;
    v402 = v316;
    v319 = &v401;
    v401 = v317;
    v318 = 0;
    sub_1001ED398(0, v403);
    sub_1001ED398(v318, v321);
    v400 = v399;
    v320 = &v95;
    __chkstk_darwin(&v95);
    v30 = v322;
    v31 = &v95 - 6;
    v323 = &v95 - 6;
    v31[2] = v321;
    v31[3] = v30;
    v31[4] = v32;
    v324 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v33 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v323, v324, v33);
    v325 = v29;
    if (v29)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v398, (os_log_type_t)v397, "#SiriMail DraftMessageEntity.init(legacyMessage:existingId:)", v315, v394);
      v311 = 0;
      sub_1001ED3F0(v316, 0);
      sub_1001ED3F0(v317, v311);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v399);
      v312 = v325;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v399);
    v312 = v330;
  }
  v308 = v312;

  v309 = (void (*)(char *, uint64_t))v384[1];
  v309(v381, v386);
  v310 = objc_msgSend(v347, "headers");
  v448 = v310;
  swift_bridgeObjectRetain(v345);
  if (v345)
  {
    v306 = v346;
    v307 = v345;
    v35 = v340;
    v297 = v345;
    v298 = v346;
    v409 = v346;
    v410 = v345;
    v299 = Logger.appIntentLogger.unsafeMutableAddressor();
    v300 = (char *)v408 + 4;
    swift_beginAccess(v299);
    v387(v35, v299, v386);
    v36 = swift_endAccess(v300);
    v303 = Logger.logObject.getter(v36);
    v302 = static os_log_type_t.debug.getter();
    v407 = 2;
    UnsignedInteger<>.init<A>(_:)(v408, &v407, &type metadata for UInt32, &type metadata for Int, v390, v391, v393);
    v301 = v408[0];
    v304 = (_BYTE *)_allocateUninitializedArray<A>(_:)(0, v396);
    if (os_log_type_enabled(v303, (os_log_type_t)v302))
    {
      v37 = v308;
      v286 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v284 = sub_10003A0C8(&qword_1005A3AD0);
      v285 = 0;
      v287 = sub_1001ED340(0, v284, v284);
      v288 = sub_1001ED340(v285, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v292 = &v406;
      v406 = v286;
      v293 = &v405;
      v405 = v287;
      v290 = &v404;
      v404 = v288;
      v289 = 0;
      sub_1001ED398(0, &v406);
      sub_1001ED398(v289, v292);
      v403[1] = v304;
      v291 = &v95;
      __chkstk_darwin(&v95);
      v38 = v293;
      v39 = &v95 - 6;
      v294 = &v95 - 6;
      v39[2] = v292;
      v39[3] = v38;
      v39[4] = v40;
      v295 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v41 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v294, v295, v41);
      v296 = v37;
      if (v37)
      {
        __break(1u);
      }
      else
      {
        _os_log_impl((void *)&_mh_execute_header, v303, (os_log_type_t)v302, "#SiriMail DraftMessageEntity init use existingId", v286, v301);
        v282 = 0;
        sub_1001ED3F0(v287, 0);
        sub_1001ED3F0(v288, v282);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v304);
        v283 = v296;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v304);
      v283 = v308;
    }
    v280 = v283;

    v309(v340, v386);
    swift_bridgeObjectRetain(v297);
    v473[0] = v298;
    v473[1] = v297;
    swift_bridgeObjectRelease(v297);
    v281 = v280;
  }
  else
  {
    v34 = v310;
    if (v310)
    {
      v305 = v310;
      v276 = v310;
      v275 = (id)ECMessageHeaderKeyMessageID;
      v42 = ECMessageHeaderKeyMessageID;
      v277 = objc_msgSend(v276, "firstMessageIDForKey:", v275);

      if (v277)
      {
        v274 = v277;
        v269 = v277;
        v270 = static String._unconditionallyBridgeFromObjectiveC(_:)(v277);
        v271 = v43;

        v272 = v270;
        v273 = v271;
      }
      else
      {
        v272 = 0;
        v273 = 0;
      }
      v278 = v272;
      v279 = v273;
    }
    else
    {
      v278 = 0;
      v279 = 0;
    }
    v267 = v279;
    v268 = v278;
    if (v279)
    {
      v265 = v268;
      v266 = v267;
      v45 = v338;
      v256 = v267;
      v257 = v268;
      v417 = v268;
      v418 = v267;
      v258 = Logger.appIntentLogger.unsafeMutableAddressor();
      v259 = (char *)v416 + 4;
      swift_beginAccess(v258);
      v387(v45, v258, v386);
      v46 = swift_endAccess(v259);
      v262 = Logger.logObject.getter(v46);
      v261 = static os_log_type_t.debug.getter();
      v415 = 2;
      UnsignedInteger<>.init<A>(_:)(v416, &v415, &type metadata for UInt32, &type metadata for Int, v390, v391, v393);
      v260 = v416[0];
      v263 = _allocateUninitializedArray<A>(_:)(0, v396);
      if (os_log_type_enabled(v262, (os_log_type_t)v261))
      {
        v47 = v308;
        v245 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
        v243 = sub_10003A0C8(&qword_1005A3AD0);
        v244 = 0;
        v246 = sub_1001ED340(0, v243, v243);
        v247 = sub_1001ED340(v244, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v251 = &v414;
        v414 = v245;
        v252 = &v413;
        v413 = v246;
        v249 = &v412;
        v412 = v247;
        v248 = 0;
        sub_1001ED398(0, &v414);
        sub_1001ED398(v248, v251);
        v411 = v263;
        v250 = &v95;
        __chkstk_darwin(&v95);
        v48 = v252;
        v49 = &v95 - 6;
        v253 = &v95 - 6;
        v49[2] = v251;
        v49[3] = v48;
        v49[4] = v50;
        v254 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
        v51 = sub_1001F5C14();
        Sequence.forEach(_:)(sub_1001F5BE8, v253, v254, v51);
        v255 = v47;
        if (v47)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v262, (os_log_type_t)v261, "#SiriMail DraftMessageEntity init found messageId", v245, v260);
          v241 = 0;
          sub_1001ED3F0(v246, 0);
          sub_1001ED3F0(v247, v241);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v263);
          v242 = v255;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v263);
        v242 = v308;
      }
      v239 = v242;

      v309(v338, v386);
      swift_bridgeObjectRetain(v256);
      v473[0] = v257;
      v473[1] = v256;
      swift_bridgeObjectRelease(v256);
      v240 = v239;
    }
    else
    {
      v44 = v310;
      if (v310)
      {
        v264 = v310;
        v235 = v310;
        v234 = (id)ECMessageHeaderKeyXUniversallyUniqueIdentifier;
        v52 = ECMessageHeaderKeyXUniversallyUniqueIdentifier;
        v236 = objc_msgSend(v235, "firstMessageIDForKey:", v234);

        v44 = v236;
        if (v236)
        {
          v233 = v236;
          v228 = v236;
          v229 = static String._unconditionallyBridgeFromObjectiveC(_:)(v236);
          v230 = v53;

          v231 = v229;
          v232 = v230;
        }
        else
        {
          v231 = 0;
          v232 = 0;
        }
        v237 = v231;
        v238 = v232;
      }
      else
      {
        v237 = 0;
        v238 = 0;
      }
      v226 = v238;
      v227 = v237;
      if (v238)
      {
        v224 = v227;
        v225 = v226;
        v56 = v336;
        v213 = v226;
        v214 = v227;
        v425 = v227;
        v426 = v226;
        v215 = Logger.appIntentLogger.unsafeMutableAddressor();
        v216 = (char *)v424 + 4;
        swift_beginAccess(v215);
        v387(v56, v215, v386);
        v57 = swift_endAccess(v216);
        v219 = Logger.logObject.getter(v57);
        v218 = static os_log_type_t.debug.getter();
        v423 = 2;
        UnsignedInteger<>.init<A>(_:)(v424, &v423, &type metadata for UInt32, &type metadata for Int, v390, v391, v393);
        v217 = v424[0];
        v220 = _allocateUninitializedArray<A>(_:)(0, v396);
        if (os_log_type_enabled(v219, (os_log_type_t)v218))
        {
          v58 = v308;
          v202 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
          v200 = sub_10003A0C8(&qword_1005A3AD0);
          v201 = 0;
          v203 = sub_1001ED340(0, v200, v200);
          v204 = sub_1001ED340(v201, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          v208 = &v422;
          v422 = v202;
          v209 = &v421;
          v421 = v203;
          v206 = &v420;
          v420 = v204;
          v205 = 0;
          sub_1001ED398(0, &v422);
          sub_1001ED398(v205, v208);
          v419 = v220;
          v207 = &v95;
          __chkstk_darwin(&v95);
          v59 = v209;
          v60 = &v95 - 6;
          v210 = &v95 - 6;
          v60[2] = v208;
          v60[3] = v59;
          v60[4] = v61;
          v211 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
          v62 = sub_1001F5C14();
          Sequence.forEach(_:)(sub_1001F5BE8, v210, v211, v62);
          v212 = v58;
          if (v58)
          {
            __break(1u);
          }
          else
          {
            _os_log_impl((void *)&_mh_execute_header, v219, (os_log_type_t)v218, "#SiriMail DraftMessageEntity init found uuid", v202, v217);
            v198 = 0;
            sub_1001ED3F0(v203, 0);
            sub_1001ED3F0(v204, v198);
            UnsafeMutablePointer.deallocate()();
            swift_bridgeObjectRelease(v220);
            v199 = v212;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v220);
          v199 = v308;
        }
        v197 = v199;

        v309(v336, v386);
        swift_bridgeObjectRetain(v213);
        v473[0] = v214;
        v473[1] = v213;
        swift_bridgeObjectRelease(v213);
        v223 = v197;
      }
      else
      {
        v54 = UUID.init()(v44);
        v221 = UUID.uuidString.getter(v54);
        v222 = v55;
        (*(void (**)(char *, uint64_t))(v332 + 8))(v334, v331);
        v473[0] = v221;
        v473[1] = v222;
        v223 = v308;
      }
      v240 = v223;
    }
    v281 = v240;
  }
  v63 = v281;
  v188 = objc_msgSend(v347, "to");
  v447 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v188, &type metadata for String);
  KeyPath = swift_getKeyPath(&unk_1004CCE70);
  swift_retain(KeyPath);
  v190 = &v95;
  v64 = __chkstk_darwin(KeyPath);
  v191 = &v92;
  v93 = sub_10023D684;
  v94 = v64;
  v192 = sub_10003A0C8(&qword_1005A4090);
  v193 = type metadata accessor for IntentPerson(0);
  v194 = sub_1001F0ED4();
  result = (_QWORD *)Sequence.compactMap<A>(_:)(sub_10023D68C, v191, v192, v193, v194);
  v195 = v63;
  v196 = (uint64_t)result;
  if (v63)
  {
    __break(1u);
    goto LABEL_99;
  }
  v183 = v196;
  swift_release(KeyPath);
  swift_release(KeyPath);
  sub_1001ED890(&v447);

  v446 = v183;
  swift_bridgeObjectRetain(v183);
  v186 = &v445;
  v445 = v183;
  v184 = sub_10003A0C8(&qword_1005A48A0);
  v185 = sub_10023D6B4();
  v187 = Collection.isEmpty.getter(v184, v185);
  sub_1001ED890(v186);
  if ((v187 & 1) != 0)
  {
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
  }
  else
  {
    v181 = v473[0];
    v182 = v473[1];
    swift_bridgeObjectRetain(v473[1]);
    v473[45] = v181;
    v473[46] = v182;
    v473[47] = v351;
    v473[48] = v355;
    v473[49] = v358;
    v473[50] = v362;
    v473[51] = v365;
    v473[52] = v368;
    v473[53] = v382;
    swift_bridgeObjectRetain(v182);
    swift_retain(v351);
    swift_retain(v355);
    swift_retain(v358);
    swift_retain(v362);
    swift_retain(v365);
    swift_retain(v368);
    swift_retain(v382);
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
    swift_bridgeObjectRelease(v182);
    swift_bridgeObjectRetain(v183);
    sub_100237EB0(v183);
    swift_bridgeObjectRelease(v182);
    swift_release(v351);
    swift_release(v355);
    swift_release(v358);
    swift_release(v362);
    swift_release(v365);
    swift_release(v368);
    swift_release(v382);
  }
  v180 = objc_msgSend(v347, "cc");
  if (v180)
  {
    v179 = v180;
    v176 = v180;
    v177 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v180, &type metadata for String);

    v178 = v177;
  }
  else
  {
    v178 = 0;
  }
  v175 = v178;
  if (!v178)
  {
    v172 = 0;
    v173 = v195;
    goto LABEL_59;
  }
  v174 = v175;
  v66 = v195;
  v427 = v175;
  v168 = swift_getKeyPath(&unk_1004CCE70);
  swift_retain(v168);
  v169 = &v95;
  v67 = __chkstk_darwin(v168);
  v93 = sub_10023D684;
  v94 = v67;
  result = (_QWORD *)Sequence.compactMap<A>(_:)(sub_10023D68C, &v92, v68, v69, v70);
  v170 = v66;
  v171 = result;
  if (v66)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  v167 = v171;
  swift_release(v168);
  swift_release(v168);
  sub_1001ED890(&v427);
  v172 = (uint64_t)v167;
  v173 = v170;
LABEL_59:
  v165 = v173;
  v166 = v172;
  if (v172)
  {
    v164 = v166;
    v161 = v166;
    v429 = v166;
    swift_bridgeObjectRetain(v166);
    v162 = &v428;
    v428 = v161;
    v163 = Collection.isEmpty.getter(v184, v185);
    sub_1001ED890(v162);
    if ((v163 & 1) != 0)
    {
      swift_release(v382);
      swift_release(v368);
      swift_release(v365);
      swift_release(v362);
      swift_release(v358);
      swift_release(v355);
      swift_release(v351);
      swift_bridgeObjectRelease(v161);
    }
    else
    {
      v159 = v473[0];
      v160 = v473[1];
      swift_bridgeObjectRetain(v473[1]);
      v473[36] = v159;
      v473[37] = v160;
      v473[38] = v351;
      v473[39] = v355;
      v473[40] = v358;
      v473[41] = v362;
      v473[42] = v365;
      v473[43] = v368;
      v473[44] = v382;
      swift_bridgeObjectRetain(v160);
      swift_retain(v351);
      swift_retain(v355);
      swift_retain(v358);
      swift_retain(v362);
      swift_retain(v365);
      swift_retain(v368);
      swift_retain(v382);
      swift_release(v382);
      swift_release(v368);
      swift_release(v365);
      swift_release(v362);
      swift_release(v358);
      swift_release(v355);
      swift_release(v351);
      swift_bridgeObjectRelease(v160);
      sub_100238014(v161);
      swift_bridgeObjectRelease(v160);
      swift_release(v351);
      swift_release(v355);
      swift_release(v358);
      swift_release(v362);
      swift_release(v365);
      swift_release(v368);
      swift_release(v382);
    }
  }
  else
  {
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
  }
  v158 = objc_msgSend(v347, "bcc");
  if (v158)
  {
    v157 = v158;
    v154 = v158;
    v155 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v158, &type metadata for String);

    v156 = v155;
  }
  else
  {
    v156 = 0;
  }
  v153 = v156;
  if (v156)
  {
    v152 = v153;
    v71 = v165;
    v430 = v153;
    v148 = swift_getKeyPath(&unk_1004CCE70);
    swift_retain(v148);
    v149 = &v95;
    v72 = __chkstk_darwin(v148);
    v93 = sub_10023D684;
    v94 = v72;
    result = (_QWORD *)Sequence.compactMap<A>(_:)(sub_10023D68C, &v92, v73, v74, v75);
    v150 = result;
    if (!v71)
    {
      v147 = v150;
      swift_release(v148);
      swift_release(v148);
      sub_1001ED890(&v430);
      v151 = (uint64_t)v147;
      goto LABEL_73;
    }
LABEL_100:
    __break(1u);
    return result;
  }
  v151 = 0;
LABEL_73:
  v146 = v151;
  if (v151)
  {
    v145 = v146;
    v142 = v146;
    v432 = v146;
    swift_bridgeObjectRetain(v146);
    v143 = &v431;
    v431 = v142;
    v144 = Collection.isEmpty.getter(v184, v185);
    sub_1001ED890(v143);
    if ((v144 & 1) != 0)
    {
      swift_release(v382);
      swift_release(v368);
      swift_release(v365);
      swift_release(v362);
      swift_release(v358);
      swift_release(v355);
      swift_release(v351);
      swift_bridgeObjectRelease(v142);
    }
    else
    {
      v140 = v473[0];
      v141 = v473[1];
      swift_bridgeObjectRetain(v473[1]);
      v473[27] = v140;
      v473[28] = v141;
      v473[29] = v351;
      v473[30] = v355;
      v473[31] = v358;
      v473[32] = v362;
      v473[33] = v365;
      v473[34] = v368;
      v473[35] = v382;
      swift_bridgeObjectRetain(v141);
      swift_retain(v351);
      swift_retain(v355);
      swift_retain(v358);
      swift_retain(v362);
      swift_retain(v365);
      swift_retain(v368);
      swift_retain(v382);
      swift_release(v382);
      swift_release(v368);
      swift_release(v365);
      swift_release(v362);
      swift_release(v358);
      swift_release(v355);
      swift_release(v351);
      swift_bridgeObjectRelease(v141);
      sub_1002380F8(v142);
      swift_bridgeObjectRelease(v141);
      swift_release(v351);
      swift_release(v355);
      swift_release(v358);
      swift_release(v362);
      swift_release(v365);
      swift_release(v368);
      swift_release(v382);
    }
  }
  else
  {
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
  }
  v136 = objc_msgSend(v347, "subject");
  v137 = objc_msgSend(v136, "subjectString");
  v138 = static String._unconditionallyBridgeFromObjectiveC(_:)(v137);
  v139 = v76;
  v443 = v138;
  v444 = v76;

  if ((String.isEmpty.getter(v138, v139) & 1) != 0)
  {
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
  }
  else
  {
    v134 = v473[0];
    v135 = v473[1];
    swift_bridgeObjectRetain(v473[1]);
    v473[18] = v134;
    v473[19] = v135;
    v473[20] = v351;
    v473[21] = v355;
    v473[22] = v358;
    v473[23] = v362;
    v473[24] = v365;
    v473[25] = v368;
    v473[26] = v382;
    swift_bridgeObjectRetain(v135);
    swift_retain(v351);
    swift_retain(v355);
    swift_retain(v358);
    swift_retain(v362);
    swift_retain(v365);
    swift_retain(v368);
    swift_retain(v382);
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
    swift_bridgeObjectRelease(v135);
    swift_bridgeObjectRetain(v139);
    sub_1002381DC(v138, v139);
    swift_bridgeObjectRelease(v135);
    swift_release(v351);
    swift_release(v355);
    swift_release(v358);
    swift_release(v362);
    swift_release(v365);
    swift_release(v368);
    swift_release(v382);
  }
  v442 = objc_msgSend(v347, "account");
  v133 = v442 != 0;
  v132 = v133;
  sub_1001F20D8(&v442);
  if (v132)
  {
    v131 = objc_msgSend(v347, "account");
    if (v131)
    {
      v130 = v131;
    }
    else
    {
      LOBYTE(v92) = 2;
      _assertionFailure(_:_:file:line:flags:)(v327, 11, 2, v328, 68, 2, v329, 35, v92, 125, 0);
      __break(1u);
    }
    v128 = v130;
    v129 = objc_msgSend(v130, "identifier");
    if (v129)
    {
      v127 = v129;
      v122 = v129;
      v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v129);
      v124 = v77;

      v125 = v123;
      v126 = v124;
    }
    else
    {
      v125 = 0;
      v126 = 0;
    }
    v120 = v126;
    v121 = v125;
    if (v126)
    {
      v118 = v121;
      v119 = v120;
      v109 = v120;
      v107 = v121;
      v440 = v121;
      v441 = v120;

      v110 = &type metadata for String;
      v106 = _allocateUninitializedArray<A>(_:)(1, &type metadata for String);
      v108 = v78;
      swift_bridgeObjectRetain(v109);
      v79 = v106;
      v80 = v108;
      v81 = v109;
      *v108 = v107;
      v80[1] = v81;
      sub_10003CB20();
      v111 = v79;
      v112 = sub_1001E8E24(v79);
      swift_bridgeObjectRelease(v111);
      swift_bridgeObjectRetain(v112);
      v114 = &v436;
      v436 = v112;
      v113 = sub_10003A0C8(&qword_1005A3CF0);
      v82 = sub_10023D724();
      Collection.first.getter(v113, v82);
      sub_1001ED890(v114);
      v115 = v437;
      v116 = v438;
      v117 = v439;
      if (v437)
      {
        v103 = v115;
        v104 = v116;
        v105 = v117;
        v101 = v117;
        v100 = v116;
        v99 = v115;
        v433 = v115;
        v434 = v116;
        v435 = v117;
        swift_bridgeObjectRelease(v112);
        v98 = v473[0];
        v102 = v473[1];
        swift_bridgeObjectRetain(v473[1]);
        v473[9] = v98;
        v473[10] = v102;
        v473[11] = v351;
        v473[12] = v355;
        v473[13] = v358;
        v473[14] = v362;
        v473[15] = v365;
        v473[16] = v368;
        v473[17] = v382;
        swift_bridgeObjectRetain(v102);
        swift_retain(v351);
        swift_retain(v355);
        swift_retain(v358);
        swift_retain(v362);
        swift_retain(v365);
        swift_retain(v368);
        swift_retain(v382);
        swift_release(v382);
        swift_release(v368);
        swift_release(v365);
        swift_release(v362);
        swift_release(v358);
        swift_release(v355);
        swift_release(v351);
        swift_bridgeObjectRelease(v102);
        sub_100238358(v99, v100, v101);
        swift_bridgeObjectRelease(v102);
        swift_release(v351);
        swift_release(v355);
        swift_release(v358);
        swift_release(v362);
        swift_release(v365);
        swift_release(v368);
        swift_release(v382);
      }
      else
      {
        swift_release(v382);
        swift_release(v368);
        swift_release(v365);
        swift_release(v362);
        swift_release(v358);
        swift_release(v355);
        swift_release(v351);
        swift_bridgeObjectRelease(v112);
      }
      swift_bridgeObjectRelease(v109);
    }
    else
    {
      swift_release(v382);
      swift_release(v368);
      swift_release(v365);
      swift_release(v362);
      swift_release(v358);
      swift_release(v355);
      swift_release(v351);

    }
  }
  else
  {
    swift_release(v382);
    swift_release(v368);
    swift_release(v365);
    swift_release(v362);
    swift_release(v358);
    swift_release(v355);
    swift_release(v351);
  }
  swift_bridgeObjectRelease(v139);
  swift_bridgeObjectRelease(v183);

  v95 = v473;
  v96 = v473[0];
  v97 = v473[1];
  swift_bridgeObjectRetain(v473[1]);
  swift_bridgeObjectRetain(v97);
  swift_retain(v351);
  swift_retain(v355);
  swift_retain(v358);
  swift_retain(v362);
  swift_retain(v365);
  swift_retain(v368);
  swift_retain(v382);
  swift_release(v382);
  swift_release(v368);
  swift_release(v365);
  swift_release(v362);
  swift_release(v358);
  swift_release(v355);
  swift_release(v351);
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v345);

  result = sub_10023D5F4(v95);
  v83 = v97;
  v84 = v351;
  v85 = v355;
  v86 = v358;
  v87 = v362;
  v88 = v365;
  v89 = v368;
  v90 = v382;
  v91 = v326;
  *v326 = v96;
  v91[1] = v83;
  v91[2] = v84;
  v91[3] = v85;
  v91[4] = v86;
  v91[5] = v87;
  v91[6] = v88;
  v91[7] = v89;
  v91[8] = v90;
  return result;
}

uint64_t sub_10023BCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v8 = a2;
  v5 = a1;
  v10 = type metadata accessor for IntentPerson(0);
  v7 = *(_QWORD *)(v10 - 8);
  v6 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = (_QWORD *)__chkstk_darwin(v5);
  v9 = (char *)&v4 - v6;
  sub_1001F0E98(v2, v12);
  v11 = v12[1];
  String.intentPerson.getter(v12[0]);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v8, v9, v10);
  return swift_bridgeObjectRelease(v11);
}

uint64_t sub_10023BD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v7[2];

  swift_bridgeObjectRetain(a2);
  swift_retain(a3);
  v7[0] = a1;
  v7[1] = a2;
  swift_getAtKeyPath(v7, a3);
  sub_1001F0D3C((uint64_t)v7);
  return swift_release(a3);
}

uint64_t sub_10023BDFC@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  _QWORD *v5;
  void (*v6)(_QWORD, _QWORD);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = a3;
  v5 = a1;
  v6 = a2;
  v9 = type metadata accessor for IntentPerson(0);
  v8 = *(_QWORD *)(v9 - 8);
  v4 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v9);
  v7 = (char *)&v4 - v4;
  v6(*v5, v5[1]);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v10, v7, v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
}

uint64_t sub_10023BEC4()
{
  return IndexedEntity.attributeSet.getter();
}

void *sub_10023BED8()
{
  sub_100237490();
  return &unk_100530CC0;
}

uint64_t sub_10023BEF4()
{
  uint64_t v1;

  v1 = type metadata accessor for Logger(0);
  sub_10003A134(v1, qword_1005B9CD0);
  sub_10003A088(v1, (uint64_t)qword_1005B9CD0);
  return static Logger.mailUILogger<A>(for:)(&unk_1005273A8);
}

uint64_t sub_10023BF4C()
{
  uint64_t v0;

  if (qword_1005A36B0 != -1)
    swift_once(&qword_1005A36B0, sub_10023BEF4);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9CD0);
}

id sub_10023BFAC()
{
  id result;

  sub_10023D794();
  result = sub_1001E7394();
  qword_1005B9CE8 = (uint64_t)result;
  return result;
}

uint64_t *sub_10023BFDC()
{
  if (qword_1005A36B8 != -1)
    swift_once(&qword_1005A36B8, sub_10023BFAC);
  return &qword_1005B9CE8;
}

uint64_t sub_10023C030(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1[47] = a1;
  v1[32] = v1;
  v1[33] = 0;
  v1[34] = 0;
  v1[20] = 0;
  v1[21] = 0;
  v1[24] = 0;
  v1[25] = 0;
  v1[30] = 0;
  v1[31] = 0;
  v2 = sub_10003A0C8((uint64_t *)&unk_1005A4BB0);
  v1[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Logger(0);
  v1[49] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[50] = v4;
  v6 = *(_QWORD *)(v4 + 64);
  v1[51] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[52] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[33] = a1;
  v8 = type metadata accessor for MainActor(0);
  v1[53] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10023C154, v9);
}

uint64_t sub_10023C154()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint32_t size;
  os_log_type_t v50;
  NSObject *oslog;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const void *aBlock;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *buf;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint32_t v81;
  os_log_type_t v82;
  NSObject *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v92 = v0[47];
  v0[32] = v0;
  v91 = swift_allocObject(&unk_100527298, 24, 7);
  v0[34] = v91 + 16;
  *(_QWORD *)(v91 + 16) = _allocateUninitializedArray<A>(_:)(0, &unk_100527368);
  swift_bridgeObjectRetain(v92);
  v0[35] = v92;
  v93 = sub_10003A0C8(&qword_1005A4090);
  v1 = sub_100225A64();
  Collection<>.makeIterator()(v0 + 20, v93, v1);
  v94 = 0;
  while (1)
  {
    v2 = sub_10003A0C8(&qword_1005A5330);
    IndexingIterator.next()(v2);
    v88 = *(_QWORD *)(v90 + 176);
    v89 = *(_QWORD *)(v90 + 184);
    if (!v89)
      break;
    *(_QWORD *)(v90 + 192) = v88;
    *(_QWORD *)(v90 + 200) = v89;
    *(_QWORD *)(v90 + 208) = v88;
    *(_QWORD *)(v90 + 216) = v89;
    *(Swift::String *)(v90 + 224) = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("x-apple-mail://", 0xFuLL, 1);
    v85 = sub_10023D834();
    v3 = sub_10023D89C();
    v86 = BidirectionalCollection<>.starts<A>(with:)(v90 + 224, &type metadata for String, &type metadata for String, v85, v3);
    sub_1001F0D3C(v90 + 224);
    if ((v86 & 1) != 0)
    {
      v4 = *(_QWORD *)(v90 + 416);
      v76 = *(_QWORD *)(v90 + 400);
      v78 = *(_QWORD *)(v90 + 392);
      v77 = Logger.appIntentLogger.unsafeMutableAddressor();
      swift_beginAccess(v77);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v4, v77, v78);
      v5 = swift_endAccess(v90 + 136);
      v83 = Logger.logObject.getter(v5);
      v82 = static os_log_type_t.debug.getter();
      *(_QWORD *)(v90 + 336) = 2;
      v79 = sub_1001EB1EC();
      v80 = sub_1001EB254();
      v6 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)((_QWORD *)(v90 + 436), v90 + 336, &type metadata for UInt32, &type metadata for Int, v79, v80, v6);
      v81 = *(_DWORD *)(v90 + 436);
      v7 = sub_10003A0C8(qword_1005A5580);
      v84 = _allocateUninitializedArray<A>(_:)(0, v7);
      if (os_log_type_enabled(v83, v82))
      {
        buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
        v70 = sub_10003A0C8(&qword_1005A3AD0);
        v72 = sub_1001ED340(0, v70, v70);
        v73 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        *(_QWORD *)(v90 + 344) = buf;
        *(_QWORD *)(v90 + 352) = v72;
        *(_QWORD *)(v90 + 360) = v73;
        sub_1001ED398(0, (_BYTE **)(v90 + 344));
        sub_1001ED398(0, (_BYTE **)(v90 + 344));
        *(_QWORD *)(v90 + 368) = v84;
        v74 = (_QWORD *)swift_task_alloc(48);
        v74[2] = v90 + 344;
        v74[3] = v90 + 352;
        v74[4] = v90 + 360;
        v75 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
        v8 = sub_1001F5C14();
        Sequence.forEach(_:)(sub_1001F5BE8, v74, v75, v8);
        swift_task_dealloc(v74);
        _os_log_impl((void *)&_mh_execute_header, v83, v82, "#SiriMail DraftMessageEntity fetching temporary draft message", buf, v81);
        sub_1001ED3F0(v72, 0);
        sub_1001ED3F0(v73, 0);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v84);
        v68 = 0;
        v69 = 0;
      }
      else
      {
        swift_bridgeObjectRelease(v84);
        v68 = v94;
        v69 = v87;
      }
      v62 = *(_QWORD *)(v90 + 416);
      v61 = *(_QWORD *)(v90 + 400);
      v63 = *(_QWORD *)(v90 + 392);

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v63);
      v65 = objc_msgSend((id)objc_opt_self(EFScheduler), "mainThreadScheduler");
      swift_getObjectType(v65);
      swift_bridgeObjectRetain(v89);
      swift_retain(v91);
      v9 = (_QWORD *)swift_allocObject(&unk_1005272C0, 40, 7);
      v9[2] = v88;
      v9[3] = v89;
      v9[4] = v91;
      *(_QWORD *)(v90 + 48) = sub_10023D948;
      *(_QWORD *)(v90 + 56) = v9;
      *(_QWORD *)(v90 + 16) = _NSConcreteStackBlock;
      *(_DWORD *)(v90 + 24) = 1107296256;
      *(_DWORD *)(v90 + 28) = 0;
      *(_QWORD *)(v90 + 32) = sub_10023517C;
      *(_QWORD *)(v90 + 40) = &unk_1005272D8;
      aBlock = _Block_copy((const void *)(v90 + 16));
      swift_release(*(_QWORD *)(v90 + 56));
      objc_msgSend(v65, "performBlock:", aBlock);
      _Block_release(aBlock);
      swift_unknownObjectRelease(v65);
      v66 = v68;
      v67 = v69;
    }
    else
    {
      v58 = *(_QWORD *)(v90 + 384);
      swift_bridgeObjectRetain(v89);
      MailMessageEntityID.init(with:)(v88, v89);
      v59 = type metadata accessor for MailMessageEntityID(0);
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v60 + 48))(v58, 1) == 1)
      {
        sub_10020D830(*(_QWORD *)(v90 + 384));
        v56 = 0;
        v57 = 0;
      }
      else
      {
        v53 = *(_QWORD *)(v90 + 384);
        v54 = MailMessageEntityID.mailMessageID.getter();
        v55 = v10;
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v53, v59);
        v56 = v54;
        v57 = v55;
      }
      if (v57)
      {
        v11 = *(_QWORD *)(v90 + 408);
        v44 = *(_QWORD *)(v90 + 400);
        v46 = *(_QWORD *)(v90 + 392);
        *(_QWORD *)(v90 + 240) = v56;
        *(_QWORD *)(v90 + 248) = v57;
        v45 = Logger.appIntentLogger.unsafeMutableAddressor();
        swift_beginAccess(v45);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v11, v45, v46);
        v12 = swift_endAccess(v90 + 88);
        oslog = Logger.logObject.getter(v12);
        v50 = static os_log_type_t.debug.getter();
        *(_QWORD *)(v90 + 288) = 2;
        v47 = sub_1001EB1EC();
        v48 = sub_1001EB254();
        v13 = sub_1001EB2BC();
        UnsignedInteger<>.init<A>(_:)((_QWORD *)(v90 + 432), v90 + 288, &type metadata for UInt32, &type metadata for Int, v47, v48, v13);
        size = *(_DWORD *)(v90 + 432);
        v14 = sub_10003A0C8(qword_1005A5580);
        v52 = _allocateUninitializedArray<A>(_:)(0, v14);
        if (os_log_type_enabled(oslog, v50))
        {
          v37 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
          v36 = sub_10003A0C8(&qword_1005A3AD0);
          v38 = sub_1001ED340(0, v36, v36);
          v39 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          *(_QWORD *)(v90 + 304) = v37;
          *(_QWORD *)(v90 + 312) = v38;
          *(_QWORD *)(v90 + 320) = v39;
          sub_1001ED398(0, (_BYTE **)(v90 + 304));
          sub_1001ED398(0, (_BYTE **)(v90 + 304));
          *(_QWORD *)(v90 + 328) = v52;
          v40 = (_QWORD *)swift_task_alloc(48);
          v40[2] = v90 + 304;
          v40[3] = v90 + 312;
          v40[4] = v90 + 320;
          v41 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
          v15 = sub_1001F5C14();
          Sequence.forEach(_:)(sub_1001F5BE8, v40, v41, v15);
          swift_task_dealloc(v40);
          _os_log_impl((void *)&_mh_execute_header, oslog, v50, "#SiriMail DraftMessageEntity fetching persisted draft message", v37, size);
          sub_1001ED3F0(v38, 0);
          sub_1001ED3F0(v39, 0);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v52);
          v34 = 0;
          v35 = 0;
        }
        else
        {
          swift_bridgeObjectRelease(v52);
          v34 = v94;
          v35 = v87;
        }
        v26 = *(_QWORD *)(v90 + 408);
        v25 = *(_QWORD *)(v90 + 400);
        v27 = *(_QWORD *)(v90 + 392);

        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
        type metadata accessor for CSQueryBuilder(0);
        v28 = CSQueryBuilder.__allocating_init()();
        v29 = dispatch thunk of CSQueryBuilder.addIDPredicate(_:)(v56, v57);
        v16 = swift_release(v28);
        v30 = dispatch thunk of CSQueryBuilder.build()(v16);
        v31 = v17;
        swift_release(v29);
        swift_bridgeObjectRetain(v89);
        v32 = sub_100226B28(v30, v31, v88, v89);
        swift_bridgeObjectRelease(v89);
        swift_bridgeObjectRelease(v31);
        *(_QWORD *)(v90 + 296) = v32;
        swift_beginAccess(v91 + 16);
        v33 = sub_10003A0C8(&qword_1005A4B00);
        v18 = sub_10020D1A0();
        Array.append<A>(contentsOf:)(v90 + 296, v33, v33, v18);
        swift_endAccess(v90 + 112);
        swift_bridgeObjectRelease(v57);
        v42 = v34;
        v43 = v35;
      }
      else
      {
        v42 = v94;
        v43 = v87;
      }
      v66 = v42;
      v67 = v43;
    }
    swift_bridgeObjectRelease(v89);
    v94 = v66;
    v87 = v67;
  }
  v20 = *(_QWORD *)(v90 + 424);
  v21 = *(_QWORD *)(v90 + 416);
  v22 = *(_QWORD *)(v90 + 408);
  v23 = *(_QWORD *)(v90 + 384);
  sub_1001ED890((_QWORD *)(v90 + 160));
  swift_beginAccess(v91 + 16);
  v24 = *(_QWORD *)(v91 + 16);
  swift_bridgeObjectRetain(v24);
  swift_endAccess(v90 + 64);
  swift_release(v91);
  swift_release(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v90 + 256) + 8))(v24);
}

void sub_10023CF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v13;
  id v14;
  id v15;
  _BYTE v16[24];
  _BYTE __dst[72];
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[9];

  v20 = 0;
  v19 = 0;
  v18 = 0;
  v22 = a1;
  v23 = a2;
  v10 = a3 + 16;
  v21 = a3 + 16;
  v9 = (id)*sub_10023BFDC();
  v3 = v9;
  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v15 = objc_msgSend(v9, "autosavedMessageDataWithIdentifier:", v8);

  v20 = v15;
  v14 = objc_msgSend(v15, "result");
  v19 = v14;
  sub_10023E98C();
  v4 = Data.init(referencing:)(v14);
  v13 = sub_10023D0AC(v4, v5);
  v18 = v13;
  v6 = v13;
  swift_bridgeObjectRetain(a2);
  sub_100239220(v13, a1, a2, v24);
  sub_100210530(v24);
  memcpy(__dst, v24, sizeof(__dst));
  swift_beginAccess(v10);
  v7 = sub_10003A0C8(&qword_1005A4B00);
  Array.append(_:)(__dst, v7);
  swift_endAccess(v16);
  sub_10020B310(v24);

}

id sub_10023D0AC(uint64_t a1, unint64_t a2)
{
  Class isa;
  id v6;

  isa = Data._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "messageWithRFC822Data:", isa);

  sub_100206354(a1, a2);
  return v6;
}

uint64_t sub_10023D11C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005A532C);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = *(_QWORD *)(v1 + 16);
  v2[1] = sub_1001EA784;
  return sub_10023C030(a1);
}

uint64_t sub_10023D190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 16) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = *(_QWORD *)(v3 + 16);
  v4[1] = sub_1001EA914;
  return EntityQuery.suggestedEntities()(a1, a2, a3);
}

uint64_t sub_10023D214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v6;

  v6 = v2;
  *(_QWORD *)(v2 + 16) = v2;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v6 + 24) = v3;
  v4 = sub_10023D9B4();
  *v3 = *(_QWORD *)(v6 + 16);
  v3[1] = sub_1001EA914;
  return EntityQuery.results()(a1, a2, v4);
}

uint64_t sub_10023D29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.EntitySchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9CF0;
  sub_10003A134(v8, qword_1005B9CF0);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1001EAD54();
  sub_10023D3A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_10023D3A0()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("MailDraftEntity", 0xFuLL, 1);
  return AssistantSchema.EntitySchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_10023D474()
{
  uint64_t v0;

  if (qword_1005A36C0 != -1)
    swift_once(&qword_1005A36C0, sub_10023D29C);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9CF0);
}

uint64_t sub_10023D4D4()
{
  return sub_100237758();
}

uint64_t sub_10023D4E8@<X0>(uint64_t *a1@<X8>)
{
  const void *v1;
  uint64_t result;
  uint64_t v3;
  _BYTE __dst[72];

  memcpy(__dst, v1, sizeof(__dst));
  result = InstantAnswerView.Model.Flight.travelDate.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10023D534@<X0>(uint64_t a1@<X8>)
{
  return sub_1002374A4(a1);
}

uint64_t sub_10023D548(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_1002105CC();
  return static AppEntity.defaultResolverSpecification.getter(a1, v1);
}

uint64_t sub_10023D57C@<X0>(uint64_t a1@<X8>)
{
  const void *v1;
  _BYTE __dst[72];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_10023776C(a1);
}

uint64_t sub_10023D5C0(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10023DA20();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v1);
}

_QWORD *sub_10023D5F4(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  swift_release(a1[8]);
  return a1;
}

uint64_t sub_10023D670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10023BCE4(a1, a2);
}

uint64_t sub_10023D684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10023BD90(a1, a2, v2);
}

uint64_t sub_10023D68C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10023BDFC(a1, *(void (**)(_QWORD, _QWORD))(v2 + 16), a2);
}

unint64_t sub_10023D6B4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5310;
  if (!qword_1005A5310)
  {
    v0 = sub_1001E7634(&qword_1005A48A0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5310);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10023D724()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5318;
  if (!qword_1005A5318)
  {
    v0 = sub_1001E7634(&qword_1005A3CF0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5318);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10023D794()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5320;
  if (!qword_1005A5320)
  {
    v0 = objc_opt_self(MSAutosave);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5320);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_10023D7F8()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

unint64_t sub_10023D834()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5338;
  if (!qword_1005A5338)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5338);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023D89C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5340[0];
  if (!qword_1005A5340[0])
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, qword_1005A5340);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10023D904()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v2, 40);
}

void sub_10023D948()
{
  uint64_t *v0;

  sub_10023CF00(v0[2], v0[3], v0[4]);
}

uint64_t sub_10023D958(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10023D99C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10023D9B4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5360;
  if (!qword_1005A5360)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCF74, &unk_1005273A8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5360);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DA20()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5370;
  if (!qword_1005A5370)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD268, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5370);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DA8C()
{
  return sub_10023DAA0();
}

unint64_t sub_10023DAA0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5378;
  if (!qword_1005A5378)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCF14, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5378);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DB0C()
{
  return sub_10023DB20();
}

unint64_t sub_10023DB20()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5380;
  if (!qword_1005A5380)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCF44, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5380);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DB8C()
{
  return sub_10023DBA0();
}

unint64_t sub_10023DBA0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5388;
  if (!qword_1005A5388)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004D4AD4, &unk_100530CC0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5388);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DC08()
{
  return sub_10023DC1C();
}

unint64_t sub_10023DC1C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A7F40;
  if (!qword_1005A7F40)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD120, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A7F40);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DC88()
{
  return sub_10023DC9C();
}

unint64_t sub_10023DC9C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5390;
  if (!qword_1005A5390)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CCFCC, &unk_1005273A8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5390);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DD08()
{
  return sub_10023DD1C();
}

unint64_t sub_10023DD1C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5398;
  if (!qword_1005A5398)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD02C, &unk_1005273A8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5398);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DD88()
{
  return sub_10023DD9C();
}

unint64_t sub_10023DD9C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53A0;
  if (!qword_1005A53A0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD054, &unk_1005273A8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53A0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DE08()
{
  return sub_10020B2A8();
}

unint64_t sub_10023DE1C()
{
  return sub_10023DE30();
}

unint64_t sub_10023DE30()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A53A8;
  if (!qword_1005A53A8)
  {
    v2 = sub_1001E7634(&qword_1005A4B00);
    sub_10020B2A8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53A8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10023DEAC()
{
  return sub_10023DEC0();
}

unint64_t sub_10023DEC0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53B0;
  if (!qword_1005A53B0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD0A0, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53B0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DF2C()
{
  return sub_10023DF40();
}

unint64_t sub_10023DF40()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53B8;
  if (!qword_1005A53B8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD158, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53B8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023DFAC()
{
  return sub_10023DFC0();
}

unint64_t sub_10023DFC0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53C0;
  if (!qword_1005A53C0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD188, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53C0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023E02C()
{
  return sub_10023D9B4();
}

unint64_t sub_10023E040()
{
  return sub_10023E054();
}

unint64_t sub_10023E054()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53C8;
  if (!qword_1005A53C8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD1C0, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53C8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023E0C0()
{
  return sub_10023E0D4();
}

unint64_t sub_10023E0D4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53D0;
  if (!qword_1005A53D0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD1E8, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53D0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_10023E140()
{
  return sub_10023DA20();
}

unint64_t sub_10023E154()
{
  return sub_10023E168();
}

unint64_t sub_10023E168()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A53D8;
  if (!qword_1005A53D8)
  {
    v0 = sub_1001E7634(&qword_1005A53E0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53D8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10023E1D8()
{
  return sub_10023E1EC();
}

unint64_t sub_10023E1EC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A53E8;
  if (!qword_1005A53E8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD298, &unk_100527368);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A53E8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10023E258(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  return swift_release(a1[8]);
}

_QWORD *sub_10023E2D0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;

  *a1 = *a2;
  v3 = a2[1];
  swift_bridgeObjectRetain(v3);
  a1[1] = v3;
  v4 = a2[2];
  swift_retain(v4);
  a1[2] = v4;
  v5 = a2[3];
  swift_retain(v5);
  a1[3] = v5;
  v6 = a2[4];
  swift_retain(v6);
  a1[4] = v6;
  v7 = a2[5];
  swift_retain(v7);
  a1[5] = v7;
  v8 = a2[6];
  swift_retain(v8);
  a1[6] = v8;
  v9 = a2[7];
  swift_retain(v9);
  a1[7] = v9;
  v12 = a2[8];
  swift_retain(v12);
  result = a1;
  a1[8] = v12;
  return result;
}

_QWORD *sub_10023E3D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  *a1 = *a2;
  v11 = a2[1];
  swift_bridgeObjectRetain(v11);
  v2 = a1[1];
  a1[1] = v11;
  swift_bridgeObjectRelease(v2);
  v12 = a2[2];
  swift_retain(v12);
  v3 = a1[2];
  a1[2] = v12;
  swift_release(v3);
  v13 = a2[3];
  swift_retain(v13);
  v4 = a1[3];
  a1[3] = v13;
  swift_release(v4);
  v14 = a2[4];
  swift_retain(v14);
  v5 = a1[4];
  a1[4] = v14;
  swift_release(v5);
  v15 = a2[5];
  swift_retain(v15);
  v6 = a1[5];
  a1[5] = v15;
  swift_release(v6);
  v16 = a2[6];
  swift_retain(v16);
  v7 = a1[6];
  a1[6] = v16;
  swift_release(v7);
  v17 = a2[7];
  swift_retain(v17);
  v8 = a1[7];
  a1[7] = v17;
  swift_release(v8);
  v19 = a2[8];
  swift_retain(v19);
  v9 = a1[8];
  a1[8] = v19;
  swift_release(v9);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10023E51C(void *a1, const void *a2)
{
  memcpy(a1, a2, 0x48uLL);
}

_QWORD *sub_10023E548(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  v4 = a1[2];
  a1[2] = a2[2];
  swift_release(v4);
  v5 = a1[3];
  a1[3] = a2[3];
  swift_release(v5);
  v6 = a1[4];
  a1[4] = a2[4];
  swift_release(v6);
  v7 = a1[5];
  a1[5] = a2[5];
  swift_release(v7);
  v8 = a1[6];
  a1[6] = a2[6];
  swift_release(v8);
  v9 = a1[7];
  a1[7] = a2[7];
  swift_release(v9);
  v10 = a1[8];
  a1[8] = a2[8];
  swift_release(v10);
  return a1;
}

uint64_t sub_10023E630(uint64_t a1, int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (!HIDWORD(*(_QWORD *)(a1 + 8)))
        v3 = *(_QWORD *)(a1 + 8);
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_10023E748(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_QWORD *)result = a2 + 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 64) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 72) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 72) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)(result + 8) = a2 - 1;
  }
  return result;
}

void *type metadata accessor for DraftMessageEntity()
{
  return &unk_100527368;
}

void *type metadata accessor for DraftMessageQuery()
{
  return &unk_1005273A8;
}

unint64_t sub_10023E98C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A53F0;
  if (!qword_1005A53F0)
  {
    v0 = objc_opt_self(MFMailMessage);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A53F0);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_10023E9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = 0;
  v18 = 0;
  v19 = a1;
  v20 = a2;
  if (!a2)
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Not yet implemented.", 0x14uLL, 1)._countAndFlagsBits;
  swift_bridgeObjectRetain(a2);
  v17 = a1;
  v18 = a2;
  v15 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)();
  v16 = v2;
  v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Received unexpected argument: ", 0x1EuLL, 1);
  object = v3._object;
  DefaultStringInterpolation.appendLiteral(_:)(v3);
  swift_bridgeObjectRelease(object);
  v14[0] = a1;
  v14[1] = a2;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, 1);
  v7 = v4._object;
  DefaultStringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(v7);
  v9 = v15;
  v8 = v16;
  swift_bridgeObjectRetain(v16);
  sub_1001F0D3C((uint64_t)&v15);
  v10 = String.init(stringInterpolation:)(v9, v8);
  swift_bridgeObjectRelease(a2);
  return v10;
}

uint64_t sub_10023EBB0()
{
  return Error._domain.getter();
}

uint64_t sub_10023EBC4()
{
  return Error._code.getter();
}

uint64_t sub_10023EBD8()
{
  return Error._userInfo.getter();
}

uint64_t sub_10023EBEC()
{
  return Error._getEmbeddedNSError()();
}

_QWORD *sub_10023EC00(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;

  *a1 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain(v4);
  result = a1;
  a1[1] = v4;
  return result;
}

uint64_t sub_10023EC3C(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *sub_10023EC54(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  *a1 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain(v4);
  v2 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRelease(v2);
  return a1;
}

_QWORD *sub_10023EC9C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t sub_10023ECD8(uint64_t a1, unsigned int a2)
{
  int v2;
  int v4;
  int v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    {
      v5 = *(_OWORD *)a1 + 2147483646;
    }
    else
    {
      v4 = -1;
      if (*(_QWORD *)(a1 + 8) < (unint64_t)&_mh_execute_header)
        v4 = *(_QWORD *)(a1 + 8);
      v2 = v4 - 1;
      if (v4 - 1 < 0)
        v2 = -1;
      v5 = v2;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_10023EE50(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFE;
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 > 0x7FFFFFFE)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFE)
    {
      if (v3)
        *(_BYTE *)(result + 16) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_10023F05C(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_10003A0C8(&qword_1005A53F8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(a1, 1);
}

uint64_t sub_10023F09C(uint64_t a1, unsigned int a2)
{
  uint64_t v2;

  v2 = sub_10003A0C8(&qword_1005A53F8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, a2, 1);
}

void *type metadata accessor for Error()
{
  return &unk_100527690;
}

void sub_10023F0F8(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[7];
  void *v11;

  v10[5] = 0;
  v10[6] = 0;
  v11 = v1;
  v9 = objc_msgSend(v1, "itemURLString");
  if (v9)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v5 = v2;

    v6 = v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  if (v7)
  {
    v3 = v1;
    sub_1002BD010();
    v10[3] = &unk_100529898;
    v10[4] = &off_1005298B8;
    sub_1002C12B4(v6, v7, (uint64_t)v1, v10, a1);
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0;
    a1[4] = 0;
    a1[5] = 0;
    a1[6] = 0;
    a1[7] = 0;
    a1[8] = 0;
    a1[9] = 0;
  }
}

uint64_t sub_10023F270()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD v4[5];
  _QWORD __src[10];
  _QWORD __b[10];
  uint64_t v7;

  memset(__b, 0, sizeof(__b));
  v7 = v0;
  sub_10023F0F8(__src);
  if (__src[1])
  {
    memcpy(__b, __src, sizeof(__b));
    type metadata accessor for UIAppEntityInteraction(0);
    v4[3] = &unk_100529DA0;
    v4[4] = sub_10023F388();
    v4[0] = swift_allocObject(&unk_1005276D8, 96, 7);
    sub_100201884(__b, (_QWORD *)(v4[0] + 16));
    v2 = UIAppEntityInteraction.__allocating_init(entity:)(v4);
    sub_1002019D8(__b);
    return v2;
  }
  else
  {
    sub_1002016BC(__src);
    return 0;
  }
}

unint64_t sub_10023F388()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5400;
  if (!qword_1005A5400)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CFF70, &unk_100529DA0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5400);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_10023F3F0()
{
  _QWORD *v0;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  sub_1001F25B8(v0 + 5);
  swift_release(v0[10]);
  swift_release(v0[11]);
  return swift_deallocObject(v2, 96);
}

uint64_t sub_10023F44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v10;
  char *v11;
  _QWORD v12[10];
  _QWORD __src[10];
  _BYTE __b[80];
  uint64_t v15;

  v15 = 0;
  memset(__b, 0, sizeof(__b));
  v1 = type metadata accessor for AppEntityVisualState(0);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v11 = (char *)&v3 - v10;
  v15 = v0;
  sub_10023F0F8(__src);
  if (__src[1])
  {
    v7 = __b;
    memcpy(__b, __src, sizeof(__b));
    type metadata accessor for AppEntityViewAnnotation(0);
    v4 = v12;
    sub_100201884(v7, v12);
    v6 = sub_10023F388();
    v5 = &unk_100529DA0;
    sub_10023F5E0((uint64_t)&unk_100529DA0);
    v8 = AppEntityViewAnnotation.__allocating_init<A>(entity:state:)(v4, v11, v5, v6);
    sub_1002019D8(v7);
    return v8;
  }
  else
  {
    v3 = 0;
    sub_1002016BC(__src);
    return v3;
  }
}

uint64_t sub_10023F5E0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  v5[1] = a1;
  v3 = sub_10023F75C(0);
  type metadata accessor for AppEntityVisualState(0);
  v5[0] = v3;
  sub_1002106A8();
  v4 = sub_10003A0C8(&qword_1005A5418);
  v1 = sub_10023F814();
  return dispatch thunk of SetAlgebra.init<A>(_:)(v5, v4, v1);
}

uint64_t sub_10023F678()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;

  v8 = (void *)sub_10023F270();
  if (v8)
  {
    v5 = sub_10003A0C8(&qword_1005A5408);
    v6 = _allocateUninitializedArray<A>(_:)(1, v5);
    v4 = v0;
    v1 = v8;
    *v4 = v8;
    sub_10003CB20();

    return v6;
  }
  else
  {
    v2 = sub_10003A0C8(&qword_1005A5408);
    return _allocateUninitializedArray<A>(_:)(0, v2);
  }
}

uint64_t sub_10023F75C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v4 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (result > 0)
    {
      v1 = type metadata accessor for AppEntityVisualState(0);
      v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
      *(_QWORD *)(v2 + 16) = v4;
      v3 = (void *)v2;
    }
    else
    {
      swift_retain(&_swiftEmptyArrayStorage);
      v3 = &_swiftEmptyArrayStorage;
    }
    type metadata accessor for AppEntityVisualState(0);
    return (uint64_t)v3;
  }
  return result;
}

unint64_t sub_10023F814()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5420;
  if (!qword_1005A5420)
  {
    v0 = sub_1001E7634(&qword_1005A5418);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5420);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10023F884(uint64_t a1, uint64_t a2)
{
  void *v2;
  unint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRetain(a2);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v7 = objc_msgSend(v2, "itemsContainingName:", v6);

  v3 = sub_10023F994();
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v3);

  v9 = sub_10023F9F8(v10);
  v8 = sub_10023FAB4();
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  return v8;
}

unint64_t sub_10023F994()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5438;
  if (!qword_1005A5438)
  {
    v0 = objc_opt_self(FavoriteItem);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5438);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_10023F9F8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  _QWORD v5[2];
  _QWORD v6[3];

  v6[1] = 0;
  v6[2] = a1;
  v5[1] = a1;
  v1 = sub_10023F994();
  v5[0] = Array.init()(v1);
  v4 = sub_10003A0C8(&qword_1005A5440);
  v2 = sub_100240488();
  Sequence.reduce<A>(into:_:)(v6, v5, sub_100240378, 0, v4, v4, v2);
  return v6[0];
}

uint64_t sub_10023FAB4()
{
  unint64_t v0;
  uint64_t v2;

  v2 = sub_10003A0C8(&qword_1005A5440);
  v0 = sub_100240488();
  return Sequence.compactMap<A>(_:)(sub_100240340, 0, v2, &unk_100529DA0, v0);
}

uint64_t sub_10023FB50(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRetain(a1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v6 = objc_msgSend(v1, "itemsMatchingItemURLStrings:", isa);

  v2 = sub_10023F994();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v2);

  v8 = sub_10023F9F8(v9);
  v7 = sub_10023FAB4();
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v9);
  return v7;
}

uint64_t sub_10023FC48()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE **v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint32_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  NSObject *v73;
  int v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;

  v84 = 0;
  v83 = 0;
  v82 = 0;
  v49 = 0;
  v55 = type metadata accessor for Logger(0);
  v53 = *(_QWORD *)(v55 - 8);
  v48 = (*(_QWORD *)(v53 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v55);
  v52 = (char *)v33 - v48;
  v84 = v0;
  v50 = objc_msgSend(v0, "suggestedFavoriteItems");
  v1 = sub_10023F994();
  v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v50, v1);
  v83 = v51;

  v2 = sub_10023F9F8(v51);
  v3 = v52;
  v57 = v2;
  v82 = v2;
  v54 = Logger.appIntentLogger.unsafeMutableAddressor();
  v56 = (char *)&v81 + 4;
  v63 = 32;
  swift_beginAccess(v54);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v3, v54, v55);
  swift_endAccess(v56);
  swift_bridgeObjectRetain(v57);
  v64 = 7;
  v4 = swift_allocObject(&unk_100527700, 24, 7);
  v5 = v57;
  v65 = v4;
  *(_QWORD *)(v4 + 16) = v57;
  v73 = Logger.logObject.getter(v5);
  v74 = static os_log_type_t.default.getter();
  v60 = &v80;
  v80 = 12;
  v58 = sub_1001EB1EC();
  v59 = sub_1001EB254();
  v6 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v81, v60, &type metadata for UInt32, &type metadata for Int, v58, v59, v6);
  v61 = v81;
  v62 = 17;
  v7 = swift_allocObject(&unk_100527728, 17, v64);
  v8 = v62;
  v9 = v64;
  v67 = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v10 = swift_allocObject(&unk_100527750, v8, v9);
  v11 = v63;
  v12 = v64;
  v68 = v10;
  *(_BYTE *)(v10 + 16) = 8;
  v13 = swift_allocObject(&unk_100527778, v11, v12);
  v14 = v63;
  v15 = v64;
  v16 = v13;
  v17 = v65;
  v66 = v16;
  *(_QWORD *)(v16 + 16) = sub_100240534;
  *(_QWORD *)(v16 + 24) = v17;
  v18 = swift_allocObject(&unk_1005277A0, v14, v15);
  v19 = v66;
  v70 = v18;
  *(_QWORD *)(v18 + 16) = sub_1001F5D18;
  *(_QWORD *)(v18 + 24) = v19;
  v72 = sub_10003A0C8(qword_1005A5580);
  v69 = _allocateUninitializedArray<A>(_:)(3, v72);
  v71 = v20;
  swift_retain(v67);
  v21 = v68;
  v22 = v67;
  v23 = v71;
  *v71 = sub_1001ED4B8;
  v23[1] = v22;
  swift_retain(v21);
  v24 = v70;
  v25 = v68;
  v26 = v71;
  v71[2] = sub_1001ED4B8;
  v26[3] = v25;
  swift_retain(v24);
  v27 = v69;
  v28 = v70;
  v29 = v71;
  v71[4] = sub_1001F60F4;
  v29[5] = v28;
  sub_10003CB20();
  swift_bridgeObjectRelease(v27);
  if (os_log_type_enabled(v73, (os_log_type_t)v74))
  {
    v40 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v38 = sub_10003A0C8(&qword_1005A3AD0);
    v39 = 0;
    v41 = sub_1001ED340(0, v38, v38);
    v42 = sub_1001ED340(v39, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v43 = &v79;
    v79 = v40;
    v44 = &v78;
    v78 = v41;
    v45 = &v77;
    v77 = v42;
    sub_1001ED398(0, &v79);
    sub_1001ED398(1, v43);
    v30 = v47;
    v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v76 = v67;
    sub_1001ED3AC(&v75, (uint64_t)v43, (uint64_t)v44, (uint64_t)v45);
    v46 = v30;
    if (v30)
    {
      __break(1u);
    }
    else
    {
      v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v76 = v68;
      sub_1001ED3AC(&v75, (uint64_t)&v79, (uint64_t)&v78, (uint64_t)&v77);
      v36 = 0;
      v31 = v36;
      v75 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F60F4;
      v76 = v70;
      sub_1001ED3AC(&v75, (uint64_t)&v79, (uint64_t)&v78, (uint64_t)&v77);
      v35 = v31;
      _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v74, "Returning %ld suggested mailboxes", v40, v61);
      v34 = 0;
      sub_1001ED3F0(v41, 0);
      sub_1001ED3F0(v42, v34);
      UnsafeMutablePointer.deallocate()();
      swift_release(v67);
      swift_release(v68);
      swift_release(v70);
      v37 = v35;
    }
  }
  else
  {
    swift_release(v67);
    swift_release(v68);
    swift_release(v70);
    v37 = v47;
  }
  v33[1] = v37;

  (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v55);
  v33[0] = sub_10023FAB4();
  swift_bridgeObjectRelease(v57);
  swift_bridgeObjectRelease(v51);
  return v33[0];
}

uint64_t sub_100240310(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_10023F994();
  return Array.count.getter(a1, v1);
}

void sub_100240340(_QWORD *a1@<X8>)
{
  sub_10023F0F8(a1);
}

uint64_t *sub_100240378(_QWORD *a1, id *a2)
{
  id v2;
  unint64_t v3;
  uint64_t *result;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[16];
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;

  v15 = 0;
  v16 = a1;
  v15 = *a2;
  v7 = v15;
  v6 = *a1;
  swift_bridgeObjectRetain(*a1);
  v14 = v6;
  v2 = v15;
  v12 = v15;
  v8 = sub_10003A0C8(&qword_1005A5440);
  v3 = sub_100240488();
  result = (uint64_t *)Sequence.contains(where:)(sub_1002409AC, v11, v8, v3);
  v10 = (char)result;
  if (v9)
  {
    __break(1u);
  }
  else
  {

    result = &v14;
    sub_1001ED890(&v14);
    if ((v10 & 1) == 0)
    {
      v5 = v7;
      v13 = v7;
      return (uint64_t *)Array.append(_:)(&v13, v8);
    }
  }
  return result;
}

unint64_t sub_100240488()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5448;
  if (!qword_1005A5448)
  {
    v0 = sub_1001E7634(&qword_1005A5440);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5448);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002404F8()
{
  uint64_t v0;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_100240534()
{
  uint64_t v0;

  return sub_100240310(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10024053C(void **a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  id v25;
  void *v26;

  v26 = 0;
  v25 = 0;
  v19 = *a1;
  v26 = *a1;
  v25 = a2;
  v20 = objc_msgSend(a2, "itemURLString");
  if (v20)
  {
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v16 = v2;

    v17 = v15;
    v18 = v16;
  }
  else
  {
    v17 = 0;
    v18 = 0;
  }
  swift_bridgeObjectRetain(v18);
  v14 = objc_msgSend(v19, "itemURLString");
  if (v14)
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v11 = v3;

    v12 = v10;
    v13 = v11;
  }
  else
  {
    v12 = 0;
    v13 = 0;
  }
  swift_bridgeObjectRetain(v13);
  v23[0] = v17;
  v23[1] = v18;
  v23[2] = v12;
  v24 = v13;
  if (!v18)
  {
    if (!v24)
    {
      sub_1001F0D3C((uint64_t)v23);
      v9 = 1;
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  sub_1001F0E98(v23, &v21);
  if (!v24)
  {
    sub_1001F0D3C((uint64_t)&v21);
LABEL_14:
    sub_1001F0E64((uint64_t)v23);
    v9 = 0;
    goto LABEL_13;
  }
  v5 = v21;
  v7 = v22;
  swift_bridgeObjectRetain(v22);
  v6 = v24;
  swift_bridgeObjectRetain(v24);
  v8 = static String.== infix(_:_:)(v5);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  sub_1001F0D3C((uint64_t)v23);
  v9 = v8;
LABEL_13:
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v18);
  return v9 & 1;
}

uint64_t sub_1002407EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_10023F884(a1, a2);
  if (v2)
    return v4;
  else
    return v5;
}

uint64_t sub_100240850(uint64_t a1)
{
  return sub_10023FB50(a1);
}

uint64_t sub_100240880()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_10023FC48();
  if (v0)
    return v2;
  else
    return v3;
}

uint64_t sub_1002408E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024090C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_100240934()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100240970()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_1002409AC(void **a1)
{
  uint64_t v1;

  return sub_10024053C(a1, *(id *)(v1 + 16)) & 1;
}

uint64_t sub_1002409D4()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CID-filterunread-mini-tip", 0x19uLL, 1)._countAndFlagsBits;
}

uint64_t sub_100240A00()
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v32 = &v42;
  v42 = 0;
  v31 = &v40;
  v40 = 0;
  v30 = &v38;
  v38 = 0;
  v29 = &v36;
  v36 = 0;
  v28 = &v35;
  v35 = 0;
  v27 = &v34;
  v34 = 0;
  v11 = sub_10003A0C8(&qword_1005A5450);
  v3 = *(_QWORD *)(v11 - 8);
  v1 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v11);
  v14 = (char *)&v1 - v1;
  v19 = type metadata accessor for Tips.Rule(0);
  v6 = *(_QWORD *)(v19 - 8);
  v2 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  v21 = (char *)&v1 - v2;
  v4 = sub_100240E68();
  v5 = &v41;
  v9 = 32;
  v15 = 0;
  swift_beginAccess(v4);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12(v14, v4, v11);
  swift_endAccess(v5);
  v16 = &type metadata for Bool;
  v17 = &protocol witness table for Bool;
  v18 = &protocol witness table for Bool;
  Tips.Rule.init<A>(_:_:)(v14, sub_100240ECC, v15);
  v22 = static Tips.RuleBuilder.buildExpression(_:)(v21);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v21, v19);
  swift_bridgeObjectRetain(v22);
  v42 = v22;
  v7 = sub_10024104C();
  v8 = &v39;
  swift_beginAccess(v7);
  v12(v14, v7, v11);
  swift_endAccess(v8);
  Tips.Rule.init<A>(_:_:)(v14, sub_100240ECC, v15);
  v23 = static Tips.RuleBuilder.buildExpression(_:)(v21);
  v20(v21, v19);
  swift_bridgeObjectRetain(v23);
  v40 = v23;
  v10 = sub_1002410B0();
  v13 = &v37;
  swift_beginAccess(v10);
  v12(v14, v10, v11);
  swift_endAccess(v13);
  Tips.Rule.init<A>(_:_:)(v14, sub_100240ECC, v15);
  v25 = static Tips.RuleBuilder.buildExpression(_:)(v21);
  v20(v21, v19);
  swift_bridgeObjectRetain(v25);
  v38 = v25;
  v24 = static Tips.RuleBuilder.buildPartialBlock(first:)(v22);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRetain(v24);
  v36 = v24;
  v26 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRetain(v26);
  v35 = v26;
  v33 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRetain(v33);
  v34 = v33;
  sub_1001ED890(v27);
  sub_1001ED890(v28);
  sub_1001ED890(v29);
  sub_1001ED890(v30);
  sub_1001ED890(v31);
  sub_1001ED890(v32);
  return v33;
}

uint64_t sub_100240E68()
{
  uint64_t v0;

  if (qword_1005A36D0 != -1)
    swift_once(&qword_1005A36D0, sub_100241624);
  v0 = sub_10003A0C8(&qword_1005A5450);
  return sub_10003A088(v0, (uint64_t)qword_1005B9D20);
}

uint64_t sub_100240ECC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v11 = a2;
  v10 = a1;
  v21 = 0;
  v16 = sub_10003A0C8(&qword_1005A5470);
  v14 = *(_QWORD *)(v16 - 8);
  v8 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  v15 = (char *)&v8 - v8;
  v19 = sub_10003A0C8(&qword_1005A5478);
  v17 = *(_QWORD *)(v19 - 8);
  v9 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v10);
  v18 = (char *)&v8 - v9;
  v21 = v2;
  v13 = sub_100241A78();
  static PredicateExpressions.build_Arg<A>(_:)(v10, v19);
  v20 = 1;
  static PredicateExpressions.build_Arg<A>(_:)(&v20, &type metadata for Bool);
  v3 = sub_10003A0C8(&qword_1005A5488);
  v11[3] = v3;
  v4 = sub_100241AE8();
  v5 = v11;
  v11[4] = v4;
  v12 = sub_1001F2690(v5);
  v6 = sub_100241C6C();
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v18, v15, v19, v16, v13, v6, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v18, v19);
}

uint64_t sub_10024104C()
{
  uint64_t v0;

  if (qword_1005A36D8 != -1)
    swift_once(&qword_1005A36D8, sub_100241804);
  v0 = sub_10003A0C8(&qword_1005A5450);
  return sub_10003A088(v0, (uint64_t)qword_1005B9D38);
}

uint64_t sub_1002410B0()
{
  uint64_t v0;

  if (qword_1005A36C8 != -1)
    swift_once(&qword_1005A36C8, sub_1002414D8);
  v0 = sub_10003A0C8(&qword_1005A5450);
  return sub_10003A088(v0, (uint64_t)qword_1005B9D08);
}

uint64_t sub_100241114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];
  char *v29;
  char *v30;

  v30 = 0;
  v29 = 0;
  v21 = sub_10003A0C8(&qword_1005A5458);
  v18 = *(_QWORD *)(v21 - 8);
  v4 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v19 = (char *)&v3 - v4;
  v5 = (v0 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v3 - v4);
  v20 = (char *)&v3 - v5;
  v30 = (char *)&v3 - v5;
  v12 = type metadata accessor for Tips.UsesConstellation(0);
  v10 = *(_QWORD *)(v12 - 8);
  v6 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v12);
  v11 = (char *)&v3 - v6;
  v24 = sub_10003A0C8(&qword_1005A5460);
  v14 = *(_QWORD *)(v24 - 8);
  v8 = *(_QWORD *)(v14 + 64);
  v7 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  v15 = (char *)&v3 - v7;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v3 - v7);
  v23 = (char *)&v3 - v9;
  v29 = (char *)&v3 - v9;
  Tips.UsesConstellation.init(_:)(1);
  v13 = &protocol witness table for Tips.UsesConstellation;
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v11, v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v15, v23, v24);
  v28[0] = v12;
  v28[1] = v13;
  v17 = 1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v28, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>, 1);
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v15, v24);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v15, v24);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v19, v20, v21);
  v27[0] = v24;
  v27[1] = OpaqueTypeConformance2;
  v1 = swift_getOpaqueTypeConformance2(v27, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>, v17);
  v26 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v19, v21, v1);
  v22 = *(void (**)(char *, uint64_t))(v18 + 8);
  v22(v19, v21);
  v22(v20, v21);
  v25(v23, v24);
  return v26;
}

uint64_t sub_1002413D0()
{
  return sub_1002409D4();
}

uint64_t sub_1002413E4()
{
  return Tip.title.getter();
}

uint64_t sub_100241448()
{
  return Tip.message.getter();
}

uint64_t sub_10024145C()
{
  return Tip.image.getter();
}

uint64_t sub_100241470()
{
  return Tip.actions.getter();
}

uint64_t sub_100241484()
{
  return sub_100240A00();
}

uint64_t sub_100241498()
{
  return sub_100241114();
}

uint64_t sub_1002414AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v2;

  result = sub_1002409D4();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_1002414D8()
{
  Swift::String v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v4 = sub_10003A0C8(&qword_1005A5450);
  sub_10003A134(v4, qword_1005B9D08);
  sub_10003A088(v4, (uint64_t)qword_1005B9D08);
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("+shouldDisplayFilterByUnreadTip", 0x1FuLL, 1);
  v5 = 1;
  v1 = type metadata accessor for Tips.ParameterOption();
  v2 = _allocateUninitializedArray<A>(_:)(0, v1);
  return Tips.Parameter.init<A>(_:_:_:_:)(&unk_1005277F0, v0._countAndFlagsBits, v0._object, &v5, v2, &type metadata for Bool, &unk_1005277F0, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1002415B4()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  _QWORD v4[3];

  v0 = sub_1002410B0();
  swift_beginAccess(v0);
  v1 = sub_10003A0C8(&qword_1005A5450);
  Tips.Parameter.wrappedValue.getter(v4, v1);
  v3 = v4[0];
  swift_endAccess((char *)v4 + 1);
  return v3 & 1;
}

uint64_t sub_100241624()
{
  Swift::String v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v4 = sub_10003A0C8(&qword_1005A5450);
  sub_10003A134(v4, qword_1005B9D20);
  sub_10003A088(v4, (uint64_t)qword_1005B9D20);
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("+hasMoreThanTenEmails", 0x15uLL, 1);
  v5 = 0;
  v1 = type metadata accessor for Tips.ParameterOption();
  v2 = _allocateUninitializedArray<A>(_:)(0, v1);
  return Tips.Parameter.init<A>(_:_:_:_:)(&unk_1005277F0, v0._countAndFlagsBits, v0._object, &v5, v2, &type metadata for Bool, &unk_1005277F0, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1002416FC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  _QWORD v4[3];

  v0 = sub_100240E68();
  swift_beginAccess(v0);
  v1 = sub_10003A0C8(&qword_1005A5450);
  Tips.Parameter.wrappedValue.getter(v4, v1);
  v3 = v4[0];
  swift_endAccess((char *)v4 + 1);
  return v3 & 1;
}

uint64_t sub_10024176C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[31];
  _BYTE v6[9];

  v6[1] = a1 & 1;
  v1 = sub_100240E68();
  v6[0] = a1 & 1;
  swift_beginAccess(v1);
  v2 = sub_10003A0C8(&qword_1005A5450);
  Tips.Parameter.wrappedValue.setter(v6, v2);
  return swift_endAccess(v5);
}

uint64_t sub_100241804()
{
  Swift::String v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v4 = sub_10003A0C8(&qword_1005A5450);
  sub_10003A134(v4, qword_1005B9D38);
  sub_10003A088(v4, (uint64_t)qword_1005B9D38);
  v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("+hasOneUnread", 0xDuLL, 1);
  v5 = 0;
  v1 = type metadata accessor for Tips.ParameterOption();
  v2 = _allocateUninitializedArray<A>(_:)(0, v1);
  return Tips.Parameter.init<A>(_:_:_:_:)(&unk_1005277F0, v0._countAndFlagsBits, v0._object, &v5, v2, &type metadata for Bool, &unk_1005277F0, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1002418DC()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  _QWORD v4[3];

  v0 = sub_10024104C();
  swift_beginAccess(v0);
  v1 = sub_10003A0C8(&qword_1005A5450);
  Tips.Parameter.wrappedValue.getter(v4, v1);
  v3 = v4[0];
  swift_endAccess((char *)v4 + 1);
  return v3 & 1;
}

uint64_t sub_10024194C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[31];
  _BYTE v6[9];

  v6[1] = a1 & 1;
  v1 = sub_10024104C();
  v6[0] = a1 & 1;
  swift_beginAccess(v1);
  v2 = sub_10003A0C8(&qword_1005A5450);
  Tips.Parameter.wrappedValue.setter(v6, v2);
  return swift_endAccess(v5);
}

void *type metadata accessor for FilterByUnreadTip()
{
  return &unk_1005277F0;
}

unint64_t sub_1002419F8()
{
  return sub_100241A0C();
}

unint64_t sub_100241A0C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5468;
  if (!qword_1005A5468)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD394, &unk_1005277F0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5468);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100241A78()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5480;
  if (!qword_1005A5480)
  {
    v0 = sub_1001E7634(&qword_1005A5478);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PredicateExpressions.Variable<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5480);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100241AE8()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5490;
  if (!qword_1005A5490)
  {
    v2 = sub_1001E7634(&qword_1005A5488);
    sub_100241B74();
    sub_100241BE4();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5490);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100241B74()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5498;
  if (!qword_1005A5498)
  {
    v0 = sub_1001E7634(&qword_1005A5478);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PredicateExpressions.Variable<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5498);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100241BE4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A54A0;
  if (!qword_1005A54A0)
  {
    v0 = sub_1001E7634(&qword_1005A5470);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54A0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100241C6C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A54A8;
  if (!qword_1005A54A8)
  {
    v0 = sub_1001E7634(&qword_1005A5470);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for PredicateExpressions.Value<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54A8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100241CDC()
{
  _BYTE *v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = sub_10003A0C8(&qword_1005A54B0);
  v12 = _allocateUninitializedArray<A>(_:)(7, v13);
  v11 = v0;
  *v0 = 0;
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Red", 3uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v1._countAndFlagsBits, v1._object);
  v10 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72);
  v11[v10] = 1;
  v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Orange", 6uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v2._countAndFlagsBits, v2._object);
  v11[2 * v10] = 2;
  v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Yellow", 6uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v3._countAndFlagsBits, v3._object);
  v11[3 * v10] = 3;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Green", 5uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v11[4 * v10] = 4;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Blue", 4uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v11[5 * v10] = 5;
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Purple", 6uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v6._countAndFlagsBits, v6._object);
  v11[6 * v10] = 6;
  v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Gray", 4uLL, 1);
  DisplayRepresentation.init(stringLiteral:)(v7._countAndFlagsBits, v7._object);
  sub_10003CB20();
  v14 = type metadata accessor for DisplayRepresentation(0);
  v8 = sub_100241FBC();
  result = Dictionary.init(dictionaryLiteral:)(v12, &unk_1005278E8, v14, v8);
  qword_1005B9D50 = result;
  return result;
}

unint64_t sub_100241FBC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54B8;
  if (!qword_1005A54B8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD454, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54B8);
    return WitnessTable;
  }
  return v2;
}

uint64_t *sub_100242028()
{
  if (qword_1005A36E0 != -1)
    swift_once(&qword_1005A36E0, sub_100241CDC);
  return &qword_1005B9D50;
}

uint64_t sub_10024207C()
{
  uint64_t *v1;
  uint64_t v2;
  char v3[24];

  v1 = sub_100242028();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_bridgeObjectRetain(*v1);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_1002420D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  Builtin::Word v15;
  const char *v16;
  char *v17;
  Swift::String v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  const char *v27;
  uint64_t v28;
  __int16 v29;

  v16 = "Color of flag to set";
  v0 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v7 = (*(_QWORD *)(*(_QWORD *)(v0 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v0);
  v26 = (char *)&v7 - v7;
  v11 = 0;
  v8 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(v11);
  v20 = (uint64_t)&v7 - v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v11);
  v19 = (char *)&v7 - v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v11);
  v17 = (char *)&v7 - v10;
  v23 = type metadata accessor for LocalizedStringResource(v3);
  v21 = *(_QWORD *)(v23 - 8);
  v12 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v11);
  v25 = (char *)&v7 - v12;
  v14 = type metadata accessor for TypeDisplayRepresentation(v4);
  v13 = qword_1005B9D58;
  sub_10003A134(v14, qword_1005B9D58);
  v24 = sub_10003A088(v14, (uint64_t)v13);
  v15 = 10;
  v22 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Flag Color", 0xAuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", v15, v22 & 1);
  sub_1001E790C();
  sub_1001E7920(v20);
  v27 = v16;
  v28 = 20;
  v29 = 2;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, v18._countAndFlagsBits, v18._object, v19, v20, v16, 20, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v21 + 56))(v26, v22, v22, v23);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v25, v26);
}

uint64_t sub_100242360()
{
  uint64_t v0;

  if (qword_1005A36E8 != -1)
    swift_once(&qword_1005A36E8, sub_1002420D0);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9D58);
}

uint64_t sub_1002423C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = sub_100242360();
  swift_beginAccess(v3);
  v1 = type metadata accessor for TypeDisplayRepresentation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v3);
  return swift_endAccess(v5);
}

void sub_100242424(char a1)
{
  __asm { BR              X8 }
}

uint64_t sub_10024245C()
{
  return 0;
}

NSNumber sub_1002424D8(char a1)
{
  sub_100242424(a1);
  ConversationNavigationBarItemType.rawValue.getter();
  return UInt._bridgeToObjectiveC()();
}

uint64_t sub_100242504(uint64_t a1, void *a2)
{
  Swift::OpaquePointer v2;
  uint64_t v3;
  Swift::String v6;
  void *rawValue;
  Swift::Int v8;
  unsigned __int8 v9;

  v6._countAndFlagsBits = a1;
  v6._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(7, &type metadata for StaticString);
  *(_QWORD *)v3 = "red";
  *(_QWORD *)(v3 + 8) = 3;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = "orange";
  *(_QWORD *)(v3 + 32) = 6;
  *(_BYTE *)(v3 + 40) = 2;
  *(_QWORD *)(v3 + 48) = "yellow";
  *(_QWORD *)(v3 + 56) = 6;
  *(_BYTE *)(v3 + 64) = 2;
  *(_QWORD *)(v3 + 72) = "green";
  *(_QWORD *)(v3 + 80) = 5;
  *(_BYTE *)(v3 + 88) = 2;
  *(_QWORD *)(v3 + 96) = "blue";
  *(_QWORD *)(v3 + 104) = 4;
  *(_BYTE *)(v3 + 112) = 2;
  *(_QWORD *)(v3 + 120) = "purple";
  *(_QWORD *)(v3 + 128) = 6;
  *(_BYTE *)(v3 + 136) = 2;
  *(_QWORD *)(v3 + 144) = "gray";
  *(_QWORD *)(v3 + 152) = 4;
  *(_BYTE *)(v3 + 160) = 2;
  sub_10003CB20();
  rawValue = v2._rawValue;
  v8 = _findStringSwitchCase(cases:string:)(v2, v6);
  swift_bridgeObjectRelease(rawValue);
  switch(v8)
  {
    case 0:
      v9 = 0;
LABEL_16:
      swift_bridgeObjectRelease(v6._object);
      return v9;
    case 1:
      v9 = 1;
      goto LABEL_16;
    case 2:
      v9 = 2;
      goto LABEL_16;
    case 3:
      v9 = 3;
      goto LABEL_16;
    case 4:
      v9 = 4;
      goto LABEL_16;
    case 5:
      v9 = 5;
      goto LABEL_16;
    case 6:
      v9 = 6;
      goto LABEL_16;
  }
  swift_bridgeObjectRelease(v6._object);
  return 7;
}

uint64_t sub_100242780()
{
  uint64_t result;
  _BYTE *v1;

  result = _allocateUninitializedArray<A>(_:)(7, &unk_1005278E8);
  *v1 = 0;
  v1[1] = 1;
  v1[2] = 2;
  v1[3] = 3;
  v1[4] = 4;
  v1[5] = 5;
  v1[6] = 6;
  sub_10003CB20();
  return result;
}

void sub_1002427F4(char a1)
{
  __asm { BR              X8 }
}

uint64_t sub_100242834()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("red", 3uLL, 1)._countAndFlagsBits;
}

uint64_t sub_10024297C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1002429C4();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_1002429C4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54C0;
  if (!qword_1005A54C0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD494, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54C0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100242A30(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = sub_1002429C4();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_100242A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1002429C4();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_100242AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = sub_1002429C4();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_100242AF4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100242504(*(_QWORD *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100242B28(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1002427F4(*v1);
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100242B58@<X0>(uint64_t a1@<X8>)
{
  return sub_1002423C0(a1);
}

uint64_t sub_100242B6C(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100242BA0();
  return static AppEnum.defaultResolverSpecification.getter(a1, v1);
}

unint64_t sub_100242BA0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54C8;
  if (!qword_1005A54C8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD4CC, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54C8);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100242C0C()
{
  return sub_10024207C();
}

uint64_t sub_100242C20(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100242C54();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v1);
}

unint64_t sub_100242C54()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54D0;
  if (!qword_1005A54D0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD61C, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54D0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100242CC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100242780();
  *a1 = result;
  return result;
}

unint64_t sub_100242CE8()
{
  return sub_100242CFC();
}

unint64_t sub_100242CFC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54D8;
  if (!qword_1005A54D8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD42C, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54D8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100242D68()
{
  return sub_100242D7C();
}

unint64_t sub_100242D7C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54E0;
  if (!qword_1005A54E0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD50C, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54E0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100242DE8()
{
  return sub_100242DFC();
}

unint64_t sub_100242DFC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54E8;
  if (!qword_1005A54E8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD544, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54E8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100242E68()
{
  return sub_1002429C4();
}

unint64_t sub_100242E7C()
{
  return sub_100242E90();
}

unint64_t sub_100242E90()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54F0;
  if (!qword_1005A54F0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD574, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54F0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100242EFC()
{
  return sub_100242F10();
}

unint64_t sub_100242F10()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A54F8;
  if (!qword_1005A54F8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD59C, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A54F8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100242F7C()
{
  return sub_100242F90();
}

unint64_t sub_100242F90()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A9980;
  if (!qword_1005A9980)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD5C4, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A9980);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100242FFC()
{
  return sub_100242C54();
}

uint64_t sub_100243010(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100242BA0();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100243058()
{
  return sub_10024306C();
}

unint64_t sub_10024306C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5500;
  if (!qword_1005A5500)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD65C, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5500);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_1002430D8()
{
  return sub_1002430EC();
}

unint64_t sub_1002430EC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5508;
  if (!qword_1005A5508)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD684, &unk_1005278E8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5508);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100243158()
{
  return sub_100241FBC();
}

unint64_t sub_10024316C()
{
  return sub_100243180();
}

unint64_t sub_100243180()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5510;
  if (!qword_1005A5510)
  {
    v0 = sub_1001E7634(&qword_1005A5518);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5510);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002431F0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v5;
  int v6;
  unsigned int v7;
  int v8;

  if (a2)
  {
    if (a2 <= 0xF9)
      goto LABEL_15;
    v7 = ((a2 + 6) >> 8) + 1;
    v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000)
        v2 = 4;
      else
        v2 = 2;
      v8 = v2;
    }
    if (v8 == 1)
      v6 = a1[1];
    else
      v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    if (v6)
    {
      v5 = (*a1 | ((v6 - 1) << 8)) + 249;
    }
    else
    {
LABEL_15:
      v3 = *a1 - 7;
      if (v3 < 0)
        v3 = -1;
      v5 = v3;
    }
  }
  else
  {
    v5 = -1;
  }
  return (v5 + 1);
}

_BYTE *sub_1002433A0(_BYTE *result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;

  v7 = 0;
  if (a3 > 0xF9)
  {
    v5 = ((a3 + 6) >> 8) + 1;
    v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000)
        v3 = 4;
      else
        v3 = 2;
      v6 = v3;
    }
    v7 = v6;
  }
  if (a2 > 0xF9)
  {
    v4 = ((a2 - 250) >> 8) + 1;
    *result = a2 + 6;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }
      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }
  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }
      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }
      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }
    if (a2)
      *result = a2 + 6;
  }
  return result;
}

void *type metadata accessor for FlagColor()
{
  return &unk_1005278E8;
}

uint64_t sub_1002435F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char *v16;
  Swift::String v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  v27 = a1;
  v15 = "Launch an email composer to forward a message";
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A3970);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v22 = (char *)&v9 - v10;
  v24 = 0;
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v24);
  v19 = (uint64_t)&v9 - v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v24);
  v18 = (char *)&v9 - v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v3) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v24);
  v16 = (char *)&v9 - v13;
  v21 = type metadata accessor for LocalizedStringResource(v4);
  v20 = *(_QWORD *)(v21 - 8);
  v14 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (char *)&v9 - v14;
  v25 = 1;
  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("FORWARD_DESCRIPTION", 0x13uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v5._countAndFlagsBits, v5._object);
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v25 & 1);
  sub_1001E790C();
  sub_1001E7920(v19);
  v28 = v15;
  v29 = 45;
  v30 = 2;
  v26 = 0;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, v17._countAndFlagsBits, v17._object, v18, v19, v15, 45, 2);
  (*(void (**)(char *, _QWORD, _QWORD, uint64_t))(v20 + 56))(v22, v25, v25, v21);
  v6 = sub_1002004D0();
  IntentDescription.init(_:categoryName:searchKeywords:)(v23, v22, v6);
  v7 = type metadata accessor for IntentDescription(v24);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v27, v26, v25);
}

uint64_t sub_10024388C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v13 = a1;
  v12 = "Launch an email composer to forward a message";
  v8 = 0;
  v7 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(0) - 8) + 64)
      + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(0);
  v17 = (uint64_t)&v6 - v7;
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v1) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v16 = (char *)&v6 - v9;
  v3 = type metadata accessor for String.LocalizationValue(v2);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v14 = (char *)&v6 - v10;
  v11 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Forward Message", 0xFuLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v4._countAndFlagsBits, v4._object);
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v11 & 1);
  sub_1001E790C();
  sub_1001E7920(v17);
  v18 = v12;
  v19 = 45;
  v20 = 2;
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, v15._countAndFlagsBits, v15._object, v16, v17, v12, 45, 2);
}

uint64_t sub_100243A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *object;
  uint64_t KeyPath;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  char *v34;
  uint64_t countAndFlagsBits;

  v31 = a1;
  v1 = sub_10003A0C8(&qword_1005A5530);
  v14 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v34 = (char *)&v13 - v14;
  v27 = sub_10003A0C8(&qword_1005A5538);
  v26 = *(_QWORD *)(v27 - 8);
  v15 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v27);
  v29 = (char *)&v13 - v15;
  v16 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v13 - v15);
  v25 = (char *)&v13 - v16;
  v17 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v13 - v16);
  v28 = (char *)&v13 - v17;
  v33 = sub_100243D9C();
  v32 = &unk_100527AF8;
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 3);
  v30 = 1;
  v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Forward ", 8uLL, 1);
  object = v4._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(object);
  KeyPath = swift_getKeyPath(&unk_1004CD6D0);
  v5 = sub_10003A0C8(&qword_1005A5548);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v27, v5);
  swift_release(KeyPath);
  v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(" to ", 4uLL, v30 & 1);
  v20 = v6._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  swift_bridgeObjectRelease(v20);
  v21 = swift_getKeyPath(&unk_1004CD6F8);
  v7 = sub_10003A0C8(&qword_1005A5550);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v21, v27, v7);
  swift_release(v21);
  v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(" with ", 6uLL, v30 & 1);
  v22 = v8._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  swift_bridgeObjectRelease(v22);
  v23 = swift_getKeyPath(&unk_1004CD720);
  v9 = sub_10003A0C8(&qword_1005A5558);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v23, v27, v9);
  swift_release(v23);
  v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v30 & 1);
  v24 = v10._object;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_bridgeObjectRelease(v24);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v25, v28, v27);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v25, v27);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v27);
  ParameterSummaryString.init(stringInterpolation:)(v29, v32, v33);
  v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v30 & 1);
  countAndFlagsBits = v11._countAndFlagsBits;
  return IntentParameterSummary.init(_:table:_:)(v34, v11._countAndFlagsBits, v11._object, sub_100243FC4, 0, v32, v33);
}

unint64_t sub_100243D9C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5540;
  if (!qword_1005A5540)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD8DC, &unk_100527AF8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5540);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100243E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v0 + 64);
  v1 = swift_retain(v3);
  v4 = IntentParameter.projectedValue.getter(v1);
  swift_release(v3);
  return v4;
}

_QWORD *sub_100243E5C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100243E08();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

_QWORD *sub_100243EC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100243E5C(a1, a2);
}

_QWORD *sub_100243ED4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100208114();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

_QWORD *sub_100243F38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100243ED4(a1, a2);
}

_QWORD *sub_100243F4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100208048();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

_QWORD *sub_100243FB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100243F4C(a1, a2);
}

uint64_t sub_100243FC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_1004CD970);
  v12 = sub_100243D9C();
  v7 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(KeyPath);
  swift_release(KeyPath);
  swift_retain(v7);
  v4 = swift_getKeyPath(&unk_1004CD998);
  v8 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v4);
  swift_release(v4);
  swift_retain(v8);
  v5 = swift_getKeyPath(&unk_1004CD9C0);
  v9 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v5);
  swift_release(v5);
  swift_retain(v9);
  v6 = swift_getKeyPath(&unk_1004CD9E8);
  v10 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)(v6);
  swift_release(v6);
  swift_retain(v10);
  v11 = sub_10003A0C8(&qword_1005A55D8);
  v0 = _allocateUninitializedArray<A>(_:)(4, v11);
  *v1 = v7;
  v1[1] = v8;
  v1[2] = v9;
  v1[3] = v10;
  sub_10003CB20();
  v13 = v0;
  v14 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)(v0, &unk_100527AF8, v12);
  swift_bridgeObjectRelease(v13);
  swift_release(v10);
  swift_release(v9);
  swift_release(v8);
  swift_release(v7);
  return v14;
}

_QWORD *sub_10024417C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_100208464();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

_QWORD *sub_1002441E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_10020851C();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

_QWORD *sub_100244244@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_1002085D4();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

_QWORD *sub_1002442A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  _QWORD v5[9];
  _QWORD __dst[9];

  sub_100247FB4(a1, v5);
  memcpy(__dst, v5, sizeof(__dst));
  v2 = sub_10020868C();
  result = __dst;
  *a2 = v2;
  sub_1002480CC(__dst);
  return result;
}

void *sub_10024430C()
{
  return &unk_1005A5520;
}

uint64_t sub_100244318()
{
  char *v1;
  char v2;
  _BYTE v3[24];

  v1 = (char *)sub_10024430C();
  swift_beginAccess(v1);
  v2 = *v1;
  swift_endAccess(v3);
  return v2 & 1;
}

void *sub_10024436C@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[16];
  uint64_t v7;
  _BYTE __dst[128];

  v7 = v1;
  v4 = *(_QWORD *)(v1 + 64);
  v2 = swift_retain(v4);
  IntentParameter.wrappedValue.getter(v6, v2);
  memcpy(__dst, v6, sizeof(__dst));
  swift_release(v4);
  return memcpy(a1, __dst, 0x80uLL);
}

_QWORD *sub_1002443EC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *result;
  _BYTE __dst[128];
  uint64_t v5;
  _QWORD *v6;

  v6 = a1;
  v5 = v1;
  swift_retain(*(_QWORD *)(v1 + 64));
  sub_10024446C(a1);
  memcpy(__dst, a1, sizeof(__dst));
  IntentParameter.wrappedValue.setter();
  swift_release();
  result = a1;
  sub_100244578(a1);
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10024446C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = a1[2];
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[11];
  v11 = a1[12];
  v12 = a1[13];
  v13 = a1[14];
  v14 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v14);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100244578(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = a1[2];
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[11];
  v11 = a1[12];
  v12 = a1[13];
  v13 = a1[14];
  v14 = a1[15];
  swift_bridgeObjectRelease(a1[1]);
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  swift_release(v9);
  swift_release(v10);
  swift_release(v11);
  swift_release(v12);
  swift_release(v13);
  swift_release(v14);
}

uint64_t sub_100244684(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[88] = v1;
  v2[87] = a1;
  v2[71] = v2;
  v2[72] = 0;
  v2[78] = 0;
  v2[69] = 0;
  v2[70] = 0;
  v2[84] = 0;
  v2[85] = 0;
  v3 = type metadata accessor for Logger(0);
  v2[89] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[90] = v4;
  v8 = *(_QWORD *)(v4 + 64);
  v2[91] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[92] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10003A0C8((uint64_t *)&unk_1005A4BB0);
  v2[93] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[72] = v1;
  v9 = type metadata accessor for MainActor(0);
  v2[94] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v2[95] = v10;
  v2[96] = v6;
  return swift_task_switch(sub_1002447A8, v10);
}

uint64_t sub_1002447A8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *__src;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint32_t v43;
  os_log_type_t v44;
  NSObject *log;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint8_t *buf;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint32_t size;
  os_log_type_t v63;
  NSObject *oslog;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const void *v88;
  void *v89;
  uint64_t v90;
  void *v91;

  *(_QWORD *)(v0 + 568) = v0;
  v91 = (void *)sub_1002087A4();
  sub_1002B5A94();
  v88 = *(const void **)(v90 + 704);

  memcpy((void *)(v90 + 216), v88, 0x48uLL);
  *(_QWORD *)(v90 + 776) = sub_100207598();
  v89 = (void *)sub_10020690C((uint64_t)&unk_100527AF8);
  if (v89)
  {
    *(_QWORD *)(v90 + 688) = &OBJC_PROTOCOL___ComposeCapable;
    v87 = swift_dynamicCastObjCProtocolConditional(v89, 1, v90 + 688);
    if (v87)
    {
      v86 = v87;
    }
    else
    {

      v86 = 0;
    }
    v85 = v86;
  }
  else
  {
    v85 = 0;
  }
  *(_QWORD *)(v90 + 784) = v85;
  if (!v85)
  {
    v15 = *(_QWORD *)(v90 + 728);
    v38 = *(_QWORD *)(v90 + 720);
    v40 = *(_QWORD *)(v90 + 712);
    v39 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v15, v39, v40);
    v16 = swift_endAccess(v90 + 504);
    log = Logger.logObject.getter(v16);
    v44 = static os_log_type_t.error.getter();
    *(_QWORD *)(v90 + 584) = 2;
    v41 = sub_1001EB1EC();
    v42 = sub_1001EB254();
    v17 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v90 + 856), v90 + 584, &type metadata for UInt32, &type metadata for Int, v41, v42, v17);
    v43 = *(_DWORD *)(v90 + 856);
    v18 = sub_10003A0C8(qword_1005A5580);
    v46 = _allocateUninitializedArray<A>(_:)(0, v18);
    if (os_log_type_enabled(log, v44))
    {
      v33 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v32 = sub_10003A0C8(&qword_1005A3AD0);
      v34 = sub_1001ED340(0, v32, v32);
      v35 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v90 + 592) = v33;
      *(_QWORD *)(v90 + 600) = v34;
      *(_QWORD *)(v90 + 608) = v35;
      sub_1001ED398(0, (_BYTE **)(v90 + 592));
      sub_1001ED398(0, (_BYTE **)(v90 + 592));
      *(_QWORD *)(v90 + 616) = v46;
      v36 = (_QWORD *)swift_task_alloc(48);
      v36[2] = v90 + 592;
      v36[3] = v90 + 600;
      v36[4] = v90 + 608;
      v37 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v19 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v36, v37, v19);
      swift_task_dealloc(v36);
      _os_log_impl((void *)&_mh_execute_header, log, v44, "Failed to find a scene capable of composing", v33, v43);
      sub_1001ED3F0(v34, 0);
      sub_1001ED3F0(v35, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v46);
    v28 = *(_QWORD *)(v90 + 728);
    v27 = *(_QWORD *)(v90 + 720);
    v29 = *(_QWORD *)(v90 + 712);
    __src = *(_QWORD **)(v90 + 704);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    v20 = sub_10020AFDC();
    swift_allocError(&unk_100529530, v20, 0, 0);
    v31 = v21;
    sub_100247240(__src);
    *(_QWORD *)(v31 + 24) = &unk_100527AF8;
    *(_QWORD *)(v31 + 32) = sub_100243D9C();
    v22 = swift_allocObject(&unk_100527A78, 88, 7);
    *(_QWORD *)v31 = v22;
    v23 = memcpy((void *)(v22 + 16), __src, 0x48uLL);
    *(_BYTE *)(v31 + 40) = 0;
    swift_willThrow(v23);
    goto LABEL_21;
  }
  v82 = *(_QWORD *)(v90 + 744);
  *(_QWORD *)(v90 + 624) = v85;
  sub_10024436C((void *)(v90 + 16));
  v81 = *(_QWORD *)(v90 + 16);
  v80 = *(_QWORD *)(v90 + 24);
  swift_bridgeObjectRetain(v80);
  sub_100244578((_QWORD *)(v90 + 16));
  MailMessageEntityID.init(with:)(v81, v80);
  v83 = type metadata accessor for MailMessageEntityID(0);
  v84 = *(_QWORD *)(v83 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v84 + 48))(v82, 1) == 1)
  {
    sub_10020D830(*(_QWORD *)(v90 + 744));
    v78 = 0;
    v79 = 0;
  }
  else
  {
    v75 = *(_QWORD *)(v90 + 744);
    v76 = MailMessageEntityID.uniqueIdentifier.getter();
    v77 = v1;
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v75, v83);
    v78 = v76;
    v79 = v77;
  }
  *(_QWORD *)(v90 + 792) = v79;
  if (!v79)
  {
    v7 = *(_QWORD *)(v90 + 736);
    v57 = *(_QWORD *)(v90 + 720);
    v59 = *(_QWORD *)(v90 + 712);
    v58 = Logger.appIntentLogger.unsafeMutableAddressor();
    swift_beginAccess(v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v7, v58, v59);
    v8 = swift_endAccess(v90 + 528);
    oslog = Logger.logObject.getter(v8);
    v63 = static os_log_type_t.error.getter();
    *(_QWORD *)(v90 + 632) = 2;
    v60 = sub_1001EB1EC();
    v61 = sub_1001EB254();
    v9 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)((_QWORD *)(v90 + 860), v90 + 632, &type metadata for UInt32, &type metadata for Int, v60, v61, v9);
    size = *(_DWORD *)(v90 + 860);
    v10 = sub_10003A0C8(qword_1005A5580);
    v65 = _allocateUninitializedArray<A>(_:)(0, v10);
    if (os_log_type_enabled(oslog, v63))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
      v51 = sub_10003A0C8(&qword_1005A3AD0);
      v53 = sub_1001ED340(0, v51, v51);
      v54 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(_QWORD *)(v90 + 640) = buf;
      *(_QWORD *)(v90 + 648) = v53;
      *(_QWORD *)(v90 + 656) = v54;
      sub_1001ED398(0, (_BYTE **)(v90 + 640));
      sub_1001ED398(0, (_BYTE **)(v90 + 640));
      *(_QWORD *)(v90 + 664) = v65;
      v55 = (_QWORD *)swift_task_alloc(48);
      v55[2] = v90 + 640;
      v55[3] = v90 + 648;
      v55[4] = v90 + 656;
      v56 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
      v11 = sub_1001F5C14();
      Sequence.forEach(_:)(sub_1001F5BE8, v55, v56, v11);
      swift_task_dealloc(v55);
      _os_log_impl((void *)&_mh_execute_header, oslog, v63, "#SiriMail ForwardMessageIntent perform: failed to get uniqueIdentifier, throwing error", buf, size);
      sub_1001ED3F0(v53, 0);
      sub_1001ED3F0(v54, 0);
      UnsafeMutablePointer.deallocate()();
    }
    swift_bridgeObjectRelease(v65);
    v48 = *(_QWORD *)(v90 + 736);
    v47 = *(_QWORD *)(v90 + 720);
    v49 = *(_QWORD *)(v90 + 712);

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
    v50 = type metadata accessor for ToolboxErrors(0);
    v12 = sub_1002053C0();
    swift_allocError(v50, v12, 0, 0);
    v14 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v50 - 8) + 104))(v13, enum case for ToolboxErrors.noMessagesFound(_:));
    swift_willThrow(v14);
    swift_unknownObjectRelease(v85);
LABEL_21:
    v24 = *(_QWORD *)(v90 + 744);
    v25 = *(_QWORD *)(v90 + 736);
    v26 = *(_QWORD *)(v90 + 728);
    swift_release(*(_QWORD *)(v90 + 752));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(*(_QWORD *)(v90 + 568) + 8))();
  }
  *(_QWORD *)(v90 + 552) = v78;
  *(_QWORD *)(v90 + 560) = v79;
  v73 = (id)sub_1002087A4();
  v74 = objc_msgSend(v73, "daemonInterface");

  if (!v74)
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while implicitly unwrapping an Optional value", 68, 2, "MobileMail/ForwardMessageIntent.swift", 37, 2, 108, 0);
  v67 = objc_msgSend(v74, "messageRepository");

  swift_bridgeObjectRetain(v79);
  v66 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v79);
  v68 = objc_msgSend(v67, "messageForSearchableItemIdentifier:", v66);

  v72 = objc_msgSend(v68, "result");
  *(_QWORD *)(v90 + 800) = v72;
  *(_QWORD *)(v90 + 672) = v72;

  *(_QWORD *)(v90 + 808) = sub_10020B244();
  v2 = v72;
  v69 = sub_100208C24();
  v70 = v3;
  v71 = v4;
  *(_QWORD *)(v90 + 816) = v69;
  *(_QWORD *)(v90 + 824) = v3;
  *(_QWORD *)(v90 + 832) = v4;
  v5 = (_QWORD *)swift_task_alloc(dword_1005A48B4);
  *(_QWORD *)(v90 + 840) = v5;
  *v5 = *(_QWORD *)(v90 + 568);
  v5[1] = sub_100245510;
  return sub_10020644C((uint64_t)v72, v69, v70, v71);
}

uint64_t sub_100245510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v8 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 840);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 832);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 824);
  v5 = *(void **)(*(_QWORD *)v1 + 816);
  v8[71] = *(_QWORD *)v1;
  v8[106] = a1;
  swift_task_dealloc(v3);
  sub_100208D3C(v5, v6, v7);
  return swift_task_switch(sub_1002455AC, v8[95]);
}

uint64_t sub_1002455AC()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  unint64_t v4;
  void *__src;
  uint64_t (**v7)(_QWORD);
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (void *)v0[106];
  v2 = (void *)v0[100];
  v9 = v2;
  v10 = v0[99];
  v11 = (void *)v0[98];
  v7 = (uint64_t (**)(_QWORD))v0[97];
  v12 = v0[94];
  v13 = v0[93];
  v14 = v0[92];
  v15 = v0[91];
  __src = (void *)v0[88];
  v0[71] = (uint64_t)v0;
  v8 = sub_100246C48(v2, v1);
  v0[85] = (uint64_t)v8;
  memcpy(v0 + 36, __src, 0x48uLL);
  sub_10020575C(v8, (uint64_t)&unk_100527AF8, v7);
  memcpy(v0 + 45, __src, 0x48uLL);
  sub_100206AD0(v11, (uint64_t)v8);
  v3 = v9;
  sub_100238410(v9, v0 + 18);
  memcpy(v0 + 54, v0 + 18, 0x48uLL);
  v4 = sub_10020B2A8();
  static IntentResult.result<A>(value:)(v0 + 54, &unk_100527368, v4);
  sub_10020B310(v0 + 18);

  swift_bridgeObjectRelease(v10);
  swift_unknownObjectRelease(v11);
  swift_release(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0[71] + 8))();
}

uint64_t sub_100245760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String *v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  Swift::String v51;
  const char *v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Builtin::Word v57;
  const char *v58;
  uint64_t v59;
  Swift::String v60;
  uint64_t v61;
  Swift::String v62;
  const char *v63;
  uint64_t v64;
  Swift::String v65;
  unsigned int *v66;
  uint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t);
  uint64_t v69;
  unint64_t v70;
  char *v71;
  Swift::String v72;
  const char *v73;
  uint64_t v74;
  Swift::String v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  Swift::String v79;
  const char *v80;
  uint64_t v81;
  Swift::String v82;
  uint64_t v83;
  void (*v84)(char *, _QWORD);
  uint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  char *v88;
  Builtin::Word v89;
  Swift::String v90;
  Builtin::Word v91;
  const char *v92;
  uint64_t v93;
  Swift::String v94;
  unint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  unint64_t v98;
  Swift::String v99;
  const char *v100;
  uint64_t v101;
  Swift::String v102;
  Builtin::Word v103;
  Swift::String *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  Builtin::Word v110;
  Swift::String v111;
  char *v112;
  Builtin::Word v113;
  const char *v114;
  uint64_t v115;
  int v116;
  char *v117;
  Swift::String v118;
  char *v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t v122;
  void (*v123)(char *, _QWORD, _QWORD, uint64_t);
  _QWORD *v124;
  unsigned int v125;
  uint64_t v126;
  void (*v127)(char *, _QWORD);
  unint64_t v128;
  char *v129;
  char *v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  _QWORD v147[18];
  unsigned __int16 v148;
  const char *v149;
  uint64_t v150;
  unsigned __int16 v151;
  _QWORD v152[3];
  unsigned __int16 v153;
  const char *v154;
  uint64_t v155;
  unsigned __int16 v156;
  _BYTE v157[24];
  const char *v158;
  uint64_t v159;
  unsigned __int16 v160;
  const char *v161;
  uint64_t v162;
  unsigned __int16 v163;
  _QWORD v164[4];
  unsigned __int16 v165;
  const char *v166;
  uint64_t v167;
  unsigned __int16 v168;
  _QWORD v169[4];
  unsigned __int16 v170;
  const char *v171;
  uint64_t v172;
  unsigned __int16 v173;
  const char *v174;
  uint64_t v175;
  unsigned __int16 v176;
  const char *v177;
  uint64_t v178;
  unsigned __int16 v179;
  const char *v180;
  uint64_t v181;
  unsigned __int16 v182;
  const char *v183;
  uint64_t v184;
  unsigned __int16 v185;
  const char *v186;
  uint64_t v187;
  unsigned __int16 v188;
  const char *v189;
  uint64_t v190;
  unsigned __int16 v191;
  _BYTE v192[40];
  _QWORD __b[9];
  _QWORD v194[16];

  v145 = a1;
  v52 = "To recipients of the email message";
  v58 = "Cc recipients of the email message";
  v63 = "Bcc recipients of the email message";
  v73 = "Subject of the email message";
  v80 = "Body text of the email message";
  v92 = "Account to send the email message with";
  v100 = "Attachments of the email message";
  v114 = "Email message to forward";
  v136 = __b;
  v121 = 0;
  memset(__b, 0, sizeof(__b));
  v1 = sub_10003A0C8((uint64_t *)&unk_1005A4A58);
  v40 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v88 = (char *)&v39 - v40;
  v76 = 0;
  v2 = type metadata accessor for InputConnectionBehavior(0);
  v41 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v134 = (uint64_t)&v39 - v41;
  v42 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A4710) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v76);
  v133 = (char *)&v39 - v42;
  v43 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v3);
  v132 = (char *)&v39 - v43;
  v67 = type metadata accessor for IntentPerson.ParameterMode(v5);
  v55 = *(_QWORD *)(v67 - 8);
  v44 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v67);
  v71 = (char *)&v39 - v44;
  v45 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8((uint64_t *)&unk_1005A3970) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v76);
  v130 = (char *)&v39 - v45;
  v46 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for LocalizedStringResource.BundleDescription(v6) - 8) + 64)
       + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v76);
  v120 = (uint64_t)&v39 - v46;
  v47 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Locale(v7) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v76);
  v119 = (char *)&v39 - v47;
  v48 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for String.LocalizationValue(v8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v76);
  v117 = (char *)&v39 - v48;
  v122 = type metadata accessor for LocalizedStringResource(v9);
  v54 = *(_QWORD *)(v122 - 8);
  v49 = (*(_QWORD *)(v54 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v122);
  v129 = (char *)&v39 - v49;
  sub_10003A0C8(&qword_1005A5100);
  v50 = v192;
  memset(v192, 0, sizeof(v192));
  sub_100202C84();
  v10 = sub_100304804();
  v137 = AppDependency.__allocating_init(key:manager:)(v50, v10);
  swift_retain(v137);
  __b[0] = v137;
  v61 = sub_10003A0C8((uint64_t *)&unk_1005A4A68);
  v125 = 1;
  v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Recipient", 9uLL, 1);
  String.LocalizationValue.init(stringLiteral:)(v11._countAndFlagsBits, v11._object);
  v112 = "AppIntents";
  v113 = 10;
  v51 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("AppIntents", 0xAuLL, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v189 = v52;
  v59 = 34;
  v190 = 34;
  v116 = 2;
  LOBYTE(v191) = 2;
  HIBYTE(v191) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v51._countAndFlagsBits, v51._object, v119, v120, v52, 34, v191);
  v57 = 14;
  v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("TO_DESCRIPTION", 0xEuLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v12._countAndFlagsBits, v12._object);
  v53 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v186 = v52;
  v187 = v59;
  LOBYTE(v188) = v116;
  HIBYTE(v188) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v53._countAndFlagsBits, v53._object, v119, v120, v52, v59, v188);
  v123 = *(void (**)(char *, _QWORD, _QWORD, uint64_t))(v54 + 56);
  v123(v130, v121, v125, v122);
  v66 = (unsigned int *)&enum case for IntentPerson.ParameterMode.email(_:);
  v68 = *(void (**)(char *, _QWORD, uint64_t))(v55 + 104);
  v68(v71, enum case for IntentPerson.ParameterMode.email(_:), v67);
  v126 = type metadata accessor for IntentDialog(v76);
  v127 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v126 - 8) + 56);
  v127(v132, v125);
  v69 = sub_10003A0C8(&qword_1005A48A0);
  v70 = sub_10020BE98();
  sub_1002F0FA0(v134);
  v138 = IntentParameter<>.init(title:description:mode:requestValueDialog:inputConnectionBehavior:)(v129, v130, v71, v132, v134);
  swift_retain(v138);
  __b[1] = v138;
  v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Cc", 2uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v13._countAndFlagsBits, v13._object);
  v56 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v183 = v58;
  v184 = v59;
  LOBYTE(v185) = v116;
  HIBYTE(v185) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v56._countAndFlagsBits, v56._object, v119, v120, v58, v59, v185);
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CC_DESCRIPTION", v57, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v14._countAndFlagsBits, v14._object);
  v60 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v180 = v58;
  v181 = v59;
  LOBYTE(v182) = v116;
  HIBYTE(v182) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v60._countAndFlagsBits, v60._object, v119, v120, v58, v59, v182);
  v123(v130, v121, v125, v122);
  v68(v71, *v66, v67);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  sub_1002F0FA0(v134);
  v139 = IntentParameter<>.init(title:description:mode:requestValueDialog:inputConnectionBehavior:)(v129, v130, v71, v132, v134);
  swift_retain(v139);
  __b[2] = v139;
  v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Bcc", 3uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v15._countAndFlagsBits, v15._object);
  v62 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v177 = v63;
  v64 = 35;
  v178 = 35;
  LOBYTE(v179) = v116;
  HIBYTE(v179) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v62._countAndFlagsBits, v62._object, v119, v120, v63, 35, v179);
  v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("BCC_DESCRIPTION", 0xFuLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v16._countAndFlagsBits, v16._object);
  v65 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v174 = v63;
  v175 = v64;
  LOBYTE(v176) = v116;
  HIBYTE(v176) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v65._countAndFlagsBits, v65._object, v119, v120, v63, v64, v176);
  v123(v130, v121, v125, v122);
  v68(v71, *v66, v67);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  sub_1002F0FA0(v134);
  v140 = IntentParameter<>.init(title:description:mode:requestValueDialog:inputConnectionBehavior:)(v129, v130, v71, v132, v134);
  swift_retain(v140);
  __b[3] = v140;
  v78 = sub_10003A0C8(&qword_1005A4A88);
  v110 = 7;
  v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Subject", 7uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v17._countAndFlagsBits, v17._object);
  v72 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v171 = v73;
  v74 = 28;
  v172 = 28;
  LOBYTE(v173) = v116;
  HIBYTE(v173) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v72._countAndFlagsBits, v72._object, v119, v120, v73, 28, v173);
  v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SUBJECT_DESCRIPTION", 0x13uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v18._countAndFlagsBits, v18._object);
  v75 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v169[2] = v73;
  v169[3] = v74;
  LOBYTE(v170) = v116;
  HIBYTE(v170) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v75._countAndFlagsBits, v75._object, v119, v120, v73, v74, v170);
  v123(v130, v121, v125, v122);
  v77 = v169;
  v169[0] = 0;
  v169[1] = 0;
  v83 = type metadata accessor for String.IntentInputOptions(v76);
  v84 = *(void (**)(char *, _QWORD))(*(_QWORD *)(v83 - 8) + 56);
  v84(v88, v125);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  v85 = sub_10003A0C8(&qword_1005A4A90);
  v86 = sub_10020BF84();
  sub_1002F0FA0(v134);
  v141 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v129, v130, v77, v88, v132, v134);
  swift_retain(v141);
  __b[4] = v141;
  v89 = 4;
  v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Body", 4uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v19._countAndFlagsBits, v19._object);
  v79 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v166 = v80;
  v81 = 30;
  v167 = 30;
  LOBYTE(v168) = v116;
  HIBYTE(v168) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v79._countAndFlagsBits, v79._object, v119, v120, v80, 30, v168);
  v91 = 16;
  v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("BODY_DESCRIPTION", 0x10uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v20._countAndFlagsBits, v20._object);
  v82 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v164[2] = v80;
  v164[3] = v81;
  LOBYTE(v165) = v116;
  HIBYTE(v165) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v82._countAndFlagsBits, v82._object, v119, v120, v80, v81, v165);
  v123(v130, v121, v125, v122);
  v87 = v164;
  v164[0] = 0;
  v164[1] = 0;
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v84)(v88, v125, v125, v83);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  sub_1002F0FA0(v134);
  v142 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v129, v130, v87, v88, v132, v134);
  swift_retain(v142);
  __b[5] = v142;
  sub_10003A0C8(&qword_1005A4AA8);
  v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("From", v89, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v21._countAndFlagsBits, v21._object);
  v90 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v161 = v92;
  v93 = 38;
  v162 = 38;
  LOBYTE(v163) = v116;
  HIBYTE(v163) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v90._countAndFlagsBits, v90._object, v119, v120, v92, 38, v163);
  v22 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("FROM_DESCRIPTION", v91, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v22._countAndFlagsBits, v22._object);
  v94 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v158 = v92;
  v159 = v93;
  LOBYTE(v160) = v116;
  HIBYTE(v160) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v94._countAndFlagsBits, v94._object, v119, v120, v92, v93, v160);
  v123(v130, v121, v125, v122);
  v97 = v157;
  memset(v157, 0, sizeof(v157));
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v133, v125, v125, v126);
  v96 = sub_10003A0C8(&qword_1005A4AB0);
  v95 = sub_10020C068();
  v98 = sub_1001ED7B8();
  sub_1002F0FA0(v134);
  v143 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v129, v130, v97, v132, v133, v134, v98);
  swift_retain(v143);
  __b[6] = v143;
  sub_10003A0C8((uint64_t *)&unk_1005A4AC0);
  v103 = 11;
  v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Attachments", 0xBuLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v23._countAndFlagsBits, v23._object);
  v99 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v154 = v100;
  v101 = 32;
  v155 = 32;
  LOBYTE(v156) = v116;
  HIBYTE(v156) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v99._countAndFlagsBits, v99._object, v119, v120, v100, 32, v156);
  v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ATTACHMENTS_DESCRIPTION", 0x17uLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v24._countAndFlagsBits, v24._object);
  v102 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v152[1] = v100;
  v152[2] = v101;
  LOBYTE(v153) = v116;
  HIBYTE(v153) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v102._countAndFlagsBits, v102._object, v119, v120, v100, v101, v153);
  v123(v130, v121, v125, v122);
  v108 = v152;
  v152[0] = 0;
  v106 = &type metadata for String;
  v105 = _allocateUninitializedArray<A>(_:)(1, &type metadata for String);
  v104 = v25;
  v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("public.item", v103, v125 & 1);
  v27 = v105;
  *v104 = v26;
  sub_10003CB20();
  v109 = v27;
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  v107 = sub_10003A0C8(&qword_1005A4888);
  sub_10020C0E4();
  sub_1002F0FA0(v134);
  v144 = IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)(v129, v130, v108, v109, v132, v134);
  swift_retain(v144);
  __b[7] = v144;
  sub_10003A0C8(&qword_1005A55D0);
  v28 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Message", v110, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v28._countAndFlagsBits, v28._object);
  v111 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v149 = v114;
  v115 = 24;
  v150 = 24;
  LOBYTE(v151) = v116;
  HIBYTE(v151) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v111._countAndFlagsBits, v111._object, v119, v120, v114, 24, v151);
  v29 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("FORWARD_MESSAGE_DESCRIPTION", 0x1BuLL, v125 & 1);
  String.LocalizationValue.init(stringLiteral:)(v29._countAndFlagsBits, v29._object);
  v118 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v112, v113, v125 & 1);
  sub_1001E790C();
  sub_1001E7920(v120);
  v147[16] = v114;
  v147[17] = v115;
  LOBYTE(v148) = v116;
  HIBYTE(v148) = v121 & 1 & v125;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v117, v118._countAndFlagsBits, v118._object, v119, v120, v114, v115, v148);
  v123(v130, v121, v125, v122);
  v124 = v194;
  sub_100247E30(v194);
  v131 = v147;
  sub_100247E74(v124, v147);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v132, v125, v125, v126);
  ((void (*)(char *, _QWORD, _QWORD, uint64_t))v127)(v133, v125, v125, v126);
  v128 = sub_1002017AC();
  v135 = sub_100202CE8();
  sub_1002F0FA0(v134);
  v146 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v129, v130, v131, v132, v133, v134, v135);
  swift_retain(v146);
  __b[8] = v146;
  swift_retain(v137);
  swift_retain(v138);
  swift_retain(v139);
  swift_retain(v140);
  swift_retain(v141);
  swift_retain(v142);
  swift_retain(v143);
  swift_retain(v144);
  swift_retain(v146);
  swift_release(v146);
  swift_release(v144);
  swift_release(v143);
  swift_release(v142);
  swift_release(v141);
  swift_release(v140);
  swift_release(v139);
  swift_release(v138);
  swift_release(v137);
  sub_100247EDC(v136);
  v30 = v138;
  v31 = v139;
  v32 = v140;
  v33 = v141;
  v34 = v142;
  v35 = v143;
  v36 = v144;
  v37 = v145;
  result = v146;
  *v145 = v137;
  v37[1] = v30;
  v37[2] = v31;
  v37[3] = v32;
  v37[4] = v33;
  v37[5] = v34;
  v37[6] = v35;
  v37[7] = v36;
  v37[8] = result;
  return result;
}

id sub_100246C48(void *a1, void *a2)
{
  id v2;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_100247368(a1, a2);
}

uint64_t sub_100246C8C()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_1002087FC();
}

uint64_t sub_100246CC8()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_1002088C4();
}

uint64_t sub_100246D04()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_10020898C();
}

uint64_t sub_100246D40()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_100208A54();
}

uint64_t sub_100246D7C()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_100208B3C();
}

uint64_t sub_100246DB8()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_100208C24();
}

uint64_t sub_100246DF4()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_100208D8C();
}

uint64_t sub_100246E30@<X0>(uint64_t a1@<X8>)
{
  return sub_10024388C(a1);
}

uint64_t sub_100246E44()
{
  return sub_100244318() & 1;
}

uint64_t sub_100246E5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100243A30(a1);
}

uint64_t sub_100246E70@<X0>(uint64_t a1@<X8>)
{
  return sub_1002435F8(a1);
}

uint64_t sub_100246E84(uint64_t a1)
{
  const void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  *(_QWORD *)(v2 + 88) = v2;
  memcpy((void *)(v2 + 16), v1, 0x48uLL);
  v3 = (_QWORD *)swift_task_alloc(dword_1005A5564);
  *(_QWORD *)(v5 + 96) = v3;
  *v3 = *(_QWORD *)(v5 + 88);
  v3[1] = sub_100246F0C;
  return sub_100244684(a1);
}

_QWORD *sub_100246F0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  *(_QWORD *)(v1 + 88) = *v0;
  v4 = (_QWORD *)(v1 + 88);
  swift_task_dealloc(v2);
  return (*(_QWORD *(**)(_QWORD *__return_ptr))(*v4 + 8))(v4);
}

void *sub_100246FA0@<X0>(void *a1@<X8>)
{
  uint64_t v3[9];

  sub_100245760(v3);
  return memcpy(a1, v3, 0x48uLL);
}

uint64_t sub_100246FDC(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_100243D9C();
  return static AppIntent.persistentIdentifier.getter(a1, v1);
}

uint64_t sub_100247008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = 0;
  v13 = type metadata accessor for AssistantSchema.IntentSchema();
  v9 = *(_QWORD *)(v13 - 8);
  v5 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v0 = __chkstk_darwin(0);
  v12 = (char *)&v4 - v5;
  v6 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v0);
  v10 = (char *)&v4 - v6;
  v8 = type metadata accessor for AssistantSchema(v2);
  v7 = qword_1005B9D70;
  sub_10003A134(v8, qword_1005B9D70);
  v11 = sub_10003A088(v8, (uint64_t)v7);
  sub_1002022A0();
  sub_10024710C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v10, v13);
  return AssistantSchema.init<A>(_:)(v12, v13);
}

uint64_t sub_10024710C()
{
  Swift::String v0;
  Swift::String v1;

  if (!sub_10038B0DC(18, 0, 0))
  {
    v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Do not reference schema types directly", 0x26uLL, 1);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v0._countAndFlagsBits, v0._object, "AppIntents/arm64-apple-ios.private.swiftinterface", 49);
    __break(1u);
  }
  v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ForwardMailIntent", 0x11uLL, 1);
  return AssistantSchema.IntentSchema.init(_:)(v1._countAndFlagsBits, v1._object);
}

uint64_t sub_1002471E0()
{
  uint64_t v0;

  if (qword_1005A36F0 != -1)
    swift_once(&qword_1005A36F0, sub_100247008);
  v0 = type metadata accessor for AssistantSchema(0);
  return sub_10003A088(v0, (uint64_t)qword_1005B9D70);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100247240(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  swift_retain(*a1);
  swift_retain(v1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
}

uint64_t sub_1002472EC()
{
  _QWORD *v0;
  uint64_t v2;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  swift_release(v0[10]);
  return swift_deallocObject(v2, 88);
}

id sub_100247368(void *a1, void *a2)
{
  void *v2;
  id v6;

  v6 = objc_msgSend(v2, "initForwardOfMessage:legacyMessage:");

  return v6;
}

uint64_t sub_1002473BC(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  return swift_release(a1[8]);
}

_QWORD *sub_100247440(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;

  v3 = *a2;
  swift_retain(*a2);
  *a1 = v3;
  v4 = a2[1];
  swift_retain(v4);
  a1[1] = v4;
  v5 = a2[2];
  swift_retain(v5);
  a1[2] = v5;
  v6 = a2[3];
  swift_retain(v6);
  a1[3] = v6;
  v7 = a2[4];
  swift_retain(v7);
  a1[4] = v7;
  v8 = a2[5];
  swift_retain(v8);
  a1[5] = v8;
  v9 = a2[6];
  swift_retain(v9);
  a1[6] = v9;
  v10 = a2[7];
  swift_retain(v10);
  a1[7] = v10;
  v13 = a2[8];
  swift_retain(v13);
  result = a1;
  a1[8] = v13;
  return result;
}

uint64_t *sub_100247558(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v12 = *a2;
  swift_retain(*a2);
  v2 = *a1;
  *a1 = v12;
  swift_release(v2);
  v13 = a2[1];
  swift_retain(v13);
  v3 = a1[1];
  a1[1] = v13;
  swift_release(v3);
  v14 = a2[2];
  swift_retain(v14);
  v4 = a1[2];
  a1[2] = v14;
  swift_release(v4);
  v15 = a2[3];
  swift_retain(v15);
  v5 = a1[3];
  a1[3] = v15;
  swift_release(v5);
  v16 = a2[4];
  swift_retain(v16);
  v6 = a1[4];
  a1[4] = v16;
  swift_release(v6);
  v17 = a2[5];
  swift_retain(v17);
  v7 = a1[5];
  a1[5] = v17;
  swift_release(v7);
  v18 = a2[6];
  swift_retain(v18);
  v8 = a1[6];
  a1[6] = v18;
  swift_release(v8);
  v19 = a2[7];
  swift_retain(v19);
  v9 = a1[7];
  a1[7] = v19;
  swift_release(v9);
  v21 = a2[8];
  swift_retain(v21);
  v10 = a1[8];
  a1[8] = v21;
  swift_release(v10);
  return a1;
}

uint64_t *sub_1002476BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  *a1 = *a2;
  swift_release(v2);
  v3 = a1[1];
  a1[1] = a2[1];
  swift_release(v3);
  v4 = a1[2];
  a1[2] = a2[2];
  swift_release(v4);
  v5 = a1[3];
  a1[3] = a2[3];
  swift_release(v5);
  v6 = a1[4];
  a1[4] = a2[4];
  swift_release(v6);
  v7 = a1[5];
  a1[5] = a2[5];
  swift_release(v7);
  v8 = a1[6];
  a1[6] = a2[6];
  swift_release(v8);
  v9 = a1[7];
  a1[7] = a2[7];
  swift_release(v9);
  v10 = a1[8];
  a1[8] = a2[8];
  swift_release(v10);
  return a1;
}

uint64_t sub_1002477B4(uint64_t a1, int a2)
{
  int v3;
  int v4;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v3 = -1;
      if (!HIDWORD(*(_QWORD *)a1))
        v3 = *(_QWORD *)a1;
      v4 = v3;
    }
  }
  else
  {
    v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1002478CC(uint64_t result, unsigned int a2, unsigned int a3)
{
  _BOOL4 v3;

  v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_QWORD *)result = a2 + 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0;
    *(_QWORD *)(result + 64) = 0;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 72) = 1;
      else
        __break(1u);
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3)
        *(_BYTE *)(result + 72) = 0;
      else
        __break(1u);
    }
    if (a2)
      *(_QWORD *)result = a2 - 1;
  }
  return result;
}

void *type metadata accessor for ForwardMessageIntent()
{
  return &unk_100527AF8;
}

unint64_t sub_100247AFC()
{
  return sub_100247B10();
}

unint64_t sub_100247B10()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5598;
  if (!qword_1005A5598)
  {
    v0 = sub_1001E7634(&qword_1005A55A0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5598);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100247B80()
{
  return sub_10020BB8C();
}

unint64_t sub_100247B94()
{
  return sub_100243D9C();
}

unint64_t sub_100247BA8()
{
  return sub_100247BBC();
}

unint64_t sub_100247BBC()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A55A8;
  if (!qword_1005A55A8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD7E8, &unk_100527AF8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A55A8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100247C28(uint64_t a1)
{
  unint64_t result;

  result = sub_100243D9C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100247C50(uint64_t a1)
{
  unint64_t result;

  result = sub_100247C78();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100247C78()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A55B0;
  if (!qword_1005A55B0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD894, &unk_100527AF8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A55B0);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100247CE4()
{
  return sub_100247CF8();
}

unint64_t sub_100247CF8()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A55B8;
  if (!qword_1005A55B8)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD85C, &unk_100527AF8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A55B8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100247D64()
{
  return sub_100247D78();
}

unint64_t sub_100247D78()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A55C0;
  if (!qword_1005A55C0)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CD840, &unk_100527AF8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A55C0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100247DE4(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1004F745C, 1) + 8);
}

uint64_t sub_100247E0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F7428, 1);
}

_QWORD *sub_100247E30(_QWORD *result)
{
  *result = 0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  result[10] = 0;
  result[11] = 0;
  result[12] = 0;
  result[13] = 0;
  result[14] = 0;
  result[15] = 0;
  return result;
}

void *sub_100247E74(const void *a1, void *a2)
{
  memcpy(a2, a1, 0x80uLL);
  return a2;
}

_QWORD *sub_100247EDC(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  swift_release(a1[8]);
  return a1;
}

_QWORD *sub_100247F64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10024417C(a1, a2);
}

_QWORD *sub_100247F78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002441E0(a1, a2);
}

_QWORD *sub_100247F8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100244244(a1, a2);
}

_QWORD *sub_100247FA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1002442A8(a1, a2);
}

_QWORD *sub_100247FB4(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;

  v3 = *a1;
  swift_retain(*a1);
  *a2 = v3;
  v4 = a1[1];
  swift_retain(v4);
  a2[1] = v4;
  v5 = a1[2];
  swift_retain(v5);
  a2[2] = v5;
  v6 = a1[3];
  swift_retain(v6);
  a2[3] = v6;
  v7 = a1[4];
  swift_retain(v7);
  a2[4] = v7;
  v8 = a1[5];
  swift_retain(v8);
  a2[5] = v8;
  v9 = a1[6];
  swift_retain(v9);
  a2[6] = v9;
  v11 = a1[7];
  swift_retain(v11);
  a2[7] = v11;
  v13 = a1[8];
  swift_retain(v13);
  result = a2;
  a2[8] = v13;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1002480CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  swift_release(*a1);
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
}

uint64_t sub_100248178()
{
  uint64_t v0;
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  sub_10003A134(v2, qword_1005A55E0);
  sub_10003A088(v2, (uint64_t)qword_1005A55E0);
  v0 = type metadata accessor for GeneratedSummaryViewCell();
  return static Logger.mailUILogger<A>(for:)(v0);
}

uint64_t type metadata accessor for GeneratedSummaryViewCell()
{
  return objc_opt_self(MFGeneratedSummaryViewCell);
}

uint64_t sub_100248200()
{
  uint64_t v0;

  if (qword_1005A36F8 != -1)
    swift_once(&qword_1005A36F8, sub_100248178);
  v0 = type metadata accessor for Logger(0);
  return sub_10003A088(v0, (uint64_t)qword_1005A55E0);
}

uint64_t GeneratedSummaryViewCell.delegate.getter()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t Strong;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  swift_endAccess(v4);
  return Strong;
}

uint64_t GeneratedSummaryViewCell.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;
  uint64_t v7;

  v6 = 0;
  v7 = a1;
  swift_unknownObjectRetain(a1);
  v3 = v1 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate;
  swift_beginAccess(v1 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate);
  swift_unknownObjectWeakAssign(v3, a1);
  swift_unknownObjectRelease(a1);
  swift_endAccess(v5);
  return swift_unknownObjectRelease(a1);
}

void (*GeneratedSummaryViewCell.delegate.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = v1;
  v2 = OBJC_IVAR___MFGeneratedSummaryViewCell_delegate;
  v6[5] = OBJC_IVAR___MFGeneratedSummaryViewCell_delegate;
  v5 = v1 + v2;
  swift_beginAccess(v1 + v2);
  v6[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100213B28;
}

id GeneratedSummaryViewCell.viewModel.getter()
{
  void *v0;
  id v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  objc_super v6;
  void *v7;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v7 = v0;
  v1 = v0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v6, "viewModel");

  return v5;
}

void GeneratedSummaryViewCell.viewModel.setter(void *a1)
{
  void *v1;
  id v2;
  id v3;
  objc_class *ObjectType;
  id v5;
  objc_super v7;
  objc_super v8;
  void *v9;
  void *v10;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v10 = a1;
  v9 = v1;
  v2 = v1;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v8, "viewModel");

  v3 = v1;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, "setViewModel:", a1);

  sub_100248630(v5);
}

void sub_100248630(void *a1)
{
  uint64_t v1;
  id v2;
  char v3;
  char v4;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;

  v13 = a1;
  v12 = v1;
  v6 = GeneratedSummaryViewCell.viewModel.getter();
  v2 = v6;
  v11 = a1;
  v9 = v6;
  sub_100212C34(&v11, &v10);
  if (v6)
  {
    sub_100212C34(&v9, &v8);
    if (v10)
    {
      v7 = v10;
      sub_100248DF0();
      v3 = static NSObject.== infix(_:_:)(v8, v7);

      sub_1001F20D8(&v9);
      v4 = v3;
      goto LABEL_7;
    }

    goto LABEL_9;
  }
  if (v10)
  {
LABEL_9:
    sub_100248794(&v9);
    v4 = 0;
    goto LABEL_7;
  }
  sub_1001F20D8(&v9);
  v4 = 1;
LABEL_7:

  if ((v4 & 1) == 0)
    sub_1002487C8();
}

id *sub_100248794(id *a1)
{

  return a1;
}

void sub_1002487C8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id *v16;
  char *v17;
  uint64_t v18;
  unsigned int v19;
  id v20;
  id *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  void **v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  id *v30;
  char *v31;
  id v32;
  int v33;
  int v34;
  int v35;
  id *v36;
  char *v37;
  id v38;
  id v39;
  id *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  id v51;
  id v52;
  char v53;
  id v54;
  char v55;
  char v56;
  char v57;
  id v58;
  void *v59;
  id v60;
  char v61;
  void *v62;
  id v63;
  uint64_t v64;

  v64 = 0;
  v62 = 0;
  v54 = 0;
  v45 = type metadata accessor for ManualSummaryView.Model.State(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v45);
  v48 = (char *)&v14 - v47;
  v1 = sub_10003A0C8(&qword_1005A5608);
  v49 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v50 = (char *)&v14 - v49;
  v64 = v0;
  v63 = GeneratedSummaryViewCell.viewModel.getter();
  if (v63)
  {
    v40 = &v63;
    v41 = v63;
    v2 = v63;
    sub_1001F20D8(v40);
    v42 = objc_msgSend(v41, "manualSummaryContext");

    v43 = v42;
  }
  else
  {
    v15 = 0;
    sub_1001F20D8(&v63);
    v43 = v15;
  }
  v38 = v43;
  v62 = v43;
  v36 = (id *)(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  v37 = &v61;
  swift_beginAccess(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  v39 = *v36;
  v3 = v39;
  swift_endAccess(v37);
  v4 = v39;
  v60 = v38;
  v58 = v39;
  sub_100212C34(&v60, &v59);
  if (v58)
  {
    sub_100212C34(&v58, &v52);
    if (v59)
    {
      v51 = v59;
      sub_100249CD8();
      v34 = static NSObject.== infix(_:_:)(v52, v51);

      sub_1001F20D8(&v58);
      v35 = v34;
      goto LABEL_9;
    }

    goto LABEL_11;
  }
  if (v59)
  {
LABEL_11:
    sub_100248794(&v58);
    v35 = 0;
    goto LABEL_9;
  }
  sub_1001F20D8(&v58);
  v35 = 1;
LABEL_9:
  v33 = v35;

  if ((v33 & 1) != 0)
  {

  }
  else
  {
    v5 = v38;
    v28 = &qword_1005A5000;
    v26 = (void **)(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
    v27 = &v57;
    v29 = 0;
    swift_beginAccess(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
    v6 = *v26;
    *v26 = v38;

    swift_endAccess(v27);
    v30 = (id *)(v44 + v28[194]);
    v31 = &v56;
    swift_beginAccess(v30);
    v32 = *v30;
    v7 = v32;
    swift_endAccess(v31);
    if (v32)
    {
      v25 = v32;
      v24 = v32;
      v54 = v32;
      v21 = (id *)(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
      v22 = &v53;
      swift_beginAccess(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
      v23 = *v21;
      v8 = v23;
      v9 = swift_endAccess(v22);
      MUIManualSummaryContext.summaryViewModel.getter(v9);
      v10 = type metadata accessor for ManualSummaryView.Model(0);
      (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v50, 0, 1);
      ManualSummaryView.viewModel.setter(v50);

    }
    else
    {
      v16 = (id *)(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
      v17 = &v55;
      swift_beginAccess(v44 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
      v20 = *v16;
      v11 = v20;
      swift_endAccess(v17);
      (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v48, enum case for ManualSummaryView.Model.State.initial(_:), v45);
      v18 = sub_100248F00();
      v12 = sub_1002490C4();
      v19 = 1;
      ManualSummaryView.Model.init(state:summarizableMessageCount:isInlineSummary:)(v48, v18, v12 & 1);
      v13 = type metadata accessor for ManualSummaryView.Model(0);
      (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v13 - 8) + 56))(v50, 0, v19);
      ManualSummaryView.viewModel.setter(v50);

    }
    sub_100249B70();

  }
}

unint64_t sub_100248DF0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5600;
  if (!qword_1005A5600)
  {
    v0 = objc_opt_self(ConversationCellViewModel);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5600);
    return ObjCClassMetadata;
  }
  return v3;
}

void (*GeneratedSummaryViewCell.viewModel.modify(id *a1))(id *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = GeneratedSummaryViewCell.viewModel.getter();
  return sub_100248E98;
}

void sub_100248E98(id *a1, char a2)
{
  id v2;
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = *a1;
    v2 = *a1;
    GeneratedSummaryViewCell.viewModel.setter(v3);
    sub_1001F20D8(a1);
  }
  else
  {
    GeneratedSummaryViewCell.viewModel.setter(*a1);
  }
}

uint64_t sub_100248F00()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE v9[24];
  uint64_t v10;
  char v11;
  uint64_t v13;

  v13 = v0;
  v7 = OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext;
  v8 = (_QWORD *)(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  if (*v8)
  {
    v5 = *(id *)(v6 + v7);
    v1 = v5;
    swift_endAccess(v9);
    objc_msgSend(v5, "summarizableMessageCount");

  }
  else
  {
    swift_endAccess(v9);
  }
  v2 = sub_10003A0C8(&qword_1005A5628);
  sub_1001F1EA0((void (*)(char *, char *))sub_1002490A4, 0, v2, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for UInt, v4, (uint64_t)&v10);
  if ((v11 & 1) != 0)
    return 0;
  else
    return v10;
}

_QWORD *sub_1002490A4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002490C4()
{
  uint64_t v0;
  id v1;
  id v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE v9[31];
  char v10;
  uint64_t v11;

  v11 = v0;
  v7 = OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext;
  v8 = (_QWORD *)(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  if (*v8)
  {
    v3 = *(id *)(v6 + v7);
    v1 = v3;
    swift_endAccess(v9);
    v4 = objc_msgSend(v3, "isInlineSummary");

    v5 = v4 & 1;
  }
  else
  {
    swift_endAccess(v9);
    v5 = 2;
  }
  if (v5 == 2)
    v10 = 0;
  else
    v10 = v5 & 1;
  return v10 & 1;
}

id sub_1002491C8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;
  objc_class *ObjectType;
  __int128 v15;
  __int128 v16;
  id v17;
  objc_super v18;
  __int128 v19;
  __int128 v20;
  id v21;

  *(double *)&v15 = a1;
  *((double *)&v15 + 1) = a2;
  *(double *)&v16 = a3;
  *((double *)&v16 + 1) = a4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v19 = v15;
  v20 = v16;
  v5 = v4;
  v6 = v4;
  v7 = v4;
  v8 = v4;
  v21 = v4;
  *(_QWORD *)&v4[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext] = 0;

  v13 = OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView;
  type metadata accessor for ManualSummaryView(0);
  *(_QWORD *)&v4[v13] = sub_1001E7394();

  swift_unknownObjectWeakInit(&v4[OBJC_IVAR___MFGeneratedSummaryViewCell_delegate]);
  *(_QWORD *)&v4[OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth] = 0;

  v18.receiver = v21;
  v18.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v18, "initWithFrame:", v15, v16);
  v9 = v17;
  v10 = v17;
  v11 = v17;
  v21 = v17;
  objc_msgSend(v17, "setDisallowsHighlighting:", 1);

  sub_100249394();
  return v17;
}

void sub_100249394()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char *v3;
  unint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id *v30;
  char *v31;
  id v32;
  id *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unsigned int v38;
  char *v39;
  id v40;
  id *v41;
  char *v42;
  id v43;
  id v44;
  id *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  id *v54;
  char *v55;
  id v56;
  id v57;
  char **v58;
  char **v59;
  unsigned int v60;
  id v61;
  char *v62;
  id v63;
  char v64;
  uint64_t v65;
  char v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  char v75;
  char v76;
  char v77;
  uint64_t v78;

  v78 = 0;
  v47 = 0;
  v36 = type metadata accessor for ManualSummaryView.Model.State(0);
  v35 = *(_QWORD *)(v36 - 8);
  v28 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v36);
  v37 = (char *)&v27 - v28;
  v1 = sub_10003A0C8(&qword_1005A5608);
  v29 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v39 = (char *)&v27 - v29;
  v78 = v0;
  v51 = &qword_1005A5000;
  v30 = (id *)(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
  v31 = &v77;
  v52 = 32;
  v53 = 0;
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
  v32 = *v30;
  v2 = v32;
  swift_endAccess(v31);
  v3 = v62;
  v4 = sub_100249D3C();
  ManualSummaryView.delegate.setter(v62, v4);
  v5 = v62;

  v33 = (id *)&v5[v51[195]];
  v34 = &v76;
  swift_beginAccess(v33);
  v40 = *v33;
  v6 = v40;
  swift_endAccess(v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, enum case for ManualSummaryView.Model.State.initial(_:), v36);
  v38 = 1;
  v60 = 0;
  ManualSummaryView.Model.init(state:summarizableMessageCount:isInlineSummary:)(v37, v47, 0);
  v7 = type metadata accessor for ManualSummaryView.Model(v47);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v7 - 8) + 56))(v39, v60, v38);
  ManualSummaryView.viewModel.setter(v39);
  v8 = v62;

  v41 = (id *)&v8[v51[195]];
  v42 = &v75;
  swift_beginAccess(v41);
  v44 = *v41;
  v9 = v44;
  swift_endAccess(v42);
  v10 = v8;
  v58 = &selRef_conformsToType_;
  v43 = objc_msgSend(v8, "contentView");

  objc_msgSend(v43, "bounds");
  v71 = v11;
  v72 = v12;
  v73 = v13;
  v74 = v14;
  v67 = v11;
  v68 = v12;
  v69 = v13;
  v70 = v14;
  objc_msgSend(v44, "setFrame:", v11, v12, v13, v14);

  v45 = (id *)&v8[v51[195]];
  v46 = &v66;
  swift_beginAccess(v45);
  v50 = *v45;
  v15 = v50;
  swift_endAccess(v46);
  v16 = type metadata accessor for AutoresizingMask(v47);
  v48 = 2;
  v17 = _allocateUninitializedArray<A>(_:)(2, v16);
  v18 = v48;
  *v19 = 16;
  v19[1] = v18;
  sub_10003CB20();
  v49 = v17;
  v20 = sub_1001EFB70();
  SetAlgebra<>.init(arrayLiteral:)(v49, v16, v20);
  v21 = v62;
  objc_msgSend(v50, "setAutoresizingMask:", v65);

  v22 = v21;
  v57 = objc_msgSend(v21, v58[79]);

  v54 = (id *)&v21[v51[195]];
  v55 = &v64;
  swift_beginAccess(v54);
  v56 = *v54;
  v23 = v56;
  swift_endAccess(v55);
  objc_msgSend(v57, "addSubview:", v56);

  v24 = v62;
  v59 = &selRef_serializedRepresentation;
  objc_msgSend(v62, "setClipsToBounds:", v60 & 1);

  v25 = v62;
  v61 = objc_msgSend(v62, v58[79]);

  objc_msgSend(v61, v59[177], v60 & 1);
  v26 = v62;
  v63 = objc_msgSend(v62, "layer");

  objc_msgSend(v63, "setZPosition:", -100.0);
}

void sub_1002499F4()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  Swift::String v5;
  uint64_t v6;

  v1 = v0;
  v2 = v0;
  v3 = v0;
  v4 = v0;
  *(_QWORD *)&v0[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext] = 0;

  v6 = OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView;
  type metadata accessor for ManualSummaryView(0);
  *(_QWORD *)&v0[v6] = sub_1001E7394();

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___MFGeneratedSummaryViewCell_delegate]);
  *(_QWORD *)&v0[OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth] = 0;

  v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("init(coder:) has not been implemented", 0x25uLL, 1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v5._countAndFlagsBits, v5._object, "MobileMail/GeneratedSummaryViewCell.swift", 41);
  __break(1u);
}

void sub_100249B70()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  char *v4;
  void *Strong;
  id v6;
  char v7[24];
  id v8;
  char *v9;

  v8 = 0;
  v9 = v0;
  v1 = v0;
  v6 = objc_msgSend(v0, "itemID");
  if (v6)
  {
    v8 = v6;

    v4 = &v0[OBJC_IVAR___MFGeneratedSummaryViewCell_delegate];
    swift_beginAccess(&v0[OBJC_IVAR___MFGeneratedSummaryViewCell_delegate]);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
    swift_endAccess(v7);
    if (Strong)
    {
      sub_10024A8D0();
      v3 = v2;
      swift_getObjectType(Strong);
      objc_msgSend(Strong, "summaryCell:withItemID:didLayoutWithHeight:", v0, v6, v3);
      swift_unknownObjectRelease(Strong);
    }
    swift_unknownObjectRelease(v6);
  }
  else
  {

  }
}

unint64_t sub_100249CD8()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5620;
  if (!qword_1005A5620)
  {
    v0 = objc_opt_self(MUIManualSummaryContext);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5620);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_100249D3C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5638;
  if (!qword_1005A5638)
  {
    v0 = type metadata accessor for GeneratedSummaryViewCell();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for GeneratedSummaryViewCell, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5638);
    return WitnessTable;
  }
  return v3;
}

Swift::Void __swiftcall GeneratedSummaryViewCell._displayMetricsDidChange()()
{
  uint64_t v0;
  id v1;
  id v2;
  id *v3;
  id v4;
  id *v5;
  id v6;
  _BYTE v7[24];
  _BYTE v8[24];
  uint64_t v9;

  v9 = 0;
  v3 = (id *)(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
  v4 = *v3;
  v1 = *v3;
  swift_endAccess(v8);
  objc_msgSend(v4, "layoutIfNeeded");

  v5 = (id *)(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView);
  v6 = *v5;
  v2 = *v5;
  swift_endAccess(v7);
  objc_msgSend(v6, "setNeedsUpdateConstraints");

  sub_100249B70();
}

Swift::Void __swiftcall GeneratedSummaryViewCell.prepareForReuse()()
{
  uint64_t v0;
  void *v1;
  char *v2;
  uint64_t v3;
  void **v4;
  objc_class *ObjectType;
  char *v6;
  objc_super v7;
  char v8[24];
  char v9[24];
  uint64_t v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = v0;
  v3 = v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate);
  swift_unknownObjectWeakAssign(v3, 0);
  swift_endAccess(v9);
  GeneratedSummaryViewCell.viewModel.setter(0);
  v4 = (void **)&v6[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext];
  swift_beginAccess(&v6[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext]);
  v1 = *v4;
  *v4 = 0;

  swift_endAccess(v8);
  v2 = v6;
  v7.receiver = v6;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, "prepareForReuse");

}

uint64_t GeneratedSummaryViewCell.canBeginDragWithTouch(at:)()
{
  return 0;
}

UICollectionViewLayoutAttributes __swiftcall GeneratedSummaryViewCell.preferredLayoutAttributesFitting(_:)(UICollectionViewLayoutAttributes a1)
{
  char *v1;
  char *v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  double v38;
  char *v39;
  uint64_t v40;
  double v41;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  char *v49;
  char *v50;
  void *Strong;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE **v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id *v67;
  char *v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint32_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  NSObject *v85;
  int v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  objc_class *ObjectType;
  Class isa;
  uint64_t v95;
  double *v96;
  char *v97;
  id v98;
  double v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  _QWORD v106[3];
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  id v112;
  void *v113;
  char v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118;
  char v119;
  id v120;
  objc_super v121;
  char *v122;
  uint64_t v123;

  isa = a1.super.isa;
  ObjectType = (objc_class *)swift_getObjectType();
  v123 = 0;
  v122 = 0;
  v120 = 0;
  v113 = 0;
  v112 = 0;
  v95 = 0;
  v88 = 0;
  v89 = type metadata accessor for Logger(0);
  v90 = *(_QWORD *)(v89 - 8);
  v91 = (*(_QWORD *)(v90 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v92 = (char *)&v43 - v91;
  v123 = __chkstk_darwin(isa);
  v122 = v1;
  v2 = v1;
  v121.receiver = v1;
  v121.super_class = ObjectType;
  v98 = objc_msgSendSuper2(&v121, "preferredLayoutAttributesFittingAttributes:", isa);
  v120 = v98;

  v96 = (double *)&v1[OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth];
  v97 = &v119;
  swift_beginAccess(&v1[OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth]);
  v99 = *v96;
  swift_endAccess(v97);
  objc_msgSend(v98, "size");
  v117 = v3;
  v118 = v4;
  if (v99 != v3)
  {
    v5 = v92;
    objc_msgSend(v98, "size", v99);
    v108 = v6;
    v109 = v7;
    v64 = v6;
    v63 = &v87[OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth];
    v65 = &v107;
    v66 = 0;
    swift_beginAccess(&v87[OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth]);
    v8 = v65;
    *(_QWORD *)v63 = v64;
    swift_endAccess(v8);
    v67 = (id *)&v87[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView];
    v68 = (char *)v106 + 4;
    v75 = 32;
    swift_beginAccess(&v87[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView]);
    v69 = *v67;
    v9 = v69;
    swift_endAccess(v68);
    objc_msgSend(v69, "setNeedsUpdateConstraints");

    v10 = sub_100248200();
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v5, v10, v89);
    v11 = v87;
    v76 = 7;
    v12 = swift_allocObject(&unk_100527CC0, 24, 7);
    v77 = v12;
    *(_QWORD *)(v12 + 16) = v87;
    v85 = Logger.logObject.getter(v12);
    v86 = static os_log_type_t.debug.getter();
    v72 = &v105;
    v105 = 12;
    v70 = sub_1001EB1EC();
    v71 = sub_1001EB254();
    v13 = sub_1001EB2BC();
    UnsignedInteger<>.init<A>(_:)(v106, v72, &type metadata for UInt32, &type metadata for Int, v70, v71, v13);
    v73 = v106[0];
    v74 = 17;
    v14 = swift_allocObject(&unk_100527CE8, 17, v76);
    v15 = v74;
    v16 = v76;
    v79 = v14;
    *(_BYTE *)(v14 + 16) = 0;
    v17 = swift_allocObject(&unk_100527D10, v15, v16);
    v18 = v75;
    v19 = v76;
    v80 = v17;
    *(_BYTE *)(v17 + 16) = 8;
    v20 = swift_allocObject(&unk_100527D38, v18, v19);
    v21 = v75;
    v22 = v76;
    v23 = v20;
    v24 = v77;
    v78 = v23;
    *(_QWORD *)(v23 + 16) = sub_10024AA04;
    *(_QWORD *)(v23 + 24) = v24;
    v25 = swift_allocObject(&unk_100527D60, v21, v22);
    v26 = v78;
    v82 = v25;
    *(_QWORD *)(v25 + 16) = sub_1001ED524;
    *(_QWORD *)(v25 + 24) = v26;
    v84 = sub_10003A0C8(qword_1005A5580);
    v81 = _allocateUninitializedArray<A>(_:)(3, v84);
    v83 = v27;
    swift_retain(v79);
    v28 = v80;
    v29 = v79;
    v30 = v83;
    *v83 = sub_1001ED4B8;
    v30[1] = v29;
    swift_retain(v28);
    v31 = v82;
    v32 = v80;
    v33 = v83;
    v83[2] = sub_1001ED4B8;
    v33[3] = v32;
    swift_retain(v31);
    v34 = v81;
    v35 = v82;
    v36 = v83;
    v83[4] = sub_10024E554;
    v36[5] = v35;
    sub_10003CB20();
    swift_bridgeObjectRelease(v34);
    if (os_log_type_enabled(v85, (os_log_type_t)v86))
    {
      v37 = v88;
      v56 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
      v54 = sub_10003A0C8(&qword_1005A3AD0);
      v55 = 0;
      v57 = sub_1001ED340(0, v54, v54);
      v58 = sub_1001ED340(v55, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v59 = &v104;
      v104 = v56;
      v60 = &v103;
      v103 = v57;
      v61 = &v102;
      v102 = v58;
      sub_1001ED398(0, &v104);
      sub_1001ED398(1, v59);
      v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v101 = v79;
      sub_1001ED3AC(&v100, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61);
      v62 = v37;
      if (v37)
      {
        __break(1u);
      }
      else
      {
        v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
        v101 = v80;
        sub_1001ED3AC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
        v53 = 0;
        v100 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10024E554;
        v101 = v82;
        sub_1001ED3AC(&v100, (uint64_t)&v104, (uint64_t)&v103, (uint64_t)&v102);
        _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v86, "Updating constraints for summary view because width changed: %f", v56, v73);
        v52 = 0;
        sub_1001ED3F0(v57, 0);
        sub_1001ED3F0(v58, v52);
        UnsafeMutablePointer.deallocate()();
        swift_release(v79);
        swift_release(v80);
        swift_release(v82);
      }
    }
    else
    {
      swift_release(v79);
      swift_release(v80);
      swift_release(v82);
    }

    (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v89);
  }
  v115 = sub_10024A8D0();
  v116 = v38;
  objc_msgSend(v98, "setSize:", v115, v38);
  v49 = &v87[OBJC_IVAR___MFGeneratedSummaryViewCell_delegate];
  v50 = &v114;
  swift_beginAccess(&v87[OBJC_IVAR___MFGeneratedSummaryViewCell_delegate]);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v49);
  swift_endAccess(v50);
  if (Strong)
  {
    v48 = Strong;
    v46 = Strong;
    v113 = Strong;
    v39 = v87;
    v47 = objc_msgSend(v87, "itemID");
    if (v47)
    {
      v45 = v47;
      v44 = v47;
      v112 = v47;

      swift_getObjectType();
      objc_msgSend(v98, "size");
      v110 = v40;
      v111 = v41;
      objc_msgSend(v46, "summaryCell:withItemID:didLayoutWithHeight:", v87, v44, v41);
      swift_unknownObjectRelease(v44);
    }
    else
    {

    }
    swift_unknownObjectRelease(v46);
  }
  return (UICollectionViewLayoutAttributes)v98;
}

Swift::Double sub_10024A874(uint64_t a1)
{
  double *v2;
  Swift::Double v3;
  _BYTE v4[24];

  v2 = (double *)(a1 + OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth);
  swift_beginAccess(a1 + OBJC_IVAR___MFGeneratedSummaryViewCell_cachedWidth);
  v3 = *v2;
  swift_endAccess(v4);
  return Double.init(_:)(v3);
}

double sub_10024A8D0()
{
  void *v0;
  double v1;
  id v2;
  double v4;
  id v5;

  objc_msgSend(v0, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
  v4 = v1;
  v2 = v0;
  v5 = objc_msgSend(v0, "contentView");

  objc_msgSend(v5, "isHidden");
  return v4;
}

uint64_t sub_10024A9C8()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

Swift::Double sub_10024AA04()
{
  uint64_t v0;

  return sub_10024A874(*(_QWORD *)(v0 + 16));
}

Swift::Void __swiftcall GeneratedSummaryViewCell.willMove(toWindow:)(UIWindow_optional toWindow)
{
  if (!toWindow.value.super.super.super.isa)
    GeneratedSummaryViewCell.prepareForReuse()();
}

void GeneratedSummaryViewCell.didSelectShowSummaryButton(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  id *v41;
  char *v42;
  id v43;
  void **aBlock;
  int v45;
  int v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void (*v49)();
  _QWORD *v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;

  v38 = a1;
  ObjectType = swift_getObjectType();
  v54 = 0;
  v53 = 0;
  v51 = 0;
  v29 = 0;
  v25 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v28 = (char *)&v14 - v27;
  v30 = type metadata accessor for DispatchQoS(v2);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(_QWORD *)(v31 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v29);
  v33 = (char *)&v14 - v32;
  v34 = type metadata accessor for DispatchQoS.QoSClass(v3);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v34);
  v37 = (char *)&v14 - v36;
  v39 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A5608) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v38);
  v40 = (char *)&v14 - v39;
  v54 = v4;
  v53 = v1;
  v41 = (id *)(v1 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  v42 = &v52;
  swift_beginAccess(v1 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  v43 = *v41;
  v5 = v43;
  v6 = swift_endAccess(v42);
  if (v43)
  {
    v22 = v43;
    v21 = v43;
    v51 = v43;
    MUIManualSummaryContext.loadingStateModel()(v6);
    v17 = 0;
    v7 = type metadata accessor for ManualSummaryView.Model(0);
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v40, 0, 1);
    ManualSummaryView.viewModel.setter(v40);
    sub_100249B70();
    sub_1001F8F04();
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, enum case for DispatchQoS.QoSClass.userInitiated(_:), v34);
    v20 = (id)static OS_dispatch_queue.global(qos:)(v37);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    v16 = 7;
    v19 = swift_allocObject(&unk_100527D88, 24, 7);
    v15 = v19 + 16;
    v8 = v23;
    swift_unknownObjectWeakInit(v15);

    v9 = v21;
    swift_retain(v19);
    v10 = swift_allocObject(&unk_100527DB0, 40, v16);
    v11 = ObjectType;
    v12 = (_QWORD *)v10;
    v13 = v19;
    v12[2] = v21;
    v12[3] = v13;
    v12[4] = v11;
    v49 = sub_10024E5E0;
    v50 = v12;
    aBlock = _NSConcreteStackBlock;
    v45 = 1107296256;
    v46 = 0;
    v47 = sub_10023517C;
    v48 = &unk_100527DC8;
    v18 = _Block_copy(&aBlock);
    sub_1001FB150();
    sub_1001FB164();
    OS_dispatch_queue.async(group:qos:flags:execute:)(v17, v33, v28, v18);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    _Block_release(v18);
    swift_release(v50);
    swift_release(v19);

  }
}

void sub_10024AFF4(void *a1, uint64_t a2, uint64_t a3)
{
  id v3;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  const void *v7;
  id v8;
  const void *v12;
  id v13;
  id v14;
  void **v15;
  int v16;
  int v17;
  uint64_t (*v18)(uint64_t, void *);
  void *v19;
  uint64_t (*v20)(uint64_t);
  _QWORD *v21;
  void **aBlock;
  int v23;
  int v24;
  uint64_t (*v25)(uint64_t, void *);
  void *v26;
  void (*v27)(void *);
  _QWORD *v28;
  uint64_t v29;
  void *v30;

  v30 = a1;
  v29 = a2 + 16;
  v8 = objc_msgSend(a1, "summaryControllerFuture");
  v3 = a1;
  swift_retain(a2);
  v4 = (_QWORD *)swift_allocObject(&unk_100527E28, 40, 7);
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v27 = sub_10024E7B4;
  v28 = v4;
  aBlock = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = 0;
  v25 = sub_1002113DC;
  v26 = &unk_100527E40;
  v7 = _Block_copy(&aBlock);
  swift_release(v28);
  objc_msgSend(v8, "addSuccessBlock:", v7);
  _Block_release(v7);

  v14 = objc_msgSend(a1, "summaryControllerFuture");
  v13 = objc_msgSend((id)objc_opt_self(EFScheduler), "mainThreadScheduler");
  v5 = a1;
  swift_retain(a2);
  v6 = (_QWORD *)swift_allocObject(&unk_100527E78, 40, 7);
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v20 = sub_10024E864;
  v21 = v6;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = 0;
  v18 = sub_1002115DC;
  v19 = &unk_100527E90;
  v12 = _Block_copy(&v15);
  swift_release(v21);
  objc_msgSend(v14, "onScheduler:addFailureBlock:", v13, v12);
  _Block_release(v12);
  swift_unknownObjectRelease(v13);

}

void sub_10024B22C(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  id v4;
  _QWORD *v5;
  const void *v10;
  void **aBlock;
  int v12;
  int v13;
  uint64_t (*v14)(uint64_t, void *, void *);
  void *v15;
  void (*v16)(void *, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  id v19;
  void *v20;

  v20 = a1;
  v19 = a2;
  v18 = a3 + 16;
  v4 = a2;
  swift_retain(a3);
  v5 = (_QWORD *)swift_allocObject(&unk_100527FB8, 40, 7);
  v5[2] = a2;
  v5[3] = a3;
  v5[4] = a4;
  v16 = sub_10024EA60;
  v17 = v5;
  aBlock = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = 0;
  v14 = sub_1001F8998;
  v15 = &unk_100527FD0;
  v10 = _Block_copy(&aBlock);
  swift_release(v17);
  objc_msgSend(a1, "summarizeMessageWithCompletion:", v10);
  _Block_release(v10);
}

void sub_10024B334(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void **aBlock;
  int v34;
  int v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  uint64_t (*v38)();
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  v43 = 0;
  v42 = 0;
  v41 = 0;
  v40 = 0;
  v24 = 0;
  v27 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v27 - 8);
  v17 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(0);
  v26 = (char *)&v17 - v17;
  v30 = type metadata accessor for DispatchQoS(v5);
  v28 = *(_QWORD *)(v30 - 8);
  v18 = (*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v24);
  v29 = (char *)&v17 - v18;
  v43 = v6;
  v42 = v7;
  v41 = v8;
  v40 = v9 + 16;
  sub_1001F8F04();
  v32 = (id)static OS_dispatch_queue.main.getter();
  v10 = v23;
  swift_errorRetain(v19);
  v11 = v20;
  swift_retain(v21);
  v12 = (_QWORD *)swift_allocObject(&unk_100528008, 56, 7);
  v13 = v19;
  v14 = v20;
  v15 = v21;
  v16 = v22;
  v12[2] = v23;
  v12[3] = v13;
  v12[4] = v14;
  v12[5] = v15;
  v12[6] = v16;
  v38 = sub_10024EB20;
  v39 = v12;
  aBlock = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = 0;
  v36 = sub_10023517C;
  v37 = &unk_100528020;
  v31 = _Block_copy(&aBlock);
  swift_release(v39);
  sub_1001FB150();
  sub_1001FB164();
  OS_dispatch_queue.async(group:qos:flags:execute:)(v24, v29, v26, v31);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  _Block_release(v31);

}

uint64_t sub_10024B56C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id *v50;
  char *v51;
  id v52;
  int v53;
  int v54;
  int v55;
  char *v56;
  id *v57;
  char *v58;
  id v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *Strong;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE **v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint32_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  NSObject *v92;
  int v93;
  _BOOL4 v94;
  id v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  unint64_t v112;
  char *v113;
  id v114;
  uint64_t v115;
  id v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  id v123;
  id v124;
  id v125;
  char v126;
  id v127;
  id v128;
  char v129;
  char *v130;
  char v131;
  uint64_t v132;
  uint32_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  char *v138;

  v114 = a1;
  v107 = a2;
  v105 = a3;
  v106 = a4;
  v138 = 0;
  v137 = 0;
  v136 = 0;
  v135 = 0;
  v134 = 0;
  v130 = 0;
  v122 = 0;
  v97 = 0;
  v116 = 0;
  v4 = sub_10003A0C8(&qword_1005A5608);
  v98 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  v99 = (char *)&v50 - v98;
  v100 = 0;
  v101 = type metadata accessor for Logger(0);
  v102 = *(_QWORD *)(v101 - 8);
  v103 = (*(_QWORD *)(v102 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v100);
  v104 = (char *)&v50 - v103;
  v108 = type metadata accessor for ManualSummaryView.Model(v5);
  v109 = *(_QWORD *)(v108 - 8);
  v110 = (*(_QWORD *)(v109 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v114);
  v111 = (char *)&v50 - v110;
  v112 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (void *)__chkstk_darwin(v6);
  v113 = (char *)&v50 - v112;
  v138 = (char *)&v50 - v112;
  v137 = v8;
  v136 = v9;
  v135 = v10;
  v134 = v11 + 16;
  v12 = v8;
  if (v114)
  {
    v96 = v114;
    v95 = v114;
    v116 = v114;
    if ((uint64_t)objc_msgSend(v114, "length") > 0)
    {
      v115 = v107;
      v94 = v107 == 0;
      if (!v107)
      {
        MUIManualSummaryContext.completeStateModel(summary:)(v95);
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v113, v111, v108);

        goto LABEL_16;
      }
    }

  }
  v14 = v104;
  v15 = sub_100248200();
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v14, v15, v101);
  swift_errorRetain(v107);
  v83 = 7;
  v84 = swift_allocObject(&unk_100528058, 24, 7);
  *(_QWORD *)(v84 + 16) = v107;
  sub_10003DB7C();
  v17 = swift_bridgeObjectRelease(v16);
  v92 = Logger.logObject.getter(v17);
  v93 = static os_log_type_t.error.getter();
  v79 = &v132;
  v132 = 12;
  v77 = sub_1001EB1EC();
  v78 = sub_1001EB254();
  v18 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v133, v79, &type metadata for UInt32, &type metadata for Int, v77, v78, v18);
  v80 = v133;
  v81 = 17;
  v19 = swift_allocObject(&unk_100528080, 17, v83);
  v20 = v81;
  v21 = v83;
  v86 = v19;
  *(_BYTE *)(v19 + 16) = 64;
  v22 = swift_allocObject(&unk_1005280A8, v20, v21);
  v23 = v83;
  v87 = v22;
  *(_BYTE *)(v22 + 16) = 8;
  v82 = 32;
  v24 = swift_allocObject(&unk_1005280D0, 32, v23);
  v25 = v82;
  v26 = v83;
  v27 = v24;
  v28 = v84;
  v85 = v27;
  *(_QWORD *)(v27 + 16) = sub_1001F9064;
  *(_QWORD *)(v27 + 24) = v28;
  v29 = swift_allocObject(&unk_1005280F8, v25, v26);
  v30 = v85;
  v89 = v29;
  *(_QWORD *)(v29 + 16) = sub_1001F90F8;
  *(_QWORD *)(v29 + 24) = v30;
  v91 = sub_10003A0C8(qword_1005A5580);
  v88 = _allocateUninitializedArray<A>(_:)(3, v91);
  v90 = v31;
  swift_retain(v86);
  v32 = v87;
  v33 = v86;
  v34 = v90;
  *v90 = sub_1001ED4B8;
  v34[1] = v33;
  swift_retain(v32);
  v35 = v89;
  v36 = v87;
  v37 = v90;
  v90[2] = sub_1001ED4B8;
  v37[3] = v36;
  swift_retain(v35);
  v38 = v88;
  v39 = v89;
  v40 = v90;
  v90[4] = sub_1001ED6A8;
  v40[5] = v39;
  sub_10003CB20();
  swift_bridgeObjectRelease(v38);
  if (os_log_type_enabled(v92, (os_log_type_t)v93))
  {
    v41 = v97;
    v70 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v69 = sub_10003A0C8(&qword_1005A3AD0);
    v71 = sub_1001ED340(1, v69, v69);
    v72 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v73 = &v121;
    v121 = v70;
    v74 = &v120;
    v120 = v71;
    v75 = &v119;
    v119 = v72;
    sub_1001ED398(2, &v121);
    sub_1001ED398(1, v73);
    v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v118 = v86;
    sub_1001ED3AC(&v117, (uint64_t)v73, (uint64_t)v74, (uint64_t)v75);
    v76 = v41;
    if (v41)
    {
      __break(1u);
    }
    else
    {
      v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v118 = v87;
      sub_1001ED3AC(&v117, (uint64_t)&v121, (uint64_t)&v120, (uint64_t)&v119);
      v68 = 0;
      v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
      v118 = v89;
      sub_1001ED3AC(&v117, (uint64_t)&v121, (uint64_t)&v120, (uint64_t)&v119);
      _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v93, "Unable to generate summary: %@", v70, v80);
      sub_1001ED3F0(v71, 1);
      sub_1001ED3F0(v72, 0);
      UnsafeMutablePointer.deallocate()();
      swift_release(v86);
      swift_release(v87);
      swift_release(v89);
    }
  }
  else
  {
    swift_release(v86);
    swift_release(v87);
    swift_release(v89);
  }

  (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v101);
  swift_errorRetain(v107);
  if (v107)
  {
    v67 = v107;
    v64 = v107;
    v122 = v107;
    MUIManualSummaryContext.errorStateModel(error:)(v107);
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v113, v111, v108);
    swift_errorRelease(v64);
  }
  else
  {
    v65 = type metadata accessor for ManualSummaryError(0);
    v42 = sub_10024EC98();
    v66 = swift_allocError(v65, v42, 0, 0);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v65 - 8) + 104))(v43, enum case for ManualSummaryError.summarizationFailed(_:));
    MUIManualSummaryContext.errorStateModel(error:)(v66);
    swift_errorRelease(v66);
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v113, v111, v108);
  }
LABEL_16:
  v61 = v106 + 16;
  v62 = &v131;
  swift_beginAccess(v106 + 16);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v61);
  swift_endAccess(v62);
  if (!Strong)
    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v113, v108);
  v60 = Strong;
  v56 = Strong;
  v130 = Strong;
  v44 = v105;
  v45 = v105;
  v57 = (id *)&v56[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext];
  v58 = &v129;
  swift_beginAccess(&v56[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext]);
  v59 = *v57;
  v46 = v59;
  swift_endAccess(v58);
  v47 = v59;
  v127 = v105;
  v128 = v59;
  if (!v105)
  {
    if (!v128)
    {
      sub_1001F20D8(&v127);
      v55 = 1;
      goto LABEL_25;
    }
    goto LABEL_27;
  }
  sub_100212C34(&v127, &v125);
  if (!v128)
  {

LABEL_27:
    sub_100248794(&v127);
    v55 = 0;
    goto LABEL_25;
  }
  v124 = v125;
  v123 = v128;
  sub_100249CD8();
  v54 = static NSObject.== infix(_:_:)(v124, v123);

  sub_1001F20D8(&v127);
  v55 = v54;
LABEL_25:
  v53 = v55;

  if ((v53 & 1) != 0)
  {
    v50 = (id *)&v56[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView];
    v51 = &v126;
    swift_beginAccess(&v56[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView]);
    v52 = *v50;
    v48 = v52;
    swift_endAccess(v51);
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v99, v113, v108);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v99, 0, 1, v108);
    ManualSummaryView.viewModel.setter(v99);

    sub_100249B70();
    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v113, v108);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v113, v108);
}

uint64_t sub_10024C348(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id *v47;
  char *v48;
  id v49;
  int v50;
  int v51;
  int v52;
  char *v53;
  id *v54;
  char *v55;
  id v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *Strong;
  uint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE **v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t *v87;
  uint32_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  NSObject *v101;
  int v102;
  uint64_t (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  id v108;
  id v109;
  id v110;
  char v111;
  id v112;
  id v113;
  char v114;
  char *v115;
  char v116;
  uint64_t v117;
  uint32_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;

  v84 = a1;
  v79 = a2;
  v78 = a3;
  v122 = 0;
  v121 = 0;
  v120 = 0;
  v119 = 0;
  v115 = 0;
  v70 = 0;
  v3 = sub_10003A0C8(&qword_1005A5608);
  v71 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v72 = (char *)&v47 - v71;
  v73 = 0;
  v74 = type metadata accessor for ManualSummaryView.Model(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = (*(_QWORD *)(v75 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v73);
  v77 = (char *)&v47 - v76;
  v122 = (char *)&v47 - v76;
  v83 = type metadata accessor for Logger(v4);
  v82 = *(_QWORD *)(v83 - 8);
  v80 = (*(_QWORD *)(v82 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v84);
  v6 = (char *)&v47 - v80;
  v81 = (char *)&v47 - v80;
  v121 = v5;
  v120 = v7;
  v119 = v8 + 16;
  v9 = sub_100248200();
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v6, v9, v83);
  swift_errorRetain(v84);
  v92 = 7;
  v90 = swift_allocObject(&unk_100527EC8, 24, 7);
  *(_QWORD *)(v90 + 16) = v84;
  sub_10003DB7C();
  v11 = swift_bridgeObjectRelease(v10);
  v101 = Logger.logObject.getter(v11);
  v102 = static os_log_type_t.error.getter();
  v87 = &v117;
  v117 = 12;
  v85 = sub_1001EB1EC();
  v86 = sub_1001EB254();
  v12 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v118, v87, &type metadata for UInt32, &type metadata for Int, v85, v86, v12);
  v88 = v118;
  v89 = 17;
  v13 = swift_allocObject(&unk_100527EF0, 17, v92);
  v14 = v89;
  v15 = v92;
  v95 = v13;
  *(_BYTE *)(v13 + 16) = 64;
  v16 = swift_allocObject(&unk_100527F18, v14, v15);
  v17 = v92;
  v96 = v16;
  *(_BYTE *)(v16 + 16) = 8;
  v91 = 32;
  v18 = swift_allocObject(&unk_100527F40, 32, v17);
  v19 = v91;
  v20 = v92;
  v21 = v18;
  v22 = v90;
  v93 = v21;
  *(_QWORD *)(v21 + 16) = sub_1001F9064;
  *(_QWORD *)(v21 + 24) = v22;
  v23 = swift_allocObject(&unk_100527F68, v19, v20);
  v24 = v91;
  v25 = v92;
  v26 = v23;
  v27 = v93;
  v94 = v26;
  *(_QWORD *)(v26 + 16) = sub_10024E998;
  *(_QWORD *)(v26 + 24) = v27;
  v28 = swift_allocObject(&unk_100527F90, v24, v25);
  v29 = v94;
  v98 = v28;
  *(_QWORD *)(v28 + 16) = sub_1001ED524;
  *(_QWORD *)(v28 + 24) = v29;
  v100 = sub_10003A0C8(qword_1005A5580);
  v97 = _allocateUninitializedArray<A>(_:)(3, v100);
  v99 = v30;
  swift_retain(v95);
  v31 = v96;
  v32 = v95;
  v33 = v99;
  *v99 = sub_1001ED4B8;
  v33[1] = v32;
  swift_retain(v31);
  v34 = v98;
  v35 = v96;
  v36 = v99;
  v99[2] = sub_1001ED4B8;
  v36[3] = v35;
  swift_retain(v34);
  v37 = v97;
  v38 = v98;
  v39 = v99;
  v99[4] = sub_1001ED6A8;
  v39[5] = v38;
  sub_10003CB20();
  swift_bridgeObjectRelease(v37);
  if (os_log_type_enabled(v101, (os_log_type_t)v102))
  {
    v40 = v70;
    v63 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v62 = sub_10003A0C8(&qword_1005A3AD0);
    v64 = sub_1001ED340(1, v62, v62);
    v65 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v66 = &v107;
    v107 = v63;
    v67 = &v106;
    v106 = v64;
    v68 = &v105;
    v105 = v65;
    sub_1001ED398(2, &v107);
    sub_1001ED398(1, v66);
    v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v104 = v95;
    sub_1001ED3AC(&v103, (uint64_t)v66, (uint64_t)v67, (uint64_t)v68);
    v69 = v40;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v104 = v96;
      sub_1001ED3AC(&v103, (uint64_t)&v107, (uint64_t)&v106, (uint64_t)&v105);
      v61 = 0;
      v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
      v104 = v98;
      sub_1001ED3AC(&v103, (uint64_t)&v107, (uint64_t)&v106, (uint64_t)&v105);
      _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v102, "Unable to generate summary: %@", v63, v88);
      sub_1001ED3F0(v64, 1);
      sub_1001ED3F0(v65, 0);
      UnsafeMutablePointer.deallocate()();
      swift_release(v95);
      swift_release(v96);
      swift_release(v98);
    }
  }
  else
  {
    swift_release(v95);
    swift_release(v96);
    swift_release(v98);
  }

  (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
  MUIManualSummaryContext.errorStateModel(error:)(v84);
  v58 = v78 + 16;
  v59 = &v116;
  swift_beginAccess(v78 + 16);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v58);
  swift_endAccess(v59);
  if (!Strong)
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v77, v74);
  v57 = Strong;
  v53 = Strong;
  v115 = Strong;
  v41 = v79;
  v42 = v79;
  v54 = (id *)&v53[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext];
  v55 = &v114;
  swift_beginAccess(&v53[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext]);
  v56 = *v54;
  v43 = v56;
  swift_endAccess(v55);
  v44 = v56;
  v112 = v79;
  v113 = v56;
  if (!v79)
  {
    if (!v113)
    {
      sub_1001F20D8(&v112);
      v52 = 1;
      goto LABEL_15;
    }
    goto LABEL_17;
  }
  sub_100212C34(&v112, &v110);
  if (!v113)
  {

LABEL_17:
    sub_100248794(&v112);
    v52 = 0;
    goto LABEL_15;
  }
  v109 = v110;
  v108 = v113;
  sub_100249CD8();
  v51 = static NSObject.== infix(_:_:)(v109, v108);

  sub_1001F20D8(&v112);
  v52 = v51;
LABEL_15:
  v50 = v52;

  if ((v50 & 1) != 0)
  {
    v47 = (id *)&v53[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView];
    v48 = &v111;
    swift_beginAccess(&v53[OBJC_IVAR___MFGeneratedSummaryViewCell_summaryView]);
    v49 = *v47;
    v45 = v49;
    swift_endAccess(v48);
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v77, v74);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    ManualSummaryView.viewModel.setter(v72);

    sub_100249B70();
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v77, v74);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v77, v74);
}

void GeneratedSummaryViewCell.didSelectFeedbackMenuItem(for:type:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t *v23;
  _BYTE **v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint32_t v31;
  int v32;
  NSObject *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  id *v49;
  char *v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v44 = a1;
  v43 = a2;
  v62 = 0;
  v61 = 0;
  v60 = 0;
  v42 = 0;
  v41 = 0;
  v53 = 0;
  v52 = 0;
  v45 = type metadata accessor for Logger(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v48 = (char *)&v15 - v47;
  v62 = __chkstk_darwin(v44);
  v61 = v3;
  v60 = v2;
  v49 = (id *)(v2 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  v50 = (char *)&v59 + 4;
  swift_beginAccess(v2 + OBJC_IVAR___MFGeneratedSummaryViewCell_summaryContext);
  v51 = *v49;
  v4 = v51;
  swift_endAccess(v50);
  if (v51)
  {
    v40 = v51;
    v37 = v51;
    v53 = v51;
    v38 = objc_msgSend(v51, "summaryControllerFuture");
    v39 = objc_msgSend(v38, "resultIfAvailable");
    if (v39)
    {
      v36 = v39;
      v35 = v39;
      v52 = v39;

      objc_msgSend(v35, "provideFeedbackWithType:", v43);
      return;
    }

  }
  v5 = v48;
  v6 = sub_100248200();
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))(v5, v6, v45);
  v33 = Logger.logObject.getter(v7);
  v32 = static os_log_type_t.error.getter();
  v30 = &v58;
  v58 = 2;
  v28 = sub_1001EB1EC();
  v29 = sub_1001EB254();
  v8 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v59, v30, &type metadata for UInt32, &type metadata for Int, v28, v29, v8);
  v31 = v59;
  v9 = sub_10003A0C8(qword_1005A5580);
  v34 = _allocateUninitializedArray<A>(_:)(0, v9);
  if (os_log_type_enabled(v33, (os_log_type_t)v32))
  {
    v10 = v41;
    v18 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v16 = sub_10003A0C8(&qword_1005A3AD0);
    v17 = 0;
    v19 = sub_1001ED340(0, v16, v16);
    v20 = sub_1001ED340(v17, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v24 = &v57;
    v57 = v18;
    v25 = &v56;
    v56 = v19;
    v22 = &v55;
    v55 = v20;
    v21 = 0;
    sub_1001ED398(0, &v57);
    sub_1001ED398(v21, v24);
    v54 = v34;
    v23 = &v15;
    __chkstk_darwin(&v15);
    v11 = v25;
    v12 = &v15 - 6;
    v26 = &v15 - 6;
    v12[2] = (uint64_t)v24;
    v12[3] = (uint64_t)v11;
    v12[4] = v13;
    v27 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v14 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v26, v27, v14);
    if (v10)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v32, "Attempting to provide feedback without a summary", v18, v31);
      v15 = 0;
      sub_1001ED3F0(v19, 0);
      sub_1001ED3F0(v20, v15);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v34);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v34);
  }

  (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
}

uint64_t GeneratedSummaryViewCell.didAttemptRestrictedAction(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t *v39;
  uint64_t *v40;
  _BYTE **v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  uint32_t v48;
  int v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t *v59;
  uint64_t *v60;
  _BYTE **v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint32_t v78;
  uint64_t v79;
  int v80;
  NSObject *v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  void *Strong;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint32_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v90 = a1;
  v122 = 0;
  v121 = 0;
  v89 = 0;
  v88 = 0;
  v114 = 0;
  v113 = 0;
  v111 = 0;
  v112 = 0;
  v109 = 0;
  v110 = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  v91 = type metadata accessor for Logger(0);
  v92 = *(_QWORD *)(v91 - 8);
  v93 = (*(_QWORD *)(v92 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v90);
  v94 = (char *)&v31 - v93;
  v95 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v96 = (char *)&v31 - v95;
  v122 = v4;
  v121 = v1;
  v97 = v1 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate;
  v98 = (char *)&v120 + 4;
  swift_beginAccess(v1 + OBJC_IVAR___MFGeneratedSummaryViewCell_delegate);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v97);
  swift_endAccess(v98);
  if (Strong)
  {
    v86 = Strong;
    v84 = Strong;
    v114 = Strong;
    v5 = v87;
    v85 = objc_msgSend(v87, "itemID");
    if (v85)
    {
      v83 = v85;
      v73 = v85;
      v113 = v85;

      v79 = 0;
      v65 = type metadata accessor for ManualSummaryView(0);
      v66 = static ManualSummaryView.restrictedActionAlertTitle.getter();
      v67 = v6;
      v111 = v66;
      v112 = v6;
      v68 = static ManualSummaryView.restrictedActionAlertMessage.getter();
      v69 = v7;
      v109 = v68;
      v110 = v7;
      v70 = static ManualSummaryView.restrictedActionAlertButtonTitle.getter();
      v71 = v8;
      v107 = v70;
      v108 = v8;
      sub_10024E64C();
      swift_bridgeObjectRetain(v67);
      swift_bridgeObjectRetain(v69);
      v74 = sub_10024DEBC(v66, v67, v68, v69, 1);
      v106 = v74;
      sub_10024E6B0();
      swift_bridgeObjectRetain(v71);
      v9 = sub_10024DFFC(v70, v71, v79, v79, v79);
      v10 = v96;
      v72 = v9;
      objc_msgSend(v74, "addAction:");

      swift_getObjectType();
      objc_msgSend(v84, "summaryCell:withItemID:wantsToDisplayAlert:", v87, v73, v74);
      v11 = sub_100248200();
      v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 16))(v10, v11, v91);
      v81 = Logger.logObject.getter(v12);
      v80 = static os_log_type_t.error.getter();
      v77 = &v104;
      v104 = 2;
      v75 = sub_1001EB1EC();
      v76 = sub_1001EB254();
      v13 = sub_1001EB2BC();
      UnsignedInteger<>.init<A>(_:)(&v105, v77, &type metadata for UInt32, &type metadata for Int, v75, v76, v13);
      v78 = v105;
      v14 = sub_10003A0C8(qword_1005A5580);
      v82 = _allocateUninitializedArray<A>(_:)(v79, v14);
      if (os_log_type_enabled(v81, (os_log_type_t)v80))
      {
        v15 = v88;
        v55 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
        v53 = sub_10003A0C8(&qword_1005A3AD0);
        v54 = 0;
        v56 = sub_1001ED340(0, v53, v53);
        v57 = sub_1001ED340(v54, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v61 = &v103;
        v103 = v55;
        v62 = &v102;
        v102 = v56;
        v59 = &v101;
        v101 = v57;
        v58 = 0;
        sub_1001ED398(0, &v103);
        sub_1001ED398(v58, v61);
        v100 = v82;
        v60 = &v31;
        __chkstk_darwin(&v31);
        v16 = v62;
        v17 = &v31 - 6;
        v63 = &v31 - 6;
        v17[2] = (uint64_t)v61;
        v17[3] = (uint64_t)v16;
        v17[4] = v18;
        v64 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
        v19 = sub_1001F5C14();
        Sequence.forEach(_:)(sub_1001F5BE8, v63, v64, v19);
        if (v15)
        {
          __break(1u);
        }
        else
        {
          _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v80, "Did display summaries-unavailable alert", v55, v78);
          v52 = 0;
          sub_1001ED3F0(v56, 0);
          sub_1001ED3F0(v57, v52);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v82);
        }
      }
      else
      {
        swift_bridgeObjectRelease(v82);
      }

      (*(void (**)(char *, uint64_t))(v92 + 8))(v96, v91);
      swift_bridgeObjectRelease(v71);
      swift_bridgeObjectRelease(v69);
      swift_bridgeObjectRelease(v67);
      swift_unknownObjectRelease(v73);
      return swift_unknownObjectRelease(v84);
    }

    swift_unknownObjectRelease(v84);
  }
  v21 = v94;
  v22 = sub_100248200();
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 16))(v21, v22, v91);
  v50 = Logger.logObject.getter(v23);
  v49 = static os_log_type_t.error.getter();
  v47 = &v119;
  v119 = 2;
  v45 = sub_1001EB1EC();
  v46 = sub_1001EB254();
  v24 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v120, v47, &type metadata for UInt32, &type metadata for Int, v45, v46, v24);
  v48 = v120;
  v25 = sub_10003A0C8(qword_1005A5580);
  v51 = _allocateUninitializedArray<A>(_:)(0, v25);
  if (os_log_type_enabled(v50, (os_log_type_t)v49))
  {
    v26 = v88;
    v35 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2, &type metadata for UInt8);
    v33 = sub_10003A0C8(&qword_1005A3AD0);
    v34 = 0;
    v36 = sub_1001ED340(0, v33, v33);
    v37 = sub_1001ED340(v34, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v41 = &v118;
    v118 = v35;
    v42 = &v117;
    v117 = v36;
    v39 = &v116;
    v116 = v37;
    v38 = 0;
    sub_1001ED398(0, &v118);
    sub_1001ED398(v38, v41);
    v115 = v51;
    v40 = &v31;
    __chkstk_darwin(&v31);
    v27 = v42;
    v28 = &v31 - 6;
    v43 = &v31 - 6;
    v28[2] = (uint64_t)v41;
    v28[3] = (uint64_t)v27;
    v28[4] = v29;
    v44 = sub_10003A0C8((uint64_t *)&unk_1005A4990);
    v30 = sub_1001F5C14();
    Sequence.forEach(_:)(sub_1001F5BE8, v43, v44, v30);
    if (v26)
    {
      __break(1u);
    }
    else
    {
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v49, "Unable to show summaries-unavailable alert", v35, v48);
      v32 = 0;
      sub_1001ED3F0(v36, 0);
      sub_1001ED3F0(v37, v32);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v51);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v51);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v94, v91);
}

id sub_10024DEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;
  NSString v7;
  void *v8;
  NSString v9;
  void *v10;

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v10 = v9;
  }
  else
  {
    v10 = 0;
  }
  if (a4)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "alertControllerWithTitle:message:preferredStyle:", v10, v8, a5);

  return v6;
}

id sub_10024DFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;
  void *v7;
  const void *v8;
  NSString v9;
  void *v10;
  void **aBlock;
  int v16;
  int v17;
  uint64_t (*v18)(uint64_t, void *);
  void *v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v10 = v9;
  }
  else
  {
    v10 = 0;
  }
  if (a4)
  {
    v20 = a4;
    v21 = a5;
    aBlock = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = 0;
    v18 = sub_1002113DC;
    v19 = &unk_100527DF0;
    v7 = _Block_copy(&aBlock);
    swift_release(v21);
    v8 = v7;
  }
  else
  {
    v8 = 0;
  }
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "actionWithTitle:style:handler:", v10, a3, v8);
  _Block_release(v8);

  return v6;
}

void sub_10024E170(uint64_t a1)
{
  GeneratedSummaryViewCell.didSelectShowSummaryButton(for:)(a1);
}

void sub_10024E184(uint64_t a1, uint64_t a2)
{
  GeneratedSummaryViewCell.didSelectFeedbackMenuItem(for:type:)(a1, a2);
}

uint64_t sub_10024E198(uint64_t a1)
{
  return GeneratedSummaryViewCell.didAttemptRestrictedAction(for:)(a1);
}

uint64_t sub_10024E1AC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v4 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (result > 0)
    {
      v1 = type metadata accessor for DispatchWorkItemFlags(0);
      v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
      *(_QWORD *)(v2 + 16) = v4;
      v3 = (void *)v2;
    }
    else
    {
      swift_retain(&_swiftEmptyArrayStorage);
      v3 = &_swiftEmptyArrayStorage;
    }
    type metadata accessor for DispatchWorkItemFlags(0);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_10024E264(uint64_t (*a1)(void))
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1();
  v3 = sub_10024E310((void (*)(uint64_t *__return_ptr, uint64_t *))sub_10024E2D0, 0, v2);
  swift_errorRelease(v2);
  return v3;
}

uint64_t sub_10024E2D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v3;

  v3 = *a1;
  swift_errorRetain();
  result = _swift_stdlib_bridgeErrorToNSError(v3);
  *a2 = result;
  return result;
}

uint64_t sub_10024E310(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!a3)
    return 0;
  v8 = a3;
  swift_errorRetain();
  a1(&v9, &v8);
  if (v7)
  {
    swift_errorRelease(a3);
    return v4;
  }
  swift_errorRelease(a3);
  return v9;
}

void *sub_10024E3E8(uint64_t (*a1)(void))
{
  uint64_t v1;
  id v2;
  void *v4;

  v1 = a1();
  v4 = (void *)_swift_stdlib_bridgeErrorToNSError(v1);
  v2 = v4;
  swift_unknownObjectRelease(v4);
  return v4;
}

uint64_t sub_10024E428()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024E450()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024E478()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

_QWORD *sub_10024E4B4(_QWORD *a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  double v4;
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  double v9;
  uint64_t v10;

  v4 = a4();
  v7 = *a1;
  v5 = *a1 + 8;
  v9 = v4;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v7, v5);
  result = a1;
  *a1 = v7 + 8;
  return result;
}

uint64_t sub_10024E518()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

_QWORD *sub_10024E554(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10024E4B4(a1, a2, a3, *(double (**)(void))(v3 + 16));
}

uint64_t sub_10024E560()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

uint64_t sub_10024E59C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_10024E5E0()
{
  uint64_t v0;

  sub_10024AFF4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10024E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10024E634(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10024E64C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5640;
  if (!qword_1005A5640)
  {
    v0 = objc_opt_self(UIAlertController);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5640);
    return ObjCClassMetadata;
  }
  return v3;
}

unint64_t sub_10024E6B0()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5648;
  if (!qword_1005A5648)
  {
    v0 = objc_opt_self(UIAlertAction);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5648);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_10024E714(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10024E758(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10024E770()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_10024E7B4(void *a1)
{
  uint64_t v1;

  sub_10024B22C(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10024E7C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10024E808(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10024E820()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

uint64_t sub_10024E864(uint64_t a1)
{
  uint64_t v1;

  return sub_10024C348(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10024E874(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10024E8B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10024E8D0()
{
  uint64_t v0;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_10024E90C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024E934()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024E95C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

void *sub_10024E998()
{
  uint64_t v0;

  return sub_10024E3E8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10024E9A4()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_10024E9E0()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_10024EA1C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 40);
}

void sub_10024EA60(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10024B334(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10024EA70(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10024EAB4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10024EACC()
{
  uint64_t v0;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v2, 56);
}

uint64_t sub_10024EB20()
{
  uint64_t v0;

  return sub_10024B56C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10024EB38(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  swift_retain(v5);
  result = a1;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_10024EB7C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10024EB94()
{
  uint64_t v0;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v2, 24);
}

uint64_t sub_10024EBD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024EBF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024EC20()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_10024EC5C()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

unint64_t sub_10024EC98()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5678;
  if (!qword_1005A5678)
  {
    v0 = type metadata accessor for ManualSummaryError(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ManualSummaryError, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5678);
    return WitnessTable;
  }
  return v3;
}

uint64_t GroupedSearchItems.Section.Kind.init(category:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE **v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint32_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  NSObject *v72;
  int v73;
  id v74;
  unsigned int v75;
  id v76;
  unsigned int v77;
  id v78;
  unsigned int v79;
  id v80;
  unsigned int v81;
  id v82;
  unsigned int v83;
  id v84;
  unsigned int v85;
  id v86;
  unsigned int v87;
  id v88;
  unsigned int v89;
  id v90;
  unsigned int v91;
  id v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  unint64_t v105;
  char *v106;
  id v107;
  id v108;
  unsigned int v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  uint64_t (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  char *v129;

  v94 = a2;
  v107 = a1;
  v129 = 0;
  v128 = 0;
  v95 = 0;
  v120 = 0;
  v119 = 0;
  v118 = 0;
  v117 = 0;
  v116 = 0;
  v115 = 0;
  v114 = 0;
  v113 = 0;
  v112 = 0;
  v111 = 0;
  v110 = 0;
  v96 = 0;
  v97 = type metadata accessor for Logger(0);
  v98 = *(_QWORD *)(v97 - 8);
  v99 = (*(_QWORD *)(v98 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v100 = (char *)v46 - v99;
  v101 = type metadata accessor for GroupedSearchItems.Section.Kind(v2);
  v102 = *(_QWORD *)(v101 - 8);
  v103 = (*(_QWORD *)(v102 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v107);
  v104 = (char *)v46 - v103;
  v105 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = (void *)__chkstk_darwin(v3);
  v106 = (char *)v46 - v105;
  v129 = (char *)v46 - v105;
  v128 = v5;
  v6 = v5;
  v108 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "mailboxCategory");
  v109 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v109 & 1) != 0)
  {
    v110 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.mailboxes(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

LABEL_32:
    (*(void (**)(uint64_t, char *, uint64_t))(v102 + 16))(v94, v106, v101);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v102 + 56))(v94, 0, 1, v101);

    return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v106, v101);
  }

  v7 = v107;
  v92 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "otherCategory");
  v93 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v93 & 1) != 0)
  {
    v111 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.others(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v8 = v107;
  v90 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "cannedCategory");
  v91 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v91 & 1) != 0)
  {
    v112 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.cannedSearches(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v9 = v107;
  v88 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "instantAnswersCategory");
  v89 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v89 & 1) != 0)
  {
    v113 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.instantAnswers(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v10 = v107;
  v86 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "topHitsCategory");
  v87 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v87 & 1) != 0)
  {
    v114 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.topHits(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v11 = v107;
  v84 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "contactCategory");
  v85 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v85 & 1) != 0)
  {
    v115 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.contacts(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v12 = v107;
  v82 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "suggestedSearchCategory");
  v83 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v83 & 1) != 0)
  {
    v116 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.suggestions(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v13 = v107;
  v80 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "documentCategory");
  v81 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v81 & 1) != 0)
  {
    v117 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.documents(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v14 = v107;
  v78 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "locationCategory");
  v79 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v79 & 1) != 0)
  {
    v118 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.locations(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v15 = v107;
  v76 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "linkCategory");
  v77 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v77 & 1) != 0)
  {
    v119 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.links(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }

  v16 = v107;
  v74 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "recentSearchCategory");
  v75 = objc_msgSend(v107, "isGroupedInCategory:");

  if ((v75 & 1) != 0)
  {
    v120 = v107;
    (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for GroupedSearchItems.Section.Kind.recentSearches(_:), v101);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v106, v104, v101);

    goto LABEL_32;
  }
  v17 = v100;

  v55 = sub_100331BD4();
  v56 = (char *)&v127 + 4;
  v62 = 32;
  swift_beginAccess(v55);
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v17, v55, v97);
  swift_endAccess(v56);
  v18 = v107;
  v63 = 7;
  v19 = swift_allocObject(&unk_100528148, 24, 7);
  v64 = v19;
  *(_QWORD *)(v19 + 16) = v107;
  v72 = Logger.logObject.getter(v19);
  v73 = static os_log_type_t.error.getter();
  v59 = &v126;
  v126 = 12;
  v57 = sub_1001EB1EC();
  v58 = sub_1001EB254();
  v20 = sub_1001EB2BC();
  UnsignedInteger<>.init<A>(_:)(&v127, v59, &type metadata for UInt32, &type metadata for Int, v57, v58, v20);
  v60 = v127;
  v61 = 17;
  v21 = swift_allocObject(&unk_100528170, 17, v63);
  v22 = v61;
  v23 = v63;
  v66 = v21;
  *(_BYTE *)(v21 + 16) = 64;
  v24 = swift_allocObject(&unk_100528198, v22, v23);
  v25 = v62;
  v26 = v63;
  v67 = v24;
  *(_BYTE *)(v24 + 16) = 8;
  v27 = swift_allocObject(&unk_1005281C0, v25, v26);
  v28 = v62;
  v29 = v63;
  v30 = v27;
  v31 = v64;
  v65 = v30;
  *(_QWORD *)(v30 + 16) = sub_1001E8E1C;
  *(_QWORD *)(v30 + 24) = v31;
  v32 = swift_allocObject(&unk_1005281E8, v28, v29);
  v33 = v65;
  v69 = v32;
  *(_QWORD *)(v32 + 16) = sub_1001ED524;
  *(_QWORD *)(v32 + 24) = v33;
  v71 = sub_10003A0C8(qword_1005A5580);
  v68 = _allocateUninitializedArray<A>(_:)(3, v71);
  v70 = v34;
  swift_retain(v66);
  v35 = v67;
  v36 = v66;
  v37 = v70;
  *v70 = sub_1001ED4B8;
  v37[1] = v36;
  swift_retain(v35);
  v38 = v69;
  v39 = v67;
  v40 = v70;
  v70[2] = sub_1001ED4B8;
  v40[3] = v39;
  swift_retain(v38);
  v41 = v68;
  v42 = v69;
  v43 = v70;
  v70[4] = sub_1001ED6A8;
  v43[5] = v42;
  sub_10003CB20();
  swift_bridgeObjectRelease(v41);
  if (os_log_type_enabled(v72, (os_log_type_t)v73))
  {
    v44 = v95;
    v48 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12, &type metadata for UInt8);
    v47 = sub_10003A0C8(&qword_1005A3AD0);
    v49 = sub_1001ED340(1, v47, v47);
    v50 = sub_1001ED340(0, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v51 = &v125;
    v125 = v48;
    v52 = &v124;
    v124 = v49;
    v53 = &v123;
    v123 = v50;
    sub_1001ED398(2, &v125);
    sub_1001ED398(1, v51);
    v121 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
    v122 = v66;
    sub_1001ED3AC(&v121, (uint64_t)v51, (uint64_t)v52, (uint64_t)v53);
    v54 = v44;
    if (v44)
    {
      __break(1u);
    }
    else
    {
      v121 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED4B8;
      v122 = v67;
      sub_1001ED3AC(&v121, (uint64_t)&v125, (uint64_t)&v124, (uint64_t)&v123);
      v46[0] = 0;
      v121 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001ED6A8;
      v122 = v69;
      sub_1001ED3AC(&v121, (uint64_t)&v125, (uint64_t)&v124, (uint64_t)&v123);
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v73, "Unsupported section: %@.", v48, v60);
      sub_1001ED3F0(v49, 1);
      sub_1001ED3F0(v50, 0);
      UnsafeMutablePointer.deallocate()();
      swift_release(v66);
      swift_release(v67);
      swift_release(v69);
    }
  }
  else
  {
    swift_release(v66);
    swift_release(v67);
    swift_release(v69);
  }

  (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v97);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v94, 1, 1, v101);
}

uint64_t sub_10024FE50()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_10024FE8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024FEB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17);
}

uint64_t sub_10024FEDC()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_10024FF18()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_10024FF54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v3[2];
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a1;
  v6 = sub_10003A0C8(&qword_1005A5680);
  v4 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(v3[1]);
  v7 = (uint64_t)v3 - v4;
  sub_10024FFE8(v1, (uint64_t)v3 - v4);
  State.wrappedValue.getter(v6);
  return sub_100250064(v7);
}

uint64_t sub_10024FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
  v6 = *(int *)(sub_10003A0C8(&qword_1005A5680) + 28);
  v7 = *(_QWORD *)(a1 + v6);
  swift_retain(v7);
  result = a2;
  *(_QWORD *)(a2 + v6) = v7;
  return result;
}

uint64_t sub_100250064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);
  v2 = sub_10003A0C8(&qword_1005A5680);
  swift_release(*(_QWORD *)(a1 + *(int *)(v2 + 28)));
  return a1;
}

uint64_t sub_1002500C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v3[2];
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a1;
  v6 = sub_10003A0C8(&qword_1005A5680);
  v4 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1 = __chkstk_darwin(v3[1]);
  v7 = (uint64_t)v3 - v4;
  sub_10024FFE8(v1, (uint64_t)v3 - v4);
  State.projectedValue.getter(v6);
  return sub_100250064(v7);
}

uint64_t sub_100250154@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a1;
  v8 = sub_10003A0C8(&qword_1005A5680);
  v5 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  v1 = (char *)&v4 - v5;
  v9 = (uint64_t)&v4 - v5;
  v2 = type metadata accessor for IndexingSpeedView(0);
  sub_10024FFE8(v6 + *(int *)(v2 + 20), (uint64_t)v1);
  State.wrappedValue.getter(v8);
  return sub_100250064(v9);
}

uint64_t type metadata accessor for IndexingSpeedView(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A5790;
  if (!qword_1005A5790)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IndexingSpeedView);
  return v2;
}

uint64_t sub_100250258@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a1;
  v8 = sub_10003A0C8(&qword_1005A5680);
  v5 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v8);
  v1 = (char *)&v4 - v5;
  v9 = (uint64_t)&v4 - v5;
  v2 = type metadata accessor for IndexingSpeedView(0);
  sub_10024FFE8(v6 + *(int *)(v2 + 20), (uint64_t)v1);
  State.projectedValue.getter(v8);
  return sub_100250064(v9);
}

uint64_t sub_1002502F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = 0;
  v1 = type metadata accessor for IndexingSpeedView(0);
  v5 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = (uint64_t)&v4 - v5;
  v15 = v0;
  v7 = *(_QWORD *)(v0 + *(int *)(__chkstk_darwin(v1) + 32));
  swift_bridgeObjectRetain(v7);
  v14 = v7;
  sub_100250708(v6, v8);
  v9 = &v12;
  v13 = v8;
  v10 = sub_10003A0C8(&qword_1005A5688);
  v2 = sub_100250958();
  v11 = _ArrayProtocol.filter(_:)(sub_100250930, v9, v10, v2);
  v4 = v11;
  sub_1002509C8(v8);
  return v4;
}

uint64_t sub_100250404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[12];
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  _BYTE *v27;
  unint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a1;
  v37 = a2;
  v40 = 0;
  v39 = 0;
  v20 = 0;
  v17 = type metadata accessor for IndexingSpeedView(0);
  v18 = (*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v36 = &v13[-v18];
  v3 = type metadata accessor for IndexingSpeedView.IndexingData(v2);
  v19 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v35 = &v13[-v19];
  v26 = sub_10003A0C8(&qword_1005A5680);
  v21 = (*(_QWORD *)(*(_QWORD *)(v26 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v20);
  v5 = &v13[-v21];
  v27 = &v13[-v21];
  v32 = type metadata accessor for Date(v4);
  v29 = *(_QWORD *)(v32 - 8);
  v23 = *(_QWORD *)(v29 + 64);
  v22 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v32);
  v30 = &v13[-v22];
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(&v13[-v22]);
  v31 = &v13[-v24];
  v40 = v6;
  v39 = v37;
  v25 = *(void (**)(void))(v7 + 16);
  v25();
  sub_10024FFE8(v37, (uint64_t)v5);
  State.wrappedValue.getter(v26);
  v8 = v32;
  sub_100250064((uint64_t)v27);
  v28 = sub_1002576E8();
  v38 = static Comparable.>= infix(_:_:)(v31, v30, v8);
  v33 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
  v33(v30, v32);
  v33(v31, v32);
  sub_1002579B4(v34, (uint64_t)v35);
  v9 = sub_100250708(v37, (uint64_t)v36);
  if ((v38 & 1) != 0)
  {
    v10 = v27;
    ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v25)(v31, v35, v32, v9);
    sub_10024FFE8((uint64_t)&v36[*(int *)(v17 + 20)], (uint64_t)v10);
    State.wrappedValue.getter(v26);
    v11 = v32;
    sub_100250064((uint64_t)v27);
    v15 = static Comparable.<= infix(_:_:)(v31, v30, v11, v28);
    v33(v30, v32);
    v33(v31, v32);
    v16 = v15;
  }
  else
  {
    v16 = 0;
  }
  v14 = v16;
  sub_100251CFC((uint64_t)v35);
  sub_1002509C8((uint64_t)v36);
  return v14 & 1;
}

__n128 sub_100250708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v22;
  uint64_t v23;

  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 16);
  ((void (*)(uint64_t, uint64_t))v12)(a2, a1);
  v7 = sub_10003A0C8(&qword_1005A5680);
  v4 = *(int *)(v7 + 28);
  v5 = *(_QWORD *)(a1 + v4);
  swift_retain(v5);
  *(_QWORD *)(a2 + v4) = v5;
  v20 = (int *)type metadata accessor for IndexingSpeedView(0);
  v9 = a2 + v20[5];
  v6 = a1 + v20[5];
  v12();
  v8 = *(int *)(v7 + 28);
  v10 = *(_QWORD *)(v6 + v8);
  swift_retain(v10);
  *(_QWORD *)(v9 + v8) = v10;
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(a2 + v20[6], a1 + v20[6], v11);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(a2 + v20[7], a1 + v20[7], v11);
  v13 = v20[8];
  v14 = *(_QWORD *)(a1 + v13);
  swift_bridgeObjectRetain(v14);
  *(_QWORD *)(a2 + v13) = v14;
  v15 = v20[9];
  v16 = *(_QWORD *)(a1 + v15);
  swift_retain(v16);
  *(_QWORD *)(a2 + v15) = v16;
  v18 = v20[10];
  v19 = *(_QWORD *)(a1 + v18);
  swift_retain(v19);
  *(_QWORD *)(a2 + v18) = v19;
  v22 = v20[11];
  v23 = *(_QWORD *)(a1 + v22);
  swift_bridgeObjectRetain(v23);
  v2 = a2 + v22;
  *(_QWORD *)v2 = v23;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + v22 + 8);
  result = *(__n128 *)(a1 + v22 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

uint64_t sub_100250930(uint64_t a1)
{
  uint64_t v1;

  return sub_100250404(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_100250958()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5690;
  if (!qword_1005A5690)
  {
    v0 = sub_1001E7634(&qword_1005A5688);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5690);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002509C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  int *v6;

  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(void))(*(_QWORD *)(v4 - 8) + 8);
  ((void (*)(uint64_t))v5)(a1);
  v2 = sub_10003A0C8(&qword_1005A5680);
  swift_release(*(_QWORD *)(a1 + *(int *)(v2 + 28)));
  v6 = (int *)type metadata accessor for IndexingSpeedView(0);
  v3 = a1 + v6[5];
  v5();
  swift_release(*(_QWORD *)(v3 + *(int *)(v2 + 28)));
  ((void (*)(uint64_t, uint64_t))v5)(a1 + v6[6], v4);
  ((void (*)(uint64_t, uint64_t))v5)(a1 + v6[7], v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v6[8]));
  swift_release(*(_QWORD *)(a1 + v6[9]));
  swift_release(*(_QWORD *)(a1 + v6[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v6[11]));
  return a1;
}

uint64_t sub_100250AFC()
{
  return static Color.gray.getter();
}

uint64_t sub_100250B10()
{
  return static Color.cyan.getter();
}

uint64_t sub_100250B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(type metadata accessor for IndexingSpeedView.IndexingData(0) + 28);
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v1 + v4);
}

uint64_t type metadata accessor for IndexingSpeedView.IndexingData(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A5840;
  if (!qword_1005A5840)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for IndexingSpeedView.IndexingData);
  return v2;
}

uint64_t sub_100250BE0()
{
  return UUID.init()();
}

uint64_t sub_100250BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v13;

  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a5, a1);
  v6 = (int *)type metadata accessor for IndexingSpeedView.IndexingData(0);
  *(_QWORD *)(a5 + v6[5]) = a2;
  *(_QWORD *)(a5 + v6[6]) = a3;
  v13 = v6[7];
  v7 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5 + v13, a4);
}

uint64_t sub_100250C9C@<X0>(uint64_t a1@<X8>)
{
  return sub_100250B24(a1);
}

uint64_t sub_100250CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int *v20;
  uint64_t *v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(uint64_t, char *, uint64_t);
  uint64_t *v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;

  v43 = a2;
  v84 = a1;
  v98 = 0;
  v97 = 0;
  v86 = 0;
  v2 = sub_10003A0C8(&qword_1005A5680);
  v44 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v45 = (uint64_t)&v33 - v44;
  v3 = sub_10003A0C8(&qword_1005A5698);
  v46 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v47 = (uint64_t)&v33 - v46;
  v48 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v33 - v46);
  v49 = (uint64_t)&v33 - v48;
  v5 = sub_10003A0C8(&qword_1005A4F00);
  v50 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  v51 = (char *)&v33 - v50;
  v52 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v33 - v50);
  v53 = (uint64_t)&v33 - v52;
  v85 = 0;
  v54 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v85);
  v57 = (char *)&v33 - v56;
  v58 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v59 = (char *)&v33 - v58;
  v60 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v9);
  v61 = (char *)&v33 - v60;
  v66 = (int *)type metadata accessor for IndexingSpeedView(v11);
  v62 = (*(_QWORD *)(*((_QWORD *)v66 - 1) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = __chkstk_darwin(v66);
  v81 = (uint64_t)&v33 - v62;
  v98 = (char *)&v33 - v62;
  v97 = v13;
  v64 = *(int *)(v12 + 36);
  v14 = sub_100250AFC();
  v63 = &v96;
  v96 = v14;
  v71 = sub_100251768();
  v77 = &type metadata for Color;
  v72 = &protocol witness table for Color;
  v15 = Color.init<A>(_:)(v63);
  v16 = v66;
  *(_QWORD *)(v81 + v64) = v15;
  v65 = v16[10];
  v95 = sub_100250B10();
  v17 = Color.init<A>(_:)(&v95);
  v18 = v77;
  v19 = v17;
  v20 = v66;
  *(_QWORD *)(v81 + v65) = v19;
  v82 = v20[11];
  v76 = _allocateUninitializedArray<A>(_:)(3, v18);
  v75 = v21;
  v94 = sub_100250B10();
  v67 = Color.init<A>(_:)(&v94);
  v68 = Color.opacity(_:)(0.5);
  swift_release(v67);
  *v75 = v68;
  v93 = sub_100250B10();
  v69 = Color.init<A>(_:)(&v93);
  v70 = Color.opacity(_:)(0.2);
  swift_release(v69);
  v75[1] = v70;
  v92 = sub_100250B10();
  v73 = Color.init<A>(_:)(&v92);
  v74 = Color.opacity(_:)(0.05);
  swift_release(v73);
  v22 = v76;
  v75[2] = v74;
  sub_10003CB20();
  v78 = Gradient.init(colors:)(v22);
  v79 = static UnitPoint.top.getter();
  v80 = v23;
  v24 = static UnitPoint.bottom.getter();
  v83 = &v99;
  LinearGradient.init(gradient:startPoint:endPoint:)(v78, v79, v80, v24, v25);
  memcpy((void *)(v81 + v82), v83, 0x28uLL);
  v91[1] = v84;
  v87 = sub_10003A0C8(&qword_1005A56A8);
  v88 = type metadata accessor for IndexingSpeedView.IndexingData(v85);
  v26 = sub_100251A00();
  v89 = Sequence.compactMap<A>(_:)(sub_1002517D0, v86, v87, v88, v26);
  v41 = v89;
  v38 = v66[8];
  swift_bridgeObjectRetain(v89);
  swift_bridgeObjectRetain(v41);
  v27 = v41;
  *(_QWORD *)(v81 + v38) = v41;
  swift_bridgeObjectRetain(v27);
  v40 = v91;
  v91[0] = v41;
  v39 = sub_10003A0C8(&qword_1005A5688);
  v28 = sub_100251A70();
  Collection.first.getter(v39, v28);
  sub_1001ED890(v40);
  swift_bridgeObjectRelease(v41);
  v42 = *(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 48);
  if (v42(v49, 1) == 1)
  {
    sub_100251AE0(v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v53, 1, 1, v54);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v53, v49, v54);
    sub_100251CFC(v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v53, 0, 1, v54);
  }
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v37(v53, 1, v54) == 1)
  {
    Date.init()();
    sub_100221CBC(v53);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v61, v53, v54);
  }
  v29 = v81 + v66[6];
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 32);
  v35(v29, v61, v54);
  swift_bridgeObjectRetain(v41);
  v36 = &v90;
  v90 = v41;
  v30 = sub_100251B88();
  BidirectionalCollection.last.getter(v39, v30);
  sub_1001ED890(v36);
  swift_bridgeObjectRelease(v41);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v42)(v47, 1, v88) == 1)
  {
    sub_100251AE0(v47);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v51, 1, 1, v54);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v51, v47, v54);
    sub_100251CFC(v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v51, 0, 1, v54);
  }
  if (v37((uint64_t)v51, 1, v54) == 1)
  {
    Date.init()();
    sub_100221CBC((uint64_t)v51);
  }
  else
  {
    v35((uint64_t)v59, v51, v54);
  }
  v35(v81 + v66[7], v59, v54);
  v31 = v81 + v66[6];
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  v34(v57, v31, v54);
  sub_100251C34(v54, v45);
  sub_100251C94(v45, v81);
  v34(v57, v81 + v66[7], v54);
  sub_100251C34(v54, v45);
  sub_100251C94(v45, v81 + v66[5]);
  sub_100250708(v81, v43);
  swift_bridgeObjectRelease(v84);
  return sub_1002509C8(v81);
}

unint64_t sub_100251768()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A56A0;
  if (!qword_1005A56A0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Color, &type metadata for Color);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A56A0);
    return WitnessTable;
  }
  return v2;
}

void sub_1002517D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char **v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;

  v14 = a2;
  v17 = a1;
  v24 = 0;
  v23 = 0;
  v18 = 0;
  v15 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v16 = (uint64_t)&v6 - v15;
  v19 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for Date(v2) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v18);
  v20 = (uint64_t)&v6 - v19;
  v21 = *v3;
  v24 = v21;
  sub_100257950();
  swift_bridgeObjectRetain(v21);
  v22 = sub_100251BF8(v21);
  if (v22)
  {
    v13 = v22;
    v12 = v22;
    v23 = v22;
    v11 = objc_msgSend(v22, "date");
    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    v6 = objc_msgSend(v12, "messagesIndexed");
    v7 = &selRef_insertSectionsWithIdentifiers_beforeSectionWithIdentifier_;
    v9 = objc_msgSend(v6, "integerValue");

    v8 = objc_msgSend(v12, "indexableMessages");
    v10 = objc_msgSend(v8, v7[22]);

    sub_100250BE0();
    sub_100250BF4(v20, (uint64_t)v9, (uint64_t)v10, v16, v14);

    v5 = type metadata accessor for IndexingSpeedView.IndexingData(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v14, 0, 1);

  }
  else
  {
    v4 = type metadata accessor for IndexingSpeedView.IndexingData(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v14, 1);
  }
}

unint64_t sub_100251A00()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A56B0;
  if (!qword_1005A56B0)
  {
    v0 = sub_1001E7634(&qword_1005A56A8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A56B0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100251A70()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A56B8;
  if (!qword_1005A56B8)
  {
    v0 = sub_1001E7634(&qword_1005A5688);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A56B8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100251AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for IndexingSpeedView.IndexingData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1))
  {
    v1 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);
    v4 = a1 + *(int *)(v6 + 28);
    v2 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4);
  }
  return a1;
}

unint64_t sub_100251B88()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A56C0;
  if (!qword_1005A56C0)
  {
    v0 = sub_1001E7634(&qword_1005A5688);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A56C0);
    return WitnessTable;
  }
  return v3;
}

id sub_100251BF8(uint64_t a1)
{
  id v1;

  v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1002578DC(a1);
}

uint64_t sub_100251C34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + *(int *)(type metadata accessor for State() + 28)) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 - 8) + 32))();
}

uint64_t sub_100251C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
  v3 = sub_10003A0C8(&qword_1005A5680);
  result = a2;
  *(_QWORD *)(a2 + *(int *)(v3 + 28)) = *(_QWORD *)(a1 + *(int *)(v3 + 28));
  return result;
}

uint64_t sub_100251CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1);
  v4 = *(int *)(type metadata accessor for IndexingSpeedView.IndexingData(0) + 28);
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1 + v4);
  return a1;
}

uint64_t sub_100251D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v24 = a1;
  v32 = 0;
  v31 = 0;
  v19 = 0;
  v1 = type metadata accessor for IndexingSpeedView(0);
  v10 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v18 = (uint64_t)&v9 - v10;
  v21 = sub_10003A0C8(&qword_1005A56C8);
  v11 = (*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v23 = (uint64_t)&v9 - v11;
  v25 = sub_10003A0C8(&qword_1005A56D0);
  v13 = (*(_QWORD *)(*(_QWORD *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v12);
  v27 = (uint64_t)&v9 - v13;
  v14 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v28 = (uint64_t)&v9 - v14;
  v32 = (char *)&v9 - v14;
  v31 = v4;
  sub_100250708(v4, v5);
  v15 = &v29;
  v30 = v18;
  v16 = sub_10003A0C8(&qword_1005A56D8);
  v17 = sub_100254E64();
  v6 = sub_100254E44();
  v20 = 1;
  VStack.init(alignment:spacing:content:)(v6, v19, 1, sub_100252894, v15, v16, v17);
  sub_1002509C8(v18);
  v22 = sub_100254EF4();
  v7 = sub_100254ED4();
  View.padding(_:_:)(v7, v19, v20, v21, v22);
  sub_100254F64(v23);
  v26 = sub_10025504C();
  sub_100253AA8(v27, v25, v28);
  sub_100254F64(v27);
  sub_1002550D4(v28, v27);
  sub_100253AA8(v27, v25, v24);
  sub_100254F64(v27);
  return sub_100254F64(v28);
}

uint64_t sub_100251FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  Builtin::Word v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  unint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t OpaqueTypeConformance2;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[6];
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;

  v78 = a2;
  v67 = a1;
  v98 = 0;
  v97 = 0;
  v96 = 0;
  v75 = sub_10003A0C8(&qword_1005A58B0);
  v26 = (*(_QWORD *)(*(_QWORD *)(v75 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v75);
  v81 = (uint64_t)&v25 - v26;
  v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v25 - v26);
  v83 = (uint64_t)&v25 - v27;
  v98 = (char *)&v25 - v27;
  v68 = 0;
  v61 = type metadata accessor for AnnotationPosition();
  v59 = *(_QWORD *)(v61 - 8);
  v28 = (*(_QWORD *)(v59 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v68);
  v60 = (char *)&v25 - v28;
  v44 = type metadata accessor for IndexingSpeedView(v4);
  v34 = *(_QWORD *)(v44 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  v29 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v44);
  v73 = (uint64_t)&v25 - v29;
  v51 = sub_10003A0C8(&qword_1005A58B8);
  v49 = *(_QWORD *)(v51 - 8);
  v30 = (*(_QWORD *)(v49 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v51);
  v50 = (char *)&v25 - v30;
  v64 = sub_10003A0C8(&qword_1005A58C0);
  v62 = *(_QWORD *)(v64 - 8);
  v31 = (*(_QWORD *)(v62 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v64);
  v63 = (char *)&v25 - v31;
  v84 = sub_10003A0C8(&qword_1005A56F8);
  v74 = *(_QWORD *)(v84 - 8);
  v32 = (*(_QWORD *)(v74 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v84);
  v82 = (uint64_t)&v25 - v32;
  v33 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v25 - v32);
  v86 = (uint64_t)&v25 - v33;
  v97 = (char *)&v25 - v33;
  v96 = a1;
  v6 = sub_1002502F8();
  v42 = &v95;
  v95 = v6;
  sub_100250708(v67, v73);
  v7 = *(unsigned __int8 *)(v34 + 80);
  v43 = 16;
  v36 = (v7 + 16) & ~v7;
  v37 = swift_allocObject(&unk_100528210, v36 + v35, v7 | 7);
  sub_100256E50(v73, v37 + v36);
  v38 = sub_10003A0C8(&qword_1005A5688);
  v39 = sub_10003A0C8(&qword_1005A58C8);
  v40 = sub_100257014();
  v41 = sub_100257084();
  v8 = sub_10025739C();
  Chart.init<A, B>(_:content:)(v42, sub_100256FC8, v37, v38, v39, v40, v41, v8);
  v46 = sub_10003A0C8(&qword_1005A5918);
  v79 = 2;
  v47 = _allocateUninitializedArray<A>(_:)(2, v46);
  v45 = v9;
  v69 = 1;
  v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Messages Indexed", v43, 1);
  v11 = v44;
  v12 = v67;
  v13 = v45;
  *(Swift::String *)v45 = v10;
  sub_10025740C((_QWORD *)(v12 + *(int *)(v11 + 40)), (_QWORD *)(v13 + 16));
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Indexable Messages", 0x12uLL, v69 & 1);
  v15 = v44;
  v16 = v67;
  v17 = v45;
  *(Swift::String *)(v45 + 24) = v14;
  sub_10025740C((_QWORD *)(v16 + *(int *)(v15 + 36)), (_QWORD *)(v17 + 40));
  v18 = v47;
  sub_10003CB20();
  v52 = &type metadata for String;
  v53 = &type metadata for Color;
  v48 = KeyValuePairs.init(dictionaryLiteral:)(v18);
  v54 = sub_100257440();
  v55 = &protocol witness table for String;
  v56 = &protocol witness table for Color;
  View.chartForegroundStyleScale<A, B>(_:)(v48, v51, v52, v53);
  swift_bridgeObjectRelease(v48);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  v20 = static AnnotationPosition.overlay.getter(v19);
  v57 = static Alignment.top.getter(v20);
  v58 = v21;
  v94[0] = v51;
  v94[1] = v52;
  v94[2] = v53;
  v94[3] = v54;
  v94[4] = v55;
  v94[5] = v56;
  v66 = 1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v94, &opaque type descriptor for <<opaque return type of View.chartForegroundStyleScale<A, B>(_:)>>, 1);
  View.chartLegend(position:alignment:spacing:)(v60, v57, v58, 0, v68, v69, v64);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
  v93[0] = v64;
  v93[1] = OpaqueTypeConformance2;
  v76 = swift_getOpaqueTypeConformance2(v93, &opaque type descriptor for <<opaque return type of View.chartLegend(position:alignment:spacing:)>>, v66);
  sub_100253AA8(v82, v84, v86);
  v85 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8);
  v22 = v85(v82, v84);
  v72 = static HorizontalAlignment.leading.getter(v22);
  sub_100250708(v67, v73);
  v70 = &v87;
  v88 = v73;
  v71 = sub_10003A0C8(&qword_1005A5928);
  v23 = sub_1002574B8();
  VStack.init(alignment:spacing:content:)(v72, v68, v69, sub_1002574B0, v70, v71, v23);
  sub_1002509C8(v73);
  v77 = sub_100257528();
  sub_100253AA8(v81, v75, v83);
  sub_100257598(v81);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v82, v86, v84);
  v80 = v92;
  v92[0] = v82;
  sub_100257624(v83, v81);
  v92[1] = v81;
  v91[0] = v84;
  v91[1] = v75;
  v89 = v76;
  v90 = v77;
  sub_1002C9238((uint64_t)v80, v79, (uint64_t)v91, v78);
  sub_100257598(v81);
  v85(v82, v84);
  sub_100257598(v83);
  return v85(v86, v84);
}

uint64_t sub_100252894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100251FB0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10025289C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  Swift::String v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  Swift::String v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  Swift::String v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  double *v64;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  int v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  Swift::String *v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  void *v100;
  char *v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  Builtin::Word v131;
  int v132;
  uint64_t v133;
  Swift::String *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  void *v146;
  _QWORD *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  void *v153;
  char *v154;
  void (*v155)(char *, uint64_t, uint64_t);
  int v156;
  uint64_t v157;
  char *v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  Builtin::Word v167;
  unsigned int v168;
  char *v169;
  Builtin::Word v170;
  int v171;
  uint64_t v172;
  Swift::String *v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  int *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t (*v189)(char *, uint64_t);
  char *v190;
  void *v191;
  unsigned int v192;
  unsigned int v193;
  double v194;
  uint64_t v195;
  double v196;
  uint64_t v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t, uint64_t);
  uint64_t v223;
  uint64_t v224;
  void (*v225)(uint64_t, uint64_t);
  uint64_t v226;
  uint64_t v227;
  void (*v228)(uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _QWORD v232[3];
  _QWORD v233[3];
  _QWORD v234[2];
  _QWORD v235[4];
  uint64_t v236;
  Swift::String v237;
  uint64_t v238;
  _QWORD v239[4];
  _QWORD v240[2];
  _QWORD v241[5];
  Swift::String v242;
  uint64_t v243;
  _QWORD v244[4];
  _QWORD v245[4];
  _QWORD v246[2];
  uint64_t v247;
  _QWORD v248[2];
  Swift::String v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  char *v255;
  char v256;
  char v257;

  v215 = a3;
  v163 = a1;
  v186 = a2;
  v255 = 0;
  v254 = 0;
  v253 = 0;
  v252 = 0;
  v251 = 0;
  v205 = sub_10003A0C8(&qword_1005A5908);
  v203 = *(_QWORD *)(v205 - 8);
  v67 = (*(_QWORD *)(v203 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v205);
  v204 = (char *)&v66 - v67;
  v221 = sub_10003A0C8(&qword_1005A5970);
  v211 = *(_QWORD *)(v221 - 8);
  v68 = (*(_QWORD *)(v211 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v221);
  v217 = (uint64_t)&v66 - v68;
  v69 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v66 - v68);
  v220 = (uint64_t)&v66 - v69;
  v255 = (char *)&v66 - v69;
  v107 = 0;
  v144 = type metadata accessor for AreaMark();
  v137 = *(_QWORD *)(v144 - 8);
  v70 = (*(_QWORD *)(v137 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v144);
  v138 = (char *)&v66 - v70;
  v150 = sub_10003A0C8(&qword_1005A5900);
  v148 = *(_QWORD *)(v150 - 8);
  v71 = (*(_QWORD *)(v148 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v150);
  v149 = (char *)&v66 - v71;
  v224 = sub_10003A0C8(&qword_1005A5978);
  v210 = *(_QWORD *)(v224 - 8);
  v72 = (*(_QWORD *)(v210 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v107);
  v218 = (uint64_t)&v66 - v72;
  v73 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v4);
  v223 = (uint64_t)&v66 - v73;
  v254 = (char *)&v66 - v73;
  v121 = type metadata accessor for BasicChartSymbolShape(v6);
  v116 = *(_QWORD *)(v121 - 8);
  v74 = (*(_QWORD *)(v116 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v121);
  v117 = (char *)&v66 - v74;
  v7 = sub_10003A0C8(&qword_1005A5980);
  v75 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v7);
  v179 = (char *)&v66 - v75;
  v76 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A5988) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v107);
  v178 = (char *)&v66 - v76;
  v180 = type metadata accessor for Date(v8);
  v87 = *(_QWORD **)(v180 - 8);
  v77 = (v87[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v180);
  v158 = (char *)&v66 - v77;
  v78 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A5990) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v107);
  v177 = (char *)&v66 - v78;
  v197 = type metadata accessor for LineMark(v9);
  v102 = *(_QWORD *)(v197 - 8);
  v79 = (*(_QWORD *)(v102 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v197);
  v190 = (char *)&v66 - v79;
  v109 = sub_10003A0C8(&qword_1005A58F0);
  v105 = *(_QWORD *)(v109 - 8);
  v80 = (*(_QWORD *)(v105 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v109);
  v106 = (char *)&v66 - v80;
  v114 = sub_10003A0C8(&qword_1005A58E8);
  v112 = *(_QWORD *)(v114 - 8);
  v81 = (*(_QWORD *)(v112 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v114);
  v113 = (char *)&v66 - v81;
  v120 = sub_10003A0C8(&qword_1005A58E0);
  v118 = *(_QWORD *)(v120 - 8);
  v82 = (*(_QWORD *)(v118 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v120);
  v119 = (char *)&v66 - v82;
  v227 = sub_10003A0C8(&qword_1005A5998);
  v209 = *(_QWORD *)(v227 - 8);
  v83 = (*(_QWORD *)(v209 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = __chkstk_darwin(v163);
  v219 = (uint64_t)&v66 - v83;
  v84 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = __chkstk_darwin(v10);
  v226 = (uint64_t)&v66 - v84;
  v253 = (char *)&v66 - v84;
  v252 = v12;
  v251 = v13;
  v154 = "Date";
  v167 = 4;
  v168 = 1;
  v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Date", 4uLL, 1);
  v86 = LocalizedStringKey.init(stringLiteral:)(v14._countAndFlagsBits, v14._object);
  v88 = v15;
  v85 = v16;
  v89 = v17;
  v155 = (void (*)(char *, uint64_t, uint64_t))v87[2];
  v155(v158, v163, v180);
  v183 = &protocol witness table for Date;
  static PlottableValue.value(_:_:)(v86, v88, v85 & 1, v89, v158, v180);
  v159 = (void (*)(char *, uint64_t))v87[1];
  v159(v158, v180);
  swift_bridgeObjectRelease(v88);
  swift_bridgeObjectRelease(v89);
  v130 = "Messages Indexed";
  v131 = 16;
  v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Messages Indexed", 0x10uLL, v168 & 1);
  v91 = LocalizedStringKey.init(stringLiteral:)(v18._countAndFlagsBits, v18._object);
  v92 = v19;
  v90 = v20;
  v93 = v21;
  v162 = type metadata accessor for IndexingSpeedView.IndexingData(v107);
  v250 = *(_QWORD *)(v163 + *(int *)(v162 + 20));
  v181 = &type metadata for Int;
  v184 = &protocol witness table for Int;
  static PlottableValue.value(_:_:)(v91, v92, v90 & 1, v93, &v250, &type metadata for Int);
  swift_bridgeObjectRelease(v92);
  swift_bridgeObjectRelease(v93);
  v166 = "Type";
  v22 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Type", v167, v168 & 1);
  v95 = LocalizedStringKey.init(stringLiteral:)(v22._countAndFlagsBits, v22._object);
  v97 = v23;
  v94 = v24;
  v98 = v25;
  v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v130, v131, v168 & 1);
  v96 = &v249;
  v249 = v26;
  v182 = &type metadata for String;
  v176 = &protocol witness table for String;
  static PlottableValue.value(_:_:)(v95, v97, v94 & 1, v98, &v249, &type metadata for String);
  sub_1001F0D3C((uint64_t)v96);
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v98);
  LineMark.init<A, B, C>(x:y:series:)(v177, v178, v179, v180, v181, v182, v183, v184, v176);
  v99 = sub_100253A8C();
  v100 = sub_100253A94();
  variable initialization expression of InstantAnswerFlightContentView._departureTimeWidth();
  v101 = &v256;
  v196 = 3.0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v168, v168, v100);
  v199 = &protocol witness table for LineMark;
  ChartContent.lineStyle(_:)(v101, v197);
  sub_1002578B4((uint64_t)v101);
  v189 = *(uint64_t (**)(char *, uint64_t))(v102 + 8);
  v27 = v189(v190, v197);
  v104 = static InterpolationMethod.catmullRom.getter(v27);
  v103 = v28;
  v248[0] = v197;
  v248[1] = v199;
  v207 = &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>;
  v208 = 1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v248, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
  ChartContent.interpolationMethod(_:)(v104, v103, v109);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v109);
  v185 = (int *)type metadata accessor for IndexingSpeedView(v107);
  v108 = *(_QWORD *)(v186 + v185[10]);
  swift_retain(v108);
  v111 = &v247;
  v247 = v108;
  v246[0] = v109;
  v246[1] = OpaqueTypeConformance2;
  v146 = &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>;
  v115 = swift_getOpaqueTypeConformance2(v246, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, v208);
  v198 = &type metadata for Color;
  v200 = &protocol witness table for Color;
  ChartContent.foregroundStyle<A>(_:)(v111, v114);
  sub_1001F0F44(v111);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v113, v114);
  static ChartSymbolShape<>.circle.getter(v29);
  v245[0] = v114;
  v245[1] = v198;
  v245[2] = v115;
  v245[3] = v200;
  v201 = &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>;
  v122 = swift_getOpaqueTypeConformance2(v245, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, v208);
  v123 = sub_10025732C();
  ChartContent.symbol<A>(_:)(v117, v120, v121, v122);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v121);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
  v244[0] = v120;
  v244[1] = v121;
  v244[2] = v122;
  v244[3] = v123;
  v212 = swift_getOpaqueTypeConformance2(v244, &opaque type descriptor for <<opaque return type of ChartContent.symbol<A>(_:)>>, v208);
  sub_100253AA8(v219, v227, v226);
  v228 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
  v228(v219, v227);
  v30 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v154, v167, v168 & 1);
  v125 = LocalizedStringKey.init(stringLiteral:)(v30._countAndFlagsBits, v30._object);
  v126 = v31;
  v124 = v32;
  v127 = v33;
  v155(v158, v163, v180);
  static PlottableValue.value(_:_:)(v125, v126, v124 & 1, v127, v158, v180);
  v159(v158, v180);
  swift_bridgeObjectRelease(v126);
  swift_bridgeObjectRelease(v127);
  v34 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v130, v131, v168 & 1);
  v35 = LocalizedStringKey.init(stringLiteral:)(v34._countAndFlagsBits, v34._object);
  v128 = v36;
  v129 = v37;
  v243 = *(_QWORD *)(v163 + *(int *)(v162 + 20));
  static PlottableValue.value(_:_:)(v35, v36, v38 & 1, v37, &v243, v181);
  swift_bridgeObjectRelease(v128);
  swift_bridgeObjectRelease(v129);
  v39 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v166, v167, v168 & 1);
  v133 = LocalizedStringKey.init(stringLiteral:)(v39._countAndFlagsBits, v39._object);
  v135 = v40;
  v132 = v41;
  v136 = v42;
  v43 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v130, v131, v168 & 1);
  v134 = &v242;
  v242 = v43;
  static PlottableValue.value(_:_:)(v133, v135, v132 & 1, v136, &v242, v182);
  sub_1001F0D3C((uint64_t)v134);
  swift_bridgeObjectRelease(v135);
  swift_bridgeObjectRelease(v136);
  v44 = sub_100253AEC();
  v45 = AreaMark.init<A, B, C>(x:y:series:stacking:)(v177, v178, v179, v44, v180, v181, v182, v183, v184, v176);
  v46 = static InterpolationMethod.catmullRom.getter(v45);
  v145 = &protocol witness table for AreaMark;
  ChartContent.interpolationMethod(_:)(v46, v47, v144);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v144);
  v48 = (uint64_t *)(v186 + v185[11]);
  v139 = *v48;
  v140 = v48[1];
  v141 = v48[2];
  v142 = v48[3];
  v143 = v48[4];
  swift_bridgeObjectRetain(v139);
  v147 = v241;
  v241[0] = v139;
  v241[1] = v140;
  v241[2] = v141;
  v241[3] = v142;
  v241[4] = v143;
  v240[0] = v144;
  v240[1] = v145;
  v152 = swift_getOpaqueTypeConformance2(v240, v146, v208);
  v151 = &type metadata for LinearGradient;
  v153 = &protocol witness table for LinearGradient;
  ChartContent.foregroundStyle<A>(_:)(v147, v150);
  sub_1001ED890(v147);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v150);
  v239[0] = v150;
  v239[1] = v151;
  v239[2] = v152;
  v239[3] = v153;
  v213 = swift_getOpaqueTypeConformance2(v239, v201, v208);
  sub_100253AA8(v218, v224, v223);
  v225 = *(void (**)(uint64_t, uint64_t))(v210 + 8);
  v225(v218, v224);
  v49 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v154, v167, v168 & 1);
  v157 = LocalizedStringKey.init(stringLiteral:)(v49._countAndFlagsBits, v49._object);
  v160 = v50;
  v156 = v51;
  v161 = v52;
  v155(v158, v163, v180);
  static PlottableValue.value(_:_:)(v157, v160, v156 & 1, v161, v158, v180);
  v159(v158, v180);
  swift_bridgeObjectRelease(v160);
  swift_bridgeObjectRelease(v161);
  v169 = "Indexable Messages";
  v170 = 18;
  v53 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Indexable Messages", 0x12uLL, v168 & 1);
  v54 = LocalizedStringKey.init(stringLiteral:)(v53._countAndFlagsBits, v53._object);
  v164 = v55;
  v165 = v56;
  v238 = *(_QWORD *)(v163 + *(int *)(v162 + 24));
  static PlottableValue.value(_:_:)(v54, v55, v57 & 1, v56, &v238, v181);
  swift_bridgeObjectRelease(v164);
  swift_bridgeObjectRelease(v165);
  v58 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v166, v167, v168 & 1);
  v172 = LocalizedStringKey.init(stringLiteral:)(v58._countAndFlagsBits, v58._object);
  v174 = v59;
  v171 = v60;
  v175 = v61;
  v62 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v169, v170, v168 & 1);
  v173 = &v237;
  v237 = v62;
  static PlottableValue.value(_:_:)(v172, v174, v171 & 1, v175, &v237, v182);
  sub_1001F0D3C((uint64_t)v173);
  swift_bridgeObjectRelease(v174);
  swift_bridgeObjectRelease(v175);
  LineMark.init<A, B, C>(x:y:series:)(v177, v178, v179, v180, v181, v182, v183, v184, v176);
  v187 = *(_QWORD *)(v186 + v185[9]);
  swift_retain(v187);
  v188 = &v236;
  v236 = v187;
  ChartContent.foregroundStyle<A>(_:)(&v236, v197);
  sub_1001F0F44(v188);
  v189(v190, v197);
  v191 = &type metadata for CGFloat;
  v63 = _allocateUninitializedArray<A>(_:)(2, &type metadata for CGFloat);
  *v64 = 5.0;
  v64[1] = 10.0;
  sub_10003CB20();
  v195 = v63;
  v192 = sub_100253B08();
  v193 = sub_100253B08();
  v194 = sub_100253A8C();
  variable initialization expression of InstantAnswerFlightContentView._departureTimeWidth();
  v202 = &v257;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v192, v193, v195);
  v235[0] = v197;
  v235[1] = v198;
  v235[2] = v199;
  v235[3] = v200;
  v206 = swift_getOpaqueTypeConformance2(v235, v201, v208);
  ChartContent.lineStyle(_:)(v202, v205);
  sub_1002578B4((uint64_t)v202);
  (*(void (**)(char *, uint64_t))(v203 + 8))(v204, v205);
  v234[0] = v205;
  v234[1] = v206;
  v214 = swift_getOpaqueTypeConformance2(v234, v207, v208);
  sub_100253AA8(v217, v221, v220);
  v222 = *(void (**)(uint64_t, uint64_t))(v211 + 8);
  v222(v217, v221);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v219, v226, v227);
  v216 = v233;
  v233[0] = v219;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v210 + 16))(v218, v223, v224);
  v233[1] = v218;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16))(v217, v220, v221);
  v233[2] = v217;
  v232[0] = v227;
  v232[1] = v224;
  v232[2] = v221;
  v229 = v212;
  v230 = v213;
  v231 = v214;
  sub_100253B10((uint64_t)v216, 3uLL, (uint64_t)v232, v215);
  v222(v217, v221);
  v225(v218, v224);
  v228(v219, v227);
  v222(v220, v221);
  v225(v223, v224);
  return ((uint64_t (*)(uint64_t, uint64_t))v228)(v226, v227);
}

double sub_100253A8C()
{
  return 10.0;
}

void *sub_100253A94()
{
  return sub_1001F6FB0();
}

uint64_t sub_100253AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100253AEC()
{
  return 0;
}

uint64_t sub_100253B08()
{
  return 0;
}

char **sub_100253B10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  char **v19;
  unint64_t v20;
  char **v21;
  char **v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char **v26;
  unint64_t v27;
  char *v28;
  unint64_t i;
  uint64_t TupleTypeMetadata;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v31 = a4;
  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a3 & 0xFFFFFFFFFFFFFFFELL;
  if (a2 == 1)
  {
    TupleTypeMetadata = *(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFFELL);
  }
  else
  {
    v26 = &v12;
    v27 = (8 * v33 + 15) & 0xFFFFFFFFFFFFFFF0;
    __chkstk_darwin(&v12);
    v28 = (char *)&v12 - v27;
    for (i = v4; ; i = v5 + 1)
    {
      v25 = i;
      if (i >= v33)
        break;
      v5 = v25;
      *(_QWORD *)&v28[8 * v25] = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFFFELL) + 8 * v25);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata(0, v33, v28, 0);
  }
  v18 = TupleTypeMetadata;
  v6 = *(_QWORD *)(*(_QWORD *)(TupleTypeMetadata - 8) + 64);
  v19 = &v12;
  v20 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(&v12);
  v21 = &v12;
  v22 = &v12;
  v23 = (8 * v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(&v12);
  v24 = (char *)&v12 - v23;
  if (v8)
  {
    for (j = 0; ; j = v13)
    {
      v15 = j;
      v16 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFFFELL) + 8 * j);
      v14 = v33 == 1 ? 0 : *(_DWORD *)(v18 + 24 + 16 * v15 + 8);
      v12 = (char *)v21 + v14;
      (*(void (**)(void))(*(_QWORD *)(v16 - 8) + 16))();
      v9 = v15;
      v10 = v33;
      *(_QWORD *)&v24[8 * v15] = v12;
      v13 = v9 + 1;
      if (v9 + 1 == v10)
        break;
    }
  }
  BuilderTuple.init(elements:)(v24, v33, v34);
  return v19;
}

uint64_t sub_100253D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  unint64_t v57;
  _QWORD *v58;
  char *v59;
  char *v60;
  char *v61;
  void (*v62)(void);
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  Builtin::Word v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  const char *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  unint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  unint64_t v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  char *v117;
  unint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  void (*v141)(void);
  char *v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  _QWORD v148[2];
  _QWORD v149[2];
  uint64_t v150;
  char *v151;
  char *v152;

  v77 = a2;
  v136 = a1;
  v78 = "Fatal error";
  v79 = "Range requires lowerBound <= upperBound";
  v80 = "Swift/ClosedRange.swift";
  v152 = 0;
  v151 = 0;
  v150 = 0;
  v133 = 0;
  v81 = type metadata accessor for DatePickerComponents(0);
  v82 = *(_QWORD *)(v81 - 8);
  v83 = (*(_QWORD *)(v82 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v81);
  v84 = (char *)&v51 - v83;
  v85 = sub_10003A0C8(&qword_1005A5940);
  v86 = (*(_QWORD *)(*(_QWORD *)(v85 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v133);
  v87 = (char *)&v51 - v86;
  v88 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v89 = (char *)&v51 - v88;
  v143 = type metadata accessor for Date(v4);
  v134 = *(_QWORD **)(v143 - 8);
  v90 = v134[8];
  v91 = (v90 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v143);
  v92 = (char *)&v51 - v91;
  v93 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v91);
  v94 = (char *)&v51 - v93;
  v95 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v93);
  v96 = (char *)&v51 - v95;
  v97 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v95);
  v98 = (char *)&v51 - v97;
  v99 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v97);
  v142 = (char *)&v51 - v99;
  v100 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v99);
  v144 = (char *)&v51 - v100;
  v101 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v100);
  v140 = (char *)&v51 - v101;
  v102 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v101);
  v139 = (char *)&v51 - v102;
  v103 = sub_10003A0C8(&qword_1005A5948);
  v104 = (*(_QWORD *)(*(_QWORD *)(v103 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v103);
  v105 = (uint64_t)&v51 - v104;
  v106 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = __chkstk_darwin((char *)&v51 - v104);
  v107 = (uint64_t)&v51 - v106;
  v108 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v13);
  v109 = (uint64_t)&v51 - v108;
  v137 = sub_10003A0C8(&qword_1005A5680);
  v110 = (*(_QWORD *)(*(_QWORD *)(v137 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v137);
  v15 = (char *)&v51 - v110;
  v138 = (uint64_t)&v51 - v110;
  v16 = sub_10003A0C8(&qword_1005A5950);
  v111 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v16);
  v112 = (char *)&v51 - v111;
  v113 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v51 - v111);
  v132 = (char *)&v51 - v113;
  v114 = sub_10003A0C8(&qword_1005A5710);
  v115 = *(_QWORD **)(v114 - 8);
  v116 = (v115[8] + 15) & 0xFFFFFFFFFFFFFFF0;
  v18 = __chkstk_darwin(v136);
  v117 = (char *)&v51 - v116;
  v118 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  v20 = __chkstk_darwin(v18);
  v119 = (char *)&v51 - v118;
  v120 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  v22 = __chkstk_darwin(v20);
  v121 = (uint64_t)&v51 - v120;
  v122 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  v24 = __chkstk_darwin(v22);
  v123 = (uint64_t)&v51 - v122;
  v152 = (char *)&v51 - v122;
  v124 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  v26 = __chkstk_darwin(v24);
  v125 = (uint64_t)&v51 - v124;
  v126 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
  v28 = __chkstk_darwin(v26);
  v127 = (uint64_t)&v51 - v126;
  v151 = (char *)&v51 - v126;
  v150 = v28;
  v29 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("From", 4uLL, 1);
  v128 = LocalizedStringKey.init(stringLiteral:)(v29._countAndFlagsBits, v29._object);
  v129 = v30;
  v130 = v31;
  v131 = v32;
  sub_10024FFE8(v136, (uint64_t)v15);
  State.projectedValue.getter(v137);
  v33 = v138;
  sub_100250064(v138);
  v135 = (int *)type metadata accessor for IndexingSpeedView(v133);
  v34 = v135[6];
  v141 = (void (*)(void))v134[2];
  ((void (*)(char *, uint64_t, uint64_t))v141)(v139, v136 + v34, v143);
  sub_10024FFE8(v136 + v135[5], v33);
  State.wrappedValue.getter(v137);
  sub_100250064(v138);
  ((void (*)(char *, char *, uint64_t))v141)(v144, v139, v143);
  ((void (*)(char *, char *, uint64_t))v141)(v142, v140, v143);
  v145 = sub_1002576E8();
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v144, v142) & 1) == 0)
  {
    _assertionFailure(_:_:file:line:flags:)(v78, 11, 2, v79, 39, 2, v80, 23, 2, 347, 0);
    __break(1u);
  }
  v35 = v81;
  v63 = (void (*)(char *, uint64_t))v134[1];
  v63(v142, v143);
  v63(v144, v143);
  v60 = &v89[*(int *)(v85 + 48)];
  v141();
  ((void (*)(char *, char *, uint64_t))v141)(v60, v140, v143);
  v59 = &v87[*(int *)(v85 + 48)];
  v141();
  ((void (*)(char *, char *, uint64_t))v141)(v59, v60, v143);
  v62 = (void (*)(void))v134[4];
  ((void (*)(uint64_t, char *, uint64_t))v62)(v107, v87, v143);
  v63(v59, v143);
  v61 = &v87[*(int *)(v85 + 48)];
  v62();
  ((void (*)(char *, char *, uint64_t))v62)(v61, v60, v143);
  ((void (*)(uint64_t, char *, uint64_t))v62)(v107 + *(int *)(v103 + 36), v61, v143);
  v63(v87, v143);
  sub_100257758(v107, v109);
  v63(v140, v143);
  v63(v139, v143);
  v71 = 2;
  v66 = _allocateUninitializedArray<A>(_:)(2, v35);
  v64 = v36;
  v37 = static DatePickerComponents.date.getter();
  v65 = *(_QWORD *)(v82 + 72);
  static DatePickerComponents.hourAndMinute.getter(v37);
  v38 = v66;
  sub_10003CB20();
  v67 = v38;
  v68 = sub_1002577D4();
  SetAlgebra<>.init(arrayLiteral:)(v67, v35, v68);
  v39 = v138;
  v72 = 1;
  DatePicker<>.init(_:selection:in:displayedComponents:)(v128, v129, v130 & 1, v131, v132, v109, v84);
  v69 = sub_100257844();
  sub_100253AA8(v125, v114, v127);
  v70 = (void (*)(uint64_t, uint64_t))v115[1];
  v70(v125, v114);
  v40 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("To", v71, v72 & 1);
  v73 = LocalizedStringKey.init(stringLiteral:)(v40._countAndFlagsBits, v40._object);
  v74 = v41;
  v75 = v42;
  v76 = v43;
  sub_10024FFE8(v136 + v135[5], v39);
  State.projectedValue.getter(v137);
  v44 = v138;
  sub_100250064(v138);
  sub_10024FFE8(v136, v44);
  State.wrappedValue.getter(v137);
  sub_100250064(v138);
  ((void (*)(char *, uint64_t, uint64_t))v141)(v96, v136 + v135[7], v143);
  ((void (*)(char *, char *, uint64_t))v141)(v94, v98, v143);
  ((void (*)(char *, char *, uint64_t))v141)(v92, v96, v143);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v94, v92) & 1) == 0)
  {
    LOBYTE(v50) = 2;
    _assertionFailure(_:_:file:line:flags:)(v78, 11, 2, v79, 39, 2, v80, 23, v50, 347, 0);
    __break(1u);
  }
  v45 = v81;
  v63(v92, v143);
  v63(v94, v143);
  v52 = &v89[*(int *)(v85 + 48)];
  v141();
  ((void (*)(char *, char *, uint64_t))v141)(v52, v96, v143);
  v51 = &v87[*(int *)(v85 + 48)];
  v141();
  ((void (*)(char *, char *, uint64_t))v141)(v51, v52, v143);
  ((void (*)(uint64_t, char *, uint64_t))v62)(v107, v87, v143);
  v63(v51, v143);
  v53 = &v87[*(int *)(v85 + 48)];
  v62();
  ((void (*)(char *, char *, uint64_t))v62)(v53, v52, v143);
  ((void (*)(uint64_t, char *, uint64_t))v62)(v107 + *(int *)(v103 + 36), v53, v143);
  v63(v87, v143);
  sub_100257758(v107, v105);
  v63(v96, v143);
  v63(v98, v143);
  v57 = 2;
  v55 = _allocateUninitializedArray<A>(_:)(2, v45);
  v54 = v46;
  v47 = static DatePickerComponents.date.getter();
  static DatePickerComponents.hourAndMinute.getter(v47);
  v48 = v55;
  sub_10003CB20();
  SetAlgebra<>.init(arrayLiteral:)(v48, v45, v68);
  DatePicker<>.init(_:selection:in:displayedComponents:)(v73, v74, v75 & 1, v76, v112, v105, v84);
  sub_100253AA8(v121, v114, v123);
  v70(v121, v114);
  v56 = (void (*)(char *, uint64_t, uint64_t))v115[2];
  v56(v119, v127, v114);
  v58 = v149;
  v149[0] = v119;
  v56(v117, v123, v114);
  v149[1] = v117;
  v148[0] = v114;
  v148[1] = v114;
  v146 = v69;
  v147 = v69;
  sub_1002C9238((uint64_t)v58, v57, (uint64_t)v148, v77);
  v70((uint64_t)v117, v114);
  v70((uint64_t)v119, v114);
  v70(v123, v114);
  return ((uint64_t (*)(uint64_t, uint64_t))v70)(v127, v114);
}

uint64_t sub_100254E44()
{
  return static HorizontalAlignment.center.getter();
}

unint64_t sub_100254E64()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A56E0;
  if (!qword_1005A56E0)
  {
    v0 = sub_1001E7634(&qword_1005A56D8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A56E0);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100254ED4()
{
  return static Edge.Set.all.getter();
}

unint64_t sub_100254EF4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A56E8;
  if (!qword_1005A56E8)
  {
    v0 = sub_1001E7634(&qword_1005A56C8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A56E8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100254F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);

  v4 = *(int *)(sub_10003A0C8(&qword_1005A56F0) + 44);
  v1 = sub_10003A0C8(&qword_1005A56F8);
  (*(void (**)(void))(*(_QWORD *)(v1 - 8) + 8))();
  v5 = *(int *)(sub_10003A0C8(&qword_1005A5700) + 48);
  v6 = *(int *)(sub_10003A0C8(&qword_1005A5708) + 44);
  v7 = sub_10003A0C8(&qword_1005A5710);
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 8);
  v8();
  v2 = sub_10003A0C8(&qword_1005A5718);
  ((void (*)(uint64_t, uint64_t))v8)(a1 + v4 + v5 + v6 + *(int *)(v2 + 48), v7);
  return a1;
}

unint64_t sub_10025504C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5720;
  if (!qword_1005A5720)
  {
    v2 = sub_1001E7634(&qword_1005A56D0);
    sub_100254EF4();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5720);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002550D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v7 = *(int *)(sub_10003A0C8(&qword_1005A56F0) + 44);
  v2 = sub_10003A0C8(&qword_1005A56F8);
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 16))();
  v3 = sub_10003A0C8(&qword_1005A5700);
  v10 = a1 + v7 + *(int *)(v3 + 48);
  v8 = a2 + v7 + *(int *)(v3 + 48);
  *(_OWORD *)v8 = *(_OWORD *)v10;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v10 + 16);
  v9 = *(int *)(sub_10003A0C8(&qword_1005A5708) + 44);
  v11 = sub_10003A0C8(&qword_1005A5710);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 16);
  v12();
  v4 = sub_10003A0C8(&qword_1005A5718);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v8 + v9 + *(int *)(v4 + 48), v10 + v9 + *(int *)(v4 + 48), v11);
  v5 = sub_10003A0C8(&qword_1005A56D0);
  memcpy((void *)(a2 + *(int *)(v5 + 36)), (const void *)(a1 + *(int *)(v5 + 36)), 0x29uLL);
  return a2;
}

uint64_t sub_100255260()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_100255274()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100255288()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1002552A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100251D74(a1);
}

uint64_t sub_1002552B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a1;
  v8 = 0;
  v7 = 0;
  v4 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for IndexingSpeedView(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (uint64_t)&v3 - v4;
  v8 = __chkstk_darwin(v5);
  v7 = v1;
  sub_10003A0C8(&qword_1005A5728);
  swift_bridgeObjectRetain(v5);
  sub_100250CB0(v5, v6);
  return UIHostingController.__allocating_init(rootView:)(v6);
}

unint64_t sub_1002553E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int v27;

  v27 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v27 & 0x20000) != 0)
  {
    v22 = *a2;
    swift_retain(*a2);
    *a1 = v22;
    return *a1 + ((v27 + 16) & ~(unint64_t)v27);
  }
  else
  {
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 16);
    ((void (*)(_QWORD *, _QWORD *))v12)(a1, a2);
    v7 = sub_10003A0C8(&qword_1005A5680);
    v4 = *(int *)(v7 + 28);
    v5 = *(_QWORD *)((char *)a2 + v4);
    swift_retain(v5);
    *(_QWORD *)((char *)a1 + v4) = v5;
    v9 = (char *)a1 + a3[5];
    v6 = (char *)a2 + a3[5];
    v12();
    v8 = *(int *)(v7 + 28);
    v10 = *(_QWORD *)&v6[v8];
    swift_retain(v10);
    *(_QWORD *)&v9[v8] = v10;
    ((void (*)(char *, char *, uint64_t))v12)((char *)a1 + a3[6], (char *)a2 + a3[6], v11);
    ((void (*)(char *, char *, uint64_t))v12)((char *)a1 + a3[7], (char *)a2 + a3[7], v11);
    v13 = a3[8];
    v14 = *(_QWORD *)((char *)a2 + v13);
    swift_bridgeObjectRetain(v14);
    *(_QWORD *)((char *)a1 + v13) = v14;
    v15 = a3[9];
    v16 = *(_QWORD *)((char *)a2 + v15);
    swift_retain(v16);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = a3[10];
    v18 = *(_QWORD *)((char *)a2 + v17);
    swift_retain(v18);
    *(_QWORD *)((char *)a1 + v17) = v18;
    v21 = (char *)a1 + a3[11];
    v20 = (char *)a2 + a3[11];
    v19 = *(_QWORD *)v20;
    swift_bridgeObjectRetain(*(_QWORD *)v20);
    *(_QWORD *)v21 = v19;
    *(_OWORD *)(v21 + 8) = *(_OWORD *)(v20 + 8);
    *(_OWORD *)(v21 + 24) = *(_OWORD *)(v20 + 24);
    return (unint64_t)a1;
  }
}

uint64_t sub_100255658(uint64_t a1, int *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);

  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(void))(*(_QWORD *)(v5 - 8) + 8);
  ((void (*)(uint64_t))v6)(a1);
  v3 = sub_10003A0C8(&qword_1005A5680);
  swift_release(*(_QWORD *)(a1 + *(int *)(v3 + 28)));
  v4 = a1 + a2[5];
  v6();
  swift_release(*(_QWORD *)(v4 + *(int *)(v3 + 28)));
  ((void (*)(uint64_t, uint64_t))v6)(a1 + a2[6], v5);
  ((void (*)(uint64_t, uint64_t))v6)(a1 + a2[7], v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
  swift_release(*(_QWORD *)(a1 + a2[9]));
  swift_release(*(_QWORD *)(a1 + a2[10]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11]));
}

__n128 sub_10025577C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  __n128 result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v23;
  uint64_t v24;

  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(void))(*(_QWORD *)(v12 - 8) + 16);
  ((void (*)(uint64_t, uint64_t))v13)(a1, a2);
  v8 = sub_10003A0C8(&qword_1005A5680);
  v5 = *(int *)(v8 + 28);
  v6 = *(_QWORD *)(a2 + v5);
  swift_retain(v6);
  *(_QWORD *)(a1 + v5) = v6;
  v10 = a1 + a3[5];
  v7 = a2 + a3[5];
  v13();
  v9 = *(int *)(v8 + 28);
  v11 = *(_QWORD *)(v7 + v9);
  swift_retain(v11);
  *(_QWORD *)(v10 + v9) = v11;
  ((void (*)(uint64_t, uint64_t, uint64_t))v13)(a1 + a3[6], a2 + a3[6], v12);
  ((void (*)(uint64_t, uint64_t, uint64_t))v13)(a1 + a3[7], a2 + a3[7], v12);
  v14 = a3[8];
  v15 = *(_QWORD *)(a2 + v14);
  swift_bridgeObjectRetain(v15);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = a3[9];
  v17 = *(_QWORD *)(a2 + v16);
  swift_retain(v17);
  *(_QWORD *)(a1 + v16) = v17;
  v18 = a3[10];
  v19 = *(_QWORD *)(a2 + v18);
  swift_retain(v19);
  *(_QWORD *)(a1 + v18) = v19;
  v23 = a3[11];
  v24 = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRetain(v24);
  v3 = a1 + v23;
  *(_QWORD *)v3 = v24;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + v23 + 8);
  result = *(__n128 *)(a2 + v23 + 24);
  *(__n128 *)(v3 + 24) = result;
  return result;
}

double sub_100255994(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v17 = type metadata accessor for Date(0);
  v18 = *(void (**)(void))(*(_QWORD *)(v17 - 8) + 24);
  ((void (*)(uint64_t, uint64_t))v18)(a1, a2);
  v13 = sub_10003A0C8(&qword_1005A5680);
  v9 = (uint64_t *)(a1 + *(int *)(v13 + 28));
  v8 = *v9;
  v10 = *(_QWORD *)(a2 + *(int *)(v13 + 28));
  swift_retain(v10);
  *v9 = v10;
  swift_release(v8);
  v11 = a1 + a3[5];
  v12 = a2 + a3[5];
  v18();
  v15 = (uint64_t *)(v11 + *(int *)(v13 + 28));
  v14 = *v15;
  v16 = *(_QWORD *)(v12 + *(int *)(v13 + 28));
  swift_retain(v16);
  *v15 = v16;
  swift_release(v14);
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(a1 + a3[6], a2 + a3[6], v17);
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(a1 + a3[7], a2 + a3[7], v17);
  v19 = a3[8];
  v20 = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRetain(v20);
  v3 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  swift_bridgeObjectRelease(v3);
  v21 = a3[9];
  v22 = *(_QWORD *)(a2 + v21);
  swift_retain(v22);
  v4 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_release(v4);
  v23 = a3[10];
  v24 = *(_QWORD *)(a2 + v23);
  swift_retain(v24);
  v5 = *(_QWORD *)(a1 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  swift_release(v5);
  v27 = a3[11];
  v28 = *(_QWORD *)(a2 + v27);
  swift_bridgeObjectRetain(v28);
  v29 = a1 + v27;
  v6 = *(_QWORD *)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(a2 + v27 + 16);
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(a2 + v27 + 24);
  result = *(double *)(a2 + v27 + 32);
  *(double *)(v29 + 32) = result;
  return result;
}

uint64_t sub_100255C20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);

  v7 = type metadata accessor for Date(0);
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 32);
  ((void (*)(uint64_t, uint64_t))v8)(a1, a2);
  v4 = sub_10003A0C8(&qword_1005A5680);
  *(_QWORD *)(a1 + *(int *)(v4 + 28)) = *(_QWORD *)(a2 + *(int *)(v4 + 28));
  v6 = a1 + a3[5];
  v5 = a2 + a3[5];
  v8();
  *(_QWORD *)(v6 + *(int *)(v4 + 28)) = *(_QWORD *)(v5 + *(int *)(v4 + 28));
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(a1 + a3[6], a2 + a3[6], v7);
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(a1 + a3[7], a2 + a3[7], v7);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  memcpy((void *)(a1 + a3[11]), (const void *)(a2 + a3[11]), 0x28uLL);
  return a1;
}

double sub_100255D88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  double *v22;
  double *v23;

  v18 = type metadata accessor for Date(0);
  v19 = *(void (**)(void))(*(_QWORD *)(v18 - 8) + 40);
  ((void (*)(uint64_t, uint64_t))v19)(a1, a2);
  v17 = sub_10003A0C8(&qword_1005A5680);
  v3 = (uint64_t *)(a1 + *(int *)(v17 + 28));
  v4 = *v3;
  *v3 = *(_QWORD *)(a2 + *(int *)(v17 + 28));
  swift_release(v4);
  v15 = a1 + a3[5];
  v16 = a2 + a3[5];
  v19();
  v5 = *(int *)(v17 + 28);
  v6 = *(_QWORD *)(v15 + v5);
  *(_QWORD *)(v15 + v5) = *(_QWORD *)(v16 + v5);
  swift_release(v6);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(a1 + a3[6], a2 + a3[6], v18);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(a1 + a3[7], a2 + a3[7], v18);
  v7 = (uint64_t *)(a1 + a3[8]);
  v8 = *v7;
  *v7 = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease(v8);
  v9 = (uint64_t *)(a1 + a3[9]);
  v10 = *v9;
  *v9 = *(_QWORD *)(a2 + a3[9]);
  swift_release(v10);
  v11 = (uint64_t *)(a1 + a3[10]);
  v12 = *v11;
  *v11 = *(_QWORD *)(a2 + a3[10]);
  swift_release(v12);
  v22 = (double *)(a2 + a3[11]);
  v23 = (double *)(a1 + a3[11]);
  v13 = *v23;
  *v23 = *v22;
  swift_bridgeObjectRelease(*(_QWORD *)&v13);
  v23[1] = v22[1];
  v23[2] = v22[2];
  v23[3] = v22[3];
  result = v22[4];
  v23[4] = result;
  return result;
}

uint64_t sub_100255F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100255FA8);
}

uint64_t sub_100255FA8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v11;
  uint64_t v12;

  v11 = sub_10003A0C8(&qword_1005A5680);
  v12 = *(_QWORD *)(v11 - 8);
  if (a2 == *(_DWORD *)(v12 + 84))
  {
    return (*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v12 + 48))(a1, a2, v11);
  }
  else
  {
    v5 = type metadata accessor for Date(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (a2 == *(_DWORD *)(v6 + 84))
    {
      return (*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v6 + 48))(a1 + *(int *)(a3 + 24), a2, v5);
    }
    else if (a2 == 0x7FFFFFFF)
    {
      v4 = -1;
      if (*(_QWORD *)(a1 + *(int *)(a3 + 32)) < (unint64_t)&_mh_execute_header)
        v4 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
      return (v4 + 1);
    }
    else
    {
      __break(1u);
    }
  }
  return v7;
}

uint64_t sub_1002560E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002560FC);
}

uint64_t sub_1002560FC(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  v10 = sub_10003A0C8(&qword_1005A5680);
  v11 = *(_QWORD *)(v10 - 8);
  if (a3 == *(_DWORD *)(v11 + 84))
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v11 + 56))(a1, a2, a2, v10);
  result = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(result - 8);
  if (a3 == *(_DWORD *)(v5 + 84))
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v5 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  if (a3 == 0x7FFFFFFF)
    *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2 - 1;
  else
    __break(1u);
  return result;
}

uint64_t sub_100256208(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[8];

  v8 = sub_100256340(319);
  v9 = v8;
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(v8 - 8);
    v10[0] = v2 + 64;
    v10[1] = v2 + 64;
    v3 = type metadata accessor for Date(319);
    v9 = v3;
    if (v4 <= 0x3F)
    {
      v5 = *(_QWORD *)(v3 - 8);
      v10[2] = v5 + 64;
      v10[3] = v5 + 64;
      v10[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v10[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v10[7] = "(";
      swift_initStructMetadata(a1, 256, 8, v10, a1 + 16);
      return 0;
    }
  }
  return v9;
}

uint64_t sub_100256340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  uint64_t v7;

  v7 = qword_1005A57A0;
  if (!qword_1005A57A0)
  {
    v1 = type metadata accessor for Date(255);
    v5 = type metadata accessor for State(a1, v1);
    v7 = v5;
    if (!v2)
    {
      v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_1005A57A0);
      return v3;
    }
  }
  return v7;
}

unint64_t sub_1002563E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v6;
  char *v7;
  uint64_t v8;
  int v13;

  v13 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v13 & 0x20000) != 0)
  {
    v8 = *a2;
    swift_retain(*a2);
    *a1 = v8;
    return *a1 + ((v13 + 16) & ~(unint64_t)v13);
  }
  else
  {
    v3 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v7 = (char *)a1 + a3[7];
    v6 = (char *)a2 + a3[7];
    v4 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v4 - 8) + 16))(v7, v6);
    return (unint64_t)a1;
  }
}

uint64_t sub_1002564F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1);
  v6 = *(int *)(a2 + 28);
  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1 + v6);
}

uint64_t sub_100256568(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v3 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1 + v7, a2 + v7);
  return a1;
}

uint64_t sub_100256620(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v3 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24))(a1, a2);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1 + v7, a2 + v7);
  return a1;
}

uint64_t sub_1002566D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v3 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(a1, a2);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1 + v7, a2 + v7);
  return a1;
}

uint64_t sub_100256790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v3 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(a1, a2);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1 + v7, a2 + v7);
  return a1;
}

uint64_t sub_100256848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100256864);
}

uint64_t sub_100256864(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v10;
  uint64_t v11;

  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (a2 == *(_DWORD *)(v11 + 84))
  {
    return (*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v11 + 48))(a1, a2, v10);
  }
  else
  {
    v4 = type metadata accessor for UUID(0);
    v5 = *(_QWORD *)(v4 - 8);
    if (a2 == *(_DWORD *)(v5 + 84))
      return (*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1 + *(int *)(a3 + 28), a2, v4);
    else
      __break(1u);
  }
  return v6;
}

uint64_t sub_100256934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100256950);
}

uint64_t sub_100256950(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (a3 == *(_DWORD *)(v11 + 84))
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v11 + 56))(a1, a2, a2, v10);
  result = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(result - 8);
  if (a3 == *(_DWORD *)(v5 + 84))
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v5 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  __break(1u);
  return result;
}

uint64_t sub_100256A20(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  v6 = type metadata accessor for Date(319);
  v7 = v6;
  if (v1 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v6 - 8) + 64;
    v8[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v8[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v2 = type metadata accessor for UUID(319);
    v7 = v2;
    if (v3 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v2 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      return 0;
    }
  }
  return v7;
}

id sub_100256B24()
{
  id v0;
  id v2;
  objc_super v3;
  id v4;

  v4 = 0;
  v3.receiver = 0;
  v3.super_class = (Class)type metadata accessor for IndexingSpeedViewFactory();
  v2 = objc_msgSendSuper2(&v3, "init");
  v0 = v2;
  v4 = v2;

  return v2;
}

id sub_100256BB0()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IndexingSpeedViewFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IndexingSpeedViewFactory()
{
  return objc_opt_self(_TtC10MobileMail24IndexingSpeedViewFactory);
}

unint64_t sub_100256C1C()
{
  return sub_10025504C();
}

unint64_t sub_100256C30()
{
  return sub_100256C44();
}

unint64_t sub_100256C44()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A58A8;
  if (!qword_1005A58A8)
  {
    v0 = type metadata accessor for UUID(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UUID, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A58A8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100256CB4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F7544, 1);
}

uint64_t sub_100256CD8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  int *v8;
  uint64_t v9;
  unint64_t v10;

  v8 = (int *)type metadata accessor for IndexingSpeedView(0);
  v1 = *((_QWORD *)v8 - 1);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v10 = v3 + *(_QWORD *)(v1 + 64);
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(void))(*(_QWORD *)(v6 - 8) + 8);
  v7();
  v4 = sub_10003A0C8(&qword_1005A5680);
  swift_release(*(_QWORD *)(v0 + v3 + *(int *)(v4 + 28)));
  v5 = v0 + v3 + v8[5];
  v7();
  swift_release(*(_QWORD *)(v5 + *(int *)(v4 + 28)));
  ((void (*)(unint64_t, uint64_t))v7)(v0 + v3 + v8[6], v6);
  ((void (*)(unint64_t, uint64_t))v7)(v0 + v3 + v8[7], v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + v8[8]));
  swift_release(*(_QWORD *)(v0 + v3 + v8[9]));
  swift_release(*(_QWORD *)(v0 + v3 + v8[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v3 + v8[11]));
  return swift_deallocObject(v9, v10);
}

uint64_t sub_100256E50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  int *v8;

  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(void))(*(_QWORD *)(v6 - 8) + 32);
  ((void (*)(uint64_t, uint64_t))v7)(a2, a1);
  v3 = sub_10003A0C8(&qword_1005A5680);
  *(_QWORD *)(a2 + *(int *)(v3 + 28)) = *(_QWORD *)(a1 + *(int *)(v3 + 28));
  v8 = (int *)type metadata accessor for IndexingSpeedView(0);
  v5 = a2 + v8[5];
  v4 = a1 + v8[5];
  v7();
  *(_QWORD *)(v5 + *(int *)(v3 + 28)) = *(_QWORD *)(v4 + *(int *)(v3 + 28));
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a2 + v8[6], a1 + v8[6], v6);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a2 + v8[7], a1 + v8[7], v6);
  *(_QWORD *)(a2 + v8[8]) = *(_QWORD *)(a1 + v8[8]);
  *(_QWORD *)(a2 + v8[9]) = *(_QWORD *)(a1 + v8[9]);
  *(_QWORD *)(a2 + v8[10]) = *(_QWORD *)(a1 + v8[10]);
  memcpy((void *)(a2 + v8[11]), (const void *)(a1 + v8[11]), 0x28uLL);
  return a2;
}

uint64_t sub_100256FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexingSpeedView(0) - 8) + 80);
  return sub_10025289C(a1, v2 + ((v3 + 16) & ~v3), a2);
}

unint64_t sub_100257014()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A58D0;
  if (!qword_1005A58D0)
  {
    v0 = sub_1001E7634(&qword_1005A5688);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A58D0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100257084()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  _QWORD v11[4];
  _QWORD v12[4];
  _QWORD v13[2];
  _QWORD v14[4];
  _QWORD v15[4];
  _QWORD v16[2];
  _QWORD v17[5];

  v9 = qword_1005A58D8;
  if (!qword_1005A58D8)
  {
    v8 = sub_1001E7634(&qword_1005A58C8);
    v4 = sub_1001E7634(&qword_1005A58E0);
    v5 = type metadata accessor for BasicChartSymbolShape(255);
    v3 = sub_1001E7634(&qword_1005A58E8);
    v2 = sub_1001E7634(&qword_1005A58F0);
    v7 = type metadata accessor for LineMark(255);
    v17[0] = v7;
    v17[1] = &protocol witness table for LineMark;
    v16[0] = v2;
    v16[1] = swift_getOpaqueTypeConformance2(v17, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    v15[0] = v3;
    v15[1] = &type metadata for Color;
    v15[2] = swift_getOpaqueTypeConformance2(v16, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, 1);
    v15[3] = &protocol witness table for Color;
    v14[0] = v4;
    v14[1] = v5;
    v14[2] = swift_getOpaqueTypeConformance2(v15, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v14[3] = sub_10025732C();
    v17[2] = swift_getOpaqueTypeConformance2(v14, &opaque type descriptor for <<opaque return type of ChartContent.symbol<A>(_:)>>, 1);
    v6 = sub_1001E7634(&qword_1005A5900);
    v13[0] = type metadata accessor for AreaMark(255);
    v13[1] = &protocol witness table for AreaMark;
    v12[0] = v6;
    v12[1] = &type metadata for LinearGradient;
    v12[2] = swift_getOpaqueTypeConformance2(v13, &opaque type descriptor for <<opaque return type of ChartContent.interpolationMethod(_:)>>, 1);
    v12[3] = &protocol witness table for LinearGradient;
    v17[3] = swift_getOpaqueTypeConformance2(v12, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v11[0] = v7;
    v11[1] = &type metadata for Color;
    v11[2] = &protocol witness table for LineMark;
    v11[3] = &protocol witness table for Color;
    v10[0] = sub_1001E7634(&qword_1005A5908);
    v10[1] = swift_getOpaqueTypeConformance2(v11, &opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>, 1);
    v17[4] = swift_getOpaqueTypeConformance2(v10, &opaque type descriptor for <<opaque return type of ChartContent.lineStyle(_:)>>, 1);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <each A> BuilderTuple<Pack{repeat A}>, v8);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A58D8);
    return WitnessTable;
  }
  return v9;
}

unint64_t sub_10025732C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A58F8;
  if (!qword_1005A58F8)
  {
    v0 = type metadata accessor for BasicChartSymbolShape(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for BasicChartSymbolShape, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A58F8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_10025739C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5910;
  if (!qword_1005A5910)
  {
    v0 = type metadata accessor for IndexingSpeedView.IndexingData(255);
    WitnessTable = swift_getWitnessTable(&unk_1004CDB3C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5910);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_10025740C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v4;

  v4 = *a1;
  swift_retain(*a1);
  result = a2;
  *a2 = v4;
  return result;
}

unint64_t sub_100257440()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5920;
  if (!qword_1005A5920)
  {
    v0 = sub_1001E7634(&qword_1005A58B8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Chart<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5920);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002574B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100253D9C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002574B8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5930;
  if (!qword_1005A5930)
  {
    v0 = sub_1001E7634(&qword_1005A5928);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5930);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100257528()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5938;
  if (!qword_1005A5938)
  {
    v0 = sub_1001E7634(&qword_1005A58B0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5938);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100257598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  v3 = *(int *)(sub_10003A0C8(&qword_1005A5708) + 44);
  v4 = sub_10003A0C8(&qword_1005A5710);
  v5 = *(void (**)(void))(*(_QWORD *)(v4 - 8) + 8);
  v5();
  v1 = sub_10003A0C8(&qword_1005A5718);
  ((void (*)(uint64_t, uint64_t))v5)(a1 + v3 + *(int *)(v1 + 48), v4);
  return a1;
}

uint64_t sub_100257624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(void);

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v4 = *(int *)(sub_10003A0C8(&qword_1005A5708) + 44);
  v6 = sub_10003A0C8(&qword_1005A5710);
  v7 = *(void (**)(void))(*(_QWORD *)(v6 - 8) + 16);
  v7();
  v2 = sub_10003A0C8(&qword_1005A5718);
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a2 + v4 + *(int *)(v2 + 48), a1 + v4 + *(int *)(v2 + 48), v6);
  return a2;
}

unint64_t sub_1002576E8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5958;
  if (!qword_1005A5958)
  {
    v0 = type metadata accessor for Date(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Date, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5958);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100257758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v5 = type metadata accessor for Date(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v6(a2, a1);
  v2 = sub_10003A0C8(&qword_1005A5948);
  ((void (*)(uint64_t, uint64_t, uint64_t))v6)(a2 + *(int *)(v2 + 36), a1 + *(int *)(v2 + 36), v5);
  return a2;
}

unint64_t sub_1002577D4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5960;
  if (!qword_1005A5960)
  {
    v0 = type metadata accessor for DatePickerComponents(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DatePickerComponents, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5960);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100257844()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5968;
  if (!qword_1005A5968)
  {
    v0 = sub_1001E7634(&qword_1005A5710);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DatePicker<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5968);
    return WitnessTable;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1002578B4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

id sub_1002578DC(uint64_t a1)
{
  id v2;
  Class isa;
  id v5;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v2, "initWithDictionary:");

  swift_bridgeObjectRelease(a1);
  return v5;
}

unint64_t sub_100257950()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A59A0;
  if (!qword_1005A59A0)
  {
    v0 = objc_opt_self(EDSearchableIndexDiagnosticsSnapshot);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A59A0);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1002579B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v6;

  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
  v3 = (int *)type metadata accessor for IndexingSpeedView.IndexingData(0);
  *(_QWORD *)(a2 + v3[5]) = *(_QWORD *)(a1 + v3[5]);
  *(_QWORD *)(a2 + v3[6]) = *(_QWORD *)(a1 + v3[6]);
  v6 = v3[7];
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2 + v6, a1 + v6);
  return a2;
}

uint64_t sub_100257A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v14 = a2;
  v9 = a1;
  v19 = 0;
  v18 = 0;
  v17 = 0;
  v2 = sub_10003A0C8(&qword_1005A59A8);
  v8 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v12 = (char *)&v7 - v8;
  v11 = 0;
  v16 = type metadata accessor for UIBackgroundConfiguration();
  v13 = *(_QWORD *)(v16 - 8);
  v10 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v9);
  v15 = (char *)&v7 - v10;
  v19 = (char *)&v7 - v10;
  v18 = v3;
  v17 = v4;
  static UIBackgroundConfiguration.clear()();
  UIConfigurationColorTransformer.init(_:)(sub_100257BB4, 0);
  v5 = type metadata accessor for UIConfigurationColorTransformer(v11);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v12, 0, 1);
  UIBackgroundConfiguration.backgroundColorTransformer.setter(v12);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v14, v15, v16);
}

id sub_100257BB4()
{
  return objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
}

uint64_t sub_100257BF0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t *v8;
  id v9;
  id v10;
  char v11;
  char v12;
  char v13;
  _QWORD v15[4];
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26[5];
  _BYTE v27[24];
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  v23 = a1;
  v25 = v1;
  swift_getObjectType();
  v35 = 0;
  v34 = 0;
  v22 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A59B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = (void *)__chkstk_darwin(v1);
  v24 = (uint64_t)v15 - v22;
  v35 = v3;
  v34 = v2;
  v4 = v2;
  sub_100257A70(v23, v24);
  v5 = type metadata accessor for UIBackgroundConfiguration(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v24, 0, 1);
  UICollectionViewCell.backgroundConfiguration.setter(v24);
  v6 = v25;

  v7 = v6;
  UICollectionViewCell.contentConfiguration.getter(v30, v6);
  if (v30[3])
  {
    v16 = v30;
    v21 = v27;
    sub_100258424((uint64_t)v30, (uint64_t)v27);
    sub_1001F2578(v16);

    v18 = v28;
    v19 = v29;
    sub_10020DB6C(v21, v28);
    v17 = type metadata accessor for UICellConfigurationState(0);
    v20 = v26;
    v26[3] = v17;
    v26[4] = (uint64_t)&protocol witness table for UICellConfigurationState;
    v8 = sub_1001F2690(v26);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v23);
    v32 = v18;
    v33 = v19;
    sub_1001F2690(v31);
    dispatch thunk of UIContentConfiguration.updated(for:)(v20, v18, v19);
    sub_1001F25B8(v20);
    sub_1001F25B8(v21);
  }
  else
  {
    sub_1001F2578(v30);

    memset(v31, 0, sizeof(v31));
    v32 = 0;
    v33 = 0;
  }
  UICollectionViewCell.contentConfiguration.setter(v31);
  v9 = v25;

  v10 = v9;
  objc_msgSend(v9, "setFocusEffect:", 0);

  v15[1] = sub_1002583C0();
  v11 = UICellConfigurationState.isFocused.getter();
  sub_10026F37C(v11 & 1);
  swift_release();
  v15[2] = sub_1002583C0();
  v12 = UICellConfigurationState.isHighlighted.getter();
  sub_10026F444(v12 & 1);
  swift_release();
  v15[3] = sub_1002583C0();
  v13 = UICellConfigurationState.isSelected.getter();
  sub_10026F50C(v13 & 1);
  return swift_release();
}

id sub_100257F8C()
{
  id result;

  result = sub_100257FA8();
  qword_1005B9D88 = (uint64_t)result;
  return result;
}

id sub_100257FA8()
{
  id v1;

  sub_10025958C();
  v1 = sub_1001E7394();
  objc_msgSend(v1, "setDateStyle:", 0);
  objc_msgSend(v1, "setTimeStyle:", 1);
  return v1;
}

uint64_t *sub_100258018()
{
  if (qword_1005A3700 != -1)
    swift_once(&qword_1005A3700, sub_100257F8C);
  return &qword_1005B9D88;
}

id sub_10025806C()
{
  id result;

  result = sub_100258088();
  qword_1005B9D90 = (uint64_t)result;
  return result;
}

id sub_100258088()
{
  id v1;

  sub_10025958C();
  v1 = sub_1001E7394();
  objc_msgSend(v1, "setDateStyle:", 4);
  objc_msgSend(v1, "setTimeStyle:", 0);
  return v1;
}

uint64_t *sub_1002580F8()
{
  if (qword_1005A3708 != -1)
    swift_once(&qword_1005A3708, sub_10025806C);
  return &qword_1005B9D90;
}

uint64_t sub_10025814C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t Strong;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = v0 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  swift_endAccess(v4);
  return Strong;
}

uint64_t sub_1002581C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = 0;
  v9 = a1;
  v10 = a2;
  swift_unknownObjectRetain(a1);
  v5 = v2 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate;
  swift_beginAccess(v2 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  swift_unknownObjectRelease(a1);
  swift_endAccess(v7);
  return swift_unknownObjectRelease(a1);
}

void (*sub_100258250(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[5] = v1;
  v2 = OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate;
  v8[6] = OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate;
  v7 = v1 + v2;
  swift_beginAccess(v1 + v2);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  v4 = *(_QWORD *)(v7 + 8);
  v8[3] = Strong;
  v8[4] = v4;
  return sub_1002582E8;
}

void sub_1002582E8(_QWORD **a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v7 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = v7[5] + v7[6];
    v5 = v7[3];
    v3 = v7[4];
    swift_unknownObjectRetain(v5);
    *(_QWORD *)(v4 + 8) = v3;
    swift_unknownObjectWeakAssign(v4, v5);
    swift_unknownObjectRelease(v5);
    sub_100213BD8(v7 + 3);
  }
  else
  {
    v2 = v7[5] + v7[6];
    v6 = v7[3];
    *(_QWORD *)(v2 + 8) = v7[4];
    swift_unknownObjectWeakAssign(v2, v6);
    swift_unknownObjectRelease(v6);
  }
  swift_endAccess(v7);
  free(v7);
}

uint64_t sub_1002583C0()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t v3;
  _BYTE v4[24];
  uint64_t v5;

  v5 = 0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState);
  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState);
  v3 = *v2;
  swift_retain(*v2);
  swift_endAccess(v4);
  return v3;
}

uint64_t sub_100258424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

uint64_t sub_100258470(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = a1;
  swift_retain(a1);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState);
  v2 = *v4;
  *v4 = a1;
  swift_release(v2);
  swift_endAccess(v6);
  return swift_release(a1);
}

uint64_t (*sub_1002584F0())(uint64_t a1)
{
  uint64_t v0;

  swift_beginAccess(v0 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState);
  return sub_1002143CC;
}

id sub_100258540()
{
  void *v0;

  return objc_msgSend(v0, "setNeedsUpdateConfiguration");
}

uint64_t sub_10025857C@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v5[24];
  uint64_t v6;

  v6 = 0;
  v3 = (const void *)(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem);
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem);
  sub_1002585DC(v3, a1);
  return swift_endAccess(v5);
}

void *sub_1002585DC(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SearchItem.InstantAnswer(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    v2 = sub_10003A0C8(&qword_1005A59C8);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_100258698(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  const void *v10;

  v7 = a1;
  v10 = 0;
  v9 = 0;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A59C8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = (char *)&v3 - v3;
  v10 = (const void *)__chkstk_darwin(v7);
  v9 = v1;
  sub_1002585DC(v10, (char *)&v3 - v3);
  v5 = (void *)(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem);
  v6 = &v8;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem);
  sub_100258760(v4, v5);
  swift_endAccess(v6);
  sub_100258540();
  return sub_1002588C0(v7);
}

void *sub_100258760(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);

  v7 = type metadata accessor for SearchItem.InstantAnswer(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  if (((unsigned int (*)(void *, uint64_t))v9)(a2, 1))
  {
    if (v9(a1, 1, v7))
    {
      v3 = sub_10003A0C8(&qword_1005A59C8);
      memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a2, a1, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
    }
  }
  else if (v9(a1, 1, v7))
  {
    (*(void (**)(void *, uint64_t))(v8 + 8))(a2, v7);
    v2 = sub_10003A0C8(&qword_1005A59C8);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a2, a1, v7);
  }
  return a2;
}

uint64_t sub_1002588C0(uint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for SearchItem.InstantAnswer(0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v4 + 48))(a1, 1))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return a1;
}

id (*sub_100258930(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem);
  return sub_100258984;
}

id sub_100258984(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_endAccess(a1);
  swift_endAccess(a1);
  return sub_100258540();
}

uint64_t sub_1002589D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const void *v31;
  char *v32;

  v22 = a1;
  v32 = 0;
  v31 = 0;
  v30 = 0;
  v2 = sub_10003A0C8(&qword_1005A4F00);
  v21 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v29 = (uint64_t)&v11 - v21;
  v28 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v28 - 8);
  v23 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v22);
  v24 = (char *)&v11 - v23;
  v25 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = (const void *)__chkstk_darwin(v3);
  v26 = (char *)&v11 - v25;
  v32 = (char *)&v11 - v25;
  v31 = v5;
  v30 = v1;
  sub_100258C0C(v5, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v28) == 1)
  {
    v12 = 0;
    sub_100221CBC(v29);
    v19 = v12;
    v20 = v12;
  }
  else
  {
    v7 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v26, v29, v28);
    v14 = (id)*sub_100258018();
    v8 = v14;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v7, v26, v28);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v16 = *(void (**)(char *, uint64_t))(v27 + 8);
    v16(v24, v28);
    v15 = objc_msgSend(v14, "stringFromDate:", isa);

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v9;

    v16(v26, v28);
    v19 = v17;
    v20 = v18;
  }
  return v19;
}

void *sub_100258C0C(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1))
  {
    v2 = sub_10003A0C8(&qword_1005A4F00);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  return a2;
}

uint64_t sub_100258CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const void *v31;
  char *v32;

  v22 = a1;
  v32 = 0;
  v31 = 0;
  v30 = 0;
  v2 = sub_10003A0C8(&qword_1005A4F00);
  v21 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v29 = (uint64_t)&v11 - v21;
  v28 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v28 - 8);
  v23 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v22);
  v24 = (char *)&v11 - v23;
  v25 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = (const void *)__chkstk_darwin(v3);
  v26 = (char *)&v11 - v25;
  v32 = (char *)&v11 - v25;
  v31 = v5;
  v30 = v1;
  sub_100258C0C(v5, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v28) == 1)
  {
    v12 = 0;
    sub_100221CBC(v29);
    v19 = v12;
    v20 = v12;
  }
  else
  {
    v7 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v26, v29, v28);
    v14 = (id)*sub_1002580F8();
    v8 = v14;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v7, v26, v28);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v16 = *(void (**)(char *, uint64_t))(v27 + 8);
    v16(v24, v28);
    v15 = objc_msgSend(v14, "stringFromDate:", isa);

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v9;

    v16(v26, v28);
    v19 = v17;
    v20 = v18;
  }
  return v19;
}

id sub_100258F04(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char v9;
  uint64_t v10;
  id v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v22;
  objc_super v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;

  v24 = a1;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v5 = v4;
  v6 = v4;
  v7 = v4;
  v28 = v4;
  v8 = &v4[OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);

  v15 = OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState;
  type metadata accessor for InstantAnswerView.State(0);
  v14 = variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem();
  v13 = variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem();
  v9 = variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem();
  *(_QWORD *)&v17[v15] = sub_10026F5D4(v14 & 1, v13 & 1, v9 & 1);

  v16 = OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem;
  v10 = type metadata accessor for SearchItem.InstantAnswer(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(&v17[v16], 1);

  v23.receiver = v28;
  v23.super_class = (Class)type metadata accessor for InstantAnswerCollectionViewCell(0);
  v22 = objc_msgSendSuper2(&v23, "initWithFrame:", a1, a2, a3, a4);
  v11 = v22;
  v28 = v22;

  return v22;
}

id sub_100259100(void *a1)
{
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char v6;
  uint64_t v7;
  id v8;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v17;
  objc_super v18;
  void *v19;
  id v20;

  v19 = a1;
  v2 = v1;
  v3 = v1;
  v4 = v1;
  v20 = v1;
  v5 = &v1[OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_actionDelegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);

  v13 = OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_viewState;
  type metadata accessor for InstantAnswerView.State(0);
  v12 = variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem();
  v11 = variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem();
  v6 = variable initialization expression of ConversationNavigationBarItemsManager.showSupplementaryButtonItem();
  *(_QWORD *)&v15[v13] = sub_10026F5D4(v12 & 1, v11 & 1, v6 & 1);

  v14 = OBJC_IVAR____TtC10MobileMail31InstantAnswerCollectionViewCell_searchItem;
  v7 = type metadata accessor for SearchItem.InstantAnswer(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v15[v14], 1);

  v18.receiver = v20;
  v18.super_class = (Class)type metadata accessor for InstantAnswerCollectionViewCell(0);
  v17 = objc_msgSendSuper2(&v18, "initWithCoder:", a1);
  if (v17)
  {
    v8 = v17;
    v20 = v17;

    return v17;
  }
  else
  {

    return 0;
  }
}

id sub_1002592F0()
{
  void *v0;
  objc_super v2;
  void *v3;

  v3 = v0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InstantAnswerCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100259398()
{
  return type metadata accessor for InstantAnswerCollectionViewCell(0);
}

uint64_t type metadata accessor for InstantAnswerCollectionViewCell(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A59F8;
  if (!qword_1005A59F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstantAnswerCollectionViewCell);
  return v2;
}

uint64_t sub_100259414(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t updated;
  _QWORD v6[3];

  v6[0] = &unk_1004CDC20;
  v6[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v1 = sub_1002594E8(319);
  updated = v1;
  if (v2 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v1 - 8) + 64;
    updated = swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    if (!updated)
      return 0;
  }
  return updated;
}

uint64_t sub_1002594E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  uint64_t v7;

  v7 = qword_1005A5A08;
  if (!qword_1005A5A08)
  {
    v1 = type metadata accessor for SearchItem.InstantAnswer(255);
    v5 = type metadata accessor for Optional(a1, v1);
    v7 = v5;
    if (!v2)
    {
      v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_1005A5A08);
      return v3;
    }
  }
  return v7;
}

unint64_t sub_10025958C()
{
  uint64_t v0;
  unint64_t ObjCClassMetadata;
  uint64_t v3;

  v3 = qword_1005A5A10;
  if (!qword_1005A5A10)
  {
    v0 = objc_opt_self(NSDateFormatter);
    ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_1005A5A10);
    return ObjCClassMetadata;
  }
  return v3;
}

uint64_t sub_1002595F0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  void *v33;
  void *v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  id v38;
  void *v39;
  Swift::String v40;
  id v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  Swift::String v55;
  Swift::String v56;
  uint64_t v57;
  Swift::String_optional v58;
  Swift::String v59;
  Swift::String v60;
  void *v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  id v72;
  uint64_t *v73;
  char *v74;
  id v75;
  uint64_t v77;
  Swift::String v78;
  Swift::String v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  NSBundle v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  NSBundle v113;
  void *v114;
  void *v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  Swift::String v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  Builtin::Word v136;
  char *v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t *v140;
  Class isa;
  _QWORD *v142;
  _QWORD *v143;
  MobileMail::InstantAnswerView::Model::Flight *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  Swift::String *v149;
  void (*v150)(char *, uint64_t);
  int v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  NSBundle v156;
  void *v157;
  void *v158;
  Swift::String v159;
  Swift::String v160;
  int v161;
  void *v162;
  uint64_t v163;
  uint64_t countAndFlagsBits;
  void *v165;
  NSBundle v166;
  void *v167;
  void *object;
  Swift::String v169;
  Swift::String v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  uint64_t v177;
  void *v178;
  void *v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  void (*v183)(char *, uint64_t);
  uint64_t v184;
  void *v185;
  void *v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  void (*v190)(char *, uint64_t);
  uint64_t v191;
  void *v192;
  void (*v193)(uint64_t, char *, uint64_t);
  void (*v194)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v195;
  void *v196;
  uint64_t (*v197)(char *, uint64_t, uint64_t);
  void (*v198)(char *, uint64_t);
  unsigned int (*v199)(uint64_t, uint64_t, uint64_t);
  id v200;
  __int128 *v201;
  objc_class *ObjectType;
  int __c;
  size_t __len;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  char *v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  char *v230;
  unint64_t v231;
  char *v232;
  unint64_t v233;
  uint64_t v234;
  unint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  objc_super v245;
  _QWORD v246[31];
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  _QWORD v251[2];
  Swift::String v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  uint64_t v256;
  void *v257;
  uint64_t v258;
  void *v259;
  void *v260;
  uint64_t v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  MobileMail::InstantAnswerView::Model::Flight v267;
  _QWORD v268[8];
  _QWORD v269[8];
  MobileMail::InstantAnswerView::Model::Airport v270;
  MobileMail::InstantAnswerView::Model::Airport v271;
  MobileMail::InstantAnswerView::Model::Airport v272;
  Swift::String v273;
  Swift::String v274;
  Swift::String v275;
  Swift::String v276;
  MobileMail::InstantAnswerView::Model::Airport v277;

  v201 = &v247;
  v237 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v266 = 0;
  v265 = 0;
  v264 = 0;
  v263 = 0;
  v262 = 0;
  v261 = 0;
  v260 = 0;
  v258 = 0;
  v259 = 0;
  v256 = 0;
  v257 = 0;
  v254 = 0;
  v255 = 0;
  v253 = 0;
  v252._countAndFlagsBits = 0;
  v252._object = 0;
  v249 = 0u;
  v250 = 0u;
  v247 = 0u;
  v248 = 0u;
  __c = 0;
  __len = 64;
  memset(&v246[5], 0, 208);
  v234 = 0;
  v205 = type metadata accessor for UICellConfigurationState(0);
  v206 = *(_QWORD *)(v205 - 8);
  v207 = (*(_QWORD *)(v206 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v205);
  v208 = (char *)&v77 - v207;
  v209 = sub_10003A0C8(&qword_1005A5A18);
  v210 = *(_QWORD *)(v209 - 8);
  v211 = (*(_QWORD *)(v210 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v234);
  v212 = (char *)&v77 - v211;
  v266 = (char *)&v77 - v211;
  v213 = type metadata accessor for Calendar.Component(v2);
  v214 = *(_QWORD *)(v213 - 8);
  v215 = (*(_QWORD *)(v214 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v234);
  v216 = (char *)&v77 - v215;
  v217 = type metadata accessor for DateComponents(v3);
  v218 = *(_QWORD *)(v217 - 8);
  v219 = (*(_QWORD *)(v218 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v217);
  v220 = (char *)&v77 - v219;
  v221 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A4F00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v234);
  v222 = (uint64_t)&v77 - v221;
  v223 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v4);
  v224 = (uint64_t)&v77 - v223;
  v225 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v6);
  v226 = (uint64_t)&v77 - v225;
  v227 = type metadata accessor for Date(v8);
  v228 = *(_QWORD *)(v227 - 8);
  v229 = (*(_QWORD *)(v228 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v227);
  v230 = (char *)&v77 - v229;
  v265 = (char *)&v77 - v229;
  v231 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v9);
  v232 = (char *)&v77 - v231;
  v264 = (char *)&v77 - v231;
  v233 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A59C8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v234);
  v243 = (char *)&v77 - v233;
  v244 = type metadata accessor for SearchItem.InstantAnswer(v11);
  v242 = *(_QWORD *)(v244 - 8);
  v235 = (*(_QWORD *)(v242 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = __chkstk_darwin(v234);
  v236 = (char *)&v77 - v235;
  v263 = (char *)&v77 - v235;
  v238 = type metadata accessor for Calendar(v12);
  v239 = *(_QWORD *)(v238 - 8);
  v240 = (*(_QWORD *)(v239 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = __chkstk_darwin(v237);
  v241 = (char *)&v77 - v240;
  v262 = (char *)&v77 - v240;
  v261 = v13;
  v260 = v1;
  static Calendar.current.getter();
  v14 = v1;
  sub_10025857C(v243);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v242 + 48))(v243, 1, v244) == 1)
  {
    sub_1002588C0((uint64_t)v243);

    return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
  }
  (*(void (**)(char *, char *, uint64_t))(v242 + 32))(v236, v243, v244);

  SearchItem.InstantAnswer.flightDepartureDateComponents.getter();
  Calendar.date(from:)(v220);
  v198 = *(void (**)(char *, uint64_t))(v218 + 8);
  v198(v220, v217);
  v199 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v228 + 48);
  if (v199(v226, 1, v227) == 1)
  {
    sub_100221CBC(v226);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
    return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
  }
  v197 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v228 + 32);
  v15 = v197(v232, v226, v227);
  SearchItem.InstantAnswer.flightArrivalDateComponents.getter(v15);
  Calendar.date(from:)(v220);
  v198(v220, v217);
  if (v199(v224, 1, v227) == 1)
  {
    sub_100221CBC(v224);
    (*(void (**)(char *, uint64_t))(v228 + 8))(v232, v227);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
    return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
  }
  v197(v230, v224, v227);
  v193 = *(void (**)(uint64_t, char *, uint64_t))(v228 + 16);
  v193(v222, v232, v227);
  v194 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v228 + 56);
  v194(v222, 0, 1, v227);
  v195 = sub_100258CC8(v222);
  v196 = v16;
  sub_100221CBC(v222);
  if (!v196)
  {
    v190 = *(void (**)(char *, uint64_t))(v228 + 8);
    v190(v230, v227);
    v190(v232, v227);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
    return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
  }
  v191 = v195;
  v192 = v196;
  v186 = v196;
  v187 = v195;
  v258 = v195;
  v259 = v196;
  v193(v222, v232, v227);
  v194(v222, 0, 1, v227);
  v188 = sub_1002589D0(v222);
  v189 = v17;
  sub_100221CBC(v222);
  if (!v189)
  {
    swift_bridgeObjectRelease(v186);
    v183 = *(void (**)(char *, uint64_t))(v228 + 8);
    v183(v230, v227);
    v183(v232, v227);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
    return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
  }
  v184 = v188;
  v185 = v189;
  v179 = v189;
  v180 = v188;
  v256 = v188;
  v257 = v189;
  v193(v222, v230, v227);
  v194(v222, 0, 1, v227);
  v181 = sub_1002589D0(v222);
  v182 = v18;
  sub_100221CBC(v222);
  if (!v182)
  {
    swift_bridgeObjectRelease(v179);
    swift_bridgeObjectRelease(v186);
    v176 = *(void (**)(char *, uint64_t))(v228 + 8);
    v176(v230, v227);
    v176(v232, v227);
    (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
    return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
  }
  v177 = v181;
  v178 = v182;
  v171 = v182;
  v172 = v181;
  v254 = v181;
  v255 = v182;
  (*(void (**)(char *, _QWORD, uint64_t))(v214 + 104))(v216, enum case for Calendar.Component.day(_:), v213);
  v173 = Calendar.compare(_:to:toGranularity:)(v230, v232, v216);
  (*(void (**)(char *, uint64_t))(v214 + 8))(v216, v213);
  v253 = v173;
  v174 = type metadata accessor for ComparisonResult(0);
  v251[1] = v173;
  v175 = v173;
  if (v173 == -1)
  {
    v161 = 1;
    v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-1", 2uLL, 1);
    countAndFlagsBits = v19._countAndFlagsBits;
    object = v19._object;
    v162 = 0;
    v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v161 & 1);
    v163 = v20._countAndFlagsBits;
    v167 = v20._object;
    v166.super.isa = (Class)sub_10003DBA4();
    v21 = sub_10003DB7C();
    v22.value._object = v162;
    v273._countAndFlagsBits = v163;
    v23._countAndFlagsBits = v21;
    v24._countAndFlagsBits = countAndFlagsBits;
    v23._object = v25;
    v24._object = object;
    v165 = v23._object;
    v273._object = v167;
    v22.value._countAndFlagsBits = (uint64_t)v162;
    v169 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v22, v166, v23, v273);
    swift_bridgeObjectRelease(v165);

    swift_bridgeObjectRelease(v167);
    swift_bridgeObjectRelease(object);
    v170._countAndFlagsBits = static String.+ infix(_:_:)(v172);
    v170._object = v26;
    swift_bridgeObjectRelease(v169._object);
    v252 = v170;
  }
  else if (v173)
  {
    if (v173 == 1)
    {
      v151 = 1;
      v27 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("+1", 2uLL, 1);
      v154 = v27._countAndFlagsBits;
      v158 = v27._object;
      v152 = 0;
      v28 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v151 & 1);
      v153 = v28._countAndFlagsBits;
      v157 = v28._object;
      v156.super.isa = (Class)sub_10003DBA4();
      v29 = sub_10003DB7C();
      v30.value._object = v152;
      v274._countAndFlagsBits = v153;
      v31._countAndFlagsBits = v29;
      v32._countAndFlagsBits = v154;
      v31._object = v33;
      v32._object = v158;
      v155 = v31._object;
      v274._object = v157;
      v30.value._countAndFlagsBits = (uint64_t)v152;
      v159 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v30, v156, v31, v274);
      swift_bridgeObjectRelease(v155);

      swift_bridgeObjectRelease(v157);
      swift_bridgeObjectRelease(v158);
      v160._countAndFlagsBits = static String.+ infix(_:_:)(v172);
      v160._object = v34;
      swift_bridgeObjectRelease(v159._object);
      v252 = v160;
    }
    else
    {
      v251[0] = v175;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v174, v251, v174, &type metadata for Int);
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRetain(v171);
    v252._countAndFlagsBits = v172;
    v252._object = v171;
  }
  v78._countAndFlagsBits = SearchItem.InstantAnswer.flightDepartureAirportCode.getter();
  v78._object = v35;
  swift_bridgeObjectRetain(v179);
  v36._countAndFlagsBits = v180;
  v36._object = v179;
  v270 = InstantAnswerView.Model.Airport.init(code:travelTime:)(v78, v36);
  v82 = v270.code._countAndFlagsBits;
  v147 = v270.code._object;
  v83 = v270.travelTime._countAndFlagsBits;
  v148 = v270.travelTime._object;
  *(_QWORD *)&v249 = v270.code._countAndFlagsBits;
  *((_QWORD *)&v249 + 1) = v270.code._object;
  *(_QWORD *)&v250 = v270.travelTime._countAndFlagsBits;
  *((_QWORD *)&v250 + 1) = v270.travelTime._object;
  v37 = SearchItem.InstantAnswer.flightArrivalAirportCode.getter();
  v38 = v200;
  v79._countAndFlagsBits = v37;
  v79._object = v39;
  v149 = &v252;
  v80 = v252;
  swift_bridgeObjectRetain(v252._object);
  v271 = InstantAnswerView.Model.Airport.init(code:travelTime:)(v79, v80);
  v84 = v271.code._countAndFlagsBits;
  v145 = v271.code._object;
  v81 = v271.travelTime._countAndFlagsBits;
  v146 = v271.travelTime._object;
  *(_QWORD *)&v247 = v271.code._countAndFlagsBits;
  *((_QWORD *)&v247 + 1) = v271.code._object;
  *(_QWORD *)&v248 = v271.travelTime._countAndFlagsBits;
  *((_QWORD *)&v248 + 1) = v271.travelTime._object;
  swift_bridgeObjectRetain(v186);
  swift_bridgeObjectRetain(v147);
  swift_bridgeObjectRetain(v148);
  swift_bridgeObjectRetain(v145);
  swift_bridgeObjectRetain(v146);
  v40._countAndFlagsBits = v187;
  v272.code._countAndFlagsBits = v82;
  v272.travelTime._countAndFlagsBits = v83;
  v277.code._countAndFlagsBits = v84;
  v277.code._object = v145;
  v272.code._object = v147;
  v272.travelTime._object = v148;
  v40._object = v186;
  v277.travelTime._countAndFlagsBits = v81;
  v277.travelTime._object = v146;
  v144 = &v267;
  InstantAnswerView.Model.Flight.init(travelDate:departureAirport:arrivalAirport:)(&v267, v40, v272, v277);
  *(MobileMail::InstantAnswerView::Model::Flight *)&v246[21] = v267;
  v99 = (id)MFImageGlyphInstantAnswersViewMessage;
  v41 = MFImageGlyphInstantAnswersViewMessage;
  v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
  v93 = v42;
  v108 = 1;
  v43 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("View Message", 0xCuLL, 1);
  v86 = v43._countAndFlagsBits;
  v90 = v43._object;
  v109 = "";
  v136 = 0;
  v44 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v108 & 1);
  v85 = v44._countAndFlagsBits;
  v89 = v44._object;
  v88.super.isa = (Class)sub_10003DBA4();
  v45 = sub_10003DB7C();
  v275._countAndFlagsBits = v85;
  v46.value._object = (void *)v136;
  v47._countAndFlagsBits = v45;
  v48._countAndFlagsBits = v86;
  v47._object = v49;
  v48._object = v90;
  v87 = v47._object;
  v275._object = v89;
  v46.value._countAndFlagsBits = v136;
  v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v46, v88, v47, v275);
  swift_bridgeObjectRelease(v87);

  swift_bridgeObjectRelease(v89);
  swift_bridgeObjectRelease(v90);
  v98 = (id)MSAccessibilityIdentifierInstantAnswersViewMessageButton;
  v50 = MSAccessibilityIdentifierInstantAnswersViewMessageButton;
  v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
  v96 = v51;
  v117 = &unk_100528290;
  v118 = 24;
  v116 = 7;
  v97 = swift_allocObject(&unk_100528290, 24, 7);
  v91 = v97 + 16;
  v52 = v38;
  swift_unknownObjectWeakInit(v91);

  swift_retain(v97);
  v143 = v268;
  InstantAnswerView.Model.Action.init(iconSymbolName:title:accessibilityIdentifier:handler:)(v92, v93, v94._countAndFlagsBits, (uint64_t)v94._object, v95, v96, (uint64_t)sub_10025AAD4, v97, v268);
  v100 = v268[0];
  v101 = v268[1];
  v102 = v268[2];
  v103 = v268[3];
  v104 = v268[4];
  v105 = v268[5];
  v106 = v268[6];
  v107 = v268[7];
  swift_release();

  v246[13] = v100;
  v246[14] = v101;
  v246[15] = v102;
  v246[16] = v103;
  v246[17] = v104;
  v246[18] = v105;
  v246[19] = v106;
  v246[20] = v107;
  v127 = (id)MFImageGlyphInstantAnswersOpenLink;
  v53 = MFImageGlyphInstantAnswersOpenLink;
  v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
  v121 = v54;
  v55 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Open Link", 9uLL, v108 & 1);
  v111 = v55._countAndFlagsBits;
  v115 = v55._object;
  v56 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v109, v136, v108 & 1);
  v110 = v56._countAndFlagsBits;
  v114 = v56._object;
  v113.super.isa = (Class)sub_10003DBA4();
  v57 = sub_10003DB7C();
  v276._countAndFlagsBits = v110;
  v58.value._object = (void *)v136;
  v59._countAndFlagsBits = v57;
  v60._countAndFlagsBits = v111;
  v59._object = v61;
  v60._object = v115;
  v112 = v59._object;
  v276._object = v114;
  v58.value._countAndFlagsBits = v136;
  v122 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v58, v113, v59, v276);
  swift_bridgeObjectRelease(v112);

  swift_bridgeObjectRelease(v114);
  swift_bridgeObjectRelease(v115);
  v126 = (id)MSAccessibilityIdentifierInstantAnswersFlightOpenLinkButton;
  v62 = MSAccessibilityIdentifierInstantAnswersFlightOpenLinkButton;
  v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
  v124 = v63;
  v125 = swift_allocObject(v117, v118, v116);
  v119 = v125 + 16;
  v64 = v38;
  swift_unknownObjectWeakInit(v119);

  swift_retain(v125);
  v142 = v269;
  InstantAnswerView.Model.Action.init(iconSymbolName:title:accessibilityIdentifier:handler:)(v120, v121, v122._countAndFlagsBits, (uint64_t)v122._object, v123, v124, (uint64_t)sub_10025AC14, v125, v269);
  v128 = v269[0];
  v129 = v269[1];
  v130 = v269[2];
  v131 = v269[3];
  v132 = v269[4];
  v133 = v269[5];
  v134 = v269[6];
  v135 = v269[7];
  swift_release();

  v246[5] = v128;
  v246[6] = v129;
  v246[7] = v130;
  v246[8] = v131;
  v246[9] = v132;
  v246[10] = v133;
  v246[11] = v134;
  v246[12] = v135;
  sub_10025AF34(v144);
  sub_10025AFA0(v143);
  sub_10025AFA0(v142);
  v65 = v38;
  v139 = &v77;
  v66 = __chkstk_darwin(v136);
  v67 = v142;
  v68 = v143;
  v70 = (uint64_t *)((char *)&v77 - v69);
  v137 = (char *)&v77 - v69;
  v70[2] = v144;
  v70[3] = v68;
  v70[4] = v67;
  v70[5] = v38;
  v138 = type metadata accessor for InstantAnswerView(v66);
  v71 = sub_10025B010();
  UIHostingConfiguration<>.init(content:)(sub_10025AFFC, v137, v138, v71);
  sub_10025B080(v144);
  sub_10025B0EC(v143);
  sub_10025B0EC(v142);

  v72 = v38;
  v140 = v246;
  v246[3] = v209;
  v246[4] = sub_10025B148();
  v73 = sub_1001F2690(v140);
  (*(void (**)(uint64_t *, char *, uint64_t))(v210 + 16))(v73, v212, v209);
  UICollectionViewCell.contentConfiguration.setter(v140);
  v74 = v208;

  v75 = v200;
  (*(void (**)(char *, uint64_t, uint64_t))(v206 + 16))(v74, v237, v205);
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  (*(void (**)(char *, uint64_t))(v206 + 8))(v208, v205);
  v245.receiver = v200;
  v245.super_class = ObjectType;
  objc_msgSendSuper2(&v245, "_bridgedUpdateConfigurationUsingState:", isa);

  (*(void (**)(char *, uint64_t))(v210 + 8))(v212, v209);
  sub_10025B0EC(v142);
  sub_10025B0EC(v143);
  sub_10025B080(v144);
  swift_bridgeObjectRelease(v145);
  swift_bridgeObjectRelease(v146);
  swift_bridgeObjectRelease(v147);
  swift_bridgeObjectRelease(v148);
  sub_1001F0D3C((uint64_t)v149);
  swift_bridgeObjectRelease(v171);
  swift_bridgeObjectRelease(v179);
  swift_bridgeObjectRelease(v186);
  v150 = *(void (**)(char *, uint64_t))(v228 + 8);
  v150(v230, v227);
  v150(v232, v227);
  (*(void (**)(char *, uint64_t))(v242 + 8))(v236, v244);
  return (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v241, v238);
}

uint64_t sub_10025A960()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

void sub_10025A99C(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[24];
  uint64_t v12;

  v10 = 0;
  v6 = a1 + 16;
  v12 = a1 + 16;
  swift_beginAccess(a1 + 16);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  swift_endAccess(v11);
  if (Strong)
  {
    v10 = Strong;
    v1 = Strong;
    v8 = sub_10025814C();
    v9 = v2;
    if (v8)
    {
      v5 = v8;
      v4 = v9;
      swift_unknownObjectRetain(v8);
      sub_100213BD8(&v8);

      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t))(v4 + 16))(Strong, ObjectType);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      sub_100213BD8(&v8);

    }
  }
}

void sub_10025AAD4()
{
  uint64_t v0;

  sub_10025A99C(v0);
}

void sub_10025AADC(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[24];
  uint64_t v12;

  v10 = 0;
  v6 = a1 + 16;
  v12 = a1 + 16;
  swift_beginAccess(a1 + 16);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  swift_endAccess(v11);
  if (Strong)
  {
    v10 = Strong;
    v1 = Strong;
    v8 = sub_10025814C();
    v9 = v2;
    if (v8)
    {
      v5 = v8;
      v4 = v9;
      swift_unknownObjectRetain(v8);
      sub_100213BD8(&v8);

      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t))(v4 + 8))(Strong, ObjectType);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      sub_100213BD8(&v8);

    }
  }
}

void sub_10025AC14()
{
  uint64_t v0;

  sub_10025AADC(v0);
}

uint64_t sub_10025AC1C@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  size_t __n;
  void *__src;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  size_t v28;
  uint64_t v29;
  ValueMetadata *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[10];
  char *v54;
  _QWORD __dst[10];
  _QWORD v56[11];
  char v57;

  v45 = a5;
  __src = a1;
  v25 = a2;
  v27 = a3;
  v42 = a4;
  v54 = 0;
  __n = 80;
  v41 = 0;
  memset(v53, 0, sizeof(v53));
  v52 = 0;
  v51 = 0;
  v50 = 0;
  memcpy(__dst, __src, sizeof(__dst));
  v31 = __dst[0];
  v32 = __dst[1];
  v33 = __dst[2];
  v34 = __dst[3];
  v35 = __dst[4];
  v36 = __dst[5];
  v37 = __dst[6];
  v38 = __dst[7];
  v39 = __dst[8];
  v40 = __dst[9];
  v46 = type metadata accessor for InstantAnswerView(0);
  v24 = *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64);
  v23 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(__src);
  v48 = (uint64_t *)((char *)&v20 - v23);
  v7 = (_QWORD *)__chkstk_darwin(v6);
  v49 = (uint64_t *)((char *)&v20 - v8);
  v54 = (char *)&v20 - v8;
  v53[0] = v31;
  v53[1] = v32;
  v53[2] = v9;
  v53[3] = v10;
  v53[4] = v11;
  v53[5] = v12;
  v53[6] = v37;
  v53[7] = v38;
  v53[8] = v39;
  v53[9] = v13;
  v52 = v14;
  v51 = v15;
  v50 = a4;
  sub_10025AF34(v7);
  v30 = &type metadata for InstantAnswerView.Model.Action;
  v29 = _allocateUninitializedArray<A>(_:)(2, &type metadata for InstantAnswerView.Model.Action);
  v26 = v16;
  sub_10025AFA0(v25);
  v28 = 64;
  memcpy(v26, v25, 0x40uLL);
  sub_10025AFA0(v27);
  memcpy(v26 + 64, v27, v28);
  v17 = v29;
  sub_10003CB20();
  v43 = v56;
  v56[0] = v31;
  v56[1] = v32;
  v56[2] = v33;
  v56[3] = v34;
  v56[4] = v35;
  v56[5] = v36;
  v56[6] = v37;
  v56[7] = v38;
  v56[8] = v39;
  v56[9] = v40;
  v56[10] = v17;
  v57 = v41 & 1;
  v18 = a4;
  v44 = sub_1002583C0();

  InstantAnswerView.init(model:state:)(v43, v44, v48);
  v47 = sub_10025B010();
  sub_100253AA8((uint64_t)v48, v46, (uint64_t)v49);
  sub_10025B568((uint64_t)v48);
  sub_10025B708(v49, v48);
  sub_100253AA8((uint64_t)v48, v46, v45);
  sub_10025B568((uint64_t)v48);
  return sub_10025B568((uint64_t)v49);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10025AF34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[5];
  v3 = a1[7];
  v4 = a1[9];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10025AFA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1[3];
  v2 = a1[5];
  v3 = a1[7];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
}

uint64_t sub_10025AFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025AC1C(*(void **)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD **)(v1 + 32), *(void **)(v1 + 40), a1);
}

unint64_t sub_10025B010()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5A20;
  if (!qword_1005A5A20)
  {
    v0 = type metadata accessor for InstantAnswerView(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for InstantAnswerView, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5A20);
    return WitnessTable;
  }
  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10025B080(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1[3];
  v2 = a1[5];
  v3 = a1[7];
  v4 = a1[9];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10025B0EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1[3];
  v2 = a1[5];
  v3 = a1[7];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  swift_release(v3);
}

unint64_t sub_10025B148()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5A28;
  if (!qword_1005A5A28)
  {
    v0 = sub_1001E7634(&qword_1005A5A18);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UIHostingConfiguration<A, B>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5A28);
    return WitnessTable;
  }
  return v3;
}

id sub_10025B278(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v5;
  __int128 v7;
  __int128 v8;
  id v9;
  objc_super v10;
  __int128 v11;
  __int128 v12;
  id v13;

  *(double *)&v7 = a1;
  *((double *)&v7 + 1) = a2;
  *(double *)&v8 = a3;
  *((double *)&v8 + 1) = a4;
  v11 = v7;
  v12 = v8;
  v13 = v4;
  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType(v4);
  v9 = objc_msgSendSuper2(&v10, "initWithFrame:", v7, v8);
  v5 = v9;
  v13 = v9;

  return v9;
}

id sub_10025B380(void *a1)
{
  void *v1;
  id v2;
  id v6;
  objc_super v7;
  void *v8;
  id v9;

  v8 = a1;
  v9 = v1;
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType(v1);
  v6 = objc_msgSendSuper2(&v7, "initWithCoder:");
  if (v6)
  {
    v2 = v6;
    v9 = v6;

    return v6;
  }
  else
  {

    return 0;
  }
}

uint64_t sub_10025B480()
{
  return type metadata accessor for InstantAnswerFlightCell(0);
}

uint64_t type metadata accessor for InstantAnswerFlightCell(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A5A58;
  if (!qword_1005A5A58)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstantAnswerFlightCell);
  return v2;
}

uint64_t sub_10025B4FC(uint64_t a1)
{
  uint64_t updated;
  _BYTE v3[8];

  updated = swift_updateClassMetadata2(a1, 256, 0, v3, a1 + 192);
  if (!updated)
    return 0;
  return updated;
}

uint64_t sub_10025B568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_10003A0C8(&qword_1005A5A68);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    v2 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  v3 = a1 + *(int *)(type metadata accessor for InstantAnswerView(0) + 20);
  sub_10025B658(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_BYTE *)(v3 + 88) & 1);
  swift_release();
  return a1;
}

uint64_t sub_10025B658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a6);
  if ((a12 & 1) != 0)
    return swift_bridgeObjectRelease(a7);
  swift_bridgeObjectRelease(a8);
  swift_bridgeObjectRelease(a10);
  return swift_bridgeObjectRelease(a11);
}

_QWORD *sub_10025B708(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  char *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v24;

  v24 = sub_10003A0C8(&qword_1005A5A68);
  if (swift_getEnumCaseMultiPayload(a1, v24) == 1)
  {
    v2 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v24, 1);
  }
  else
  {
    v21 = *a1;
    swift_retain(*a1);
    *a2 = v21;
    swift_storeEnumTagMultiPayload(a2, v24, 0);
  }
  v20 = (int *)type metadata accessor for InstantAnswerView(0);
  v17 = (char *)a2 + v20[5];
  v3 = (char *)a1 + v20[5];
  v5 = *(_QWORD *)v3;
  v6 = *((_QWORD *)v3 + 1);
  v7 = *((_QWORD *)v3 + 2);
  v8 = *((_QWORD *)v3 + 3);
  v9 = *((_QWORD *)v3 + 4);
  v10 = *((_QWORD *)v3 + 5);
  v11 = *((_QWORD *)v3 + 6);
  v12 = *((_QWORD *)v3 + 7);
  v13 = *((_QWORD *)v3 + 8);
  v14 = *((_QWORD *)v3 + 9);
  v15 = *((_QWORD *)v3 + 10);
  v16 = v3[88];
  sub_10025B910(*(_QWORD *)v3, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16 & 1);
  *(_QWORD *)v17 = v5;
  *((_QWORD *)v17 + 1) = v6;
  *((_QWORD *)v17 + 2) = v7;
  *((_QWORD *)v17 + 3) = v8;
  *((_QWORD *)v17 + 4) = v9;
  *((_QWORD *)v17 + 5) = v10;
  *((_QWORD *)v17 + 6) = v11;
  *((_QWORD *)v17 + 7) = v12;
  *((_QWORD *)v17 + 8) = v13;
  *((_QWORD *)v17 + 9) = v14;
  *((_QWORD *)v17 + 10) = v15;
  v17[88] = v16 & 1;
  v18 = v20[6];
  v19 = *(_QWORD *)((char *)a1 + v18);
  swift_retain(v19);
  result = a2;
  *(_QWORD *)((char *)a2 + v18) = v19;
  *(_QWORD *)((char *)a2 + v20[7]) = *(_QWORD *)((char *)a1 + v20[7]);
  return result;
}

uint64_t sub_10025B910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  if ((a12 & 1) != 0)
    return swift_bridgeObjectRetain(a7);
  swift_bridgeObjectRetain(a8);
  swift_bridgeObjectRetain(a10);
  return swift_bridgeObjectRetain(a11);
}

uint64_t sub_10025B9C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = a1;
  v7 = 0;
  v5 = sub_10003A0C8(&qword_1005A5A90);
  v3 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (uint64_t)&v2 - v3;
  v7 = (_QWORD *)__chkstk_darwin(v2);
  sub_10025BA60(v7, (uint64_t *)((char *)&v2 - v3));
  Environment.wrappedValue.getter(v5);
  return sub_10025BB10(v6);
}

_QWORD *sub_10025BA60(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v7;

  v7 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v7) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v7, 1);
  }
  else
  {
    v4 = *a1;
    swift_retain(*a1);
    *a2 = v4;
    swift_storeEnumTagMultiPayload(a2, v7, 0);
  }
  return a2;
}

uint64_t sub_10025BB10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  return a1;
}

uint64_t property wrapper backing initializer of InstantAnswerFlightContentView.departureAirportSize(double a1, double a2)
{
  uint64_t v2;
  _QWORD v4[2];
  _QWORD v5[5];

  *(double *)&v5[3] = a1;
  *(double *)&v5[4] = a2;
  *(double *)v4 = a1;
  *(double *)&v4[1] = a2;
  v2 = type metadata accessor for CGSize(0);
  State.init(wrappedValue:)(v5, v4, v2);
  return v5[2];
}

double sub_10025BBE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD v8[4];

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 20));
  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  swift_retain(v6);
  swift_retain(v6);
  v8[0] = v4;
  v8[1] = v5;
  v8[2] = v6;
  v2 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.getter(v2);
  sub_10025BCF8((uint64_t)v8);
  v7 = *(double *)&v8[3];
  swift_release();
  return v7;
}

uint64_t type metadata accessor for InstantAnswerFlightContentView(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A5C98;
  if (!qword_1005A5C98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstantAnswerFlightContentView);
  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10025BCF8(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t sub_10025BD20(double a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[3];

  v3 = (uint64_t *)(v2 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 20));
  v6 = *v3;
  v7 = v3[1];
  v10 = v3[2];
  swift_retain(v10);
  swift_retain(v10);
  v12[0] = v6;
  v12[1] = v7;
  v12[2] = v10;
  *(double *)v11 = a1;
  *(double *)&v11[1] = a2;
  v4 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.setter(v11, v4);
  sub_10025BCF8((uint64_t)v12);
  return swift_release();
}

double sub_10025BDDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD v8[4];

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 24));
  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  swift_retain(v6);
  swift_retain(v6);
  v8[0] = v4;
  v8[1] = v5;
  v8[2] = v6;
  v2 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.getter(v2);
  sub_10025BCF8((uint64_t)v8);
  v7 = *(double *)&v8[3];
  swift_release();
  return v7;
}

uint64_t sub_10025BE8C(double a1, double a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[3];

  v3 = (uint64_t *)(v2 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 24));
  v6 = *v3;
  v7 = v3[1];
  v10 = v3[2];
  swift_retain(v10);
  swift_retain(v10);
  v12[0] = v6;
  v12[1] = v7;
  v12[2] = v10;
  *(double *)v11 = a1;
  *(double *)&v11[1] = a2;
  v4 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.setter(v11, v4);
  sub_10025BCF8((uint64_t)v12);
  return swift_release();
}

uint64_t property wrapper backing initializer of InstantAnswerFlightContentView.departureTimeWidth(double a1)
{
  double v2;
  _QWORD v3[3];

  *(double *)&v3[2] = a1;
  v2 = a1;
  State.init(wrappedValue:)(v3, &v2, &type metadata for Double);
  return v3[1];
}

double sub_10025BF88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  _QWORD v7[3];

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 28));
  v4 = *v1;
  v5 = v1[1];
  swift_retain(v5);
  swift_retain(v5);
  v7[0] = v4;
  v7[1] = v5;
  v2 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.getter(v2);
  sub_10025C01C((uint64_t)v7);
  v6 = *(double *)&v7[2];
  swift_release();
  return v6;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10025C01C(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
}

uint64_t sub_10025C044(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  double v8;
  _QWORD v9[2];

  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 28));
  v5 = *v2;
  v7 = v2[1];
  swift_retain(v7);
  swift_retain(v7);
  v9[0] = v5;
  v9[1] = v7;
  v8 = a1;
  v3 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.setter(&v8, v3);
  sub_10025C01C((uint64_t)v9);
  return swift_release();
}

double sub_10025C0E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  _QWORD v7[3];

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 32));
  v4 = *v1;
  v5 = v1[1];
  swift_retain(v5);
  swift_retain(v5);
  v7[0] = v4;
  v7[1] = v5;
  v2 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.getter(v2);
  sub_10025C01C((uint64_t)v7);
  v6 = *(double *)&v7[2];
  swift_release();
  return v6;
}

uint64_t sub_10025C178(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  double v8;
  _QWORD v9[2];

  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 32));
  v5 = *v2;
  v7 = v2[1];
  swift_retain(v7);
  swift_retain(v7);
  v9[0] = v5;
  v9[1] = v7;
  v8 = a1;
  v3 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.setter(&v8, v3);
  sub_10025C01C((uint64_t)v9);
  return swift_release();
}

_QWORD *InstantAnswerFlightContentView.flight.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for InstantAnswerFlightContentView(0);
  return sub_10025C24C((_QWORD *)(v1 + *(int *)(v2 + 36)), a1);
}

_QWORD *sub_10025C24C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;

  *a2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain(v3);
  a2[1] = v3;
  a2[2] = a1[2];
  v4 = a1[3];
  swift_bridgeObjectRetain(v4);
  a2[3] = v4;
  a2[4] = a1[4];
  v5 = a1[5];
  swift_bridgeObjectRetain(v5);
  a2[5] = v5;
  a2[6] = a1[6];
  v7 = a1[7];
  swift_bridgeObjectRetain(v7);
  a2[7] = v7;
  a2[8] = a1[8];
  v9 = a1[9];
  swift_bridgeObjectRetain(v9);
  result = a2;
  a2[9] = v9;
  return result;
}

_QWORD *InstantAnswerFlightContentView.flight.setter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  sub_10025AF34(a1);
  v2 = type metadata accessor for InstantAnswerFlightContentView(0);
  sub_10025C360(a1, (_QWORD *)(v1 + *(int *)(v2 + 36)));
  result = a1;
  sub_10025B080(a1);
  return result;
}

_QWORD *sub_10025C360(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a2[1];
  a2[1] = v2;
  swift_bridgeObjectRelease(v3);
  a2[2] = a1[2];
  v4 = a2[3];
  a2[3] = a1[3];
  swift_bridgeObjectRelease(v4);
  a2[4] = a1[4];
  v5 = a2[5];
  a2[5] = a1[5];
  swift_bridgeObjectRelease(v5);
  a2[6] = a1[6];
  v6 = a2[7];
  a2[7] = a1[7];
  swift_bridgeObjectRelease(v6);
  a2[8] = a1[8];
  v7 = a2[9];
  a2[9] = a1[9];
  swift_bridgeObjectRelease(v7);
  return a2;
}

uint64_t (*InstantAnswerFlightContentView.flight.modify())(_QWORD)
{
  type metadata accessor for InstantAnswerFlightContentView(0);
  return nullsub_9;
}

Swift::Double sub_10025C444()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Double v17;
  double v18;
  int *v19;
  uint64_t v20;
  double v21;
  _QWORD v22[5];
  _QWORD v23[3];
  double v24;
  double v25;
  _QWORD v26[3];
  uint64_t v27;

  v25 = 0.0;
  v27 = v0;
  v19 = (int *)type metadata accessor for InstantAnswerFlightContentView(0);
  v9 = *(double *)(v0 + v19[10]);
  v1 = (uint64_t *)(v0 + v19[8]);
  v6 = *v1;
  v7 = v1[1];
  swift_retain(v7);
  swift_retain(v7);
  v26[0] = v6;
  v26[1] = v7;
  v10 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.getter(v10);
  sub_10025C01C((uint64_t)v26);
  v8 = *(double *)&v26[2];
  swift_release();
  v25 = v9 + v8;
  v2 = (uint64_t *)(v15 + v19[7]);
  v11 = *v2;
  v12 = v2[1];
  swift_retain(v12);
  swift_retain(v12);
  v23[0] = v11;
  v23[1] = v12;
  State.wrappedValue.getter(v10);
  sub_10025C01C((uint64_t)v23);
  v18 = *(double *)&v23[2];
  swift_release();
  v3 = (uint64_t *)(v15 + v19[5]);
  v13 = *v3;
  v14 = v3[1];
  v16 = v3[2];
  swift_retain(v16);
  swift_retain(v16);
  v22[0] = v13;
  v22[1] = v14;
  v22[2] = v16;
  v4 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.getter(v4);
  sub_10025BCF8((uint64_t)v22);
  v17 = *(double *)&v22[3];
  swift_release();
  v21 = v18 - Double.init(_:)(v17);
  v20 = 0;
  max<A>(_:_:)(&v24, &v21, &v20, &type metadata for Double, &protocol witness table for Double);
  return Double.init(_:)(v9 + v8 - v24 + *(double *)(v15 + v19[10]));
}

uint64_t InstantAnswerFlightContentView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;

  v16 = a1;
  v24 = 0;
  v23 = 0;
  v11 = 0;
  v2 = type metadata accessor for InstantAnswerFlightContentView(0);
  v7 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v15 = (unint64_t *)((char *)&v7 - v7);
  v17 = sub_10003A0C8(&qword_1005A5AB0);
  v8 = (*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  v19 = (uint64_t)&v7 - v8;
  v9 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin((char *)&v7 - v8);
  v20 = (uint64_t)&v7 - v9;
  v24 = (char *)&v7 - v9;
  v23 = v1;
  v14 = static HorizontalAlignment.leading.getter(v4);
  sub_1002618E0(v10, v15);
  v12 = &v21;
  v22 = v15;
  v13 = sub_10003A0C8(&qword_1005A5AB8);
  v5 = sub_100261B8C();
  VStack.init(alignment:spacing:content:)(v14, v11, 1, sub_100261B84, v12, v13, v5);
  sub_100261BFC((uint64_t)v15);
  v18 = sub_100261D28();
  sub_100253AA8(v19, v17, v20);
  sub_100261D98(v19);
  sub_10026248C(v20, v19);
  sub_100253AA8(v19, v17, v16);
  sub_100261D98(v19);
  return sub_100261D98(v20);
}

uint64_t sub_10025C810@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  Swift::Double v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[4];
  _QWORD v88[6];
  _QWORD v89[2];
  _QWORD v90[2];
  _QWORD v91[2];
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  _QWORD v123[2];
  uint64_t v124;
  char *v125;
  char *v126;

  v81 = a2;
  v68 = a1;
  v126 = 0;
  v125 = 0;
  v124 = 0;
  v35 = type metadata accessor for InstantAnswerFlightContentView(0);
  v31 = (*(_QWORD *)(*(_QWORD *)(v35 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v35);
  v75 = (uint64_t *)((char *)&v30 - v31);
  v71 = sub_10003A0C8(&qword_1005A5DE0);
  v32 = (*(_QWORD *)(*(_QWORD *)(v71 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v71);
  v76 = (uint64_t)&v30 - v32;
  v78 = sub_10003A0C8(&qword_1005A5B40);
  v33 = (*(_QWORD *)(*(_QWORD *)(v78 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v78);
  v83 = (uint64_t)&v30 - v33;
  v34 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v30 - v33);
  v85 = (uint64_t)&v30 - v34;
  v126 = (char *)&v30 - v34;
  v77 = sub_10003A0C8(&qword_1005A5AD8);
  v37 = *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64);
  v36 = (v37 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v68);
  v84 = (uint64_t)&v30 - v36;
  v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v3);
  v86 = (uint64_t)&v30 - v38;
  v125 = (char *)&v30 - v38;
  v124 = v4;
  v6 = (uint64_t *)(v4 + *(int *)(v5 + 36));
  v39 = *v6;
  v40 = v6[1];
  swift_bridgeObjectRetain(v40);
  v41 = v123;
  v123[0] = v39;
  v123[1] = v40;
  v7 = sub_1001F0CD4();
  v119 = Text.init<A>(_:)(v41, &type metadata for String, v7);
  v120 = v8;
  v121 = v9;
  v122 = v10;
  v43 = v119;
  v44 = v8;
  v45 = v9;
  v46 = v10;
  v42 = static Font.footnote.getter();
  v115 = v43;
  v116 = v44;
  v59 = 1;
  v117 = v45 & 1;
  v118 = v46;
  v111 = Text.font(_:)(v42, v43, v44, v45 & 1, v46);
  v112 = v11;
  v113 = v12;
  v114 = v13;
  v48 = v111;
  v49 = v11;
  v47 = v12;
  v50 = v13;
  swift_release();
  sub_10026244C(v43, v44, v45 & 1);
  swift_bridgeObjectRelease(v46);
  v107 = v48;
  v108 = v49;
  v109 = v47 & 1 & v59;
  v110 = v50;
  v103 = Text.bold()(v48, v49, v109, v50);
  v104 = v14;
  v105 = v15;
  v106 = v16;
  v54 = v103;
  v52 = v14;
  v53 = v15;
  v55 = v16;
  sub_10026244C(v48, v49, v47 & 1);
  swift_bridgeObjectRelease(v50);
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v18 = Color.init(uiColor:)(v17);
  v51 = &v102;
  v102 = v18;
  v98 = v54;
  v99 = v52;
  v100 = v53 & 1 & v59;
  v101 = v55;
  v94 = Text.foregroundStyle<A>(_:)();
  v95 = v19;
  v96 = v20;
  v97 = v21;
  v56 = v94;
  v57 = v19;
  v58 = v20;
  v60 = v21;
  sub_1001F0F44(v51);
  sub_10026244C(v54, v52, v53 & 1);
  swift_bridgeObjectRelease(v55);
  v63 = v91;
  v91[0] = v56;
  v91[1] = v57;
  v92 = v58 & 1 & v59;
  v93 = v60;
  v62 = (id)MSAccessibilityIdentifierInstantAnswersFlightDepartureDate;
  v22 = MSAccessibilityIdentifierInstantAnswersFlightDepartureDate;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v61 = v24;
  View.accessibilityIdentifier(_:)(v23);
  swift_bridgeObjectRelease(v61);

  sub_1002634A4((uint64_t)v63);
  v79 = sub_1002634E8();
  sub_100253AA8(v84, v77, v86);
  v25 = sub_1002635E0(v84);
  v67 = static VerticalAlignment.firstTextBaseline.getter(v25);
  v64 = sub_10025C444();
  sub_1002618E0(v68, v75);
  v65 = v88;
  v88[2] = v75;
  v66 = sub_10003A0C8(&qword_1005A5DE8);
  v26 = sub_1002675A4();
  HStack.init(alignment:spacing:content:)(v67, *(_QWORD *)&v64, 0, sub_10026759C, v65, v66, v26);
  sub_100261BFC((uint64_t)v75);
  v27 = sub_10025F6B0();
  v74 = *v27;
  v69 = v27[1];
  sub_1002618E0(v68, v75);
  v70 = v87;
  v87[2] = v75;
  v72 = sub_10003A0C8(&qword_1005A5D08);
  v73 = sub_10026761C();
  v28 = sub_100264F74();
  View.overlay<A>(alignment:content:)(v74, v69, sub_100267614, v70, v71, v72, v73, v28);
  sub_100261BFC((uint64_t)v75);
  sub_10026768C(v76);
  v80 = sub_100267A14();
  sub_100253AA8(v83, v78, v85);
  sub_100267B10(v83);
  sub_10026814C(v86, v84);
  v82 = v90;
  v90[0] = v84;
  sub_100268220(v85, v83);
  v90[1] = v83;
  v89[0] = v77;
  v89[1] = v78;
  v88[4] = v79;
  v88[5] = v80;
  sub_1002C9238((uint64_t)v82, 2uLL, (uint64_t)v89, v81);
  sub_100267B10(v83);
  sub_1002635E0(v84);
  sub_100267B10(v85);
  return sub_1002635E0(v86);
}

uint64_t sub_10025CEDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _BYTE *v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  void *v30;
  void *v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  int v63;
  _QWORD v64[4];
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  _QWORD v79[3];
  _QWORD v80[3];
  _BYTE v81[16];
  _QWORD v82[3];
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  char v90;
  char v91;
  _QWORD *v92;
  char *v93;
  char *v94;

  v33 = a2;
  v34 = a1;
  v94 = 0;
  v93 = 0;
  v92 = 0;
  v77 = 0;
  v78 = 0;
  v35 = sub_10003A0C8(&qword_1005A5E10);
  v36 = (*(_QWORD *)(*(_QWORD *)(v35 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v35);
  v37 = (uint64_t)&v17 - v36;
  v38 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v17 - v36);
  v39 = (uint64_t)&v17 - v38;
  v40 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v17 - v38);
  v41 = (uint64_t)&v17 - v40;
  v94 = (char *)&v17 - v40;
  v50 = 0;
  v60 = type metadata accessor for ContentSizeCategory(0);
  v59 = *(_QWORD *)(v60 - 8);
  v42 = (*(_QWORD *)(v59 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v50);
  v61 = (uint64_t)&v17 - v42;
  v6 = type metadata accessor for InstantAnswerFlightContentView(v5);
  v43 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  v44 = (uint64_t *)((char *)&v17 - v43);
  v45 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v17 - v43);
  v54 = (uint64_t *)((char *)&v17 - v45);
  v56 = sub_10003A0C8(&qword_1005A5E18);
  v46 = (*(_QWORD *)(*(_QWORD *)(v56 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v56);
  v47 = (uint64_t)&v17 - v46;
  v48 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v17 - v46);
  v58 = (uint64_t)&v17 - v48;
  v49 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v17 - v48);
  v55 = (uint64_t)&v17 - v49;
  v93 = (char *)&v17 - v49;
  v92 = a1;
  v53 = static HorizontalAlignment.leading.getter(a1);
  sub_1002618E0(a1, v54);
  v51 = v64;
  v64[2] = v54;
  v52 = sub_10003A0C8(&qword_1005A5E20);
  v10 = sub_100269B9C();
  VStack.init(alignment:spacing:content:)(v53, v50, 1, sub_100269B94, v51, v52, v10);
  sub_100261BFC((uint64_t)v54);
  v57 = sub_100269C0C();
  sub_100253AA8(v58, v56, v55);
  sub_100269C7C(v58);
  v11 = sub_10025B9C0(v61);
  v63 = ContentSizeCategory.isAccessibilityCategory.getter(v11);
  v62 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v62(v61, v60);
  if ((v63 & 1) != 0)
  {
    v32 = 1;
    v75 = Spacer.init(minLength:)(0);
    v76 = v12 & 1;
    v30 = &type metadata for Spacer;
    v31 = &protocol witness table for Spacer;
    sub_100253AA8((uint64_t)&v75, (uint64_t)&type metadata for Spacer, (uint64_t)&v77);
    v68 = v77;
    v69 = v78 & 1 & v32;
    sub_100253AA8((uint64_t)&v68, (uint64_t)v30, (uint64_t)&v70);
    v65 = v70;
    v66 = v71 & v32;
    v67 = 0;
    sub_1002C9470(&v65, (uint64_t)v30, &v72);
    v89 = v72;
    v90 = v73;
    v91 = v74 & 1 & v32;
  }
  else
  {
    v83 = 0;
    v84 = 0;
    v29 = 1;
    v85 = 1;
    sub_1002C9470(&v83, (uint64_t)&type metadata for Spacer, &v86);
    v89 = v86;
    v90 = v87;
    v91 = v88 & 1 & v29;
  }
  v13 = sub_10025B9C0(v61);
  v28 = ContentSizeCategory.isAccessibilityCategory.getter(v13);
  v62(v61, v60);
  if ((v28 & 1) != 0)
    v27 = static HorizontalAlignment.trailing.getter();
  else
    v27 = static HorizontalAlignment.leading.getter(v28);
  v20 = v27;
  sub_1002618E0(v34, v44);
  v21 = &v17;
  __chkstk_darwin(&v17);
  v18 = &v17 - 4;
  *(&v17 - 2) = v14;
  v19 = sub_10003A0C8(&qword_1005A5E38);
  v15 = sub_100269EE0();
  VStack.init(alignment:spacing:content:)(v20, 0, 1, sub_100269ED8, v18, v19, v15);
  sub_100261BFC((uint64_t)v44);
  v23 = sub_100269F50();
  sub_100253AA8(v39, v35, v41);
  sub_100269FC0(v39);
  sub_10026A0DC(v55, v47);
  v26 = v82;
  v82[0] = v47;
  v22 = v81;
  sub_10026A5E4((uint64_t)&v89, (uint64_t)v81);
  v82[1] = v22;
  sub_10026A600(v41, v37);
  v82[2] = v37;
  v24 = v80;
  v80[0] = v56;
  v80[1] = sub_10003A0C8(&qword_1005A5E50);
  v80[2] = v35;
  v25 = v79;
  v79[0] = v57;
  v79[1] = sub_10026A840();
  v79[2] = v23;
  sub_1002C9238((uint64_t)v26, 3uLL, (uint64_t)v24, v33);
  sub_100269FC0(v37);
  sub_100269C7C(v47);
  sub_100269FC0(v41);
  return sub_100269C7C(v55);
}

uint64_t sub_10025D520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[6];
  _QWORD v87[2];
  _QWORD v88[2];
  _QWORD v89[2];
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int8 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 v111;
  uint64_t v112;
  _QWORD v113[2];
  _QWORD *v114;
  char *v115;
  char *v116;

  v80 = a2;
  v67 = a1;
  v116 = 0;
  v115 = 0;
  v114 = 0;
  v73 = sub_10003A0C8(&qword_1005A5AD8);
  v25 = (*(_QWORD *)(*(_QWORD *)(v73 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v73);
  v75 = (uint64_t)&v25 - v25;
  v77 = sub_10003A0C8(&qword_1005A5B20);
  v26 = (*(_QWORD *)(*(_QWORD *)(v77 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v77);
  v82 = (uint64_t)&v25 - v26;
  v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v25 - v26);
  v84 = (uint64_t)&v25 - v27;
  v116 = (char *)&v25 - v27;
  v44 = type metadata accessor for InstantAnswerFlightContentView(0);
  v39 = *(_QWORD *)(v44 - 8);
  v69 = *(_QWORD *)(v39 + 64);
  v28 = (v69 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v44);
  v72 = (char *)&v25 - v28;
  v35 = sub_10003A0C8(&qword_1005A5B00);
  v29 = (*(_QWORD *)(*(_QWORD *)(v35 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v35);
  v38 = (uint64_t)&v25 - v29;
  v41 = sub_10003A0C8(&qword_1005A5E68);
  v30 = (*(_QWORD *)(*(_QWORD *)(v41 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v41);
  v43 = (uint64_t)&v25 - v30;
  v76 = sub_10003A0C8(&qword_1005A5B10);
  v32 = *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64);
  v31 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v76);
  v83 = (uint64_t)&v25 - v31;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v25 - v31);
  v85 = (uint64_t)&v25 - v33;
  v115 = (char *)&v25 - v33;
  v114 = a1;
  sub_10025DCB8(v4);
  sub_1002618E0(v67, v72);
  v34 = v86;
  v86[2] = v72;
  v36 = sub_10003A0C8(&qword_1005A5B08);
  v37 = sub_100264E58();
  v5 = sub_10026ACF0();
  sub_10025E2B4((uint64_t)sub_1002656FC, (uint64_t)v34, (void (*)(uint64_t))sub_10025E1B4, 0, v35, v36, v37, v5, v43);
  sub_100261BFC((uint64_t)v72);
  sub_100266DAC(v38);
  sub_1002618E0(v67, v72);
  v68 = *(unsigned int *)(v39 + 80);
  v40 = (v68 + 16) & ~(unint64_t)v68;
  v70 = 7;
  v42 = swift_allocObject(&unk_1005283E8, v40 + v69, v68 | 7);
  sub_100265A30(v72, (char *)(v42 + v40));
  v6 = sub_10026AF4C();
  sub_10025E990((uint64_t)sub_10026AF04, v42, v41, v6, v83);
  swift_release();
  sub_10026AFD8(v43);
  v78 = sub_10026B140();
  sub_100253AA8(v83, v76, v85);
  sub_10026B1CC(v83);
  v7 = (_QWORD *)((char *)v67 + *(int *)(v44 + 36));
  v45 = v7[3];
  v46 = v7[4];
  v47 = v7[5];
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v47);
  v48 = v113;
  v113[0] = v46;
  v113[1] = v47;
  v8 = sub_1001F0CD4();
  v109 = Text.init<A>(_:)(v48, &type metadata for String, v8);
  v110 = v9;
  v111 = v10;
  v112 = v11;
  v50 = v109;
  v51 = v9;
  v52 = v10;
  v53 = v11;
  v49 = static Font.footnote.getter();
  v105 = v50;
  v106 = v51;
  v62 = 1;
  v107 = v52 & 1;
  v108 = v53;
  v101 = Text.font(_:)(v49, v50, v51, v52 & 1, v53);
  v102 = v12;
  v103 = v13;
  v104 = v14;
  v57 = v101;
  v55 = v12;
  v56 = v13;
  v58 = v14;
  swift_release();
  sub_10026244C(v50, v51, v52 & 1);
  swift_bridgeObjectRelease(v53);
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v16 = Color.init(uiColor:)(v15);
  v54 = &v100;
  v100 = v16;
  v96 = v57;
  v97 = v55;
  v98 = v56 & 1 & v62;
  v99 = v58;
  v92 = Text.foregroundStyle<A>(_:)();
  v93 = v17;
  v94 = v18;
  v95 = v19;
  v59 = v92;
  v60 = v17;
  v61 = v18;
  v63 = v19;
  sub_1001F0F44(v54);
  sub_10026244C(v57, v55, v56 & 1);
  swift_bridgeObjectRelease(v58);
  v66 = v89;
  v89[0] = v59;
  v89[1] = v60;
  v90 = v61 & 1 & v62;
  v91 = v63;
  v65 = (id)MSAccessibilityIdentifierInstantAnswersFlightDepartureTime;
  v20 = MSAccessibilityIdentifierInstantAnswersFlightDepartureTime;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
  v64 = v22;
  View.accessibilityIdentifier(_:)(v21);
  swift_bridgeObjectRelease(v64);

  sub_1002634A4((uint64_t)v66);
  sub_1002618E0(v67, v72);
  v71 = (v68 + 16) & ~(unint64_t)v68;
  v74 = swift_allocObject(&unk_100528410, v71 + v69, v70 | v68);
  sub_100265A30(v72, (char *)(v74 + v71));
  v23 = sub_1002634E8();
  sub_10025E990((uint64_t)sub_10026B4DC, v74, v73, v23, v82);
  swift_release();
  sub_1002635E0(v75);
  v79 = sub_10026AA8C();
  sub_100253AA8(v82, v77, v84);
  sub_10026AB18(v82);
  sub_10026B524(v85, v83);
  v81 = v88;
  v88[0] = v83;
  sub_10026ABB8(v84, v82);
  v88[1] = v82;
  v87[0] = v76;
  v87[1] = v77;
  v86[4] = v78;
  v86[5] = v79;
  sub_1002C9238((uint64_t)v81, 2uLL, (uint64_t)v87, v80);
  sub_10026AB18(v82);
  sub_10026B1CC(v83);
  sub_10026AB18(v84);
  return sub_10026B1CC(v85);
}

uint64_t sub_10025DCB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  _QWORD v71[2];
  uint64_t v72;

  v43 = a1;
  v72 = 0;
  v44 = sub_10003A0C8(&qword_1005A5AD8);
  v20 = (*(_QWORD *)(*(_QWORD *)(v44 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v44);
  v46 = (uint64_t)&v20 - v20;
  v72 = v1;
  v2 = (_QWORD *)(v1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 36));
  v22 = v2[2];
  v23 = v2[3];
  v21 = v2[5];
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);
  v24 = v71;
  v71[0] = v22;
  v71[1] = v23;
  v3 = sub_1001F0CD4();
  v67 = Text.init<A>(_:)(v24, &type metadata for String, v3);
  v68 = v4;
  v69 = v5;
  v70 = v6;
  v26 = v67;
  v27 = v4;
  v28 = v5;
  v29 = v6;
  v25 = static Font.headline.getter();
  v63 = v26;
  v64 = v27;
  v38 = 1;
  v65 = v28 & 1;
  v66 = v29;
  v59 = Text.font(_:)(v25, v26, v27, v28 & 1, v29);
  v60 = v7;
  v61 = v8;
  v62 = v9;
  v33 = v59;
  v31 = v7;
  v32 = v8;
  v34 = v9;
  swift_release();
  sub_10026244C(v26, v27, v28 & 1);
  swift_bridgeObjectRelease(v29);
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v11 = Color.init(uiColor:)(v10);
  v30 = &v58;
  v58 = v11;
  v54 = v33;
  v55 = v31;
  v56 = v32 & 1 & v38;
  v57 = v34;
  v50 = Text.foregroundStyle<A>(_:)();
  v51 = v12;
  v52 = v13;
  v53 = v14;
  v35 = v50;
  v36 = v12;
  v37 = v13;
  v39 = v14;
  sub_1001F0F44(v30);
  sub_10026244C(v33, v31, v32 & 1);
  swift_bridgeObjectRelease(v34);
  v42 = v47;
  v47[0] = v35;
  v47[1] = v36;
  v48 = v37 & 1 & v38;
  v49 = v39;
  v41 = (id)MSAccessibilityIdentifierInstantAnswersFlightDepartureAirport;
  v15 = MSAccessibilityIdentifierInstantAnswersFlightDepartureAirport;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v40 = v17;
  View.accessibilityIdentifier(_:)(v16);
  swift_bridgeObjectRelease(v40);

  sub_1002634A4((uint64_t)v42);
  v45 = *sub_10026FC68();
  v18 = sub_1002634E8();
  View.alignmentGuide(_:computeValue:)(v45, sub_10025F8F0, 0, v44, v18);
  return sub_1002635E0(v46);
}

uint64_t sub_10025E114()
{
  uint64_t v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;

  v5 = type metadata accessor for ContentSizeCategory(0);
  v4 = *(_QWORD *)(v5 - 8);
  v3 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  v6 = (char *)&v2 - v3;
  v0 = sub_10025B9C0((uint64_t)&v2 - v3);
  v7 = ContentSizeCategory.isAccessibilityCategory.getter(v0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v5);
  return (v7 ^ 1) & 1;
}

uint64_t sub_10025E1B4()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v3 = *sub_10025E228();
  v2 = sub_10003A0C8(&qword_1005A5B00);
  v0 = sub_100264E58();
  return View.alignmentGuide(_:computeValue:)(v3, sub_10025E27C, 0, v2, v0);
}

uint64_t *sub_10025E228()
{
  if (qword_1005A3710 != -1)
    swift_once(&qword_1005A3710, sub_100260F6C);
  return &qword_1005A5A70;
}

uint64_t sub_10025E27C()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.trailing.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_10025E2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;

  v30 = a9;
  v53 = a1;
  v35 = a2;
  v50 = a3;
  v51 = a4;
  v31 = a5;
  v32 = a6;
  v33 = a7;
  v34 = a8;
  v10 = v9;
  v52 = v10;
  v69 = 0;
  v68 = 0;
  v67 = 0;
  v65 = 0;
  v66 = 0;
  v63 = 0;
  v64 = 0;
  v62 = 0;
  v71 = a5;
  v70 = a6;
  v36 = *(_QWORD *)(a5 - 8);
  v37 = (*(_QWORD *)(v36 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v38 = (uint64_t)&v26 - v37;
  v39 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v26 - v37);
  v40 = (uint64_t)&v26 - v39;
  v41 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = __chkstk_darwin((char *)&v26 - v39);
  v42 = (uint64_t)&v26 - v41;
  v69 = (char *)&v26 - v41;
  v43 = *(_QWORD *)(v15 - 8);
  v44 = (*(_QWORD *)(v43 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v14);
  v45 = (uint64_t)&v26 - v44;
  v46 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v26 - v44);
  v47 = (uint64_t)&v26 - v46;
  v48 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v26 - v46);
  v49 = (uint64_t)&v26 - v48;
  v68 = (char *)&v26 - v48;
  v54 = type metadata accessor for _ConditionalContent(0);
  v56 = *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64);
  v55 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0;
  v18 = __chkstk_darwin(v53);
  v57 = (uint64_t)&v26 - v55;
  v58 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0;
  v19 = (uint64_t (*)(void))__chkstk_darwin(v18);
  v59 = (uint64_t)&v26 - v58;
  v67 = (char *)&v26 - v58;
  v65 = v19;
  v66 = a2;
  v63 = v20;
  v64 = v21;
  v62 = v22;
  if ((v19() & 1) != 0)
  {
    v50(v52);
    sub_100253AA8(v47, v32, v49);
    v29 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v29(v47, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v45, v49, v32);
    sub_100253AA8(v45, v32, v47);
    v29(v45, v32);
    sub_1002610B8(v47, v32, v31, v34, v33, v57);
    v29(v47, v32);
    v23 = type metadata accessor for _ConditionalContent.Storage(0);
    sub_10026365C(v57, v59, v32, v31, v23);
    v29(v49, v32);
  }
  else
  {
    sub_100253AA8(v52, v31, v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v38, v42, v31);
    sub_100253AA8(v38, v31, v40);
    v28 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v28(v38, v31);
    sub_10026117C(v40, v32, v31, v34, v33, v57);
    v28(v40, v31);
    v24 = type metadata accessor for _ConditionalContent.Storage(0);
    sub_10026365C(v57, v59, v32, v31, v24);
    v28(v42, v31);
  }
  v27 = type metadata accessor for _ConditionalContent.Storage(0);
  sub_100263704(v59, v57, v32, v31, v27);
  v60 = v34;
  v61 = v33;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v54);
  sub_100253AA8(v57, v54, v30);
  sub_1002637AC(v57, v32, v31, v27);
  return sub_1002637AC(v59, v32, v31, v27);
}

uint64_t sub_10025E8B0(uint64_t a1, double a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[6];

  *(double *)&v12[4] = a2;
  *(double *)&v12[5] = a3;
  v12[3] = a1;
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 20));
  v6 = *v3;
  v7 = v3[1];
  v10 = v3[2];
  swift_retain(v10);
  swift_retain(v10);
  v12[0] = v6;
  v12[1] = v7;
  v12[2] = v10;
  *(double *)v11 = a2;
  *(double *)&v11[1] = a3;
  v4 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.setter(v11, v4);
  sub_10025BCF8((uint64_t)v12);
  return swift_release();
}

uint64_t sub_10025E990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t WitnessTable;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD v42[2];
  _QWORD v43[4];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v34 = a5;
  v22 = a1;
  v23 = a2;
  v37 = a3;
  v33 = a4;
  v47 = 0;
  v45 = 0;
  v46 = 0;
  v44 = 0;
  v48 = a3;
  v6 = sub_1001E7634(&qword_1005A5BE0);
  v38 = type metadata accessor for ModifiedContent(0, v37, v6);
  v20 = *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64);
  v19 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v23);
  v36 = (uint64_t)&v19 - v19;
  v21 = v19;
  v8 = __chkstk_darwin(v7);
  v39 = (uint64_t)&v19 - v21;
  v47 = (char *)&v19 - v21;
  v45 = v9;
  v46 = v8;
  v44 = v5;
  swift_retain(v8);
  v10 = swift_allocObject(&unk_1005282B8, 32, 7);
  v11 = v23;
  v27 = v10;
  *(_QWORD *)(v10 + 16) = v22;
  *(_QWORD *)(v10 + 24) = v11;
  v28 = sub_10003A0C8(&qword_1005A5BE8);
  v24 = sub_1001E7634(&qword_1005A5BF0);
  v25 = type metadata accessor for CGSize(255);
  v26 = sub_100263870();
  v12 = sub_1002638F8();
  v43[0] = v24;
  v43[1] = v25;
  v43[2] = v26;
  v43[3] = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v43, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v14 = GeometryReader.init(content:)(sub_100263864, v27, v28, OpaqueTypeConformance2);
  v32 = v42;
  v42[0] = v14;
  v42[1] = v15;
  v29 = sub_10003A0C8(&qword_1005A5C08);
  v30 = sub_100263968();
  v31 = sub_1002618BC(v37, v29);
  View.background<A>(_:alignment:)(v32, v31, v16, v37, v29, v33, v30);
  sub_10025C01C((uint64_t)v32);
  v17 = sub_1002639D8();
  v40 = v33;
  v41 = v17;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
  sub_100253AA8(v36, v38, v39);
  sub_100263A48(v36, v37, v38);
  sub_100263A98(v39, v36, v37, v38);
  sub_100253AA8(v36, v38, v34);
  sub_100263A48(v36, v37, v38);
  return sub_100263A48(v39, v37, v38);
}

uint64_t sub_10025EC78(uint64_t a1, Swift::Double a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  Swift::Double v8;
  uint64_t v9;
  Swift::Double v10;
  _QWORD v11[5];

  *(Swift::Double *)&v11[3] = a2;
  *(double *)&v11[4] = a3;
  v11[2] = a1;
  v8 = Double.init(_:)(a2);
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 28));
  v7 = *v3;
  v9 = v3[1];
  swift_retain(v9);
  swift_retain(v9);
  v11[0] = v7;
  v11[1] = v9;
  v10 = v8;
  v4 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.setter(&v10, v4);
  sub_10025C01C((uint64_t)v11);
  return swift_release();
}

uint64_t sub_10025ED40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94;
  _QWORD v95[2];
  uint64_t v96;
  _QWORD *v97;
  char *v98;

  v45 = a2;
  v54 = a1;
  v98 = 0;
  v97 = 0;
  v96 = 0;
  v46 = type metadata accessor for InstantAnswerFlightContentView(0);
  v55 = *(_QWORD *)(v46 - 8);
  v56 = *(_QWORD *)(v55 + 64);
  v47 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v46);
  v58 = (char *)&v22 - v47;
  v59 = sub_10003A0C8(&qword_1005A5AD8);
  v48 = (*(_QWORD *)(*(_QWORD *)(v59 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  v49 = (uint64_t)&v22 - v48;
  v50 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v22 - v48);
  v66 = (uint64_t)&v22 - v50;
  v63 = sub_10003A0C8(&qword_1005A5B20);
  v52 = *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64);
  v51 = (v52 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v63);
  v65 = (uint64_t)&v22 - v51;
  v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v22 - v51);
  v62 = (uint64_t)&v22 - v53;
  v98 = (char *)&v22 - v53;
  v97 = a1;
  sub_10025F2F4();
  sub_1002618E0(v54, v58);
  v4 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v4 + 16) & ~v4;
  v61 = swift_allocObject(&unk_1005283C0, v57 + v56, v4 | 7);
  sub_100265A30(v58, (char *)(v61 + v57));
  v60 = sub_1002634E8();
  sub_10025E990((uint64_t)sub_10026AA44, v61, v59, v60, v65);
  swift_release();
  sub_1002635E0(v66);
  v64 = sub_10026AA8C();
  sub_100253AA8(v65, v63, v62);
  sub_10026AB18(v65);
  v96 = v66;
  v5 = (_QWORD *)((char *)v54 + *(int *)(v46 + 36));
  v22 = v5[7];
  v23 = v5[8];
  v24 = v5[9];
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  v25 = v95;
  v95[0] = v23;
  v95[1] = v24;
  v6 = sub_1001F0CD4();
  v91 = Text.init<A>(_:)(v25, &type metadata for String, v6);
  v92 = v7;
  v93 = v8;
  v94 = v9;
  v27 = v91;
  v28 = v7;
  v29 = v8;
  v30 = v9;
  v26 = static Font.footnote.getter();
  v87 = v27;
  v88 = v28;
  v39 = 1;
  v89 = v29 & 1;
  v90 = v30;
  v83 = Text.font(_:)(v26, v27, v28, v29 & 1, v30);
  v84 = v10;
  v85 = v11;
  v86 = v12;
  v34 = v83;
  v32 = v10;
  v33 = v11;
  v35 = v12;
  swift_release();
  sub_10026244C(v27, v28, v29 & 1);
  swift_bridgeObjectRelease(v30);
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v14 = Color.init(uiColor:)(v13);
  v31 = &v82;
  v82 = v14;
  v78 = v34;
  v79 = v32;
  v80 = v33 & 1 & v39;
  v81 = v35;
  v74 = Text.foregroundStyle<A>(_:)();
  v75 = v15;
  v76 = v16;
  v77 = v17;
  v36 = v74;
  v37 = v15;
  v38 = v16;
  v40 = v17;
  sub_1001F0F44(v31);
  sub_10026244C(v34, v32, v33 & 1);
  swift_bridgeObjectRelease(v35);
  v43 = v71;
  v71[0] = v36;
  v71[1] = v37;
  v72 = v38 & 1 & v39;
  v73 = v40;
  v42 = (id)MSAccessibilityIdentifierInstantAnswersFlightArrivalTime;
  v18 = MSAccessibilityIdentifierInstantAnswersFlightArrivalTime;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v41 = v20;
  View.accessibilityIdentifier(_:)(v19);
  swift_bridgeObjectRelease(v41);

  sub_1002634A4((uint64_t)v43);
  sub_100253AA8(v49, v59, v66);
  sub_1002635E0(v49);
  sub_10026ABB8(v62, v65);
  v44 = v70;
  v70[0] = v65;
  sub_10026814C(v66, v49);
  v70[1] = v49;
  v69[0] = v63;
  v69[1] = v59;
  v67 = v64;
  v68 = v60;
  sub_1002C9238((uint64_t)v44, 2uLL, (uint64_t)v69, v45);
  sub_1002635E0(v49);
  sub_10026AB18(v65);
  sub_1002635E0(v66);
  return sub_10026AB18(v62);
}

uint64_t sub_10025F2F4()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _QWORD v56[3];

  v56[2] = 0;
  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 36));
  v18 = v1[6];
  v19 = v1[7];
  v17 = v1[9];
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v17);
  v56[0] = v18;
  v56[1] = v19;
  v2 = sub_1001F0CD4();
  v52 = Text.init<A>(_:)(v56, &type metadata for String, v2);
  v53 = v3;
  v54 = v4;
  v55 = v5;
  v21 = v3;
  v22 = v4;
  v23 = v5;
  v20 = static Font.headline.getter();
  v48 = v52;
  v49 = v21;
  v50 = v22 & 1;
  v51 = v23;
  v44 = Text.font(_:)(v20, v52, v21, v22 & 1, v23);
  v45 = v6;
  v46 = v7;
  v47 = v8;
  v24 = v6;
  v25 = v7;
  v26 = v8;
  swift_release();
  sub_10026244C(v52, v21, v22 & 1);
  swift_bridgeObjectRelease(v23);
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v43 = Color.init(uiColor:)(v9);
  v39 = v44;
  v40 = v24;
  v41 = v25 & 1;
  v42 = v26;
  v35 = Text.foregroundStyle<A>(_:)();
  v36 = v10;
  v37 = v11;
  v38 = v12;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  sub_1001F0F44(&v43);
  sub_10026244C(v39, v24, v25 & 1);
  swift_bridgeObjectRelease(v26);
  v32[0] = v35;
  v32[1] = v27;
  v33 = v28 & 1;
  v34 = v29;
  v31 = (id)MSAccessibilityIdentifierInstantAnswersFlightArrivalAirport;
  v13 = MSAccessibilityIdentifierInstantAnswersFlightArrivalAirport;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v30 = v15;
  View.accessibilityIdentifier(_:)(v14);
  swift_bridgeObjectRelease(v30);

  return sub_1002634A4((uint64_t)v32);
}

uint64_t sub_10025F5D0(uint64_t a1, double a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[6];

  *(double *)&v12[4] = a2;
  *(double *)&v12[5] = a3;
  v12[3] = a1;
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 24));
  v6 = *v3;
  v7 = v3[1];
  v10 = v3[2];
  swift_retain(v10);
  swift_retain(v10);
  v12[0] = v6;
  v12[1] = v7;
  v12[2] = v10;
  *(double *)v11 = a2;
  *(double *)&v11[1] = a3;
  v4 = sub_10003A0C8(&qword_1005A5AA0);
  State.wrappedValue.setter(v11, v4);
  sub_10025BCF8((uint64_t)v12);
  return swift_release();
}

uint64_t *sub_10025F6B0()
{
  if (qword_1005A3720 != -1)
    swift_once(&qword_1005A3720, sub_10026106C);
  return &qword_1005A5A80;
}

uint64_t sub_10025F704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v9 = a2;
  v15 = 0;
  v14 = 0;
  v10 = sub_10003A0C8(&qword_1005A5D08);
  v7 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  v6 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v10);
  v12 = (uint64_t)&v6 - v6;
  v8 = v6;
  __chkstk_darwin(v3);
  v13 = (uint64_t)&v6 - v8;
  v15 = (char *)&v6 - v8;
  v14 = a1;
  sub_10025F818(v4);
  v11 = sub_100264F74();
  sub_100253AA8(v12, v10, v13);
  sub_1002690D8(v12);
  sub_100269404(v13, v12);
  sub_100253AA8(v12, v10, v9);
  sub_1002690D8(v12);
  return sub_1002690D8(v13);
}

uint64_t sub_10025F818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;

  v5[2] = a1;
  v13 = 0;
  v6 = 0;
  v2 = type metadata accessor for InstantAnswerFlightContentView(0);
  v5[0] = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v10 = (_QWORD *)((char *)v5 - v5[0]);
  v13 = v1;
  v9 = static VerticalAlignment.firstTextBaseline.getter();
  sub_1002618E0((_QWORD *)v5[1], v10);
  v7 = &v11;
  v12 = v10;
  v8 = sub_10003A0C8(&qword_1005A5C20);
  v3 = sub_100263B38();
  HStack.init(alignment:spacing:content:)(v9, v6, 1, sub_100263B30, v7, v8, v3);
  return sub_100261BFC((uint64_t)v10);
}

uint64_t sub_10025F8F0()
{
  uint64_t v0;

  v0 = static VerticalAlignment.center.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t *sub_10025F928@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v46[2];
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  void *v62;
  unint64_t v63;
  _QWORD *v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  _QWORD *v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  unint64_t v107;
  void *v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  unint64_t v131;
  char *v132;
  unint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  _QWORD *v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char *v175;
  unint64_t v176;
  uint64_t v177;
  _OWORD *v178;
  unint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(uint64_t, uint64_t);
  int v185;
  unint64_t v186;
  void *v187;
  _QWORD v188[2];
  uint64_t v189;
  char v190;
  _QWORD v191[2];
  uint64_t v192;
  char v193;
  uint64_t v194;
  char v195;
  _QWORD v196[5];
  _QWORD v197[7];
  _QWORD v198[2];
  uint64_t v199;
  char v200;
  _QWORD v201[2];
  _QWORD v202[5];
  _QWORD v203[5];
  uint64_t v204;
  char v205;
  uint64_t v206;
  char v207;
  _QWORD v208[3];
  _QWORD v209[3];
  _QWORD v210[3];
  _QWORD v211[4];
  uint64_t v212;
  _QWORD v213[3];
  uint64_t v214;
  _QWORD v215[3];
  _QWORD v216[4];
  _QWORD *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;

  v112 = a2;
  v113 = a1;
  v222 = 0;
  v221 = 0;
  v220 = 0;
  v219 = 0;
  v218 = 0;
  v217 = 0;
  v206 = 0;
  v207 = 0;
  v194 = 0;
  v195 = 0;
  v114 = sub_10003A0C8(&qword_1005A5AD8);
  v115 = (*(_QWORD *)(*(_QWORD *)(v114 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v114);
  v116 = (uint64_t)v46 - v115;
  v117 = sub_10003A0C8(&qword_1005A5BB0);
  v118 = (*(_QWORD *)(*(_QWORD *)(v117 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v117);
  v119 = (uint64_t)v46 - v118;
  v120 = sub_10003A0C8(&qword_1005A5BB8);
  v121 = (*(_QWORD *)(*(_QWORD *)(v120 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v120);
  v122 = (uint64_t)v46 - v121;
  v123 = sub_10003A0C8(&qword_1005A5D10);
  v124 = (*(_QWORD *)(*(_QWORD *)(v123 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v123);
  v125 = (uint64_t)v46 - v124;
  v126 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v124);
  v127 = (uint64_t)v46 - v126;
  v222 = (char *)v46 - v126;
  v128 = sub_10003A0C8(&qword_1005A5BC0);
  v129 = (*(_QWORD *)(*(_QWORD *)(v128 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v128);
  v130 = (char *)v46 - v129;
  v131 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v129);
  v132 = (char *)v46 - v131;
  v133 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v131);
  v134 = (char *)v46 - v133;
  v221 = (char *)v46 - v133;
  v166 = 0;
  v135 = type metadata accessor for InstantAnswerFlightContentView(0);
  v136 = *(_QWORD *)(v135 - 8);
  v137 = *(_QWORD *)(v136 + 64);
  v138 = (v137 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v135);
  v139 = (char *)v46 - v138;
  v140 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v138);
  v141 = (uint64_t)v46 - v140;
  v142 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v140);
  v143 = (uint64_t *)((char *)v46 - v142);
  v144 = sub_10003A0C8(&qword_1005A5B68);
  v145 = (*(_QWORD *)(*(_QWORD *)(v144 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v144);
  v146 = (uint64_t)v46 - v145;
  v147 = sub_10003A0C8(&qword_1005A5D18);
  v148 = (*(_QWORD *)(*(_QWORD *)(v147 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v147);
  v149 = (uint64_t)v46 - v148;
  v150 = sub_10003A0C8(&qword_1005A5B78);
  v151 = (*(_QWORD *)(*(_QWORD *)(v150 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v150);
  v152 = (uint64_t *)((char *)v46 - v151);
  v153 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v151);
  v154 = (uint64_t)v46 - v153;
  v155 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v153);
  v156 = (uint64_t *)((char *)v46 - v155);
  v220 = (char *)v46 - v155;
  v157 = sub_10003A0C8(&qword_1005A5B00);
  v158 = (*(_QWORD *)(*(_QWORD *)(v157 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v157);
  v159 = (uint64_t)v46 - v158;
  v160 = sub_10003A0C8(&qword_1005A5B90);
  v161 = (*(_QWORD *)(*(_QWORD *)(v160 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v160);
  v162 = (uint64_t)v46 - v161;
  v163 = sub_10003A0C8(&qword_1005A5B98);
  v164 = (*(_QWORD *)(*(_QWORD *)(v163 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v163);
  v165 = (uint64_t)v46 - v164;
  v167 = sub_10003A0C8(&qword_1005A5D20);
  v168 = (*(_QWORD *)(*(_QWORD *)(v167 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = __chkstk_darwin(v166);
  v169 = (uint64_t)v46 - v168;
  v170 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = __chkstk_darwin(v10);
  v171 = (uint64_t)v46 - v170;
  v219 = (char *)v46 - v170;
  v182 = type metadata accessor for ContentSizeCategory(v12);
  v181 = *(_QWORD *)(v182 - 8);
  v172 = (*(_QWORD *)(v181 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v182);
  v183 = (uint64_t)v46 - v172;
  v173 = sub_10003A0C8(&qword_1005A5BA8);
  v177 = *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64);
  v174 = (v177 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v173);
  v175 = (char *)v46 - v174;
  v176 = (v177 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v174);
  v178 = (_OWORD *)((char *)v46 - v176);
  v179 = (v177 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)v46 - v176);
  v180 = (uint64_t *)((char *)v46 - v179);
  v218 = (char *)v46 - v179;
  v217 = a1;
  v14 = sub_10025B9C0(v13);
  v185 = ContentSizeCategory.isAccessibilityCategory.getter(v14);
  v184 = *(void (**)(uint64_t, uint64_t))(v181 + 8);
  v184(v183, v182);
  if ((v185 & 1) != 0)
  {
    sub_10025DCB8(v159);
    v15 = (_QWORD *)((char *)v113 + *(int *)(v135 + 20));
    v94 = *v15;
    v95 = v15[1];
    v97 = v15[2];
    swift_retain(v97);
    swift_retain(v97);
    v96 = v197;
    v197[0] = v94;
    v197[1] = v95;
    v197[2] = v97;
    v98 = sub_10003A0C8(&qword_1005A5AA0);
    State.wrappedValue.getter(v98);
    sub_10025BCF8((uint64_t)v96);
    v103 = v197[3];
    swift_release();
    v16 = (_QWORD *)((char *)v113 + *(int *)(v135 + 20));
    v99 = *v16;
    v100 = v16[1];
    v102 = v16[2];
    swift_retain(v102);
    swift_retain(v102);
    v101 = v196;
    v196[0] = v99;
    v196[1] = v100;
    v196[2] = v102;
    State.wrappedValue.getter(v98);
    sub_10025BCF8((uint64_t)v101);
    v104 = v196[4];
    swift_release();
    v105 = sub_100264E58();
    v17 = sub_100260AF8();
    v109 = 0;
    View.frame(width:height:alignment:)(v103, 0, v104, 0, v17, v18, v157, v105);
    sub_100266DAC(v159);
    v19 = sub_100266E4C();
    View.fixedSize()(v160, v19);
    sub_100266DAC(v162);
    v20 = sub_100266ED4();
    View.hidden()(v163, v20);
    sub_100266DAC(v165);
    v107 = sub_100266F5C();
    sub_100253AA8(v169, v167, v171);
    sub_100266DAC(v169);
    v110 = 1;
    v192 = Spacer.init(minLength:)(0);
    v193 = v21 & 1 & v110;
    v106 = &type metadata for Spacer;
    v108 = &protocol witness table for Spacer;
    sub_100253AA8((uint64_t)&v192, (uint64_t)&type metadata for Spacer, (uint64_t)&v194);
    sub_100266FE8(v171, v169);
    v191[0] = v169;
    v189 = v194;
    v190 = v195;
    v191[1] = &v189;
    v188[0] = v167;
    v188[1] = v106;
    v186 = v107;
    v187 = v108;
    sub_1002C9238((uint64_t)v191, 2uLL, (uint64_t)v188, (uint64_t)v175);
    sub_100266DAC(v169);
    v111 = sub_10003A0C8(&qword_1005A5B50);
    (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v111 - 8) + 56))(v175, v109, v110);
    sub_100265160();
    sub_1002C9470(v175, v111, v178);
    sub_1002651D0((uint64_t)v175);
    sub_1002652A4(v178, v180);
    sub_100266DAC(v171);
  }
  else
  {
    v93 = sub_10003A0C8(&qword_1005A5B50);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v175, 1);
    sub_100265160();
    sub_1002C9470(v175, v93, v178);
    sub_1002651D0((uint64_t)v175);
    sub_1002652A4(v178, v180);
  }
  v68 = (id)MFImageGlyphInstantAnswersArrowForward;
  v22 = MFImageGlyphInstantAnswersArrowForward;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
  v69 = Image.init(systemName:)(v23);

  v71 = &v214;
  v214 = v69;
  v70 = static Font.headline.getter();
  View.font(_:)(v215, v70, &type metadata for Image, &protocol witness table for Image);
  swift_release();
  sub_1001F0F44(v71);
  v74 = v213;
  v213[0] = v215[0];
  v213[1] = v215[1];
  v213[2] = v215[2];
  v24 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v25 = Color.init(uiColor:)(v24);
  v73 = &v212;
  v212 = v25;
  v72 = sub_10003A0C8(&qword_1005A5D30);
  v26 = sub_10026547C();
  View.foregroundStyle<A>(_:)(v216, v73, v72, &type metadata for Color, v26, &protocol witness table for Color);
  sub_1001F0F44(v73);
  sub_100265574(v74);
  v79 = v211;
  v211[0] = v216[0];
  v211[1] = v216[1];
  v211[2] = v216[2];
  v211[3] = v216[3];
  v78 = (id)MSAccessibilityIdentifierInstantAnswersFlightArrowImage;
  v27 = MSAccessibilityIdentifierInstantAnswersFlightArrowImage;
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
  v77 = v28;
  v75 = sub_10003A0C8(&qword_1005A5D50);
  sub_1002655B4();
  View.accessibilityIdentifier(_:)(v76);
  swift_bridgeObjectRelease(v77);

  sub_1002656B0(v79);
  sub_1002618E0(v113, v143);
  v80 = v46;
  v82 = 15;
  v81 = 32;
  v29 = (_QWORD *)__chkstk_darwin(v113);
  v84 = &v46[v81 / 0xFFFFFFFFFFFFFFF8];
  v84[2] = v30;
  sub_1002618E0(v29, v31);
  v88 = v46;
  v83 = (v82 + 24) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v46);
  v85 = (uint64_t)v46 - v83;
  *(_QWORD *)(v85 + 16) = v32;
  v86 = sub_10003A0C8(&qword_1005A5B70);
  v87 = sub_10026570C();
  v33 = sub_100265798();
  sub_10025E2B4((uint64_t)sub_1002656FC, (uint64_t)v84, (void (*)(uint64_t))sub_100265704, v85, v144, v86, v87, v33, v149);
  sub_100261BFC(v141);
  sub_100261BFC((uint64_t)v143);
  sub_100265824(v146);
  sub_1002618E0(v113, v139);
  v34 = *(unsigned __int8 *)(v136 + 80);
  v89 = (v34 + 16) & ~v34;
  v90 = swift_allocObject(&unk_100528320, v89 + v137, v34 | 7);
  sub_100265A30(v139, (char *)(v90 + v89));
  v35 = sub_100265BD4();
  sub_10025E990((uint64_t)sub_100265B8C, v90, v147, v35, v154);
  swift_release();
  sub_100265C60(v149);
  v91 = sub_100265DA0();
  sub_100253AA8(v154, v150, (uint64_t)v156);
  sub_100265E2C(v154);
  v36 = sub_10025B9C0(v183);
  v92 = ContentSizeCategory.isAccessibilityCategory.getter(v36);
  v184(v183, v182);
  if ((v92 & 1) != 0)
  {
    v66 = 1;
    v204 = Spacer.init(minLength:)(0);
    v205 = v37 & 1 & v66;
    v61 = &type metadata for Spacer;
    v62 = &protocol witness table for Spacer;
    sub_100253AA8((uint64_t)&v204, (uint64_t)&type metadata for Spacer, (uint64_t)&v206);
    sub_10025F2F4();
    v38 = (_QWORD *)((char *)v113 + *(int *)(v135 + 24));
    v49 = *v38;
    v50 = v38[1];
    v52 = v38[2];
    swift_retain(v52);
    swift_retain(v52);
    v51 = v203;
    v203[0] = v49;
    v203[1] = v50;
    v203[2] = v52;
    v53 = sub_10003A0C8(&qword_1005A5AA0);
    State.wrappedValue.getter(v53);
    sub_10025BCF8((uint64_t)v51);
    v58 = v203[3];
    swift_release();
    v39 = (_QWORD *)((char *)v113 + *(int *)(v135 + 24));
    v54 = *v39;
    v55 = v39[1];
    v57 = v39[2];
    swift_retain(v57);
    swift_retain(v57);
    v56 = v202;
    v202[0] = v54;
    v202[1] = v55;
    v202[2] = v57;
    State.wrappedValue.getter(v53);
    sub_10025BCF8((uint64_t)v56);
    v59 = v202[4];
    swift_release();
    v60 = sub_1002634E8();
    v40 = sub_100260AF8();
    v65 = 0;
    View.frame(width:height:alignment:)(v58, 0, v59, 0, v40, v41, v114, v60);
    sub_1002635E0(v116);
    v42 = sub_100266A70();
    View.fixedSize()(v117, v42);
    sub_1002635E0(v119);
    v43 = sub_100266AF8();
    View.hidden()(v120, v43);
    sub_1002635E0(v122);
    v63 = sub_100266B80();
    sub_100253AA8(v125, v123, v127);
    sub_1002635E0(v125);
    v199 = v206;
    v200 = v207;
    v64 = v201;
    v201[0] = &v199;
    sub_100266C74(v127, v125);
    v201[1] = v125;
    v198[0] = v61;
    v198[1] = v123;
    v197[5] = v62;
    v197[6] = v63;
    sub_1002C9238((uint64_t)v64, 2uLL, (uint64_t)v198, (uint64_t)v130);
    sub_1002635E0(v125);
    v67 = sub_10003A0C8(&qword_1005A5B80);
    (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v67 - 8) + 56))(v130, v65, v66);
    sub_100265F8C();
    sub_1002C9470(v130, v67, v132);
    sub_100265FFC((uint64_t)v130);
    sub_1002660C8(v132, v134);
    sub_1002635E0(v127);
  }
  else
  {
    v48 = sub_10003A0C8(&qword_1005A5B80);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v130, 1);
    sub_100265F8C();
    sub_1002C9470(v130, v48, v132);
    sub_100265FFC((uint64_t)v130);
    sub_1002660C8(v132, v134);
  }
  sub_100266274(v180, v178);
  v47 = v210;
  v210[0] = v178;
  sub_1002664C8(v156, v152);
  v210[1] = v152;
  sub_100266770(v134, v132);
  v210[2] = v132;
  v46[0] = (uint64_t)v209;
  v209[0] = v173;
  v209[1] = v150;
  v209[2] = v128;
  v44 = sub_100266978();
  v46[1] = (uint64_t)v208;
  v208[0] = v44;
  v208[1] = v91;
  v208[2] = sub_1002669F4();
  sub_1002C9238((uint64_t)v47, 3uLL, v46[0], v112);
  sub_100265FFC((uint64_t)v132);
  sub_100265E2C((uint64_t)v152);
  sub_1002651D0((uint64_t)v178);
  sub_100265FFC((uint64_t)v134);
  sub_100265E2C((uint64_t)v156);
  sub_1002651D0((uint64_t)v180);
  return v80;
}

uint64_t sub_100260AF8()
{
  return static Alignment.center.getter();
}

uint64_t sub_100260B18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = a3;
  v10 = a2;
  v20 = 0;
  v19 = 0;
  v4 = type metadata accessor for InstantAnswerFlightContentView(0);
  v11 = *(_QWORD *)(v4 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v9 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  v14 = (char *)&v9 - v9;
  v20 = a1;
  v19 = v5;
  v17 = *sub_10025E228();
  sub_1002618E0(v10, v14);
  v6 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v6 + 16) & ~v6;
  v18 = swift_allocObject(&unk_100528348, v13 + v12, v6 | 7);
  sub_100265A30(v14, (char *)(v18 + v13));
  v16 = sub_10003A0C8(&qword_1005A5B68);
  v7 = sub_10026570C();
  View.alignmentGuide(_:computeValue:)(v17, sub_100267304, v18, v16, v7);
  return swift_release();
}

double sub_100260C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v6;

  v2 = static HorizontalAlignment.leading.getter(a1);
  v6 = ViewDimensions.subscript.getter(v2);
  v3 = type metadata accessor for InstantAnswerFlightContentView(0);
  return v6 - Double.init(_:)(*(Swift::Double *)(a2 + *(int *)(v3 + 40)));
}

uint64_t sub_100260CB8(uint64_t a1, Swift::Double a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  Swift::Double v8;
  uint64_t v9;
  Swift::Double v10;
  _QWORD v11[5];

  *(Swift::Double *)&v11[3] = a2;
  *(double *)&v11[4] = a3;
  v11[2] = a1;
  v8 = Double.init(_:)(a2);
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for InstantAnswerFlightContentView(0) + 32));
  v7 = *v3;
  v9 = v3[1];
  swift_retain(v9);
  swift_retain(v9);
  v11[0] = v7;
  v11[1] = v9;
  v10 = v8;
  v4 = sub_10003A0C8(&qword_1005A5AA8);
  State.wrappedValue.setter(&v10, v4);
  sub_10025C01C((uint64_t)v11);
  return swift_release();
}

uint64_t sub_100260D80()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_1004CDC60);
  return Environment.init(_:)(KeyPath);
}

double sub_100260DB0@<D0>(const void *a1@<X0>, const void *a2@<X1>, char *a3@<X8>)
{
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v25;

  sub_1002650C0(a1, a3);
  v25 = (int *)type metadata accessor for InstantAnswerFlightContentView(0);
  v20 = v25[5];
  v3 = sub_100234CE0(0);
  v4 = property wrapper backing initializer of InstantAnswerFlightContentView.departureAirportSize(v3, v3);
  v5 = &a3[v20];
  *(_QWORD *)v5 = v6;
  *((_QWORD *)v5 + 1) = v7;
  *((_QWORD *)v5 + 2) = v4;
  v21 = v25[6];
  v8 = sub_100234CE0(0);
  v9 = property wrapper backing initializer of InstantAnswerFlightContentView.departureAirportSize(v8, v8);
  v10 = &a3[v21];
  *(_QWORD *)v10 = v11;
  *((_QWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 2) = v9;
  v22 = v25[7];
  v13 = property wrapper backing initializer of InstantAnswerFlightContentView.departureTimeWidth(0.0);
  v14 = &a3[v22];
  *(_QWORD *)v14 = v15;
  *((_QWORD *)v14 + 1) = v13;
  v23 = v25[8];
  v16 = property wrapper backing initializer of InstantAnswerFlightContentView.departureTimeWidth(0.0);
  v17 = &a3[v23];
  *(_QWORD *)v17 = v18;
  *((_QWORD *)v17 + 1) = v16;
  memcpy(&a3[v25[9]], a2, 0x50uLL);
  result = 8.0;
  *(double *)&a3[v25[10]] = 8.0;
  return result;
}

uint64_t sub_100260EF8@<X0>(uint64_t a1@<X8>)
{
  return InstantAnswerFlightContentView.body.getter(a1);
}

uint64_t sub_100260F0C()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.center.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_100260F44()
{
  return sub_100260F0C();
}

uint64_t sub_100260F58()
{
  return static AlignmentID._combineExplicit(childValue:_:into:)();
}

uint64_t sub_100260F6C()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_100263BD0();
  result = HorizontalAlignment.init(_:)(&unk_1005282E0, v0);
  qword_1005A5A70 = result;
  return result;
}

uint64_t sub_100260F9C()
{
  uint64_t v0;

  v0 = static VerticalAlignment.firstTextBaseline.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_100260FD4()
{
  return sub_100260F9C();
}

uint64_t sub_100260FE8()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_100263C3C();
  result = VerticalAlignment.init(_:)(&unk_100528300, v0);
  qword_1005A5A78 = result;
  return result;
}

uint64_t *sub_100261018()
{
  if (qword_1005A3718 != -1)
    swift_once(&qword_1005A3718, sub_100260FE8);
  return &qword_1005A5A78;
}

uint64_t sub_10026106C()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = *sub_10025E228();
  v0 = sub_100261018();
  result = Alignment.init(horizontal:vertical:)(v3, *v0);
  qword_1005A5A80 = result;
  qword_1005A5A88 = v2;
  return result;
}

uint64_t sub_1002610B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  _QWORD v8[2];
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = a6;
  v8[1] = a1;
  v13 = a2;
  v14 = a3;
  v15 = a4;
  v16 = a5;
  v18 = a2;
  v17 = a3;
  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  v9 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v12 = (char *)v8 - v9;
  (*(void (**)(void))(*(_QWORD *)(v6 - 8) + 16))();
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, v13, v14, v15, v16);
}

uint64_t sub_10026117C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  _QWORD v8[2];
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = a6;
  v8[1] = a1;
  v13 = a2;
  v14 = a3;
  v15 = a4;
  v16 = a5;
  v18 = a2;
  v17 = a3;
  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  v9 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v12 = (char *)v8 - v9;
  (*(void (**)(void))(*(_QWORD *)(v6 - 8) + 16))();
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, v13, v14, v15, v16);
}

uint64_t sub_100261240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(unint64_t, char *, uint64_t);
  char v25;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(unint64_t, char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t OpaqueTypeConformance2;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  _QWORD v62[4];
  _QWORD v63[2];
  _QWORD v64[5];
  uint64_t v65;
  _QWORD v66[5];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v56 = a4;
  v36 = a1;
  v41 = a2;
  v42 = a3;
  v33 = sub_1002673D4;
  v70 = 0;
  v69 = 0;
  v67 = 0;
  v68 = 0;
  v47 = 0;
  v45 = type metadata accessor for GeometryProxy(0);
  v30 = *(_QWORD *)(v45 - 8);
  v39 = *(_QWORD *)(v30 + 64);
  v27 = (v39 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v45);
  v44 = (char *)&v27 - v27;
  v60 = sub_10003A0C8(&qword_1005A5BE8);
  v55 = *(_QWORD *)(v60 - 8);
  v28 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v36);
  v58 = (uint64_t)&v27 - v28;
  v29 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v4);
  v59 = (uint64_t)&v27 - v29;
  v70 = (char *)&v27 - v29;
  v69 = v6;
  v67 = v7;
  v68 = v8;
  v9 = static Color.clear.getter();
  v35 = &v65;
  v65 = v9;
  swift_retain(v42);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v37(v44, v36, v45);
  v38 = *(unsigned int *)(v30 + 80);
  v31 = (v38 + 32) & ~(unint64_t)v38;
  v40 = 7;
  v10 = swift_allocObject(&unk_100528370, v31 + v39, v38 | 7);
  v11 = v30;
  v12 = v31;
  v13 = v42;
  v14 = v44;
  v15 = v45;
  v32 = v10;
  *(_QWORD *)(v10 + 16) = v41;
  *(_QWORD *)(v10 + 24) = v13;
  v46 = *(void (**)(unint64_t, char *, uint64_t))(v11 + 32);
  v46(v10 + v12, v14, v15);
  v34 = v32;
  View.onAppear(perform:)(v66, v33);
  sub_10026740C((uint64_t)v33, v34);
  v16 = v35;
  sub_1001F0F44(v35);
  v50 = v64;
  v64[0] = v66[0];
  v64[1] = v66[1];
  v64[2] = v66[2];
  v64[3] = v66[3];
  v64[4] = v66[4];
  v17 = GeometryProxy.size.getter(v16);
  v48 = v63;
  *(double *)v63 = v17;
  v63[1] = v18;
  swift_retain(v42);
  v37(v44, v36, v45);
  v43 = (v38 + 32) & ~(unint64_t)v38;
  v19 = swift_allocObject(&unk_100528398, v43 + v39, v40 | v38);
  v20 = v42;
  v21 = v43;
  v22 = v44;
  v23 = v45;
  v24 = v46;
  v49 = v19;
  *(_QWORD *)(v19 + 16) = v41;
  *(_QWORD *)(v19 + 24) = v20;
  v24(v19 + v21, v22, v23);
  v51 = sub_10003A0C8(&qword_1005A5BF0);
  v52 = type metadata accessor for CGSize(v47);
  v53 = sub_100263870();
  v54 = sub_1002638F8();
  v25 = sub_1002618A0();
  View.onChange<A>(of:initial:_:)(v48, v25 & 1, sub_1002674D0, v49, v51, v52, v53, v54);
  swift_release();
  sub_100267524(v50);
  v62[0] = v51;
  v62[1] = v52;
  v62[2] = v53;
  v62[3] = v54;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v62, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  sub_100253AA8(v58, v60, v59);
  v61 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v61(v58, v60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v58, v59, v60);
  sub_100253AA8(v58, v60, v56);
  v61(v58, v60);
  return ((uint64_t (*)(uint64_t, uint64_t))v61)(v59, v60);
}

uint64_t sub_100261790(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  v2 = swift_retain(a2);
  GeometryProxy.size.getter(v2);
  a1();
  return swift_release(a2);
}

uint64_t sub_100261800(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_retain(a4);
  v5 = GeometryProxy.size.getter(v4);
  a3(v5);
  return swift_release(a4);
}

uint64_t sub_1002618A0()
{
  return 0;
}

uint64_t sub_1002618BC(uint64_t a1, uint64_t a2)
{
  return static Alignment.center.getter(a1, a2);
}

_QWORD *sub_1002618E0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *result;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v27;

  v27 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v27) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v27, 1);
  }
  else
  {
    v24 = *a1;
    swift_retain(*a1);
    *a2 = v24;
    swift_storeEnumTagMultiPayload(a2, v27, 0);
  }
  v23 = (int *)type metadata accessor for InstantAnswerFlightContentView(0);
  v8 = (char *)a2 + v23[5];
  v3 = (char *)a1 + v23[5];
  *(_OWORD *)v8 = *(_OWORD *)v3;
  v9 = *((_QWORD *)v3 + 2);
  swift_retain(v9);
  *((_QWORD *)v8 + 2) = v9;
  v10 = (char *)a2 + v23[6];
  v4 = (char *)a1 + v23[6];
  *(_OWORD *)v10 = *(_OWORD *)v4;
  v11 = *((_QWORD *)v4 + 2);
  swift_retain(v11);
  *((_QWORD *)v10 + 2) = v11;
  v12 = (_QWORD *)((char *)a2 + v23[7]);
  v5 = (_QWORD *)((char *)a1 + v23[7]);
  *v12 = *v5;
  v13 = v5[1];
  swift_retain(v13);
  v12[1] = v13;
  v14 = (_QWORD *)((char *)a2 + v23[8]);
  v6 = (_QWORD *)((char *)a1 + v23[8]);
  *v14 = *v6;
  v15 = v6[1];
  swift_retain(v15);
  v14[1] = v15;
  v21 = (_QWORD *)((char *)a2 + v23[9]);
  v20 = (_QWORD *)((char *)a1 + v23[9]);
  *v21 = *v20;
  v16 = v20[1];
  swift_bridgeObjectRetain(v16);
  v21[1] = v16;
  v21[2] = v20[2];
  v17 = v20[3];
  swift_bridgeObjectRetain(v17);
  v21[3] = v17;
  v21[4] = v20[4];
  v18 = v20[5];
  swift_bridgeObjectRetain(v18);
  v21[5] = v18;
  v21[6] = v20[6];
  v19 = v20[7];
  swift_bridgeObjectRetain(v19);
  v21[7] = v19;
  v21[8] = v20[8];
  v22 = v20[9];
  swift_bridgeObjectRetain(v22);
  result = a2;
  v21[9] = v22;
  *(_QWORD *)((char *)a2 + v23[10]) = *(_QWORD *)((char *)a1 + v23[10]);
  return result;
}

uint64_t sub_100261B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025C810(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_100261B8C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5AC0;
  if (!qword_1005A5AC0)
  {
    v0 = sub_1001E7634(&qword_1005A5AB8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5AC0);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100261BFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v1 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  v4 = type metadata accessor for InstantAnswerFlightContentView(0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(a1 + *(int *)(v4 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  return a1;
}

unint64_t sub_100261D28()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5AC8;
  if (!qword_1005A5AC8)
  {
    v0 = sub_1001E7634(&qword_1005A5AB0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5AC8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100261D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v22 = *(int *)(sub_10003A0C8(&qword_1005A5AD0) + 44);
  sub_10026244C(*(_QWORD *)(a1 + v22), *(_QWORD *)(a1 + v22 + 8), *(_BYTE *)(a1 + v22 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v22 + 24));
  v23 = sub_10003A0C8(&qword_1005A5AD8);
  v24 = *(int *)(v23 + 36);
  v25 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v26 = *(void (**)(uint64_t))(*(_QWORD *)(v25 - 8) + 8);
  v26(a1 + v22 + v24);
  v27 = *(int *)(sub_10003A0C8(&qword_1005A5AE0) + 48);
  v28 = *(int *)(sub_10003A0C8(&qword_1005A5AE8) + 44);
  v29 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v1 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1 + v22 + v27 + v28 + v29, v1) == 1)
  {
    v19 = a1 + v22 + v27 + v28 + v29;
    sub_10026244C(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_BYTE *)(v19 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 24));
    ((void (*)(uint64_t, uint64_t))v26)(v19 + *(int *)(v23 + 36), v25);
    sub_10003A0C8(&qword_1005A5B00);
  }
  else
  {
    v20 = a1 + v22 + v27 + v28 + v29;
    sub_10026244C(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_BYTE *)(v20 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v20 + 24));
    ((void (*)(uint64_t, uint64_t))v26)(v20 + *(int *)(v23 + 36), v25);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
    sub_10003A0C8(&qword_1005A5B08);
  }
  swift_release();
  sub_10003A0C8(&qword_1005A5B10);
  v16 = a1 + v22 + v27;
  swift_release();
  v12 = v16 + v28 + v29 + *(int *)(sub_10003A0C8(&qword_1005A5B18) + 48);
  sub_10026244C(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_BYTE *)(v12 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
  ((void (*)(uint64_t, uint64_t))v26)(v12 + *(int *)(v23 + 36), v25);
  sub_10003A0C8(&qword_1005A5B20);
  swift_release();
  v13 = v16 + v28 + *(int *)(sub_10003A0C8(&qword_1005A5B28) + 64);
  v14 = v13 + *(int *)(sub_10003A0C8(&qword_1005A5B30) + 44);
  sub_10026244C(*(_QWORD *)v14, *(_QWORD *)(v14 + 8), *(_BYTE *)(v14 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v14 + 24));
  ((void (*)(uint64_t, uint64_t))v26)(v14 + *(int *)(v23 + 36), v25);
  swift_release();
  v15 = v14 + *(int *)(sub_10003A0C8(&qword_1005A5B38) + 48);
  sub_10026244C(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_BYTE *)(v15 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
  ((void (*)(uint64_t, uint64_t))v26)(v15 + *(int *)(v23 + 36), v25);
  v17 = v16 + *(int *)(sub_10003A0C8(&qword_1005A5B40) + 36);
  v18 = v17 + *(int *)(sub_10003A0C8(&qword_1005A5B48) + 44);
  v2 = sub_10003A0C8(&qword_1005A5B50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v18, 1))
  {
    sub_10026244C(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_BYTE *)(v18 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v18 + 24));
    ((void (*)(uint64_t, uint64_t))v26)(v18 + *(int *)(v23 + 36), v25);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
  }
  v10 = sub_10003A0C8(&qword_1005A5B58);
  v11 = v18 + *(int *)(v10 + 48);
  v3 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(v11, v3) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v5 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(uint64_t, uint64_t))v26)(v11 + *(int *)(v5 + 36), v25);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v4 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(uint64_t, uint64_t))v26)(v11 + *(int *)(v4 + 36), v25);
    sub_10003A0C8(&qword_1005A5B70);
    swift_release();
  }
  sub_10003A0C8(&qword_1005A5B78);
  swift_release();
  v9 = v18 + *(int *)(v10 + 64);
  v6 = sub_10003A0C8(&qword_1005A5B80);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v9, 1))
  {
    v8 = v9 + *(int *)(sub_10003A0C8(&qword_1005A5B88) + 48);
    sub_10026244C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_BYTE *)(v8 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
    ((void (*)(uint64_t, uint64_t))v26)(v8 + *(int *)(v23 + 36), v25);
  }
  return a1;
}

uint64_t sub_10026244C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

__n128 sub_10026248C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 result;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *__dst;
  uint64_t *__src;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v138 = *(int *)(sub_10003A0C8(&qword_1005A5AD0) + 44);
  v139 = *(_QWORD *)(a1 + v138);
  v140 = *(_QWORD *)(a1 + v138 + 8);
  v141 = *(_BYTE *)(a1 + v138 + 16);
  sub_100263464(v139, v140, v141 & 1);
  v147 = a2 + v138;
  *(_QWORD *)v147 = v139;
  *(_QWORD *)(v147 + 8) = v140;
  *(_BYTE *)(v147 + 16) = v141 & 1;
  v142 = *(_QWORD *)(a1 + v138 + 24);
  swift_bridgeObjectRetain(v142);
  *(_QWORD *)(v147 + 24) = v142;
  v143 = sub_10003A0C8(&qword_1005A5AD8);
  v144 = *(int *)(v143 + 36);
  v145 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v146 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 16);
  v146(a2 + v138 + v144, a1 + v138 + v144);
  v148 = *(int *)(sub_10003A0C8(&qword_1005A5AE0) + 48);
  v149 = a1 + v138 + v148;
  v150 = a2 + v138 + v148;
  *(_OWORD *)v150 = *(_OWORD *)v149;
  *(_BYTE *)(v150 + 16) = *(_BYTE *)(v149 + 16);
  v151 = *(int *)(sub_10003A0C8(&qword_1005A5AE8) + 44);
  v2 = v150 + v151;
  *(_OWORD *)v2 = *(_OWORD *)(v149 + v151);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(v149 + v151 + 16);
  v152 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v153 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(v149 + v151 + v152, v153) == 1)
  {
    v119 = a1 + v138 + v148 + v151 + v152;
    v115 = *(_QWORD *)v119;
    v116 = *(_QWORD *)(v119 + 8);
    v117 = *(_BYTE *)(v119 + 16);
    sub_100263464(*(_QWORD *)v119, v116, v117 & 1);
    v120 = a2 + v138 + v148 + v151 + v152;
    *(_QWORD *)v120 = v115;
    *(_QWORD *)(v120 + 8) = v116;
    *(_BYTE *)(v120 + 16) = v117 & 1;
    v118 = *(_QWORD *)(v119 + 24);
    swift_bridgeObjectRetain(v118);
    *(_QWORD *)(v120 + 24) = v118;
    ((void (*)(uint64_t, uint64_t, uint64_t))v146)(v120 + *(int *)(v143 + 36), v119 + *(int *)(v143 + 36), v145);
    v7 = sub_10003A0C8(&qword_1005A5B00);
    v122 = (_QWORD *)(v120 + *(int *)(v7 + 36));
    v8 = (_QWORD *)(v119 + *(int *)(v7 + 36));
    *v122 = *v8;
    v121 = v8[1];
    v123 = v8[2];
    swift_retain(v123);
    v122[1] = v121;
    v122[2] = v123;
    swift_storeEnumTagMultiPayload(v120, v153, 1);
  }
  else
  {
    v131 = a1 + v138 + v148 + v151 + v152;
    v124 = *(_QWORD *)v131;
    v125 = *(_QWORD *)(v131 + 8);
    v126 = *(_BYTE *)(v131 + 16);
    sub_100263464(*(_QWORD *)v131, v125, v126 & 1);
    v132 = a2 + v138 + v148 + v151 + v152;
    *(_QWORD *)v132 = v124;
    *(_QWORD *)(v132 + 8) = v125;
    *(_BYTE *)(v132 + 16) = v126 & 1;
    v127 = *(_QWORD *)(v131 + 24);
    swift_bridgeObjectRetain(v127);
    *(_QWORD *)(v132 + 24) = v127;
    ((void (*)(uint64_t, uint64_t, uint64_t))v146)(v132 + *(int *)(v143 + 36), v131 + *(int *)(v143 + 36), v145);
    v3 = sub_10003A0C8(&qword_1005A5B00);
    v129 = (_QWORD *)(v132 + *(int *)(v3 + 36));
    v4 = (_QWORD *)(v131 + *(int *)(v3 + 36));
    *v129 = *v4;
    v128 = v4[1];
    v130 = v4[2];
    swift_retain(v130);
    v129[1] = v128;
    v129[2] = v130;
    v5 = sub_10003A0C8(&qword_1005A5B08);
    v134 = (_QWORD *)(v132 + *(int *)(v5 + 36));
    v6 = (_QWORD *)(v131 + *(int *)(v5 + 36));
    *v134 = *v6;
    v133 = v6[1];
    v135 = v6[2];
    swift_retain(v135);
    v134[1] = v133;
    v134[2] = v135;
    swift_storeEnumTagMultiPayload(v132, v153, 0);
  }
  v9 = sub_10003A0C8(&qword_1005A5B10);
  v108 = a2 + v138 + v148;
  v77 = v108 + v151 + v152;
  v76 = v77 + *(int *)(v9 + 36);
  v109 = a1 + v138 + v148;
  v78 = v109 + v151 + v152;
  v75 = (uint64_t *)(v78 + *(int *)(v9 + 36));
  v73 = *v75;
  v74 = v75[1];
  swift_retain(v74);
  *(_QWORD *)v76 = v73;
  *(_QWORD *)(v76 + 8) = v74;
  *(_OWORD *)(v76 + 16) = *((_OWORD *)v75 + 1);
  v10 = sub_10003A0C8(&qword_1005A5B18);
  v83 = v77 + *(int *)(v10 + 48);
  v84 = v78 + *(int *)(v10 + 48);
  v79 = *(_QWORD *)v84;
  v80 = *(_QWORD *)(v84 + 8);
  v81 = *(_BYTE *)(v84 + 16);
  sub_100263464(*(_QWORD *)v84, v80, v81 & 1);
  *(_QWORD *)v83 = v79;
  *(_QWORD *)(v83 + 8) = v80;
  *(_BYTE *)(v83 + 16) = v81 & 1;
  v82 = *(_QWORD *)(v84 + 24);
  swift_bridgeObjectRetain(v82);
  *(_QWORD *)(v83 + 24) = v82;
  ((void (*)(uint64_t, uint64_t, uint64_t))v146)(v83 + *(int *)(v143 + 36), v84 + *(int *)(v143 + 36), v145);
  v95 = sub_10003A0C8(&qword_1005A5B20);
  v88 = v83 + *(int *)(v95 + 36);
  v87 = (uint64_t *)(v84 + *(int *)(v95 + 36));
  v85 = *v87;
  v86 = v87[1];
  swift_retain(v86);
  *(_QWORD *)v88 = v85;
  *(_QWORD *)(v88 + 8) = v86;
  *(_OWORD *)(v88 + 16) = *((_OWORD *)v87 + 1);
  v11 = sub_10003A0C8(&qword_1005A5B28);
  v12 = v108 + v151 + *(int *)(v11 + 48);
  v13 = v109 + v151 + *(int *)(v11 + 48);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  v89 = v108 + v151 + *(int *)(v11 + 64);
  v90 = v109 + v151 + *(int *)(v11 + 64);
  *(_OWORD *)v89 = *(_OWORD *)v90;
  *(_BYTE *)(v89 + 16) = *(_BYTE *)(v90 + 16);
  v14 = sub_10003A0C8(&qword_1005A5B30);
  v100 = v89 + *(int *)(v14 + 44);
  v101 = v90 + *(int *)(v14 + 44);
  v91 = *(_QWORD *)v101;
  v92 = *(_QWORD *)(v101 + 8);
  v93 = *(_BYTE *)(v101 + 16);
  sub_100263464(*(_QWORD *)v101, v92, v93 & 1);
  *(_QWORD *)v100 = v91;
  *(_QWORD *)(v100 + 8) = v92;
  *(_BYTE *)(v100 + 16) = v93 & 1;
  v94 = *(_QWORD *)(v101 + 24);
  swift_bridgeObjectRetain(v94);
  *(_QWORD *)(v100 + 24) = v94;
  ((void (*)(uint64_t, uint64_t, uint64_t))v146)(v100 + *(int *)(v143 + 36), v101 + *(int *)(v143 + 36), v145);
  v99 = v100 + *(int *)(v95 + 36);
  v98 = (uint64_t *)(v101 + *(int *)(v95 + 36));
  v96 = *v98;
  v97 = v98[1];
  swift_retain(v97);
  *(_QWORD *)v99 = v96;
  *(_QWORD *)(v99 + 8) = v97;
  *(_OWORD *)(v99 + 16) = *((_OWORD *)v98 + 1);
  v15 = sub_10003A0C8(&qword_1005A5B38);
  v106 = v100 + *(int *)(v15 + 48);
  v107 = v101 + *(int *)(v15 + 48);
  v102 = *(_QWORD *)v107;
  v103 = *(_QWORD *)(v107 + 8);
  v104 = *(_BYTE *)(v107 + 16);
  sub_100263464(*(_QWORD *)v107, v103, v104 & 1);
  *(_QWORD *)v106 = v102;
  *(_QWORD *)(v106 + 8) = v103;
  *(_BYTE *)(v106 + 16) = v104 & 1;
  v105 = *(_QWORD *)(v107 + 24);
  swift_bridgeObjectRetain(v105);
  *(_QWORD *)(v106 + 24) = v105;
  ((void (*)(uint64_t, uint64_t, uint64_t))v146)(v106 + *(int *)(v143 + 36), v107 + *(int *)(v143 + 36), v145);
  v16 = sub_10003A0C8(&qword_1005A5B40);
  v110 = v108 + *(int *)(v16 + 36);
  v111 = v109 + *(int *)(v16 + 36);
  *(_OWORD *)v110 = *(_OWORD *)v111;
  *(_BYTE *)(v110 + 16) = *(_BYTE *)(v111 + 16);
  v17 = sub_10003A0C8(&qword_1005A5B48);
  __dst = (_QWORD *)(v110 + *(int *)(v17 + 44));
  __src = (uint64_t *)(v111 + *(int *)(v17 + 44));
  v114 = *(_QWORD *)(sub_10003A0C8(&qword_1005A5B50) - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v114 + 48))(__src, 1))
  {
    v25 = sub_10003A0C8(&qword_1005A5BA8);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v66 = *__src;
    v67 = __src[1];
    v68 = *((_BYTE *)__src + 16);
    sub_100263464(*__src, v67, v68 & 1);
    *__dst = v66;
    __dst[1] = v67;
    *((_BYTE *)__dst + 16) = v68 & 1;
    v69 = __src[3];
    swift_bridgeObjectRetain(v69);
    __dst[3] = v69;
    ((void (*)(char *, char *, uint64_t))v146)((char *)__dst + *(int *)(v143 + 36), (char *)__src + *(int *)(v143 + 36), v145);
    v18 = sub_10003A0C8(&qword_1005A5B00);
    v71 = (_QWORD *)((char *)__dst + *(int *)(v18 + 36));
    v19 = (uint64_t *)((char *)__src + *(int *)(v18 + 36));
    *v71 = *v19;
    v70 = v19[1];
    v72 = v19[2];
    swift_retain(v72);
    v71[1] = v70;
    v71[2] = v72;
    v20 = sub_10003A0C8(&qword_1005A5B90);
    memcpy((char *)__dst + *(int *)(v20 + 36), (char *)__src + *(int *)(v20 + 36), 0x30uLL);
    v21 = sub_10003A0C8(&qword_1005A5B98);
    *(_WORD *)((char *)__dst + *(int *)(v21 + 36)) = *(_WORD *)((char *)__src + *(int *)(v21 + 36));
    v22 = sub_10003A0C8(&qword_1005A5BA0);
    v23 = (char *)__dst + *(int *)(v22 + 48);
    v24 = (char *)__src + *(int *)(v22 + 48);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    (*(void (**)(void))(v114 + 56))();
  }
  v62 = sub_10003A0C8(&qword_1005A5B58);
  v63 = (_QWORD *)((char *)__dst + *(int *)(v62 + 48));
  v64 = (uint64_t *)((char *)__src + *(int *)(v62 + 48));
  v65 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(v64, v65) == 1)
  {
    v51 = *v64;
    swift_retain(*v64);
    *v63 = v51;
    v52 = v64[1];
    swift_retain(v52);
    v63[1] = v52;
    v53 = v64[2];
    swift_retain(v53);
    v63[2] = v53;
    v54 = v64[3];
    swift_retain(v54);
    v63[3] = v54;
    v29 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(char *, char *, uint64_t))v146)((char *)v63 + *(int *)(v29 + 36), (char *)v64 + *(int *)(v29 + 36), v145);
    swift_storeEnumTagMultiPayload(v63, v65, 1);
  }
  else
  {
    v55 = *v64;
    swift_retain(*v64);
    *v63 = v55;
    v56 = v64[1];
    swift_retain(v56);
    v63[1] = v56;
    v57 = v64[2];
    swift_retain(v57);
    v63[2] = v57;
    v58 = v64[3];
    swift_retain(v58);
    v63[3] = v58;
    v26 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(char *, char *, uint64_t))v146)((char *)v63 + *(int *)(v26 + 36), (char *)v64 + *(int *)(v26 + 36), v145);
    v27 = sub_10003A0C8(&qword_1005A5B70);
    v60 = (_QWORD *)((char *)v63 + *(int *)(v27 + 36));
    v28 = (_QWORD *)((char *)v64 + *(int *)(v27 + 36));
    *v60 = *v28;
    v59 = v28[1];
    v61 = v28[2];
    swift_retain(v61);
    v60[1] = v59;
    v60[2] = v61;
    swift_storeEnumTagMultiPayload(v63, v65, 0);
  }
  v30 = sub_10003A0C8(&qword_1005A5B78);
  v46 = (char *)v63 + *(int *)(v30 + 36);
  v45 = (char *)v64 + *(int *)(v30 + 36);
  v43 = *(_QWORD *)v45;
  v44 = *((_QWORD *)v45 + 1);
  swift_retain(v44);
  *(_QWORD *)v46 = v43;
  *((_QWORD *)v46 + 1) = v44;
  *((_OWORD *)v46 + 1) = *((_OWORD *)v45 + 1);
  v47 = (char *)__dst + *(int *)(v62 + 64);
  v48 = (char *)__src + *(int *)(v62 + 64);
  v49 = sub_10003A0C8(&qword_1005A5B80);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v50 + 48))(v48, 1))
  {
    v34 = sub_10003A0C8(&qword_1005A5BC0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = v48[8];
    v31 = sub_10003A0C8(&qword_1005A5B88);
    v41 = &v47[*(int *)(v31 + 48)];
    v42 = &v48[*(int *)(v31 + 48)];
    v37 = *(_QWORD *)v42;
    v38 = *((_QWORD *)v42 + 1);
    v39 = v42[16];
    sub_100263464(*(_QWORD *)v42, v38, v39 & 1);
    *(_QWORD *)v41 = v37;
    *((_QWORD *)v41 + 1) = v38;
    v41[16] = v39 & 1;
    v40 = *((_QWORD *)v42 + 3);
    swift_bridgeObjectRetain(v40);
    *((_QWORD *)v41 + 3) = v40;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v146)(&v41[*(int *)(v143 + 36)], &v42[*(int *)(v143 + 36)], v145);
    v32 = sub_10003A0C8(&qword_1005A5BB0);
    memcpy(&v41[*(int *)(v32 + 36)], &v42[*(int *)(v32 + 36)], 0x30uLL);
    v33 = sub_10003A0C8(&qword_1005A5BB8);
    *(_WORD *)&v41[*(int *)(v33 + 36)] = *(_WORD *)&v42[*(int *)(v33 + 36)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v35 = sub_10003A0C8(&qword_1005A5BC8);
  result = *(__n128 *)(v111 + *(int *)(v35 + 36));
  *(__n128 *)(v110 + *(int *)(v35 + 36)) = result;
  return result;
}

uint64_t sub_100263464(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_1002634A4(uint64_t a1)
{
  sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

unint64_t sub_1002634E8()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5BD0;
  if (!qword_1005A5BD0)
  {
    v2 = sub_1001E7634(&qword_1005A5AD8);
    sub_100263570();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5BD0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100263570()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5BD8;
  if (!qword_1005A5BD8)
  {
    v0 = type metadata accessor for AccessibilityAttachmentModifier(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5BD8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002635E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v3 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v1 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1 + v3);
  return a1;
}

uint64_t sub_10026365C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, a5, 1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, a5, 0);
  }
  return a2;
}

uint64_t sub_100263704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, a5, 1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, a5, 0);
  }
  return a2;
}

uint64_t sub_1002637AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (swift_getEnumCaseMultiPayload(a1, a4) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1);
  else
    (*(void (**)(uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1);
  return a1;
}

uint64_t sub_100263828()
{
  uint64_t v0;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v2, 32);
}

uint64_t sub_100263864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100261240(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_100263870()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5BF8;
  if (!qword_1005A5BF8)
  {
    v0 = sub_1001E7634(&qword_1005A5BF0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5BF8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002638F8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5C00;
  if (!qword_1005A5C00)
  {
    v0 = type metadata accessor for CGSize(255);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for CGSize, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5C00);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100263968()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5C10;
  if (!qword_1005A5C10)
  {
    v0 = sub_1001E7634(&qword_1005A5C08);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5C10);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002639D8()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5C18;
  if (!qword_1005A5C18)
  {
    v0 = sub_1001E7634(&qword_1005A5BE0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _BackgroundModifier<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5C18);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100263A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(a2 - 8) + 8))();
  swift_release(*(_QWORD *)(a1 + *(int *)(a3 + 36) + 8));
  return a1;
}

__n128 sub_100263A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 *v4;
  __n128 result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  (*(void (**)(void))(*(_QWORD *)(a3 - 8) + 16))();
  v9 = *(int *)(a4 + 36);
  v10 = *(_QWORD *)(a1 + v9);
  v11 = *(_QWORD *)(a1 + v9 + 8);
  swift_retain(v11);
  v4 = (__n128 *)(a2 + v9);
  v4->n128_u64[0] = v10;
  v4->n128_u64[1] = v11;
  result = *(__n128 *)(a1 + v9 + 16);
  v4[1] = result;
  return result;
}

uint64_t *sub_100263B30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025F928(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_100263B38()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5C28;
  if (!qword_1005A5C28)
  {
    v0 = sub_1001E7634(&qword_1005A5C20);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5C28);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100263BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001EAFF0(a1, a2);
}

uint64_t sub_100263BBC(uint64_t a1)
{
  return sub_1001EB0F8(a1);
}

unint64_t sub_100263BD0()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5C30;
  if (!qword_1005A5C30)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CE0FC, &unk_1005282E0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5C30);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100263C3C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5C38;
  if (!qword_1005A5C38)
  {
    WitnessTable = swift_getWitnessTable(&unk_1004CE0CC, &unk_100528300);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5C38);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100263CA8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InstantAnswerFlightContentView.body>>, 1);
}

unint64_t initializeBufferWithCopyOfBuffer for InstantAnswerFlightContentView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v32;

  v32 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v32 & 0x20000) != 0)
  {
    v27 = *a2;
    swift_retain(*a2);
    *a1 = v27;
    return *a1 + ((v32 + 16) & ~(unint64_t)v32);
  }
  else
  {
    v26 = sub_10003A0C8(&qword_1005A5A98);
    if (swift_getEnumCaseMultiPayload(a2, v26) == 1)
    {
      v3 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v26, 1);
    }
    else
    {
      v25 = *a2;
      swift_retain(*a2);
      *a1 = v25;
      swift_storeEnumTagMultiPayload(a1, v26, 0);
    }
    v10 = (char *)a1 + a3[5];
    v4 = (char *)a2 + a3[5];
    *(_OWORD *)v10 = *(_OWORD *)v4;
    v11 = *((_QWORD *)v4 + 2);
    swift_retain(v11);
    *((_QWORD *)v10 + 2) = v11;
    v12 = (char *)a1 + a3[6];
    v5 = (char *)a2 + a3[6];
    *(_OWORD *)v12 = *(_OWORD *)v5;
    v13 = *((_QWORD *)v5 + 2);
    swift_retain(v13);
    *((_QWORD *)v12 + 2) = v13;
    v6 = a3[7];
    v14 = (char *)a1 + v6;
    *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
    v15 = *(_QWORD *)((char *)a2 + v6 + 8);
    swift_retain(v15);
    *((_QWORD *)v14 + 1) = v15;
    v7 = a3[8];
    v16 = (char *)a1 + v7;
    *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
    v17 = *(_QWORD *)((char *)a2 + v7 + 8);
    swift_retain(v17);
    *((_QWORD *)v16 + 1) = v17;
    v8 = a3[9];
    v23 = (_QWORD *)((char *)a1 + v8);
    v22 = (_QWORD *)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v18 = *(_QWORD *)((char *)a2 + v8 + 8);
    swift_bridgeObjectRetain(v18);
    v23[1] = v18;
    v23[2] = v22[2];
    v19 = v22[3];
    swift_bridgeObjectRetain(v19);
    v23[3] = v19;
    v23[4] = v22[4];
    v20 = v22[5];
    swift_bridgeObjectRetain(v20);
    v23[5] = v20;
    v23[6] = v22[6];
    v21 = v22[7];
    swift_bridgeObjectRetain(v21);
    v23[7] = v21;
    v23[8] = v22[8];
    v24 = v22[9];
    swift_bridgeObjectRetain(v24);
    v23[9] = v24;
    *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    return (unint64_t)a1;
  }
}

uint64_t destroy for InstantAnswerFlightContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  return swift_bridgeObjectRelease(v5[9]);
}

_QWORD *initializeWithCopy for InstantAnswerFlightContentView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v29;

  v29 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a2, v29) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v29, 1);
  }
  else
  {
    v25 = *a2;
    swift_retain(*a2);
    *a1 = v25;
    swift_storeEnumTagMultiPayload(a1, v29, 0);
  }
  v10 = (char *)a1 + a3[5];
  v4 = (char *)a2 + a3[5];
  *(_OWORD *)v10 = *(_OWORD *)v4;
  v11 = *((_QWORD *)v4 + 2);
  swift_retain(v11);
  *((_QWORD *)v10 + 2) = v11;
  v12 = (char *)a1 + a3[6];
  v5 = (char *)a2 + a3[6];
  *(_OWORD *)v12 = *(_OWORD *)v5;
  v13 = *((_QWORD *)v5 + 2);
  swift_retain(v13);
  *((_QWORD *)v12 + 2) = v13;
  v6 = a3[7];
  v14 = (char *)a1 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  v15 = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_retain(v15);
  *((_QWORD *)v14 + 1) = v15;
  v7 = a3[8];
  v16 = (char *)a1 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  v17 = *(_QWORD *)((char *)a2 + v7 + 8);
  swift_retain(v17);
  *((_QWORD *)v16 + 1) = v17;
  v8 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v8);
  v22 = (_QWORD *)((char *)a2 + v8);
  *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
  v18 = *(_QWORD *)((char *)a2 + v8 + 8);
  swift_bridgeObjectRetain(v18);
  v23[1] = v18;
  v23[2] = v22[2];
  v19 = v22[3];
  swift_bridgeObjectRetain(v19);
  v23[3] = v19;
  v23[4] = v22[4];
  v20 = v22[5];
  swift_bridgeObjectRetain(v20);
  v23[5] = v20;
  v23[6] = v22[6];
  v21 = v22[7];
  swift_bridgeObjectRetain(v21);
  v23[7] = v21;
  v23[8] = v22[8];
  v24 = v22[9];
  swift_bridgeObjectRetain(v24);
  result = a1;
  v23[9] = v24;
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  return result;
}

double assignWithCopy for InstantAnswerFlightContentView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_10025BB10((uint64_t)a1);
    v31 = sub_10003A0C8(&qword_1005A5A98);
    if (swift_getEnumCaseMultiPayload(a2, v31) == 1)
    {
      v3 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v31, 1);
    }
    else
    {
      v30 = *a2;
      swift_retain(*a2);
      *a1 = v30;
      swift_storeEnumTagMultiPayload(a1, v31, 0);
    }
  }
  v15 = (_QWORD *)((char *)a1 + a3[5]);
  v4 = (_QWORD *)((char *)a2 + a3[5]);
  *v15 = *v4;
  v15[1] = v4[1];
  v16 = v4[2];
  swift_retain(v16);
  v15[2] = v16;
  swift_release();
  v17 = (_QWORD *)((char *)a1 + a3[6]);
  v5 = (_QWORD *)((char *)a2 + a3[6]);
  *v17 = *v5;
  v17[1] = v5[1];
  v18 = v5[2];
  swift_retain(v18);
  v17[2] = v18;
  swift_release();
  v19 = (_QWORD *)((char *)a1 + a3[7]);
  v6 = (_QWORD *)((char *)a2 + a3[7]);
  *v19 = *v6;
  v20 = v6[1];
  swift_retain(v20);
  v19[1] = v20;
  swift_release();
  v21 = (_QWORD *)((char *)a1 + a3[8]);
  v7 = (_QWORD *)((char *)a2 + a3[8]);
  *v21 = *v7;
  v22 = v7[1];
  swift_retain(v22);
  v21[1] = v22;
  swift_release();
  v8 = a3[9];
  v28 = (_QWORD *)((char *)a1 + v8);
  v27 = (_QWORD *)((char *)a2 + v8);
  *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
  v23 = *(_QWORD *)((char *)a2 + v8 + 8);
  swift_bridgeObjectRetain(v23);
  v9 = v28[1];
  v28[1] = v23;
  swift_bridgeObjectRelease(v9);
  v28[2] = v27[2];
  v24 = v27[3];
  swift_bridgeObjectRetain(v24);
  v10 = v28[3];
  v28[3] = v24;
  swift_bridgeObjectRelease(v10);
  v28[4] = v27[4];
  v25 = v27[5];
  swift_bridgeObjectRetain(v25);
  v11 = v28[5];
  v28[5] = v25;
  swift_bridgeObjectRelease(v11);
  v28[6] = v27[6];
  v26 = v27[7];
  swift_bridgeObjectRetain(v26);
  v12 = v28[7];
  v28[7] = v26;
  swift_bridgeObjectRelease(v12);
  v28[8] = v27[8];
  v29 = v27[9];
  swift_bridgeObjectRetain(v29);
  v13 = v28[9];
  v28[9] = v29;
  swift_bridgeObjectRelease(v13);
  result = *(double *)((char *)a2 + a3[10]);
  *(double *)((char *)a1 + a3[10]) = result;
  return result;
}

char *initializeWithTake for InstantAnswerFlightContentView(char *a1, char *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *result;
  uint64_t v12;

  v12 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a2, v12) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v12, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v4 = &a1[a3[5]];
  v5 = &a2[a3[5]];
  *(_OWORD *)v4 = *(_OWORD *)v5;
  *((_QWORD *)v4 + 2) = *((_QWORD *)v5 + 2);
  v6 = &a1[a3[6]];
  v7 = a3[6];
  *(_OWORD *)v6 = *(_OWORD *)&a2[v7];
  *((_QWORD *)v6 + 2) = *(_QWORD *)&a2[v7 + 16];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  memcpy(&a1[a3[9]], &a2[a3[9]], 0x50uLL);
  result = a1;
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return result;
}

double assignWithTake for InstantAnswerFlightContentView(char *a1, char *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  char *v19;
  char *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_10025BB10((uint64_t)a1);
    v21 = sub_10003A0C8(&qword_1005A5A98);
    if (swift_getEnumCaseMultiPayload(a2, v21) == 1)
    {
      v3 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v21, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  v4 = &a1[a3[5]];
  v5 = &a2[a3[5]];
  *(_QWORD *)v4 = *(_QWORD *)v5;
  *((_QWORD *)v4 + 1) = *((_QWORD *)v5 + 1);
  *((_QWORD *)v4 + 2) = *((_QWORD *)v5 + 2);
  swift_release();
  v6 = &a1[a3[6]];
  v7 = &a2[a3[6]];
  *(_QWORD *)v6 = *(_QWORD *)v7;
  *((_QWORD *)v6 + 1) = *((_QWORD *)v7 + 1);
  *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
  swift_release();
  v8 = &a1[a3[7]];
  v9 = &a2[a3[7]];
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_release();
  v10 = &a1[a3[8]];
  v11 = &a2[a3[8]];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_release();
  v12 = a3[9];
  v20 = &a1[v12];
  v19 = &a2[v12];
  *(_QWORD *)v20 = *(_QWORD *)&a2[v12];
  v13 = *(_QWORD *)&a1[v12 + 8];
  *((_QWORD *)v20 + 1) = *(_QWORD *)&a2[v12 + 8];
  swift_bridgeObjectRelease(v13);
  *((_QWORD *)v20 + 2) = *((_QWORD *)v19 + 2);
  v14 = *((_QWORD *)v20 + 3);
  *((_QWORD *)v20 + 3) = *((_QWORD *)v19 + 3);
  swift_bridgeObjectRelease(v14);
  *((_QWORD *)v20 + 4) = *((_QWORD *)v19 + 4);
  v15 = *((_QWORD *)v20 + 5);
  *((_QWORD *)v20 + 5) = *((_QWORD *)v19 + 5);
  swift_bridgeObjectRelease(v15);
  *((_QWORD *)v20 + 6) = *((_QWORD *)v19 + 6);
  v16 = *((_QWORD *)v20 + 7);
  *((_QWORD *)v20 + 7) = *((_QWORD *)v19 + 7);
  swift_bridgeObjectRelease(v16);
  *((_QWORD *)v20 + 8) = *((_QWORD *)v19 + 8);
  v17 = *((_QWORD *)v20 + 9);
  *((_QWORD *)v20 + 9) = *((_QWORD *)v19 + 9);
  swift_bridgeObjectRelease(v17);
  result = *(double *)&a2[a3[10]];
  *(double *)&a1[a3[10]] = result;
  return result;
}

uint64_t getEnumTagSinglePayload for InstantAnswerFlightContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100264ABC);
}

uint64_t sub_100264ABC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_10003A0C8(&qword_1005A5A90);
  v10 = *(_QWORD *)(v9 - 8);
  if (a2 == *(_DWORD *)(v10 + 84))
  {
    return (*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))(a1, a2, v9);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    v4 = -1;
    if (*(_QWORD *)(a1 + *(int *)(a3 + 36) + 8) < (unint64_t)&_mh_execute_header)
      v4 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
    return (v4 + 1);
  }
  else
  {
    __break(1u);
  }
  return v5;
}

uint64_t storeEnumTagSinglePayload for InstantAnswerFlightContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100264BBC);
}

uint64_t sub_100264BBC(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10003A0C8(&qword_1005A5A90);
  v9 = *(_QWORD *)(result - 8);
  if (a3 == *(_DWORD *)(v9 + 84))
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v9 + 56))(a1, a2, a2, result);
  if (a3 == 0x7FFFFFFF)
    *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = a2 - 1;
  else
    __break(1u);
  return result;
}

uint64_t sub_100264C74(uint64_t a1)
{
  unint64_t v1;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];

  v4 = sub_100264D64(319);
  v5 = v4;
  if (v1 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v4 - 8) + 64;
    v6[1] = &unk_1004CDD10;
    v6[2] = &unk_1004CDD10;
    v6[3] = &unk_1004CDD28;
    v6[4] = &unk_1004CDD28;
    v6[5] = &unk_1004CDD40;
    v6[6] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    return 0;
  }
  return v5;
}

uint64_t sub_100264D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  uint64_t v7;

  v7 = qword_1005A5CA8;
  if (!qword_1005A5CA8)
  {
    v1 = type metadata accessor for ContentSizeCategory(255);
    v5 = type metadata accessor for Environment.Content(a1, v1);
    v7 = v5;
    if (!v2)
    {
      v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_1005A5CA8);
      return v3;
    }
  }
  return v7;
}

void *_s24ArrowHorizontalAlignmentVMa()
{
  return &unk_1005282E0;
}

void *_s22ArrowVerticalAlignmentVMa()
{
  return &unk_100528300;
}

unint64_t sub_100264E30()
{
  return sub_100261D28();
}

unint64_t sub_100264E44()
{
  return sub_100264E58();
}

unint64_t sub_100264E58()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5CF0;
  if (!qword_1005A5CF0)
  {
    v2 = sub_1001E7634(&qword_1005A5B00);
    sub_1002634E8();
    sub_100264EE4();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5CF0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100264EE4()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5CF8;
  if (!qword_1005A5CF8)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5CF8);
    return WitnessTable;
  }
  return v2;
}

unint64_t sub_100264F4C()
{
  return sub_1002634E8();
}

unint64_t sub_100264F60()
{
  return sub_100264F74();
}

unint64_t sub_100264F74()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5D00;
  if (!qword_1005A5D00)
  {
    v0 = sub_1001E7634(&qword_1005A5D08);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D00);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100264FE4()
{
  uint64_t v0;

  v0 = type metadata accessor for _ConditionalContent(255);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v0);
}

uint64_t sub_10026504C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v1 = sub_1001E7634(&qword_1005A5BE0);
  v4 = type metadata accessor for ModifiedContent(255, v3, v1);
  sub_1002639D8();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
}

void *sub_1002650C0(const void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v6;

  v6 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v6) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(void *, const void *))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v6, 1);
  }
  else
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  return a2;
}

unint64_t sub_100265160()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5D28;
  if (!qword_1005A5D28)
  {
    v0 = sub_1001E7634(&qword_1005A5B50);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D28);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_1002651D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = sub_10003A0C8(&qword_1005A5B50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(a1, 1))
  {
    sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    v4 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
  }
  return a1;
}

_OWORD *sub_1002652A4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v14;
  char *v15;
  uint64_t v18;

  v18 = *(_QWORD *)(sub_10003A0C8(&qword_1005A5B50) - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t))(v18 + 48))(a1, 1))
  {
    v12 = sub_10003A0C8(&qword_1005A5BA8);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *a2 = *a1;
    a2[1] = a1[1];
    v2 = sub_10003A0C8(&qword_1005A5AD8);
    v15 = (char *)a2 + *(int *)(v2 + 36);
    v14 = (char *)a1 + *(int *)(v2 + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 32))(v15, v14);
    v4 = sub_10003A0C8(&qword_1005A5B00);
    v5 = (char *)a2 + *(int *)(v4 + 36);
    v6 = (char *)a1 + *(int *)(v4 + 36);
    *(_OWORD *)v5 = *(_OWORD *)v6;
    *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
    v7 = sub_10003A0C8(&qword_1005A5B90);
    memcpy((char *)a2 + *(int *)(v7 + 36), (char *)a1 + *(int *)(v7 + 36), 0x30uLL);
    v8 = sub_10003A0C8(&qword_1005A5B98);
    *(_WORD *)((char *)a2 + *(int *)(v8 + 36)) = *(_WORD *)((char *)a1 + *(int *)(v8 + 36));
    v9 = sub_10003A0C8(&qword_1005A5BA0);
    v10 = (char *)a2 + *(int *)(v9 + 48);
    v11 = (char *)a1 + *(int *)(v9 + 48);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    (*(void (**)(void))(v18 + 56))();
  }
  return a2;
}

unint64_t sub_10026547C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D38;
  if (!qword_1005A5D38)
  {
    v2 = sub_1001E7634(&qword_1005A5D30);
    sub_100265504();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D38);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100265504()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5D40;
  if (!qword_1005A5D40)
  {
    v0 = sub_1001E7634(&qword_1005A5D48);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D40);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_100265574(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  return a1;
}

unint64_t sub_1002655B4()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D58;
  if (!qword_1005A5D58)
  {
    v2 = sub_1001E7634(&qword_1005A5D50);
    sub_10026547C();
    sub_100265640();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D58);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100265640()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5D60;
  if (!qword_1005A5D60)
  {
    v0 = sub_1001E7634(&qword_1005A5D68);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _ForegroundStyleModifier<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D60);
    return WitnessTable;
  }
  return v3;
}

_QWORD *sub_1002656B0(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return a1;
}

uint64_t sub_1002656FC()
{
  return sub_10025E114();
}

uint64_t sub_100265704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100260B18(a1, *(_QWORD **)(v2 + 16), a2);
}

unint64_t sub_10026570C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D70;
  if (!qword_1005A5D70)
  {
    v2 = sub_1001E7634(&qword_1005A5B68);
    sub_1002655B4();
    sub_100263570();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D70);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100265798()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D78;
  if (!qword_1005A5D78)
  {
    v2 = sub_1001E7634(&qword_1005A5B70);
    sub_10026570C();
    sub_100264EE4();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D78);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100265824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
  v1 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1 + v3);
  return a1;
}

uint64_t sub_1002658A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = type metadata accessor for InstantAnswerFlightContentView(0);
  v1 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = v9 + *(_QWORD *)(v1 + 64);
  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(unint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(v6 + v9 + *(int *)(v7 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  return swift_deallocObject(v6, v8);
}

char *sub_100265A30(char *a1, char *a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *result;
  int *v8;
  uint64_t v11;

  v11 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v11) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v2 - 8) + 32))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v11, 1);
  }
  else
  {
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v8 = (int *)type metadata accessor for InstantAnswerFlightContentView(0);
  v3 = &a2[v8[5]];
  v4 = &a1[v8[5]];
  *(_OWORD *)v3 = *(_OWORD *)v4;
  *((_QWORD *)v3 + 2) = *((_QWORD *)v4 + 2);
  v5 = &a2[v8[6]];
  v6 = v8[6];
  *(_OWORD *)v5 = *(_OWORD *)&a1[v6];
  *((_QWORD *)v5 + 2) = *(_QWORD *)&a1[v6 + 16];
  *(_OWORD *)&a2[v8[7]] = *(_OWORD *)&a1[v8[7]];
  *(_OWORD *)&a2[v8[8]] = *(_OWORD *)&a1[v8[8]];
  memcpy(&a2[v8[9]], &a1[v8[9]], 0x50uLL);
  result = a2;
  *(_QWORD *)&a2[v8[10]] = *(_QWORD *)&a1[v8[10]];
  return result;
}

uint64_t sub_100265B8C(Swift::Double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InstantAnswerFlightContentView(0) - 8) + 80);
  return sub_100260CB8(v2 + ((v3 + 16) & ~v3), a1, a2);
}

unint64_t sub_100265BD4()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D80;
  if (!qword_1005A5D80)
  {
    v2 = sub_1001E7634(&qword_1005A5D18);
    sub_100265798();
    sub_10026570C();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D80);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100265C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v5 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v5);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v6 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v6);
    sub_10003A0C8(&qword_1005A5B70);
    swift_release();
  }
  return a1;
}

unint64_t sub_100265DA0()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D88;
  if (!qword_1005A5D88)
  {
    v2 = sub_1001E7634(&qword_1005A5B78);
    sub_100265BD4();
    sub_1002639D8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D88);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100265E2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v5 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v5);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v6 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v6);
    sub_10003A0C8(&qword_1005A5B70);
    swift_release();
  }
  sub_10003A0C8(&qword_1005A5B78);
  swift_release();
  return a1;
}

unint64_t sub_100265F8C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5D90;
  if (!qword_1005A5D90)
  {
    v0 = sub_1001E7634(&qword_1005A5B80);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D90);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100265FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_10003A0C8(&qword_1005A5B80);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(a1, 1))
  {
    v4 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B88) + 48);
    sub_10026244C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_BYTE *)(v4 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 24));
    v5 = v4 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v5);
  }
  return a1;
}

_BYTE *sub_1002660C8(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  char *v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v15;
  uint64_t v16;

  v15 = sub_10003A0C8(&qword_1005A5B80);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v16 + 48))(a1, 1))
  {
    v7 = sub_10003A0C8(&qword_1005A5BC0);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a2 = *(_QWORD *)a1;
    a2[8] = a1[8];
    v2 = sub_10003A0C8(&qword_1005A5B88);
    v11 = &a2[*(int *)(v2 + 48)];
    v12 = &a1[*(int *)(v2 + 48)];
    *v11 = *v12;
    v11[1] = v12[1];
    v3 = sub_10003A0C8(&qword_1005A5AD8);
    v10 = (char *)v11 + *(int *)(v3 + 36);
    v9 = (char *)v12 + *(int *)(v3 + 36);
    v4 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v4 - 8) + 32))(v10, v9);
    v5 = sub_10003A0C8(&qword_1005A5BB0);
    memcpy((char *)v11 + *(int *)(v5 + 36), (char *)v12 + *(int *)(v5 + 36), 0x30uLL);
    v6 = sub_10003A0C8(&qword_1005A5BB8);
    *(_WORD *)((char *)v11 + *(int *)(v6 + 36)) = *(_WORD *)((char *)v12 + *(int *)(v6 + 36));
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
  }
  return a2;
}

_QWORD *sub_100266274(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v24;

  v24 = *(_QWORD *)(sub_10003A0C8(&qword_1005A5B50) - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v24 + 48))(a1, 1))
  {
    v11 = sub_10003A0C8(&qword_1005A5BA8);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v13 = *a1;
    v14 = a1[1];
    v15 = *((_BYTE *)a1 + 16);
    sub_100263464(*a1, v14, v15 & 1);
    *a2 = v13;
    a2[1] = v14;
    *((_BYTE *)a2 + 16) = v15 & 1;
    v16 = a1[3];
    swift_bridgeObjectRetain(v16);
    a2[3] = v16;
    v2 = sub_10003A0C8(&qword_1005A5AD8);
    v18 = (char *)a2 + *(int *)(v2 + 36);
    v17 = (char *)a1 + *(int *)(v2 + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 16))(v18, v17);
    v4 = sub_10003A0C8(&qword_1005A5B00);
    v20 = (_QWORD *)((char *)a2 + *(int *)(v4 + 36));
    v5 = (uint64_t *)((char *)a1 + *(int *)(v4 + 36));
    *v20 = *v5;
    v19 = v5[1];
    v21 = v5[2];
    swift_retain(v21);
    v20[1] = v19;
    v20[2] = v21;
    v6 = sub_10003A0C8(&qword_1005A5B90);
    memcpy((char *)a2 + *(int *)(v6 + 36), (char *)a1 + *(int *)(v6 + 36), 0x30uLL);
    v7 = sub_10003A0C8(&qword_1005A5B98);
    *(_WORD *)((char *)a2 + *(int *)(v7 + 36)) = *(_WORD *)((char *)a1 + *(int *)(v7 + 36));
    v8 = sub_10003A0C8(&qword_1005A5BA0);
    v9 = (char *)a2 + *(int *)(v8 + 48);
    v10 = (char *)a1 + *(int *)(v8 + 48);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    (*(void (**)(void))(v24 + 56))();
  }
  return a2;
}

__n128 sub_1002664C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  unint64_t v10;
  unint64_t v11;
  __n128 *v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v31;

  v31 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(a1, v31) == 1)
  {
    v14 = *a1;
    swift_retain(*a1);
    *a2 = v14;
    v15 = a1[1];
    swift_retain(v15);
    a2[1] = v15;
    v16 = a1[2];
    swift_retain(v16);
    a2[2] = v16;
    v17 = a1[3];
    swift_retain(v17);
    a2[3] = v17;
    v6 = sub_10003A0C8(&qword_1005A5B68);
    v19 = (char *)a2 + *(int *)(v6 + 36);
    v18 = (char *)a1 + *(int *)(v6 + 36);
    v7 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v7 - 8) + 16))(v19, v18);
    swift_storeEnumTagMultiPayload(a2, v31, 1);
  }
  else
  {
    v20 = *a1;
    swift_retain(*a1);
    *a2 = v20;
    v21 = a1[1];
    swift_retain(v21);
    a2[1] = v21;
    v22 = a1[2];
    swift_retain(v22);
    a2[2] = v22;
    v23 = a1[3];
    swift_retain(v23);
    a2[3] = v23;
    v2 = sub_10003A0C8(&qword_1005A5B68);
    v25 = (char *)a2 + *(int *)(v2 + 36);
    v24 = (char *)a1 + *(int *)(v2 + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 16))(v25, v24);
    v4 = sub_10003A0C8(&qword_1005A5B70);
    v27 = (_QWORD *)((char *)a2 + *(int *)(v4 + 36));
    v5 = (_QWORD *)((char *)a1 + *(int *)(v4 + 36));
    *v27 = *v5;
    v26 = v5[1];
    v28 = v5[2];
    swift_retain(v28);
    v27[1] = v26;
    v27[2] = v28;
    swift_storeEnumTagMultiPayload(a2, v31, 0);
  }
  v8 = sub_10003A0C8(&qword_1005A5B78);
  v13 = (__n128 *)((char *)a2 + *(int *)(v8 + 36));
  v12 = (__n128 *)((char *)a1 + *(int *)(v8 + 36));
  v10 = v12->n128_u64[0];
  v11 = v12->n128_u64[1];
  swift_retain(v11);
  v13->n128_u64[0] = v10;
  v13->n128_u64[1] = v11;
  result = v12[1];
  v13[1] = result;
  return result;
}

_BYTE *sub_100266770(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v19;
  uint64_t v20;

  v19 = sub_10003A0C8(&qword_1005A5B80);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v20 + 48))(a1, 1))
  {
    v7 = sub_10003A0C8(&qword_1005A5BC0);
    memcpy(a2, a1, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a2 = *(_QWORD *)a1;
    a2[8] = a1[8];
    v2 = sub_10003A0C8(&qword_1005A5B88);
    v15 = &a2[*(int *)(v2 + 48)];
    v16 = &a1[*(int *)(v2 + 48)];
    v9 = *(_QWORD *)v16;
    v10 = *((_QWORD *)v16 + 1);
    v11 = v16[16];
    sub_100263464(*(_QWORD *)v16, v10, v11 & 1);
    *(_QWORD *)v15 = v9;
    *((_QWORD *)v15 + 1) = v10;
    v15[16] = v11 & 1;
    v12 = *((_QWORD *)v16 + 3);
    swift_bridgeObjectRetain(v12);
    *((_QWORD *)v15 + 3) = v12;
    v3 = sub_10003A0C8(&qword_1005A5AD8);
    v14 = &v15[*(int *)(v3 + 36)];
    v13 = &v16[*(int *)(v3 + 36)];
    v4 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v4 - 8) + 16))(v14, v13);
    v5 = sub_10003A0C8(&qword_1005A5BB0);
    memcpy(&v15[*(int *)(v5 + 36)], &v16[*(int *)(v5 + 36)], 0x30uLL);
    v6 = sub_10003A0C8(&qword_1005A5BB8);
    *(_WORD *)&v15[*(int *)(v6 + 36)] = *(_WORD *)&v16[*(int *)(v6 + 36)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a2, 0, 1, v19);
  }
  return a2;
}

unint64_t sub_100266978()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5D98;
  if (!qword_1005A5D98)
  {
    v2 = sub_1001E7634(&qword_1005A5BA8);
    sub_100265160();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5D98);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_1002669F4()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DA0;
  if (!qword_1005A5DA0)
  {
    v2 = sub_1001E7634(&qword_1005A5BC0);
    sub_100265F8C();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DA0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100266A70()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DA8;
  if (!qword_1005A5DA8)
  {
    v2 = sub_1001E7634(&qword_1005A5BB0);
    sub_1002634E8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DA8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100266AF8()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DB0;
  if (!qword_1005A5DB0)
  {
    v2 = sub_1001E7634(&qword_1005A5BB8);
    sub_100266A70();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DB0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100266B80()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DB8;
  if (!qword_1005A5DB8)
  {
    v2 = sub_1001E7634(&qword_1005A5D10);
    sub_100266AF8();
    sub_100266C0C();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DB8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100266C0C()
{
  unint64_t WitnessTable;
  uint64_t v2;

  v2 = qword_1005A5DC0;
  if (!qword_1005A5DC0)
  {
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DC0);
    return WitnessTable;
  }
  return v2;
}

uint64_t sub_100266C74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  sub_100263464(*(_QWORD *)a1, v7, v8 & 1);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  v9 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v9);
  *(_QWORD *)(a2 + 24) = v9;
  v10 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2 + v10, a1 + v10);
  v3 = sub_10003A0C8(&qword_1005A5BB0);
  memcpy((void *)(a2 + *(int *)(v3 + 36)), (const void *)(a1 + *(int *)(v3 + 36)), 0x30uLL);
  v4 = sub_10003A0C8(&qword_1005A5BB8);
  result = a2;
  *(_WORD *)(a2 + *(int *)(v4 + 36)) = *(_WORD *)(a1 + *(int *)(v4 + 36));
  return result;
}

uint64_t sub_100266DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v3 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v1 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1 + v3);
  sub_10003A0C8(&qword_1005A5B00);
  swift_release();
  return a1;
}

unint64_t sub_100266E4C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DC8;
  if (!qword_1005A5DC8)
  {
    v2 = sub_1001E7634(&qword_1005A5B90);
    sub_100264E58();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DC8);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100266ED4()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DD0;
  if (!qword_1005A5DD0)
  {
    v2 = sub_1001E7634(&qword_1005A5B98);
    sub_100266E4C();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DD0);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100266F5C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5DD8;
  if (!qword_1005A5DD8)
  {
    v2 = sub_1001E7634(&qword_1005A5D20);
    sub_100266ED4();
    sub_100266C0C();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DD8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100266FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 16);
  sub_100263464(*(_QWORD *)a1, v9, v10 & 1);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = v10 & 1;
  v11 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v11);
  *(_QWORD *)(a2 + 24) = v11;
  v12 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2 + v12, a1 + v12);
  v3 = sub_10003A0C8(&qword_1005A5B00);
  v4 = (_QWORD *)(a1 + *(int *)(v3 + 36));
  v14 = (_QWORD *)(a2 + *(int *)(v3 + 36));
  *v14 = *v4;
  v13 = v4[1];
  v15 = v4[2];
  swift_retain(v15);
  v14[1] = v13;
  v14[2] = v15;
  v5 = sub_10003A0C8(&qword_1005A5B90);
  memcpy((void *)(a2 + *(int *)(v5 + 36)), (const void *)(a1 + *(int *)(v5 + 36)), 0x30uLL);
  v6 = sub_10003A0C8(&qword_1005A5B98);
  result = a2;
  *(_WORD *)(a2 + *(int *)(v6 + 36)) = *(_WORD *)(a1 + *(int *)(v6 + 36));
  return result;
}

uint64_t sub_10026717C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = type metadata accessor for InstantAnswerFlightContentView(0);
  v1 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = v9 + *(_QWORD *)(v1 + 64);
  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(unint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(v6 + v9 + *(int *)(v7 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  return swift_deallocObject(v6, v8);
}

double sub_100267304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InstantAnswerFlightContentView(0) - 8) + 80);
  return sub_100260C4C(a1, v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_100267348()
{
  uint64_t v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v4 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = v3 + *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v4);
  return swift_deallocObject(v5, v6);
}

uint64_t sub_1002673D4()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  return sub_100261790(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10026740C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_100267444()
{
  uint64_t v0;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v4 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = v3 + *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v4);
  return swift_deallocObject(v5, v6);
}

uint64_t sub_1002674D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  type metadata accessor for GeometryProxy(0);
  return sub_100261800(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

_QWORD *sub_100267524(_QWORD *a1)
{
  swift_release(*a1);
  if (a1[1])
    swift_release(a1[2]);
  if (a1[3])
    swift_release(a1[4]);
  return a1;
}

uint64_t sub_10026759C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025CEDC(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_1002675A4()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5DF0;
  if (!qword_1005A5DF0)
  {
    v0 = sub_1001E7634(&qword_1005A5DE8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DF0);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100267614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025F704(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10026761C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5DF8;
  if (!qword_1005A5DF8)
  {
    v0 = sub_1001E7634(&qword_1005A5DE0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5DF8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026768C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = *(int *)(sub_10003A0C8(&qword_1005A5AE8) + 44);
  v18 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v1 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1 + v17 + v18, v1) == 1)
  {
    v14 = a1 + v17 + v18;
    sub_10026244C(*(_QWORD *)v14, *(_QWORD *)(v14 + 8), *(_BYTE *)(v14 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + 24));
    v13 = v14 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v13);
    sub_10003A0C8(&qword_1005A5B00);
  }
  else
  {
    v16 = a1 + v17 + v18;
    sub_10026244C(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_BYTE *)(v16 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v16 + 24));
    v15 = v16 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v15);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
    sub_10003A0C8(&qword_1005A5B08);
  }
  swift_release();
  sub_10003A0C8(&qword_1005A5B10);
  swift_release();
  v6 = a1 + v17 + v18 + *(int *)(sub_10003A0C8(&qword_1005A5B18) + 48);
  sub_10026244C(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_BYTE *)(v6 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + 24));
  v9 = sub_10003A0C8(&qword_1005A5AD8);
  v5 = v6 + *(int *)(v9 + 36);
  v11 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v12 = *(void (**)(uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v5);
  sub_10003A0C8(&qword_1005A5B20);
  swift_release();
  v7 = a1 + v17 + *(int *)(sub_10003A0C8(&qword_1005A5B28) + 64);
  v8 = v7 + *(int *)(sub_10003A0C8(&qword_1005A5B30) + 44);
  sub_10026244C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_BYTE *)(v8 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
  ((void (*)(uint64_t, uint64_t))v12)(v8 + *(int *)(v9 + 36), v11);
  swift_release();
  v10 = v8 + *(int *)(sub_10003A0C8(&qword_1005A5B38) + 48);
  sub_10026244C(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_BYTE *)(v10 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));
  ((void (*)(uint64_t, uint64_t))v12)(v10 + *(int *)(v9 + 36), v11);
  return a1;
}

unint64_t sub_100267A14()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5E00;
  if (!qword_1005A5E00)
  {
    v2 = sub_1001E7634(&qword_1005A5B40);
    sub_10026761C();
    sub_100267AA0();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E00);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100267AA0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5E08;
  if (!qword_1005A5E08)
  {
    v0 = sub_1001E7634(&qword_1005A5BC8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E08);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100267B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = *(int *)(sub_10003A0C8(&qword_1005A5AE8) + 44);
  v29 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v1 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1 + v28 + v29, v1) == 1)
  {
    v25 = a1 + v28 + v29;
    sub_10026244C(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(_BYTE *)(v25 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v25 + 24));
    v24 = v25 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v24);
    sub_10003A0C8(&qword_1005A5B00);
  }
  else
  {
    v27 = a1 + v28 + v29;
    sub_10026244C(*(_QWORD *)v27, *(_QWORD *)(v27 + 8), *(_BYTE *)(v27 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v27 + 24));
    v26 = v27 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v26);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
    sub_10003A0C8(&qword_1005A5B08);
  }
  swift_release();
  sub_10003A0C8(&qword_1005A5B10);
  swift_release();
  v15 = a1 + v28 + v29 + *(int *)(sub_10003A0C8(&qword_1005A5B18) + 48);
  sub_10026244C(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_BYTE *)(v15 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
  v18 = sub_10003A0C8(&qword_1005A5AD8);
  v14 = v15 + *(int *)(v18 + 36);
  v20 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v21 = *(void (**)(uint64_t))(*(_QWORD *)(v20 - 8) + 8);
  v21(v14);
  sub_10003A0C8(&qword_1005A5B20);
  swift_release();
  v16 = a1 + v28 + *(int *)(sub_10003A0C8(&qword_1005A5B28) + 64);
  v17 = v16 + *(int *)(sub_10003A0C8(&qword_1005A5B30) + 44);
  sub_10026244C(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_BYTE *)(v17 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v17 + 24));
  ((void (*)(uint64_t, uint64_t))v21)(v17 + *(int *)(v18 + 36), v20);
  swift_release();
  v19 = v17 + *(int *)(sub_10003A0C8(&qword_1005A5B38) + 48);
  sub_10026244C(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_BYTE *)(v19 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v19 + 24));
  ((void (*)(uint64_t, uint64_t))v21)(v19 + *(int *)(v18 + 36), v20);
  v22 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B40) + 36);
  v23 = v22 + *(int *)(sub_10003A0C8(&qword_1005A5B48) + 44);
  v4 = sub_10003A0C8(&qword_1005A5B50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v23, 1))
  {
    sub_10026244C(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_BYTE *)(v23 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v23 + 24));
    ((void (*)(uint64_t, uint64_t))v21)(v23 + *(int *)(v18 + 36), v20);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
  }
  v12 = sub_10003A0C8(&qword_1005A5B58);
  v13 = v23 + *(int *)(v12 + 48);
  v5 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(v13, v5) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v7 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(uint64_t, uint64_t))v21)(v13 + *(int *)(v7 + 36), v20);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v6 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(uint64_t, uint64_t))v21)(v13 + *(int *)(v6 + 36), v20);
    sub_10003A0C8(&qword_1005A5B70);
    swift_release();
  }
  sub_10003A0C8(&qword_1005A5B78);
  swift_release();
  v11 = v23 + *(int *)(v12 + 64);
  v8 = sub_10003A0C8(&qword_1005A5B80);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v11, 1))
  {
    v10 = v11 + *(int *)(sub_10003A0C8(&qword_1005A5B88) + 48);
    sub_10026244C(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_BYTE *)(v10 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + 24));
    ((void (*)(uint64_t, uint64_t))v21)(v10 + *(int *)(v18 + 36), v20);
  }
  return a1;
}

uint64_t sub_10026814C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  sub_100263464(*(_QWORD *)a1, v5, v6 & 1);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6 & 1;
  v7 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v7);
  *(_QWORD *)(a2 + 24) = v7;
  v8 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2 + v8, a1 + v8);
  return a2;
}

__n128 sub_100268220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 result;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  _QWORD *__dst;
  uint64_t *__src;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v149 = *(int *)(sub_10003A0C8(&qword_1005A5AE8) + 44);
  v2 = a2 + v149;
  *(_OWORD *)v2 = *(_OWORD *)(a1 + v149);
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(a1 + v149 + 16);
  v150 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v151 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1 + v149 + v150, v151) == 1)
  {
    v128 = a1 + v149 + v150;
    v122 = *(_QWORD *)v128;
    v123 = *(_QWORD *)(v128 + 8);
    v124 = *(_BYTE *)(v128 + 16);
    sub_100263464(*(_QWORD *)v128, v123, v124 & 1);
    v129 = a2 + v149 + v150;
    *(_QWORD *)v129 = v122;
    *(_QWORD *)(v129 + 8) = v123;
    *(_BYTE *)(v129 + 16) = v124 & 1;
    v125 = *(_QWORD *)(v128 + 24);
    swift_bridgeObjectRetain(v125);
    *(_QWORD *)(v129 + 24) = v125;
    v9 = sub_10003A0C8(&qword_1005A5AD8);
    v127 = v129 + *(int *)(v9 + 36);
    v126 = v128 + *(int *)(v9 + 36);
    v10 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v127, v126);
    v11 = sub_10003A0C8(&qword_1005A5B00);
    v131 = (_QWORD *)(v129 + *(int *)(v11 + 36));
    v12 = (_QWORD *)(v128 + *(int *)(v11 + 36));
    *v131 = *v12;
    v130 = v12[1];
    v132 = v12[2];
    swift_retain(v132);
    v131[1] = v130;
    v131[2] = v132;
    swift_storeEnumTagMultiPayload(v129, v151, 1);
  }
  else
  {
    v142 = a1 + v149 + v150;
    v133 = *(_QWORD *)v142;
    v134 = *(_QWORD *)(v142 + 8);
    v135 = *(_BYTE *)(v142 + 16);
    sub_100263464(*(_QWORD *)v142, v134, v135 & 1);
    v143 = a2 + v149 + v150;
    *(_QWORD *)v143 = v133;
    *(_QWORD *)(v143 + 8) = v134;
    *(_BYTE *)(v143 + 16) = v135 & 1;
    v136 = *(_QWORD *)(v142 + 24);
    swift_bridgeObjectRetain(v136);
    *(_QWORD *)(v143 + 24) = v136;
    v3 = sub_10003A0C8(&qword_1005A5AD8);
    v138 = v143 + *(int *)(v3 + 36);
    v137 = v142 + *(int *)(v3 + 36);
    v4 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v138, v137);
    v5 = sub_10003A0C8(&qword_1005A5B00);
    v140 = (_QWORD *)(v143 + *(int *)(v5 + 36));
    v6 = (_QWORD *)(v142 + *(int *)(v5 + 36));
    *v140 = *v6;
    v139 = v6[1];
    v141 = v6[2];
    swift_retain(v141);
    v140[1] = v139;
    v140[2] = v141;
    v7 = sub_10003A0C8(&qword_1005A5B08);
    v145 = (_QWORD *)(v143 + *(int *)(v7 + 36));
    v8 = (_QWORD *)(v142 + *(int *)(v7 + 36));
    *v145 = *v8;
    v144 = v8[1];
    v146 = v8[2];
    swift_retain(v146);
    v145[1] = v144;
    v145[2] = v146;
    swift_storeEnumTagMultiPayload(v143, v151, 0);
  }
  v13 = sub_10003A0C8(&qword_1005A5B10);
  v81 = a2 + v149 + v150;
  v80 = v81 + *(int *)(v13 + 36);
  v82 = a1 + v149 + v150;
  v79 = (uint64_t *)(v82 + *(int *)(v13 + 36));
  v77 = *v79;
  v78 = v79[1];
  swift_retain(v78);
  *(_QWORD *)v80 = v77;
  *(_QWORD *)(v80 + 8) = v78;
  *(_OWORD *)(v80 + 16) = *((_OWORD *)v79 + 1);
  v14 = sub_10003A0C8(&qword_1005A5B18);
  v89 = v81 + *(int *)(v14 + 48);
  v90 = v82 + *(int *)(v14 + 48);
  v83 = *(_QWORD *)v90;
  v84 = *(_QWORD *)(v90 + 8);
  v85 = *(_BYTE *)(v90 + 16);
  sub_100263464(*(_QWORD *)v90, v84, v85 & 1);
  *(_QWORD *)v89 = v83;
  *(_QWORD *)(v89 + 8) = v84;
  *(_BYTE *)(v89 + 16) = v85 & 1;
  v86 = *(_QWORD *)(v90 + 24);
  swift_bridgeObjectRetain(v86);
  *(_QWORD *)(v89 + 24) = v86;
  v113 = sub_10003A0C8(&qword_1005A5AD8);
  v88 = v89 + *(int *)(v113 + 36);
  v87 = v90 + *(int *)(v113 + 36);
  v115 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v116 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
  v116(v88, v87);
  v101 = sub_10003A0C8(&qword_1005A5B20);
  v94 = v89 + *(int *)(v101 + 36);
  v93 = (uint64_t *)(v90 + *(int *)(v101 + 36));
  v91 = *v93;
  v92 = v93[1];
  swift_retain(v92);
  *(_QWORD *)v94 = v91;
  *(_QWORD *)(v94 + 8) = v92;
  *(_OWORD *)(v94 + 16) = *((_OWORD *)v93 + 1);
  v15 = sub_10003A0C8(&qword_1005A5B28);
  v16 = a2 + v149 + *(int *)(v15 + 48);
  v17 = a1 + v149 + *(int *)(v15 + 48);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_WORD *)(v16 + 8) = *(_WORD *)(v17 + 8);
  v95 = a2 + v149 + *(int *)(v15 + 64);
  v96 = a1 + v149 + *(int *)(v15 + 64);
  *(_OWORD *)v95 = *(_OWORD *)v96;
  *(_BYTE *)(v95 + 16) = *(_BYTE *)(v96 + 16);
  v18 = sub_10003A0C8(&qword_1005A5B30);
  v106 = v95 + *(int *)(v18 + 44);
  v107 = v96 + *(int *)(v18 + 44);
  v97 = *(_QWORD *)v107;
  v98 = *(_QWORD *)(v107 + 8);
  v99 = *(_BYTE *)(v107 + 16);
  sub_100263464(*(_QWORD *)v107, v98, v99 & 1);
  *(_QWORD *)v106 = v97;
  *(_QWORD *)(v106 + 8) = v98;
  *(_BYTE *)(v106 + 16) = v99 & 1;
  v100 = *(_QWORD *)(v107 + 24);
  swift_bridgeObjectRetain(v100);
  *(_QWORD *)(v106 + 24) = v100;
  ((void (*)(uint64_t, uint64_t, uint64_t))v116)(v106 + *(int *)(v113 + 36), v107 + *(int *)(v113 + 36), v115);
  v105 = v106 + *(int *)(v101 + 36);
  v104 = (uint64_t *)(v107 + *(int *)(v101 + 36));
  v102 = *v104;
  v103 = v104[1];
  swift_retain(v103);
  *(_QWORD *)v105 = v102;
  *(_QWORD *)(v105 + 8) = v103;
  *(_OWORD *)(v105 + 16) = *((_OWORD *)v104 + 1);
  v19 = sub_10003A0C8(&qword_1005A5B38);
  v112 = v106 + *(int *)(v19 + 48);
  v114 = v107 + *(int *)(v19 + 48);
  v108 = *(_QWORD *)v114;
  v109 = *(_QWORD *)(v114 + 8);
  v110 = *(_BYTE *)(v114 + 16);
  sub_100263464(*(_QWORD *)v114, v109, v110 & 1);
  *(_QWORD *)v112 = v108;
  *(_QWORD *)(v112 + 8) = v109;
  *(_BYTE *)(v112 + 16) = v110 & 1;
  v111 = *(_QWORD *)(v114 + 24);
  swift_bridgeObjectRetain(v111);
  *(_QWORD *)(v112 + 24) = v111;
  ((void (*)(uint64_t, uint64_t, uint64_t))v116)(v112 + *(int *)(v113 + 36), v114 + *(int *)(v113 + 36), v115);
  v20 = sub_10003A0C8(&qword_1005A5B40);
  v117 = a2 + *(int *)(v20 + 36);
  v118 = a1 + *(int *)(v20 + 36);
  *(_OWORD *)v117 = *(_OWORD *)v118;
  *(_BYTE *)(v117 + 16) = *(_BYTE *)(v118 + 16);
  v21 = sub_10003A0C8(&qword_1005A5B48);
  __dst = (_QWORD *)(v117 + *(int *)(v21 + 44));
  __src = (uint64_t *)(v118 + *(int *)(v21 + 44));
  v121 = *(_QWORD *)(sub_10003A0C8(&qword_1005A5B50) - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v121 + 48))(__src, 1))
  {
    v29 = sub_10003A0C8(&qword_1005A5BA8);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v70 = *__src;
    v71 = __src[1];
    v72 = *((_BYTE *)__src + 16);
    sub_100263464(*__src, v71, v72 & 1);
    *__dst = v70;
    __dst[1] = v71;
    *((_BYTE *)__dst + 16) = v72 & 1;
    v73 = __src[3];
    swift_bridgeObjectRetain(v73);
    __dst[3] = v73;
    ((void (*)(char *, char *, uint64_t))v116)((char *)__dst + *(int *)(v113 + 36), (char *)__src + *(int *)(v113 + 36), v115);
    v22 = sub_10003A0C8(&qword_1005A5B00);
    v75 = (_QWORD *)((char *)__dst + *(int *)(v22 + 36));
    v23 = (uint64_t *)((char *)__src + *(int *)(v22 + 36));
    *v75 = *v23;
    v74 = v23[1];
    v76 = v23[2];
    swift_retain(v76);
    v75[1] = v74;
    v75[2] = v76;
    v24 = sub_10003A0C8(&qword_1005A5B90);
    memcpy((char *)__dst + *(int *)(v24 + 36), (char *)__src + *(int *)(v24 + 36), 0x30uLL);
    v25 = sub_10003A0C8(&qword_1005A5B98);
    *(_WORD *)((char *)__dst + *(int *)(v25 + 36)) = *(_WORD *)((char *)__src + *(int *)(v25 + 36));
    v26 = sub_10003A0C8(&qword_1005A5BA0);
    v27 = (char *)__dst + *(int *)(v26 + 48);
    v28 = (char *)__src + *(int *)(v26 + 48);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    (*(void (**)(void))(v121 + 56))();
  }
  v66 = sub_10003A0C8(&qword_1005A5B58);
  v67 = (_QWORD *)((char *)__dst + *(int *)(v66 + 48));
  v68 = (uint64_t *)((char *)__src + *(int *)(v66 + 48));
  v69 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(v68, v69) == 1)
  {
    v55 = *v68;
    swift_retain(*v68);
    *v67 = v55;
    v56 = v68[1];
    swift_retain(v56);
    v67[1] = v56;
    v57 = v68[2];
    swift_retain(v57);
    v67[2] = v57;
    v58 = v68[3];
    swift_retain(v58);
    v67[3] = v58;
    v33 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(char *, char *, uint64_t))v116)((char *)v67 + *(int *)(v33 + 36), (char *)v68 + *(int *)(v33 + 36), v115);
    swift_storeEnumTagMultiPayload(v67, v69, 1);
  }
  else
  {
    v59 = *v68;
    swift_retain(*v68);
    *v67 = v59;
    v60 = v68[1];
    swift_retain(v60);
    v67[1] = v60;
    v61 = v68[2];
    swift_retain(v61);
    v67[2] = v61;
    v62 = v68[3];
    swift_retain(v62);
    v67[3] = v62;
    v30 = sub_10003A0C8(&qword_1005A5B68);
    ((void (*)(char *, char *, uint64_t))v116)((char *)v67 + *(int *)(v30 + 36), (char *)v68 + *(int *)(v30 + 36), v115);
    v31 = sub_10003A0C8(&qword_1005A5B70);
    v64 = (_QWORD *)((char *)v67 + *(int *)(v31 + 36));
    v32 = (_QWORD *)((char *)v68 + *(int *)(v31 + 36));
    *v64 = *v32;
    v63 = v32[1];
    v65 = v32[2];
    swift_retain(v65);
    v64[1] = v63;
    v64[2] = v65;
    swift_storeEnumTagMultiPayload(v67, v69, 0);
  }
  v34 = sub_10003A0C8(&qword_1005A5B78);
  v50 = (char *)v67 + *(int *)(v34 + 36);
  v49 = (char *)v68 + *(int *)(v34 + 36);
  v47 = *(_QWORD *)v49;
  v48 = *((_QWORD *)v49 + 1);
  swift_retain(v48);
  *(_QWORD *)v50 = v47;
  *((_QWORD *)v50 + 1) = v48;
  *((_OWORD *)v50 + 1) = *((_OWORD *)v49 + 1);
  v51 = (char *)__dst + *(int *)(v66 + 64);
  v52 = (char *)__src + *(int *)(v66 + 64);
  v53 = sub_10003A0C8(&qword_1005A5B80);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v54 + 48))(v52, 1))
  {
    v38 = sub_10003A0C8(&qword_1005A5BC0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v51[8] = v52[8];
    v35 = sub_10003A0C8(&qword_1005A5B88);
    v45 = &v51[*(int *)(v35 + 48)];
    v46 = &v52[*(int *)(v35 + 48)];
    v41 = *(_QWORD *)v46;
    v42 = *((_QWORD *)v46 + 1);
    v43 = v46[16];
    sub_100263464(*(_QWORD *)v46, v42, v43 & 1);
    *(_QWORD *)v45 = v41;
    *((_QWORD *)v45 + 1) = v42;
    v45[16] = v43 & 1;
    v44 = *((_QWORD *)v46 + 3);
    swift_bridgeObjectRetain(v44);
    *((_QWORD *)v45 + 3) = v44;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v116)(&v45[*(int *)(v113 + 36)], &v46[*(int *)(v113 + 36)], v115);
    v36 = sub_10003A0C8(&qword_1005A5BB0);
    memcpy(&v45[*(int *)(v36 + 36)], &v46[*(int *)(v36 + 36)], 0x30uLL);
    v37 = sub_10003A0C8(&qword_1005A5BB8);
    *(_WORD *)&v45[*(int *)(v37 + 36)] = *(_WORD *)&v46[*(int *)(v37 + 36)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  v39 = sub_10003A0C8(&qword_1005A5BC8);
  result = *(__n128 *)(v118 + *(int *)(v39 + 36));
  *(__n128 *)(v117 + *(int *)(v39 + 36)) = result;
  return result;
}

uint64_t sub_1002690D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *(int *)(sub_10003A0C8(&qword_1005A5B48) + 44);
  v1 = sub_10003A0C8(&qword_1005A5B50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(a1 + v17, 1))
  {
    sub_10026244C(*(_QWORD *)(a1 + v17), *(_QWORD *)(a1 + v17 + 8), *(_BYTE *)(a1 + v17 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v17 + 24));
    v16 = a1 + v17 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v16);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
  }
  v14 = sub_10003A0C8(&qword_1005A5B58);
  v15 = a1 + v17 + *(int *)(v14 + 48);
  v3 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(v15, v3) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v12 = v15 + *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
    v5 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v13 = v15 + *(int *)(sub_10003A0C8(&qword_1005A5B68) + 36);
    v4 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v13);
    sub_10003A0C8(&qword_1005A5B70);
    swift_release();
  }
  sub_10003A0C8(&qword_1005A5B78);
  swift_release();
  v11 = a1 + v17 + *(int *)(v14 + 64);
  v6 = sub_10003A0C8(&qword_1005A5B80);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v11, 1))
  {
    v9 = v11 + *(int *)(sub_10003A0C8(&qword_1005A5B88) + 48);
    sub_10026244C(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_BYTE *)(v9 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
    v10 = v9 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v7 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v10);
  }
  return a1;
}

uint64_t sub_100269404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _BYTE *__dst;
  _BYTE *__src;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v74;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v72 = *(int *)(sub_10003A0C8(&qword_1005A5B48) + 44);
  v74 = *(_QWORD *)(sub_10003A0C8(&qword_1005A5B50) - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v74 + 48))(a1 + v72, 1))
  {
    v11 = sub_10003A0C8(&qword_1005A5BA8);
    memcpy((void *)(a2 + v72), (const void *)(a1 + v72), *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v61 = *(_QWORD *)(a1 + v72);
    v62 = *(_QWORD *)(a1 + v72 + 8);
    v63 = *(_BYTE *)(a1 + v72 + 16);
    sub_100263464(v61, v62, v63 & 1);
    v70 = a2 + v72;
    *(_QWORD *)v70 = v61;
    *(_QWORD *)(v70 + 8) = v62;
    *(_BYTE *)(v70 + 16) = v63 & 1;
    v64 = *(_QWORD *)(a1 + v72 + 24);
    swift_bridgeObjectRetain(v64);
    *(_QWORD *)(v70 + 24) = v64;
    v2 = sub_10003A0C8(&qword_1005A5AD8);
    v66 = a2 + v72 + *(int *)(v2 + 36);
    v65 = a1 + v72 + *(int *)(v2 + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v66, v65);
    v4 = sub_10003A0C8(&qword_1005A5B00);
    v68 = (_QWORD *)(a2 + v72 + *(int *)(v4 + 36));
    v5 = (_QWORD *)(a1 + v72 + *(int *)(v4 + 36));
    *v68 = *v5;
    v67 = v5[1];
    v69 = v5[2];
    swift_retain(v69);
    v68[1] = v67;
    v68[2] = v69;
    v6 = sub_10003A0C8(&qword_1005A5B90);
    memcpy((void *)(a2 + v72 + *(int *)(v6 + 36)), (const void *)(a1 + v72 + *(int *)(v6 + 36)), 0x30uLL);
    v7 = sub_10003A0C8(&qword_1005A5B98);
    *(_WORD *)(v70 + *(int *)(v7 + 36)) = *(_WORD *)(a1 + v72 + *(int *)(v7 + 36));
    v8 = sub_10003A0C8(&qword_1005A5BA0);
    v9 = a2 + v72 + *(int *)(v8 + 48);
    v10 = a1 + v72 + *(int *)(v8 + 48);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
    (*(void (**)(void))(v74 + 56))();
  }
  v57 = sub_10003A0C8(&qword_1005A5B58);
  v58 = (_QWORD *)(a2 + v72 + *(int *)(v57 + 48));
  v59 = (_QWORD *)(a1 + v72 + *(int *)(v57 + 48));
  v60 = sub_10003A0C8(&qword_1005A5B60);
  if (swift_getEnumCaseMultiPayload(v59, v60) == 1)
  {
    v42 = *v59;
    swift_retain(*v59);
    *v58 = v42;
    v43 = v59[1];
    swift_retain(v43);
    v58[1] = v43;
    v44 = v59[2];
    swift_retain(v44);
    v58[2] = v44;
    v45 = v59[3];
    swift_retain(v45);
    v58[3] = v45;
    v16 = sub_10003A0C8(&qword_1005A5B68);
    v47 = (char *)v58 + *(int *)(v16 + 36);
    v46 = (char *)v59 + *(int *)(v16 + 36);
    v17 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v17 - 8) + 16))(v47, v46);
    swift_storeEnumTagMultiPayload(v58, v60, 1);
  }
  else
  {
    v48 = *v59;
    swift_retain(*v59);
    *v58 = v48;
    v49 = v59[1];
    swift_retain(v49);
    v58[1] = v49;
    v50 = v59[2];
    swift_retain(v50);
    v58[2] = v50;
    v51 = v59[3];
    swift_retain(v51);
    v58[3] = v51;
    v12 = sub_10003A0C8(&qword_1005A5B68);
    v53 = (char *)v58 + *(int *)(v12 + 36);
    v52 = (char *)v59 + *(int *)(v12 + 36);
    v13 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v13 - 8) + 16))(v53, v52);
    v14 = sub_10003A0C8(&qword_1005A5B70);
    v55 = (_QWORD *)((char *)v58 + *(int *)(v14 + 36));
    v15 = (_QWORD *)((char *)v59 + *(int *)(v14 + 36));
    *v55 = *v15;
    v54 = v15[1];
    v56 = v15[2];
    swift_retain(v56);
    v55[1] = v54;
    v55[2] = v56;
    swift_storeEnumTagMultiPayload(v58, v60, 0);
  }
  v18 = sub_10003A0C8(&qword_1005A5B78);
  v37 = (char *)v58 + *(int *)(v18 + 36);
  v36 = (char *)v59 + *(int *)(v18 + 36);
  v34 = *(_QWORD *)v36;
  v35 = *((_QWORD *)v36 + 1);
  swift_retain(v35);
  *(_QWORD *)v37 = v34;
  *((_QWORD *)v37 + 1) = v35;
  *((_OWORD *)v37 + 1) = *((_OWORD *)v36 + 1);
  __dst = (_BYTE *)(a2 + v72 + *(int *)(v57 + 64));
  __src = (_BYTE *)(a1 + v72 + *(int *)(v57 + 64));
  v40 = sub_10003A0C8(&qword_1005A5B80);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v41 + 48))(__src, 1))
  {
    v24 = sub_10003A0C8(&qword_1005A5BC0);
    memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[8] = __src[8];
    v19 = sub_10003A0C8(&qword_1005A5B88);
    v32 = &__dst[*(int *)(v19 + 48)];
    v33 = &__src[*(int *)(v19 + 48)];
    v26 = *(_QWORD *)v33;
    v27 = *((_QWORD *)v33 + 1);
    v28 = v33[16];
    sub_100263464(*(_QWORD *)v33, v27, v28 & 1);
    *(_QWORD *)v32 = v26;
    *((_QWORD *)v32 + 1) = v27;
    v32[16] = v28 & 1;
    v29 = *((_QWORD *)v33 + 3);
    swift_bridgeObjectRetain(v29);
    *((_QWORD *)v32 + 3) = v29;
    v20 = sub_10003A0C8(&qword_1005A5AD8);
    v31 = &v32[*(int *)(v20 + 36)];
    v30 = &v33[*(int *)(v20 + 36)];
    v21 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v21 - 8) + 16))(v31, v30);
    v22 = sub_10003A0C8(&qword_1005A5BB0);
    memcpy(&v32[*(int *)(v22 + 36)], &v33[*(int *)(v22 + 36)], 0x30uLL);
    v23 = sub_10003A0C8(&qword_1005A5BB8);
    *(_WORD *)&v32[*(int *)(v23 + 36)] = *(_WORD *)&v33[*(int *)(v23 + 36)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
  }
  return a2;
}

uint64_t sub_100269B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025D520(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_100269B9C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5E28;
  if (!qword_1005A5E28)
  {
    v0 = sub_1001E7634(&qword_1005A5E20);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E28);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100269C0C()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5E30;
  if (!qword_1005A5E30)
  {
    v0 = sub_1001E7634(&qword_1005A5E18);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E30);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100269C7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v1 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1 + v10, v1) == 1)
  {
    sub_10026244C(*(_QWORD *)(a1 + v10), *(_QWORD *)(a1 + v10 + 8), *(_BYTE *)(a1 + v10 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v10 + 24));
    v8 = a1 + v10 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v8);
    sub_10003A0C8(&qword_1005A5B00);
  }
  else
  {
    sub_10026244C(*(_QWORD *)(a1 + v10), *(_QWORD *)(a1 + v10 + 8), *(_BYTE *)(a1 + v10 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + v10 + 24));
    v9 = a1 + v10 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v9);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
    sub_10003A0C8(&qword_1005A5B08);
  }
  swift_release();
  sub_10003A0C8(&qword_1005A5B10);
  swift_release();
  v7 = a1 + v10 + *(int *)(sub_10003A0C8(&qword_1005A5B18) + 48);
  sub_10026244C(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  v6 = v7 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v4 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v6);
  sub_10003A0C8(&qword_1005A5B20);
  swift_release();
  return a1;
}

uint64_t sub_100269ED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10025ED40(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_100269EE0()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5E40;
  if (!qword_1005A5E40)
  {
    v0 = sub_1001E7634(&qword_1005A5E38);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E40);
    return WitnessTable;
  }
  return v3;
}

unint64_t sub_100269F50()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5E48;
  if (!qword_1005A5E48)
  {
    v0 = sub_1001E7634(&qword_1005A5E10);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E48);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_100269FC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v3 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5B30) + 44);
  sub_10026244C(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v3 + 24));
  v4 = sub_10003A0C8(&qword_1005A5AD8);
  v2 = *(int *)(v4 + 36);
  v6 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v7 = *(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v3 + v2);
  sub_10003A0C8(&qword_1005A5B20);
  swift_release();
  v5 = v3 + *(int *)(sub_10003A0C8(&qword_1005A5B38) + 48);
  sub_10026244C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));
  ((void (*)(uint64_t, uint64_t))v7)(v5 + *(int *)(v4 + 36), v6);
  return a1;
}

__n128 sub_10026A0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  __n128 *v32;
  __n128 *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v60;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v58 = *(int *)(sub_10003A0C8(&qword_1005A5AF0) + 44);
  v60 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1 + v58, v60) == 1)
  {
    v34 = *(_QWORD *)(a1 + v58);
    v35 = *(_QWORD *)(a1 + v58 + 8);
    v36 = *(_BYTE *)(a1 + v58 + 16);
    sub_100263464(v34, v35, v36 & 1);
    v40 = a2 + v58;
    *(_QWORD *)v40 = v34;
    *(_QWORD *)(v40 + 8) = v35;
    *(_BYTE *)(v40 + 16) = v36 & 1;
    v37 = *(_QWORD *)(a1 + v58 + 24);
    swift_bridgeObjectRetain(v37);
    *(_QWORD *)(v40 + 24) = v37;
    v8 = sub_10003A0C8(&qword_1005A5AD8);
    v39 = a2 + v58 + *(int *)(v8 + 36);
    v38 = a1 + v58 + *(int *)(v8 + 36);
    v9 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v39, v38);
    v10 = sub_10003A0C8(&qword_1005A5B00);
    v42 = (_QWORD *)(a2 + v58 + *(int *)(v10 + 36));
    v11 = (_QWORD *)(a1 + v58 + *(int *)(v10 + 36));
    *v42 = *v11;
    v41 = v11[1];
    v43 = v11[2];
    swift_retain(v43);
    v42[1] = v41;
    v42[2] = v43;
    swift_storeEnumTagMultiPayload(a2 + v58, v60, 1);
  }
  else
  {
    v44 = *(_QWORD *)(a1 + v58);
    v45 = *(_QWORD *)(a1 + v58 + 8);
    v46 = *(_BYTE *)(a1 + v58 + 16);
    sub_100263464(v44, v45, v46 & 1);
    v53 = a2 + v58;
    *(_QWORD *)v53 = v44;
    *(_QWORD *)(v53 + 8) = v45;
    *(_BYTE *)(v53 + 16) = v46 & 1;
    v47 = *(_QWORD *)(a1 + v58 + 24);
    swift_bridgeObjectRetain(v47);
    *(_QWORD *)(v53 + 24) = v47;
    v2 = sub_10003A0C8(&qword_1005A5AD8);
    v49 = a2 + v58 + *(int *)(v2 + 36);
    v48 = a1 + v58 + *(int *)(v2 + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v49, v48);
    v4 = sub_10003A0C8(&qword_1005A5B00);
    v51 = (_QWORD *)(a2 + v58 + *(int *)(v4 + 36));
    v5 = (_QWORD *)(a1 + v58 + *(int *)(v4 + 36));
    *v51 = *v5;
    v50 = v5[1];
    v52 = v5[2];
    swift_retain(v52);
    v51[1] = v50;
    v51[2] = v52;
    v6 = sub_10003A0C8(&qword_1005A5B08);
    v55 = (_QWORD *)(a2 + v58 + *(int *)(v6 + 36));
    v7 = (_QWORD *)(a1 + v58 + *(int *)(v6 + 36));
    *v55 = *v7;
    v54 = v7[1];
    v56 = v7[2];
    swift_retain(v56);
    v55[1] = v54;
    v55[2] = v56;
    swift_storeEnumTagMultiPayload(a2 + v58, v60, 0);
  }
  v12 = sub_10003A0C8(&qword_1005A5B10);
  v21 = a2 + v58 + *(int *)(v12 + 36);
  v20 = (uint64_t *)(a1 + v58 + *(int *)(v12 + 36));
  v18 = *v20;
  v19 = v20[1];
  swift_retain(v19);
  *(_QWORD *)v21 = v18;
  *(_QWORD *)(v21 + 8) = v19;
  *(_OWORD *)(v21 + 16) = *((_OWORD *)v20 + 1);
  v13 = sub_10003A0C8(&qword_1005A5B18);
  v28 = a2 + v58 + *(int *)(v13 + 48);
  v29 = a1 + v58 + *(int *)(v13 + 48);
  v22 = *(_QWORD *)v29;
  v23 = *(_QWORD *)(v29 + 8);
  v24 = *(_BYTE *)(v29 + 16);
  sub_100263464(*(_QWORD *)v29, v23, v24 & 1);
  *(_QWORD *)v28 = v22;
  *(_QWORD *)(v28 + 8) = v23;
  *(_BYTE *)(v28 + 16) = v24 & 1;
  v25 = *(_QWORD *)(v29 + 24);
  swift_bridgeObjectRetain(v25);
  *(_QWORD *)(v28 + 24) = v25;
  v14 = sub_10003A0C8(&qword_1005A5AD8);
  v27 = v28 + *(int *)(v14 + 36);
  v26 = v29 + *(int *)(v14 + 36);
  v15 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v27, v26);
  v16 = sub_10003A0C8(&qword_1005A5B20);
  v33 = (__n128 *)(v28 + *(int *)(v16 + 36));
  v32 = (__n128 *)(v29 + *(int *)(v16 + 36));
  v30 = v32->n128_u64[0];
  v31 = v32->n128_u64[1];
  swift_retain(v31);
  v33->n128_u64[0] = v30;
  v33->n128_u64[1] = v31;
  result = v32[1];
  v33[1] = result;
  return result;
}

uint64_t sub_10026A5E4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = a2;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_WORD *)(a2 + 8) = *(_WORD *)(a1 + 8);
  return result;
}

uint64_t sub_10026A600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v5 = *(int *)(sub_10003A0C8(&qword_1005A5B30) + 44);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = *(_BYTE *)(a1 + v5 + 16);
  sub_100263464(v6, v7, v8 & 1);
  v15 = a2 + v5;
  *(_QWORD *)v15 = v6;
  *(_QWORD *)(v15 + 8) = v7;
  *(_BYTE *)(v15 + 16) = v8 & 1;
  v9 = *(_QWORD *)(a1 + v5 + 24);
  swift_bridgeObjectRetain(v9);
  *(_QWORD *)(v15 + 24) = v9;
  v20 = sub_10003A0C8(&qword_1005A5AD8);
  v10 = *(int *)(v20 + 36);
  v24 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(a2 + v5 + v10, a1 + v5 + v10);
  v11 = *(int *)(sub_10003A0C8(&qword_1005A5B20) + 36);
  v14 = (uint64_t *)(a1 + v5 + v11);
  v12 = *v14;
  v13 = v14[1];
  swift_retain(v13);
  v2 = a2 + v5 + v11;
  *(_QWORD *)v2 = v12;
  *(_QWORD *)(v2 + 8) = v13;
  *(_OWORD *)(v2 + 16) = *((_OWORD *)v14 + 1);
  v16 = *(int *)(sub_10003A0C8(&qword_1005A5B38) + 48);
  v23 = a1 + v5 + v16;
  v17 = *(_QWORD *)v23;
  v18 = *(_QWORD *)(v23 + 8);
  v19 = *(_BYTE *)(v23 + 16);
  sub_100263464(*(_QWORD *)v23, v18, v19 & 1);
  v22 = a2 + v5 + v16;
  *(_QWORD *)v22 = v17;
  *(_QWORD *)(v22 + 8) = v18;
  *(_BYTE *)(v22 + 16) = v19 & 1;
  v21 = *(_QWORD *)(v23 + 24);
  swift_bridgeObjectRetain(v21);
  *(_QWORD *)(v22 + 24) = v21;
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v22 + *(int *)(v20 + 36), v23 + *(int *)(v20 + 36), v24);
  return a2;
}

unint64_t sub_10026A840()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5E58;
  if (!qword_1005A5E58)
  {
    v0 = sub_1001E7634(&qword_1005A5E50);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E58);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026A8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = type metadata accessor for InstantAnswerFlightContentView(0);
  v1 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = v9 + *(_QWORD *)(v1 + 64);
  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(unint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(v6 + v9 + *(int *)(v7 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  return swift_deallocObject(v6, v8);
}

uint64_t sub_10026AA44(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InstantAnswerFlightContentView(0) - 8) + 80);
  return sub_10025F5D0(v2 + ((v3 + 16) & ~v3), a1, a2);
}

unint64_t sub_10026AA8C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5E60;
  if (!qword_1005A5E60)
  {
    v2 = sub_1001E7634(&qword_1005A5B20);
    sub_1002634E8();
    sub_1002639D8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E60);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026AB18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v3 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v1 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(a1 + v3);
  sub_10003A0C8(&qword_1005A5B20);
  swift_release();
  return a1;
}

__n128 sub_10026ABB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 *v3;
  __n128 result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  sub_100263464(*(_QWORD *)a1, v6, v7 & 1);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  v8 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)(a2 + 24) = v8;
  v9 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2 + v9, a1 + v9);
  v12 = *(int *)(sub_10003A0C8(&qword_1005A5B20) + 36);
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  swift_retain(v14);
  v3 = (__n128 *)(a2 + v12);
  v3->n128_u64[0] = v13;
  v3->n128_u64[1] = v14;
  result = *(__n128 *)(a1 + v12 + 16);
  v3[1] = result;
  return result;
}

unint64_t sub_10026ACF0()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5E70;
  if (!qword_1005A5E70)
  {
    v2 = sub_1001E7634(&qword_1005A5B08);
    sub_100264E58();
    sub_100264EE4();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E70);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026AD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = type metadata accessor for InstantAnswerFlightContentView(0);
  v1 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = v9 + *(_QWORD *)(v1 + 64);
  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(unint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(v6 + v9 + *(int *)(v7 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  return swift_deallocObject(v6, v8);
}

uint64_t sub_10026AF04(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InstantAnswerFlightContentView(0) - 8) + 80);
  return sub_10025E8B0(v2 + ((v3 + 16) & ~v3), a1, a2);
}

unint64_t sub_10026AF4C()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5E78;
  if (!qword_1005A5E78)
  {
    v2 = sub_1001E7634(&qword_1005A5E68);
    sub_10026ACF0();
    sub_100264E58();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E78);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026AFD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    v5 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v5);
    sub_10003A0C8(&qword_1005A5B00);
  }
  else
  {
    sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    v6 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v6);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
    sub_10003A0C8(&qword_1005A5B08);
  }
  swift_release();
  return a1;
}

unint64_t sub_10026B140()
{
  unint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;

  v3 = qword_1005A5E80;
  if (!qword_1005A5E80)
  {
    v2 = sub_1001E7634(&qword_1005A5B10);
    sub_10026AF4C();
    sub_1002639D8();
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5E80);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026B1CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    v5 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v5);
    sub_10003A0C8(&qword_1005A5B00);
  }
  else
  {
    sub_10026244C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16) & 1);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    v6 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
    v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v6);
    sub_10003A0C8(&qword_1005A5B00);
    swift_release();
    sub_10003A0C8(&qword_1005A5B08);
  }
  swift_release();
  sub_10003A0C8(&qword_1005A5B10);
  swift_release();
  return a1;
}

uint64_t sub_10026B354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = type metadata accessor for InstantAnswerFlightContentView(0);
  v1 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v8 = v9 + *(_QWORD *)(v1 + 64);
  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(unint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = (_QWORD *)(v6 + v9 + *(int *)(v7 + 36));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[7]);
  swift_bridgeObjectRelease(v5[9]);
  return swift_deallocObject(v6, v8);
}

uint64_t sub_10026B4DC(Swift::Double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InstantAnswerFlightContentView(0) - 8) + 80);
  return sub_10025EC78(v2 + ((v3 + 16) & ~v3), a1, a2);
}

__n128 sub_10026B524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 result;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  __n128 *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v41;

  v41 = sub_10003A0C8(&qword_1005A5AF8);
  if (swift_getEnumCaseMultiPayload(a1, v41) == 1)
  {
    v18 = *(_QWORD *)a1;
    v19 = *(_QWORD *)(a1 + 8);
    v20 = *(_BYTE *)(a1 + 16);
    sub_100263464(*(_QWORD *)a1, v19, v20 & 1);
    *(_QWORD *)a2 = v18;
    *(_QWORD *)(a2 + 8) = v19;
    *(_BYTE *)(a2 + 16) = v20 & 1;
    v21 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain(v21);
    *(_QWORD *)(a2 + 24) = v21;
    v8 = sub_10003A0C8(&qword_1005A5AD8);
    v23 = a2 + *(int *)(v8 + 36);
    v22 = a1 + *(int *)(v8 + 36);
    v9 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v23, v22);
    v10 = sub_10003A0C8(&qword_1005A5B00);
    v25 = (_QWORD *)(a2 + *(int *)(v10 + 36));
    v11 = (_QWORD *)(a1 + *(int *)(v10 + 36));
    *v25 = *v11;
    v24 = v11[1];
    v26 = v11[2];
    swift_retain(v26);
    v25[1] = v24;
    v25[2] = v26;
    swift_storeEnumTagMultiPayload(a2, v41, 1);
  }
  else
  {
    v27 = *(_QWORD *)a1;
    v28 = *(_QWORD *)(a1 + 8);
    v29 = *(_BYTE *)(a1 + 16);
    sub_100263464(*(_QWORD *)a1, v28, v29 & 1);
    *(_QWORD *)a2 = v27;
    *(_QWORD *)(a2 + 8) = v28;
    *(_BYTE *)(a2 + 16) = v29 & 1;
    v30 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain(v30);
    *(_QWORD *)(a2 + 24) = v30;
    v2 = sub_10003A0C8(&qword_1005A5AD8);
    v32 = a2 + *(int *)(v2 + 36);
    v31 = a1 + *(int *)(v2 + 36);
    v3 = type metadata accessor for AccessibilityAttachmentModifier(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v32, v31);
    v4 = sub_10003A0C8(&qword_1005A5B00);
    v34 = (_QWORD *)(a2 + *(int *)(v4 + 36));
    v5 = (_QWORD *)(a1 + *(int *)(v4 + 36));
    *v34 = *v5;
    v33 = v5[1];
    v35 = v5[2];
    swift_retain(v35);
    v34[1] = v33;
    v34[2] = v35;
    v6 = sub_10003A0C8(&qword_1005A5B08);
    v37 = (_QWORD *)(a2 + *(int *)(v6 + 36));
    v7 = (_QWORD *)(a1 + *(int *)(v6 + 36));
    *v37 = *v7;
    v36 = v7[1];
    v38 = v7[2];
    swift_retain(v38);
    v37[1] = v36;
    v37[2] = v38;
    swift_storeEnumTagMultiPayload(a2, v41, 0);
  }
  v12 = sub_10003A0C8(&qword_1005A5B10);
  v17 = (__n128 *)(a2 + *(int *)(v12 + 36));
  v16 = (__n128 *)(a1 + *(int *)(v12 + 36));
  v14 = v16->n128_u64[0];
  v15 = v16->n128_u64[1];
  swift_retain(v15);
  v17->n128_u64[0] = v14;
  v17->n128_u64[1] = v15;
  result = v16[1];
  v17[1] = result;
  return result;
}

void sub_10026B878(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v7;
  id v8;
  UICellConfigurationState v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  id v29;
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String_optional v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  id v60;
  uint64_t *v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t countAndFlagsBits;
  void *v66;
  NSBundle v67;
  void *v68;
  void *object;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  NSBundle v92;
  void *v93;
  void *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Swift::String v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  Builtin::Word v115;
  char *v116;
  uint64_t v117;
  Swift::String *v118;
  uint64_t *v119;
  _QWORD *v120;
  _QWORD *v121;
  MobileMail::InstantAnswerView::Model::Hotel *v122;
  void *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  Swift::String *v135;
  uint64_t v136;
  uint64_t v137;
  Swift::String *v138;
  unint64_t v139;
  uint64_t v140;
  int __c;
  size_t __len;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  unint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  objc_class *ObjectType;
  Class isa;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  _QWORD v173[27];
  uint64_t v174;
  void *v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  void *v179;
  objc_super v180;
  void *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  MobileMail::InstantAnswerView::Model::Hotel v185;
  _QWORD v186[8];
  _QWORD v187[8];
  Swift::String v188;
  Swift::String v189;

  v163 = a1;
  v164 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v184 = 0;
  v183 = 0;
  v182 = 0;
  v181 = 0;
  v140 = 0;
  v176 = 0;
  v177 = 0;
  v174 = 0;
  v175 = 0;
  __c = 0;
  __len = 64;
  memset(&v173[5], 0, 176);
  v143 = sub_10003A0C8(&qword_1005A5A18);
  v144 = *(_QWORD *)(v143 - 8);
  v145 = (*(_QWORD *)(v144 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v143);
  v146 = (char *)&v62 - v145;
  v184 = (char *)&v62 - v145;
  v159 = 0;
  v147 = type metadata accessor for DateComponents(0);
  v148 = *(_QWORD *)(v147 - 8);
  v149 = (*(_QWORD *)(v148 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v159);
  v150 = (char *)&v62 - v149;
  v151 = type metadata accessor for Calendar(v2);
  v152 = *(_QWORD *)(v151 - 8);
  v153 = (*(_QWORD *)(v152 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v151);
  v154 = (char *)&v62 - v153;
  v155 = sub_10003A0C8(&qword_1005A4F00);
  v156 = (*(_QWORD *)(*(_QWORD *)(v155 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v155);
  v157 = (uint64_t)&v62 - v156;
  v158 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A59C8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v159);
  v171 = (char *)&v62 - v158;
  v172 = type metadata accessor for SearchItem.InstantAnswer(v3);
  v170 = *(_QWORD *)(v172 - 8);
  v160 = (*(_QWORD *)(v170 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v159);
  v161 = (char *)&v62 - v160;
  v183 = (char *)&v62 - v160;
  v166 = type metadata accessor for UICellConfigurationState(v4);
  v165 = *(_QWORD *)(v166 - 8);
  v162 = (*(_QWORD *)(v165 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = (void *)__chkstk_darwin(v164);
  v6 = (char *)&v62 - v162;
  v167 = (char *)&v62 - v162;
  v182 = v7;
  v181 = v5;
  v8 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v6, v163, v166);
  v9.super.super.isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v10 = v164;
  isa = v9.super.super.isa;
  (*(void (**)(char *, uint64_t))(v165 + 8))(v167, v166);
  v180.receiver = v10;
  v180.super_class = ObjectType;
  objc_msgSendSuper2(&v180, "_bridgedUpdateConfigurationUsingState:", isa);

  v11 = v10;
  sub_10025857C(v171);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v171, 1, v172) == 1)
  {
    sub_1002588C0((uint64_t)v171);

  }
  else
  {
    v12 = v140;
    (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v161, v171, v172);

    v13 = static Calendar.current.getter();
    SearchItem.InstantAnswer.hotelCheckinDateComponents.getter(v13);
    Calendar.date(from:)(v150);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v150, v147);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v154, v151);
    v14 = sub_10026C464(v164);
    v134 = v15;
    v135 = &v62;
    v137 = 15;
    v136 = 32;
    v63 = __chkstk_darwin(v14);
    v64 = v16;
    v138 = &v62;
    v139 = (v137 + 32) & 0xFFFFFFFFFFFFFFF0;
    __chkstk_darwin(&v62);
    v17 = (char *)&v62 - v139;
    *((_QWORD *)v17 + 2) = sub_10026C634;
    *((_QWORD *)v17 + 3) = v18;
    sub_10026C6AC((void (*)(char *, char *))sub_10026C680, (uint64_t)v17, v19, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v20, (uint64_t)&v178);
    if (v12)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      v21 = sub_100221CBC(v157);
      v132 = v178;
      v133 = v179;
      if (v179)
      {
        v130 = v132;
        v131 = v133;
        v126 = v133;
        v127 = v132;
        v176 = v132;
        v177 = v133;
        v128 = SearchItem.InstantAnswer.hotelReservationForAddressLocality.getter(v21);
        v129 = v22;
        if (v22)
        {
          v124 = v128;
          v125 = v129;
          v123 = v129;
          v63 = v128;
          v174 = v128;
          v175 = v129;
          v23 = swift_bridgeObjectRetain(v126);
          v24 = SearchItem.InstantAnswer.hotelReservationForName.getter(v23);
          v25 = v164;
          v62._countAndFlagsBits = v24;
          v62._object = v26;
          swift_bridgeObjectRetain(v123);
          v27._countAndFlagsBits = v127;
          v28._countAndFlagsBits = v63;
          v28._object = v123;
          v27._object = v126;
          v122 = &v185;
          InstantAnswerView.Model.Hotel.init(travelDate:name:location:)(&v185, v27, v62, v28);
          *(MobileMail::InstantAnswerView::Model::Hotel *)&v173[21] = v185;
          v78 = (id)MFImageGlyphInstantAnswersViewMessage;
          v29 = MFImageGlyphInstantAnswersViewMessage;
          v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
          v72 = v30;
          v87 = 1;
          v31 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("View Message", 0xCuLL, 1);
          countAndFlagsBits = v31._countAndFlagsBits;
          object = v31._object;
          v88 = "";
          v115 = 0;
          v32 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0, v87 & 1);
          v64 = v32._countAndFlagsBits;
          v68 = v32._object;
          v67.super.isa = (Class)sub_10003DBA4();
          v33 = sub_10003DB7C();
          v188._countAndFlagsBits = v64;
          v34.value._object = (void *)v115;
          v35._countAndFlagsBits = v33;
          v36._countAndFlagsBits = countAndFlagsBits;
          v35._object = v37;
          v36._object = object;
          v66 = v35._object;
          v188._object = v68;
          v34.value._countAndFlagsBits = v115;
          v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v34, v67, v35, v188);
          swift_bridgeObjectRelease(v66);

          swift_bridgeObjectRelease(v68);
          swift_bridgeObjectRelease(object);
          v77 = (id)MSAccessibilityIdentifierInstantAnswersViewMessageButton;
          v38 = MSAccessibilityIdentifierInstantAnswersViewMessageButton;
          v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
          v75 = v39;
          v96 = &unk_100528490;
          v97 = 24;
          v95 = 7;
          v76 = swift_allocObject(&unk_100528490, 24, 7);
          v70 = v76 + 16;
          v40 = v25;
          swift_unknownObjectWeakInit(v70);

          swift_retain(v76);
          v121 = v186;
          InstantAnswerView.Model.Action.init(iconSymbolName:title:accessibilityIdentifier:handler:)(v71, v72, v73._countAndFlagsBits, (uint64_t)v73._object, v74, v75, (uint64_t)sub_10025AAD4, v76, v186);
          v79 = v186[0];
          v80 = v186[1];
          v81 = v186[2];
          v82 = v186[3];
          v83 = v186[4];
          v84 = v186[5];
          v85 = v186[6];
          v86 = v186[7];
          swift_release();

          v173[13] = v79;
          v173[14] = v80;
          v173[15] = v81;
          v173[16] = v82;
          v173[17] = v83;
          v173[18] = v84;
          v173[19] = v85;
          v173[20] = v86;
          v106 = (id)MFImageGlyphInstantAnswersOpenMaps;
          v41 = MFImageGlyphInstantAnswersOpenMaps;
          v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
          v100 = v42;
          v43 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Open Maps", 9uLL, v87 & 1);
          v90 = v43._countAndFlagsBits;
          v94 = v43._object;
          v44 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v88, v115, v87 & 1);
          v89 = v44._countAndFlagsBits;
          v93 = v44._object;
          v92.super.isa = (Class)sub_10003DBA4();
          v45 = sub_10003DB7C();
          v189._countAndFlagsBits = v89;
          v46.value._object = (void *)v115;
          v47._countAndFlagsBits = v45;
          v48._countAndFlagsBits = v90;
          v47._object = v49;
          v48._object = v94;
          v91 = v47._object;
          v189._object = v93;
          v46.value._countAndFlagsBits = v115;
          v101 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v46, v92, v47, v189);
          swift_bridgeObjectRelease(v91);

          swift_bridgeObjectRelease(v93);
          swift_bridgeObjectRelease(v94);
          v105 = (id)MSAccessibilityIdentifierInstantAnswersHotelOpenMapsButton;
          v50 = MSAccessibilityIdentifierInstantAnswersHotelOpenMapsButton;
          v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
          v103 = v51;
          v104 = swift_allocObject(v96, v97, v95);
          v98 = v104 + 16;
          v52 = v25;
          swift_unknownObjectWeakInit(v98);

          swift_retain(v104);
          v120 = v187;
          InstantAnswerView.Model.Action.init(iconSymbolName:title:accessibilityIdentifier:handler:)(v99, v100, v101._countAndFlagsBits, (uint64_t)v101._object, v102, v103, (uint64_t)sub_10026CA3C, v104, v187);
          v107 = v187[0];
          v108 = v187[1];
          v109 = v187[2];
          v110 = v187[3];
          v111 = v187[4];
          v112 = v187[5];
          v113 = v187[6];
          v114 = v187[7];
          swift_release();

          v173[5] = v107;
          v173[6] = v108;
          v173[7] = v109;
          v173[8] = v110;
          v173[9] = v111;
          v173[10] = v112;
          v173[11] = v113;
          v173[12] = v114;
          sub_10026CDE0(v122);
          sub_10025AFA0(v121);
          sub_10025AFA0(v120);
          v53 = v25;
          v118 = &v62;
          v54 = __chkstk_darwin(v115);
          v55 = v120;
          v56 = v121;
          v58 = (uint64_t *)((char *)&v62._countAndFlagsBits - v57);
          v116 = (char *)&v62 - v57;
          v58[2] = v122;
          v58[3] = v56;
          v58[4] = v55;
          v58[5] = v25;
          v117 = type metadata accessor for InstantAnswerView(v54);
          v59 = sub_10025B010();
          UIHostingConfiguration<>.init(content:)(sub_10026CE2C, v116, v117, v59);
          sub_10026CE40(v122);
          sub_10025B0EC(v121);
          sub_10025B0EC(v120);

          v60 = v25;
          v119 = v173;
          v173[3] = v143;
          v173[4] = sub_10025B148();
          v61 = sub_1001F2690(v119);
          (*(void (**)(uint64_t *, char *, uint64_t))(v144 + 16))(v61, v146, v143);
          UICollectionViewCell.contentConfiguration.setter(v119);

          (*(void (**)(char *, uint64_t))(v144 + 8))(v146, v143);
          sub_10025B0EC(v120);
          sub_10025B0EC(v121);
          sub_10026CE40(v122);
          swift_bridgeObjectRelease(v123);
        }
        swift_bridgeObjectRelease(v126);
        (*(void (**)(char *, uint64_t))(v170 + 8))(v161, v172);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v170 + 8))(v161, v172);
      }
    }
  }
}

uint64_t (*sub_10026C464(void *a1))(uint64_t a1)
{
  id v1;

  v1 = a1;
  *(_QWORD *)(swift_allocObject(&unk_1005284B8, 24, 7) + 16) = a1;
  return sub_10026D084;
}

uint64_t sub_10026C4C4(uint64_t a1)
{
  return sub_100258CC8(a1);
}

uint64_t sub_10026C504(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6[1] = a1;
  v11 = a2;
  v10 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v10 - 8);
  v6[0] = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v8 = (char *)v6 - v6[0];
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A4F00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v8);
  v12 = (uint64_t)v6 - v7;
  (*(void (**)(uint64_t))(v3 + 16))(v2);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v8, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v10);
  v14 = v11(v12);
  v13 = v4;
  sub_100221CBC(v12);
  return v14;
}

uint64_t sub_10026C634(uint64_t a1)
{
  uint64_t v1;

  return sub_10026C504(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10026C640@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = a1();
  *a2 = result;
  a2[1] = v3;
  return result;
}

uint64_t sub_10026C680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10026C640(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_10026C6AC@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  void (*v19)(char *, char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v18 = a7;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v25 = a6;
  v37 = a4;
  v36 = a5;
  v26 = *(_QWORD *)(a4 - 8);
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v7);
  v28 = (char *)v17 - v27;
  v33 = *(_QWORD *)(v9 + 16);
  v35 = v33;
  v32 = *(_QWORD *)(v33 - 8);
  v29 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = __chkstk_darwin(v8);
  v30 = (char *)v17 - v29;
  v31 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = (const void *)__chkstk_darwin(v10);
  v34 = (char *)v17 - v31;
  sub_1001F2AE4(v12, (char *)v17 - v31, v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33) == 1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1);
    v17[1] = v24;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, v34, v33);
    v16 = v24;
    v19(v30, v28);
    v17[0] = v16;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v33);
    if (v16)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v28, v22);
    else
      return v17[0];
  }
  return result;
}

uint64_t sub_10026C8C8()
{
  uint64_t v0;
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v2, 24);
}

void sub_10026C904(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[24];
  uint64_t v12;

  v10 = 0;
  v6 = a1 + 16;
  v12 = a1 + 16;
  swift_beginAccess(a1 + 16);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v6);
  swift_endAccess(v11);
  if (Strong)
  {
    v10 = Strong;
    v1 = Strong;
    v8 = sub_10025814C();
    v9 = v2;
    if (v8)
    {
      v5 = v8;
      v4 = v9;
      swift_unknownObjectRetain(v8);
      sub_100213BD8(&v8);

      ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t))(v4 + 24))(Strong, ObjectType);
      swift_unknownObjectRelease(v5);
    }
    else
    {
      sub_100213BD8(&v8);

    }
  }
}

void sub_10026CA3C()
{
  uint64_t v0;

  sub_10026C904(v0);
}

uint64_t sub_10026CA44@<X0>(const void *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  const void *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  size_t v25;
  uint64_t v26;
  ValueMetadata *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD __b[6];
  char *v46;
  _QWORD __dst[6];
  _QWORD v48[11];
  char v49;

  v37 = a5;
  v19 = a1;
  v22 = a2;
  v24 = a3;
  v34 = a4;
  v46 = 0;
  v18 = 48;
  memset(__b, 0, sizeof(__b));
  v44 = 0;
  v43 = 0;
  v42 = 0;
  memcpy(__dst, v19, sizeof(__dst));
  v28 = __dst[0];
  v29 = __dst[1];
  v30 = __dst[2];
  v31 = __dst[3];
  v32 = __dst[4];
  v33 = __dst[5];
  v38 = type metadata accessor for InstantAnswerView(0);
  v21 = *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64);
  v20 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v19);
  v40 = (uint64_t *)((char *)&v18 - v20);
  v7 = (_QWORD *)__chkstk_darwin(v6);
  v41 = (uint64_t *)((char *)&v18 - v8);
  v46 = (char *)&v18 - v8;
  __b[0] = v9;
  __b[1] = v10;
  __b[2] = v30;
  __b[3] = v31;
  __b[4] = v32;
  __b[5] = v11;
  v44 = v12;
  v43 = v13;
  v42 = a4;
  sub_10026CDE0(v7);
  v27 = &type metadata for InstantAnswerView.Model.Action;
  v26 = _allocateUninitializedArray<A>(_:)(2, &type metadata for InstantAnswerView.Model.Action);
  v23 = v14;
  sub_10025AFA0(v22);
  v25 = 64;
  memcpy(v23, v22, 0x40uLL);
  sub_10025AFA0(v24);
  memcpy(v23 + 64, v24, v25);
  v15 = v26;
  sub_10003CB20();
  v35 = v48;
  v48[0] = v28;
  v48[1] = v29;
  v48[2] = v30;
  v48[3] = v31;
  v48[4] = v32;
  v48[5] = v33;
  v48[6] = v15;
  memset(&v48[7], 0, 32);
  v49 = 1;
  v16 = a4;
  v36 = sub_1002583C0();

  InstantAnswerView.init(model:state:)(v35, v36, v40);
  v39 = sub_10025B010();
  sub_100253AA8((uint64_t)v40, v38, (uint64_t)v41);
  sub_10025B568((uint64_t)v40);
  sub_10025B708(v41, v40);
  sub_100253AA8((uint64_t)v40, v38, v37);
  sub_10025B568((uint64_t)v40);
  return sub_10025B568((uint64_t)v41);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10026CDE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[5];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
}

uint64_t sub_10026CE2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10026CA44(*(const void **)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD **)(v1 + 32), *(void **)(v1 + 40), a1);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_10026CE40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[5];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
}

uint64_t sub_10026CFCC()
{
  return type metadata accessor for InstantAnswerHotelCell(0);
}

uint64_t type metadata accessor for InstantAnswerHotelCell(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A5EB0;
  if (!qword_1005A5EB0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstantAnswerHotelCell);
  return v2;
}

uint64_t sub_10026D048()
{
  uint64_t v0;
  uint64_t v2;

  return swift_deallocObject(v2, 24);
}

uint64_t sub_10026D084(uint64_t a1)
{
  return sub_10026C4C4(a1);
}

uint64_t sub_10026D08C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;

  v16 = a1;
  v24 = 0;
  v23 = 0;
  v11 = 0;
  v2 = type metadata accessor for InstantAnswerHotelContentView(0);
  v7 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v15 = (unint64_t *)((char *)&v7 - v7);
  v17 = sub_10003A0C8(&qword_1005A5EC0);
  v8 = (*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v17);
  v19 = (uint64_t)&v7 - v8;
  v9 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin((char *)&v7 - v8);
  v20 = (uint64_t)&v7 - v9;
  v24 = (char *)&v7 - v9;
  v23 = v1;
  v14 = static HorizontalAlignment.leading.getter(v4);
  sub_10026DDC8(v10, v15);
  v12 = &v21;
  v22 = v15;
  v13 = sub_10003A0C8(&qword_1005A5EC8);
  v5 = sub_10026DF10();
  VStack.init(alignment:spacing:content:)(v14, v11, 1, sub_10026DF08, v12, v13, v5);
  sub_10026DF80((uint64_t)v15);
  v18 = sub_10026E030();
  sub_100253AA8(v19, v17, v20);
  sub_10026E0A0(v19);
  sub_10026E210(v20, v19);
  sub_100253AA8(v19, v17, v16);
  sub_10026E0A0(v19);
  return sub_10026E0A0(v20);
}

uint64_t type metadata accessor for InstantAnswerHotelContentView(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A5F48;
  if (!qword_1005A5F48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstantAnswerHotelContentView);
  return v2;
}

uint64_t sub_10026D29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  _UNKNOWN **v127;
  void *v128;
  void *v129;
  uint64_t *v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  void *v140;
  void *v141;
  uint64_t v142;
  id v143;
  _QWORD *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  _QWORD v155[3];
  _QWORD v156[3];
  _QWORD v157[2];
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned __int8 v179;
  uint64_t v180;
  _QWORD v181[2];
  uint64_t v182;
  _QWORD v183[2];
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned __int8 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unsigned __int8 v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned __int8 v205;
  uint64_t v206;
  _QWORD v207[2];
  _QWORD v208[2];
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned __int8 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unsigned __int8 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unsigned __int8 v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unsigned __int8 v238;
  uint64_t v239;
  _QWORD v240[2];
  uint64_t v241;
  char *v242;
  char *v243;

  v82 = a2;
  v117 = a1;
  v243 = 0;
  v242 = 0;
  v241 = 0;
  v182 = 0;
  v148 = sub_10003A0C8(&qword_1005A5B00);
  v83 = (*(_QWORD *)(*(_QWORD *)(v148 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v148);
  v150 = (uint64_t)&v60 - v83;
  v84 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v60 - v83);
  v147 = (uint64_t)&v60 - v84;
  v243 = (char *)&v60 - v84;
  v145 = sub_10003A0C8(&qword_1005A5AD8);
  v85 = (*(_QWORD *)(*(_QWORD *)(v145 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v117);
  v86 = (uint64_t)&v60 - v85;
  v87 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v3);
  v88 = (uint64_t)&v60 - v87;
  v89 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v5);
  v151 = (uint64_t)&v60 - v89;
  v90 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v115 = (uint64_t)&v60 - v90;
  v242 = (char *)&v60 - v90;
  v241 = v9;
  v116 = type metadata accessor for InstantAnswerHotelContentView(0);
  v10 = (uint64_t *)(v117 + *(int *)(v116 + 20));
  v91 = *v10;
  v92 = v10[1];
  swift_bridgeObjectRetain(v92);
  v93 = v240;
  v240[0] = v91;
  v240[1] = v92;
  v121 = sub_1001F0CD4();
  v120 = &type metadata for String;
  v236 = Text.init<A>(_:)(v93, &type metadata for String, v121);
  v237 = v11;
  v238 = v12;
  v239 = v13;
  v95 = v236;
  v96 = v11;
  v97 = v12;
  v98 = v13;
  v94 = static Font.footnote.getter();
  v232 = v95;
  v233 = v96;
  v138 = 1;
  v234 = v97 & 1;
  v235 = v98;
  v228 = Text.font(_:)(v94, v95, v96, v97 & 1, v98);
  v229 = v14;
  v230 = v15;
  v231 = v16;
  v100 = v228;
  v101 = v14;
  v99 = v15;
  v102 = v16;
  swift_release();
  sub_10026244C(v95, v96, v97 & 1);
  swift_bridgeObjectRelease(v98);
  v224 = v100;
  v225 = v101;
  v226 = v99 & 1 & v138;
  v227 = v102;
  v220 = Text.bold()(v100, v101, v226, v102);
  v221 = v17;
  v222 = v18;
  v223 = v19;
  v106 = v220;
  v104 = v17;
  v105 = v18;
  v107 = v19;
  sub_10026244C(v100, v101, v99 & 1);
  swift_bridgeObjectRelease(v102);
  v127 = MSSendMailIntent_ptr;
  v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v21 = Color.init(uiColor:)(v20);
  v103 = &v219;
  v219 = v21;
  v215 = v106;
  v216 = v104;
  v217 = v105 & 1 & v138;
  v218 = v107;
  v128 = &type metadata for Color;
  v129 = &protocol witness table for Color;
  v211 = Text.foregroundStyle<A>(_:)();
  v212 = v22;
  v213 = v23;
  v214 = v24;
  v108 = v211;
  v109 = v22;
  v110 = v23;
  v111 = v24;
  sub_1001F0F44(v103);
  sub_10026244C(v106, v104, v105 & 1);
  swift_bridgeObjectRelease(v107);
  v114 = v208;
  v208[0] = v108;
  v208[1] = v109;
  v209 = v110 & 1 & v138;
  v210 = v111;
  v113 = (id)MSAccessibilityIdentifierInstantAnswersHotelCheckInDate;
  v25 = MSAccessibilityIdentifierInstantAnswersHotelCheckInDate;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
  v112 = v27;
  v140 = &type metadata for Text;
  v141 = &protocol witness table for Text;
  View.accessibilityIdentifier(_:)(v26);
  swift_bridgeObjectRelease(v112);

  sub_1002634A4((uint64_t)v114);
  v146 = sub_1002634E8();
  sub_100253AA8(v151, v145, v115);
  sub_1002635E0(v151);
  v28 = v117 + *(int *)(v116 + 20);
  v118 = *(_QWORD *)(v28 + 16);
  v119 = *(_QWORD *)(v28 + 24);
  swift_bridgeObjectRetain(v119);
  v207[0] = v118;
  v207[1] = v119;
  v203 = Text.init<A>(_:)(v207, v120, v121);
  v204 = v29;
  v205 = v30;
  v206 = v31;
  v123 = v203;
  v124 = v29;
  v125 = v30;
  v126 = v31;
  v122 = static Font.headline.getter();
  v199 = v123;
  v200 = v124;
  v201 = v125 & 1 & v138;
  v202 = v126;
  v195 = Text.font(_:)(v122, v123, v124, v201, v126);
  v196 = v32;
  v197 = v33;
  v198 = v34;
  v133 = v195;
  v131 = v32;
  v132 = v33;
  v134 = v34;
  swift_release();
  sub_10026244C(v123, v124, v125 & 1);
  swift_bridgeObjectRelease(v126);
  v35 = objc_msgSend((id)objc_opt_self(v127[198]), "labelColor");
  v36 = Color.init(uiColor:)(v35);
  v130 = &v194;
  v194 = v36;
  v190 = v133;
  v191 = v131;
  v192 = v132 & 1 & v138;
  v193 = v134;
  v186 = Text.foregroundStyle<A>(_:)();
  v187 = v37;
  v188 = v38;
  v189 = v39;
  v135 = v186;
  v136 = v37;
  v137 = v38;
  v139 = v39;
  sub_1001F0F44(v130);
  sub_10026244C(v133, v131, v132 & 1);
  swift_bridgeObjectRelease(v134);
  v144 = v183;
  v183[0] = v135;
  v183[1] = v136;
  v184 = v137 & 1 & v138;
  v185 = v139;
  v143 = (id)MSAccessibilityIdentifierInstantAnswersHotelName;
  v40 = MSAccessibilityIdentifierInstantAnswersHotelName;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v143);
  v142 = v42;
  View.accessibilityIdentifier(_:)(v41);
  swift_bridgeObjectRelease(v142);

  sub_1002634A4((uint64_t)v144);
  v43 = sub_10026FC68();
  View.alignmentGuide(_:computeValue:)(*v43, sub_10025F8F0, 0, v145, v146);
  sub_1002635E0(v151);
  v149 = sub_100264E58();
  sub_100253AA8(v150, v148, v147);
  sub_100266DAC(v150);
  v182 = v151;
  v44 = v117 + *(int *)(v116 + 20);
  v61 = *(_QWORD *)(v44 + 32);
  v62 = *(_QWORD *)(v44 + 40);
  swift_bridgeObjectRetain(v62);
  v181[0] = v61;
  v181[1] = v62;
  v177 = Text.init<A>(_:)(v181, &type metadata for String, v121);
  v178 = v45;
  v179 = v46;
  v180 = v47;
  v64 = v177;
  v65 = v45;
  v66 = v46;
  v67 = v47;
  v63 = static Font.footnote.getter();
  v173 = v64;
  v174 = v65;
  v76 = 1;
  v175 = v66 & 1;
  v176 = v67;
  v169 = Text.font(_:)(v63, v64, v65, v66 & 1, v67);
  v170 = v48;
  v171 = v49;
  v172 = v50;
  v71 = v169;
  v69 = v48;
  v70 = v49;
  v72 = v50;
  swift_release();
  sub_10026244C(v64, v65, v66 & 1);
  swift_bridgeObjectRelease(v67);
  v51 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v52 = Color.init(uiColor:)(v51);
  v68 = &v168;
  v168 = v52;
  v164 = v71;
  v165 = v69;
  v166 = v70 & 1 & v76;
  v167 = v72;
  v160 = Text.foregroundStyle<A>(_:)();
  v161 = v53;
  v162 = v54;
  v163 = v55;
  v73 = v160;
  v74 = v53;
  v75 = v54;
  v77 = v55;
  sub_1001F0F44(v68);
  sub_10026244C(v71, v69, v70 & 1);
  swift_bridgeObjectRelease(v72);
  v80 = v157;
  v157[0] = v73;
  v157[1] = v74;
  v158 = v75 & 1 & v76;
  v159 = v77;
  v79 = (id)MSAccessibilityIdentifierInstantAnswersHotelCityName;
  v56 = MSAccessibilityIdentifierInstantAnswersHotelCityName;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
  v78 = v58;
  View.accessibilityIdentifier(_:)(v57);
  swift_bridgeObjectRelease(v78);

  sub_1002634A4((uint64_t)v80);
  sub_100253AA8(v88, v145, v151);
  sub_1002635E0(v88);
  sub_10026814C(v115, v88);
  v81 = v156;
  v156[0] = v88;
  sub_10026EF98(v147, v150);
  v156[1] = v150;
  sub_10026814C(v151, v86);
  v156[2] = v86;
  v155[0] = v145;
  v155[1] = v148;
  v155[2] = v145;
  v152 = v146;
  v153 = v149;
  v154 = v146;
  sub_1002C9238((uint64_t)v81, 3uLL, (uint64_t)v155, v82);
  sub_1002635E0(v86);
  sub_100266DAC(v150);
  sub_1002635E0(v88);
  sub_1002635E0(v151);
  sub_100266DAC(v147);
  return sub_1002635E0(v115);
}

_QWORD *sub_10026DDC8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;

  v13 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v13) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v2 - 8) + 16))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v13, 1);
  }
  else
  {
    v10 = *a1;
    swift_retain(*a1);
    *a2 = v10;
    swift_storeEnumTagMultiPayload(a2, v13, 0);
  }
  v3 = type metadata accessor for InstantAnswerHotelContentView(0);
  v8 = (_QWORD *)((char *)a2 + *(int *)(v3 + 20));
  v7 = (_QWORD *)((char *)a1 + *(int *)(v3 + 20));
  *v8 = *v7;
  v5 = v7[1];
  swift_bridgeObjectRetain(v5);
  v8[1] = v5;
  v8[2] = v7[2];
  v6 = v7[3];
  swift_bridgeObjectRetain(v6);
  v8[3] = v6;
  v8[4] = v7[4];
  v9 = v7[5];
  swift_bridgeObjectRetain(v9);
  result = a2;
  v8[5] = v9;
  return result;
}

uint64_t sub_10026DF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10026D29C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10026DF10()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5ED0;
  if (!qword_1005A5ED0)
  {
    v0 = sub_1001E7634(&qword_1005A5EC8);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5ED0);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026DF80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    v2 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  v4 = (_QWORD *)(a1 + *(int *)(type metadata accessor for InstantAnswerHotelContentView(0) + 20));
  swift_bridgeObjectRelease(v4[1]);
  swift_bridgeObjectRelease(v4[3]);
  swift_bridgeObjectRelease(v4[5]);
  return a1;
}

unint64_t sub_10026E030()
{
  uint64_t v0;
  unint64_t WitnessTable;
  uint64_t v3;

  v3 = qword_1005A5ED8;
  if (!qword_1005A5ED8)
  {
    v0 = sub_1001E7634(&qword_1005A5EC0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_1005A5ED8);
    return WitnessTable;
  }
  return v3;
}

uint64_t sub_10026E0A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v5 = a1 + *(int *)(sub_10003A0C8(&qword_1005A5EE0) + 44);
  sub_10026244C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));
  v6 = sub_10003A0C8(&qword_1005A5AD8);
  v2 = *(int *)(v6 + 36);
  v8 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v9 = *(void (**)(uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v5 + v2);
  v4 = sub_10003A0C8(&qword_1005A5EE8);
  v3 = v5 + *(int *)(v4 + 48);
  sub_10026244C(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v3 + 24));
  ((void (*)(uint64_t, uint64_t))v9)(v3 + *(int *)(v6 + 36), v8);
  sub_10003A0C8(&qword_1005A5B00);
  swift_release();
  v7 = v5 + *(int *)(v4 + 64);
  sub_10026244C(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16) & 1);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 24));
  ((void (*)(uint64_t, uint64_t))v9)(v7 + *(int *)(v6 + 36), v8);
  return a1;
}

uint64_t sub_10026E210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  v6 = *(int *)(sub_10003A0C8(&qword_1005A5EE0) + 44);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = *(_BYTE *)(a1 + v6 + 16);
  sub_100263464(v7, v8, v9 & 1);
  v23 = a2 + v6;
  *(_QWORD *)v23 = v7;
  *(_QWORD *)(v23 + 8) = v8;
  *(_BYTE *)(v23 + 16) = v9 & 1;
  v10 = *(_QWORD *)(a1 + v6 + 24);
  swift_bridgeObjectRetain(v10);
  *(_QWORD *)(v23 + 24) = v10;
  v28 = sub_10003A0C8(&qword_1005A5AD8);
  v11 = *(int *)(v28 + 36);
  v32 = type metadata accessor for AccessibilityAttachmentModifier(0);
  v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v33(a2 + v6 + v11, a1 + v6 + v11);
  v19 = sub_10003A0C8(&qword_1005A5EE8);
  v12 = *(int *)(v19 + 48);
  v17 = a1 + v6 + v12;
  v13 = *(_QWORD *)v17;
  v14 = *(_QWORD *)(v17 + 8);
  v15 = *(_BYTE *)(v17 + 16);
  sub_100263464(*(_QWORD *)v17, v14, v15 & 1);
  v18 = a2 + v6 + v12;
  *(_QWORD *)v18 = v13;
  *(_QWORD *)(v18 + 8) = v14;
  *(_BYTE *)(v18 + 16) = v15 & 1;
  v16 = *(_QWORD *)(v17 + 24);
  swift_bridgeObjectRetain(v16);
  *(_QWORD *)(v18 + 24) = v16;
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v18 + *(int *)(v28 + 36), v17 + *(int *)(v28 + 36), v32);
  v2 = sub_10003A0C8(&qword_1005A5B00);
  v3 = (_QWORD *)(v17 + *(int *)(v2 + 36));
  v21 = (_QWORD *)(v18 + *(int *)(v2 + 36));
  *v21 = *v3;
  v20 = v3[1];
  v22 = v3[2];
  swift_retain(v22);
  v21[1] = v20;
  v21[2] = v22;
  v24 = *(int *)(v19 + 64);
  v31 = a1 + v6 + v24;
  v25 = *(_QWORD *)v31;
  v26 = *(_QWORD *)(v31 + 8);
  v27 = *(_BYTE *)(v31 + 16);
  sub_100263464(*(_QWORD *)v31, v26, v27 & 1);
  v30 = a2 + v6 + v24;
  *(_QWORD *)v30 = v25;
  *(_QWORD *)(v30 + 8) = v26;
  *(_BYTE *)(v30 + 16) = v27 & 1;
  v29 = *(_QWORD *)(v31 + 24);
  swift_bridgeObjectRetain(v29);
  *(_QWORD *)(v30 + 24) = v29;
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v30 + *(int *)(v28 + 36), v31 + *(int *)(v28 + 36), v32);
  return a2;
}

uint64_t sub_10026E504()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_1004CE150);
  return Environment.init(_:)(KeyPath);
}

uint64_t sub_10026E534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001EAFF0(a1, a2);
}

uint64_t sub_10026E548(uint64_t a1)
{
  return sub_1001EB0F8(a1);
}

void *sub_10026E55C@<X0>(const void *a1@<X0>, const void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;

  sub_1002650C0(a1, a3);
  v3 = type metadata accessor for InstantAnswerHotelContentView(0);
  return memcpy(&a3[*(int *)(v3 + 20)], a2, 0x30uLL);
}

uint64_t sub_10026E5AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10026D08C(a1);
}

unint64_t sub_10026E5C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v18;

  v18 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v18 & 0x20000) != 0)
  {
    v13 = *a2;
    swift_retain(*a2);
    *a1 = v13;
    return *a1 + ((v18 + 16) & ~(unint64_t)v18);
  }
  else
  {
    v12 = sub_10003A0C8(&qword_1005A5A98);
    if (swift_getEnumCaseMultiPayload(a2, v12) == 1)
    {
      v3 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v12, 1);
    }
    else
    {
      v11 = *a2;
      swift_retain(*a2);
      *a1 = v11;
      swift_storeEnumTagMultiPayload(a1, v12, 0);
    }
    v4 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v4);
    v8 = (_QWORD *)((char *)a2 + v4);
    *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
    v6 = *(_QWORD *)((char *)a2 + v4 + 8);
    swift_bridgeObjectRetain(v6);
    v9[1] = v6;
    v9[2] = v8[2];
    v7 = v8[3];
    swift_bridgeObjectRetain(v7);
    v9[3] = v7;
    v9[4] = v8[4];
    v10 = v8[5];
    swift_bridgeObjectRetain(v10);
    v9[5] = v10;
    return (unint64_t)a1;
  }
}

uint64_t sub_10026E764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1);
  }
  else
  {
    swift_release();
  }
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  return swift_bridgeObjectRelease(v5[5]);
}

_QWORD *sub_10026E810(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;

  v15 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a2, v15) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v15, 1);
  }
  else
  {
    v11 = *a2;
    swift_retain(*a2);
    *a1 = v11;
    swift_storeEnumTagMultiPayload(a1, v15, 0);
  }
  v4 = *(int *)(a3 + 20);
  v9 = (_QWORD *)((char *)a1 + v4);
  v8 = (_QWORD *)((char *)a2 + v4);
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v6 = *(_QWORD *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain(v6);
  v9[1] = v6;
  v9[2] = v8[2];
  v7 = v8[3];
  swift_bridgeObjectRetain(v7);
  v9[3] = v7;
  v9[4] = v8[4];
  v10 = v8[5];
  swift_bridgeObjectRetain(v10);
  result = a1;
  v9[5] = v10;
  return result;
}

_QWORD *sub_10026E950(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_10025BB10((uint64_t)a1);
    v15 = sub_10003A0C8(&qword_1005A5A98);
    if (swift_getEnumCaseMultiPayload(a2, v15) == 1)
    {
      v3 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)(v3 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v15, 1);
    }
    else
    {
      v14 = *a2;
      swift_retain(*a2);
      *a1 = v14;
      swift_storeEnumTagMultiPayload(a1, v15, 0);
    }
  }
  v4 = *(int *)(a3 + 20);
  v12 = (_QWORD *)((char *)a1 + v4);
  v11 = (_QWORD *)((char *)a2 + v4);
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v9 = *(_QWORD *)((char *)a2 + v4 + 8);
  swift_bridgeObjectRetain(v9);
  v5 = v12[1];
  v12[1] = v9;
  swift_bridgeObjectRelease(v5);
  v12[2] = v11[2];
  v10 = v11[3];
  swift_bridgeObjectRetain(v10);
  v6 = v12[3];
  v12[3] = v10;
  swift_bridgeObjectRelease(v6);
  v12[4] = v11[4];
  v13 = v11[5];
  swift_bridgeObjectRetain(v13);
  v7 = v12[5];
  v12[5] = v13;
  swift_bridgeObjectRelease(v7);
  return a1;
}

char *sub_10026EACC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v8;

  v8 = sub_10003A0C8(&qword_1005A5A98);
  if (swift_getEnumCaseMultiPayload(a2, v8) == 1)
  {
    v3 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload(a1, v8, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  memcpy(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], 0x30uLL);
  return a1;
}

char *sub_10026EB98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_10025BB10((uint64_t)a1);
    v11 = sub_10003A0C8(&qword_1005A5A98);
    if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
    {
      v3 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *))(*(_QWORD *)(v3 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload(a1, v11, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v4 = *(int *)(a3 + 20);
  v10 = &a1[v4];
  v9 = &a2[v4];
  *(_QWORD *)v10 = *(_QWORD *)&a2[v4];
  v5 = *(_QWORD *)&a1[v4 + 8];
  *((_QWORD *)v10 + 1) = *(_QWORD *)&a2[v4 + 8];
  swift_bridgeObjectRelease(v5);
  *((_QWORD *)v10 + 2) = *((_QWORD *)v9 + 2);
  v6 = *((_QWORD *)v10 + 3);
  *((_QWORD *)v10 + 3) = *((_QWORD *)v9 + 3);
  swift_bridgeObjectRelease(v6);
  *((_QWORD *)v10 + 4) = *((_QWORD *)v9 + 4);
  v7 = *((_QWORD *)v10 + 5);
  *((_QWORD *)v10 + 5) = *((_QWORD *)v9 + 5);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t sub_10026ECD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10026ECF0);
}

uint64_t sub_10026ECF0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_10003A0C8(&qword_1005A5A90);
  v10 = *(_QWORD *)(v9 - 8);
  if (a2 == *(_DWORD *)(v10 + 84))
  {
    return (*(unsigned int (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))(a1, a2, v9);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    v4 = -1;
    if (*(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) < (unint64_t)&_mh_execute_header)
      v4 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    return (v4 + 1);
  }
  else
  {
    __break(1u);
  }
  return v5;
}

uint64_t sub_10026EDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10026EDF0);
}

uint64_t sub_10026EDF0(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10003A0C8(&qword_1005A5A90);
  v9 = *(_QWORD *)(result - 8);
  if (a3 == *(_DWORD *)(v9 + 84))
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v9 + 56))(a1, a2, a2, result);
  if (a3 == 0x7FFFFFFF)
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2 - 1;
  else
    __break(1u);
  return result;
}

uint64_t sub_10026EEA8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v4 = sub_100264D64(319);
  v5 = v4;
  if (v1 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v4 - 8) + 64;
    v6[1] = "0";
    swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    return 0;
  }
  return v5;
}

unint64_t sub_10026EF60()
{
  return sub_10026E030();
}

uint64_t sub_10026EF74(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004F7930, 1);
}

uint64_t sub_10026EF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  sub_100263464(*(_QWORD *)a1, v7, v8 & 1);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  v9 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v9);
  *(_QWORD *)(a2 + 24) = v9;
  v10 = *(int *)(sub_10003A0C8(&qword_1005A5AD8) + 36);
  v2 = type metadata accessor for AccessibilityAttachmentModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a2 + v10, a1 + v10);
  v3 = sub_10003A0C8(&qword_1005A5B00);
  v4 = (_QWORD *)(a1 + *(int *)(v3 + 36));
  v14 = (_QWORD *)(a2 + *(int *)(v3 + 36));
  *v14 = *v4;
  v13 = v4[1];
  v15 = v4[2];
  swift_retain(v15);
  result = a2;
  v14[1] = v13;
  v14[2] = v15;
  return result;
}

uint64_t SearchItem.InstantAnswer.init(suggestion:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  id v27;
  id v28;
  unsigned int v29;
  uint64_t v30;
  void *v31;
  char *v32;

  v16 = a2;
  v20 = a1;
  v32 = 0;
  v31 = 0;
  v30 = 0;
  v17 = 0;
  v18 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v19 = (char *)&v9 - v18;
  v21 = type metadata accessor for SearchItem.InstantAnswer(v2);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v20);
  v24 = (char *)&v9 - v23;
  v25 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = (void *)__chkstk_darwin(v3);
  v26 = (char *)&v9 - v25;
  v32 = (char *)&v9 - v25;
  v31 = v5;
  v28 = objc_msgSend(v5, "category");
  v27 = objc_msgSend((id)objc_opt_self(MUISearchSuggestionCategory), "instantAnswersCategory");
  v29 = objc_msgSend(v28, "isGroupedInCategory:");

  if ((v29 & 1) != 0
    && ((v6 = v20,
         v7 = objc_opt_self(MUISearchInstantAnswersSuggestion),
         (v15 = swift_dynamicCastObjCClass(v20, v7)) == 0)
      ? (v13 = 0, v20, v14 = v13)
      : (v14 = v15),
        (v12 = v14) != 0))
  {
    v11 = v12;
    v10 = v12;
    v30 = v12;
    UUID.init()();
    SearchItem.InstantAnswer.init(id:suggestion:)(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v24, v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v16, v26, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);

    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v26, v21);
  }
  else
  {

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v16, 1, 1, v21);
  }
}

uint64_t sub_10026F37C(char a1)
{
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v5;
  _BYTE v6[16];
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v10 = a1 & 1;
  v9 = v1;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE258);
  swift_retain(v1);
  v7 = v1;
  v8 = a1 & 1;
  sub_1002708B4(KeyPath, (uint64_t)sub_100270888, (uint64_t)v6, (uint64_t)&type metadata for () + 8, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_10026F444(char a1)
{
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v5;
  _BYTE v6[16];
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v10 = a1 & 1;
  v9 = v1;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE280);
  swift_retain(v1);
  v7 = v1;
  v8 = a1 & 1;
  sub_1002708B4(KeyPath, (uint64_t)sub_100270ED8, (uint64_t)v6, (uint64_t)&type metadata for () + 8, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_10026F50C(char a1)
{
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v5;
  _BYTE v6[16];
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v10 = a1 & 1;
  v9 = v1;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE2A8);
  swift_retain(v1);
  v7 = v1;
  v8 = a1 & 1;
  sub_1002708B4(KeyPath, (uint64_t)sub_10027139C, (uint64_t)v6, (uint64_t)&type metadata for () + 8, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_10026F5D4(char a1, char a2, char a3)
{
  uint64_t v3;

  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  return sub_10027167C(a1 & 1, a2 & 1, a3 & 1);
}

MobileMail::InstantAnswerView::Model::Airport __swiftcall InstantAnswerView.Model.Airport.init(code:travelTime:)(Swift::String code, Swift::String travelTime)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *object;
  uint64_t countAndFlagsBits;
  __int128 v9;
  Swift::String v10;
  MobileMail::InstantAnswerView::Model::Airport result;

  countAndFlagsBits = code._countAndFlagsBits;
  object = code._object;
  v9 = 0u;
  v10 = (Swift::String)0;
  swift_bridgeObjectRetain(code._object);
  swift_bridgeObjectRetain(object);
  *(_QWORD *)&v9 = countAndFlagsBits;
  *((_QWORD *)&v9 + 1) = object;
  swift_bridgeObjectRetain(travelTime._object);
  swift_bridgeObjectRetain(travelTime._object);
  v10 = travelTime;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(travelTime._object);
  swift_bridgeObjectRelease(travelTime._object);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(travelTime._object);
  swift_bridgeObjectRelease(object);
  sub_1001F0E64((uint64_t)&v9);
  v2 = object;
  v4 = travelTime._object;
  v3 = travelTime._countAndFlagsBits;
  v5 = countAndFlagsBits;
  result.travelTime._object = v4;
  result.travelTime._countAndFlagsBits = v3;
  result.code._object = v2;
  result.code._countAndFlagsBits = v5;
  return result;
}

void __swiftcall InstantAnswerView.Model.Flight.init(travelDate:departureAirport:arrivalAirport:)(MobileMail::InstantAnswerView::Model::Flight *__return_ptr retstr, Swift::String travelDate, MobileMail::InstantAnswerView::Model::Airport departureAirport, MobileMail::InstantAnswerView::Model::Airport arrivalAirport)
{
  void *object;
  Swift::String v6;
  uint64_t countAndFlagsBits;
  _OWORD __b[5];

  countAndFlagsBits = travelDate._countAndFlagsBits;
  object = travelDate._object;
  v6._countAndFlagsBits = arrivalAirport.code._countAndFlagsBits;
  v6._object = arrivalAirport.code._object;
  memset(__b, 0, sizeof(__b));
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(object);
  *(_QWORD *)&__b[0] = countAndFlagsBits;
  *((_QWORD *)&__b[0] + 1) = object;
  swift_bridgeObjectRetain(departureAirport.code._object);
  swift_bridgeObjectRetain(departureAirport.travelTime._object);
  swift_bridgeObjectRetain(departureAirport.code._object);
  swift_bridgeObjectRetain(departureAirport.travelTime._object);
  *(MobileMail::InstantAnswerView::Model::Airport *)&__b[1] = departureAirport;
  swift_bridgeObjectRetain(v6._object);
  swift_bridgeObjectRetain(arrivalAirport.travelTime._object);
  swift_bridgeObjectRetain(v6._object);
  swift_bridgeObjectRetain(arrivalAirport.travelTime._object);
  __b[3] = v6;
  __b[4] = arrivalAirport.travelTime;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(departureAirport.code._object);
  swift_bridgeObjectRetain(departureAirport.travelTime._object);
  swift_bridgeObjectRetain(v6._object);
  swift_bridgeObjectRetain(arrivalAirport.travelTime._object);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(arrivalAirport.travelTime._object);
  swift_bridgeObjectRelease(departureAirport.code._object);
  swift_bridgeObjectRelease(departureAirport.travelTime._object);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v6._object);
  swift_bridgeObjectRelease(arrivalAirport.travelTime._object);
  swift_bridgeObjectRelease(departureAirport.code._object);
  swift_bridgeObjectRelease(departureAirport.travelTime._object);
  swift_bridgeObjectRelease(object);
  sub_100271738(__b);
  retstr->travelDate._countAndFlagsBits = countAndFlagsBits;
  retstr->travelDate._object = object;
  retstr->departureAirport = departureAirport;
  retstr->arrivalAirport.code = v6;
  retstr->arrivalAirport.travelTime = arrivalAirport.travelTime;
}

uint64_t InstantAnswerView.Model.Action.init(iconSymbolName:title:accessibilityIdentifier:handler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t result;
  _QWORD __b[8];

  memset(__b, 0, sizeof(__b));
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a2);
  __b[0] = a1;
  __b[1] = a2;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a4);
  __b[2] = a3;
  __b[3] = a4;
  swift_bridgeObjectRetain(a6);
  swift_bridgeObjectRetain(a6);
  __b[4] = a5;
  __b[5] = a6;
  swift_retain(a8);
  swift_retain(a8);
  __b[6] = a7;
  __b[7] = a8;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  swift_retain(a8);
  swift_release();
  swift_bridgeObjectRelease(a6);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a2);
  swift_release();
  swift_bridgeObjectRelease(a6);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a2);
  sub_100271790(__b);
  result = a1;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t InstantAnswerView.init(model:state:)@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  unint64_t v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  const void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v12 = a3;
  v14 = a1;
  v13 = a2;
  v18 = 0;
  v17 = 0;
  v16 = 0;
  v11 = (int *)type metadata accessor for InstantAnswerView(0);
  v10 = (*(_QWORD *)(*((_QWORD *)v11 - 1) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v15 = (uint64_t *)((char *)&v9 - v10);
  v18 = (char *)&v9 - v10;
  v17 = __chkstk_darwin(v14);
  v16 = v3;
  KeyPath = swift_getKeyPath(&unk_1004CE2D0);
  Environment.init(_:)(KeyPath);
  v5 = (uint64_t)v14;
  *(double *)((char *)v15 + v11[7]) = 11.0;
  sub_100271CA4(v5);
  sub_100271D14(v14, (char *)v15 + v11[5]);
  swift_retain(v13);
  v6 = v15;
  v7 = v12;
  *(_QWORD *)((char *)v15 + v11[6]) = v13;
  sub_10025B708(v6, v7);
  swift_release();
  sub_100271D4C((uint64_t)v14);
  return sub_10025B568((uint64_t)v15);
}

uint64_t *sub_10026FC68()
{
  if (qword_1005A3728 != -1)
    swift_once(&qword_1005A3728, sub_1002785F4);
  return &qword_1005B9DA0;
}

void __swiftcall InstantAnswerView.Model.Hotel.init(travelDate:name:location:)(MobileMail::InstantAnswerView::Model::Hotel *__return_ptr retstr, Swift::String travelDate, Swift::String name, Swift::String location)
{
  void *object;
  uint64_t countAndFlagsBits;
  _OWORD __b[3];

  countAndFlagsBits = travelDate._countAndFlagsBits;
  object = travelDate._object;
  memset(__b, 0, sizeof(__b));
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(object);
  *(_QWORD *)&__b[0] = countAndFlagsBits;
  *((_QWORD *)&__b[0] + 1) = object;
  swift_bridgeObjectRetain(name._object);
  swift_bridgeObjectRetain(name._object);
  __b[1] = name;
  swift_bridgeObjectRetain(location._object);
  swift_bridgeObjectRetain(location._object);
  __b[2] = location;
  swift_bridgeObjectRetain(object);
  swift_bridgeObjectRetain(name._object);
  swift_bridgeObjectRetain(location._object);
  swift_bridgeObjectRelease(location._object);
  swift_bridgeObjectRelease(name._object);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(location._object);
  swift_bridgeObjectRelease(name._object);
  swift_bridgeObjectRelease(object);
  sub_100278624(__b);
  retstr->travelDate._countAndFlagsBits = countAndFlagsBits;
  retstr->travelDate._object = object;
  retstr->name = name;
  retstr->location = location;
}

uint64_t InstantAnswerView.Model.Airport.code.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  swift_bridgeObjectRetain(a2);
  v3 = v2[1];
  *v2 = a1;
  v2[1] = a2;
  swift_bridgeObjectRelease(v3);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*InstantAnswerView.Model.Airport.code.modify())(_QWORD)
{
  return nullsub_9;
}

uint64_t InstantAnswerView.Model.Action.title.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v2;
}

uint64_t InstantAnswerView.Model.Airport.travelTime.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRetain(a2);
  v3 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_bridgeObjectRelease(v3);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*InstantAnswerView.Model.Airport.travelTime.modify())(_QWORD)
{
  return nullsub_9;
}

uint64_t InstantAnswerView.Model.Action.accessibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  return v2;
}

uint64_t InstantAnswerView.Model.Action.accessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRetain(a2);
  v3 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  swift_bridgeObjectRelease(v3);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*InstantAnswerView.Model.Action.accessibilityIdentifier.modify())(_QWORD)
{
  return nullsub_9;
}

uint64_t InstantAnswerView.Model.Action.handler.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 48);
  swift_retain(*(_QWORD *)(v0 + 56));
  return v2;
}

uint64_t InstantAnswerView.Model.Action.handler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_retain(a2);
  v3 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  swift_release(v3);
  return swift_release(a2);
}

uint64_t (*InstantAnswerView.Model.Flight.arrivalAirport.modify())(_QWORD)
{
  return nullsub_9;
}

uint64_t InstantAnswerView.Model.Airport.travelTime.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a4);
  return a3;
}

uint64_t InstantAnswerView.Model.Flight.departureAirport.getter()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[2];
  v3 = v0[5];
  swift_bridgeObjectRetain(v0[3]);
  swift_bridgeObjectRetain(v3);
  return v2;
}

uint64_t InstantAnswerView.Model.Flight.departureAirport.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v5 = v4[3];
  v9 = v4[5];
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(a2);
  return swift_bridgeObjectRelease(a4);
}

uint64_t InstantAnswerView.Model.Flight.arrivalAirport.getter()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[6];
  v3 = v0[9];
  swift_bridgeObjectRetain(v0[7]);
  swift_bridgeObjectRetain(v3);
  return v2;
}

uint64_t InstantAnswerView.Model.Flight.arrivalAirport.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  v5 = v4[7];
  v9 = v4[9];
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(a2);
  return swift_bridgeObjectRelease(a4);
}

uint64_t InstantAnswerView.Model.actions.getter()
{
  const void *v0;
  uint64_t v2;
  uint64_t v3;
  _BYTE __dst[48];
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_100271D14(v0, __dst);
  if ((v8 & 1) != 0)
  {
    v2 = v6;
    swift_bridgeObjectRetain(v6);
    return v2;
  }
  else
  {
    v3 = v7;
    swift_bridgeObjectRetain(v7);
    return v3;
  }
}

uint64_t InstantAnswerView.Model.accessibilityIdentifier.getter()
{
  const void *v0;
  id v1;
  id v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _BYTE __src[96];
  _BYTE __dst[88];
  _BYTE v11[56];

  sub_100271D14(v0, __src);
  if ((__src[88] & 1) != 0)
  {
    memcpy(v11, __src, sizeof(v11));
    v4 = (id)MSAccessibilityIdentifierInstantAnswersHotelCell;
    v2 = MSAccessibilityIdentifierInstantAnswersHotelCell;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

    return v5;
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    v6 = (id)MSAccessibilityIdentifierInstantAnswersFlightCell;
    v1 = MSAccessibilityIdentifierInstantAnswersFlightCell;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

    return v7;
  }
}

uint64_t InstantAnswerView.Model.iconSymbolName.getter()
{
  const void *v0;
  id v1;
  id v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _BYTE __src[96];
  _BYTE __dst[88];
  _BYTE v11[56];

  sub_100271D14(v0, __src);
  if ((__src[88] & 1) != 0)
  {
    memcpy(v11, __src, sizeof(v11));
    v4 = (id)MFImageGlyphInstantAnswersHotelIcon;
    v2 = MFImageGlyphInstantAnswersHotelIcon;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

    return v5;
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    v6 = (id)MFImageGlyphInstantAnswersFlightIcon;
    v1 = MFImageGlyphInstantAnswersFlightIcon;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

    return v7;
  }
}

uint64_t InstantAnswerView.Model.iconSymbolAccessibilityIdentifier.getter()
{
  const void *v0;
  id v1;
  id v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _BYTE __src[96];
  _BYTE __dst[88];
  _BYTE v11[56];

  sub_100271D14(v0, __src);
  if ((__src[88] & 1) != 0)
  {
    memcpy(v11, __src, sizeof(v11));
    v4 = (id)MSAccessibilityIdentifierInstantAnswersHotelImageIcon;
    v2 = MSAccessibilityIdentifierInstantAnswersHotelImageIcon;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

    return v5;
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    v6 = (id)MSAccessibilityIdentifierInstantAnswersFlightImageIcon;
    v1 = MSAccessibilityIdentifierInstantAnswersFlightImageIcon;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

    return v7;
  }
}

uint64_t sub_10027057C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

uint64_t sub_1002705A8()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *KeyPath;
  char v4;
  _BYTE v5[24];
  uint64_t v6;

  v6 = v0;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE258);
  sub_100270708(KeyPath);
  swift_release();
  swift_beginAccess(v2 + 16);
  v4 = *(_BYTE *)(v2 + 16);
  swift_endAccess(v5);
  return v4 & 1;
}

uint64_t sub_10027062C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  swift_retain(*a1);
  *a2 = sub_1002705A8() & 1;
  return swift_release();
}

uint64_t sub_100270688@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_10027062C(a1, a2);
}

uint64_t sub_10027069C(char *a1, _QWORD *a2)
{
  char v3;

  v3 = *a1;
  swift_retain(*a2);
  sub_10026F37C(v3 & 1);
  return swift_release();
}

uint64_t sub_1002706F4(char *a1, _QWORD *a2)
{
  return sub_10027069C(a1, a2);
}

uint64_t sub_100270708(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = a1;
  v17 = 0;
  v15 = 0;
  v7 = *a1;
  v13 = type metadata accessor for ObservationRegistrar(0);
  v11 = *(_QWORD *)(v13 - 8);
  v1 = __chkstk_darwin(v9);
  v12 = (char *)&v6 - v2;
  v17 = v1;
  v16 = *(_QWORD *)(v7 + class metadata base offset for KeyPath + 8);
  v15 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v6 - v2, v8 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar);
  v10 = &v14;
  v14 = v8;
  v4 = sub_100278664();
  ObservationRegistrar.access<A, B>(_:keyPath:)(v10, v9, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v12, v13);
}

uint64_t sub_100270804(uint64_t a1, char a2)
{
  _BYTE v5[32];
  uint64_t v6;

  v6 = a1;
  v5[24] = a2 & 1;
  swift_beginAccess(a1 + 16);
  *(_BYTE *)(a1 + 16) = a2 & 1;
  return swift_endAccess(v5);
}

uint64_t sub_100270888()
{
  uint64_t v0;

  return sub_100270804(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24) & 1);
}

uint64_t sub_1002708B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v18 = a5;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v32 = 0;
  v29 = 0;
  v30 = 0;
  v28 = 0;
  v33 = a4;
  v15 = *a1;
  v13 = type metadata accessor for ObservationRegistrar(0);
  v14 = *(_QWORD *)(v13 - 8);
  v5 = __chkstk_darwin(v19);
  v16 = (char *)&v12 - v6;
  v32 = v5;
  v31 = *(_QWORD *)(v15 + class metadata base offset for KeyPath + 8);
  v29 = v7;
  v30 = v21;
  v28 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v12 - v6, v17 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar);
  v24 = &v27;
  v27 = v17;
  v9 = sub_100278664();
  v10 = v23;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v24, v19, v20, v21, v22, v9);
  v25 = v10;
  v26 = v10;
  if (v10)
    v12 = v26;
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void (*sub_100270A40(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;

  v11 = malloc(0x30uLL);
  *a1 = v11;
  v11[4] = v1;
  v10 = type metadata accessor for ObservationRegistrar(0);
  v8 = *(_QWORD *)(v10 - 8);
  v9 = malloc(*(_QWORD *)(v8 + 64));
  v11[5] = v9;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE258);
  sub_100270708(KeyPath);
  swift_release();
  (*(void (**)(void *, uint64_t, uint64_t))(v8 + 16))(v9, v6 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar, v10);
  v11[3] = v6;
  v7 = swift_getKeyPath(&unk_1004CE258);
  v2 = sub_100278664();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v11 + 3, v7, v2);
  swift_release();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v9, v10);
  swift_beginAccess(v6 + 16);
  return sub_100270B84;
}

void sub_100270B84(_QWORD **a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v6[5];
    v2 = v6[4];
    swift_endAccess(v6);
    sub_100270C0C(v2);
    free(v3);
  }
  else
  {
    v5 = (void *)v6[5];
    v4 = v6[4];
    swift_endAccess(v6);
    sub_100270C0C(v4);
    free(v5);
  }
  free(v6);
}

uint64_t sub_100270C0C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t KeyPath;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a1;
  v12 = 0;
  v10 = type metadata accessor for ObservationRegistrar(0);
  v8 = *(_QWORD *)(v10 - 8);
  v4 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v9 = (char *)&v4 - v4;
  v12 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v4 - v4, v5 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar);
  v6 = &v11;
  v11 = v5;
  KeyPath = swift_getKeyPath(&unk_1004CE258);
  v2 = sub_100278664();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v6, KeyPath, v2);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v9, v10);
}

uint64_t sub_100270CF4()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *KeyPath;
  char v4;
  _BYTE v5[24];
  uint64_t v6;

  v6 = v0;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE280);
  sub_100270708(KeyPath);
  swift_release();
  swift_beginAccess(v2 + 17);
  v4 = *(_BYTE *)(v2 + 17);
  swift_endAccess(v5);
  return v4 & 1;
}

uint64_t sub_100270D78@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  swift_retain(*a1);
  *a2 = sub_100270CF4() & 1;
  return swift_release();
}

uint64_t sub_100270DD4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_100270D78(a1, a2);
}

uint64_t sub_100270DE8(char *a1, _QWORD *a2)
{
  char v3;

  v3 = *a1;
  swift_retain(*a2);
  sub_10026F444(v3 & 1);
  return swift_release();
}

uint64_t sub_100270E40(char *a1, _QWORD *a2)
{
  return sub_100270DE8(a1, a2);
}

uint64_t sub_100270E54(uint64_t a1, char a2)
{
  _BYTE v5[32];
  uint64_t v6;

  v6 = a1;
  v5[24] = a2 & 1;
  swift_beginAccess(a1 + 17);
  *(_BYTE *)(a1 + 17) = a2 & 1;
  return swift_endAccess(v5);
}

uint64_t sub_100270ED8()
{
  uint64_t v0;

  return sub_100270E54(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24) & 1);
}

void (*sub_100270F04(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;

  v11 = malloc(0x30uLL);
  *a1 = v11;
  v11[4] = v1;
  v10 = type metadata accessor for ObservationRegistrar(0);
  v8 = *(_QWORD *)(v10 - 8);
  v9 = malloc(*(_QWORD *)(v8 + 64));
  v11[5] = v9;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE280);
  sub_100270708(KeyPath);
  swift_release();
  (*(void (**)(void *, uint64_t, uint64_t))(v8 + 16))(v9, v6 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar, v10);
  v11[3] = v6;
  v7 = swift_getKeyPath(&unk_1004CE280);
  v2 = sub_100278664();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v11 + 3, v7, v2);
  swift_release();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v9, v10);
  swift_beginAccess(v6 + 17);
  return sub_100271048;
}

void sub_100271048(_QWORD **a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v6[5];
    v2 = v6[4];
    swift_endAccess(v6);
    sub_1002710D0(v2);
    free(v3);
  }
  else
  {
    v5 = (void *)v6[5];
    v4 = v6[4];
    swift_endAccess(v6);
    sub_1002710D0(v4);
    free(v5);
  }
  free(v6);
}

uint64_t sub_1002710D0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t KeyPath;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a1;
  v12 = 0;
  v10 = type metadata accessor for ObservationRegistrar(0);
  v8 = *(_QWORD *)(v10 - 8);
  v4 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v9 = (char *)&v4 - v4;
  v12 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v4 - v4, v5 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar);
  v6 = &v11;
  v11 = v5;
  KeyPath = swift_getKeyPath(&unk_1004CE280);
  v2 = sub_100278664();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v6, KeyPath, v2);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v9, v10);
}

uint64_t sub_1002711B8()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *KeyPath;
  char v4;
  _BYTE v5[24];
  uint64_t v6;

  v6 = v0;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE2A8);
  sub_100270708(KeyPath);
  swift_release();
  swift_beginAccess(v2 + 18);
  v4 = *(_BYTE *)(v2 + 18);
  swift_endAccess(v5);
  return v4 & 1;
}

uint64_t sub_10027123C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  swift_retain(*a1);
  *a2 = sub_1002711B8() & 1;
  return swift_release();
}

uint64_t sub_100271298@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_10027123C(a1, a2);
}

uint64_t sub_1002712AC(char *a1, _QWORD *a2)
{
  char v3;

  v3 = *a1;
  swift_retain(*a2);
  sub_10026F50C(v3 & 1);
  return swift_release();
}

uint64_t sub_100271304(char *a1, _QWORD *a2)
{
  return sub_1002712AC(a1, a2);
}

uint64_t sub_100271318(uint64_t a1, char a2)
{
  _BYTE v5[32];
  uint64_t v6;

  v6 = a1;
  v5[24] = a2 & 1;
  swift_beginAccess(a1 + 18);
  *(_BYTE *)(a1 + 18) = a2 & 1;
  return swift_endAccess(v5);
}

uint64_t sub_10027139C()
{
  uint64_t v0;

  return sub_100271318(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24) & 1);
}

void (*sub_1002713C8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;

  v11 = malloc(0x30uLL);
  *a1 = v11;
  v11[4] = v1;
  v10 = type metadata accessor for ObservationRegistrar(0);
  v8 = *(_QWORD *)(v10 - 8);
  v9 = malloc(*(_QWORD *)(v8 + 64));
  v11[5] = v9;
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_1004CE2A8);
  sub_100270708(KeyPath);
  swift_release();
  (*(void (**)(void *, uint64_t, uint64_t))(v8 + 16))(v9, v6 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar, v10);
  v11[3] = v6;
  v7 = swift_getKeyPath(&unk_1004CE2A8);
  v2 = sub_100278664();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v11 + 3, v7, v2);
  swift_release();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v9, v10);
  swift_beginAccess(v6 + 18);
  return sub_10027150C;
}

void sub_10027150C(_QWORD **a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;

  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v6[5];
    v2 = v6[4];
    swift_endAccess(v6);
    sub_100271594(v2);
    free(v3);
  }
  else
  {
    v5 = (void *)v6[5];
    v4 = v6[4];
    swift_endAccess(v6);
    sub_100271594(v4);
    free(v5);
  }
  free(v6);
}

uint64_t sub_100271594(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t KeyPath;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a1;
  v12 = 0;
  v10 = type metadata accessor for ObservationRegistrar(0);
  v8 = *(_QWORD *)(v10 - 8);
  v4 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v10);
  v9 = (char *)&v4 - v4;
  v12 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 16))((char *)&v4 - v4, v5 + OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar);
  v6 = &v11;
  v11 = v5;
  KeyPath = swift_getKeyPath(&unk_1004CE2A8);
  v2 = sub_100278664();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v6, KeyPath, v2);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v9, v10);
}

uint64_t sub_10027167C(char a1, char a2, char a3)
{
  _BYTE *v3;
  uint64_t v8;

  ObservationRegistrar.init()();
  sub_10027057C(a1 & 1, v3 + 16);
  sub_10027057C(a2 & 1, v3 + 17);
  sub_10027057C(a3 & 1, v3 + 18);
  return v8;
}

_QWORD *sub_100271738(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  return a1;
}

_QWORD *sub_100271790(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_release(a1[7]);
  return a1;
}

uint64_t type metadata accessor for InstantAnswerView(uint64_t a1)
{
  uint64_t v2;

  v2 = qword_1005A62A0;
  if (!qword_1005A62A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InstantAnswerView);
  return v2;
}

BOOL static InstantAnswerView.State.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  BOOL v5;
  char v6;
  BOOL v7;
  char v8;
  BOOL v11;

  v8 = sub_1002705A8();
  v11 = (v8 & 1) != (sub_1002705A8() & 1);
  swift_retain(a1);
  swift_retain(a2);
  if (v11)
  {
    v7 = 0;
  }
  else
  {
    v6 = sub_100270CF4();
    v7 = (v6 & 1) == (sub_100270CF4() & 1);
  }
  swift_release();
  swift_release();
  swift_retain(a1);
  swift_retain(a2);
  if (v7)
  {
    v4 = sub_1002711B8();
    v5 = (v4 & 1) == (sub_1002711B8() & 1);
  }
  else
  {
    v5 = 0;
  }
  swift_release();
  swift_release();
  return v5;
}

uint64_t InstantAnswerView.State.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = OBJC_IVAR____TtCV10MobileMail17InstantAnswerView5State___observationRegistrar;
  v1 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v3);
  return v4;
}

uint64_t InstantAnswerView.State.__deallocating_deinit()
{
  uint64_t v0;

  v0 = InstantAnswerView.State.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100271A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = a1;
  v7 = 0;
  v5 = sub_10003A0C8(&qword_1005A5F90);
  v3 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = (uint64_t)&v2 - v3;
  v7 = (_QWORD *)__chkstk_darwin(v2);
  sub_100278738(v7, (uint64_t *)((char *)&v2 - v3));
  Environment.wrappedValue.getter(v5);
  return sub_1002787E8(v6);
}

BOOL sub_100271AD4(uint64_t *a1, uint64_t *a2)
{
  return static InstantAnswerView.State.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_100271AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  v11 = a2;
  v8 = a1;
  v6[1] = 0;
  v13 = type metadata accessor for ColorScheme();
  v10 = *(_QWORD *)(v13 - 8);
  v7 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v12 = (char *)v6 - v7;
  v15 = type metadata accessor for EnvironmentValues(v2);
  v14 = *(_QWORD *)(v15 - 8);
  v9 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v15);
  v16 = (char *)v6 - v9;
  v4 = (*(uint64_t (**)(char *))(v3 + 16))((char *)v6 - v9);
  EnvironmentValues.colorScheme.getter(v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v11, v12, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v15);
}

uint64_t sub_100271BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100271AF4(a1, a2);
}

uint64_t sub_100271C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];
  unint64_t v5;
  char *v6;

  v4[1] = a1;
  v1 = type metadata accessor for ColorScheme(0);
  v5 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v1);
  v6 = (char *)v4 - v5;
  (*(void (**)(void))(v2 + 16))();
  return EnvironmentValues.colorScheme.setter(v6);
}

uint64_t sub_100271C90(uint64_t a1)
{
  return sub_100271C10(a1);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100271CA4(uint64_t a1)
{
  sub_10025B910(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88) & 1);
}

void *sub_100271D14(const void *a1, void *__dst)
{
  memcpy(__dst, a1, 0x59uLL);
  return __dst;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_100271D4C(uint64_t a1)
{
  sub_10025B658(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88) & 1);
}

uint64_t InstantAnswerView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = type metadata accessor for InstantAnswerView(0);
  return sub_100278860(v1 + *(int *)(v2 + 20), a1);
}

uint64_t *InstantAnswerView.model.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *result;

  sub_100271CA4((uint64_t)a1);
  v2 = type metadata accessor for InstantAnswerView(0);
  sub_10027896C(a1, v1 + *(int *)(v2 + 20));
  result = a1;
  sub_100271D4C((uint64_t)a1);
  return result;
}

uint64_t (*InstantAnswerView.model.modify())(_QWORD)
{
  type metadata accessor for InstantAnswerView(0);
  return nullsub_9;
}

uint64_t sub_100271E5C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;

  v12 = 0;
  v6 = type metadata accessor for InstantAnswerView(0);
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = (uint64_t *)((char *)&v2 - v7);
  v12 = v0;
  v8 = *(_QWORD *)(v0 + *(int *)(__chkstk_darwin(v6) + 24));
  swift_retain(v8);
  v11 = sub_1002705A8();
  swift_release();
  sub_10025B708(v9, v10);
  if ((v11 & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    v3 = *(_QWORD *)((char *)v10 + *(int *)(v6 + 24));
    swift_retain(v3);
    v4 = sub_1002711B8();
    swift_release();
    v5 = v4;
  }
  HIDWORD(v2) = v5;
  sub_10025B568((uint64_t)v10);
  return BYTE4(v2) & 1;
}

uint64_t InstantAnswerView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  int v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (**v33)(char *, uint64_t);
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  const char *v40;
  const char *v41;
  const char *v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  int v87;
  char *v88;
  _BYTE *v89;
  int v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t KeyPath;
  char *v96;
  uint64_t v97;
  _QWORD v98[4];
  char v99;
  uint64_t v100;
  char *v101;
  _BYTE v102[8];
  _BYTE __dst[12];

  v39 = a1;
  v40 = "Fatal error";
  v41 = "Range cannot have an unordered upper bound.";
  v42 = "Swift/Range.swift";
  v101 = 0;
  v100 = 0;
  v59 = 0;
  v77 = type metadata accessor for InstantAnswerView(0);
  v43 = (*(_QWORD *)(*(_QWORD *)(v77 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v44 = (void (**)(char *, uint64_t))((char *)&v24 - v43);
  v45 = type metadata accessor for DynamicTypeSize(v2);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v45);
  v48 = (char *)&v24 - v47;
  v49 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v24 - v47);
  v50 = (char *)&v24 - v49;
  v51 = sub_10003A0C8(&qword_1005A5F98);
  v52 = (*(_QWORD *)(*(_QWORD *)(v51 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v59);
  v53 = (char *)&v24 - v52;
  v54 = type metadata accessor for ColorScheme(v4);
  v55 = *(_QWORD *)(v54 - 8);
  v56 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v54);
  v57 = (uint64_t)&v24 - v56;
  v5 = sub_10003A0C8(&qword_1005A5F90);
  v58 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v5);
  v88 = (char *)&v24 - v58;
  v60 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A5A90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v59);
  v85 = (char *)&v24 - v60;
  v93 = type metadata accessor for InstantAnswerContentView(v6);
  v61 = (*(_QWORD *)(*(_QWORD *)(v93 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v93);
  v96 = (char *)&v24 - v61;
  v62 = sub_10003A0C8(&qword_1005A5FA0);
  v63 = (*(_QWORD *)(*(_QWORD *)(v62 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v62);
  v91 = (uint64_t)&v24 - v63;
  v64 = sub_10003A0C8(&qword_1005A5FA8);
  v65 = (*(_QWORD *)(*(_QWORD *)(v64 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v64);
  v66 = (uint64_t)&v24 - v65;
  v67 = sub_10003A0C8(&qword_1005A5FB0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = (*(_QWORD *)(v68 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v67);
  v70 = (char *)&v24 - v69;
  v71 = sub_10003A0C8(&qword_1005A5FB8);
  v72 = (*(_QWORD *)(*(_QWORD *)(v71 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v71);
  v73 = (uint64_t)&v24 - v72;
  v74 = sub_10003A0C8(&qword_1005A5FC0);
  v75 = (*(_QWORD *)(*(_QWORD *)(v74 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v74);
  v76 = (uint64_t)&v24 - v75;
  v78 = sub_10003A0C8(&qword_1005A5FC8);
  v79 = (*(_QWORD *)(*(_QWORD *)(v78 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v77);
  v80 = (uint64_t)&v24 - v79;
  v81 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v82 = (uint64_t)&v24 - v81;
  v83 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v9);
  v84 = (uint64_t)&v24 - v83;
  v101 = (char *)&v24 - v83;
  v100 = v1;
  v12 = (const void *)(v1 + *(int *)(v11 + 20));
  v89 = __dst;
  sub_100271D14(v12, __dst);
  sub_100271CA4((uint64_t)v89);
  sub_100272BE4();
  v86 = sub_100272C14();
  v87 = v13;
  sub_100272C4C();
  v90 = 1;
  sub_100272C7C(v85, v86, v87 & 1, v88, v89, v96);
  KeyPath = swift_getKeyPath(&unk_1004CE300);
  v14 = sub_100271E5C();
  v92 = &v99;
  v99 = v14 & v90;
  v15 = sub_100278AF4();
  View.environment<A>(_:_:)(KeyPath, v92, v93, v15);
  swift_release();
  sub_100278B64((uint64_t)v96);
  v97 = swift_getKeyPath(&unk_1004CE2D0);
  if ((sub_100271E5C() & 1) != 0)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v57, enum case for ColorScheme.dark(_:), v54);
  else
    sub_100271A34(v57);
  v16 = sub_100278D14();
  View.environment<A>(_:_:)(v97, v57, v62, v16);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v54);
  swift_release();
  sub_100278E10(v91);
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v50, enum case for DynamicTypeSize.accessibility2(_:), v45);
  v38 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v38(v48, v50, v45);
  sub_100278FAC();
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v48, v48) & 1) == 0)
  {
    v23 = 2;
    _assertionFailure(_:_:file:line:flags:)(v40, 11, 2, v41, 43, 2, v42, 17, v23, 816, 0);
    __break(1u);
  }
  v24 = *(void (**)(char *, uint64_t))(v46 + 8);
  v24(v48, v45);
  v38(v53, v50, v45);
  v24(v50, v45);
  v25 = sub_10027901C();
  v26 = sub_100279118();
  View.dynamicTypeSize<A>(_:)(v53, v64, v51, v25);
  sub_100279188((uint64_t)v53);
  sub_1002791C4(v66);
  v98[0] = v64;
  v98[1] = v51;
  v98[2] = v25;
  v98[3] = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v98, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  v17 = sub_100254ED4();
  View.padding(_:_:)(v17, 0, 1, v67, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v67);
  sub_10025B708(v94, v44);
  v33 = &v24;
  v28 = 32;
  __chkstk_darwin(&v24);
  v29 = (char *)&v24 - v28;
  *((_QWORD *)v29 + 2) = v18;
  v30 = sub_10003A0C8(&qword_1005A6018);
  v31 = sub_1002793C4();
  v32 = sub_1002794AC();
  v19 = sub_1002618BC(v71, v30);
  View.background<A>(alignment:content:)(v19);
  sub_10025B568((uint64_t)v44);
  sub_10027951C(v73);
  v20 = (char *)v94 + *(int *)(v77 + 20);
  v34 = v102;
  sub_100271D14(v20, v102);
  sub_100271CA4((uint64_t)v102);
  v35 = InstantAnswerView.Model.accessibilityIdentifier.getter();
  v36 = v21;
  sub_100271D4C((uint64_t)v34);
  sub_10027955C();
  View.accessibilityIdentifier(_:)(v35);
  swift_bridgeObjectRelease(v36);
  sub_100279658(v76);
  v37 = sub_100279710();
  sub_100253AA8(v82, v78, v84);
  sub_10027979C(v82);
  sub_100279890(v84, v80);
  sub_100253AA8(v80, v78, v39);
  sub_10027979C(v80);
  return sub_10027979C(v84);
}

uint64_t sub_100272BE4()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_1004CE328);
  return Environment.init(_:)(KeyPath);
}

uint64_t sub_100272C14()
{
  uint64_t KeyPath;
  uint64_t v2;

  KeyPath = swift_getKeyPath(&unk_1004CE300);
  Environment.init(_:)(KeyPath);
  return v2;
}

uint64_t sub_100272C4C()
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_1004CE2D0);
  return Environment.init(_:)(KeyPath);
}

double sub_100272C7C@<D0>(const void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, const void *a4@<X3>, const void *a5@<X4>, char *a6@<X8>)
{
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  double result;
  uint64_t v16;
  void *v17;
  int *v18;

  sub_1002650C0(a1, a6);
  v18 = (int *)type metadata accessor for InstantAnswerContentView(0);
  v6 = &a6[v18[5]];
  *(_QWORD *)v6 = a2;
  v6[8] = a3 & 1;
  sub_100286BB0(a4, &a6[v18[6]]);
  sub_100271D14(a5, &a6[v18[7]]);
  v16 = v18[8];
  v17 = (void *)MFImageGlyphInstantAnswersChevronForward;
  v7 = MFImageGlyphInstantAnswersChevronForward;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v9 = (uint64_t *)&a6[v16];
  *v9 = v8;
  v9[1] = v10;

  *(double *)&a6[v18[9]] = 4.0;
  result = 50.0;
  *(_QWORD *)&a6[v18[10]] = 0x4049000000000000;
  return result;
}

uint64_t sub_100272D80()
{
  uint64_t v0;
  unint64_t v1;
  char v3;
  uint64_t v4;

  v4 = v0;
  v1 = sub_100279A8C();
  EnvironmentValues.subscript.getter(&v3, &unk_100528808, &unk_100528808, v1);
  return v3 & 1;
}

uint64_t sub_100272DCC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char *v7;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;

  v11 = a2;
  v9 = a1;
  v13 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v13 - 8);
  v10 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v13);
  v14 = (char *)&v9 - v10;
  (*(void (**)(char *))(v2 + 16))((char *)&v9 - v10);
  v3 = sub_100272D80();
  v4 = v12;
  v5 = v13;
  v6 = v3;
  v7 = v14;
  *v11 = v6 & 1;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v5);
}

uint64_t sub_100272E78(_BYTE *a1)
{
  return sub_100272EA0(*a1 & 1);
}

uint64_t sub_100272EA0(char a1)
{
  uint64_t v1;
  unint64_t v2;
  char v4;
  uint64_t v5;
  char v6;

  v6 = a1 & 1;
  v5 = v1;
  v4 = a1 & 1;
  v2 = sub_100279A8C();
  return EnvironmentValues.subscript.setter(&v4, &unk_100528808, &unk_100528808, v2);
}

uint64_t sub_100272F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  void *v36;
  unint64_t v37;
  void *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  __int16 v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v41 = a2;
  v24 = a1;
  v50 = 0;
  v49 = 0;
  v17 = 0;
  v28 = type metadata accessor for ColorScheme(0);
  v25 = *(_QWORD *)(v28 - 8);
  v13 = (*(_QWORD *)(v25 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(0);
  v26 = (char *)&v12 - v13;
  v14 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v3);
  v27 = (char *)&v12 - v14;
  v21 = type metadata accessor for RoundedCornerStyle(v5);
  v20 = *(_QWORD *)(v21 - 8);
  v15 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v17);
  v23 = (char *)&v12 - v15;
  v35 = type metadata accessor for RoundedRectangle(v6);
  v16 = (*(_QWORD *)(*(_QWORD *)(v35 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v35);
  v40 = (uint64_t)&v12 - v16;
  v42 = sub_10003A0C8(&qword_1005A6018);
  v18 = (*(_QWORD *)(*(_QWORD *)(v42 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v17);
  v44 = (char *)&v12 - v18;
  v19 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v45 = (char *)&v12 - v19;
  v50 = (char *)&v12 - v19;
  v49 = a1;
  v30 = type metadata accessor for InstantAnswerView(v9);
  v22 = Double.init(_:)(*(Swift::Double *)(a1 + *(int *)(v30 + 28)));
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v23, enum case for RoundedCornerStyle.continuous(_:), v21);
  RoundedRectangle.init(cornerRadius:style:)(v23, v22);
  sub_100271A34((uint64_t)v27);
  v10 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v26, enum case for ColorScheme.dark(_:), v28);
  v31 = static ColorScheme.== infix(_:_:)(v27, v26);
  v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  v29(v26, v28);
  v29(v27, v28);
  v32 = *(_QWORD *)(v10 + *(int *)(v30 + 24));
  swift_retain(v32);
  v34 = 1;
  v33 = sub_1002732EC(v31 & 1, v32);
  swift_release();
  v39 = &v48;
  v48 = v33;
  v37 = sub_1002870B0();
  v36 = &type metadata for Color;
  v38 = &protocol witness table for Color;
  v47 = sub_100273584();
  LOBYTE(v46) = v47 & v34;
  HIBYTE(v46) = HIBYTE(v47) & v34;
  sub_1002735A8((uint64_t)v39, v46, v35, (uint64_t)v36, v37, (uint64_t)v38, (uint64_t)v44);
  sub_1001F0F44(v39);
  sub_100287120(v40);
  v43 = sub_1002794AC();
  sub_100253AA8((uint64_t)v44, v42, (uint64_t)v45);
  sub_10028717C((uint64_t)v44);
  sub_1002871F8(v45, v44);
  sub_100253AA8((uint64_t)v44, v42, v41);
  sub_10028717C((uint64_t)v44);
  return sub_10028717C((uint64_t)v45);
}

uint64_t sub_1002732EC(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void (*v14)(char *, uint64_t);
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v19 = a1;
  v27 = a2;
  v3 = v2;
  v18 = v3;
  v32 = 0;
  v31 = 0;
  v30 = 0;
  v29 = 0;
  v20 = type metadata accessor for ColorScheme(0);
  v21 = *(_QWORD *)(v20 - 8);
  v23 = *(_QWORD *)(v21 + 64);
  v22 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v19);
  v24 = (char *)&v10 - v22;
  v25 = v22;
  v6 = __chkstk_darwin(v5);
  v26 = (char *)&v10 - v25;
  v32 = v6 & 1;
  v31 = a2;
  v30 = v7;
  v28 = sub_1002705A8();
  swift_retain(v27);
  if ((v28 & 1) != 0)
    v17 = 1;
  else
    v17 = sub_1002711B8();
  v16 = v17;
  swift_release();
  if ((v16 & 1) != 0)
  {
    v29 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  }
  else if ((sub_100270CF4() & 1) != 0)
  {
    v29 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray3Color");
  }
  else
  {
    sub_100271A34((uint64_t)v26);
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v24, enum case for ColorScheme.dark(_:), v20);
    v15 = static ColorScheme.== infix(_:_:)(v26, v24);
    v14 = *(void (**)(char *, uint64_t))(v21 + 8);
    v14(v24, v20);
    v14(v26, v20);
    if ((v15 & 1) != 0)
      v13 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemGroupedBackgroundColor");
    else
      v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemGroupedBackgroundColor");
    v29 = v13;
  }
  v11 = v29;
  v8 = v29;
  v12 = Color.init(uiColor:)(v11);

  return v12;
}

uint64_t sub_100273584()
{
  return 256;
}

uint64_t sub_1002735A8@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int16 v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v16 = a7;
  v13 = a1;
  v18 = a3;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v26 = a2;
  v14 = a2;
  v15 = HIBYTE(a2);
  v25 = a3;
  v24 = a4;
  v12 = *(_QWORD *)(a4 - 8);
  v10 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(a1);
  v17 = (char *)&v10 - v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v10 - v10);
  v22 = (char *)&v10 - v11;
  (*(void (**)(void))(v8 + 16))();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v13, v19);
  LOBYTE(v23) = v14 & 1;
  HIBYTE(v23) = v15 & 1;
  return _ShapeView.init(shape:style:fillStyle:)(v22, v17, v23, v18, v19, v20, v21);
}

uint64_t sub_1002736D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;

  v10 = 0;
  v1 = v0 + *(int *)(type metadata accessor for InstantAnswerContentView(0) + 20);
  v5 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  sub_100279AF8(*(_QWORD *)v1, v4 & 1);
  sub_100279AF8(v5, v4 & 1);
  v7 = v5;
  v8 = v4 & 1;
  v2 = sub_10003A0C8(&qword_1005A6058);
  Environment.wrappedValue.getter(v2);
  sub_100279B28((uint64_t)&v7);
  v6 = v9;
  sub_100278CE4(v5, v4 & 1);
  return v6 & 1;
}

uint64_t sub_100273794@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a1;
  v8 = 0;
  v6 = sub_10003A0C8(&qword_1005A5F90);
  v5[0] = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v6);
  v1 = (_QWORD *)((char *)v5 - v5[0]);
  v7 = (uint64_t)v5 - v5[0];
  v8 = v2;
  v3 = type metadata accessor for InstantAnswerContentView(0);
  sub_100278738((_QWORD *)(v5[1] + *(int *)(v3 + 24)), v1);
  Environment.wrappedValue.getter(v6);
  return sub_1002787E8(v7);
}

uint64_t sub_100273840@<X0>(uint64_t a1@<X8>)
{
  return InstantAnswerView.body.getter(a1);
}

uint64_t sub_100273854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  unint64_t v7;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char __dst[8];

  v27 = a1;
  v38 = 0;
  v37 = 0;
  v36 = 0;
  v2 = sub_10003A0C8(&qword_1005A6060);
  v29 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v30 = (uint64_t)&v9 - v29;
  v38 = v1;
  if ((sub_1002736D8() & 1) != 0)
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  else
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v25 = Color.init(uiColor:)(v26);
  v37 = v25;
  if ((sub_1002736D8() & 1) != 0)
    v24 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  else
    v24 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v23 = Color.init(uiColor:)(v24);
  v36 = v23;
  v15 = 0;
  v13 = type metadata accessor for InstantAnswerContentView(0);
  v3 = (const void *)(v28 + *(int *)(v13 + 28));
  v10 = __dst;
  sub_100271D14(v3, __dst);
  sub_100271CA4((uint64_t)__dst);
  v12 = InstantAnswerView.Model.iconSymbolName.getter();
  v11 = v4;
  sub_100271D4C((uint64_t)v10);
  v5 = Image.init(systemName:)(v12);
  v18 = &v34;
  v34 = v5;
  v14 = Double.init(_:)(*(Swift::Double *)(v28 + *(int *)(v13 + 40)));
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(type metadata accessor for Font.Design(v15) - 8) + 56);
  v16 = 1;
  v6(v30, 1);
  v17 = static Font.system(size:weight:design:)(v15, v16, v30, v14);
  sub_100279BB4(v30);
  View.font(_:)(v35, v17, &type metadata for Image, &protocol witness table for Image);
  swift_release();
  sub_1001F0F44(v18);
  v22 = v33;
  v33[0] = v35[0];
  v33[1] = v35[1];
  v33[2] = v35[2];
  v21 = &v32;
  v32 = v25;
  v19 = &v31;
  v31 = v23;
  v20 = sub_10003A0C8(&qword_1005A5D30);
  v7 = sub_10026547C();
  View.foregroundStyle<A, B>(_:_:)(v21, v19, v20, &type metadata for Color, &type metadata for Color, v7, &protocol witness table for Color);
  sub_100265574(v22);
  swift_release();
  return swift_release();
}

uint64_t sub_100273BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v3[2];
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;

  v5 = a1;
  v12 = 0;
  v4 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for InstantAnswerContentView(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = (uint64_t)v3 - v4;
  v12 = (_QWORD *)__chkstk_darwin(v3[1]);
  sub_100279C24(v12, (_QWORD *)((char *)v3 - v4));
  v6 = &v10;
  v11 = v9;
  v7 = sub_10003A0C8(&qword_1005A6068);
  v8 = sub_100279F70();
  v1 = sub_10027497C();
  ViewThatFits.init(in:content:)(v1, sub_100279F68, v6, v7, v8);
  return sub_100278B64(v9);
}

uint64_t sub_100273CA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unsigned int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  char v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v43[2];
  _QWORD v44[2];
  uint64_t v45;
  char *v46;
  char *v47;

  v31 = a2;
  v20 = a1;
  v47 = 0;
  v46 = 0;
  v45 = 0;
  v28 = sub_10003A0C8(&qword_1005A6600);
  v12 = (*(_QWORD *)(*(_QWORD *)(v28 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v28);
  v33 = (uint64_t)&v11 - v12;
  v13 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v11 - v12);
  v35 = (uint64_t)&v11 - v13;
  v47 = (char *)&v11 - v13;
  v21 = 0;
  v3 = type metadata accessor for InstantAnswerContentView(0);
  v14 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v26 = (uint64_t *)((char *)&v11 - v14);
  v27 = sub_10003A0C8(&qword_1005A6608);
  v15 = (*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v20);
  v34 = (uint64_t)&v11 - v15;
  v16 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6 = __chkstk_darwin(v4);
  v36 = (uint64_t)&v11 - v16;
  v46 = (char *)&v11 - v16;
  v45 = v6;
  v19 = static VerticalAlignment.firstTextBaseline.getter(v6);
  sub_100279C24(v20, v26);
  v17 = &v39;
  v40 = v26;
  v18 = sub_10003A0C8(&qword_1005A6108);
  v7 = sub_1002866A4();
  v22 = 1;
  HStack.init(alignment:spacing:content:)(v19, v21, 1, sub_10028669C, v17, v18, v7);
  sub_100278B64((uint64_t)v26);
  v29 = sub_10028681C();
  sub_100253AA8(v34, v27, v36);
  v8 = sub_10028688C(v34);
  v25 = static HorizontalAlignment.leading.getter(v8);
  sub_100279C24(v20, v26);
  v23 = &v37;
  v38 = v26;
  v24 = sub_10003A0C8(&qword_1005A6120);
  v9 = sub_1002868F0();
  VStack.init(alignment:spacing:content:)(v25, v21, v22, sub_1002868E8, v23, v24, v9);
  sub_100278B64((uint64_t)v26);
  v30 = sub_10028696C();
  sub_100253AA8(v33, v28, v35);
  sub_1002869DC(v33);
  sub_100286A38(v36, v34);
  v32 = v44;
  v44[0] = v34;
  sub_100286ABC(v35, v33);
  v44[1] = v33;
  v43[0] = v27;
  v43[1] = v28;
  v41 = v29;
  v42 = v30;
  sub_1002C9238((uint64_t)v32, 2uLL, (uint64_t)v43, v31);
  sub_1002869DC(v33);
  sub_10028688C(v34);
  sub_1002869DC(v35);
  return sub_10028688C(v36);
}

uint64_t sub_100274034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _BYTE __dst[88];

  v20 = a2;
  v11 = a1;
  v28 = 0;
  v27 = 0;
  v24 = sub_10003A0C8(&qword_1005A6108);
  v19 = *(_QWORD *)(v24 - 8);
  v9 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v11);
  v22 = (uint64_t)&v8 - v9;
  v10 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v23 = (uint64_t)&v8 - v10;
  v28 = (char *)&v8 - v10;
  v27 = v4;
  v5 = (const void *)(v11 + *(int *)(type metadata accessor for InstantAnswerContentView(0) + 28));
  v12 = __dst;
  sub_100271D14(v5, __dst);
  sub_100271CA4((uint64_t)__dst);
  v13 = InstantAnswerView.Model.actions.getter();
  sub_100271D4C((uint64_t)v12);
  v18 = &v26;
  v26 = v13;
  KeyPath = swift_getKeyPath(&unk_1004CE918);
  v15 = sub_10003A0C8(&qword_1005A6648);
  v16 = sub_10003A0C8(&qword_1005A6620);
  v17 = sub_100286B40();
  v6 = sub_100286720();
  ForEach<>.init(_:id:content:)(v18, KeyPath, sub_100274264, 0, v15, v16, v17, &protocol witness table for String, v6);
  v21 = sub_1002866A4();
  sub_100253AA8(v22, v24, v23);
  v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v25(v22, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v22, v23, v24);
  sub_100253AA8(v22, v24, v20);
  v25(v22, v24);
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v23, v24);
}

uint64_t sub_100274264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char *v29;
  _QWORD __dst[8];

  v24 = a2;
  v14 = a1;
  v29 = 0;
  v2 = sub_10003A0C8(&qword_1005A5A90);
  v11 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v19 = (char *)&v10 - v11;
  v3 = sub_10003A0C8(&qword_1005A5F90);
  v12 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v18 = (char *)&v10 - v12;
  v20 = type metadata accessor for InstantAnswerButton(0);
  v13 = (*(_QWORD *)(*(_QWORD *)(v20 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v20);
  v4 = (char *)&v10 - v13;
  v23 = (uint64_t)&v10 - v13;
  v25 = sub_10003A0C8(&qword_1005A6620);
  v15 = (*(_QWORD *)(*(_QWORD *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v10 - v15);
  v16 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v10 - v15);
  v28 = (uint64_t *)((char *)&v10 - v16);
  v29 = (char *)&v10 - v16;
  v17 = __dst;
  memcpy(__dst, v6, sizeof(__dst));
  sub_10025AFA0(__dst);
  sub_100272C4C();
  sub_100272BE4();
  v7 = sub_100272C14();
  sub_1002744C0(v18, v19, v7, v8 & 1, v17, v4);
  v21 = __dst[4];
  v22 = __dst[5];
  swift_bridgeObjectRetain(__dst[5]);
  sub_1002867AC();
  View.accessibilityIdentifier(_:)(v21);
  swift_bridgeObjectRelease(v22);
  sub_10027E58C(v23);
  v26 = sub_100286720();
  sub_100253AA8((uint64_t)v27, v25, (uint64_t)v28);
  sub_100286C50((uint64_t)v27);
  sub_100286DD4(v28, v27);
  sub_100253AA8((uint64_t)v27, v25, v24);
  sub_100286C50((uint64_t)v27);
  return sub_100286C50((uint64_t)v28);
}

double sub_1002744C0@<D0>(const void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, const void *a5@<X4>, char *a6@<X8>)
{
  char *v6;
  double result;
  int *v12;

  sub_100286BB0(a1, a6);
  v12 = (int *)type metadata accessor for InstantAnswerButton(0);
  sub_1002650C0(a2, &a6[v12[5]]);
  v6 = &a6[v12[6]];
  *(_QWORD *)v6 = a3;
  v6[8] = a4 & 1;
  memcpy(&a6[v12[7]], a5, 0x40uLL);
  result = 0.5;
  *(double *)&a6[v12[8]] = 0.5;
  return result;
}

uint64_t sub_100274574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  unint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _BYTE __dst[80];

  v20 = a2;
  v10 = a1;
  v28 = 0;
  v27 = 0;
  v24 = sub_10003A0C8(&qword_1005A6120);
  v19 = *(_QWORD *)(v24 - 8);
  v8 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v10);
  v22 = (uint64_t)&v8 - v8;
  v9 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v2);
  v23 = (uint64_t)&v8 - v9;
  v28 = (char *)&v8 - v9;
  v27 = v4;
  v13 = 0;
  v5 = (const void *)(v10 + *(int *)(type metadata accessor for InstantAnswerContentView(0) + 28));
  v11 = __dst;
  sub_100271D14(v5, __dst);
  sub_100271CA4((uint64_t)__dst);
  v12 = InstantAnswerView.Model.actions.getter();
  sub_100271D4C((uint64_t)v11);
  v18 = &v26;
  v26 = v12;
  KeyPath = swift_getKeyPath(&unk_1004CE918);
  v15 = sub_10003A0C8(&qword_1005A6648);
  v16 = type metadata accessor for InstantAnswerButton(v13);
  v17 = sub_100286B40();
  v6 = sub_1002867AC();
  ForEach<>.init(_:id:content:)(v18, KeyPath, sub_1002747B0, 0, v15, v16, v17, &protocol witness table for String, v6);
  v21 = sub_1002868F0();
  sub_100253AA8(v22, v24, v23);
  v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v25(v22, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v22, v23, v24);
  sub_100253AA8(v22, v24, v20);
  v25(v22, v24);
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v23, v24);
}

uint64_t sub_1002747B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  char v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD __dst[8];

  v17 = a2;
  v11 = a1;
  v22 = 0;
  v2 = sub_10003A0C8(&qword_1005A5A90);
  v9 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v2);
  v16 = (char *)&v9 - v9;
  v3 = sub_10003A0C8(&qword_1005A5F90);
  v10 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v3);
  v15 = (char *)&v9 - v10;
  v18 = type metadata accessor for InstantAnswerButton(0);
  v12 = (*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v18);
  v20 = (char *)&v9 - v12;
  v13 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v9 - v12);
  v21 = (unint64_t *)((char *)&v9 - v13);
  v22 = (char *)&v9 - v13;
  v14 = __dst;
  memcpy(__dst, v5, sizeof(__dst));
  sub_10025AFA0(__dst);
  sub_100272C4C();
  sub_100272BE4();
  v6 = sub_100272C14();
  sub_1002744C0(v15, v16, v6, v7 & 1, v14, v20);
  v19 = sub_1002867AC();
  sub_100253AA8((uint64_t)v20, v18, (uint64_t)v21);
  sub_10027E58C((uint64_t)v20);
  sub_10027E118(v21, v20);
  sub_100253AA8((uint64_t)v20, v18, v17);
  sub_10027E58C((uint64_t)v20);
  return sub_10027E58C((uint64_t)v21);
}

uint64_t sub_10027497C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v8 = static Axis.Set.horizontal.getter();
  v6 = static Axis.Set.vertical.getter();
  v0 = Axis.Set.init(rawValue:)(0);
  v7 = v0;
  v1 = Axis.Set.init(rawValue:)(v0);
  if (Axis.Set.init(rawValue:)(v1 & v8) == v8)
    v5 = v7;
  else
    v5 = Axis.Set.init(rawValue:)(v7 | v8);
  v2 = Axis.Set.init(rawValue:)(v5);
  if (Axis.Set.init(rawValue:)(v2 & v6) == v6)
    return v5;
  else
    return Axis.Set.init(rawValue:)(v5 | v6);
}

uint64_t sub_100274A5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v14 = a1;
  v36 = 0;
  v25 = 0;
  v15 = type metadata accessor for ColorScheme(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v15);
  v18 = (uint64_t)&v10 - v17;
  v19 = sub_10003A0C8(&qword_1005A6078);
  v20 = (*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v19);
  v21 = (uint64_t)&v10 - v20;
  v22 = sub_10003A0C8(&qword_1005A6080);
  v23 = (*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v22);
  v24 = (uint64_t **)((char *)&v10 - v23);
  v26 = sub_10003A0C8(&qword_1005A6088);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(v25);
  v29 = (char *)&v10 - v28;
  v36 = v1;
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for InstantAnswerContentView(v2) + 32));
  v30 = *v3;
  v31 = v3[1];
  swift_bridgeObjectRetain(v31);
  v35 = Image.init(systemName:)(v30);
  KeyPath = swift_getKeyPath(&unk_1004CE2D0);
  if ((sub_1002736D8() & 1) != 0)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v18, enum case for ColorScheme.light(_:), v15);
  else
    sub_100273794(v18);
  v10 = &v35;
  View.environment<A>(_:_:)(KeyPath, v18, &type metadata for Image, &protocol witness table for Image);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
  swift_release();
  sub_1001F0F44(v10);
  v11 = static Font.footnote.getter();
  v4 = sub_100279FE0();
  View.font(_:)(v24, v11, v19, v4);
  swift_release();
  sub_10027A068(v21);
  v12 = sub_10027A0F0();
  v5 = sub_100274D90();
  View.bold(_:)(v5 & 1, v22, v12);
  sub_10027A17C((uint64_t)v24);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
  v7 = Color.init(uiColor:)(v6);
  v13 = &v34;
  v34 = v7;
  v33[0] = v22;
  v33[1] = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v33, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
  View.foregroundStyle<A>(_:)(v14, v13, v26, &type metadata for Color, OpaqueTypeConformance2, &protocol witness table for Color);
  sub_1001F0F44(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
}

uint64_t sub_100274D90()
{
  return 1;
}

uint64_t sub_100274DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD **v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD **v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unsigned int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;

  v29 = a1;
  v62 = 0;
  v61 = 0;
  v60 = 0;
  v59 = 0;
  v31 = sub_10003A0C8(&qword_1005A60A0);
  v32 = (*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v31);
  v33 = (uint64_t)&v19 - v32;
  v34 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v19 - v32);
  v35 = (uint64_t)&v19 - v34;
  v36 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v19 - v34);
  v37 = (uint64_t)&v19 - v36;
  v62 = (char *)&v19 - v36;
  v40 = 0;
  v4 = type metadata accessor for InstantAnswerContentView(0);
  v38 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v4);
  v39 = (_QWORD **)((char *)&v19 - v38);
  v41 = sub_10003A0C8(&qword_1005A60A8);
  v42 = (*(_QWORD *)(*(_QWORD *)(v41 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v40);
  v43 = (uint64_t)&v19 - v42;
  v44 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7 = __chkstk_darwin(v5);
  v45 = (uint64_t)&v19 - v44;
  v46 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v7);
  v47 = (uint64_t)&v19 - v46;
  v61 = (char *)&v19 - v46;
  v56 = type metadata accessor for ContentSizeCategory(v9);
  v55 = *(_QWORD *)(v56 - 8);
  v48 = (*(_QWORD *)(v55 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v56);
  v57 = (char *)&v19 - v48;
  v49 = sub_10003A0C8(&qword_1005A60B0);
  v51 = *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64);
  v50 = (v51 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  v52 = (uint64_t)&v19 - v50;
  v53 = (v51 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v19 - v50);
  v54 = (uint64_t)&v19 - v53;
  v60 = (char *)&v19 - v53;
  v59 = v1;
  v11 = sub_10025B9C0(v10);
  v58 = ContentSizeCategory.isAccessibilityCategory.getter(v11);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v56);
  if ((v58 & 1) != 0)
  {
    v26 = static HorizontalAlignment.leading.getter(v58);
    sub_100279C24(v30, v39);
    v27 = &v19;
    __chkstk_darwin(&v19);
    v24 = &v19 - 4;
    *(&v19 - 2) = v12;
    v25 = sub_10003A0C8(&qword_1005A6178);
    v13 = sub_10027D3B4();
    VStack.init(alignment:spacing:content:)(v26, 0, 1, sub_10027D3AC, v24, v25, v13);
    sub_100278B64((uint64_t)v39);
    v28 = sub_10027B140();
    sub_100253AA8(v45, v41, v47);
    sub_10027D424(v45);
    sub_10027D84C(v47, v43);
    sub_100253AA8(v43, v41, v45);
    sub_10027D424(v43);
    v14 = sub_10027A2B0();
    sub_1002610B8(v45, v41, v31, v28, v14, v52);
    sub_10027D424(v45);
    sub_10027B1B0(v52, v54);
    sub_10027D424(v47);
  }
  else
  {
    v21 = *sub_10026FC68();
    sub_100279C24(v30, v39);
    v22 = &v19;
    __chkstk_darwin(&v19);
    v19 = &v19 - 4;
    *(&v19 - 2) = v15;
    v20 = sub_10003A0C8(&qword_1005A60B8);
    v16 = sub_10027A240();
    HStack.init(alignment:spacing:content:)(v21, 0, 1, sub_10027A238, v19, v20, v16);
    sub_100278B64((uint64_t)v39);
    v23 = sub_10027A2B0();
    sub_100253AA8(v35, v31, v37);
    sub_10027A320(v35);
    sub_10027A7C4(v37, v33);
    sub_100253AA8(v33, v31, v35);
    sub_10027A320(v33);
    v17 = sub_10027B140();
    sub_10026117C(v35, v41, v31, v17, v23, v52);
    sub_10027A320(v35);
    sub_10027B1B0(v52, v54);
    sub_10027A320(v37);
  }
  sub_10027BC34(v54, v52);
  sub_10027CBB4();
  sub_100253AA8(v52, v49, v29);
  sub_10027CC40(v52);
  return sub_10027CC40(v54);
}

uint64_t sub_10027538C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _BYTE *v54;
  unint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  char *v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  Swift::Double v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  _QWORD v113[3];
  _QWORD v114[3];
  _QWORD v115[3];
  _QWORD v116[3];
  _QWORD *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  _QWORD v123[10];
  _QWORD v124[6];

  v51 = a2;
  v99 = a1;
  v122 = 0;
  v121 = 0;
  v120 = 0;
  v119 = 0;
  v118 = 0;
  v117 = 0;
  v52 = sub_10003A0C8(&qword_1005A6520);
  v53 = (*(_QWORD *)(*(_QWORD *)(v52 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v52);
  v54 = (char *)&v23 - v53;
  v55 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v23 - v53);
  v56 = (char *)&v23 - v55;
  v122 = (char *)&v23 - v55;
  v84 = 0;
  v57 = type metadata accessor for InstantAnswerHotelContentView(0);
  v58 = (*(_QWORD *)(*(_QWORD *)(v57 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v57);
  v59 = (unint64_t *)((char *)&v23 - v58);
  v60 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v23 - v58);
  v61 = (char *)&v23 - v60;
  v62 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v23 - v60);
  v63 = (unint64_t *)((char *)&v23 - v62);
  v121 = (char *)&v23 - v62;
  v64 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A5A90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v84);
  v65 = (char *)&v23 - v64;
  v66 = type metadata accessor for InstantAnswerFlightContentView(v5);
  v67 = (*(_QWORD *)(*(_QWORD *)(v66 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v66);
  v68 = (unint64_t *)((char *)&v23 - v67);
  v69 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v23 - v67);
  v70 = (char *)&v23 - v69;
  v71 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v23 - v69);
  v72 = (unint64_t *)((char *)&v23 - v71);
  v120 = (char *)&v23 - v71;
  v73 = sub_10003A0C8(&qword_1005A6570);
  v74 = (*(_QWORD *)(*(_QWORD *)(v73 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v84);
  v75 = (char *)&v23 - v74;
  v76 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = __chkstk_darwin(v8);
  v77 = (char *)&v23 - v76;
  v119 = (char *)&v23 - v76;
  v97 = type metadata accessor for InstantAnswerContentView(v10);
  v78 = (*(_QWORD *)(*(_QWORD *)(v97 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v97);
  v88 = (uint64_t)&v23 - v78;
  v90 = sub_10003A0C8(&qword_1005A6578);
  v79 = (*(_QWORD *)(*(_QWORD *)(v90 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v90);
  v92 = (uint64_t)&v23 - v79;
  v94 = sub_10003A0C8(&qword_1005A6160);
  v80 = (*(_QWORD *)(*(_QWORD *)(v94 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = __chkstk_darwin(v99);
  v81 = (uint64_t)&v23 - v80;
  v82 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = __chkstk_darwin(v11);
  v96 = (uint64_t)&v23 - v82;
  v83 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v15 = (_QWORD *)__chkstk_darwin(v13);
  v93 = (uint64_t)&v23 - v83;
  v118 = (char *)&v23 - v83;
  v117 = v15;
  sub_100279C24(v15, v16);
  v85 = v113;
  v113[2] = v88;
  v86 = sub_10003A0C8(&qword_1005A6580);
  v87 = sub_10028464C();
  v17 = sub_100275F44();
  v98 = 1;
  HStack.init(alignment:spacing:content:)(v17, v84, 1, sub_100284644, v85, v86, v87);
  v18 = sub_100278B64(v88);
  v91 = static Edge.Set.bottom.getter(v18);
  v89 = Double.init(_:)(*(Swift::Double *)(v99 + *(int *)(v97 + 36)));
  v19 = sub_1002846BC();
  View.padding(_:_:)(v91, *(_QWORD *)&v89, 0, v90, v19);
  sub_10028472C(v92);
  v95 = sub_100284800();
  sub_100253AA8(v96, v94, v93);
  sub_10028472C(v96);
  v100 = v99 + *(int *)(v97 + 28);
  v101 = *(_QWORD *)v100;
  v102 = *(_QWORD *)(v100 + 8);
  v103 = *(_QWORD *)(v100 + 16);
  v104 = *(_QWORD *)(v100 + 24);
  v105 = *(_QWORD *)(v100 + 32);
  v106 = *(_QWORD *)(v100 + 40);
  v107 = *(_QWORD *)(v100 + 48);
  v108 = *(_QWORD *)(v100 + 56);
  v109 = *(_QWORD *)(v100 + 64);
  v110 = *(_QWORD *)(v100 + 72);
  v111 = *(_QWORD *)(v100 + 80);
  v112 = *(unsigned __int8 *)(v100 + 88);
  sub_10025B910(v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112 & v98);
  if ((v112 & 1) != 0)
  {
    v33 = v101;
    v34 = v102;
    v35 = v103;
    v36 = v104;
    v37 = v105;
    v38 = v106;
    v39 = v107;
    v29 = v107;
    v27 = v124;
    v124[0] = v101;
    v124[1] = v102;
    v124[2] = v103;
    v124[3] = v104;
    v124[4] = v105;
    v124[5] = v106;
    sub_10026E504();
    sub_10026E55C(v65, v27, v61);
    v28 = sub_100284888();
    sub_100253AA8((uint64_t)v61, v57, (uint64_t)v63);
    sub_10026DF80((uint64_t)v61);
    sub_10026DDC8(v63, v59);
    sub_100253AA8((uint64_t)v59, v57, (uint64_t)v61);
    sub_10026DF80((uint64_t)v59);
    v21 = sub_1002848F8();
    sub_10026117C((uint64_t)v61, v66, v57, v21, v28, (uint64_t)v75);
    sub_10026DF80((uint64_t)v61);
    sub_100284968(v75, v77);
    sub_10026DF80((uint64_t)v63);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v40 = v101;
    v41 = v102;
    v42 = v103;
    v43 = v104;
    v44 = v105;
    v45 = v106;
    v46 = v107;
    v47 = v108;
    v48 = v109;
    v49 = v110;
    v50 = v111;
    v32 = v111;
    v30 = v123;
    v123[0] = v101;
    v123[1] = v102;
    v123[2] = v103;
    v123[3] = v104;
    v123[4] = v105;
    v123[5] = v106;
    v123[6] = v107;
    v123[7] = v108;
    v123[8] = v109;
    v123[9] = v110;
    sub_100260D80();
    sub_100260DB0(v65, v30, v70);
    v31 = sub_1002848F8();
    sub_100253AA8((uint64_t)v70, v66, (uint64_t)v72);
    sub_100261BFC((uint64_t)v70);
    sub_1002618E0(v72, v68);
    sub_100253AA8((uint64_t)v68, v66, (uint64_t)v70);
    sub_100261BFC((uint64_t)v68);
    v20 = sub_100284888();
    sub_1002610B8((uint64_t)v70, v66, v57, v31, v20, (uint64_t)v75);
    sub_100261BFC((uint64_t)v70);
    sub_100284968(v75, v77);
    sub_100261BFC((uint64_t)v72);
    swift_bridgeObjectRelease(v32);
  }
  sub_100273BCC((uint64_t)v54);
  v23 = sub_100284118();
  sub_100253AA8((uint64_t)v54, v52, (uint64_t)v56);
  sub_100284BC4((uint64_t)v54);
  sub_100284C98(v93, v81);
  v26 = v116;
  v116[0] = v81;
  sub_100284E60(v77, v75);
  v116[1] = v75;
  sub_100285274(v56, v54);
  v116[2] = v54;
  v24 = v115;
  v115[0] = v94;
  v115[1] = v73;
  v115[2] = v52;
  v25 = v114;
  v114[0] = v95;
  v114[1] = sub_1002853BC();
  v114[2] = v23;
  sub_1002C9238((uint64_t)v26, 3uLL, (uint64_t)v24, v51);
  sub_100284BC4((uint64_t)v54);
  sub_100285448((uint64_t)v75);
  sub_10028472C(v81);
  sub_100284BC4((uint64_t)v56);
  sub_100285448((uint64_t)v77);
  return sub_10028472C(v93);
}

_QWORD *sub_100275CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  void *v24;
  unint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  char v28;
  _QWORD v29[5];
  _QWORD v30[3];
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  _QWORD v35[5];
  _QWORD v36[5];
  _BYTE v37[40];
  uint64_t v38;
  char *v39;

  v17 = a2;
  v8 = a1;
  v39 = 0;
  v38 = 0;
  v10 = &v33;
  v33 = 0;
  v34 = 0;
  v13 = sub_10003A0C8(&qword_1005A6128);
  v6 = (*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v13);
  v19 = (unint64_t *)((char *)&v6 - v6);
  v7 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v6 - v6);
  v21 = (uint64_t)&v6 - v7;
  v39 = (char *)&v6 - v7;
  v38 = a1;
  sub_100273854((uint64_t)v36);
  v9 = v35;
  v35[0] = v36[0];
  v35[1] = v36[1];
  v35[2] = v36[2];
  v35[3] = v36[3];
  v35[4] = v36[4];
  v11 = sub_10003A0C8(&qword_1005A6500);
  v14 = sub_100284008();
  v22 = v37;
  sub_100253AA8((uint64_t)v9, v11, (uint64_t)v37);
  sub_100285634(v9);
  v31 = Spacer.init(minLength:)(0);
  v32 = v4 & 1;
  v12 = &type metadata for Spacer;
  v15 = &protocol witness table for Spacer;
  sub_100253AA8((uint64_t)&v31, (uint64_t)&type metadata for Spacer, (uint64_t)v10);
  sub_100274A5C(v19);
  v16 = sub_10028419C();
  sub_100253AA8((uint64_t)v19, v13, v21);
  sub_10028568C((uint64_t)v19);
  v20 = v29;
  sub_1002856EC(v22, v29);
  v18 = v30;
  v30[0] = v20;
  v27 = v33;
  v28 = v34;
  v30[1] = &v27;
  sub_100285794(v21, (uint64_t)v19);
  v30[2] = v19;
  v26[0] = v11;
  v26[1] = v12;
  v26[2] = v13;
  v23 = v14;
  v24 = v15;
  v25 = v16;
  sub_1002C9238((uint64_t)v18, 3uLL, (uint64_t)v26, v17);
  sub_10028568C((uint64_t)v19);
  sub_100285634(v20);
  sub_10028568C(v21);
  return sub_100285634(v22);
}

uint64_t sub_100275F44()
{
  return static VerticalAlignment.center.getter();
}

_QWORD *sub_100275F64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  Swift::Double v22;
  uint64_t v23;
  unsigned int v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD v58[7];
  _QWORD v59[4];
  uint64_t v60;
  char v61;
  _QWORD v62[14];
  _QWORD v63[4];
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  _QWORD v68[5];
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[5];
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  _QWORD v85[5];
  _QWORD v86[10];
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[112];
  _QWORD *v108;
  char *v109;
  char *v110;

  v50 = a2;
  v28 = a1;
  v110 = 0;
  v109 = 0;
  v108 = 0;
  v37 = &v66;
  v66 = 0;
  v67 = 0;
  v39 = sub_10003A0C8(&qword_1005A6128);
  v15 = (*(_QWORD *)(*(_QWORD *)(v39 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v39);
  v41 = (uint64_t *)((char *)&v14 - v15);
  v45 = sub_10003A0C8(&qword_1005A6130);
  v16 = (*(_QWORD *)(*(_QWORD *)(v45 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v45);
  v52 = (uint64_t)&v14 - v16;
  v17 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v16);
  v55 = (uint64_t)&v14 - v17;
  v110 = (char *)&v14 - v17;
  v35 = 0;
  v21 = type metadata accessor for InstantAnswerContentView(0);
  v18 = (*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v21);
  v34 = (uint64_t *)((char *)&v14 - v18);
  v43 = sub_10003A0C8(&qword_1005A65B8);
  v19 = (*(_QWORD *)(*(_QWORD *)(v43 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v43);
  v53 = (uint64_t)&v14 - v19;
  v20 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v14 - v19);
  v56 = (uint64_t)&v14 - v20;
  v109 = (char *)&v14 - v20;
  v108 = a1;
  v5 = sub_100273854((uint64_t)v86);
  v25 = v85;
  v85[0] = v86[0];
  v85[1] = v86[1];
  v85[2] = v86[2];
  v85[3] = v86[3];
  v85[4] = v86[4];
  v24 = static Edge.Set.trailing.getter(v5);
  v22 = Double.init(_:)(*(Swift::Double *)((char *)v28 + *(int *)(v21 + 36)));
  v23 = sub_10003A0C8(&qword_1005A6500);
  v6 = sub_100284008();
  View.padding(_:_:)(v24, *(_QWORD *)&v22, 0, v23, v6);
  sub_100285634(v25);
  v29 = v78;
  v78[0] = v86[5];
  v78[1] = v86[6];
  v78[2] = v86[7];
  v78[3] = v86[8];
  v78[4] = v86[9];
  v79 = v87;
  v80 = v88;
  v81 = v89;
  v82 = v90;
  v83 = v91;
  v36 = 1;
  v84 = v92 & 1;
  v27 = *sub_10026FC68();
  v26 = sub_10003A0C8(&qword_1005A65C0);
  v7 = sub_100285814();
  v38 = 0;
  View.alignmentGuide(_:computeValue:)(v27, sub_10025F8F0, 0, v26, v7);
  v8 = v28;
  sub_100285634(v29);
  v30 = v68;
  v68[0] = v93;
  v68[1] = v94;
  v68[2] = v95;
  v68[3] = v96;
  v68[4] = v97;
  v69 = v98;
  v70 = v99;
  v71 = v100;
  v72 = v101;
  v73 = v102;
  v74 = v103 & 1 & v36;
  v75 = v104;
  v76 = v105;
  v77 = v106;
  v42 = sub_10003A0C8(&qword_1005A65D0);
  v46 = sub_10028589C();
  v57 = v107;
  sub_100253AA8((uint64_t)v30, v42, (uint64_t)v107);
  v9 = sub_100285928(v30);
  v33 = static HorizontalAlignment.leading.getter(v9);
  sub_100279C24(v8, v34);
  v31 = v58;
  v58[2] = v34;
  v32 = sub_10003A0C8(&qword_1005A65E0);
  v10 = sub_100285994();
  VStack.init(alignment:spacing:content:)(v33, v35, v36, sub_10028598C, v31, v32, v10);
  sub_100278B64((uint64_t)v34);
  v47 = sub_100285A04();
  sub_100253AA8(v53, v43, v56);
  sub_100285A74(v53);
  v64 = Spacer.init(minLength:)(v35);
  v65 = v11 & 1 & v36;
  v44 = &type metadata for Spacer;
  v48 = &protocol witness table for Spacer;
  sub_100253AA8((uint64_t)&v64, (uint64_t)&type metadata for Spacer, (uint64_t)v37);
  sub_100274A5C(v41);
  v40 = *sub_10026FC68();
  v12 = sub_10028419C();
  View.alignmentGuide(_:computeValue:)(v40, sub_10025F8F0, v38, v39, v12);
  sub_10028568C((uint64_t)v41);
  v49 = sub_100285D8C();
  sub_100253AA8(v52, v45, v55);
  sub_100285E18(v52);
  v54 = v62;
  sub_100285E9C(v57, v62);
  v51 = v63;
  v63[0] = v54;
  sub_100285F94(v56, v53);
  v63[1] = v53;
  v60 = v66;
  v61 = v67;
  v63[2] = &v60;
  sub_1002865BC(v55, v52);
  v63[3] = v52;
  v59[0] = v42;
  v59[1] = v43;
  v59[2] = v44;
  v59[3] = v45;
  v58[3] = v46;
  v58[4] = v47;
  v58[5] = v48;
  v58[6] = v49;
  sub_1002C9238((uint64_t)v51, 4uLL, (uint64_t)v59, v50);
  sub_100285E18(v52);
  sub_100285A74(v53);
  sub_100285928(v54);
  sub_100285E18(v55);
  sub_100285A74(v56);
  return sub_100285928(v57);
}

uint64_t sub_100276584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  unint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  char *v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD v88[2];
  _QWORD v89[2];
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  _QWORD v95[10];
  _QWORD v96[6];

  v43 = a2;
  v72 = a1;
  v94 = 0;
  v93 = 0;
  v92 = 0;
  v91 = 0;
  v90 = 0;
  v44 = sub_10003A0C8(&qword_1005A6520);
  v45 = (*(_QWORD *)(*(_QWORD *)(v44 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v44);
  v46 = (char *)&v15 - v45;
  v47 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v45);
  v48 = (char *)&v15 - v47;
  v94 = (char *)&v15 - v47;
  v65 = 0;
  v49 = type metadata accessor for InstantAnswerHotelContentView(0);
  v50 = (*(_QWORD *)(*(_QWORD *)(v49 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  v51 = (uint64_t *)((char *)&v15 - v50);
  v52 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v50);
  v53 = (char *)&v15 - v52;
  v54 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v52);
  v55 = (uint64_t *)((char *)&v15 - v54);
  v93 = (char *)&v15 - v54;
  v56 = (*(_QWORD *)(*(_QWORD *)(sub_10003A0C8(&qword_1005A5A90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5 = __chkstk_darwin(v65);
  v57 = (char *)&v15 - v56;
  v58 = type metadata accessor for InstantAnswerFlightContentView(v5);
  v59 = (*(_QWORD *)(*(_QWORD *)(v58 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v58);
  v60 = (uint64_t *)((char *)&v15 - v59);
  v61 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v59);
  v62 = (char *)&v15 - v61;
  v63 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin((char *)&v15 - v61);
  v64 = (uint64_t *)((char *)&v15 - v63);
  v92 = (char *)&v15 - v63;
  v66 = sub_10003A0C8(&qword_1005A6570);
  v68 = *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64);
  v67 = (v68 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = __chkstk_darwin(v65);
  v69 = (char *)&v15 - v67;
  v70 = (v68 + 15) & 0xFFFFFFFFFFFFFFF0;
  v9 = __chkstk_darwin(v8);
  v71 = (char *)&v15 - v70;
  v91 = (char *)&v15 - v70;
  v90 = v10;
  v11 = type metadata accessor for InstantAnswerContentView(v9);
  v73 = v72 + *(int *)(v11 + 28);
  v74 = *(_QWORD *)v73;
  v75 = *(_QWORD *)(v73 + 8);
  v76 = *(_QWORD *)(v73 + 16);
  v77 = *(_QWORD *)(v73 + 24);
  v78 = *(_QWORD *)(v73 + 32);
  v79 = *(_QWORD *)(v73 + 40);
  v80 = *(_QWORD *)(v73 + 48);
  v81 = *(_QWORD *)(v73 + 56);
  v82 = *(_QWORD *)(v73 + 64);
  v83 = *(_QWORD *)(v73 + 72);
  v84 = *(_QWORD *)(v73 + 80);
  v85 = *(unsigned __int8 *)(v73 + 88);
  sub_10025B910(v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85 & 1);
  if ((v85 & 1) != 0)
  {
    v25 = v74;
    v26 = v75;
    v27 = v76;
    v28 = v77;
    v29 = v78;
    v30 = v79;
    v31 = v80;
    v21 = v80;
    v19 = v96;
    v96[0] = v74;
    v96[1] = v75;
    v96[2] = v76;
    v96[3] = v77;
    v96[4] = v78;
    v96[5] = v79;
    sub_10026E504();
    sub_10026E55C(v57, v19, v53);
    v20 = sub_100284888();
    sub_100253AA8((uint64_t)v53, v49, (uint64_t)v55);
    sub_10026DF80((uint64_t)v53);
    sub_10026DDC8(v55, v51);
    sub_100253AA8((uint64_t)v51, v49, (uint64_t)v53);
    sub_10026DF80((uint64_t)v51);
    v13 = sub_1002848F8();
    sub_10026117C((uint64_t)v53, v58, v49, v13, v20, (uint64_t)v69);
    sub_10026DF80((uint64_t)v53);
    sub_100284968(v69, v71);
    sub_10026DF80((uint64_t)v55);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v32 = v74;
    v33 = v75;
    v34 = v76;
    v35 = v77;
    v36 = v78;
    v37 = v79;
    v38 = v80;
    v39 = v81;
    v40 = v82;
    v41 = v83;
    v42 = v84;
    v24 = v84;
    v22 = v95;
    v95[0] = v74;
    v95[1] = v75;
    v95[2] = v76;
    v95[3] = v77;
    v95[4] = v78;
    v95[5] = v79;
    v95[6] = v80;
    v95[7] = v81;
    v95[8] = v82;
    v95[9] = v83;
    sub_100260D80();
    sub_100260DB0(v57, v22, v62);
    v23 = sub_1002848F8();
    sub_100253AA8((uint64_t)v62, v58, (uint64_t)v64);
    sub_100261BFC((uint64_t)v62);
    sub_1002618E0(v64, v60);
    sub_100253AA8((uint64_t)v60, v58, (uint64_t)v62);
    sub_100261BFC((uint64_t)v60);
    v12 = sub_100284888();
    sub_1002610B8((uint64_t)v62, v58, v49, v23, v12, (uint64_t)v69);
    sub_100261BFC((uint64_t)v62);
    sub_100284968(v69, v71);
    sub_100261BFC((uint64_t)v64);
    swift_bridgeObjectRelease(v24);
  }
  sub_100273BCC((uint64_t)v46);
  v16 = sub_100284118();
  sub_100253AA8((uint64_t)v46, v44, (uint64_t)v48);
  sub_100284BC4((uint64_t)v46);
  sub_100284E60(v71, v69);
  v18 = v89;
  v89[0] = v69;
  sub_100285274(v48, v46);
  v89[1] = v46;
  v17 = v88;
  v88[0] = v66;
  v88[1] = v44;
  v86 = sub_1002853BC();
  v87 = v16;
  sub_1002C9238((uint64_t)v18, 2uLL, (uint64_t)v17, v43);
  sub_100284BC4((uint64_t)v46);
  sub_100285448((uint64_t)v69);
  sub_100284BC4((uint64_t)v48);
  return sub_100285448((uint64_t)v71);
}

uint64_t sub_100276F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;

  v10 = 0;
  v1 = v0 + *(int *)(type metadata accessor for InstantAnswerButton(0) + 24);
  v5 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  sub_100279AF8(*(_QWORD *)v1, v4 & 1);
  sub_100279AF8(v5, v4 & 1);
  v7 = v5;
  v8 = v4 & 1;
  v2 = sub_10003A0C8(&qword_1005A6058);
  Environment.wrappedValue.getter(v2);
  sub_100279B28((uint64_t)&v7);
  v6 = v9;
  sub_100278CE4(v5, v4 & 1);
  return v6 & 1;
}

uint64_t sub_100277020@<X0>(uint64_t a1@<X8>)
{
  return sub_100274DA8(a1);
}

uint64_t sub_100277034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t OpaqueTypeConformance2;
  Swift::Double v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  __int16 v63;
  __int16 v64;
  _QWORD v65[4];
  uint64_t v66;
  _QWORD v67[4];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v37 = a1;
  v70 = 0;
  v69 = 0;
  v68 = 0;
  v44 = 0;
  v39 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for RoundedCornerStyle(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2 = __chkstk_darwin(0);
  v40 = (uint64_t)&v16 - v39;
  v41 = type metadata accessor for Capsule(v2);
  v42 = (*(_QWORD *)(*(_QWORD *)(v41 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3 = __chkstk_darwin(v44);
  v43 = (uint64_t)&v16 - v42;
  v45 = type metadata accessor for BorderedButtonStyle(v3);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = (*(_QWORD *)(v46 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4 = __chkstk_darwin(v44);
  v48 = (char *)&v16 - v47;
  v49 = type metadata accessor for InstantAnswerButton(v4);
  v50 = (*(_QWORD *)(*(_QWORD *)(v49 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v49);
  v51 = (uint64_t *)((char *)&v16 - v50);
  v52 = sub_10003A0C8(&qword_1005A6188);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = (*(_QWORD *)(v53 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v52);
  v55 = (char *)&v16 - v54;
  v56 = sub_10003A0C8(&qword_1005A6190);
  v57 = (*(_QWORD *)(*(_QWORD *)(v56 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v56);
  v58 = (uint64_t)&v16 - v57;
  v59 = sub_10003A0C8(&qword_1005A6198);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (*(_QWORD *)(v60 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  __chkstk_darwin(v59);
  v62 = (char *)&v16 - v61;
  v70 = v1;
  if ((sub_100276F64() & 1) != 0)
    v36 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  else
    v36 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v35 = Color.init(uiColor:)(v36);
  v69 = v35;
  if ((sub_100276F64() & 1) != 0)
    v34 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  else
    v34 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v5 = v38;
  v33 = Color.init(uiColor:)(v34);
  v68 = v33;
  v6 = (char *)v5 + *(int *)(v49 + 28);
  v25 = 48;
  v31 = *((_QWORD *)v6 + 6);
  v28 = *((_QWORD *)v6 + 7);
  swift_retain(v28);
  sub_10027E118(v5, v51);
  swift_retain(v35);
  swift_retain(v33);
  v32 = &v16;
  v7 = __chkstk_darwin(v33);
  v8 = v35;
  v9 = &v16 - 6;
  v29 = &v16 - 6;
  v9[2] = (uint64_t)v51;
  v9[3] = v8;
  v9[4] = v7;
  v30 = sub_10003A0C8(&qword_1005A61A0);
  v26 = sub_1001E7634(&qword_1005A61A8);
  v27 = sub_10027E3B4();
  v10 = sub_10027E520();
  v67[0] = v26;
  v67[1] = &unk_1005287C8;
  v67[2] = v27;
  v67[3] = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v67, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  Button.init(action:label:)(v31, v28, sub_10027E3A4, v29, v30, OpaqueTypeConformance2);
  sub_10027E58C((uint64_t)v51);
  swift_release();
  swift_release();
  if ((sub_100276F64() & 1) != 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v12 = Double.init(_:)(*(Swift::Double *)((char *)v38 + *(int *)(v49 + 32)));
    v23 = objc_msgSend(v22, "colorWithAlphaComponent:", v12);

    v24 = Color.init(uiColor:)(v23);
  }
  else
  {
    v24 = 0;
  }
  v17 = &v66;
  v66 = v24;
  v13 = sub_10027E6D8();
  View.tint<A>(_:)(v17, v52, &type metadata for Color, v13, &protocol witness table for Color);
  sub_1001F0F44(v17);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v55, v52);
  BorderedButtonStyle.init()(v14);
  v18 = sub_10027E748();
  v19 = sub_10027E844();
  View.buttonStyle<A>(_:)(v48, v56, v45, v18);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
  sub_10027E8B4(v58);
  sub_1002780D4(v40);
  Capsule.init(style:)(v40);
  v65[0] = v56;
  v65[1] = v45;
  v65[2] = v18;
  v65[3] = v19;
  v20 = swift_getOpaqueTypeConformance2(v65, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v21 = sub_10027E928();
  v64 = sub_100273584();
  v63 = v64 & 0x101;
  View.clipShape<A>(_:style:)(v43, v64 & 0x101, v59, v41, v20, v21);
  sub_10027E998(v43);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
  swift_release();
  return swift_release();
}

